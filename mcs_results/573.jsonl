{"selected_lines": [24, 32, 25, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 30, 26, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 28, 26, 27, 25, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.2417469024658203, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 24, 25, 27, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 25, 24, 26, 31, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 10000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data={'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.00020694732666015625, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [32, 24, 26, 27, 28, 30, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 25, 27, 24, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 24, 31, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 10, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.030906200408935547, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 32, 24, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.25058817863464355, "tests_passed": true, "error": null}}
{"selected_lines": [25, 28, 30, 26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 27, 25, 26, 32, 28, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 27, 26, 25, 31, 32, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': array1.mean(), 'Median': array1.median(), 'Standard Deviation': array1.std()})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 25, 31, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1.mean(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.011789083480834961, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [31, 26, 30, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0, fontsize=12)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 27, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 26, 24, 25, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 30, 28, 31, 32, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 24, 30, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 28, 30, 24, 31, 26, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [31, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(np.array([array1.mean(), array2.mean()]), index=[\"Array1\", \"Array2\"])\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': array1.mean(), 'Median': array1.median(), 'Standard Deviation': array1.std()})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.0001900196075439453, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [27, 30, 25, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 31, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 24, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.02909994125366211, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 26, 30, 27, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, array_length, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data={'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 25, 31, 26, 27, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-10,10,array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 26, 30, 27, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 24, 32, 31, 26, 27, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 26, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.014390945434570312, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [30, 26, 24, 32, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, array_length, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 26, 27, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': [np.mean(array1)], 'Array2': [np.mean(array2)]})\n        'Array1': np.mean(array1),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0, fontsize=12)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.014390945434570312, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [26, 25, 31, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 25, 28, 30, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': [np.mean(array1)], 'Array2': [np.mean(array2)]})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 28, 31, 26, 27, 24, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-10,10,array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 28, 24, 25, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 10000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 28, 24, 26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, array_length, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 25, 24, 30, 31, 26, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(np.array([array1.mean(), array2.mean()]), index=[\"Array1\", \"Array2\"])\n        'Array1': array1.mean(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2, 'Mean': (array1.mean(), array2.mean()), 'Median': (array1.median(), array2.median()), 'Standard Deviation': (array1.std(), array2.std())})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 30, 31, 32, 24, 25, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 32, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 26, 28, 25, 24, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 27, 28, 31, 30, 25, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1.mean(), 'Array1_median': array1.median(), 'Array1_std': array1.std(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 28, 32, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0, title=f'Statistics for arrays of length {array_length}')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 27, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 31, 27, 32, 28, 25, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 31, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 28, 24, 27, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': np.mean(array1),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 27, 26, 32, 25, 31, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.barh()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 24, 27, 26, 30, 28, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-10,10,array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.010743856430053711, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [24, 27, 25, 31, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': np.mean(array1),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.02878403663635254, "tests_passed": true, "error": null}}
{"selected_lines": [32, 26, 30, 25, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 27, 25, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.00019502639770507812, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [31, 25, 30, 28, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0, title=f'Statistics for arrays of length {array_length}')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 24, 31, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 31, 24, 26, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 28, 27, 30, 25, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.uniform(-10, 10, array_length).astype(np.int64)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 30, 31, 27, 28, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 32, 26, 24, 28, 31, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2, 'Mean': (array1.mean(), array2.mean()), 'Median': (array1.median(), array2.median()), 'Standard Deviation': (array1.std(), array2.std())})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar', rot=30)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [26, 30, 25, 28, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.barh()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 24, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-10,10,array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 32, 28, 31, 24, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 25, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.010743856430053711, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [32, 24, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 1, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 30, 25, 26, 27, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [25, 27, 30, 32, 24, 26, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 27, 28, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(dict(Mean=(np.mean(array1), np.mean(array2)), Median=(np.median(array1), np.median(array2)),\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 26, 24, 30, 27, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 24, 27, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 256, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 28, 32, 31, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 24, 25, 30, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 26, 27, 31, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 25, 32, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 256, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.010282039642333984, "tests_passed": true, "error": null}}
{"selected_lines": [30, 27, 25, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 30, 27, 31, 32, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, array_length, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 26, 30, 24, 25, 32, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(dict(Mean=(np.mean(array1), np.mean(array2)), Median=(np.median(array1), np.median(array2)),\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 32, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 31, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-10,10,array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1.mean(), 'Array1_median': array1.median(), 'Array1_std': array1.std(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.barh()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 27, 25, 31, 30, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 24, 30, 31, 28, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.2417469024658203, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return (df, ax)", "compilation_passed": true, "time": 0.28807973861694336, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 27, 25, 24, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1.mean(), 'Array1_median': array1.median(), 'Array1_std': array1.std(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 28, 25, 24, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 10, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [30, 25, 24, 28, 31, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.012521982192993164, "tests_passed": true, "error": null}}
{"selected_lines": [24, 30, 28, 31, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 24, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 10000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 32, 25, 28, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 10000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.030028104782104492, "tests_passed": true, "error": null}}
{"selected_lines": [28, 25, 27, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 28, 32, 26, 27, 31, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [31, 26, 24, 28, 25, 30, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 31, 26, 32, 28, 30, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.010091066360473633, "tests_passed": true, "error": null}}
{"selected_lines": [30, 27, 25, 24, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, array_length, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1.mean(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.010560989379882812, "tests_passed": true, "error": null}}
{"selected_lines": [24, 30, 31, 25, 28, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-10,10,array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 31, 25, 27, 24, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.uniform(-5, 5, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 28, 27, 25, 30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data=[array1.mean(), np.median(array1), array1.std(),\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 30, 25, 26, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 256, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(np.array([array1.mean(), array2.mean()]), index=[\"Array1\", \"Array2\"])\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.010130167007446289, "tests_passed": true, "error": null}}
{"selected_lines": [25, 24, 26, 31, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 26, 28, 27, 24, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data=[array1.mean(), np.median(array1), array1.std(),\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 25, 26, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0, fontsize=12)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 32, 30, 27, 26, 31, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 31, 32, 26, 25, 28, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 26, 31, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.uniform(-10, 10, array_length).astype(np.int64)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data={'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar', rot=30)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 26, 28, 24, 32, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.uniform(-10, 10, array_length).astype(np.int64)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 24, 31, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 25, 24, 31, 26, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, array_length, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 25, 30, 26, 27, 32, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.19965600967407227, "tests_passed": true, "error": null}}
{"selected_lines": [30, 26, 32, 24, 25, 27, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 25, 28, 32, 30, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data={'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 24, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.01064610481262207, "tests_passed": true, "error": null}}
{"selected_lines": [32, 25, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return (df, ax)", "compilation_passed": true, "time": 0.010039091110229492, "tests_passed": true, "error": null}}
{"selected_lines": [30, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 28, 26, 25, 30, 24, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.uniform(-10, 10, array_length).astype(np.int64)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.014390945434570312, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.19965600967407227, "tests_passed": true, "error": null}}
{"selected_lines": [31, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.03848695755004883, "tests_passed": true, "error": null}}
{"selected_lines": [30, 25, 27, 26, 28, 31, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 24, 31, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.010098934173583984, "tests_passed": true, "error": null}}
{"selected_lines": [26, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.010743856430053711, "tests_passed": true, "error": null}}
{"selected_lines": [28, 25, 32, 27, 31, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-10,10,array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 24, 28, 25, 26, 31, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return (df, ax)", "compilation_passed": true, "time": 0.010566949844360352, "tests_passed": true, "error": null}}
{"selected_lines": [27, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.010743856430053711, "tests_passed": true, "error": null}}
{"selected_lines": [24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.1910851001739502, "tests_passed": true, "error": null}}
{"selected_lines": [30, 24, 28, 27, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 27, 32, 24, 25, 28, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1.mean(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data=[array1.mean(), np.median(array1), array1.std(),\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.000247955322265625, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [26, 30, 25, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': np.mean(array1),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 27, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.barh()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 26, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 28, 31, 32, 26, 27, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data={'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 30, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 31, 24, 32, 28, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.010097026824951172, "tests_passed": true, "error": null}}
{"selected_lines": [24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 1, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.20185184478759766, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 26, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data=[array1.mean(), np.median(array1), array1.std(),\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 30, 26, 28, 24, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2, 'Mean': (array1.mean(), array2.mean()), 'Median': (array1.median(), array2.median()), 'Standard Deviation': (array1.std(), array2.std())})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 24, 32, 31, 27, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 32, 26, 24, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(dict(Mean=(np.mean(array1), np.mean(array2)), Median=(np.median(array1), np.median(array2)),\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 26, 32, 24, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 10, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data={'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 30, 32, 24, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 27, 26, 30, 25, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 24, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.014390945434570312, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [26, 24, 28, 31, 27, 25, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 27, 25, 28, 26, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 32, 31, 26, 27, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 27, 30, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-10,10,array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 25, 30, 28, 31, 32, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.010743856430053711, "tests_passed": true, "error": null}}
{"selected_lines": [26, 25, 31, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data={'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.00020694732666015625, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.2417469024658203, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.2417469024658203, "tests_passed": true, "error": null}}
{"selected_lines": [31, 24, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.03179597854614258, "tests_passed": true, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.00019502639770507812, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [31, 24, 28, 26, 32, 30, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 256, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0, fontsize=12)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 27, 28, 26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': [np.mean(array1)], 'Array2': [np.mean(array2)]})\n        'Array1': array1.mean(), 'Array1_median': array1.median(), 'Array1_std': array1.std(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 31, 32, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0, fontsize=12)\n    return df, ax", "compilation_passed": true, "time": 0.013049125671386719, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return (df, ax)", "compilation_passed": true, "time": 0.010270118713378906, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 26, 24, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 1, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 27, 28, 32, 30, 25, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 10, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 25, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 31, 26, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 28, 26, 25, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 26, 25, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 27, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [31, 25, 28, 26, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(np.array([array1.mean(), array2.mean()]), index=[\"Array1\", \"Array2\"])\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 31, 26, 27, 30, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 30, 24, 25, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.010751962661743164, "tests_passed": true, "error": null}}
{"selected_lines": [31, 30, 32, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.00019502639770507812, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [32, 24, 28, 25, 31, 27, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 31, 32, 27, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.uniform(-5, 5, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 26, 27, 30, 32, 28, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 32, 30, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 25, 27, 26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 256, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 24, 28, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 24, 32, 31, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 31, 25, 32, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 30, 25, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.010091066360473633, "tests_passed": true, "error": null}}
{"selected_lines": [24, 28, 32, 25, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 10, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': [np.mean(array1)], 'Array2': [np.mean(array2)]})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.010743856430053711, "tests_passed": true, "error": null}}
{"selected_lines": [26, 24, 30, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(np.array([array1.mean(), array2.mean()]), index=[\"Array1\", \"Array2\"])\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [27, 30, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(np.array([array1.mean(), array2.mean()]), index=[\"Array1\", \"Array2\"])\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 24, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 31, 24, 25, 32, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 10000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 28, 25, 31, 24, 26, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.uniform(-5, 5, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(np.array([array1.mean(), array2.mean()]), index=[\"Array1\", \"Array2\"])\n        'Array1': array1.mean(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar', rot=30)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 25, 30, 28, 24, 32, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [27, 28, 26, 30, 25, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(dict(Mean=(np.mean(array1), np.mean(array2)), Median=(np.median(array1), np.median(array2)),\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, array_length, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 17.689226865768433, "tests_passed": true, "error": null}}
{"selected_lines": [26, 32, 30, 27, 24, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar', rot=30)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [24, 32, 26, 30, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': array1.mean(), 'Median': array1.median(), 'Standard Deviation': array1.std()})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 27, 24, 26, 28, 31, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-10,10,array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.07504010200500488, "tests_passed": true, "error": null}}
{"selected_lines": [31, 25, 26, 24, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.0002827644348144531, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [28, 26, 31, 30, 25, 24, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 27, 24, 28, 26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.20025205612182617, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.2417469024658203, "tests_passed": true, "error": null}}
{"selected_lines": [24, 28, 30, 25, 26, 27, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 27, 30, 31, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0, title=f'Statistics for arrays of length {array_length}')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 27, 31, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 24, 30, 32, 26, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 30, 28, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 24, 28, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.012217283248901367, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.012413263320922852, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.2417469024658203, "tests_passed": true, "error": null}}
{"selected_lines": [26, 24, 30, 28, 25, 31, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 10000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 27, 32, 26, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 256, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 27, 32, 30, 28, 31, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 26, 24, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 25, 24, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 30, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 31, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.barh()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 26, 30, 27, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 31, 30, 27, 28, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': array1.mean(), 'Median': array1.median(), 'Standard Deviation': array1.std()})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 27, 32, 28, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.2417469024658203, "tests_passed": true, "error": null}}
{"selected_lines": [31, 24, 30, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 256, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.00027489662170410156, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [25, 24, 32, 26, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, array_length, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 25, 24, 31, 32, 28, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 27, 24, 30, 25, 28, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [26, 24, 31, 30, 27, 28, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(dict(Mean=(np.mean(array1), np.mean(array2)), Median=(np.median(array1), np.median(array2)),\n        'Array1': array1.mean(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 32, 27, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1.mean(), 'Array1_median': array1.median(), 'Array1_std': array1.std(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 31, 30, 26, 24, 25, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.2417469024658203, "tests_passed": true, "error": null}}
{"selected_lines": [24, 32, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 26, 28, 30, 31, 27, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 24, 32, 26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.00016999244689941406, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [25, 24, 26, 31, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(dict(Mean=(np.mean(array1), np.mean(array2)), Median=(np.median(array1), np.median(array2)),\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 31, 30, 27, 24, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 26, 28, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.010743856430053711, "tests_passed": true, "error": null}}
{"selected_lines": [25, 26, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 32, 27, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 26, 27, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data=[array1.mean(), np.median(array1), array1.std(),\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [26, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.00016999244689941406, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.014390945434570312, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [31, 30, 32, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar', rot=30)\n    return df, ax", "compilation_passed": true, "time": 0.011023759841918945, "tests_passed": true, "error": null}}
{"selected_lines": [25, 31, 24, 30, 32, 27, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.barh()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 31, 27, 26, 32, 25, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 24, 31, 27, 25, 30, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar', rot=30)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30, 27, 26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2, 'Mean': (array1.mean(), array2.mean()), 'Median': (array1.median(), array2.median()), 'Standard Deviation': (array1.std(), array2.std())})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 24, 32, 25, 31, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 27, 31, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.19655299186706543, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 27, 32, 25, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1.mean(), 'Array1_median': array1.median(), 'Array1_std': array1.std(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 256, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.011960029602050781, "tests_passed": true, "error": null}}
{"selected_lines": [25, 27, 30, 24, 31, 28, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 25, 27, 24, 28, 26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0, fontsize=12)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 25, 31, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 27, 32, 28, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 26, 32, 24, 27, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 30, 28, 24, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 256, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': [np.mean(array1)], 'Array2': [np.mean(array2)]})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.00019502639770507812, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [32, 28, 31, 24, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.1932849884033203, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 24, 25, 27, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data=[array1.mean(), np.median(array1), array1.std(),\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.000247955322265625, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [28, 30, 26, 32, 27, 24, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 26, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 30, 25, 26, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2, 'Mean': (array1.mean(), array2.mean()), 'Median': (array1.median(), array2.median()), 'Standard Deviation': (array1.std(), array2.std())})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 26, 28, 25, 30, 31, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 28, 27, 25, 30, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 32, 26, 30, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 25, 31, 24, 32, 28, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 1, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 28, 26, 24, 25, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar', rot=30)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 25, 27, 24, 30, 31, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data=[array1.mean(), np.median(array1), array1.std(),\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 31, 32, 30, 28, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.011009931564331055, "tests_passed": true, "error": null}}
{"selected_lines": [27, 26, 24, 25, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.2417469024658203, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30, 31, 27, 32, 25, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': np.mean(array1),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 26, 30, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': [np.mean(array1)], 'Array2': [np.mean(array2)]})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 24, 31, 32, 27, 28, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 28, 30, 26, 27, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 31, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar', rot=30)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 31, 25, 28, 30, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1.mean(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.010863065719604492, "tests_passed": true, "error": null}}
{"selected_lines": [32, 24, 30, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.011187076568603516, "tests_passed": true, "error": null}}
{"selected_lines": [32, 24, 27, 26, 28, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 25, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.030507802963256836, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.2417469024658203, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 31, 26, 25, 32, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 26, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 32, 27, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 24, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 10000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.010939836502075195, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.2417469024658203, "tests_passed": true, "error": null}}
{"selected_lines": [27, 24, 28, 25, 32, 26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 10, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 32, 28, 30, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2, 'Mean': (array1.mean(), array2.mean()), 'Median': (array1.median(), array2.median()), 'Standard Deviation': (array1.std(), array2.std())})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [25, 27, 26, 28, 32, 30, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 10000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 24, 30, 27, 28, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 27, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, array_length, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.010743856430053711, "tests_passed": true, "error": null}}
{"selected_lines": [32, 27, 26, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(dict(Mean=(np.mean(array1), np.mean(array2)), Median=(np.median(array1), np.median(array2)),\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.010575056076049805, "tests_passed": true, "error": null}}
{"selected_lines": [24, 28, 32, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 25, 24, 28, 30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.uniform(-5, 5, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data={'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 24, 32, 25, 26, 30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 24, 32, 27, 28, 25, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 1, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.20185184478759766, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 30, 25, 26, 32, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, array_length, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 26, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 24, 31, 25, 28, 27, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.010091066360473633, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 28, 24, 25, 31, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1.mean(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return (df, ax)", "compilation_passed": true, "time": 0.010348081588745117, "tests_passed": true, "error": null}}
{"selected_lines": [28, 30, 25, 31, 27, 24, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 24, 30, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.011187076568603516, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 24, 28, 31, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 26, 28, 27, 32, 31, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 26, 28, 32, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.2417469024658203, "tests_passed": true, "error": null}}
{"selected_lines": [27, 25, 24, 30, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 27, 28, 31, 26, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1.mean(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 31, 25, 27, 26, 30, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data={'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 27, 25, 24, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.2417469024658203, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 31, 26, 25, 24, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 24, 28, 25, 26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 10, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 27, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.010743856430053711, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [32, 30, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 28, 25, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 27, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(np.array([array1.mean(), array2.mean()]), index=[\"Array1\", \"Array2\"])\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 25, 28, 26, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 256, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 24, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.03171205520629883, "tests_passed": true, "error": null}}
{"selected_lines": [31, 27, 26, 25, 32, 24, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 27, 24, 28, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 256, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 31, 30, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 10000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [31, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(np.array([array1.mean(), array2.mean()]), index=[\"Array1\", \"Array2\"])\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar', rot=30)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 27, 31, 30, 28, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 27, 30, 31, 32, 24, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 26, 24, 25, 31, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0, title=f'Statistics for arrays of length {array_length}')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 25, 31, 30, 24, 26, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1.mean(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 24, 30, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.010743856430053711, "tests_passed": true, "error": null}}
{"selected_lines": [31, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 25, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.030507802963256836, "tests_passed": true, "error": null}}
{"selected_lines": [31, 27, 32, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0, title=f'Statistics for arrays of length {array_length}')\n    return df, ax", "compilation_passed": true, "time": 0.2580888271331787, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 27, 28, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar', rot=30)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 25, 26, 31, 32, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 26, 24, 31, 32, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': array1.mean(), 'Median': array1.median(), 'Standard Deviation': array1.std()})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.0001900196075439453, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.014390945434570312, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.25058817863464355, "tests_passed": true, "error": null}}
{"selected_lines": [32, 25, 26, 28, 24, 27, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 25, 24, 30, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 10000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 26, 30, 32, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 27, 32, 25, 31, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2, 'Mean': (array1.mean(), array2.mean()), 'Median': (array1.median(), array2.median()), 'Standard Deviation': (array1.std(), array2.std())})\n        'Array1': array1.mean(), 'Array1_median': array1.median(), 'Array1_std': array1.std(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 24, 30, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.011187076568603516, "tests_passed": true, "error": null}}
{"selected_lines": [31, 25, 28, 26, 30, 24, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 27, 32, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 30, 27, 24, 32, 26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.uniform(-5, 5, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 30, 24, 26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 32, 25, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 24, 26, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 26, 27, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.014390945434570312, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [31, 28, 25, 27, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 31, 27, 30, 28, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 1, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 32, 24, 31, 26, 27, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': [np.mean(array1)], 'Array2': [np.mean(array2)]})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 24, 25, 26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [25, 32, 30, 26, 27, 24, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2, 'Mean': (array1.mean(), array2.mean()), 'Median': (array1.median(), array2.median()), 'Standard Deviation': (array1.std(), array2.std())})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 24, 26, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 1, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 30, 31, 32, 28, 25, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': [np.mean(array1)], 'Array2': [np.mean(array2)]})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [24, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 10000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1.mean(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.19773483276367188, "tests_passed": true, "error": null}}
{"selected_lines": [24, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-10,10,array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.010432958602905273, "tests_passed": true, "error": null}}
{"selected_lines": [24, 30, 26, 25, 31, 28, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.010252952575683594, "tests_passed": true, "error": null}}
{"selected_lines": [30, 24, 25, 27, 26, 32, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.014390945434570312, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.00019502639770507812, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [28, 31, 25, 27, 26, 32, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [24, 25, 27, 31, 32, 28, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 27, 26, 30, 24, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 24, 31, 27, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 256, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 24, 31, 25, 32, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, array_length, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data=[array1.mean(), np.median(array1), array1.std(),\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [24, 28, 25, 31, 27, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': array1.mean(), 'Median': array1.median(), 'Standard Deviation': array1.std()})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 28, 27, 24, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data={'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.00020694732666015625, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [32, 24, 31, 26, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 1, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 26, 25, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 24, 28, 30, 25, 32, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 30, 28, 25, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 32, 31, 30, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 31, 32, 24, 30, 27, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2, 'Mean': (array1.mean(), array2.mean()), 'Median': (array1.median(), array2.median()), 'Standard Deviation': (array1.std(), array2.std())})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 26, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': array1.mean(), 'Median': array1.median(), 'Standard Deviation': array1.std()})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 27, 25, 31, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 32, 28, 30, 31, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 28, 30, 27, 25, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': array1.mean(), 'Median': array1.median(), 'Standard Deviation': array1.std()})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.010252952575683594, "tests_passed": true, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.014390945434570312, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [25, 24, 31, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.010098934173583984, "tests_passed": true, "error": null}}
{"selected_lines": [31, 24, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 24, 26, 32, 31, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.uniform(-10, 10, array_length).astype(np.int64)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(dict(Mean=(np.mean(array1), np.mean(array2)), Median=(np.median(array1), np.median(array2)),\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 30, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 24, 27, 30, 28, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 10, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 25, 26, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 26, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 256, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 26, 24, 28, 32, 31, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 28, 30, 27, 24, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 24, 31, 30, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.030122995376586914, "tests_passed": true, "error": null}}
{"selected_lines": [27, 25, 31, 32, 26, 28, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.010575056076049805, "tests_passed": true, "error": null}}
{"selected_lines": [25, 30, 26, 31, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(dict(Mean=(np.mean(array1), np.mean(array2)), Median=(np.median(array1), np.median(array2)),\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar', rot=30)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 28, 30, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.uniform(-10, 10, array_length).astype(np.int64)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(np.array([array1.mean(), array2.mean()]), index=[\"Array1\", \"Array2\"])\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 27, 28, 25, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.00016999244689941406, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [31, 27, 30, 32, 26, 25, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': np.mean(array1),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 26, 31, 25, 32, 30, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 27, 31, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': np.mean(array1),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 27, 25, 28, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1.mean(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 24, 27, 25, 28, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(dict(Mean=(np.mean(array1), np.mean(array2)), Median=(np.median(array1), np.median(array2)),\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0, title=f'Statistics for arrays of length {array_length}')\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.014390945434570312, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [31, 28, 27, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 27, 24, 30, 25, 32, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 32, 24, 25, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.uniform(-5, 5, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 28, 32, 24, 25, 26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': array1.mean(), 'Median': array1.median(), 'Standard Deviation': array1.std()})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 27, 30, 25, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 28, 26, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 30, 28, 24, 27, 32, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 26, 31, 28, 30, 24, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 25, 28, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2, 'Mean': (array1.mean(), array2.mean()), 'Median': (array1.median(), array2.median()), 'Standard Deviation': (array1.std(), array2.std())})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 32, 27, 24, 26, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 25, 24, 26, 31, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2, 'Mean': (array1.mean(), array2.mean()), 'Median': (array1.median(), array2.median()), 'Standard Deviation': (array1.std(), array2.std())})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 27, 28, 24, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-10,10,array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 32, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data=[array1.mean(), np.median(array1), array1.std(),\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 24, 27, 30, 25, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data=[array1.mean(), np.median(array1), array1.std(),\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 27, 24, 26, 28, 32, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 26, 24, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 26, 24, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 32, 30, 31, 27, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 27, 25, 30, 24, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.014390945434570312, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [27, 32, 26, 30, 31, 24, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 26, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 27, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 27, 26, 24, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 24, 32, 28, 31, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 25, 31, 26, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data=[array1.mean(), np.median(array1), array1.std(),\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 25, 27, 31, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 25, 24, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.010425090789794922, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [27, 26, 25, 30, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.010575056076049805, "tests_passed": true, "error": null}}
{"selected_lines": [24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.1910851001739502, "tests_passed": true, "error": null}}
{"selected_lines": [24, 32, 28, 25, 31, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': array1.mean(), 'Median': array1.median(), 'Standard Deviation': array1.std()})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 25, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.030507802963256836, "tests_passed": true, "error": null}}
{"selected_lines": [31, 27, 25, 24, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.010743856430053711, "tests_passed": true, "error": null}}
{"selected_lines": [31, 25, 27, 28, 32, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 32, 26, 25, 28, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data=[array1.mean(), np.median(array1), array1.std(),\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 28, 31, 24, 32, 26, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 32, 25, 30, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 24, 25, 28, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 25, 27, 30, 31, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 27, 25, 31, 26, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': array1.mean(), 'Median': array1.median(), 'Standard Deviation': array1.std()})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 26, 24, 30, 25, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 28, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data=[array1.mean(), np.median(array1), array1.std(),\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 25, 26, 32, 30, 28, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 26, 32, 27, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 32, 27, 30, 26, 24, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24814105033874512, "tests_passed": true, "error": null}}
{"selected_lines": [32, 27, 24, 26, 25, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 30, 26, 28, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 26, 28, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.010091066360473633, "tests_passed": true, "error": null}}
{"selected_lines": [32, 27, 26, 31, 25, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 31, 28, 30, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 24, 25, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 1, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 27, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 24, 31, 30, 32, 27, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, array_length, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(np.array([array1.mean(), array2.mean()]), index=[\"Array1\", \"Array2\"])\n        'Array1': array1.mean(), 'Array1_median': array1.median(), 'Array1_std': array1.std(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 24, 26, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 256, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 25, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 31, 24, 25, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0, title=f'Statistics for arrays of length {array_length}')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 25, 31, 30, 24, 26, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar', rot=30)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 32, 27, 31, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.010743856430053711, "tests_passed": true, "error": null}}
{"selected_lines": [27, 24, 32, 26, 31, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1.mean(), 'Array1_median': array1.median(), 'Array1_std': array1.std(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 24, 28, 31, 32, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 31, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 28, 26, 24, 31, 27, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 31, 28, 25, 30, 27, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 26, 25, 30, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 25, 27, 24, 30, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.010091066360473633, "tests_passed": true, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': np.mean(array1),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.1938629150390625, "tests_passed": true, "error": null}}
{"selected_lines": [25, 31, 32, 26, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 1, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': [np.mean(array1)], 'Array2': [np.mean(array2)]})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 31, 25, 27, 28, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 26, 30, 25, 24, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.010743856430053711, "tests_passed": true, "error": null}}
{"selected_lines": [27, 32, 26, 31, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 10000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': [np.mean(array1)], 'Array2': [np.mean(array2)]})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0, title=f'Statistics for arrays of length {array_length}')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 27, 25, 32, 31, 30, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1.mean(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0, title=f'Statistics for arrays of length {array_length}')\n    return df, ax", "compilation_passed": true, "time": 0.029728174209594727, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 27, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': np.mean(array1),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.02993178367614746, "tests_passed": true, "error": null}}
{"selected_lines": [31, 27, 28, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 31, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.barh()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 28, 26, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2, 'Mean': (array1.mean(), array2.mean()), 'Median': (array1.median(), array2.median()), 'Standard Deviation': (array1.std(), array2.std())})\n        'Array1': array1.mean(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.014390945434570312, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [31, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 30, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 27, 32, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 32, 30, 26, 25, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 10000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 31, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 28, 31, 25, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(dict(Mean=(np.mean(array1), np.mean(array2)), Median=(np.median(array1), np.median(array2)),\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 25, 26, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [24, 27, 28, 25, 32, 26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 24, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 27, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data={'Array1': array1, 'Array2': array2})\n        'Array1': array1.mean(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 25, 24, 28, 31, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.012521982192993164, "tests_passed": true, "error": null}}
{"selected_lines": [32, 25, 30, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 24, 31, 26, 27, 25, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 27, 30, 26, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': array1.mean(), 'Median': array1.median(), 'Standard Deviation': array1.std()})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 31, 24, 25, 30, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-10,10,array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 26, 30, 24, 28, 32, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 25, 24, 28, 30, 27, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 26, 31, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.014390945434570312, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [30, 27, 25, 24, 26, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 28, 31, 27, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': np.mean(array1),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0, title=f'Statistics for arrays of length {array_length}')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.2417469024658203, "tests_passed": true, "error": null}}
{"selected_lines": [27, 28, 31, 24, 26, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 28, 25, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-10,10,array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 26, 24, 25, 30, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-10,10,array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1.mean(), 'Array1_median': array1.median(), 'Array1_std': array1.std(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 26, 31, 32, 27, 25, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, array_length, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.00016999244689941406, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.00018095970153808594, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [26, 27, 31, 24, 28, 25, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(np.array([array1.mean(), array2.mean()]), index=[\"Array1\", \"Array2\"])\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.2417469024658203, "tests_passed": true, "error": null}}
{"selected_lines": [27, 32, 24, 28, 31, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.uniform(-10, 10, array_length).astype(np.int64)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 25, 24, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 31, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.010359048843383789, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 24, 28, 26, 30, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(np.array([array1.mean(), array2.mean()]), index=[\"Array1\", \"Array2\"])\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 24, 27, 32, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 31, 27, 28, 30, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data={'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 25, 28, 30, 26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2, 'Mean': (array1.mean(), array2.mean()), 'Median': (array1.median(), array2.median()), 'Standard Deviation': (array1.std(), array2.std())})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 28, 25, 31, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-10,10,array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.20015883445739746, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0, fontsize=12)\n    return df, ax", "compilation_passed": true, "time": 0.27225685119628906, "tests_passed": true, "error": null}}
{"selected_lines": [28, 26, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(dict(Mean=(np.mean(array1), np.mean(array2)), Median=(np.median(array1), np.median(array2)),\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 30, 31, 28, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 25, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 30, 27, 25, 31, 32, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [30, 24, 25, 31, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.014390945434570312, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [25, 27, 26, 32, 28, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 32, 27, 26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data={'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': [np.mean(array1)], 'Array2': [np.mean(array2)]})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 24, 25, 31, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 1, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 25, 26, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 27, 25, 24, 31, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 26, 32, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2, 'Mean': (array1.mean(), array2.mean()), 'Median': (array1.median(), array2.median()), 'Standard Deviation': (array1.std(), array2.std())})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.20015883445739746, "tests_passed": true, "error": null}}
{"selected_lines": [30, 32, 24, 27, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data=[array1.mean(), np.median(array1), array1.std(),\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 28, 32, 24, 27, 25, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': array1.mean(), 'Median': array1.median(), 'Standard Deviation': array1.std()})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 26, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 27, 31, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 28, 31, 25, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [26, 27, 28, 25, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': [np.mean(array1)], 'Array2': [np.mean(array2)]})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.010091066360473633, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 24, 26, 32, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0, title=f'Statistics for arrays of length {array_length}')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 27, 30, 32, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.barh()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, array_length, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.19585108757019043, "tests_passed": true, "error": null}}
{"selected_lines": [30, 25, 27, 26, 28, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(dict(Mean=(np.mean(array1), np.mean(array2)), Median=(np.median(array1), np.median(array2)),\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 25, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.00027489662170410156, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [31, 25, 32, 30, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 24, 26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 10000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 27, 32, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-10,10,array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 27, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 28, 24, 26, 25, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(dict(Mean=(np.mean(array1), np.mean(array2)), Median=(np.median(array1), np.median(array2)),\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 24, 31, 27, 25, 32, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.uniform(-10, 10, array_length).astype(np.int64)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 24, 27, 30, 25, 26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': array1.mean(), 'Median': array1.median(), 'Standard Deviation': array1.std()})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 24, 28, 26, 31, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 26, 31, 27, 25, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 31, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0, title=f'Statistics for arrays of length {array_length}')\n    return df, ax", "compilation_passed": true, "time": 0.2580888271331787, "tests_passed": true, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(dict(Mean=(np.mean(array1), np.mean(array2)), Median=(np.median(array1), np.median(array2)),\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.00017118453979492188, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32, 24, 28, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, array_length, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 24, 31, 26, 25, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 25, 27, 32, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 30, 31, 28, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.barh()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.1944870948791504, "tests_passed": true, "error": null}}
{"selected_lines": [32, 25, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return (df, ax)", "compilation_passed": true, "time": 0.010039091110229492, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [24, 26, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': array1.mean(), 'Median': array1.median(), 'Standard Deviation': array1.std()})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [31, 27, 30, 26, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 32, 31, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 24, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': np.mean(array1),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.010320901870727539, "tests_passed": true, "error": null}}
{"selected_lines": [26, 27, 28, 31, 24, 30, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 25, 30, 32, 28, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 24, 31, 32, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.uniform(-5, 5, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.01081395149230957, "tests_passed": true, "error": null}}
{"selected_lines": [27, 26, 28, 31, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 26, 28, 24, 31, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 10000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0, title=f'Statistics for arrays of length {array_length}')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 24, 26, 31, 27, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data={'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.2417469024658203, "tests_passed": true, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.00019502639770507812, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [31, 24, 27, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 25, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-10,10,array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.02942800521850586, "tests_passed": true, "error": null}}
{"selected_lines": [31, 27, 30, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 26, 25, 28, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 24, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return (df, ax)", "compilation_passed": true, "time": 0.029360055923461914, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 32, 26, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 30, 27, 28, 31, 25, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 26, 31, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 25, 27, 28, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 26, 25, 32, 27, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, array_length, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 32, 30, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 10, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 24, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 1, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24605178833007812, "tests_passed": true, "error": null}}
{"selected_lines": [30, 25, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(np.array([array1.mean(), array2.mean()]), index=[\"Array1\", \"Array2\"])\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 27, 24, 30, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': np.mean(array1),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 28, 25, 27, 30, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 27, 26, 25, 24, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(dict(Mean=(np.mean(array1), np.mean(array2)), Median=(np.median(array1), np.median(array2)),\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 32, 24, 26, 25, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 26, 30, 28, 32, 27, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 27, 25, 24, 26, 30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 24, 25, 28, 31, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 31, 24, 26, 30, 28, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar', rot=30)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(np.array([array1.mean(), array2.mean()]), index=[\"Array1\", \"Array2\"])\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.0002448558807373047, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.00018095970153808594, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.uniform(-10, 10, array_length).astype(np.int64)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.191680908203125, "tests_passed": true, "error": null}}
{"selected_lines": [25, 30, 27, 24, 26, 28, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 256, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 32, 25, 24, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.02918100357055664, "tests_passed": true, "error": null}}
{"selected_lines": [27, 30, 32, 31, 25, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data=[array1.mean(), np.median(array1), array1.std(),\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 28, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 24, 28, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.029834985733032227, "tests_passed": true, "error": null}}
{"selected_lines": [26, 32, 24, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 27, 31, 25, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.barh()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 31, 27, 30, 25, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2, 'Mean': (array1.mean(), array2.mean()), 'Median': (array1.median(), array2.median()), 'Standard Deviation': (array1.std(), array2.std())})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 32, 26, 24, 31, 27, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data=[array1.mean(), np.median(array1), array1.std(),\n        'Array1': array1.mean(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 32, 30, 28, 25, 27, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0, fontsize=12)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 26, 27, 31, 32, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 28, 24, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data=[array1.mean(), np.median(array1), array1.std(),\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 26, 32, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 10, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [25, 26, 24, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.00027489662170410156, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [27, 32, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.00014591217041015625, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [30, 25, 24, 27, 26, 32, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(np.array([array1.mean(), array2.mean()]), index=[\"Array1\", \"Array2\"])\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 27, 24, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': [np.mean(array1)], 'Array2': [np.mean(array2)]})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.00015306472778320312, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(dict(Mean=(np.mean(array1), np.mean(array2)), Median=(np.median(array1), np.median(array2)),\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.00017118453979492188, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32, 28, 24, 26, 25, 30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 27, 30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 26, 28, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 32, 28, 27, 26, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.0002827644348144531, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [32, 28, 25, 24, 27, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.barh()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.010743856430053711, "tests_passed": true, "error": null}}
{"selected_lines": [27, 26, 31, 24, 25, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 24, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.03179597854614258, "tests_passed": true, "error": null}}
{"selected_lines": [26, 27, 32, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': np.mean(array1),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 26, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 27, 28, 24, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 27, 30, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1.mean(), 'Array1_median': array1.median(), 'Array1_std': array1.std(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 26, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 25, 30, 28, 32, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 31, 32, 27, 30, 28, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 25, 31, 27, 32, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.uniform(-5, 5, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return (df, ax)", "compilation_passed": true, "time": 0.28807973861694336, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [27, 31, 26, 25, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data=[array1.mean(), np.median(array1), array1.std(),\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 32, 30, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.014390945434570312, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.2417469024658203, "tests_passed": true, "error": null}}
{"selected_lines": [30, 26, 24, 32, 27, 28, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.barh()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 32, 30, 26, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 30, 28, 31, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 31, 32, 30, 26, 24, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar', rot=30)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 28, 32, 26, 31, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 24, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.029386043548583984, "tests_passed": true, "error": null}}
{"selected_lines": [26, 28, 24, 27, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': np.mean(array1),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 26, 30, 24, 25, 28, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.2417469024658203, "tests_passed": true, "error": null}}
{"selected_lines": [26, 32, 30, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 30, 24, 27, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.00019502639770507812, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [31, 26, 24, 27, 25, 30, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1.mean(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [27, 26, 24, 30, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 10000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(dict(Mean=(np.mean(array1), np.mean(array2)), Median=(np.median(array1), np.median(array2)),\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.014390945434570312, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [24, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.uniform(-5, 5, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.029898881912231445, "tests_passed": true, "error": null}}
{"selected_lines": [30, 31, 27, 28, 26, 25, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 27, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1.mean(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.029191970825195312, "tests_passed": true, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.014390945434570312, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data=[array1.mean(), np.median(array1), array1.std(),\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.000247955322265625, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [25, 30, 31, 28, 27, 26, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': np.mean(array1),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 26, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 256, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(np.array([array1.mean(), array2.mean()]), index=[\"Array1\", \"Array2\"])\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 26, 30, 32, 28, 24, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data=[array1.mean(), np.median(array1), array1.std(),\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 27, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.barh()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 27, 32, 28, 26, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1.mean(), 'Array1_median': array1.median(), 'Array1_std': array1.std(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 27, 24, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 25, 28, 31, 24, 30, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, array_length, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar', rot=30)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [24, 28, 32, 27, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-10,10,array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.19437098503112793, "tests_passed": true, "error": null}}
{"selected_lines": [26, 28, 31, 24, 25, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(dict(Mean=(np.mean(array1), np.mean(array2)), Median=(np.median(array1), np.median(array2)),\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 256, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.19434118270874023, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 26, 25, 24, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 24, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, array_length, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.014390945434570312, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [31, 32, 26, 24, 28, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 26, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.014390945434570312, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [24, 27, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 27, 28, 25, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 31, 26, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 26, 27, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1.mean(), 'Array1_median': array1.median(), 'Array1_std': array1.std(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 26, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(np.array([array1.mean(), array2.mean()]), index=[\"Array1\", \"Array2\"])\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.010743856430053711, "tests_passed": true, "error": null}}
{"selected_lines": [28, 27, 24, 32, 26, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 24, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.02988910675048828, "tests_passed": true, "error": null}}
{"selected_lines": [30, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': np.mean(array1),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.1938629150390625, "tests_passed": true, "error": null}}
{"selected_lines": [32, 27, 31, 30, 28, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 24, 28, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 1, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 25, 30, 27, 26, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 27, 31, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 28, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 25, 28, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.barh()\n    return df, ax", "compilation_passed": true, "time": 0.011552095413208008, "tests_passed": true, "error": null}}
{"selected_lines": [26, 28, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 28, 24, 31, 27, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(dict(Mean=(np.mean(array1), np.mean(array2)), Median=(np.median(array1), np.median(array2)),\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 24, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, array_length, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 26, 32, 24, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2, 'Mean': (array1.mean(), array2.mean()), 'Median': (array1.median(), array2.median()), 'Standard Deviation': (array1.std(), array2.std())})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 31, 27, 30, 24, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.010575056076049805, "tests_passed": true, "error": null}}
{"selected_lines": [28, 31, 26, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.uniform(-5, 5, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': array1.mean(), 'Median': array1.median(), 'Standard Deviation': array1.std()})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 26, 27, 32, 30, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data={'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 30, 32, 31, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0, fontsize=12)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 24, 32, 30, 31, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 26, 25, 28, 24, 30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 256, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [27, 25, 28, 30, 31, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 32, 31, 30, 25, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 24, 25, 27, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 26, 25, 30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 32, 28, 26, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 30, 27, 25, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1.mean(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 25, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 31, 27, 28, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 10, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(dict(Mean=(np.mean(array1), np.mean(array2)), Median=(np.median(array1), np.median(array2)),\n        'Array1': np.mean(array1),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 27, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 26, 25, 30, 31, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 30, 24, 26, 25, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 10, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 27, 31, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 27, 32, 25, 30, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.uniform(-5, 5, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 24, 26, 27, 31, 25, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 10000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 24, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, array_length, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.014390945434570312, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [27, 30, 28, 31, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1.mean(), 'Array1_median': array1.median(), 'Array1_std': array1.std(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar', rot=30)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 26, 28, 30, 25, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 28, 31, 24, 26, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 30, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.011011838912963867, "tests_passed": true, "error": null}}
{"selected_lines": [24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.20015883445739746, "tests_passed": true, "error": null}}
{"selected_lines": [31, 25, 24, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 10000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.011080026626586914, "tests_passed": true, "error": null}}
{"selected_lines": [30, 25, 28, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 26, 32, 31, 24, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-10,10,array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': array1.mean(), 'Median': array1.median(), 'Standard Deviation': array1.std()})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 28, 27, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.010575056076049805, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 27, 26, 28, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data={'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [31, 27, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 256, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.011960029602050781, "tests_passed": true, "error": null}}
{"selected_lines": [31, 27, 24, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.uniform(-10, 10, array_length).astype(np.int64)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 31, 32, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.barh()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 24, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.029386043548583984, "tests_passed": true, "error": null}}
{"selected_lines": [26, 25, 30, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-10,10,array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 24, 30, 32, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(dict(Mean=(np.mean(array1), np.mean(array2)), Median=(np.median(array1), np.median(array2)),\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.2417469024658203, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 25, 26, 24, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': [np.mean(array1)], 'Array2': [np.mean(array2)]})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(dict(Mean=(np.mean(array1), np.mean(array2)), Median=(np.median(array1), np.median(array2)),\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.00017118453979492188, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.20015883445739746, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return (df, ax)", "compilation_passed": true, "time": 0.28807973861694336, "tests_passed": true, "error": null}}
{"selected_lines": [24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 1, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.20185184478759766, "tests_passed": true, "error": null}}
{"selected_lines": [24, 28, 30, 25, 26, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.uniform(-10, 10, array_length).astype(np.int64)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 24, 27, 32, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 31, 26, 32, 25, 30, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 30, 31, 25, 26, 32, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data={'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 32, 25, 28, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 10000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.030028104782104492, "tests_passed": true, "error": null}}
{"selected_lines": [27, 28, 30, 26, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(dict(Mean=(np.mean(array1), np.mean(array2)), Median=(np.median(array1), np.median(array2)),\n        'Array1': array1.mean(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 30, 25, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 256, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 26, 25, 31, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.uniform(-5, 5, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 26, 27, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': array1.mean(), 'Median': array1.median(), 'Standard Deviation': array1.std()})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 31, 25, 28, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 24, 26, 32, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data={'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 30, 32, 31, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.014390945434570312, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [27, 25, 32, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 25, 28, 26, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': [np.mean(array1)], 'Array2': [np.mean(array2)]})\n        'Array1': array1.mean(), 'Array1_median': array1.median(), 'Array1_std': array1.std(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 25, 31, 24, 32, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': [np.mean(array1)], 'Array2': [np.mean(array2)]})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 25, 27, 32, 26, 28, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 26, 25, 30, 27, 24, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.2417469024658203, "tests_passed": true, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [24, 28, 26, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, array_length, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 26, 25, 30, 27, 24, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': np.mean(array1),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.barh()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 25, 26, 30, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data=[array1.mean(), np.median(array1), array1.std(),\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 31, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.2417469024658203, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.2417469024658203, "tests_passed": true, "error": null}}
{"selected_lines": [25, 24, 31, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 27, 28, 32, 30, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 32, 28, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 26, 24, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2, 'Mean': (array1.mean(), array2.mean()), 'Median': (array1.median(), array2.median()), 'Standard Deviation': (array1.std(), array2.std())})\n        'Array1': array1.mean(), 'Array1_median': array1.median(), 'Array1_std': array1.std(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 27, 30, 28, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 32, 28, 25, 27, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': [np.mean(array1)], 'Array2': [np.mean(array2)]})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.00015306472778320312, "tests_passed": false, "error": "IndentationError"}}
{"selected_lines": [30, 24, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.01064610481262207, "tests_passed": true, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.014390945434570312, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [27, 31, 24, 32, 25, 28, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 26, 30, 28, 32, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2, 'Mean': (array1.mean(), array2.mean()), 'Median': (array1.median(), array2.median()), 'Standard Deviation': (array1.std(), array2.std())})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 30, 28, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.010743856430053711, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [27, 24, 28, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 26, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data={'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 24, 27, 28, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 25, 27, 31, 30, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.19655299186706543, "tests_passed": true, "error": null}}
{"selected_lines": [30, 27, 25, 31, 24, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 28, 32, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 26, 28, 24, 32, 30, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.uniform(-10, 10, array_length).astype(np.int64)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 31, 28, 25, 27, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data={'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 32, 30, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 26, 25, 32, 27, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(-100, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 25, 24, 31, 26, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.010743856430053711, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [26, 30, 32, 31, 24, 28, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 24, 26, 27, 28, 31, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 28, 32, 24, 27, 30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 1, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.014390945434570312, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [28, 27, 24, 25, 26, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 1, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 25, 26, 30, 27, 32, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 27, 24, 31, 26, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 100, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 27, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 28, 30, 25, 27, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 27, 24, 31, 26, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 10000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': (array1 + array2)/2,\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [27, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 31, 26, 25, 30, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': [np.mean(array1)], 'Array2': [np.mean(array2)]})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 31, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.010091066360473633, "tests_passed": true, "error": null}}
{"selected_lines": [30, 24, 28, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, 1000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.012217283248901367, "tests_passed": true, "error": null}}
{"selected_lines": [31, 25, 28, 27, 24, 26, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 10000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2, 'Mean': (array1.mean(), array2.mean()), 'Median': (array1.median(), array2.median()), 'Standard Deviation': (array1.std(), array2.std())})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 28, 24, 31, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 256, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 27, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 24, 30, 31, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [26, 27, 25, 30, 31, 24, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 256, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 27, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.014390945434570312, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [28, 25, 26, 32, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame()\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.19652295112609863, "tests_passed": true, "error": null}}
{"selected_lines": [31, 26, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 24, 26, 27, 25, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': array1.mean(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 32, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1.mean(),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.19773483276367188, "tests_passed": true, "error": null}}
{"selected_lines": [26, 24, 28, 30, 32, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 256, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 32, 27, 28, 25, 30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 27, 30, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [26, 24, 28, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Mean': array1.mean(), 'Median': array1.median(), 'Standard Deviation': array1.std()})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 32, 24, 27, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 256, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.014390945434570312, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [26, 32, 24, 25, 28, 30, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(1, array_length, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)],\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.010130167007446289, "tests_passed": true, "error": null}}
{"selected_lines": [28, 32, 30, 24, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2, 'Mean': (array1.mean(), array2.mean()), 'Median': (array1.median(), array2.median()), 'Standard Deviation': (array1.std(), array2.std())})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [31, 28, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0, title=f'Statistics for arrays of length {array_length}')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [25, 30, 27, 31, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0)\n    return (df, ax)", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 30, 27, 24, 28, 26, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 26, 25, 27, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(dict(Mean=(np.mean(array1), np.mean(array2)), Median=(np.median(array1), np.median(array2)),\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 25, 26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar(rot=0, title=f'Statistics for arrays of length {array_length}')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 24, 25, 27, 28, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.uniform(-5, 5, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24773597717285156, "tests_passed": true, "error": null}}
{"selected_lines": [26, 31, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(data=[array1.mean(), np.median(array1), array1.std(),\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [26, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 24, 31, 32, 25, 28], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(0, 1, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 27, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2, 'Mean': (array1.mean(), array2.mean()), 'Median': (array1.median(), array2.median()), 'Standard Deviation': (array1.std(), array2.std())})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 25, 24, 30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 10000, array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.011080026626586914, "tests_passed": true, "error": null}}
{"selected_lines": [30, 28, 27, 24, 25, 26, 31], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(0, 1000, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.barh()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [24, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": false, "time": 0.00027489662170410156, "tests_passed": false, "error": "SyntaxError"}}
{"selected_lines": [27, 32, 26], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 31, 26, 32, 30, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({\"Array1\": array1, \"Array2\": array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 30, 26, 28, 25], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30, 26, 27, 25, 31, 28, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame(\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot.bar(rot=0)\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [30], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics)\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.06468701362609863, "tests_passed": true, "error": null}}
{"selected_lines": [24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.random(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.24814105033874512, "tests_passed": true, "error": null}}
{"selected_lines": [24, 28, 26, 32], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27, 26, 31, 28, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.normal(size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': array1,\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot.bar()\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [28, 25, 32, 26, 24], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.randint(100, size=array_length)\n    array2 = np.random.rand(array_length)\n    statistics = pd.DataFrame({'Array1': array1, 'Array2': array2})\n        'Array1': [np.mean(array1), np.median(array1), np.std(array1)],\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [27], "result": {"code": "import numpy as np\nimport pandas as pd\n\n\ndef task_func(array_length=100):\n    '''\n    Generate two arrays of random numbers of a given length, calculate their mean, median, and standard deviation,\n    then store these results in a Panda DataFrame 'statistics' with keys 'Array1' and 'Array2'.\n    Draw a bar chart to compare these statistics with indices 'Mean', 'Median', and 'Standard Deviation'.\n\n    Parameters:\n    - array_length (int, optional): The length of the arrays to be generated. Default is 100.\n\n    Returns:\n    - DataFrame: A pandas DataFrame with the statistics of the arrays.\n    - Axes: The bar chart plot comparing the statistics.\n\n    Requirements:\n    - numpy\n    - pandas\n\n    Example:\n    >>> df, ax = task_func(50)\n    '''\n    array1 = np.random.rand(array_length)\n    array2 = np.random.rand(array_length)\n    statistics = {\n        'Array1': np.mean(array1),\n        'Array2': [np.mean(array2), np.median(array2), np.std(array2)]\n    }\n    df = pd.DataFrame(statistics, index=['Mean', 'Median', 'Standard Deviation'])\n    ax = df.plot(kind='bar')\n    return df, ax", "compilation_passed": true, "time": 0.1938629150390625, "tests_passed": true, "error": null}}
