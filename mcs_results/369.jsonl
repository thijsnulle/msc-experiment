{"selected_lines": [31, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l, bins=5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03853487968444824, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 33, 38, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = %.2f,  std = %.2f' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 34, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 2)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 37, 38, 39, 33, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = rf'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007673740386962891, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 34, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f'Fit results: mu = {np.round(mu, 2)},  std = {np.round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009234905242919922, "tests_passed": true, "error": null}}
{"selected_lines": [32, 40, 35, 38, 31, 39, 34, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 2)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 40, 33, 32, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=np.arange(0, 10, 1))\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ', std = ' + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009011268615722656, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 37, 31, 35, 40, 32, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='red', alpha=0.5, linewidth=2)\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.07898998260498047, "tests_passed": true, "error": null}}
{"selected_lines": [31, 38, 33, 39, 32, 40, 37, 34, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True, histtype='step',\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = f'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 39, 36, 40, 31, 34, 38, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='b', alpha=0.6, linewidth=2, label='$\\mu=${:.2f},\\n $\\sigma$= {:.2f}'.format(mu,std))\n    title = (\"Fit results: mu = {},  std = {}\").format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 40, 36, 39, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=15, density=True, edgecolor='black')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu,std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.040389060974121094, "tests_passed": true, "error": null}}
{"selected_lines": [32, 39, 38, 34, 31, 37, 35, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.set_title(\"Fit results: mu={0:.2f}, std={1:.2f}\".format(stats.norm.mean(l), stats.norm.std(l)), fontsize=12)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', alpha=0.5, linewidth=2)\n    title = f\"Fit results: mu = {mu:.2f},  std = {std:.2f}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14501404762268066, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 40, 36, 39, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'k')\n    ax.plot(x, p)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 40, 32, 38, 37, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins = 5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='red', alpha=0.5, linewidth=2)\n    title = 'Fit results: mu = {mean:.2f},  std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.031159162521362305, "tests_passed": true, "error": null}}
{"selected_lines": [32, 39, 38, 36, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ',  std = ' + str(round(std, 2))\n    ax.set(title=title, xlabel='x', ylabel='PDF')\n    return ax", "compilation_passed": true, "time": 0.014843940734863281, "tests_passed": true, "error": null}}
{"selected_lines": [39, 31, 37, 35, 33, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1)\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03280496597290039, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 34, 31, 40, 39, 35, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(10,3))\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = \"+ str(round(mu,2)) + \", std = \" + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009332895278930664, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 36, 35, 38, 40, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(16, 10))\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 1000)\n    p = np.exp(-(x - mu) ** 2 / (2 * std ** 2)) / np.sqrt(2 * np.pi) / std\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f'Fit results: mu = {np.round(mu, 2)},  std = {np.round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007584810256958008, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14595484733581543, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', alpha=0.5)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.026542186737060547, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 33, 36, 39, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = 'Fit results: mu = %.2f,  std = %.2f' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 33, 40, 37, 36, 39, 35, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = 'Fit results: mu = {:.2f},  std = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 32, 31, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007987022399902344, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 37, 32, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='g', linewidth=3, linestyle='--')\n    ax.plot(x, p, 'k', alpha=0.5, linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 37, 33, 38, 39, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=50)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu,std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 37, 39, 38, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', alpha=0.5)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007025003433227539, "tests_passed": true, "error": null}}
{"selected_lines": [40, 33, 37, 38, 35, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = \"Fit results: mu = \"+ str(round(mu,2)) + \", std = \" + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008352041244506836, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1640160083770752, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 32, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ', std = ' + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1550760269165039, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 32, 35, 38, 40, 37, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=np.arange(0, 10, 1))\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', lw=1)\n    title = 'Fit results:\\nmu = {},\\nstd = {}'.format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007863998413085938, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 34, 39, 35, 38, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006338834762573242, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 32, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=1, linestyle='--')\n    title = f'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007068157196044922, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1502070426940918, "tests_passed": true, "error": null}}
{"selected_lines": [32, 39, 33, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.15573787689208984, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 39, 34, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.02718377113342285, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 32, 38, 31, 37, 33, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1)\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'r--', lw=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 31, 32, 35, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(4,4))\n    ax.hist(l, bins=10, density=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 38, 39, 35, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='b', alpha=0.6, linewidth=2, label='$\\mu=${:.2f},\\n $\\sigma$= {:.2f}'.format(mu,std))\n    title = 'Fit results:\\nmu = {},\\nstd = {}'.format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008987903594970703, "tests_passed": true, "error": null}}
{"selected_lines": [39, 32, 34, 35, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03357195854187012, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 35, 33, 32, 34, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = rf'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007328987121582031, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 38, 33, 32, 34, 40, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1,1, figsize=(8,4))\n    ax.hist(l, bins=np.arange(0, 10, 1))\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ', std = ' + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 38, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(10,3))\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {mean:.2f}, std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006455183029174805, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', linewidth=1, color='b')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.02805185317993164, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 38, 40, 31, 33, 36, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', linewidth=2, label='best-fit')\n    title = 'Fit results: mu = {mean:.2f}, std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36, 39, 35, 37, 31, 34, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.set_title(\"Fit results: mu={0:.2f}, std={1:.2f}\".format(stats.norm.mean(l), stats.norm.std(l)), fontsize=12)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = f\"Fit results: mu = {mu:.2f},  std = {std:.2f}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 32, 39, 35, 36, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 2)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = 'Fit results:\\nmu = {},\\nstd = {}'.format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006442070007324219, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 31, 36, 32, 35, 34, 38, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1,1, figsize=(8,4))\n    ax.hist(l, 50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = {:.2f},  std = {:.2f}\".format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.07258796691894531, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 38, 36, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', linewidth=1, color='b')\n    title = (\"Fit results: mu = {},  std = {}\").format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007922172546386719, "tests_passed": true, "error": null}}
{"selected_lines": [37, 32, 39, 36, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, 50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = np.exp(-(x - mu)**2 / (2 * std**2)) / (std * np.sqrt(2 * np.pi))\n    ax.plot(x, p, color='b', alpha=0.6, linewidth=2, label='$\\mu=${:.2f},\\n $\\sigma$= {:.2f}'.format(mu,std))\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.07169318199157715, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 37, 32, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1502070426940918, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 40, 39, 36, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = {:.2f},  std = {:.2f}\".format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 31, 39, 37, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.set_title(\"Fit results: mu={0:.2f}, std={1:.2f}\".format(stats.norm.mean(l), stats.norm.std(l)), fontsize=12)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', linewidth=2, label='best-fit')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36, 34, 35, 38, 39, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = r\"Fit results: $\\mu={}$, $std={}$\".format(round(mu,2), round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009800195693969727, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 37, 34, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='red', alpha=0.5, linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 36, 34, 32, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.040209054946899414, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 38, 33, 35, 31, 34, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results:\\nmu={0:.2f},  std={1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 31, 35, 37, 36, 38, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std))\n    ax.plot(x, p, 'k--')\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu,std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03191328048706055, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 39, 34, 33, 37, 40, 38, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'r--', lw=2)\n    title = 'Fit results: mu = {mean:.2f},  std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03895902633666992, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.033926963806152344, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1502070426940918, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 31, 35, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.029242753982543945, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 34, 39, 35, 38, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006338834762573242, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 33, 37, 34, 38, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03160405158996582, "tests_passed": true, "error": null}}
{"selected_lines": [33, 39, 38, 32, 36, 34, 40, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = rf'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0077168941497802734, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 33, 36, 38, 37, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(10,3))\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', c='g', alpha=0.6)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 39, 34, 36, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.036401987075805664, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14501404762268066, "tests_passed": true, "error": null}}
{"selected_lines": [35, 39, 33, 40, 34, 31, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=np.arange(0, 10, 1))\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 33, 34, 36, 32, 40, 37, 31, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = \"Fit results: mu = {mu},  std = {std}\".format(mu=np.round(mu,2), std=np.round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008519887924194336, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 38, 36, 34, 35, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = {mu},  std = {std}\".format(mu=np.round(mu,2), std=np.round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008967161178588867, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 32, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True, histtype='step',\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 2)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 38, 37, 32, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = {mu},  std = {std}\".format(mu=np.round(mu,2), std=np.round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.00847315788269043, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 37, 35, 33, 31, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 2)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', alpha=0.5)\n    title = f'Fit results:\\n{l} => mu = {mu:.2f}, std = {std:.2f}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 39, 31, 38, 37, 32, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l,bins=50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='b', alpha=0.6, linewidth=2, label='$\\mu=${:.2f},\\n $\\sigma$= {:.2f}'.format(mu,std))\n    title = f'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.01578068733215332, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 35, 36, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.set_title(\"Fit results: mu={0:.2f}, std={1:.2f}\".format(stats.norm.mean(l), stats.norm.std(l)), fontsize=12)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f\"Fit results: mu={round(mu, 2)}, std={round(std, 2)}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03419804573059082, "tests_passed": true, "error": null}}
{"selected_lines": [33, 39, 32, 40, 37, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='g', linewidth=3, linestyle='--')\n    ax.plot(x, p, 'k-', linewidth=2, label='best-fit')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 38, 37, 40, 36, 33, 34, 39, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r', alpha=0.5, label=r'$\\mu = {}$,  $\\sigma = {}$'.format(round(mu, 2), round(std, 2)))\n    ax.plot(x, p, 'r--', lw=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 39, 38, 34, 35, 32, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=50)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='g', linewidth=3, linestyle='--')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = r'$mu=%.2f,\\ \\sigma=%.2f$' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37, 35, 39, 36, 31, 32, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l, 50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = f\"Fit results: mu = {mu:.2f},  std = {std:.2f}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0878300666809082, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 35, 34, 37, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04501914978027344, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1,1, figsize=(8,4))\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f\"Fit results: mu={round(mu, 2)}, std={round(std, 2)}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.00837087631225586, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 37, 39, 36, 38, 31, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2, linestyle='--')\n    title = 'Fit results: mu = {mean:.2f},  std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0348207950592041, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set(xlabel='Value', ylabel='Probability')\n    return ax", "compilation_passed": true, "time": 0.007892131805419922, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 32, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = ax.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2)\n    ax.plot(x, p, 'k-', label='PDF')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36, 35, 37, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', alpha=0.5)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04009199142456055, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True, bins=np.arange(0, 9, 0.1))\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.09407901763916016, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [35, 37, 36, 38, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='g', linewidth=3, linestyle='--')\n    ax.plot(x, p, '--', c='g', alpha=0.6)\n    title = f'Fit results: mu = {np.round(mu, 2)},  std = {np.round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 32, 34, 31, 33, 38, 39, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=50)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = {mu},  std = {std}\".format(mu=np.round(mu,2), std=np.round(std,2))\n    ax.set(title=title, xlabel='x', ylabel='PDF')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 39, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='red', alpha=0.5, linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.032174110412597656, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 39, 31, 40, 37, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std))\n    ax.plot(x, p, color='r', linewidth=2, linestyle='--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1640160083770752, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32, 40, 39, 34, 33, 36, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ',  std = ' + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008160829544067383, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='red', alpha=0.5, linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title, loc='right')\n    return ax", "compilation_passed": true, "time": 0.007437705993652344, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins = 5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.16172385215759277, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.033926963806152344, "tests_passed": true, "error": null}}
{"selected_lines": [39, 34, 37, 36, 32, 33, 35, 38, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = np.exp(-(x - mu) ** 2 / (2 * std ** 2)) / np.sqrt(2 * np.pi) / std\n    ax.plot(x, p, color='r')\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008435964584350586, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = \"Fit results: mu = {:.2f},  std = {:.2f}\".format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03452587127685547, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 36, 39, 32, 33, 31, 37, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r', alpha=0.5, label=r'$\\mu = {}$,  $\\sigma = {}$'.format(round(mu, 2), round(std, 2)))\n    ax.plot(x, p, 'k-', label='PDF')\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu,std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 32, 39, 31, 35, 33, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results:\\nmu = {:.2f},\\nstd = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.036853790283203125, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [32, 37, 35, 33, 34, 31, 38, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = f\"Fit results: mu={round(mu, 2)}, std={round(std, 2)}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.015784025192260742, "tests_passed": true, "error": null}}
{"selected_lines": [31, 38, 33, 34, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title, loc='right')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 31, 37, 35, 39, 33, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-')\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 36, 32, 40, 37, 35, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l,bins=50)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-')\n    ax.plot(x, p, color='b', alpha=0.6, linewidth=2, label='$\\mu=${:.2f},\\n $\\sigma$= {:.2f}'.format(mu,std))\n    title = f'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1550760269165039, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 37, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03800201416015625, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 38, 33, 40, 34, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='red', alpha=0.5, linewidth=2)\n    title = r\"Fit results: mu = {mean},  std = {standard deviation}\".format(mean=round(mu, 2),\\\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 38, 35, 37, 31, 32, 33, 34, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = r'$mu=%.2f,\\ \\sigma=%.2f$' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0077779293060302734, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 31, 35, 37, 36, 39, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = f'Fit results:\\n{l} => mu = {mu:.2f}, std = {std:.2f}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.15778088569641113, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 36, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04160499572753906, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 36, 40, 33, 32, 39, 35, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=1, linestyle='--')\n    title = r\"Fit results: mu = {mean},  std = {standard deviation}\".format(mean=round(mu, 2),\\\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = np.exp(-(x - mu)**2 / (2 * std**2)) / (std * np.sqrt(2 * np.pi))\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006621837615966797, "tests_passed": true, "error": null}}
{"selected_lines": [38, 31, 40, 36, 35, 33, 37, 39, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True, histtype='step',\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='b', alpha=0.6, linewidth=2, label='$\\mu=${:.2f},\\n $\\sigma$= {:.2f}'.format(mu,std))\n    title = f'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = \"+ str(round(mu,2)) + \", std = \" + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.035739898681640625, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=np.arange(0, 10, 1))\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 37, 32, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='blue', linewidth=2, label='$\\mu=%.2f,\\sigma=%.2f$'%(mu,std))\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04032397270202637, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1550760269165039, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r', alpha=0.5, label=r'$\\mu = {}$,  $\\sigma = {}$'.format(round(mu, 2), round(std, 2)))\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36, 39, 32, 38, 40, 34, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = 'Fit results: mu = {:.2f},  std = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03852987289428711, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = (\"Fit results: mu = {},  std = {}\").format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03812408447265625, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 38, 31, 36, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = np.exp(-(x - mu)**2 / (2 * std**2)) / (std * np.sqrt(2 * np.pi))\n    ax.plot(x, p, color='r', linewidth=1, linestyle='--')\n    title = 'Fit results:\\nmu={0:.2f},  std={1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.010469913482666016, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 32, 34, 39, 37, 35, 36, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009799957275390625, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 39, 35, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(4,4))\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04318094253540039, "tests_passed": true, "error": null}}
{"selected_lines": [39, 33, 36, 38, 37, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std))\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = f\"Fit results: mu={round(mu, 2)}, std={round(std, 2)}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = rf'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03701472282409668, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 39, 40, 35, 32, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.08438825607299805, "tests_passed": true, "error": null}}
{"selected_lines": [31, 39, 40, 34, 32, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009966135025024414, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 35, 32, 31, 39, 40, 36, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = np.exp(-(x - mu)**2 / (2 * std**2)) / (std * np.sqrt(2 * np.pi))\n    ax.plot(x, p, color='blue', linewidth=2, label='$\\mu=%.2f,\\sigma=%.2f$'%(mu,std))\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu,std)\n    ax.set(title=title, xlabel='x', ylabel='PDF')\n    return ax", "compilation_passed": true, "time": 0.04833483695983887, "tests_passed": true, "error": null}}
{"selected_lines": [39, 40, 35, 32, 34, 33, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 36, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04160499572753906, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=np.arange(0, 10, 1))\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {:.2f},  std = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04262280464172363, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 39, 38, 31, 32, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-')\n    ax.plot(x, p, color='r')\n    title = f\"Fit results: mu={round(mu, 2)}, std={round(std, 2)}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 31, 40, 37, 32, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='b', alpha=0.6, linewidth=2, label='$\\mu=${:.2f},\\n $\\sigma$= {:.2f}'.format(mu,std))\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04324984550476074, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 40, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 33, 35, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04508805274963379, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = np.exp(-(x - mu)**2 / (2 * std**2)) / (std * np.sqrt(2 * np.pi))\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03891897201538086, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f'Fit results: mu = {np.round(mu, 2)},  std = {np.round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.05133485794067383, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 34, 40, 32, 39, 38, 35, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1,1, figsize=(8,4))\n    ax.hist(l, 50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r', alpha=0.5, label=r'$\\mu = {}$,  $\\sigma = {}$'.format(round(mu, 2), round(std, 2)))\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ', std = ' + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 34, 35, 32, 33, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = np.exp(-(x - mu) ** 2 / (2 * std ** 2)) / np.sqrt(2 * np.pi) / std\n    ax.plot(x, p, 'k', linewidth=2)\n    title = r\"Fit results: $\\mu={}$, $std={}$\".format(round(mu,2), round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.01304173469543457, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 32, 38, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f\"Fit results: mu={round(mu, 2)}, std={round(std, 2)}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l,bins=50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = \"+ str(round(mu,2)) + \", std = \" + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.01795196533203125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 33, 39, 37, 38, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', linewidth=2, label='best-fit')\n    title = r'$mu=%.2f,\\ \\sigma=%.2f$' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.01081705093383789, "tests_passed": true, "error": null}}
{"selected_lines": [31, 39, 34, 32, 37, 36, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True, histtype='step',\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = 'Fit results: mu = {mean:.2f}, std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.set_title(\"Fit results: mu={0:.2f}, std={1:.2f}\".format(stats.norm.mean(l), stats.norm.std(l)), fontsize=12)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03479790687561035, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [37, 36, 32, 35, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins = 5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', alpha=0.5, linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0317692756652832, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 36, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04160499572753906, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03799319267272949, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 36, 31, 32, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(16, 10))\n    ax.hist(l, bins = 5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = \"+ str(round(mu,2)) + \", std = \" + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.00857090950012207, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 34, 36, 31, 32, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='g', linewidth=3, linestyle='--')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 39, 38, 37, 34, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-')\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.15096211433410645, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 34, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 2)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ', std = ' + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008899927139282227, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 39, 34, 32, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04805183410644531, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 38, 35, 36, 40, 34, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 2)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'k')\n    ax.plot(x, p)\n    title = r'$mu=%.2f,\\ \\sigma=%.2f$' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 32, 33, 31, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.set_title(\"Fit results: mu={0:.2f}, std={1:.2f}\".format(stats.norm.mean(l), stats.norm.std(l)), fontsize=12)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 34, 32, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = r\"Fit results: mu = {mean},  std = {standard deviation}\".format(mean=round(mu, 2),\\\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.15123414993286133, "tests_passed": true, "error": null}}
{"selected_lines": [33, 40, 32, 38, 37, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='b', alpha=0.6, linewidth=2, label='$\\mu=${:.2f},\\n $\\sigma$= {:.2f}'.format(mu,std))\n    title = \"Fit results: mu = \"+ str(round(mu,2)) + \", std = \" + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 40, 38, 34, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 2)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results:\\nmu={0:.2f},  std={1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 40, 31, 39, 35, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l,bins=50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set(xlabel='Value', ylabel='Probability')\n    return ax", "compilation_passed": true, "time": 0.01688981056213379, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0337371826171875, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 39, 34, 36, 37, 31, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='blue', linewidth=2, label='$\\mu=%.2f,\\sigma=%.2f$'%(mu,std))\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.037677764892578125, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.05480790138244629, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = ax.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04256296157836914, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [36, 34, 37, 31, 32, 38, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--', linewidth=0.5)\n    title = 'Fit results: mu = %.2f,  std = %.2f' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04610800743103027, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 32, 35, 38, 34, 33, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=15, density=True, edgecolor='black')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {},  std = {:.2f}'.format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 38, 34, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', alpha=0.5, linewidth=2)\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.034259796142578125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 32, 33, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results:\\nmu = {:.2f},\\nstd = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008423089981079102, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 38, 36, 32, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = r\"Fit results: $\\mu={}$, $std={}$\".format(round(mu,2), round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009331941604614258, "tests_passed": true, "error": null}}
{"selected_lines": [31, 40, 39, 36, 33, 35, 34, 38, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 2)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-')\n    ax.plot(x, p, color='r', linewidth=2, linestyle='--')\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 39, 37, 38, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1,1, figsize=(8,4))\n    ax.set_title(\"Fit results: mu={0:.2f}, std={1:.2f}\".format(stats.norm.mean(l), stats.norm.std(l)), fontsize=12)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', c='g', alpha=0.6)\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ',  std = ' + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 39, 33, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = {mu},  std = {std}\".format(mu=np.round(mu,2), std=np.round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 35, 36, 34, 37, 32, 38, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', alpha=0.5, linewidth=2)\n    title = (\"Fit results: mu = {},  std = {}\").format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.00783681869506836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 39, 40, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = rf'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007525920867919922, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 31, 39, 36, 40, 37, 32, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = np.exp(-(x - mu)**2 / (2 * std**2)) / (std * np.sqrt(2 * np.pi))\n    ax.plot(x, p, color='r')\n    title = f'Fit results:\\n{l} => mu = {mu:.2f}, std = {std:.2f}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009769916534423828, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 38, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu,std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03915095329284668, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 37, 31, 33, 39, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 40, 39, 34, 36, 32, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-')\n    ax.plot(x, p, 'k-', alpha=0.5, linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36, 39, 37, 38, 35, 33, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = \"Fit results: mu = {:.2f},  std = {:.2f}\".format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 31, 36, 37, 34, 32, 40, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = f'Fit results:\\n{l} => mu = {mu:.2f}, std = {std:.2f}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 32, 33, 36, 39, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='g', linewidth=3, linestyle='--')\n    ax.plot(x, p)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 40, 32, 38, 35, 37, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins = 5)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = 'Fit results: mu = {},  std = {:.2f}'.format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 36, 35, 37, 34, 33, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1,1, figsize=(8,4))\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 2)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', alpha=0.5, linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.02714991569519043, "tests_passed": true, "error": null}}
{"selected_lines": [38, 31, 40, 33, 37, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='b', alpha=0.6, linewidth=2, label='$\\mu=${:.2f},\\n $\\sigma$= {:.2f}'.format(mu,std))\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 35, 37, 40, 39, 31, 33, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 32, 33, 40, 34, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True, histtype='step',\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 33, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title, loc='right')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03799319267272949, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='g', linewidth=3, linestyle='--')\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [39, 32, 33, 31, 34, 35, 40, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-', lw=2)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title, loc='right')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32, 39, 36, 31, 37, 33, 40, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(10,3))\n    ax.hist(l, bins=20)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=1, linestyle='--')\n    title = 'Fit results: mu = {},  std = {:.2f}'.format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009290218353271484, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 31, 35, 32, 38, 33, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results:\\nmu={0:.2f},  std={1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008527994155883789, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 34, 37, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-', lw=2)\n    ax.plot(x, p, 'r--', lw=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f\"Fit results: mu = {mu:.2f},  std = {std:.2f}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1595170497894287, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 32, 31, 40, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = \"+ str(round(mu,2)) + \", std = \" + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007184028625488281, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = r'$mu=%.2f,\\ \\sigma=%.2f$' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0062830448150634766, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 31, 32, 36, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins = 5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.026354074478149414, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 40, 34, 36, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1,1, figsize=(8,4))\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2, label='pdf')\n    ax.plot(x, p, color='r', alpha=0.5)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = r'$mu=%.2f,\\ \\sigma=%.2f$' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006353855133056641, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = r'$mu=%.2f,\\ \\sigma=%.2f$' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04705214500427246, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r', alpha=0.5, label=r'$\\mu = {}$,  $\\sigma = {}$'.format(round(mu, 2), round(std, 2)))\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03896808624267578, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [34, 36, 37, 35, 38, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006192207336425781, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color=\"green\", linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.041825056076049805, "tests_passed": true, "error": null}}
{"selected_lines": [31, 39, 34, 36, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set(xlabel='Value', ylabel='Probability')\n    return ax", "compilation_passed": true, "time": 0.00680232048034668, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14501404762268066, "tests_passed": true, "error": null}}
{"selected_lines": [40, 31, 32, 38, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins = 5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f\"Fit results: mu = {mu:.2f},  std = {std:.2f}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.028104066848754883, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 39, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set(xlabel='Value', ylabel='Probability')\n    return ax", "compilation_passed": true, "time": 0.006400108337402344, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1640160083770752, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l,bins=50)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14501404762268066, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 33, 39, 35, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {mean:.2f}, std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.010744810104370117, "tests_passed": true, "error": null}}
{"selected_lines": [40, 39, 35, 34, 33, 38, 31, 36, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = np.exp(-(x - mu) ** 2 / (2 * std ** 2)) / np.sqrt(2 * np.pi) / std\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu,std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04104495048522949, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 35, 31, 39, 32, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {:.2f},  std = {:.2f}'.format(mu, std)\n    ax.set_title(title, loc='right')\n    return ax", "compilation_passed": true, "time": 0.008535146713256836, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 32, 34, 33, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', c='g', alpha=0.6)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.040376901626586914, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 34, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=1, linestyle='--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36, 34, 31, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'k')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 40, 32, 35, 39, 34, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'r--', lw=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36, 39, 34, 31, 40, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'k')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 39, 34, 40, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03768610954284668, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 37, 32, 40, 39, 36, 38, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l,bins=50)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2, label='pdf')\n    ax.plot(x, p, 'k--', linewidth=1, label='2.5%')\n    title = f'Fit results:\\n{l} => mu = {mu:.2f}, std = {std:.2f}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 37, 35, 40, 33, 36, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='b', alpha=0.6, linewidth=2, label='$\\mu=${:.2f},\\n $\\sigma$= {:.2f}'.format(mu,std))\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 37, 39, 32, 35, 38, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l, bins=10, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 2)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=1, linestyle='--')\n    title = 'Fit results: mu = {},  std = {:.2f}'.format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008450746536254883, "tests_passed": true, "error": null}}
{"selected_lines": [38, 31, 37, 32, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(10,3))\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = {:.2f},  std = {:.2f}\".format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03670024871826172, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 38, 35, 40, 39, 32, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2, label='pdf')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = \"+ str(round(mu,2)) + \", std = \" + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 39, 40, 32, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04123711585998535, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 37, 31, 34, 38, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2, label='pdf')\n    ax.plot(x, p, color='blue', linewidth=2, label='$\\mu=%.2f,\\sigma=%.2f$'%(mu,std))\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 38, 33, 39, 35, 37, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'r--', lw=2)\n    title = f'Fit results: mu = {np.round(mu, 2)},  std = {np.round(std, 2)}'\n    ax.set(title=title, xlabel='x', ylabel='PDF')\n    return ax", "compilation_passed": true, "time": 0.007203102111816406, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.17031121253967285, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 31, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', linewidth=2, label='best-fit')\n    title = f\"Fit results: mu={round(mu, 2)}, std={round(std, 2)}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006961822509765625, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 32, 37, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='blue', linewidth=2, label='$\\mu=%.2f,\\sigma=%.2f$'%(mu,std))\n    title = 'Fit results:\\nmu = {:.2f},\\nstd = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 31, 33, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 37, 39, 40, 33, 32, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', label='PDF')\n    title = \"Fit results: mu = {mu},  std = {std}\".format(mu=np.round(mu,2), std=np.round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008572101593017578, "tests_passed": true, "error": null}}
{"selected_lines": [39, 32, 33, 38, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f\"Fit results: mu = {mu:.2f},  std = {std:.2f}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03517913818359375, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 40, 31, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1,1, figsize=(8,4))\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 2)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2, linestyle='--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03865337371826172, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 36, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04160499572753906, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 37, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r', alpha=0.5, label=r'$\\mu = {}$,  $\\sigma = {}$'.format(round(mu, 2), round(std, 2)))\n    ax.plot(x, p, linewidth=2, color='r')\n    title = \"Fit results: mu = \"+ str(round(mu,2)) + \", std = \" + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 40, 37, 38, 31, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(4,4))\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = f'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008941173553466797, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 36, 32, 34, 39, 38, 31, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, linewidth=2, color='r')\n    title = (\"Fit results: mu = {},  std = {}\").format(round(mu, 2), round(std, 2))\n    ax.set(xlabel='Value', ylabel='Probability')\n    return ax", "compilation_passed": true, "time": 0.0100250244140625, "tests_passed": true, "error": null}}
{"selected_lines": [33, 40, 36, 38, 39, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = {:.2f},  std = {:.2f}\".format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 40, 34, 38, 36, 37, 35, 33, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color=\"green\", linewidth=2)\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ', std = ' + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.010662078857421875, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 37, 35, 36, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1)\n    ax.set_title(\"Fit results: mu={0:.2f}, std={1:.2f}\".format(stats.norm.mean(l), stats.norm.std(l)), fontsize=12)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', c='g', alpha=0.6)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 33, 37, 40, 34, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2, linestyle='--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37, 32, 35, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='r')\n    title = \"Fit results: mu = {:.2f},  std = {:.2f}\".format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04374098777770996, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results:\\nmu = {:.2f},\\nstd = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 38, 35, 32, 40, 34, 39, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-')\n    ax.plot(x, p, color='r')\n    title = f'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03924894332885742, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 35, 32, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.038793087005615234, "tests_passed": true, "error": null}}
{"selected_lines": [31, 40, 36, 35, 38, 37, 39, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = r\"Fit results: $\\mu={}$, $std={}$\".format(round(mu,2), round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0080718994140625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32, 39, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008986949920654297, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 36, 37, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, linewidth=2, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 39, 40, 38, 35, 34, 37, 32, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, 50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.01659989356994629, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='b', alpha=0.6, linewidth=2, label='$\\mu=${:.2f},\\n $\\sigma$= {:.2f}'.format(mu,std))\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14861488342285156, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14501404762268066, "tests_passed": true, "error": null}}
{"selected_lines": [39, 33, 35, 37, 38, 34, 40, 36, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', linewidth=1, color='b')\n    title = 'Fit results: mu = {:.2f},  std = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 40, 38, 33, 37, 36, 32, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='r')\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.00872802734375, "tests_passed": true, "error": null}}
{"selected_lines": [32, 39, 34, 36, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.036401987075805664, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 35, 39, 34, 38, 32, 37, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2, linestyle='--')\n    title = f'Fit results:\\n{l} => mu = {mu:.2f}, std = {std:.2f}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.013616323471069336, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03589367866516113, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.16131997108459473, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 39, 31, 38, 40, 37, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(16, 10))\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 2)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='r')\n    title = \"Fit results: mu = {:.2f},  std = {:.2f}\".format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 35, 40, 36, 32, 38, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std))\n    ax.plot(x, p, 'k--', linewidth=0.5)\n    title = rf'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 34, 37, 40, 36, 38, 32, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='g', linewidth=3, linestyle='--')\n    ax.plot(x, p, color='r')\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 40, 39, 36, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 34, 39, 31, 35, 36, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 40, 39, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color=\"green\", linewidth=2)\n    title = 'Fit results: mu = {mean:.2f}, std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009912729263305664, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 38, 35, 33, 34, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', linewidth=2, label='best-fit')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 40, 33, 38, 37, 35, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', alpha=0.5, linewidth=2)\n    title = 'Fit results:\\nmu={0:.2f},  std={1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 34, 31, 32, 33, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std))\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 33, 32, 35, 40, 31, 39, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(10,3))\n    ax.hist(l, density=True, histtype='step',\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--', linewidth=0.5)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36, 32, 39, 33, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=50)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-')\n    ax.plot(x, p, 'k--', linewidth=0.5)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 40, 37, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03634309768676758, "tests_passed": true, "error": null}}
{"selected_lines": [36, 39, 35, 37, 33, 40, 32, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, linewidth=2, color='r')\n    title = 'Fit results: mu = %.2f,  std = %.2f' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03968191146850586, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 36, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04160499572753906, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.15778088569641113, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 40, 36, 38, 32, 34, 37, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 1000)\n    p = ax.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2)\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 39, 38, 36, 33, 37, 35, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 2)\n    p = np.exp(-(x - mu)**2 / (2 * std**2)) / (std * np.sqrt(2 * np.pi))\n    ax.plot(x, p, color=\"green\", linewidth=2)\n    title = 'Fit results: mu = {mean:.2f}, std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set(title=title, xlabel='x', ylabel='PDF')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results:\\nmu={0:.2f},  std={1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03366589546203613, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 32, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='red', alpha=0.5, linewidth=2)\n    title = rf'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.014301061630249023, "tests_passed": true, "error": null}}
{"selected_lines": [40, 37, 35, 36, 39, 32, 34, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, 50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='k', linewidth=2)\n    title = r'$mu=%.2f,\\ \\sigma=%.2f$' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.015695810317993164, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 35, 33, 34, 38, 36, 39, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 2)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'k')\n    ax.plot(x, p, color='r', linewidth=2, linestyle='--')\n    title = 'Fit results: mu = {mean:.2f},  std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 36, 32, 31, 38, 34, 33, 39, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True, histtype='step',\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = (\"Fit results: mu = {},  std = {}\").format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 38, 31, 39, 34, 40, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', c='g', alpha=0.6)\n    title = f'Fit results: mu = {np.round(mu, 2)},  std = {np.round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0070340633392333984, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 38, 33, 34, 35, 40, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1)\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color=\"green\", linewidth=2)\n    title = f'Fit results: mu = {np.round(mu, 2)},  std = {np.round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 35, 39, 32, 31, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title, loc='right')\n    return ax", "compilation_passed": true, "time": 0.007598161697387695, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03286409378051758, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 36, 34, 33, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r', alpha=0.5, label=r'$\\mu = {}$,  $\\sigma = {}$'.format(round(mu, 2), round(std, 2)))\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = {mu},  std = {std}\".format(mu=np.round(mu,2), std=np.round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 38, 39, 31, 34, 33, 37, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = f'Fit results:\\n{l} => mu = {mu:.2f}, std = {std:.2f}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008109092712402344, "tests_passed": true, "error": null}}
{"selected_lines": [40, 35, 33, 38, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 35, 36, 37, 38, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'k')\n    ax.plot(x, p, linewidth=2, color='r')\n    title = f\"Fit results: mu={round(mu, 2)}, std={round(std, 2)}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 40, 37, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-', lw=2)\n    ax.plot(x, p, color='red', alpha=0.5, linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 35, 38, 31, 32, 40, 34, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins=5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = np.exp(-(x - mu) ** 2 / (2 * std ** 2)) / np.sqrt(2 * np.pi) / std\n    ax.plot(x, p, 'k--')\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0066869258880615234, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 37, 35, 38, 39, 33, 32, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=50)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', label='PDF')\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 31, 33, 37, 32, 36, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='blue', linewidth=2, label='$\\mu=%.2f,\\sigma=%.2f$'%(mu,std))\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03926515579223633, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.033926963806152344, "tests_passed": true, "error": null}}
{"selected_lines": [39, 31, 33, 32, 35, 38, 40, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008100748062133789, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 38, 33, 31, 40, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--', linewidth=0.5)\n    title = f\"Fit results: mu = {mu:.2f},  std = {std:.2f}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 40, 38, 35, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = 'Fit results:\\nmu = {:.2f},\\nstd = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007915973663330078, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 40, 34, 32, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r', alpha=0.5, label=r'$\\mu = {}$,  $\\sigma = {}$'.format(round(mu, 2), round(std, 2)))\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 31, 40, 34, 39, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1,1, figsize=(8,4))\n    ax.hist(l, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009109020233154297, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 40, 38, 34, 37, 33, 31, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', alpha=0.5, linewidth=2)\n    title = 'Fit results: mu = %.2f,  std = %.2f' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04311513900756836, "tests_passed": true, "error": null}}
{"selected_lines": [39, 34, 40, 37, 38, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='blue', linewidth=2, label='$\\mu=%.2f,\\sigma=%.2f$'%(mu,std))\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32, 33, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', c='g', alpha=0.6)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04106283187866211, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.05919623374938965, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1502070426940918, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 31, 38, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(4,4))\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 34, 31, 33, 40, 38, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l, normed=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = r\"Fit results: mu = {mean},  std = {standard deviation}\".format(mean=round(mu, 2),\\\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 32, 40, 35, 37, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14501404762268066, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03901481628417969, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 2)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04577517509460449, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 32, 31, 40, 34, 37, 36, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True, bins=np.arange(0, 9, 0.1))\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r', alpha=0.5, label=r'$\\mu = {}$,  $\\sigma = {}$'.format(round(mu, 2), round(std, 2)))\n    ax.plot(x, p, color='r')\n    title = f'Fit results: mu = {np.round(mu, 2)},  std = {np.round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14501404762268066, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 35, 39, 38, 33, 37, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 2)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', c='g', alpha=0.6)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03687000274658203, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 36, 34, 33, 32, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='g', linewidth=3, linestyle='--')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = r\"Fit results: $\\mu={}$, $std={}$\".format(round(mu,2), round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 31, 40, 37, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03604698181152344, "tests_passed": true, "error": null}}
{"selected_lines": [40, 37, 32, 38, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins=5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = 'Fit results:\\nmu = {:.2f},\\nstd = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007918119430541992, "tests_passed": true, "error": null}}
{"selected_lines": [31, 38, 39, 36, 32, 34, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', alpha=0.5)\n    title = 'Fit results:\\nmu={0:.2f},  std={1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009308099746704102, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 38, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f\"Fit results: mu = {mu:.2f},  std = {std:.2f}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04441690444946289, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {mean:.2f},  std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.15243911743164062, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 35, 38, 37, 34, 32, 31, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', alpha=0.5, linewidth=2)\n    title = 'Fit results:\\nmu={0:.2f},  std={1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009157180786132812, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14501404762268066, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1502070426940918, "tests_passed": true, "error": null}}
{"selected_lines": [39, 33, 40, 37, 34, 38, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='b', alpha=0.6, linewidth=2, label='$\\mu=${:.2f},\\n $\\sigma$= {:.2f}'.format(mu,std))\n    title = rf'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008877992630004883, "tests_passed": true, "error": null}}
{"selected_lines": [37, 32, 31, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, linewidth=2, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.050189971923828125, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34, 40, 39, 36, 31, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, 50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std))\n    ax.plot(x, p, color='red', alpha=0.5, linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1640160083770752, "tests_passed": true, "error": null}}
{"selected_lines": [39, 34, 33, 32, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = {mu},  std = {std}\".format(mu=np.round(mu,2), std=np.round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 40, 36, 39, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins = 5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04155111312866211, "tests_passed": true, "error": null}}
{"selected_lines": [31, 38, 40, 35, 39, 33, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 38, 33, 37, 32, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', alpha=0.5, linewidth=2)\n    title = r\"Fit results: $\\mu={}$, $std={}$\".format(round(mu,2), round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007990837097167969, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 38, 32, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 32, 31, 33, 40, 37, 36, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2)\n    title = 'Fit results: mu = %.2f,  std = %.2f' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='b', alpha=0.6, linewidth=2, label='$\\mu=${:.2f},\\n $\\sigma$= {:.2f}'.format(mu,std))\n    title = \"Fit results: mu = \"+ str(round(mu,2)) + \", std = \" + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', alpha=0.5)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 31, 32, 38, 35, 36, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins=15, density=True, edgecolor='black')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = np.exp(-(x - mu) ** 2 / (2 * std ** 2)) / np.sqrt(2 * np.pi) / std\n    ax.plot(x, p, color='r', linewidth=2, linestyle='--')\n    title = f'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009727001190185547, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 40, 36, 33, 39, 34, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(4,4))\n    ax.hist(l, bins=np.arange(0, 10, 1))\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-')\n    ax.plot(x, p, color='r', linewidth=2, linestyle='--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 38, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = 'Fit results:\\nmu = {:.2f},\\nstd = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008712291717529297, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 38, 33, 40, 31, 39, 32, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(4,4))\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-')\n    ax.plot(x, p, 'r--', lw=2)\n    title = f\"Fit results: mu={round(mu, 2)}, std={round(std, 2)}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 40, 34, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03123927116394043, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.036853790283203125, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [37, 40, 39, 35, 31, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.05339789390563965, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32, 33, 39, 35, 31, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009010076522827148, "tests_passed": true, "error": null}}
{"selected_lines": [39, 34, 31, 37, 38, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = 'Fit results:\\nmu = {:.2f},\\nstd = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006311893463134766, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--', linewidth=1, label='2.5%')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 39, 35, 37, 36, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-', lw=2)\n    ax.plot(x, p, color='r', linewidth=2)\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu,std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 33, 37, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = f'Fit results:\\n{l} => mu = {mu:.2f}, std = {std:.2f}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0059969425201416016, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 33, 36, 32, 38, 35, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='red', alpha=0.5, linewidth=2)\n    title = 'Fit results: mu = %.2f,  std = %.2f' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03488492965698242, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = {mu},  std = {std}\".format(mu=np.round(mu,2), std=np.round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03621387481689453, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 32, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins = 5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r', alpha=0.5, label=r'$\\mu = {}$,  $\\sigma = {}$'.format(round(mu, 2), round(std, 2)))\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set(title=title, xlabel='x', ylabel='PDF')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 37, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', linewidth=1, color='b')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.036414146423339844, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 35, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f'Fit results: mu = {np.round(mu, 2)},  std = {np.round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009547948837280273, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f'Fit results: mu = {np.round(mu, 2)},  std = {np.round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.01077580451965332, "tests_passed": true, "error": null}}
{"selected_lines": [33, 40, 35, 36, 32, 34, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=np.arange(0, 10, 1))\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 33, 31, 37, 38, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1,1, figsize=(8,4))\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = np.exp(-(x - mu) ** 2 / (2 * std ** 2)) / np.sqrt(2 * np.pi) / std\n    ax.plot(x, p)\n    title = 'Fit results:\\nmu = {},\\nstd = {}'.format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.00922393798828125, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14645719528198242, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14501404762268066, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 35, 31, 34, 33, 36, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='red', alpha=0.5, linewidth=2)\n    title = 'Fit results: mu = {mean:.2f},  std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 33, 34, 31, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0437159538269043, "tests_passed": true, "error": null}}
{"selected_lines": [38, 31, 40, 39, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f\"Fit results: mu = {mu:.2f},  std = {std:.2f}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03217482566833496, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.033926963806152344, "tests_passed": true, "error": null}}
{"selected_lines": [40, 32, 34, 39, 36, 38, 33, 35, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03191709518432617, "tests_passed": true, "error": null}}
{"selected_lines": [39, 40, 32, 35, 37, 36, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True, bins=np.arange(0, 9, 0.1))\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1640160083770752, "tests_passed": true, "error": null}}
{"selected_lines": [31, 39, 34, 35, 36, 38, 32, 33, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2, linestyle='--')\n    title = 'Fit results: mu = {mean:.2f}, std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006827116012573242, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 37, 38, 36, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='b', alpha=0.6, linewidth=2, label='$\\mu=${:.2f},\\n $\\sigma$= {:.2f}'.format(mu,std))\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ', std = ' + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0059719085693359375, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 36, 32, 35, 38, 39, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, 50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2, label='pdf')\n    ax.plot(x, p, 'k-', linewidth=2, label='best-fit')\n    title = r\"Fit results: mu = {mean},  std = {standard deviation}\".format(mean=round(mu, 2),\\\n    ax.set(title=title, xlabel='x', ylabel='PDF')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True, bins=np.arange(0, 9, 0.1))\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.09407901763916016, "tests_passed": false, "error": "AttributeError"}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14702796936035156, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(10,3))\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.024212121963500977, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32, 40, 31, 34, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03849196434020996, "tests_passed": true, "error": null}}
{"selected_lines": [37, 32, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='b', alpha=0.6, linewidth=2, label='$\\mu=${:.2f},\\n $\\sigma$= {:.2f}'.format(mu,std))\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04020214080810547, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 34, 33, 36, 39, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2, label='pdf')\n    ax.plot(x, p, '--', linewidth=1, color='b')\n    title = \"Fit results: mu = \"+ str(round(mu,2)) + \", std = \" + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.15573787689208984, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 39, 31, 33, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 2)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 31, 35, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.029242753982543945, "tests_passed": true, "error": null}}
{"selected_lines": [40, 37, 32, 38, 39, 33, 35, 34, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=15, density=True, edgecolor='black')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = 'Fit results: mu = {},  std = {:.2f}'.format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 39, 38, 36, 37, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = 'Fit results: mu = {:.2f},  std = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.035607099533081055, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 40, 34, 38, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=15, density=True, edgecolor='black')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu,std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37, 34, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--', linewidth=0.5)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.032158851623535156, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14645719528198242, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 40, 33, 34, 37, 38, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2, linestyle='--')\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ',  std = ' + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009154081344604492, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 31, 40, 34, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--', linewidth=1, label='2.5%')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.02746272087097168, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ', std = ' + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006849765777587891, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 37, 40, 38, 31, 39, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, 50)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='red', alpha=0.5, linewidth=2)\n    title = 'Fit results:\\nmu={0:.2f},  std={1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 40, 36, 32, 38, 31, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006548881530761719, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results:\\nmu = {:.2f},\\nstd = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 36, 39, 34, 35, 40, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(10,3))\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='g', linewidth=3, linestyle='--')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 33, 39, 40, 31, 35, 32, 37, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-')\n    ax.plot(x, p, 'k-', alpha=0.5, linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 36, 31, 40, 35, 37, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2, linestyle='--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.031011104583740234, "tests_passed": true, "error": null}}
{"selected_lines": [38, 31, 32, 39, 36, 37, 35, 33, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1,1, figsize=(8,4))\n    ax.hist(l, bins=5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = \"Fit results: mu = {mu},  std = {std}\".format(mu=np.round(mu,2), std=np.round(std,2))\n    ax.set(xlabel='Value', ylabel='Probability')\n    return ax", "compilation_passed": true, "time": 0.005803585052490234, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 32, 38, 31, 40, 33, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l, bins=15, density=True, edgecolor='black')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008531808853149414, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 37, 33, 36, 35, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.031919240951538086, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 36, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04160499572753906, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 40, 33, 37, 35, 32, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(4,4))\n    ax.hist(l, bins=20, density=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 38, 31, 37, 39, 32, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True, bins=np.arange(0, 9, 0.1))\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', alpha=0.5, linewidth=2)\n    title = ax.get_title()\n    ax.set(xlabel='Value', ylabel='Probability')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 34, 39, 35, 38, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006338834762573242, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 35, 31, 34, 32, 33, 40, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=50)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = r\"Fit results: mu = {mean},  std = {standard deviation}\".format(mean=round(mu, 2),\\\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 32, 35, 36, 34, 37, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l,bins=50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 1000)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std))\n    ax.plot(x, p, 'k--', linewidth=1, label='2.5%')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 31, 33, 37, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.029422760009765625, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 34, 33, 39, 36, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = {:.2f},  std = {:.2f}\".format(mu, std)\n    ax.set_title(title, loc='right')\n    return ax", "compilation_passed": true, "time": 0.013599872589111328, "tests_passed": true, "error": null}}
{"selected_lines": [40, 37, 39, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.038162946701049805, "tests_passed": true, "error": null}}
{"selected_lines": [39, 40, 33, 32, 36, 31, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l, 50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std))\n    ax.plot(x, p, 'k--', linewidth=0.5)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std))\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0380861759185791, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [32, 31, 38, 39, 37, 40, 33, 34, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='blue', linewidth=2, label='$\\mu=%.2f,\\sigma=%.2f$'%(mu,std))\n    title = f'Fit results:\\n{l} => mu = {mu:.2f}, std = {std:.2f}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.013093948364257812, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {},  std = {:.2f}'.format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008327007293701172, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 33, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1)\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--', linewidth=1, label='2.5%')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03365302085876465, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 34, 38, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', alpha=0.5, linewidth=2)\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ',  std = ' + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007966995239257812, "tests_passed": true, "error": null}}
{"selected_lines": [40, 32, 37, 34, 36, 31, 35, 39, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='red', alpha=0.5, linewidth=2)\n    title = f\"Fit results: mu={round(mu, 2)}, std={round(std, 2)}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008619070053100586, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35, 33, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 2)\n    p = np.exp(-(x - mu) ** 2 / (2 * std ** 2)) / np.sqrt(2 * np.pi) / std\n    ax.plot(x, p, 'k--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03125309944152832, "tests_passed": true, "error": null}}
{"selected_lines": [39, 32, 34, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.038485050201416016, "tests_passed": true, "error": null}}
{"selected_lines": [38, 33, 32, 34, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03402590751647949, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 31, 38, 36, 34, 37, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', label='PDF')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.028137922286987305, "tests_passed": true, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(16, 10))\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14246797561645508, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = rf'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03701472282409668, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 36, 31, 37, 33, 35, 34, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20, density=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = ax.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2)\n    ax.plot(x, p, color='r')\n    title = r\"Fit results: mu = {mean},  std = {standard deviation}\".format(mean=round(mu, 2),\\\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 38, 37, 39, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', lw=1)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.014537334442138672, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 36, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.set_title(\"Fit results: mu={0:.2f}, std={1:.2f}\".format(stats.norm.mean(l), stats.norm.std(l)), fontsize=12)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title, loc='right')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37, 32, 34, 40, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1,1, figsize=(8,4))\n    ax.hist(l, bins=20)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = ax.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2)\n    ax.plot(x, p, 'k', alpha=0.5, linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', alpha=0.5, linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.15313315391540527, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14681696891784668, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 39, 34, 32, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04805183410644531, "tests_passed": true, "error": null}}
{"selected_lines": [40, 33, 31, 35, 39, 34, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03441810607910156, "tests_passed": true, "error": null}}
{"selected_lines": [39, 40, 34, 32, 36, 35, 31, 33, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f\"Fit results: mu={round(mu, 2)}, std={round(std, 2)}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006908893585205078, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 39, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 38, 33, 31, 35, 39, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', alpha=0.5, linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006780385971069336, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 37, 32, 35, 33, 40, 34, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=15, density=True, edgecolor='black')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 200)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std))\n    ax.plot(x, p, color='r')\n    title = f'Fit results:\\n{l} => mu = {mu:.2f}, std = {std:.2f}'\n    ax.set(xlabel='Value', ylabel='Probability')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 37, 39, 36, 34, 40, 32, 35, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.set_title(\"Fit results: mu={0:.2f}, std={1:.2f}\".format(stats.norm.mean(l), stats.norm.std(l)), fontsize=12)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', alpha=0.5)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20, density=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 40, 34, 33, 37, 35, 36, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='red', alpha=0.5, linewidth=2)\n    title = f'Fit results:\\n{l} => mu = {mu:.2f}, std = {std:.2f}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006462812423706055, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 35, 36, 33, 34, 40, 39, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='g', linewidth=3, linestyle='--')\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = \"Fit results: mu = {:.2f},  std = {:.2f}\".format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [37, 32, 35, 39, 40, 38, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, linewidth=2, color='r')\n    title = \"Fit results: mu = \"+ str(round(mu,2)) + \", std = \" + str(round(std, 2))\n    ax.set(title=title, xlabel='x', ylabel='PDF')\n    return ax", "compilation_passed": true, "time": 0.007901906967163086, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 31, 37, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=1, linestyle='--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 35, 36, 32, 31, 40, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 33, 31, 32, 35, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 31, 33, 36, 32, 37, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(4,4))\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-')\n    ax.plot(x, p, color='r', linewidth=2, linestyle='--')\n    title = 'Fit results: mu = {:.2f},  std = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 38, 32, 33, 31, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.set_title(\"Fit results: mu={0:.2f}, std={1:.2f}\".format(stats.norm.mean(l), stats.norm.std(l)), fontsize=12)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', linewidth=2, label='best-fit')\n    title = 'Fit results: mu = {mean:.2f},  std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 33, 39, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 31, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True, bins=np.arange(0, 9, 0.1))\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.036853790283203125, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [35, 34, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03799319267272949, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'k')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36, 33, 31, 38, 35, 39, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = np.exp(-(x - mu) ** 2 / (2 * std ** 2)) / np.sqrt(2 * np.pi) / std\n    ax.plot(x, p, 'k-', lw=1)\n    title = 'Fit results:\\nmu={0:.2f},  std={1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', alpha=0.5, linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.030805110931396484, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 37, 35, 32, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins = 5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2, linestyle='--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.026135683059692383, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 33, 36, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 36, 35, 38, 40, 31, 34, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = ax.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2)\n    ax.plot(x, p, linewidth=2, color='r')\n    title = \"Fit results: mu = \"+ str(round(mu,2)) + \", std = \" + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 32, 36, 34, 39, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='g', linewidth=3, linestyle='--')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 32, 33, 38, 36, 31, 39, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-')\n    ax.plot(x, p, '--', color='r')\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 39, 36, 38, 34, 35, 31, 32, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std))\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = {:.2f},  std = {:.2f}\".format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', linewidth=1, color='b')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.02805185317993164, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.036853790283203125, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [39, 32, 31, 40, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set(title=title, xlabel='x', ylabel='PDF')\n    return ax", "compilation_passed": true, "time": 0.030004262924194336, "tests_passed": true, "error": null}}
{"selected_lines": [38, 39, 32, 37, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=np.arange(0, 10, 1))\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = 'Fit results:\\nmu = {:.2f},\\nstd = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006967782974243164, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 39, 33, 32, 34, 37, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std))\n    ax.plot(x, p, 'k--', linewidth=1, label='2.5%')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36, 39, 31, 34, 38, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l,bins=50)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results:\\nmu={0:.2f},  std={1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 38, 34, 31, 33, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='r')\n    title = 'Fit results: mu = %.2f,  std = %.2f' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31, 34, 35, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', c='g', alpha=0.6)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.02452826499938965, "tests_passed": true, "error": null}}
{"selected_lines": [35, 39, 40, 37, 38, 32, 34, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, linewidth=2, color='r')\n    title = 'Fit results:\\nmu={0:.2f},  std={1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008830070495605469, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', label='PDF')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.02996087074279785, "tests_passed": true, "error": null}}
{"selected_lines": [33, 39, 40, 32, 35, 34, 38, 31, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, normed=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='b', alpha=0.6, linewidth=2, label='$\\mu=${:.2f},\\n $\\sigma$= {:.2f}'.format(mu,std))\n    title = \"Fit results: mu = \"+ str(round(mu,2)) + \", std = \" + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', alpha=0.5, linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14829707145690918, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 33, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32, 35, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins = 5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu,std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03912615776062012, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 35, 32, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins = 5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--', linewidth=0.5)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03800606727600098, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 37, 34, 38, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color=\"green\", linewidth=2)\n    title = 'Fit results:\\nmu = {:.2f},\\nstd = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007606029510498047, "tests_passed": true, "error": null}}
{"selected_lines": [39, 33, 38, 36, 34, 32, 35, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = \"+ str(round(mu,2)) + \", std = \" + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.00774693489074707, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 40, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2, label='pdf')\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14681696891784668, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 38, 32, 31, 36, 37, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.set_title(\"Fit results: mu={0:.2f}, std={1:.2f}\".format(stats.norm.mean(l), stats.norm.std(l)), fontsize=12)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--', linewidth=0.5)\n    title = rf'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 38, 32, 39, 33, 34, 40, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = np.exp(-(x - mu) ** 2 / (2 * std ** 2)) / np.sqrt(2 * np.pi) / std\n    ax.plot(x, p, linewidth=2, color='r')\n    title = 'Fit results: mu = {mean:.2f}, std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 33, 37, 34, 38, 39, 31, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-', lw=2)\n    ax.plot(x, p, 'k--')\n    title = f\"Fit results: mu = {mu:.2f},  std = {std:.2f}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 31, 37, 40, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2, label='pdf')\n    ax.plot(x, p, color='k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 38, 31, 33, 32, 36, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1)\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = (\"Fit results: mu = {},  std = {}\").format(round(mu, 2), round(std, 2))\n    ax.set(xlabel='Value', ylabel='Probability')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 33, 36, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-', lw=2)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 40, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {},  std = {:.2f}'.format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007051944732666016, "tests_passed": true, "error": null}}
{"selected_lines": [37, 32, 35, 40, 38, 33, 36, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True, histtype='step',\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', alpha=0.5, linewidth=2)\n    title = rf'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0354459285736084, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = r'$mu=%.2f,\\ \\sigma=%.2f$' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04705214500427246, "tests_passed": true, "error": null}}
{"selected_lines": [40, 37, 35, 34, 32, 31, 36, 38, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(4,4))\n    ax.hist(l, normed=True, bins=np.arange(0, 9, 0.1))\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 2)\n    p = np.exp(-(x - mu) ** 2 / (2 * std ** 2)) / np.sqrt(2 * np.pi) / std\n    ax.plot(x, p, color=\"green\", linewidth=2)\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 31, 38, 39, 40, 33, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = rf'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.00824594497680664, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 37, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', linewidth=1, color='b')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 38, 35, 40, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'r--', lw=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008234977722167969, "tests_passed": true, "error": null}}
{"selected_lines": [31, 40, 35, 34, 36, 32, 37, 38, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=np.arange(0, 10, 1))\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = \"Fit results: mu = {mu},  std = {std}\".format(mu=np.round(mu,2), std=np.round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008423089981079102, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.20397281646728516, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=1, linestyle='--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1485271453857422, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 33, 40, 38, 32, 36, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f'Fit results:\\n{l} => mu = {mu:.2f}, std = {std:.2f}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008134126663208008, "tests_passed": true, "error": null}}
{"selected_lines": [39, 32, 40, 38, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results:\\nmu = {:.2f},\\nstd = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009186983108520508, "tests_passed": true, "error": null}}
{"selected_lines": [33, 39, 40, 32, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04123711585998535, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 35, 37, 31, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'r--', lw=2)\n    title = f'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009782075881958008, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 37, 32, 33, 38, 31, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', c='g', alpha=0.6)\n    title = r\"Fit results: $\\mu={}$, $std={}$\".format(round(mu,2), round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009377002716064453, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 37, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', label='PDF')\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu,std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03430008888244629, "tests_passed": true, "error": null}}
{"selected_lines": [39, 35, 33, 38, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results:\\nmu={0:.2f},  std={1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 40, 32, 33, 31, 38, 35, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1,1, figsize=(8,4))\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 2)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r', alpha=0.5, label=r'$\\mu = {}$,  $\\sigma = {}$'.format(round(mu, 2), round(std, 2)))\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = {mu},  std = {std}\".format(mu=np.round(mu,2), std=np.round(std,2))\n    ax.set(xlabel='Value', ylabel='Probability')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 32, 37, 40, 31, 38, 39, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = f'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008582830429077148, "tests_passed": true, "error": null}}
{"selected_lines": [40, 35, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 39, 33, 32, 37, 31, 36, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std))\n    ax.plot(x, p, 'k', alpha=0.5, linewidth=2)\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ',  std = ' + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.036853790283203125, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [37, 35, 34, 31, 33, 32, 40, 39, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True, bins=np.arange(0, 9, 0.1))\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color=\"green\", linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31, 37, 35, 34, 33, 32, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-')\n    ax.plot(x, p, color='red', alpha=0.5, linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 38, 37, 36, 32, 39, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = ax.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2)\n    ax.plot(x, p, color='r')\n    title = r\"Fit results: $\\mu={}$, $std={}$\".format(round(mu,2), round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', linewidth=1, color='b')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.034577369689941406, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 35, 31, 40, 33, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, 50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.08040904998779297, "tests_passed": true, "error": null}}
{"selected_lines": [32, 36, 40, 39, 35, 38, 37, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10, density=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2, label='pdf')\n    ax.plot(x, p, color='r')\n    title = f\"Fit results: mu = {mu:.2f},  std = {std:.2f}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 37, 32, 35, 33, 40, 38, 36, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--', linewidth=1, label='2.5%')\n    title = 'Fit results: mu = {mean:.2f},  std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04155302047729492, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 35, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins = 5)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 39, 36, 40, 33, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', alpha=0.5, linewidth=2)\n    title = 'Fit results:\\nmu = {:.2f},\\nstd = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007896900177001953, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 36, 31, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='red', alpha=0.5, linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 35, 32, 38, 33, 31, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l,bins=50)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 2)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 40, 35, 31, 33, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r', alpha=0.5, label=r'$\\mu = {}$,  $\\sigma = {}$'.format(round(mu, 2), round(std, 2)))\n    ax.plot(x, p)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 33, 40, 37, 38, 39, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2, linestyle='--')\n    title = (\"Fit results: mu = {},  std = {}\").format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 40, 38, 35, 36, 31, 34, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'k')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 36, 32, 39, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 36, 32, 31, 33, 35, 38, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = (\"Fit results: mu = {},  std = {}\").format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14501404762268066, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 37, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2, label='pdf')\n    ax.plot(x, p, color='k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 37, 31, 38, 40, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = np.exp(-(x - mu) ** 2 / (2 * std ** 2)) / np.sqrt(2 * np.pi) / std\n    ax.plot(x, p, color='k', linewidth=2)\n    title = f\"Fit results: mu = {mu:.2f},  std = {std:.2f}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0362858772277832, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 32, 39, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2, linestyle='--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.046340227127075195, "tests_passed": true, "error": null}}
{"selected_lines": [37, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', linewidth=1, color='b')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.02805185317993164, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 38, 34, 37, 36, 32, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True, histtype='step',\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color=\"green\", linewidth=2)\n    title = 'Fit results: mu = {},  std = {:.2f}'.format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 39, 40, 34, 32, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009966135025024414, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 34, 36, 37, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', label='PDF')\n    title = r\"Fit results: $\\mu={}$, $std={}$\".format(round(mu,2), round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009546995162963867, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 31, 39, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {},  std = {:.2f}'.format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.011384963989257812, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 38, 32, 36, 39, 31, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', linewidth=2, label='best-fit')\n    title = f'Fit results:\\n{l} => mu = {mu:.2f}, std = {std:.2f}'\n    ax.set(xlabel='Value', ylabel='Probability')\n    return ax", "compilation_passed": true, "time": 0.01875782012939453, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [39, 31, 38, 40, 32, 37, 34, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=1, linestyle='--')\n    title = r\"Fit results: $\\mu={}$, $std={}$\".format(round(mu,2), round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 39, 34, 31, 38, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1)\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', linewidth=2, label='best-fit')\n    title = 'Fit results: mu = {mean:.2f},  std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03719305992126465, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 39, 40, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set(xlabel='Value', ylabel='Probability')\n    return ax", "compilation_passed": true, "time": 0.008141040802001953, "tests_passed": true, "error": null}}
{"selected_lines": [33, 39, 36, 31, 40, 37, 34, 32, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.set_title(\"Fit results: mu={0:.2f}, std={1:.2f}\".format(stats.norm.mean(l), stats.norm.std(l)), fontsize=12)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu,std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.16669607162475586, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 39, 32, 36, 37, 31, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True, histtype='step',\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-')\n    ax.plot(x, p, 'k--', linewidth=0.5)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 32, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set(title=title, xlabel='x', ylabel='PDF')\n    return ax", "compilation_passed": true, "time": 0.03627800941467285, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [32, 39, 34, 36, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.036401987075805664, "tests_passed": true, "error": null}}
{"selected_lines": [31, 39, 38, 40, 37, 34, 36, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', alpha=0.5)\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ', std = ' + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007879972457885742, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results:\\nmu = {:.2f},\\nstd = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03485894203186035, "tests_passed": true, "error": null}}
{"selected_lines": [31, 38, 36, 32, 33, 34, 39, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True, bins=np.arange(0, 9, 0.1))\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'k')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 31, 36, 32, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04360699653625488, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r', alpha=0.5, label=r'$\\mu = {}$,  $\\sigma = {}$'.format(round(mu, 2), round(std, 2)))\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 37, 31, 35, 33, 39, 40, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', c='g', alpha=0.6)\n    title = \"Fit results: mu = \"+ str(round(mu,2)) + \", std = \" + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 32, 35, 31, 39, 33, 38, 34, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins = 5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'r--', lw=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008497953414916992, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 39, 36, 37, 40, 33, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=15, density=True, edgecolor='black')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', c='g', alpha=0.6)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14501404762268066, "tests_passed": true, "error": null}}
{"selected_lines": [33, 40, 39, 38, 36, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f\"Fit results: mu={round(mu, 2)}, std={round(std, 2)}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009139060974121094, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True, histtype='step',\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 32, 38, 40, 33, 34, 36, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.set_title(\"Fit results: mu={0:.2f}, std={1:.2f}\".format(stats.norm.mean(l), stats.norm.std(l)), fontsize=12)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2, label='pdf')\n    ax.plot(x, p, 'k-', label='PDF')\n    title = rf'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 34, 38, 37, 35, 36, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='r')\n    title = r\"Fit results: $\\mu={}$, $std={}$\".format(round(mu,2), round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008052825927734375, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = np.exp(-(x - mu) ** 2 / (2 * std ** 2)) / np.sqrt(2 * np.pi) / std\n    ax.plot(x, p)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04295492172241211, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 39, 34, 32, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04805183410644531, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f'Fit results: mu = {np.round(mu, 2)},  std = {np.round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.05133485794067383, "tests_passed": true, "error": null}}
{"selected_lines": [36, 32, 40, 39, 37, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', linewidth=2, label='best-fit')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title, loc='right')\n    return ax", "compilation_passed": true, "time": 0.01161503791809082, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 39, 31, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', label='PDF')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37, 40, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='b', alpha=0.6, linewidth=2, label='$\\mu=${:.2f},\\n $\\sigma$= {:.2f}'.format(mu,std))\n    title = \"Fit results: mu = {mu},  std = {std}\".format(mu=np.round(mu,2), std=np.round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'r--', lw=2)\n    title = \"Fit results: mu = {:.2f},  std = {:.2f}\".format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04411602020263672, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = np.exp(-(x - mu)**2 / (2 * std**2)) / (std * np.sqrt(2 * np.pi))\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03891897201538086, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 33, 38, 40, 32, 37, 34, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu,std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.045968055725097656, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 31, 38, 36, 35, 37, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', c='g', alpha=0.6)\n    title = f'Fit results: mu = {np.round(mu, 2)},  std = {np.round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009746074676513672, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 34, 38, 39, 31, 37, 36, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2, label='pdf')\n    ax.plot(x, p, color='r', linewidth=1, linestyle='--')\n    title = 'Fit results:\\nmu = {:.2f},\\nstd = {:.2f}'.format(mu, std)\n    ax.set(title=title, xlabel='x', ylabel='PDF')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 33, 34, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 33, 36, 32, 40, 35, 31, 37, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = 'Fit results: mu = {mean:.2f}, std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.011703014373779297, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 39, 31, 36, 32, 35, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 31, 38, 39, 36, 33, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ',  std = ' + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.010690927505493164, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 35, 37, 32, 39, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set(title=title, xlabel='x', ylabel='PDF')\n    return ax", "compilation_passed": true, "time": 0.04591703414916992, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 35, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(4,4))\n    ax.hist(l, bins=5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.040730953216552734, "tests_passed": true, "error": null}}
{"selected_lines": [35, 39, 38, 40, 36, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2, label='pdf')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f\"Fit results: mu = {mu:.2f},  std = {std:.2f}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32, 40, 33, 38, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1,1, figsize=(8,4))\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f'Fit results:\\n{l} => mu = {mu:.2f}, std = {std:.2f}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009392976760864258, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 36, 39, 32, 35, 33, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1,1, figsize=(8,4))\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results:\\nmu = {:.2f},\\nstd = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 39, 34, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='g', linewidth=3, linestyle='--')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ',  std = ' + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009006023406982422, "tests_passed": true, "error": null}}
{"selected_lines": [31, 40, 35, 38, 34, 37, 32, 36, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(4,4))\n    ax.hist(l, bins=np.arange(0, 10, 1))\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='g', linewidth=3, linestyle='--')\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 34, 39, 35, 38, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006338834762573242, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 40, 35, 38, 34, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f'Fit results: mu = {np.round(mu, 2)},  std = {np.round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.012752294540405273, "tests_passed": true, "error": null}}
{"selected_lines": [34, 32, 36, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04160499572753906, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=15, density=True, edgecolor='black')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r', alpha=0.5, label=r'$\\mu = {}$,  $\\sigma = {}$'.format(round(mu, 2), round(std, 2)))\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 34, 38, 40, 32, 39, 31, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = f'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009902715682983398, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 37, 39, 36, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03981208801269531, "tests_passed": true, "error": null}}
{"selected_lines": [39, 32, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 32, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = np.exp(-(x - mu)**2 / (2 * std**2)) / (std * np.sqrt(2 * np.pi))\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04646778106689453, "tests_passed": true, "error": null}}
{"selected_lines": [39, 32, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', c='g', alpha=0.6)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.05269622802734375, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 38, 33, 39, 40, 34, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True, bins=np.arange(0, 9, 0.1))\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'r--', lw=2)\n    title = f'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 37, 35, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=1, linestyle='--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0463259220123291, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 38, 40, 36, 32, 31, 35, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1,1, figsize=(8,4))\n    ax.hist(l, density=1)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {},  std = {:.2f}'.format(round(mu, 2), round(std, 2))\n    ax.set(title=title, xlabel='x', ylabel='PDF')\n    return ax", "compilation_passed": true, "time": 0.009029150009155273, "tests_passed": true, "error": null}}
{"selected_lines": [34, 33, 40, 39, 35, 31, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l, normed=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 32, 38, 35, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu,std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03982424736022949, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 36, 33, 35, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'k')\n    ax.plot(x, p, color='r', linewidth=1, linestyle='--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 36, 32, 34, 31, 37, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', label='PDF')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0918128490447998, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 32, 33, 36, 35, 37, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = r\"Fit results: mu = {mean},  std = {standard deviation}\".format(mean=round(mu, 2),\\\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 34, 32, 37, 39, 38, 31, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='k', linewidth=2)\n    title = 'Fit results:\\nmu = {},\\nstd = {}'.format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 32, 34, 33, 39, 40, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set(title=title, xlabel='x', ylabel='PDF')\n    return ax", "compilation_passed": true, "time": 0.08193707466125488, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1550760269165039, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True, bins=np.arange(0, 9, 0.1))\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f\"Fit results: mu={round(mu, 2)}, std={round(std, 2)}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 31, 39, 40, 35, 37, 32, 36, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 200)\n    p = ax.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2)\n    ax.plot(x, p, '--', c='g', alpha=0.6)\n    title = 'Fit results:\\nmu = {},\\nstd = {}'.format(round(mu, 2), round(std, 2))\n    ax.set_title(title, loc='right')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 40, 34, 37, 33, 38, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='blue', linewidth=2, label='$\\mu=%.2f,\\sigma=%.2f$'%(mu,std))\n    title = f\"Fit results: mu = {mu:.2f},  std = {std:.2f}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 39, 33, 38, 37, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', label='PDF')\n    title = ax.get_title()\n    ax.set(title=title, xlabel='x', ylabel='PDF')\n    return ax", "compilation_passed": true, "time": 0.008275032043457031, "tests_passed": true, "error": null}}
{"selected_lines": [32, 39, 33, 36, 38, 37, 31, 40, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--', linewidth=0.5)\n    title = \"Fit results: mu = {:.2f},  std = {:.2f}\".format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03266191482543945, "tests_passed": true, "error": null}}
{"selected_lines": [32, 33, 36, 37, 31, 39, 35, 40, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', alpha=0.5, linewidth=2)\n    title = \"Fit results: mu = {:.2f},  std = {:.2f}\".format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.032865047454833984, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32, 37, 39, 33, 34, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='b', alpha=0.6, linewidth=2, label='$\\mu=${:.2f},\\n $\\sigma$= {:.2f}'.format(mu,std))\n    title = r\"Fit results: $\\mu={}$, $std={}$\".format(round(mu,2), round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.026812314987182617, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 31, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = {mu},  std = {std}\".format(mu=np.round(mu,2), std=np.round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007378816604614258, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 33, 37, 35, 34, 39, 31, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1,1, figsize=(8,4))\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='g', linewidth=3, linestyle='--')\n    ax.plot(x, p, color=\"green\", linewidth=2)\n    title = \"Fit results: mu = \"+ str(round(mu,2)) + \", std = \" + str(round(std, 2))\n    ax.set_title(title, loc='right')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 34, 33, 40, 31, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(16, 10))\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f\"Fit results: mu = {mu:.2f},  std = {std:.2f}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.027501821517944336, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 39, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {mean:.2f}, std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title, loc='right')\n    return ax", "compilation_passed": true, "time": 0.008910894393920898, "tests_passed": true, "error": null}}
{"selected_lines": [31, 39, 36, 33, 37, 35, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--', linewidth=0.5)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 38, 40, 39, 33, 36, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True, histtype='step',\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='g', linewidth=3, linestyle='--')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = (\"Fit results: mu = {},  std = {}\").format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 32, 37, 33, 35, 40, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l, normed=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2, label='pdf')\n    ax.plot(x, p, 'k--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14501404762268066, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 35, 32, 38, 31, 37, 34, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = 'Fit results: mu = {mean:.2f},  std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03965592384338379, "tests_passed": true, "error": null}}
{"selected_lines": [39, 40, 31, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(16, 10))\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f'Fit results:\\n{l} => mu = {mu:.2f}, std = {std:.2f}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0064890384674072266, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.033926963806152344, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = (\"Fit results: mu = {},  std = {}\").format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03812408447265625, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 37, 31, 33, 39, 32, 34, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins = 5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='r')\n    title = f'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0059239864349365234, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 32, 38, 37, 36, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', linewidth=1, color='b')\n    title = r\"Fit results: $\\mu={}$, $std={}$\".format(round(mu,2), round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36, 32, 39, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2, linestyle='--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.030118942260742188, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.19596099853515625, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 39, 31, 37, 40, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(4,4))\n    ax.set_title(\"Fit results: mu={0:.2f}, std={1:.2f}\".format(stats.norm.mean(l), stats.norm.std(l)), fontsize=12)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = 'Fit results: mu = %.2f,  std = %.2f' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 38, 37, 35, 33, 40, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ', std = ' + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 40, 39, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.set_title(\"Fit results: mu={0:.2f}, std={1:.2f}\".format(stats.norm.mean(l), stats.norm.std(l)), fontsize=12)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 36, 32, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {mean:.2f},  std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 34, 39, 38, 35, 36, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {mean:.2f}, std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006634950637817383, "tests_passed": true, "error": null}}
{"selected_lines": [37, 39, 32, 40, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03260517120361328, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 32, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = r\"Fit results: $\\mu={}$, $std={}$\".format(round(mu,2), round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0073261260986328125, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 37, 34, 33, 40, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', alpha=0.5)\n    title = f'Fit results:\\n{l} => mu = {mu:.2f}, std = {std:.2f}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009690046310424805, "tests_passed": true, "error": null}}
{"selected_lines": [33, 39, 36, 38, 37, 40, 35, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=15, density=True, edgecolor='black')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, linewidth=2, color='r')\n    title = r\"Fit results: $\\mu={}$, $std={}$\".format(round(mu,2), round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008076906204223633, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 36, 39, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std))\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 31, 39, 38, 36, 33, 35, 37, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2, linestyle='--')\n    title = 'Fit results: mu = {},  std = {:.2f}'.format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 39, 34, 36, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.036401987075805664, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 34, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', linewidth=2, label='best-fit')\n    title = r'$mu=%.2f,\\ \\sigma=%.2f$' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006078958511352539, "tests_passed": true, "error": null}}
{"selected_lines": [33, 34, 31, 32, 37, 40, 38, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(4,4))\n    ax.hist(l, bins=np.arange(0, 10, 1))\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 31, 36, 35, 39, 32, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--', linewidth=0.5)\n    title = rf'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008870124816894531, "tests_passed": true, "error": null}}
{"selected_lines": [39, 40, 38, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ',  std = ' + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.005886077880859375, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 33, 36, 37, 40, 34, 39, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=1, linestyle='--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.029912948608398438, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 34, 38, 37, 32, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', lw=1)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006697893142700195, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 36, 37, 40, 39, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2, linestyle='--')\n    title = r'$mu=%.2f,\\ \\sigma=%.2f$' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.005900144577026367, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.set_title(\"Fit results: mu={0:.2f}, std={1:.2f}\".format(stats.norm.mean(l), stats.norm.std(l)), fontsize=12)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03479790687561035, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='g', linewidth=3, linestyle='--')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03923797607421875, "tests_passed": false, "error": "ValueError"}}
{"selected_lines": [37, 33, 39, 34, 31, 40, 32, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=15, density=True, edgecolor='black')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', c='g', alpha=0.6)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03456521034240723, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 39, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r', alpha=0.5, label=r'$\\mu = {}$,  $\\sigma = {}$'.format(round(mu, 2), round(std, 2)))\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {mean:.2f}, std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 32, 34, 40, 38, 31, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results:\\nmu = {:.2f},\\nstd = {:.2f}'.format(mu, std)\n    ax.set(xlabel='Value', ylabel='Probability')\n    return ax", "compilation_passed": true, "time": 0.013714790344238281, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 31, 32, 37, 40, 36, 33, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--', linewidth=0.5)\n    title = r'$mu=%.2f,\\ \\sigma=%.2f$' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 34, 39, 35, 38, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006338834762573242, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 37, 32, 33, 35, 40, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = np.exp(-(x - mu) ** 2 / (2 * std ** 2)) / np.sqrt(2 * np.pi) / std\n    ax.plot(x, p, '--', color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.05125093460083008, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 31, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True, histtype='step',\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = ax.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 33, 40, 38, 37, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 2)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = 'Fit results: mu = {},  std = {:.2f}'.format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006519794464111328, "tests_passed": true, "error": null}}
{"selected_lines": [39, 40, 34, 32, 35, 33, 36, 31, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'k')\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 33, 31, 32, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=15, density=True, edgecolor='black')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {mean:.2f},  std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03581714630126953, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 35, 37, 36, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1,1, figsize=(8,4))\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', alpha=0.5, linewidth=2)\n    title = \"Fit results: mu = \"+ str(round(mu,2)) + \", std = \" + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0062677860260009766, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 36, 33, 37, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', alpha=0.5)\n    title = 'Fit results:\\nmu={0:.2f},  std={1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0066356658935546875, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 40, 34, 37, 33, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(10,3))\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = f\"Fit results: mu={round(mu, 2)}, std={round(std, 2)}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006418943405151367, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2, label='pdf')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {mean:.2f}, std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 34, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='g', linewidth=3, linestyle='--')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 38, 37, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-')\n    ax.plot(x, p, color='r')\n    title = f'Fit results: mu = {np.round(mu, 2)},  std = {np.round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 36, 39, 31, 32, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=15, density=True, edgecolor='black')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-', lw=2)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 31, 40, 34, 32, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l,bins=50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color=\"green\", linewidth=2)\n    title = f\"Fit results: mu={round(mu, 2)}, std={round(std, 2)}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.013527154922485352, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 35, 36, 39, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(4,4))\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r', alpha=0.5, label=r'$\\mu = {}$,  $\\sigma = {}$'.format(round(mu, 2), round(std, 2)))\n    ax.plot(x, p, 'k-', label='PDF')\n    title = 'Fit results:\\nmu={0:.2f},  std={1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', lw=1)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.025017976760864258, "tests_passed": true, "error": null}}
{"selected_lines": [39, 31, 40, 33, 32, 36, 38, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f\"Fit results: mu={round(mu, 2)}, std={round(std, 2)}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006819963455200195, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 40, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.02990889549255371, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ', std = ' + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006780862808227539, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 37, 34, 39, 31, 40, 36, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2, linestyle='--')\n    title = \"Fit results: mu = {mu},  std = {std}\".format(mu=np.round(mu,2), std=np.round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 39, 31, 35, 37, 34, 40, 36, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1,1, figsize=(8,4))\n    ax.hist(l, bins=10, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, linewidth=2, color='r')\n    title = r'$mu=%.2f,\\ \\sigma=%.2f$' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006630897521972656, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 33, 31, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l,bins=50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='b', alpha=0.6, linewidth=2, label='$\\mu=${:.2f},\\n $\\sigma$= {:.2f}'.format(mu,std))\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.06411290168762207, "tests_passed": true, "error": null}}
{"selected_lines": [39, 32, 35, 31, 38, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.set_title(\"Fit results: mu={0:.2f}, std={1:.2f}\".format(stats.norm.mean(l), stats.norm.std(l)), fontsize=12)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', linewidth=1, color='b')\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu,std)\n    ax.set_title(title, loc='right')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 31, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='blue', linewidth=2, label='$\\mu=%.2f,\\sigma=%.2f$'%(mu,std))\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03008103370666504, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.15099000930786133, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 37, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu,std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.024378299713134766, "tests_passed": true, "error": null}}
{"selected_lines": [38, 32, 34, 31, 40, 39, 36, 35, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=1, linestyle='--')\n    title = 'Fit results:\\nmu = {},\\nstd = {}'.format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007163286209106445, "tests_passed": true, "error": null}}
{"selected_lines": [31, 40, 33, 32, 36, 35, 39, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=np.arange(0, 10, 1))\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2, label='pdf')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 37, 39, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.038162946701049805, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 34, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.029484033584594727, "tests_passed": true, "error": null}}
{"selected_lines": [39, 34, 31, 36, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', linewidth=2, label='best-fit')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set(xlabel='Value', ylabel='Probability')\n    return ax", "compilation_passed": true, "time": 0.006307125091552734, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 34, 40, 31, 38, 32, 36, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006684064865112305, "tests_passed": true, "error": null}}
{"selected_lines": [39, 36, 33, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2, label='pdf')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 37, 35, 36, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2, linestyle='--')\n    title = 'Fit results: mu = {mean:.2f}, std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0059871673583984375, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 31, 34, 36, 32, 33, 39, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = np.exp(-(x - mu)**2 / (2 * std**2)) / (std * np.sqrt(2 * np.pi))\n    ax.plot(x, p, 'k', linewidth=2)\n    title = rf'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title, loc='right')\n    return ax", "compilation_passed": true, "time": 0.007092952728271484, "tests_passed": true, "error": null}}
{"selected_lines": [39, 34, 38, 36, 37, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r', alpha=0.5, label=r'$\\mu = {}$,  $\\sigma = {}$'.format(round(mu, 2), round(std, 2)))\n    ax.plot(x, p, '--', linewidth=1, color='b')\n    title = f'Fit results: mu = {np.round(mu, 2)},  std = {np.round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 38, 37, 35, 39, 40, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color=\"green\", linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006700038909912109, "tests_passed": true, "error": null}}
{"selected_lines": [40, 37, 34, 38, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=1, linestyle='--')\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.02433490753173828, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 34, 31, 32, 39, 40, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(4,4))\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = 'Fit results: mu = {mean:.2f},  std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03362417221069336, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 34, 36, 31, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set(xlabel='Value', ylabel='Probability')\n    return ax", "compilation_passed": true, "time": 0.03431391716003418, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {},  std = {:.2f}'.format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03658294677734375, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14645719528198242, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 35, 32, 39, 33, 34, 31, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', lw=1)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 37, 31, 34, 36, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = np.exp(-(x - mu) ** 2 / (2 * std ** 2)) / np.sqrt(2 * np.pi) / std\n    ax.plot(x, p, 'k--', linewidth=0.5)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0060062408447265625, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = rf'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007275104522705078, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 34, 39, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03620100021362305, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 38, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = 'Fit results: mu = {},  std = {:.2f}'.format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008391857147216797, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 33, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008717060089111328, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 34, 40, 39, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', linewidth=1, color='b')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title, loc='right')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007962226867675781, "tests_passed": true, "error": null}}
{"selected_lines": [40, 32, 37, 39, 38, 33, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins = 5)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', linewidth=1, color='b')\n    title = (\"Fit results: mu = {},  std = {}\").format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 40, 38, 32, 34, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=15, density=True, edgecolor='black')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.011800050735473633, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', linewidth=2, label='best-fit')\n    title = rf'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009412765502929688, "tests_passed": true, "error": null}}
{"selected_lines": [33, 37, 40, 35, 38, 34, 39, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = 'Fit results:\\nmu={0:.2f},  std={1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 33, 40, 31, 36, 37, 32, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='r')\n    title = \"Fit results: mu = {:.2f},  std = {:.2f}\".format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 31, 33, 34, 32, 35, 39, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', c='g', alpha=0.6)\n    title = \"Fit results: mu = {:.2f},  std = {:.2f}\".format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 40, 34, 37, 35, 39, 32, 38, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', alpha=0.5)\n    title = 'Fit results: mu = %.2f,  std = %.2f' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 32, 39, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu,std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.044954776763916016, "tests_passed": true, "error": null}}
{"selected_lines": [40, 31, 32, 36, 38, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=np.arange(0, 10, 1))\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = 'Fit results: mu = {mean:.2f},  std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.044363975524902344, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 39, 34, 32, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04805183410644531, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 39, 35, 38, 37, 34, 40, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins=np.arange(0, 10, 1))\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 2)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='blue', linewidth=2, label='$\\mu=%.2f,\\sigma=%.2f$'%(mu,std))\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009004831314086914, "tests_passed": true, "error": null}}
{"selected_lines": [31, 39, 32, 38, 33, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(16, 10))\n    ax.hist(l, normed=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std))\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 33, 32, 31, 35, 36, 39, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1,1, figsize=(8,4))\n    ax.hist(l, normed=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color=\"green\", linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 36, 38, 31, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r', alpha=0.5, label=r'$\\mu = {}$,  $\\sigma = {}$'.format(round(mu, 2), round(std, 2)))\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {:.2f},  std = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 36, 39, 40, 33, 31, 34, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', lw=1)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 38, 35, 37, 32, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2, linestyle='--')\n    title = f'Fit results:\\n{l} => mu = {mu:.2f}, std = {std:.2f}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.013757944107055664, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 36, 34, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', label='PDF')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03587985038757324, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1640160083770752, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 38, 34, 40, 35, 31, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = 'Fit results: mu = {mean:.2f},  std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03899121284484863, "tests_passed": true, "error": null}}
{"selected_lines": [39, 32, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04466509819030762, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 40, 38, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ', std = ' + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 34, 40, 33, 32, 37, 35, 39, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1, 1)\n    ax.set_title(\"Fit results: mu={0:.2f}, std={1:.2f}\".format(stats.norm.mean(l), stats.norm.std(l)), fontsize=12)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', c='g', alpha=0.6)\n    title = f\"Fit results: mu = {mu:.2f},  std = {std:.2f}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 33, 39, 36, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = ax.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {mean:.2f}, std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set(xlabel='Value', ylabel='Probability')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 34, 31, 35, 39, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='g', linewidth=3, linestyle='--')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.16131997108459473, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 34, 32, 35, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008714914321899414, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 39, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-', lw=2)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 36, 37, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='g', linewidth=3, linestyle='--')\n    ax.plot(x, p, color='r', alpha=0.5)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 38, 39, 34, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', alpha=0.5)\n    title = (\"Fit results: mu = {},  std = {}\").format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008799076080322266, "tests_passed": true, "error": null}}
{"selected_lines": [32, 40, 37, 34, 33, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins = 5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='red', alpha=0.5, linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.040802955627441406, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 31, 38, 40, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009279012680053711, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 32, 34, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, normed=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {:.2f},  std = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 33, 36, 32, 35, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=50)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 36, 34, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-', lw=2)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 32, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', label='PDF')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14595484733581543, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 38, 33, 39, 32, 37, 34, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = f\"Fit results: mu = {mu:.2f},  std = {std:.2f}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.05151104927062988, "tests_passed": true, "error": null}}
{"selected_lines": [35, 39, 32, 40, 38, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.08461809158325195, "tests_passed": true, "error": null}}
{"selected_lines": [40, 31, 36, 37, 38, 39, 32, 35, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True, histtype='step',\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 2)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='b', alpha=0.6, linewidth=2, label='$\\mu=${:.2f},\\n $\\sigma$= {:.2f}'.format(mu,std))\n    title = 'Fit results: mu = {mean:.2f},  std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 40, 33, 35, 34, 31, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1,1, figsize=(8,4))\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = {mu},  std = {std}\".format(mu=np.round(mu,2), std=np.round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 37, 40, 35, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = \"Fit results: mu = {mu},  std = {std}\".format(mu=np.round(mu,2), std=np.round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.012890815734863281, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 38, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2, linestyle='--')\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009658098220825195, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 32, 33, 35, 39, 38, 36, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f'Fit results: mu = {np.round(mu, 2)},  std = {np.round(std, 2)}'\n    ax.set(xlabel='Value', ylabel='Probability')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34, 35, 32, 33, 36, 38, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', linewidth=2, label='best-fit')\n    title = \"Fit results: mu = {mu},  std = {std}\".format(mu=np.round(mu,2), std=np.round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 40, 32, 39, 34, 31, 36, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'k')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = \"+ str(round(mu,2)) + \", std = \" + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14595484733581543, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 38, 40, 35, 32, 31, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--', linewidth=1, label='2.5%')\n    title = rf'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 38, 35, 33, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='red', alpha=0.5, linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03517794609069824, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 36, 33, 32, 39, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(4,4))\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 2)\n    p = np.exp(-(x - mu)**2 / (2 * std**2)) / (std * np.sqrt(2 * np.pi))\n    ax.plot(x, p, linewidth=2, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03966689109802246, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 32, 40, 38, 39, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='k', linewidth=2)\n    title = f\"Fit results: mu={round(mu, 2)}, std={round(std, 2)}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.01063680648803711, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.15597295761108398, "tests_passed": true, "error": null}}
{"selected_lines": [31, 36, 35, 39, 37, 40, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(10,3))\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = np.exp(-(x - mu)**2 / (2 * std**2)) / (std * np.sqrt(2 * np.pi))\n    ax.plot(x, p, 'r--', lw=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04180622100830078, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 37, 35, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(4,4))\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2, linestyle='--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.039188385009765625, "tests_passed": true, "error": null}}
{"selected_lines": [34, 37, 38, 31, 36, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='blue', linewidth=2, label='$\\mu=%.2f,\\sigma=%.2f$'%(mu,std))\n    title = 'Fit results: mu = {},  std = {:.2f}'.format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009916067123413086, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.032163143157958984, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.046279191970825195, "tests_passed": true, "error": null}}
{"selected_lines": [33, 36, 40, 32, 39, 31, 35, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1,1, figsize=(8,4))\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set(title=title, xlabel='x', ylabel='PDF')\n    return ax", "compilation_passed": true, "time": 0.04491615295410156, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 32, 37, 39, 34, 35, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=15, density=True, edgecolor='black')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', alpha=0.5)\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu,std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.05098891258239746, "tests_passed": true, "error": null}}
{"selected_lines": [35, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=np.arange(0, 10, 1))\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0408787727355957, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38, 33, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = {mu},  std = {std}\".format(mu=np.round(mu,2), std=np.round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 34, 39, 32, 36, 38, 31, 35, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 2)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = f'Fit results: mu = {np.round(mu, 2)},  std = {np.round(std, 2)}'\n    ax.set(xlabel='Value', ylabel='Probability')\n    return ax", "compilation_passed": true, "time": 0.00882720947265625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 31, 37, 35, 33, 34, 36, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-', lw=2)\n    ax.plot(x, p, 'k-', linewidth=2, label='best-fit')\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 40, 37, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True, histtype='step',\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = np.exp(-(x - mu)**2 / (2 * std**2)) / (std * np.sqrt(2 * np.pi))\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32, 31, 40, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(16, 10))\n    ax.hist(l,bins=50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = ax.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu,std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 37, 31, 32, 34, 35, 33, 40, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l, bins=np.arange(0, 10, 1))\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04321479797363281, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14501404762268066, "tests_passed": true, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1502070426940918, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 33, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r', alpha=0.5, label=r'$\\mu = {}$,  $\\sigma = {}$'.format(round(mu, 2), round(std, 2)))\n    ax.plot(x, p, 'k-', label='PDF')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.27909207344055176, "tests_passed": true, "error": null}}
{"selected_lines": [32, 34, 40, 36, 33, 39, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 31, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 40, 33, 34, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color=\"green\", linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.05059385299682617, "tests_passed": true, "error": null}}
{"selected_lines": [31, 40, 38, 34, 33, 39, 32, 37, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l, density=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ', std = ' + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0354459285736084, "tests_passed": true, "error": null}}
{"selected_lines": [33, 40, 35, 39, 38, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {mean:.2f},  std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 38, 36, 40, 32, 34, 39, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std))\n    ax.plot(x, p, 'k--')\n    title = f'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.27909207344055176, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=1, linestyle='--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1485271453857422, "tests_passed": true, "error": null}}
{"selected_lines": [34, 39, 40, 36, 37, 33, 32, 38, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins = 5)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = 'Fit results:\\nmu = {:.2f},\\nstd = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f\"Fit results: mu={round(mu, 2)}, std={round(std, 2)}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009589910507202148, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 38, 32, 40, 36, 39, 35, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=1, linestyle='--')\n    title = rf'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 31, 35, 36, 32, 33, 39, 40, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-', lw=2)\n    ax.plot(x, p, 'k--', linewidth=1, label='2.5%')\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 40, 36, 39, 34, 31, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.034647226333618164, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14501404762268066, "tests_passed": true, "error": null}}
{"selected_lines": [31, 39, 33, 36, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = np.exp(-(x - mu)**2 / (2 * std**2)) / (std * np.sqrt(2 * np.pi))\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set(xlabel='Value', ylabel='Probability')\n    return ax", "compilation_passed": true, "time": 0.00803375244140625, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1640160083770752, "tests_passed": true, "error": null}}
{"selected_lines": [31, 32, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, 50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.07928824424743652, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 35, 33, 32, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True, histtype='step',\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 33, 31, 35, 37, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--', linewidth=0.5)\n    title = r\"Fit results: mu = {mean},  std = {standard deviation}\".format(mean=round(mu, 2),\\\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 35, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.036890268325805664, "tests_passed": true, "error": null}}
{"selected_lines": [32, 40, 37, 36, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2, linestyle='--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.06713318824768066, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 38, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', linewidth=2, label='best-fit')\n    title = 'Fit results: mu = %.2f,  std = %.2f' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [32, 40, 33, 39, 35, 36, 31, 34, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, 50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = np.exp(-(x - mu) ** 2 / (2 * std ** 2)) / np.sqrt(2 * np.pi) / std\n    ax.plot(x, p, color='k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0714261531829834, "tests_passed": true, "error": null}}
{"selected_lines": [33, 39, 31, 37, 36, 32, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1,1, figsize=(8,4))\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', c='g', alpha=0.6)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04078221321105957, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.15778088569641113, "tests_passed": true, "error": null}}
{"selected_lines": [39, 34, 31, 35, 32, 40, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, 50)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 34, 37, 33, 36, 40, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(16, 10))\n    ax.hist(l, bins=20)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = (\"Fit results: mu = {},  std = {}\").format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 14.265785694122314, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 31, 38, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(16, 10))\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', alpha=0.5)\n    title = \"Fit results: mu = {mu},  std = {std}\".format(mu=np.round(mu,2), std=np.round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.030543088912963867, "tests_passed": true, "error": null}}
{"selected_lines": [37, 33, 40, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, 50)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', linewidth=1, color='b')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 40, 32, 31, 38, 33, 39, 35, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1)\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = np.exp(-(x - mu) ** 2 / (2 * std ** 2)) / np.sqrt(2 * np.pi) / std\n    ax.plot(x, p, color='r', linewidth=1, linestyle='--')\n    title = rf'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37, 32, 31, 38, 35, 39, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1)\n    ax.hist(l, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 2)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2, label='pdf')\n    ax.plot(x, p, 'k', alpha=0.5, linewidth=2)\n    title = f\"Fit results: mu = {mu:.2f},  std = {std:.2f}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 39, 33, 34, 40, 32, 36, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008861780166625977, "tests_passed": true, "error": null}}
{"selected_lines": [31, 35, 34, 39, 32, 33, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l, bins=20)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, linewidth=2, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.05036020278930664, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [32, 35, 39, 36, 34, 38, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = \"+ str(round(mu,2)) + \", std = \" + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.010653018951416016, "tests_passed": true, "error": null}}
{"selected_lines": [39, 32, 37, 33, 36, 40, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=15, density=True, edgecolor='black')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = np.exp(-(x - mu) ** 2 / (2 * std ** 2)) / np.sqrt(2 * np.pi) / std\n    ax.plot(x, p, color='b', alpha=0.6, linewidth=2, label='$\\mu=${:.2f},\\n $\\sigma$= {:.2f}'.format(mu,std))\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03769278526306152, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14501404762268066, "tests_passed": true, "error": null}}
{"selected_lines": [40, 35, 32, 37, 38, 31, 33, 36, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(16, 10))\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2, linestyle='--')\n    title = r'$mu=%.2f,\\ \\sigma=%.2f$' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007669925689697266, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 32, 34, 33, 36, 38, 31, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l, density=True, histtype='step',\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = 'Fit results:\\nmu = {},\\nstd = {}'.format(round(mu, 2), round(std, 2))\n    ax.set_title(title, loc='right')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 39, 36, 31, 37, 34, 35, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = ax.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2)\n    ax.plot(x, p, '--', color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 40, 32, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = r\"Fit results: mu = {mean},  std = {standard deviation}\".format(mean=round(mu, 2),\\\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 38, 36, 39, 37, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color=\"green\", linewidth=2)\n    title = \"Fit results: mu = {mu},  std = {std}\".format(mu=np.round(mu,2), std=np.round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006452798843383789, "tests_passed": true, "error": null}}
{"selected_lines": [31, 38, 40, 32, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True, histtype='step',\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 35, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.036890268325805664, "tests_passed": true, "error": null}}
{"selected_lines": [40, 37, 38, 35, 32, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = f\"Fit results: mu={round(mu, 2)}, std={round(std, 2)}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007116079330444336, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 40, 39, 32, 38, 33, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = np.exp(-(x - mu) ** 2 / (2 * std ** 2)) / np.sqrt(2 * np.pi) / std\n    ax.plot(x, p, color='r')\n    title = (\"Fit results: mu = {},  std = {}\").format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007496833801269531, "tests_passed": true, "error": null}}
{"selected_lines": [36, 31, 37, 33, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(4,4))\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', linewidth=1, color='b')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [34, 35, 32, 39, 31, 38, 36, 33, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(4,4))\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', linewidth=1, color='b')\n    title = \"Fit results: mu = {:.2f},  std = {:.2f}\".format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37, 40, 35, 39, 31, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', linewidth=2, label='best-fit')\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu,std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.035436153411865234, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 34, 32, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l,bins=50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.06752991676330566, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 31, 33, 36, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', lw=1)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 36, 38, 33, 34, 35, 31, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = rf'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 40, 37, 32, 39, 38, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = 'Fit results: mu = {mean:.2f}, std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0078887939453125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 35, 33, 37, 31, 34, 32, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 200)\n    p = np.exp(-(x - mu) ** 2 / (2 * std ** 2)) / np.sqrt(2 * np.pi) / std\n    ax.plot(x, p, 'k-', label='PDF')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04306316375732422, "tests_passed": true, "error": null}}
{"selected_lines": [40, 31, 33, 35, 37, 39, 32, 36, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'k')\n    ax.plot(x, p, 'k-', linewidth=2, label='best-fit')\n    title = 'Fit results:\\nmu={0:.2f},  std={1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 37, 39, 36, 35, 38, 33, 40, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = 'Fit results: mu = {:.2f},  std = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 31, 35, 40, 36, 37, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 2)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', label='PDF')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03947019577026367, "tests_passed": true, "error": null}}
{"selected_lines": [40, 34, 39, 31, 35, 36, 32, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l,bins=50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.07552409172058105, "tests_passed": true, "error": null}}
{"selected_lines": [34, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {:.2f},  std = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03813886642456055, "tests_passed": true, "error": null}}
{"selected_lines": [35, 34, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03799319267272949, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03830122947692871, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 32, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l,bins=50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.08481216430664062, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='red', alpha=0.5, linewidth=2)\n    title = f'Fit results: mu = {np.round(mu, 2)},  std = {np.round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007632732391357422, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 32, 39, 33, 40, 34, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-', lw=2)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = rf'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 40, 37, 32, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l,bins=50)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color=\"green\", linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 38, 33, 35, 39, 37, 36, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='blue', linewidth=2, label='$\\mu=%.2f,\\sigma=%.2f$'%(mu,std))\n    title = f'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title, loc='right')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.set_title(\"Fit results: mu={0:.2f}, std={1:.2f}\".format(stats.norm.mean(l), stats.norm.std(l)), fontsize=12)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 31, 32, 39, 34, 38, 36, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=np.arange(0, 10, 1))\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 2)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='b', alpha=0.6, linewidth=2, label='$\\mu=${:.2f},\\n $\\sigma$= {:.2f}'.format(mu,std))\n    title = f'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006876945495605469, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.20397281646728516, "tests_passed": true, "error": null}}
{"selected_lines": [31, 38, 32, 36, 33, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True, histtype='step',\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2, label='pdf')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = \"+ str(round(mu,2)) + \", std = \" + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='k', linewidth=2)\n    title = 'Fit results: mu = {mean:.2f},  std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.026794910430908203, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f'Fit results: mu = {np.round(mu, 2)},  std = {np.round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007554054260253906, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14501404762268066, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 32, 31, 33, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', label='PDF')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.031061172485351562, "tests_passed": true, "error": null}}
{"selected_lines": [39, 33, 35, 36, 40, 37, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2, label='pdf')\n    ax.plot(x, p, '--', color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set(xlabel='Value', ylabel='Probability')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 31, 36, 35, 40, 34, 32, 33, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2, label='pdf')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results:\\nmu = {},\\nstd = {}'.format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 33, 37, 40, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, linewidth=2, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 35, 32, 40, 33, 34, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=5)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set(title=title, xlabel='x', ylabel='PDF')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 39, 37, 31, 40, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1,1, figsize=(8,4))\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2, label='pdf')\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 39, 40, 33, 34, 32, 37, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins=20)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2)\n    title = 'Fit results: mu = %.2f,  std = %.2f' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 34, 36, 40, 35, 31, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True, bins=np.arange(0, 9, 0.1))\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r', alpha=0.5, label=r'$\\mu = {}$,  $\\sigma = {}$'.format(round(mu, 2), round(std, 2)))\n    ax.plot(x, p, 'k--')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 33, 38, 32, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--', linewidth=0.5)\n    title = 'Fit results: mu = {mean:.2f},  std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03183794021606445, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 33, 34, 39, 40, 38, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f\"Fit results: mu = {mu:.2f},  std = {std:.2f}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03050971031188965, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 39, 35, 31, 37, 32, 36, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(4,4))\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2)\n    title = 'Fit results:\\nmu = {:.2f},\\nstd = {:.2f}'.format(mu, std)\n    ax.set_title(title, loc='right')\n    return ax", "compilation_passed": true, "time": 0.008048772811889648, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 34, 37, 39, 35, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='blue', linewidth=2, label='$\\mu=%.2f,\\sigma=%.2f$'%(mu,std))\n    title = f'Fit results: mu = {np.round(mu, 2)},  std = {np.round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37, 33, 39, 40, 34, 36, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-', lw=2)\n    ax.plot(x, p, color='k', linewidth=2)\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ',  std = ' + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 35, 38, 33, 37, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='b', alpha=0.6, linewidth=2, label='$\\mu=${:.2f},\\n $\\sigma$= {:.2f}'.format(mu,std))\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.027022838592529297, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 33, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = {:.2f},  std = {:.2f}\".format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37, 35, 34, 31, 32, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.set_title(\"Fit results: mu={0:.2f}, std={1:.2f}\".format(stats.norm.mean(l), stats.norm.std(l)), fontsize=12)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu,std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 40, 31, 36, 32, 33, 34, 38, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, linewidth=2, color='r')\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03110790252685547, "tests_passed": true, "error": null}}
{"selected_lines": [37, 31, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006824016571044922, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 39, 35, 34, 40, 37, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', label='PDF')\n    title = 'Fit results: mu = {},  std = {:.2f}'.format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006759166717529297, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 36, 34, 40, 32, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=np.arange(0, 10, 1))\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 2)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 31, 40, 34, 38, 36, 39, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = {:.2f},  std = {:.2f}\".format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.035452842712402344, "tests_passed": true, "error": null}}
{"selected_lines": [32, 31, 34, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03504514694213867, "tests_passed": true, "error": null}}
{"selected_lines": [33, 39, 38, 37, 35, 32, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, 50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-', lw=2)\n    ax.plot(x, p, color='r', linewidth=1, linestyle='--')\n    title = f\"Fit results: mu={round(mu, 2)}, std={round(std, 2)}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 40, 32, 35, 31, 36, 34, 39, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007769107818603516, "tests_passed": true, "error": null}}
{"selected_lines": [33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.036853790283203125, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 38, 33, 40, 32, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ',  std = ' + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 40, 31, 32, 38, 39, 33, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2)\n    title = 'Fit results: mu = %.2f,  std = %.2f' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03258395195007324, "tests_passed": true, "error": null}}
{"selected_lines": [38, 34, 33, 32, 37, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu,std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.030162811279296875, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', linewidth=1, color='b')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.025706052780151367, "tests_passed": true, "error": null}}
{"selected_lines": [32, 37, 34, 39, 38, 36, 35, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 200)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2, label='pdf')\n    ax.plot(x, p, 'k--', linewidth=1, label='2.5%')\n    title = \"Fit results: mu = \"+ str(round(mu,2)) + \", std = \" + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [33, 37, 39, 34, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', linewidth=1, color='b')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 31, 36, 33, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = r\"Fit results: $\\mu={}$, $std={}$\".format(round(mu,2), round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 39, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', c='g', alpha=0.6)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03172111511230469, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.17031121253967285, "tests_passed": true, "error": null}}
{"selected_lines": [32, 40, 34, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, 50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.06920599937438965, "tests_passed": true, "error": null}}
{"selected_lines": [39, 34, 33, 37, 35, 38, 32, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=15, density=True, edgecolor='black')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.00853109359741211, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 37, 35, 31, 33, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='r')\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu,std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03038501739501953, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color=\"green\", linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.7843048572540283, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1402299404144287, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 34, 31, 39, 40, 35, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins = 5)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 2)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', alpha=0.5, linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.025191068649291992, "tests_passed": true, "error": null}}
{"selected_lines": [35, 39, 32, 31, 40, 36, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(10,3))\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = np.exp(-(x - mu) ** 2 / (2 * std ** 2)) / np.sqrt(2 * np.pi) / std\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set(xlabel='Value', ylabel='Probability')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1502070426940918, "tests_passed": true, "error": null}}
{"selected_lines": [31, 40, 38, 32, 36, 33, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(4,4))\n    ax.hist(l, density=True, histtype='step',\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 36, 34, 33, 37, 32, 38, 35, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color=\"green\", linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0084381103515625, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.19596099853515625, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 37, 39, 33, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = ax.get_title()\n    ax.set_title(title, loc='right')\n    return ax", "compilation_passed": true, "time": 0.006332874298095703, "tests_passed": true, "error": null}}
{"selected_lines": [33, 38, 40, 37, 31, 32, 34, 39, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='red', alpha=0.5, linewidth=2)\n    title = 'Fit results:\\nmu={0:.2f},  std={1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 35, 33, 36, 38, 37, 40, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True, histtype='step',\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'r--', lw=2)\n    title = 'Fit results: mu = %.2f,  std = %.2f' % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = {:.2f},  std = {:.2f}\".format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.025654077529907227, "tests_passed": true, "error": null}}
{"selected_lines": [32, 40, 31, 35, 33, 34, 36, 39, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, linewidth=2, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 37, 35, 33, 38, 39, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', alpha=0.5, linewidth=2)\n    title = r\"Fit results: mu = {mean},  std = {standard deviation}\".format(mean=round(mu, 2),\\\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 40, 39, 31, 34, 36, 38, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(4,4))\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 2)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2, label='pdf')\n    ax.plot(x, p, 'r--', lw=2)\n    title = (\"Fit results: mu = {},  std = {}\").format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 31, 35, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {:.2f},  std = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.025906085968017578, "tests_passed": true, "error": null}}
{"selected_lines": [40, 31, 37, 36, 32, 38, 33, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True, histtype='step',\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = np.exp(-(x - mu) ** 2 / (2 * std ** 2)) / np.sqrt(2 * np.pi) / std\n    ax.plot(x, p, color='r')\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ',  std = ' + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 32, 31, 37, 34, 40, 39, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = 'Fit results: mu = {},  std = {:.2f}'.format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007847070693969727, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 40, 31, 32, 33, 39, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10, density=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu, std)\n    ax.set(title=title, xlabel='x', ylabel='PDF')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 38, 32, 33, 39, 40, 35, 37, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0071909427642822266, "tests_passed": true, "error": null}}
{"selected_lines": [31, 37, 40, 32, 34, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = np.exp(-(x - mu) ** 2 / (2 * std ** 2)) / np.sqrt(2 * np.pi) / std\n    ax.plot(x, p, color=\"green\", linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03338027000427246, "tests_passed": true, "error": null}}
{"selected_lines": [35, 33, 40, 37, 38, 31, 36, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r-')\n    ax.plot(x, p, 'r--', lw=2)\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ',  std = ' + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 34, 36, 35, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set(xlabel='Value', ylabel='Probability')\n    return ax", "compilation_passed": true, "time": 0.007066249847412109, "tests_passed": true, "error": null}}
{"selected_lines": [32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10, density=True)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.17378711700439453, "tests_passed": true, "error": null}}
{"selected_lines": [33, 31, 39, 34, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.02718377113342285, "tests_passed": true, "error": null}}
{"selected_lines": [32, 39, 31, 35, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax=plt.subplots()\n    ax.hist(l,bins=50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.07918214797973633, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True, histtype='step',\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {mean:.2f},  std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 33, 40, 36, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std))\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 37, 35, 36, 33, 32, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', c='g', alpha=0.6)\n    title = f'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 35, 37, 31, 40, 34, 33, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1)\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = np.exp(-(x - mu)**2 / (2 * std**2)) / (std * np.sqrt(2 * np.pi))\n    ax.plot(x, p, color=\"green\", linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008339881896972656, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 39, 38, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', linewidth=1, color='b')\n    title = f\"Fit results: mu = {mu:.2f},  std = {std:.2f}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 35, 33, 39, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20, density=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 40, 37, 31, 33, 34, 32, 35, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(4,4))\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=1, linestyle='--')\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 39, 32, 40, 37, 33, 38, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', c='g', alpha=0.6)\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03936624526977539, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std))\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 35, 39, 36, 33, 37, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', c='g', alpha=0.6)\n    title = f'Fit results: mu = {round(mu, 2)},  std = {round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 33, 34, 39, 40, 38, 31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f\"Fit results: mu = {mu:.2f},  std = {std:.2f}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03050971031188965, "tests_passed": true, "error": null}}
{"selected_lines": [33, 32, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.set_title(\"Fit results: mu={0:.2f}, std={1:.2f}\".format(stats.norm.mean(l), stats.norm.std(l)), fontsize=12)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', lw=1)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 36, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04160499572753906, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 31, 33, 32, 35, 38, 39, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = 'Fit results: mu = {mean:.2f},  std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title, loc='right')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 32, 31, 33, 40, 39, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1,1, figsize=(8,4))\n    ax.hist(l, bins=5)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2)\n    title = f'Fit results:\\n{l} => mu = {mu:.2f}, std = {std:.2f}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 39, 38, 34, 33, 31, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = 'Fit results: mu = %.2f,  std = %.2f' % (mu, std)\n    ax.set_title(title, loc='right')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 36, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', alpha=0.5, linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14829707145690918, "tests_passed": true, "error": null}}
{"selected_lines": [39, 34, 40, 33, 32, 36, 37, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=50)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', label='PDF')\n    title = r\"Fit results: $\\mu={}$, $std={}$\".format(round(mu,2), round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0160062313079834, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 32, 39, 38, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = r\"Fit results: $\\mu={}$, $std={}$\".format(round(mu,2), round(std,2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.009946107864379883, "tests_passed": true, "error": null}}
{"selected_lines": [34, 40, 33, 37, 36, 38, 31, 39, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = 'Fit results: mu = {0:.2f},  std = {1:.2f}'.format(mu,std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 39, 37, 36, 32, 31, 40, 38, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(10,3))\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = 'Fit results:\\nmu = {:.2f},\\nstd = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008970975875854492, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True, bins=np.arange(0, 9, 0.1))\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2, label='pdf')\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 37, 32, 31, 35, 36, 40, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', alpha=0.5)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 31, 34, 36, 32, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', linewidth=2, label='best-fit')\n    title = 'Fit results: mu = {mean:.2f}, std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.01137089729309082, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35, 31, 32, 39, 34, 40, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='k', linewidth=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008210897445678711, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 36, 39, 34, 31, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.034647226333618164, "tests_passed": true, "error": null}}
{"selected_lines": [36, 33, 31, 40, 37, 32, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='b', alpha=0.6, linewidth=2, label='$\\mu=${:.2f},\\n $\\sigma$= {:.2f}'.format(mu,std))\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.04324984550476074, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14595484733581543, "tests_passed": true, "error": null}}
{"selected_lines": [39, 37, 36, 35, 34, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = plt.plot(x, stats.norm.pdf(x, mu, std), 'r', alpha=0.5, label=r'$\\mu = {}$,  $\\sigma = {}$'.format(round(mu, 2), round(std, 2)))\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34, 32, 40, 33, 37, 35, 36, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', linewidth=2, label='best-fit')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title, loc='right')\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 34, 39, 32, 33, 40, 37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True, histtype='step',\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color=\"green\", linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 37, 40, 32, 33, 35, 31, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig,ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'r--', lw=2)\n    title = ax.get_title()\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.007950067520141602, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 35, 32, 34, 31, 33, 37, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1,1, figsize=(8,4))\n    ax.hist(l, bins=20, density=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', alpha=0.5, linewidth=2)\n    title = 'Fit results: mu = {:.2f},  std = {:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', linewidth=1, color='b')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.02805185317993164, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14595484733581543, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1443769931793213, "tests_passed": true, "error": null}}
{"selected_lines": [34, 31, 32, 33, 38, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(l)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xbound()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = {:.2f},  std = {:.2f}\".format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03766918182373047, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.16131997108459473, "tests_passed": true, "error": null}}
{"selected_lines": [32, 38, 31, 37, 40, 33, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(10,3))\n    ax.hist(l, bins=5)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, '--', color='red', alpha=0.5)\n    title = 'Fit results: mu = {mean:.2f}, std = {std:.2f}'.format(mean=mu, std=std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31, 32, 37, 39, 36, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=1)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = np.exp(-(x - mu)**2 / (2 * std**2)) / (std * np.sqrt(2 * np.pi))\n    ax.plot(x, p, color='r', linewidth=2)\n    title = 'Fit results: mu = ' + str(round(mu, 2)) + ', std = ' + str(round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008805036544799805, "tests_passed": true, "error": null}}
{"selected_lines": [39, 31, 35, 33, 34, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.029198884963989258, "tests_passed": true, "error": null}}
{"selected_lines": [35, 31, 33, 34, 32, 36, 40, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.set_title(\"Fit results: mu={0:.2f}, std={1:.2f}\".format(stats.norm.mean(l), stats.norm.std(l)), fontsize=12)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [31], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(1, 1)\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1407029628753662, "tests_passed": true, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1402299404144287, "tests_passed": true, "error": null}}
{"selected_lines": [36, 34, 35, 33], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [39, 31, 37, 33, 34, 38, 36, 40, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, normed=True)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='red', alpha=0.5, linewidth=2)\n    title = f'Fit results: mu = {np.round(mu, 2)},  std = {np.round(std, 2)}'\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 39, 32, 33, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set(xlabel='Value', ylabel='Probability')\n    return ax", "compilation_passed": true, "time": 0.007784843444824219, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = f\"Fit results: mu = {mu:.2f},  std = {std:.2f}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1595170497894287, "tests_passed": true, "error": null}}
{"selected_lines": [31, 34, 32, 37, 40], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots(figsize=(4,4))\n    ax.hist(l, bins=10)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = l.min(), l.max()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03626394271850586, "tests_passed": true, "error": null}}
{"selected_lines": [31, 33, 37, 34, 32, 40, 35, 38], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k-', label='PDF')\n    title = 'Fit results:\\nmu = {},\\nstd = {}'.format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [34], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.14501404762268066, "tests_passed": true, "error": null}}
{"selected_lines": [33, 35, 37, 34, 38, 32, 31, 36], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l)\n    mu, sigma = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k--')\n    title = (\"Fit results: mu = {},  std = {}\").format(round(mu, 2), round(std, 2))\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [32, 31, 36, 37, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, density=True, histtype='step',\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = ax.plot(x, stats.norm.pdf(x, mu, std), color='r', alpha=0.5, linewidth=2)\n    ax.plot(x, p, color='b', alpha=0.6, linewidth=2, label='$\\mu=${:.2f},\\n $\\sigma$= {:.2f}'.format(mu,std))\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 200)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.1550760269165039, "tests_passed": true, "error": null}}
{"selected_lines": [39, 38, 37, 35], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r')\n    title = f\"Fit results: mu={round(mu, 2)}, std={round(std, 2)}\"\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.006862163543701172, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 35, 32], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins=20)\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 1000)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, 'k', linewidth=2)\n    title = \"Fit results: mu = %.2f,  std = %.2f\" % (mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.03963589668273926, "tests_passed": true, "error": null}}
{"selected_lines": [34, 36, 33, 38, 40, 37, 39], "result": {"code": "import numpy as np\nfrom scipy import stats\nimport matplotlib.pyplot as plt\n\ndef task_func(l):\n    '''\n    Draw a histogram of the given array with a Gaussian fit.\n\n    Parameters:\n    l (numpy array): The input array.\n\n    Returns:\n    ax (matplotlib.axes._axes.Axes): Axes object with the plot.\n\n    Note:\n    - This function use \"Fit results: mu = {mean},  std = {standard deviation}\" as the title of the plot, \n    where the values are rounded to two decimal points.\n\n\n    Requirements:\n    - numpy\n    - scipy.stats\n    - matplotlib.pyplot\n\n    Example:\n    >>> l = np.array([5, 5, 5, 5, 5])\n    >>> ax = task_func(l)\n    >>> print(ax.get_title())\n    Fit results: mu = 5.00,  std = 0.00\n    >>> plt.close()\n    '''\n    fig, ax = plt.subplots()\n    ax.hist(l, bins='auto', density=True, alpha=0.6, color='g')\n    mu, std = stats.norm.fit(l)\n    xmin, xmax = ax.get_xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, mu, std)\n    ax.plot(x, p, color='r', linewidth=2)\n    title = 'Fit results:\\nmu={0:.2f},  std={1:.2f}'.format(mu, std)\n    ax.set_title(title)\n    return ax", "compilation_passed": true, "time": 0.008189916610717773, "tests_passed": true, "error": null}}
