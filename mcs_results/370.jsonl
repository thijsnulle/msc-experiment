{"selected_lines": [45, 48, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path + \" does not exist\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 44, 51, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [52, 48, 53, 46, 43, 55, 54, 49, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub('\"', '\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [46, 51, 50, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=4, separators=(', ', ': '))\n        escaped_data = re.sub(r\"([^\\\\]|^)(\\\\\\\"|\\\\\\\")\", r\"\\1\\\\\\\"\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0023157596588134766, "tests_passed": true, "error": null}}
{"selected_lines": [51, 55, 47, 43, 44, 48, 54, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012804031372070312, "tests_passed": true, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\\\\\")', r'\\\\\"', escaped_data)  # Escape double quotes\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.007082939147949219, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [51, 47, 45, 43, 53, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\\\\\\\\\")', r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0016880035400390625, "tests_passed": true, "error": null}}
{"selected_lines": [51, 46, 44, 54, 47, 55, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\".+?\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.001734018325805664, "tests_passed": true, "error": null}}
{"selected_lines": [49, 51, 53, 44, 48, 47, 45, 54, 46, 52, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\"|\\')', '\\\\\\\\\\\\1', json.dumps(data))\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00444793701171875, "tests_passed": true, "error": null}}
{"selected_lines": [51, 52, 48, 54, 55, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(.*)\"', r'\"\\1\"', json.dumps(data))\n        escaped_data = re.sub('\"', '\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0045299530029296875, "tests_passed": true, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} doesn't exist!\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012885093688964844, "tests_passed": true, "error": null}}
{"selected_lines": [53, 48, 45, 43, 46, 44, 54, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + \"/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00474095344543457, "tests_passed": true, "error": null}}
{"selected_lines": [51, 49, 52, 48, 44, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = {}\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.02042102813720703, "tests_passed": true, "error": null}}
{"selected_lines": [48, 53, 50, 52, 47, 55, 46, 45, 54, 44, 49, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [52, 48, 47, 45, 43, 55, 50, 54, 51, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(r'(\")(.*)(\")', r'\\\\\"\\1\\3\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.009401798248291016, "tests_passed": false, "error": "UnboundLocalError"}}
{"selected_lines": [53, 51, 50, 43, 46, 48, 44, 47, 52, 45, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(?<!\\\\)\"', '\\\\\"', str(data))\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004703998565673828, "tests_passed": true, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011567831039428711, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"\\\\\", \"\\\\\\\\\\\\\\\\\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.009032964706420898, "tests_passed": false, "error": "re.error"}}
{"selected_lines": [47, 44, 49, 43, 45, 52, 54, 46, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(os.path.join(directory_path, \"**\", \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.001428842544555664, "tests_passed": true, "error": null}}
{"selected_lines": [53, 51, 48, 50, 43, 46, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub(r'(\")', r'\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004523038864135742, "tests_passed": true, "error": null}}
{"selected_lines": [44, 46, 52, 45, 50, 43, 48, 51, 49, 55, 53, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r\"\\\"\\\"|(?<!\\\\)\\\"\", \"\\\"\\\"\", json.dumps(data))\n        escaped_data = re.sub(\"([^\\\\w]{2})([\" + '\"' + \"])\", r\"\\1\\\\\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004614114761352539, "tests_passed": true, "error": null}}
{"selected_lines": [54, 44, 53, 51, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"\\\\\", \"\\\\\\\\\\\\\\\\\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.015745162963867188, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [54, 45, 52, 47, 46, 43, 55, 50, 44, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(?![^\"\\\\]*(\\\\\\\\|\\r?\\n))', '\\\\\"', str(data))\n        escaped_data = re.sub(\"([^\\\\\\\\]\\\")\", r\"\\\\\\1\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004448890686035156, "tests_passed": true, "error": null}}
{"selected_lines": [50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.009413957595825195, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.017317771911621094, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [48, 51, 50, 55, 54, 44, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} does not exist!\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'(\"[^\"]+\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0018551349639892578, "tests_passed": true, "error": null}}
{"selected_lines": [43, 48, 47, 50, 46, 55, 51, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")', lambda m: m.group(0)[1:].replace(\"\\\\\", \"\\\\\\\\\\\\\"), str(data))\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004294872283935547, "tests_passed": true, "error": null}}
{"selected_lines": [54, 44, 55, 43, 48, 47, 50, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=None).replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\\\\", \"\\\\\\\\\")\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0047321319580078125, "tests_passed": true, "error": null}}
{"selected_lines": [46, 52, 51, 45, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"(?<!\\\\)\\\"\", r\"\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 46, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=2, sort_keys=True)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0061740875244140625, "tests_passed": true, "error": null}}
{"selected_lines": [50, 43, 48, 47, 45, 54, 46, 49, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = file.read()\n        escaped_data = json.dumps(data).replace('\\\"', '\"')\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0044858455657958984, "tests_passed": true, "error": null}}
{"selected_lines": [45, 44, 53, 51, 43, 52, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path + \" not found\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace(\"\\\\\", \"\\\\\\\\\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0016210079193115234, "tests_passed": true, "error": null}}
{"selected_lines": [50, 48, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '**/*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"', r'\"\\+', data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} doesn't exist!\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012885093688964844, "tests_passed": true, "error": null}}
{"selected_lines": [44, 51, 49, 45, 48, 55, 53, 52, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '**/*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\\\\\")', r'\\\\\"', escaped_data)  # Escape double quotes\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [54, 50, 51, 52, 44, 47, 53, 49, 48, 43, 45, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} does not exist!\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\\\\"+r\"\\\"\", str(data))\n        escaped_data = re.sub(r'(\"[^\"]+\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004795074462890625, "tests_passed": true, "error": null}}
{"selected_lines": [44, 49, 55, 43, 53, 47, 48, 54, 50, 52, 45, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=None).replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\\\\", \"\\\\\\\\\")\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004478931427001953, "tests_passed": true, "error": null}}
{"selected_lines": [53, 54, 47, 51, 45, 48, 55, 49, 52, 44, 43, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub('\"', '\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004473209381103516, "tests_passed": true, "error": null}}
{"selected_lines": [50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"\\\"\\\"|(?<!\\\\)\\\"\", \"\\\"\\\"\", json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012074947357177734, "tests_passed": true, "error": null}}
{"selected_lines": [49, 48, 46, 44, 45, 54, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} does not exist!\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r', encoding=\"utf-8\") as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004502058029174805, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [50, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [54, 45, 49, 48, 50, 51, 46, 52, 47, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"', r'\"\\+', data)\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [55, 50, 51, 53, 54, 44, 46, 45, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 47, 51, 49, 46, 55, 53, 52, 45, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = re.sub(r'\"', r'\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 44, 46, 52, 50, 49, 51, 53, 54, 47, 55, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as f:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"(?![^\"\\\\]*(\\\\\\\\|[\"])|([{}[\\],:])?)', r'\\\\\"\\1', data)\n        escaped_data = re.sub(r'(\".+?\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [52, 54, 46, 45, 48, 51, 55, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004565000534057617, "tests_passed": true, "error": null}}
{"selected_lines": [53, 54, 45, 46, 50, 49, 47, 52, 44, 51, 55, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = file.read()\n        escaped_data = re.sub(r'(\")', r'\\\\\\\\\\\\1', data)\n        escaped_data = re.sub(r'(\")', r'\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.015745162963867188, "tests_passed": true, "error": null}}
{"selected_lines": [50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data).replace('\"', '\\\\\"')\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011709928512573242, "tests_passed": true, "error": null}}
{"selected_lines": [55, 43, 48, 50, 51, 52, 54, 53, 47, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\1\", data)\n        escaped_data = re.sub('\"', '\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51, 47, 45, 48, 54, 49, 44, 52, 50, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\1\", data)\n        escaped_data = re.sub(\"([^\\\\w]{2})([\" + '\"' + \"])\", r\"\\1\\\\\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51, 44, 53, 54, 47, 55, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\\\\\\\\\")', r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0018401145935058594, "tests_passed": true, "error": null}}
{"selected_lines": [43, 53, 47, 51, 55, 54, 49, 48, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = file.read()\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = re.sub(\"([^\\\\\\\\]\\\")\", r\"\\\\\\1\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48, 54, 55, 43, 44, 45, 53, 51, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'(\\\\\")', r'\\\\\"', escaped_data)  # Escape double quotes\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [49, 46, 44, 54, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0017058849334716797, "tests_passed": true, "error": null}}
{"selected_lines": [45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012955904006958008, "tests_passed": true, "error": null}}
{"selected_lines": [53, 48, 52, 43, 54, 51, 49, 55, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub('\"', '\\\\\\\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.010780811309814453, "tests_passed": true, "error": null}}
{"selected_lines": [50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=2, sort_keys=True)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012423992156982422, "tests_passed": true, "error": null}}
{"selected_lines": [55, 44, 43, 52, 45, 53, 49, 46, 47, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r\"([^\\\\]|^)(\\\\\\\"|\\\\\\\")\", r\"\\1\\\\\\\"\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005429983139038086, "tests_passed": true, "error": null}}
{"selected_lines": [51, 45, 47, 44, 43, 55, 48, 54, 50, 52, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found: {directory_path}\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\")', r\"\\1\", data)\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [46, 47, 54, 51, 50, 52, 45, 49, 53, 55, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/[!~]*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = file.read()\n        escaped_data = json.dumps(data, indent=None).replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\\\\", \"\\\\\\\\\")\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [46, 51, 52, 54, 50, 47, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=None).replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\\\\", \"\\\\\\\\\")\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004916191101074219, "tests_passed": true, "error": null}}
{"selected_lines": [44, 49, 45, 51, 54, 43, 55, 52, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"(?![^\"\\\\]*(\\\\\\\\|[\"])|([{}[\\],:])?)', r'\\\\\"\\1', data)\n        escaped_data = re.sub(r'(\".+?\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [54, 48, 44, 52, 50, 49, 47, 46, 53, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'\"(?![^\"\\\\]*(\\\\\\\\|\\r?\\n))', '\\\\\"', str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004487037658691406, "tests_passed": true, "error": null}}
{"selected_lines": [49, 46, 47, 52, 53, 51, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\\\\\")', r'\\\\\"', escaped_data)  # Escape double quotes\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004433870315551758, "tests_passed": true, "error": null}}
{"selected_lines": [50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"(?![^\"\\\\]*(\\\\\\\\|[\"])|([{}[\\],:])?)', r'\\\\\"\\1', data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012337207794189453, "tests_passed": false, "error": "re.error"}}
{"selected_lines": [54, 53, 46, 52, 43, 49, 51, 50, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\"|\\')', '\\\\\\\\\\\\1', json.dumps(data))\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0042989253997802734, "tests_passed": true, "error": null}}
{"selected_lines": [49, 45, 51, 54, 52, 44, 53, 48, 43, 47, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path + \" not found\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.029146909713745117, "tests_passed": true, "error": null}}
{"selected_lines": [45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.006862163543701172, "tests_passed": true, "error": null}}
{"selected_lines": [50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r'\\\\\\\\\\\\1', data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.009526968002319336, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [46, 54, 55, 47, 52, 43, 53, 45, 48, 49, 50, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\\\\"+r\"\\\"\", str(data))\n        escaped_data = escaped_data.replace(\"\\\\\", \"\\\\\\\\\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004467964172363281, "tests_passed": true, "error": null}}
{"selected_lines": [43, 54, 55, 49, 47, 48, 51, 52, 45, 50, 44, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\"(?![^\"\\\\]*(\\\\\\\\|[\"])|([{}[\\],:])?)', r'\\\\\"\\1', data)\n        escaped_data = re.sub(r\"(?<!\\\\)\" + r'\"', r\"\\\\\" + r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 54, 51, 52, 47, 55, 53, 43, 50, 44, 46, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory does not exist\")\n    json_files = glob.glob(os.path.join(directory_path, '*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"', r'\"\\+', data)\n        escaped_data = re.sub(\"([^\\\\\\\\]\\\")\", r\"\\\\\\1\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [55, 48, 49, 51, 44, 53, 54, 45, 46, 43, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub('\"', '\\\\\"', json.dumps(data))\n        escaped_data = json.loads(escaped_data.replace('\"', '\"\\\\\"'))\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [46, 54, 45, 53, 50, 48, 55, 47, 49, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**\", \"*.json\"))\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as f:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [49, 52, 45, 55, 46, 43, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")(.*)(\")', r'\\\\\"\\1\\3\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004427909851074219, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [43, 50, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")(.*)(\")', r'\\\\\"\\1\\3\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011961936950683594, "tests_passed": true, "error": null}}
{"selected_lines": [47, 46, 50, 52, 55, 48, 54, 49, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\")', r\"\\\\\"+r\"\\\"\", str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004446983337402344, "tests_passed": true, "error": null}}
{"selected_lines": [46, 53, 47, 52, 50, 55, 49, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\\\\"+r\"\\\"\", str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0058460235595703125, "tests_passed": true, "error": null}}
{"selected_lines": [53, 49, 51, 48, 47, 50, 44, 45, 46, 43, 55, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(?<!\\\\)\"', '\\\\\"', str(data))\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00518488883972168, "tests_passed": true, "error": null}}
{"selected_lines": [55, 51, 47, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004310131072998047, "tests_passed": true, "error": null}}
{"selected_lines": [44, 51, 43, 54, 52, 47, 46, 45, 53, 48, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The given directory does not exist: {directory_path}\")\n    json_files = glob.glob(os.path.join(directory_path, '**/*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\"[^\"]+\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0013611316680908203, "tests_passed": true, "error": null}}
{"selected_lines": [44, 47, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53, 51, 47, 48, 49, 50, 44, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r'\\\\\"', str(data))  # Escape double quotes\n        escaped_data = re.sub(r\"(?<!\\\\)\" + r'\"', r\"\\\\\" + r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 55, 50, 53, 49, 43, 45, 51, 52, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\"|\\\\)', r'\\\\\\1', data)\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 50, 51, 54, 49, 43, 47, 53, 55, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'\"(?![^\"\\\\]*(\\\\\\\\|\\r?\\n))', '\\\\\"', str(data))\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004414081573486328, "tests_passed": true, "error": null}}
{"selected_lines": [44, 50, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data).replace('\"', '\\\\\"')\n        escaped_data = re.sub(r'(\")', r'\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004450082778930664, "tests_passed": true, "error": null}}
{"selected_lines": [44, 55, 47, 53, 43, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory not found: {directory_path}\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004984855651855469, "tests_passed": true, "error": null}}
{"selected_lines": [50, 48, 53, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data).replace('\\\"', '\"')\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004685163497924805, "tests_passed": true, "error": null}}
{"selected_lines": [55, 54, 51, 53, 50, 45, 49, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = {}\n        escaped_data = escaped_data.replace(\"\\\\\", \"\\\\\\\\\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 46, 52, 47, 48, 50, 54, 49, 55, 45, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 44, 54, 49, 53, 51, 55, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found: {directory_path}\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")', r'\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004746198654174805, "tests_passed": true, "error": null}}
{"selected_lines": [43, 50, 44, 51, 49, 53, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\")', r\"\\1\", data)\n        escaped_data = re.sub(r\"(?<!\\\\)\" + r'\"', r\"\\\\\" + r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 50, 53, 55, 52, 51, 44, 48, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r', encoding=\"utf-8\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=2, sort_keys=True)\n        escaped_data = re.sub(r'(\".+?\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.001878976821899414, "tests_passed": true, "error": null}}
{"selected_lines": [49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.01175689697265625, "tests_passed": true, "error": null}}
{"selected_lines": [45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011718988418579102, "tests_passed": true, "error": null}}
{"selected_lines": [44, 54, 52, 49, 55, 45, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [55, 47, 49, 48, 43, 50, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = file.read()\n        escaped_data = re.sub(r'(?<!\\\\)\"', '\\\\\"', str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [54, 45, 49, 55, 48, 51, 43, 52, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**\", \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'\"', r'\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0015718936920166016, "tests_passed": true, "error": null}}
{"selected_lines": [43, 48, 55, 51, 44, 45, 49, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"(?![^\"\\\\]*(\\\\\\\\|[\"])|([{}[\\],:])?)', r'\\\\\"\\1', data)\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 51, 54, 49, 48, 55, 43, 44, 46, 52, 45, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r', encoding=\"utf-8\") as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"|\\')', '\\\\\\\\\\\\1', json.dumps(data))\n        escaped_data = json.loads(escaped_data.replace('\"', '\"\\\\\"'))\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 50, 51, 54, 47, 44, 55, 46, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'\"(.*?)\"', r'\"\\\\\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0018312931060791016, "tests_passed": true, "error": null}}
{"selected_lines": [51, 46, 44, 45, 52, 53, 50, 54, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = re.sub(\"\\\\\", \"\\\\\\\\\\\\\\\\\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [54, 45, 46, 47, 50, 53, 49, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"', r'\"\\+', data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 52, 50, 44, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")', lambda m: m.group(0)[1:].replace(\"\\\\\", \"\\\\\\\\\\\\\"), str(data))\n        escaped_data = re.sub(\"\\\\\", \"\\\\\\\\\\\\\\\\\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53, 49, 46, 48, 50, 47, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"(?!\\\\\\\\)\", r\"\\\\\\\"\", json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0060842037200927734, "tests_passed": true, "error": null}}
{"selected_lines": [50, 54, 45, 44, 49, 55, 47, 48, 51, 43, 46, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [52, 55, 48, 44, 49, 51, 43, 46, 54, 47, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'\"', r'\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0047228336334228516, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [49, 54, 46, 43, 47, 44, 45, 52, 55, 48, 50, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(directory_path + \"/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=None).replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\\\\", \"\\\\\\\\\")\n        escaped_data = re.sub(r'(\")(.*)(\")', r'\\\\\"\\1\\3\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004761934280395508, "tests_passed": true, "error": null}}
{"selected_lines": [43, 53, 46, 55, 44, 52, 48, 47, 49, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004576921463012695, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [54, 46, 52, 44, 48, 51, 45, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50, 48, 51, 52, 46, 53, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r'\\\\\\\\\\\\1', data)\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012397050857543945, "tests_passed": true, "error": null}}
{"selected_lines": [46, 45, 44, 49, 53, 48, 52, 55, 43, 51, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"The given directory does not exist.\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'\"', r'\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004601001739501953, "tests_passed": true, "error": null}}
{"selected_lines": [55, 49, 50, 46, 43, 45, 48, 53, 44, 51, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = file.read()\n        escaped_data = re.sub(r\"\\\"\\\"|(?<!\\\\)\\\"\", \"\\\"\\\"\", json.dumps(data))\n        escaped_data = escaped_data.replace('\\\"', '\\\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0045397281646728516, "tests_passed": true, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\\\\\")', r'\\\\\"', escaped_data)  # Escape double quotes\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.007082939147949219, "tests_passed": true, "error": null}}
{"selected_lines": [48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.01193094253540039, "tests_passed": true, "error": null}}
{"selected_lines": [48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.009401798248291016, "tests_passed": false, "error": "UnboundLocalError"}}
{"selected_lines": [46, 52, 55, 49, 50, 54, 47, 44, 48, 45, 51, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} does not exist!\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(?<!\\\\)\"', '\\\\\"', str(data))\n        escaped_data = re.sub(r'(\\\\\\\\\")', r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004749774932861328, "tests_passed": true, "error": null}}
{"selected_lines": [51, 49, 54, 50, 55, 52, 44, 43, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [49, 48, 54, 53, 45, 50, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(?<!\\\\)\"', '\\\\\"', str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004748106002807617, "tests_passed": true, "error": null}}
{"selected_lines": [46, 48, 50, 47, 54, 52, 45, 51, 44, 49, 43, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 44, 43, 51, 50, 49, 53, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The given directory does not exist: {directory_path}\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\")', r\"\\1\", data)\n        escaped_data = re.sub(\"(?<!\\\\)\\\"\", r\"\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [46, 51, 53, 48, 44, 43, 52, 55, 45, 50, 54, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=4, separators=(', ', ': '))\n        escaped_data = re.sub(\"\\\\\", \"\\\\\\\\\\\\\\\\\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48, 43, 51, 46, 50, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(.*)\"', r'\"\\1\"', json.dumps(data))\n        escaped_data = re.sub(r'(\")(.*)(\")', r'\\\\\"\\1\\3\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0060939788818359375, "tests_passed": true, "error": null}}
{"selected_lines": [50, 46, 55, 53, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")', lambda m: m.group(0)[1:].replace(\"\\\\\", \"\\\\\\\\\\\\\"), str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005471944808959961, "tests_passed": true, "error": null}}
{"selected_lines": [50, 43, 45, 48, 44, 55, 46, 53, 47, 49, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(directory_path + \" does not exist\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as f:\n            data = json.load(file)\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"(?!\\\\\\\\)\", r\"\\\\\\\"\", json.dumps(data))\n        escaped_data = re.sub(r'(\\\\\\\\\")', r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50, 44, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data).replace('\"', '\\\\\"')\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004848957061767578, "tests_passed": true, "error": null}}
{"selected_lines": [45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011718988418579102, "tests_passed": true, "error": null}}
{"selected_lines": [54, 45, 53, 43, 46, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub('\"', '\\\\\\\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004552125930786133, "tests_passed": true, "error": null}}
{"selected_lines": [44, 55, 48, 51, 45, 49, 54, 47, 53, 46, 50, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004528045654296875, "tests_passed": true, "error": null}}
{"selected_lines": [45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.029146909713745117, "tests_passed": true, "error": null}}
{"selected_lines": [44, 49, 45, 47, 48, 50, 43, 54, 55, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as f:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 55, 51, 47, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub('\"', '\\\\\\\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004408836364746094, "tests_passed": true, "error": null}}
{"selected_lines": [44, 54, 48, 47, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0043718814849853516, "tests_passed": true, "error": null}}
{"selected_lines": [55, 48, 44, 45, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The given directory does not exist: {directory_path}\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 54, 45, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = json.loads(escaped_data.replace('\"', '\"\\\\\"'))\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 49, 48, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 45, 43, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub('\"', '\\\\\"', json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004494190216064453, "tests_passed": true, "error": null}}
{"selected_lines": [47, 50, 49, 44, 54, 48, 46, 53, 55, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\1\", data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50, 44, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\1\", data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011929035186767578, "tests_passed": true, "error": null}}
{"selected_lines": [47, 49, 44, 46, 50, 51, 43, 55, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\")', r\"\\1\", data)\n        escaped_data = re.sub(\"([^\\\\\\\\]\\\")\", r\"\\\\\\1\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 49, 51, 55, 44, 47, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data)\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005615949630737305, "tests_passed": true, "error": null}}
{"selected_lines": [51, 44, 55, 52, 50, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(?![^\"\\\\]*(\\\\\\\\|\\r?\\n))', '\\\\\"', str(data))\n        escaped_data = re.sub(r'(\\\\\")', r'\\\\\"', escaped_data)  # Escape double quotes\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00536799430847168, "tests_passed": true, "error": null}}
{"selected_lines": [44, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r\"(?<!\\\\)\" + r'\"', r\"\\\\\" + r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0044689178466796875, "tests_passed": true, "error": null}}
{"selected_lines": [47, 55, 51, 45, 52, 49, 44, 48, 43, 54, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data).replace('\"', '\\\\\"')\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004273891448974609, "tests_passed": true, "error": null}}
{"selected_lines": [50, 47, 51, 49, 43, 45, 55, 44, 46, 52, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = file.read()\n        escaped_data = re.sub(r'\"(?![^\"\\\\]*(\\\\\\\\|\\r?\\n))', '\\\\\"', str(data))\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00436711311340332, "tests_passed": true, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012804031372070312, "tests_passed": true, "error": null}}
{"selected_lines": [50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub('\"', '\\\\\"', json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011181116104125977, "tests_passed": true, "error": null}}
{"selected_lines": [55, 51, 52, 50, 47, 44, 53, 46, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path + \" does not exist\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data).replace('\"', '\\\\\"')\n        escaped_data = re.sub(\"([^\\\\w]{2})([\" + '\"' + \"])\", r\"\\1\\\\\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004411935806274414, "tests_passed": true, "error": null}}
{"selected_lines": [51, 55, 52, 54, 47, 45, 48, 53, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.001580953598022461, "tests_passed": true, "error": null}}
{"selected_lines": [48, 44, 45, 54, 43, 53, 49, 55, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '**/*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0013320446014404297, "tests_passed": true, "error": null}}
{"selected_lines": [45, 43, 47, 46, 49, 52, 50, 48, 53, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = json.load(file)\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = re.sub(r'(\".+?\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 44, 50, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(?<!\\\\)\"', '\\\\\"', str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004415035247802734, "tests_passed": true, "error": null}}
{"selected_lines": [44, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found: {directory_path}\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0042438507080078125, "tests_passed": true, "error": null}}
{"selected_lines": [51, 45, 54, 46, 44, 47, 48, 50, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 54, 43, 46, 49, 55, 50, 47, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\")', r\"\\\\\"+r\"\\\"\", str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0057201385498046875, "tests_passed": true, "error": null}}
{"selected_lines": [52, 44, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The given directory does not exist: {directory_path}\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0015201568603515625, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [50, 53, 51, 48, 55, 43, 44, 54, 52, 46, 45, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\")', r\"\\1\", data)\n        escaped_data = re.sub(r'(\"[^\"]+\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 55, 50, 51, 52, 53, 46, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"|\\')', '\\\\\\\\\\\\1', json.dumps(data))\n        escaped_data = json.loads(escaped_data.replace('\"', '\"\\\\\"'))\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [54, 45, 47, 51, 55, 52, 46, 49, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"([^\\\\\\\\]\\\")\", r\"\\\\\\1\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004608154296875, "tests_passed": true, "error": null}}
{"selected_lines": [49, 51, 53, 52, 44, 54, 46, 47, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} doesn't exist!\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub('\"', '\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0042438507080078125, "tests_passed": true, "error": null}}
{"selected_lines": [48, 49, 46, 51, 43, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = json.loads(escaped_data.replace('\"', '\"\\\\\"'))\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [46, 55, 44, 49, 48, 45, 51, 54, 47, 43, 52, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(os.path.join(directory_path, \"**\", \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data).replace('\\\"', '\"')\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0013718605041503906, "tests_passed": true, "error": null}}
{"selected_lines": [49, 54, 44, 47, 53, 50, 48, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004305124282836914, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [53, 44, 51, 45, 49, 47, 48, 54, 52, 50, 46, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(os.path.join(directory_path, '**/*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=None).replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\\\\", \"\\\\\\\\\")\n        escaped_data = re.sub(\"([^\\\\\\\\]\\\")\", r\"\\\\\\1\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0015859603881835938, "tests_passed": true, "error": null}}
{"selected_lines": [50, 51, 49, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'\"', r'\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004392862319946289, "tests_passed": true, "error": null}}
{"selected_lines": [50, 53, 44, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The given directory does not exist: {directory_path}\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53, 47, 45, 51, 44, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, '*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub('\"', '\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004462003707885742, "tests_passed": true, "error": null}}
{"selected_lines": [51, 53, 50, 48, 54, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")', lambda m: m.group(0)[1:].replace(\"\\\\\", \"\\\\\\\\\\\\\"), str(data))\n        escaped_data = escaped_data.replace('\\\"', '\\\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004326820373535156, "tests_passed": true, "error": null}}
{"selected_lines": [46, 53, 47, 52, 50, 55, 49, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\\\\"+r\"\\\"\", str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0058460235595703125, "tests_passed": true, "error": null}}
{"selected_lines": [53, 46, 43, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004555940628051758, "tests_passed": true, "error": null}}
{"selected_lines": [43, 52, 54, 47, 44, 48, 51, 45, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\".+?\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50, 48, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r'\\\\\\\\\\\\1', data)\n        escaped_data = re.sub(r\"(?<!\\\\)\" + r'\"', r\"\\\\\" + r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [55, 53, 54, 46, 43, 44, 48, 51, 47, 50, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\"|\\\\)', r'\\\\\\1', data)\n        escaped_data = re.sub('\"', '\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 49, 43, 46, 50, 48, 44, 55, 51, 47, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, '*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 55, 51, 46, 52, 50, 45, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} does not exist!\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"', r'\"\\+', data)\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 55, 49, 54, 53, 46, 43, 44, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(os.path.join(directory_path, '*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\\\\\\\\\")', r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0016560554504394531, "tests_passed": true, "error": null}}
{"selected_lines": [45, 47, 43, 54, 46, 53, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")', lambda m: m.group(0)[1:].replace(\"\\\\\", \"\\\\\\\\\\\\\"), str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.006092071533203125, "tests_passed": true, "error": null}}
{"selected_lines": [48, 46, 49, 47, 45, 51, 55, 52, 53, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"([^\\\\w]{2})([\" + '\"' + \"])\", r\"\\1\\\\\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0046007633209228516, "tests_passed": true, "error": null}}
{"selected_lines": [55, 51, 45, 50, 47, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [46, 53, 48, 44, 47, 43, 52, 55, 51, 45, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r', encoding=\"utf-8\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0017287731170654297, "tests_passed": true, "error": null}}
{"selected_lines": [54, 51, 48, 45, 46, 53, 50, 43, 44, 55, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '**/*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = re.sub(r'(\\\\\")', r'\\\\\"', escaped_data)  # Escape double quotes\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [49, 54, 44, 47, 53, 50, 48, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004305124282836914, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [55, 54, 44, 53, 43, 48, 46, 45, 51, 52, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + \"/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"([^\\\\w]{2})([\" + '\"' + \"])\", r\"\\1\\\\\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004516124725341797, "tests_passed": true, "error": null}}
{"selected_lines": [48, 53, 44, 52, 49, 54, 45, 50, 46, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0013549327850341797, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [46, 45, 50, 47, 43, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"(?![^\"\\\\]*(\\\\\\\\|[\"])|([{}[\\],:])?)', r'\\\\\"\\1', data)\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 50, 46, 48, 47, 53, 49, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"|\\\\)', r'\\\\\\1', data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [52, 51, 55, 44, 45, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")(.*)(\")', r'\\\\\"\\1\\3\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004477024078369141, "tests_passed": true, "error": null}}
{"selected_lines": [52, 48, 49, 53, 47, 45, 50, 44, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data).replace('\"', '\\\\\"')\n        escaped_data = re.sub('\"', '\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004324913024902344, "tests_passed": true, "error": null}}
{"selected_lines": [55, 50, 48, 54, 43, 47, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as f:\n            data = json.load(file)\n        escaped_data = re.sub(r'(?<!\\\\)\"', '\\\\\"', str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48, 53, 54, 46, 51, 47, 50, 55, 44, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"(?![^\"\\\\]*(\\\\\\\\|[\"])|([{}[\\],:])?)', r'\\\\\"\\1', data)\n        escaped_data = re.sub(\"([^\\\\w]{2})([\" + '\"' + \"])\", r\"\\1\\\\\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [49, 55, 48, 44, 54, 45, 46, 52, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r', encoding=\"utf-8\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\\\\\")', r'\\\\\"', escaped_data)  # Escape double quotes\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0015323162078857422, "tests_passed": true, "error": null}}
{"selected_lines": [45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011718988418579102, "tests_passed": true, "error": null}}
{"selected_lines": [54, 45, 48, 51, 47, 49, 43, 52, 46, 44, 53, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path + \" does not exist\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = json.loads(escaped_data.replace('\"', '\"\\\\\"'))\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [55, 51, 50, 53, 48, 54, 45, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = file.read()\n        escaped_data = json.dumps(data).replace('\\\"', '\"')\n        escaped_data = re.sub('\"', '\\\\\\\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [52, 55, 48, 53, 44, 47, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 43, 49, 52, 47, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004400968551635742, "tests_passed": true, "error": null}}
{"selected_lines": [45, 52, 44, 49, 55, 46, 48, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + \"/[!~]*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\".+?\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 55, 48, 49, 46, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004284858703613281, "tests_passed": true, "error": null}}
{"selected_lines": [47, 43, 51, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\".+?\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [49, 45, 51, 55, 48, 52, 50, 43, 44, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"\\\"\\\"|(?<!\\\\)\\\"\", \"\\\"\\\"\", json.dumps(data))\n        escaped_data = re.sub(\"\\\\\", \"\\\\\\\\\\\\\\\\\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50, 54, 52, 46, 43, 55, 44, 51, 49, 53, 48, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"|\\')', '\\\\\\\\\\\\1', json.dumps(data))\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0050201416015625, "tests_passed": true, "error": null}}
{"selected_lines": [49, 46, 47, 43, 53, 45, 44, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0014662742614746094, "tests_passed": true, "error": null}}
{"selected_lines": [50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=4, separators=(', ', ': '))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012253284454345703, "tests_passed": true, "error": null}}
{"selected_lines": [49, 50, 55, 53, 54, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"\\\"\\\"|(?<!\\\\)\\\"\", \"\\\"\\\"\", json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005446910858154297, "tests_passed": true, "error": null}}
{"selected_lines": [50, 45, 54, 55, 43, 48, 52, 46, 53, 51, 47, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(os.path.join(directory_path, '**/*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = re.sub(\"([^\\\\\\\\]\\\")\", r\"\\\\\\1\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 48, 50, 55, 53, 49, 51, 43, 46, 45, 54, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r', encoding=\"utf-8\") as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\\\\"+r\"\\\"\", str(data))\n        escaped_data = re.sub(r'\"(.*?)\"', r'\"\\\\\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0012691020965576172, "tests_passed": true, "error": null}}
{"selected_lines": [45, 43, 50, 44, 54, 51, 48, 49, 53, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path + \" not found\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(\"([^\\\\w]{2})([\" + '\"' + \"])\", r\"\\1\\\\\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [55, 54, 51, 53, 43, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"|\\\\)', r'\\\\\\1', data)\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [52, 44, 51, 47, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00433802604675293, "tests_passed": true, "error": null}}
{"selected_lines": [50, 44, 43, 53, 48, 54, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r'\\\\\"', str(data))  # Escape double quotes\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00442194938659668, "tests_passed": true, "error": null}}
{"selected_lines": [49, 54, 51, 45, 43, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'\"(.*?)\"', r'\"\\\\\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0016360282897949219, "tests_passed": true, "error": null}}
{"selected_lines": [55, 46, 45, 50, 49, 48, 51, 53, 44, 43, 47, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'(\".+?\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0014989376068115234, "tests_passed": true, "error": null}}
{"selected_lines": [46, 48, 55, 47, 50, 52, 45, 53, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53, 48, 46, 43, 44, 49, 54, 52, 51, 45, 55, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} doesn't exist!\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\\\\"+r\"\\\"\", str(data))\n        escaped_data = re.sub(r'(\")', r'\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004323244094848633, "tests_passed": true, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011481761932373047, "tests_passed": true, "error": null}}
{"selected_lines": [50, 52, 46, 45, 53, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\\\\"+r\"\\\"\", str(data))\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004591226577758789, "tests_passed": true, "error": null}}
{"selected_lines": [46, 49, 43, 51, 50, 44, 45, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = re.sub(\"\\\\\", \"\\\\\\\\\\\\\\\\\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\\\\\\\\\")', r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.008704900741577148, "tests_passed": true, "error": null}}
{"selected_lines": [43, 45, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0012850761413574219, "tests_passed": true, "error": null}}
{"selected_lines": [52, 49, 51, 46, 55, 47, 48, 44, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r', encoding=\"utf-8\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\"[^\"]+\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0016009807586669922, "tests_passed": true, "error": null}}
{"selected_lines": [52, 48, 51, 44, 50, 49, 45, 53, 47, 54, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=None).replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\\\\", \"\\\\\\\\\")\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 46, 48, 53, 50, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"(?!\\\\\\\\)\", r\"\\\\\\\"\", json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 44, 46, 51, 43, 53, 55, 49, 54, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004325151443481445, "tests_passed": true, "error": null}}
{"selected_lines": [44, 49, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004595279693603516, "tests_passed": true, "error": null}}
{"selected_lines": [46, 43, 55, 48, 45, 49, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [55, 53, 54, 52, 48, 44, 43, 50, 49, 45, 46, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as f:\n            data = file.read()\n        escaped_data = re.sub(r'(?<!\\\\)\"', '\\\\\"', str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50, 43, 48, 52, 45, 53, 51, 55, 49, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = re.sub(r'(\\\\\")', r'\\\\\"', escaped_data)  # Escape double quotes\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 53, 55, 51, 49, 44, 46, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"|\\')', '\\\\\\\\\\\\1', json.dumps(data))\n        escaped_data = re.sub(\"\\\\\", \"\\\\\\\\\\\\\\\\\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51, 55, 53, 44, 49, 43, 52, 50, 47, 45, 46, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The given directory does not exist: {directory_path}\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, indent=None).replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\\\\", \"\\\\\\\\\")\n        escaped_data = re.sub(r'(\\\\\")', r'\\\\\"', escaped_data)  # Escape double quotes\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005928993225097656, "tests_passed": true, "error": null}}
{"selected_lines": [47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.009120941162109375, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [54, 52, 43, 53, 47, 48, 45, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0046961307525634766, "tests_passed": true, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011098146438598633, "tests_passed": true, "error": null}}
{"selected_lines": [48, 45, 46, 49, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004316806793212891, "tests_passed": true, "error": null}}
{"selected_lines": [54, 55, 51, 49, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\\\\\")', r'\\\\\"', escaped_data)  # Escape double quotes\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0042171478271484375, "tests_passed": true, "error": null}}
{"selected_lines": [48, 47, 50, 53, 44, 49, 51, 55, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found: {directory_path}\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub(\"([^\\\\w]{2})([\" + '\"' + \"])\", r\"\\1\\\\\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004403829574584961, "tests_passed": true, "error": null}}
{"selected_lines": [49, 45, 44, 47, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004250764846801758, "tests_passed": true, "error": null}}
{"selected_lines": [44, 55, 51, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The given directory does not exist: {directory_path}\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\\\\\\\\\")', r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0015790462493896484, "tests_passed": true, "error": null}}
{"selected_lines": [43, 47, 44, 53, 51, 50, 52, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\\\\"+r\"\\\"\", str(data))\n        escaped_data = re.sub(r'(\"[^\"]+\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004251003265380859, "tests_passed": true, "error": null}}
{"selected_lines": [45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.029146909713745117, "tests_passed": true, "error": null}}
{"selected_lines": [48, 47, 44, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004552125930786133, "tests_passed": true, "error": null}}
{"selected_lines": [53, 55, 48, 51, 49, 46, 44, 47, 43, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'\"(.*?)\"', r'\"\\\\\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0017859935760498047, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [55, 48, 52, 53, 43, 44, 46, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0017206668853759766, "tests_passed": true, "error": null}}
{"selected_lines": [47, 50, 44, 55, 45, 52, 51, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"', r'\"\\+', data)\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [54, 51, 47, 46, 55, 45, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(?![^\"\\\\]*(\\\\\\\\|\\r?\\n))', '\\\\\"', str(data))\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004952907562255859, "tests_passed": true, "error": null}}
{"selected_lines": [54, 43, 45, 47, 51, 49, 48, 44, 50, 52, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} doesn't exist!\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [52, 46, 55, 48, 51, 43, 45, 50, 53, 49, 54, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, indent=None).replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\\\\", \"\\\\\\\\\")\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0043909549713134766, "tests_passed": true, "error": null}}
{"selected_lines": [45, 47, 51, 55, 50, 53, 54, 43, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '**/*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"', r'\"\\+', data)\n        escaped_data = re.sub(\"\\\\\\\\\\\"\", \"\\\\\\\\\\\\\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48, 47, 52, 49, 51, 53, 50, 54, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\")', r'\\\\\"', str(data))  # Escape double quotes\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004297971725463867, "tests_passed": true, "error": null}}
{"selected_lines": [46, 43, 52, 48, 50, 53, 47, 45, 51, 44, 49, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\")', r'\\\\\"', str(data))  # Escape double quotes\n        escaped_data = json.loads(escaped_data.replace('\"', '\"\\\\\"'))\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 45, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004367828369140625, "tests_passed": true, "error": null}}
{"selected_lines": [47, 52, 50, 54, 49, 46, 45, 51, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, indent=2, sort_keys=True)\n        escaped_data = re.sub(\"\\\\\\\\\\\"\", \"\\\\\\\\\\\\\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0044651031494140625, "tests_passed": true, "error": null}}
{"selected_lines": [49, 55, 46, 45, 54, 53, 48, 47, 52, 43, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011481761932373047, "tests_passed": true, "error": null}}
{"selected_lines": [53, 44, 48, 52, 47, 49, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as f:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"\\\\\", \"\\\\\\\\\\\\\\\\\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 55, 46, 43, 53, 51, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0015978813171386719, "tests_passed": true, "error": null}}
{"selected_lines": [48, 45, 52, 47, 44, 50, 43, 55, 49, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"|\\')', '\\\\\\\\\\\\1', json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004258871078491211, "tests_passed": true, "error": null}}
{"selected_lines": [43, 49, 47, 48, 46, 55, 44, 52, 50, 45, 53, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004575967788696289, "tests_passed": true, "error": null}}
{"selected_lines": [46, 45, 44, 55, 53, 51, 48, 47, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist\")\n    json_files = glob.glob(directory_path + \"/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"\\\\\", \"\\\\\\\\\\\\\\\\\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48, 53, 43, 55, 45, 50, 46, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005190134048461914, "tests_passed": true, "error": null}}
{"selected_lines": [47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.009120941162109375, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [55, 47, 45, 44, 50, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '**/*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0016481876373291016, "tests_passed": true, "error": null}}
{"selected_lines": [44, 50, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path + \" not found\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r'\\\\\"', str(data))  # Escape double quotes\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005158901214599609, "tests_passed": true, "error": null}}
{"selected_lines": [54, 53, 43, 47, 49, 46, 51, 45, 44, 48, 52, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"The given directory does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(r\"([^\\\\]|^)(\\\\\\\"|\\\\\\\")\", r\"\\1\\\\\\\"\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.017317771911621094, "tests_passed": true, "error": null}}
{"selected_lines": [44, 52, 48, 53, 51, 46, 49, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\"[^\"]+\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0015778541564941406, "tests_passed": true, "error": null}}
{"selected_lines": [50, 49, 51, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004324197769165039, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [46, 47, 43, 48, 53, 44, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004350185394287109, "tests_passed": true, "error": null}}
{"selected_lines": [48, 43, 52, 45, 44, 51, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(directory_path + \" does not exist\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004328012466430664, "tests_passed": true, "error": null}}
{"selected_lines": [47, 43, 50, 53, 51, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"\\\"\\\"|(?<!\\\\)\\\"\", \"\\\"\\\"\", json.dumps(data))\n        escaped_data = re.sub(\"(?<!\\\\)\\\"\", r\"\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 44, 47, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004415988922119141, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [44, 47, 55, 52, 50, 49, 45, 54, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'\"', r'\"\\+', data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 49, 54, 52, 46, 43, 47, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0044209957122802734, "tests_passed": true, "error": null}}
{"selected_lines": [44, 48, 51, 45, 50, 55, 49, 52, 47, 54, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r', encoding=\"utf-8\") as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")', lambda m: m.group(0)[1:].replace(\"\\\\\", \"\\\\\\\\\\\\\"), str(data))\n        escaped_data = re.sub(\"(?<!\\\\)\\\"\", r\"\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [54, 53, 43, 50, 47, 44, 48, 49, 46, 51, 52, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=2, sort_keys=True)\n        escaped_data = re.sub(r'(\\\\\")', r'\\\\\"', escaped_data)  # Escape double quotes\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r'\\\\\"', str(data))  # Escape double quotes\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011399984359741211, "tests_passed": true, "error": null}}
{"selected_lines": [55, 44, 48, 45, 53, 49, 54, 46, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0012891292572021484, "tests_passed": true, "error": null}}
{"selected_lines": [50, 49, 45, 43, 52, 55, 47, 48, 54, 44, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r\"\\\"\\\"|(?<!\\\\)\\\"\", \"\\\"\\\"\", json.dumps(data))\n        escaped_data = re.sub(r'\"', r'\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 48, 43, 51, 50, 44, 52, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} doesn't exist!\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(?![^\"\\\\]*(\\\\\\\\|\\r?\\n))', '\\\\\"', str(data))\n        escaped_data = escaped_data.replace('\\\"', '\\\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00419306755065918, "tests_passed": true, "error": null}}
{"selected_lines": [45, 50, 55, 54, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(.*)\"', r'\"\\1\"', json.dumps(data))\n        escaped_data = re.sub(r\"(?<!\\\\)\" + r'\"', r\"\\\\\" + r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005166053771972656, "tests_passed": true, "error": null}}
{"selected_lines": [48, 45, 47, 51, 52, 44, 43, 50, 54, 49, 53, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as f:\n            data = json.load(file)\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = re.sub(r'(\")(.*)(\")', r'\\\\\"\\1\\3\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.029146909713745117, "tests_passed": true, "error": null}}
{"selected_lines": [52, 45, 51, 47, 48, 53, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0017628669738769531, "tests_passed": true, "error": null}}
{"selected_lines": [55, 50, 49, 52, 51, 45, 53, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = re.sub(\"([^\\\\w]{2})([\" + '\"' + \"])\", r\"\\1\\\\\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [46, 53, 43, 52, 48, 45, 54, 51, 47, 49, 55, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = file.read()\n        escaped_data = json.dumps(data, indent=2, sort_keys=True)\n        escaped_data = re.sub(r'(\\\\\")', r'\\\\\"', escaped_data)  # Escape double quotes\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004858970642089844, "tests_passed": true, "error": null}}
{"selected_lines": [46, 53, 52, 54, 49, 45, 43, 51, 50, 48, 47, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.006862163543701172, "tests_passed": true, "error": null}}
{"selected_lines": [46, 45, 44, 54, 51, 47, 55, 52, 50, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"(?!\\\\\\\\)\", r\"\\\\\\\"\", json.dumps(data))\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0012590885162353516, "tests_passed": true, "error": null}}
{"selected_lines": [51, 45, 54, 46, 55, 47, 52, 48, 53, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"The given directory does not exist.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004403114318847656, "tests_passed": true, "error": null}}
{"selected_lines": [50, 54, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"|\\\\)', r'\\\\\\1', data)\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path + \" does not exist\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011096954345703125, "tests_passed": true, "error": null}}
{"selected_lines": [49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.01175689697265625, "tests_passed": true, "error": null}}
{"selected_lines": [51, 50, 43, 49, 47, 53, 45, 44, 48, 55, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(?<!\\\\)\"', '\\\\\"', str(data))\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0043370723724365234, "tests_passed": true, "error": null}}
{"selected_lines": [50, 44, 55, 45, 49, 52, 54, 51, 53, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r'\\\\\\\\\\\\1', data)\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 52, 48, 47, 53, 44, 55, 46, 43, 54, 49, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found: {directory_path}\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"\\\"\\\"|(?<!\\\\)\\\"\", \"\\\"\\\"\", json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0045928955078125, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [54, 48, 46, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004357099533081055, "tests_passed": true, "error": null}}
{"selected_lines": [55, 52, 51, 54, 44, 49, 43, 50, 46, 47, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path + \" not found\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\")', r'\\\\\"', str(data))  # Escape double quotes\n        escaped_data = re.sub(\"(?<!\\\\)\\\"\", r\"\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 49, 46, 54, 55, 47, 48, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004447221755981445, "tests_passed": true, "error": null}}
{"selected_lines": [50, 44, 45, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\\\\"+r\"\\\"\", str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004405021667480469, "tests_passed": true, "error": null}}
{"selected_lines": [43, 45, 48, 50, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(?<!\\\\)\"', '\\\\\"', str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00494384765625, "tests_passed": true, "error": null}}
{"selected_lines": [46, 50, 52, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=4, separators=(', ', ': '))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [54, 55, 47, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [46, 49, 51, 54, 52, 55, 43, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0019538402557373047, "tests_passed": true, "error": null}}
{"selected_lines": [54, 47, 44, 51, 48, 50, 53, 52, 55, 45, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=None).replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\\\\", \"\\\\\\\\\")\n        escaped_data = re.sub(r'(\".+?\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004204988479614258, "tests_passed": true, "error": null}}
{"selected_lines": [50, 43, 46, 55, 54, 52, 44, 45, 53, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\\\\"+r\"\\\"\", str(data))\n        escaped_data = re.sub('\"', '\\\\\\\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.008574247360229492, "tests_passed": true, "error": null}}
{"selected_lines": [48, 46, 47, 44, 55, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file) as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [49, 55, 45, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'\"(.*?)\"', r'\"\\\\\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0016009807586669922, "tests_passed": true, "error": null}}
{"selected_lines": [50, 45, 54, 51, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(?![^\"\\\\]*(\\\\\\\\|\\r?\\n))', '\\\\\"', str(data))\n        escaped_data = re.sub(r'(\")', r'\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004545927047729492, "tests_passed": true, "error": null}}
{"selected_lines": [47, 46, 45, 53, 50, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} doesn't exist!\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004339933395385742, "tests_passed": true, "error": null}}
{"selected_lines": [52, 51, 45, 49, 46, 48, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004341840744018555, "tests_passed": true, "error": null}}
{"selected_lines": [51, 47, 50, 43, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=None).replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\\\\", \"\\\\\\\\\")\n        escaped_data = re.sub(\"([^\\\\w]{2})([\" + '\"' + \"])\", r\"\\1\\\\\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.017317771911621094, "tests_passed": true, "error": null}}
{"selected_lines": [53, 54, 49, 44, 45, 43, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [49, 48, 55, 46, 54, 50, 51, 52, 43, 53, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")', lambda m: m.group(0)[1:].replace(\"\\\\\", \"\\\\\\\\\\\\\"), str(data))\n        escaped_data = re.sub(\"([^\\\\w]{2})([\" + '\"' + \"])\", r\"\\1\\\\\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004204988479614258, "tests_passed": true, "error": null}}
{"selected_lines": [49, 55, 44, 51, 43, 47, 52, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")', r'\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0040471553802490234, "tests_passed": true, "error": null}}
{"selected_lines": [51, 44, 48, 47, 46, 43, 52, 45, 50, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + \"/[!~]*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"(?!\\\\\\\\)\", r\"\\\\\\\"\", json.dumps(data))\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005710124969482422, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [45, 47, 49, 44, 50, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} does not exist!\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r'\\\\\"', str(data))  # Escape double quotes\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005589962005615234, "tests_passed": true, "error": null}}
{"selected_lines": [47, 44, 54, 53, 55, 51, 46, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} doesn't exist!\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"\\\\\", \"\\\\\\\\\\\\\\\\\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 52, 54, 46, 47, 55, 45, 53, 50, 48, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The given directory does not exist: {directory_path}\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0013380050659179688, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.017317771911621094, "tests_passed": true, "error": null}}
{"selected_lines": [47, 48, 43, 49, 44, 51, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r\"(?<!\\\\)\" + r'\"', r\"\\\\\" + r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"([^\\\\w]{2})([\" + '\"' + \"])\", r\"\\1\\\\\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012360811233520508, "tests_passed": true, "error": null}}
{"selected_lines": [55, 44, 51, 50, 49, 54, 47, 52, 45, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(\"\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51, 43, 52, 50, 44, 53, 47, 46, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data).replace('\"', '\\\\\"')\n        escaped_data = json.loads(escaped_data.replace('\"', '\"\\\\\"'))\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [52, 50, 51, 45, 55, 47, 46, 49, 48, 53, 54, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")', lambda m: m.group(0)[1:].replace(\"\\\\\", \"\\\\\\\\\\\\\"), str(data))\n        escaped_data = re.sub(r'(\"[^\"]+\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004227161407470703, "tests_passed": true, "error": null}}
{"selected_lines": [51, 54, 47, 44, 53, 50, 43, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} does not exist!\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r\"([^\\\\]|^)(\\\\\\\"|\\\\\\\")\", r\"\\1\\\\\\\"\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0016069412231445312, "tests_passed": true, "error": null}}
{"selected_lines": [54, 51, 44, 49, 48, 46, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"\\\\\\\\\\\"\", \"\\\\\\\\\\\\\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 51, 45, 53, 54, 49, 46, 50, 47, 55, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"\\\"\\\"|(?<!\\\\)\\\"\", \"\\\"\\\"\", json.dumps(data))\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.001512765884399414, "tests_passed": true, "error": null}}
{"selected_lines": [51, 50, 53, 45, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\1\", data)\n        escaped_data = re.sub(r'\"(.*?)\"', r'\"\\\\\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [54, 55, 45, 53, 51, 46, 48, 49, 52, 50, 44, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = escaped_data.replace('\\\"', '\\\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004297971725463867, "tests_passed": true, "error": null}}
{"selected_lines": [44, 45, 49, 46, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004575967788696289, "tests_passed": true, "error": null}}
{"selected_lines": [51, 54, 43, 46, 50, 53, 44, 45, 47, 52, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} doesn't exist!\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=2, sort_keys=True)\n        escaped_data = re.sub(r\"(?<!\\\\)\" + r'\"', r\"\\\\\" + r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004556894302368164, "tests_passed": true, "error": null}}
{"selected_lines": [45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/[!~]*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011183977127075195, "tests_passed": true, "error": null}}
{"selected_lines": [46, 48, 47, 43, 50, 54, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r'\\\\\\\\\\\\1', data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [55, 43, 46, 49, 47, 50, 44, 51, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = re.sub(r\"(?<!\\\\)\" + r'\"', r\"\\\\\" + r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53, 46, 44, 49, 47, 43, 52, 54, 45, 50, 48, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=4, separators=(', ', ': '))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00445103645324707, "tests_passed": true, "error": null}}
{"selected_lines": [52, 45, 44, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"The given directory does not exist.\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0012979507446289062, "tests_passed": true, "error": null}}
{"selected_lines": [45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011718988418579102, "tests_passed": true, "error": null}}
{"selected_lines": [49, 53, 44, 50, 52, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'\"', r'\"\\+', data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004593849182128906, "tests_passed": true, "error": null}}
{"selected_lines": [49, 43, 53, 50, 54, 52, 51, 46, 48, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found: {directory_path}\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub(\"(?<!\\\\)\\\"\", r\"\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012193918228149414, "tests_passed": true, "error": null}}
{"selected_lines": [55, 54, 48, 45, 51, 49, 50, 53, 47, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(directory_path + \"/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = escaped_data.replace('\\\"', '\\\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 45, 49, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + \"/[!~]*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005763053894042969, "tests_passed": true, "error": null}}
{"selected_lines": [44, 48, 46, 52, 53, 47, 45, 54, 50, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005314826965332031, "tests_passed": true, "error": null}}
{"selected_lines": [44, 45, 49, 46, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004575967788696289, "tests_passed": true, "error": null}}
{"selected_lines": [55, 49, 54, 43, 47, 48, 46, 50, 52, 45, 53, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data).replace('\\\"', '\"')\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.01175689697265625, "tests_passed": true, "error": null}}
{"selected_lines": [50, 54, 46, 48, 45, 43, 51, 52, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(.*)\"', r'\"\\1\"', json.dumps(data))\n        escaped_data = json.loads(escaped_data.replace('\"', '\"\\\\\"'))\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [52, 51, 43, 54, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004322052001953125, "tests_passed": true, "error": null}}
{"selected_lines": [47, 43, 49, 50, 51, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data).replace('\"', '\\\\\"')\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004445075988769531, "tests_passed": true, "error": null}}
{"selected_lines": [52, 44, 55, 45, 49, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004350900650024414, "tests_passed": true, "error": null}}
{"selected_lines": [43, 52, 50, 53, 51, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r\"(?<!\\\\)\" + r'\"', r\"\\\\\" + r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004463911056518555, "tests_passed": true, "error": null}}
{"selected_lines": [48, 49, 55, 46, 53, 54, 51, 45, 50, 44, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\")', r\"\\1\", data)\n        escaped_data = re.sub(r\"(?<!\\\\)\" + r'\"', r\"\\\\\" + r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [55, 51, 54, 43, 53, 45, 47, 44, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")', r'\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [52, 43, 47, 49, 48, 46, 54, 45, 53, 55, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004406929016113281, "tests_passed": true, "error": null}}
{"selected_lines": [45, 53, 49, 48, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 50, 51, 46, 53, 47, 49, 52, 45, 48, 54, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.015745162963867188, "tests_passed": true, "error": null}}
{"selected_lines": [43, 48, 51, 55, 46, 45, 52, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004209280014038086, "tests_passed": true, "error": null}}
{"selected_lines": [43, 52, 44, 55, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005496025085449219, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [48, 52, 50, 49, 46, 47, 44, 53, 54, 43, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r', encoding=\"utf-8\") as file:\n            data = file.read()\n        escaped_data = {}\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [52, 47, 48, 50, 43, 45, 51, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '**/*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 55, 45, 48, 49, 51, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/[!~]*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00580596923828125, "tests_passed": true, "error": null}}
{"selected_lines": [46, 48, 45, 44, 43, 54, 50, 49, 53, 52, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 53, 49, 45, 54, 43, 47, 48, 55, 50, 52, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\")', r'\\\\\"', str(data))  # Escape double quotes\n        escaped_data = re.sub('\"', '\\\\\\\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004232883453369141, "tests_passed": true, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"\\\\\", \"\\\\\\\\\\\\\\\\\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.009032964706420898, "tests_passed": false, "error": "re.error"}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [44, 52, 50, 49, 45, 53, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r\"(?<!\\\\)\" + r'\"', r\"\\\\\" + r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004313945770263672, "tests_passed": true, "error": null}}
{"selected_lines": [53, 50, 51, 43, 45, 48, 55, 47, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = re.sub(\"\\\\\\\\\\\"\", \"\\\\\\\\\\\\\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50, 53, 45, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '**/*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"\\\"\\\"|(?<!\\\\)\\\"\", \"\\\"\\\"\", json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0013887882232666016, "tests_passed": true, "error": null}}
{"selected_lines": [53, 50, 43, 48, 54, 47, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = re.sub('\"', '\\\\\"', json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50, 54, 48, 51, 44, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"The given directory does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = escaped_data.replace('\\\"', '\\\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 49, 53, 43, 54, 50, 55, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(?![^\"\\\\]*(\\\\\\\\|\\r?\\n))', '\\\\\"', str(data))\n        escaped_data = re.sub(\"\\\\\\\\\\\"\", \"\\\\\\\\\\\\\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0041408538818359375, "tests_passed": true, "error": null}}
{"selected_lines": [44, 54, 43, 53, 48, 49, 55, 51, 46, 45, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50, 48, 51, 49, 44, 52, 43, 45, 55, 46, 47, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"The given directory does not exist: {directory_path}\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = file.read()\n        escaped_data = re.sub('\"', '\\\\\"', json.dumps(data))\n        escaped_data = re.sub(r\"(?<!\\\\)\" + r'\"', r\"\\\\\" + r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'\"', r'\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011307954788208008, "tests_passed": true, "error": null}}
{"selected_lines": [54, 47, 44, 48, 46, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004334926605224609, "tests_passed": true, "error": null}}
{"selected_lines": [49, 47, 51, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(r\"(?<!\\\\)\" + r'\"', r\"\\\\\" + r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48, 53, 43, 45, 44, 50, 46, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 52, 55, 53, 50, 47, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0042188167572021484, "tests_passed": true, "error": null}}
{"selected_lines": [43, 44, 49, 47, 54, 53, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\"[^\"]+\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0015287399291992188, "tests_passed": true, "error": null}}
{"selected_lines": [50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub('\"', '\\\\\"', json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011181116104125977, "tests_passed": true, "error": null}}
{"selected_lines": [53, 43, 45, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0040740966796875, "tests_passed": true, "error": null}}
{"selected_lines": [51, 45, 46, 50, 53, 43, 55, 47, 44, 49, 48, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = escaped_data.replace('\\\"', '\\\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.01292109489440918, "tests_passed": true, "error": null}}
{"selected_lines": [55, 49, 54, 47, 46, 48, 43, 53, 45, 50, 52, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = file.read()\n        escaped_data = json.dumps(data).replace('\\\"', '\"')\n        escaped_data = re.sub(r\"([^\\\\]|^)(\\\\\\\"|\\\\\\\")\", r\"\\1\\\\\\\"\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004486799240112305, "tests_passed": true, "error": null}}
{"selected_lines": [49, 48, 55, 54, 44, 46, 45, 51, 47, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(os.path.join(directory_path, '*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = file.read()\n        escaped_data = re.sub(r'(\")', r'\\\\\\\\\\\\1', data)\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 55, 44, 51, 46, 53, 48, 50, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(directory_path + \" does not exist\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data).replace('\"', '\\\\\"')\n        escaped_data = re.sub(r'(\\\\\\\\\")', r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004587888717651367, "tests_passed": true, "error": null}}
{"selected_lines": [47, 50, 46, 51, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0016820430755615234, "tests_passed": true, "error": null}}
{"selected_lines": [54, 45, 46, 49, 43, 51, 48, 52, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'\"(.*?)\"', r'\"\\\\\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004661083221435547, "tests_passed": true, "error": null}}
{"selected_lines": [54, 53, 48, 43, 50, 52, 55, 45, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file) as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011718988418579102, "tests_passed": true, "error": null}}
{"selected_lines": [52, 43, 49, 51, 48, 44, 45, 50, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path + \" not found\")\n    json_files = glob.glob(os.path.join(directory_path, \"**\", \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data)\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.001373291015625, "tests_passed": true, "error": null}}
{"selected_lines": [50, 55, 48, 43, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = re.sub('\"', '\\\\\"', json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [52, 50, 55, 54, 46, 51, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace(\"\\\\\", \"\\\\\\\\\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.001519918441772461, "tests_passed": true, "error": null}}
{"selected_lines": [50, 53, 52, 55, 45, 49, 43, 48, 51, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")', lambda m: m.group(0)[1:].replace(\"\\\\\", \"\\\\\\\\\\\\\"), str(data))\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004766225814819336, "tests_passed": true, "error": null}}
{"selected_lines": [44, 54, 51, 47, 49, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = json.loads(escaped_data.replace('\"', '\"\\\\\"'))\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011718988418579102, "tests_passed": true, "error": null}}
{"selected_lines": [52, 53, 43, 51, 49, 55, 45, 44, 54, 47, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0015811920166015625, "tests_passed": true, "error": null}}
{"selected_lines": [52, 46, 47, 50, 44, 51, 49, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data).replace('\"', '\\\\\"')\n        escaped_data = re.sub(\"\\\\\\\\\\\"\", \"\\\\\\\\\\\\\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48, 47, 44, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004552125930786133, "tests_passed": true, "error": null}}
{"selected_lines": [45, 46, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=2, sort_keys=True)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0061740875244140625, "tests_passed": true, "error": null}}
{"selected_lines": [44, 50, 51, 54, 55, 47, 48, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r', encoding=\"utf-8\") as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r'\\\\\\\\\\\\1', data)\n        escaped_data = re.sub(r\"([^\\\\]|^)(\\\\\\\"|\\\\\\\")\", r\"\\1\\\\\\\"\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [46, 48, 49, 54, 50, 52, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r\"\\\"\\\"|(?<!\\\\)\\\"\", \"\\\"\\\"\", json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004456043243408203, "tests_passed": true, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011929035186767578, "tests_passed": true, "error": null}}
{"selected_lines": [47, 45, 51, 43, 49, 54, 53, 46, 50, 55, 48, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r\"\\\"\\\"|(?<!\\\\)\\\"\", \"\\\"\\\"\", json.dumps(data))\n        escaped_data = escaped_data.replace(\"\\\\\", \"\\\\\\\\\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00431513786315918, "tests_passed": true, "error": null}}
{"selected_lines": [45, 52, 55, 51, 48, 46, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004517793655395508, "tests_passed": true, "error": null}}
{"selected_lines": [50, 51, 55, 47, 48, 49, 53, 52, 46, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = re.sub('\"', '\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [54, 53, 47, 51, 43, 46, 55, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0015039443969726562, "tests_passed": true, "error": null}}
{"selected_lines": [48, 50, 44, 52, 54, 53, 49, 45, 47, 43, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The given directory does not exist: {directory_path}\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = file.read()\n        escaped_data = re.sub(r'(\"|\\')', '\\\\\\\\\\\\1', json.dumps(data))\n        escaped_data = re.sub(\"([^\\\\w]{2})([\" + '\"' + \"])\", r\"\\1\\\\\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48, 54, 44, 51, 46, 50, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'\"(.*?)\"', r'\"\\\\\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53, 51, 52, 50, 49, 43, 46, 45, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")', lambda m: m.group(0)[1:].replace(\"\\\\\", \"\\\\\\\\\\\\\"), str(data))\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005023956298828125, "tests_passed": true, "error": null}}
{"selected_lines": [50, 53, 48, 44, 45, 52, 43, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"', r'\"\\+', data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 50, 44, 48, 55, 47, 45, 54, 51, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 53, 47, 51, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"([^\\\\\\\\]\\\")\", r\"\\\\\\1\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0019359588623046875, "tests_passed": true, "error": null}}
{"selected_lines": [49, 44, 52, 46, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"|\\\\)', r'\\\\\\1', data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [48, 46, 51, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub('\"', '\\\\\\\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00569605827331543, "tests_passed": true, "error": null}}
{"selected_lines": [47, 50, 51, 55, 52, 44, 46, 43, 53, 54, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(directory_path + \"/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = re.sub(\"([^\\\\\\\\]\\\")\", r\"\\\\\\1\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51, 45, 46, 52, 48, 50, 47, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\")', r\"\\\\\"+r\"\\\"\", str(data))\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0013089179992675781, "tests_passed": true, "error": null}}
{"selected_lines": [43, 54, 44, 51, 50, 53, 52, 47, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = re.sub(\"([^\\\\\\\\]\\\")\", r\"\\\\\\1\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 46, 52, 48, 45, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [49, 47, 52, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '**/*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0013341903686523438, "tests_passed": true, "error": null}}
{"selected_lines": [44, 53, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004284858703613281, "tests_passed": true, "error": null}}
{"selected_lines": [51, 49, 47, 44, 50, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, '*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0015060901641845703, "tests_passed": true, "error": null}}
{"selected_lines": [53, 45, 55, 50, 48, 47, 43, 49, 44, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory not found: {directory_path}\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r', encoding=\"utf-8\") as file:\n            data = json.load(file)\n        escaped_data = re.sub('\"', '\\\\\"', json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004391908645629883, "tests_passed": true, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012803077697753906, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [55, 51, 53, 50, 49, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'(\"[^\"]+\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0015339851379394531, "tests_passed": true, "error": null}}
{"selected_lines": [48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.01193094253540039, "tests_passed": true, "error": null}}
{"selected_lines": [54, 53, 47, 48, 45, 55, 46, 43, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = json.loads(escaped_data.replace('\"', '\"\\\\\"'))\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [52, 45, 44, 50, 49, 43, 54, 47, 51, 55, 53, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"The given directory does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = json.loads(escaped_data.replace('\"', '\"\\\\\"'))\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.007493019104003906, "tests_passed": true, "error": null}}
{"selected_lines": [52, 51, 47, 48, 46, 43, 53, 54, 50, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub(r\"(?<!\\\\)\" + r'\"', r\"\\\\\" + r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004380941390991211, "tests_passed": true, "error": null}}
{"selected_lines": [50, 44, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, indent=4, separators=(', ', ': '))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004297971725463867, "tests_passed": true, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012804031372070312, "tests_passed": true, "error": null}}
{"selected_lines": [46, 49, 52, 53, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00438690185546875, "tests_passed": true, "error": null}}
{"selected_lines": [50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.010780811309814453, "tests_passed": true, "error": null}}
{"selected_lines": [49, 50, 48, 51, 55, 52, 54, 53, 44, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r'\\\\\\\\\\\\1', data)\n        escaped_data = re.sub('\"', '\\\\\\\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [49, 55, 45, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'\"(.*?)\"', r'\"\\\\\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0016009807586669922, "tests_passed": true, "error": null}}
{"selected_lines": [44, 43, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00456690788269043, "tests_passed": true, "error": null}}
{"selected_lines": [53, 55, 45, 47, 50, 51, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(r'(\")(.*)(\")', r'\\\\\"\\1\\3\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50, 55, 49, 51, 44, 53, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0017547607421875, "tests_passed": true, "error": null}}
{"selected_lines": [50, 49, 51, 44, 43, 54, 52, 48, 47, 45, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"\\\"\\\"|(?<!\\\\)\\\"\", \"\\\"\\\"\", json.dumps(data))\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.001741170883178711, "tests_passed": true, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012803077697753906, "tests_passed": true, "error": null}}
{"selected_lines": [47, 46, 45, 53, 50, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} doesn't exist!\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004339933395385742, "tests_passed": true, "error": null}}
{"selected_lines": [49, 43, 55, 45, 47, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub('\"', '\\\\\"', json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005857944488525391, "tests_passed": true, "error": null}}
{"selected_lines": [52, 55, 43, 49, 54, 46, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0042002201080322266, "tests_passed": true, "error": null}}
{"selected_lines": [44, 48, 45, 53, 47, 51, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\\\\\\\\\")', r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00152587890625, "tests_passed": true, "error": null}}
{"selected_lines": [44, 51, 48, 50, 55, 49, 53, 54, 46, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as f:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(.*)\"', r'\"\\1\"', json.dumps(data))\n        escaped_data = re.sub(r'(\")(.*)(\")', r'\\\\\"\\1\\3\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} does not exist!\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011999130249023438, "tests_passed": true, "error": null}}
{"selected_lines": [48, 50, 49, 53, 46, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53, 48, 55, 50, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(.*)\"', r'\"\\1\"', json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50, 46, 48, 55, 45, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(os.path.join(directory_path, \"**\", \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as f:\n            data = json.load(file)\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"(?!\\\\\\\\)\", r\"\\\\\\\"\", json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"', r'\"\\+', data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.009035587310791016, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [45, 49, 50, 46, 51, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"\\\"\\\"|(?<!\\\\)\\\"\", \"\\\"\\\"\", json.dumps(data))\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0016770362854003906, "tests_passed": true, "error": null}}
{"selected_lines": [50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.01122593879699707, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [53, 47, 43, 44, 45, 55, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004147052764892578, "tests_passed": true, "error": null}}
{"selected_lines": [53, 43, 45, 48, 49, 55, 51, 47, 44, 46, 50, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004603147506713867, "tests_passed": true, "error": null}}
{"selected_lines": [45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012516021728515625, "tests_passed": true, "error": null}}
{"selected_lines": [55, 53, 54, 51, 48, 44, 47, 45, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory not found: {directory_path}\")\n    json_files = glob.glob(directory_path + \"/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")(.*)(\")', r'\\\\\"\\1\\3\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00451207160949707, "tests_passed": true, "error": null}}
{"selected_lines": [44, 53, 49, 52, 54, 48, 55, 50, 43, 45, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data).replace('\\\"', '\"')\n        escaped_data = re.sub(r\"(?<!\\\\)\" + r'\"', r\"\\\\\" + r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [55, 49, 45, 44, 50, 54, 46, 48, 43, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r', encoding=\"utf-8\") as file:\n            data = json.load(file)\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.007493019104003906, "tests_passed": true, "error": null}}
{"selected_lines": [44, 49, 46, 48, 47, 51, 43, 45, 50, 55, 54, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as f:\n            data = file.read()\n        escaped_data = re.sub(r'(\")', r\"\\\\\"+r\"\\\"\", str(data))\n        escaped_data = re.sub(r'(\\\\\\\\\")', r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012955904006958008, "tests_passed": true, "error": null}}
{"selected_lines": [45, 47, 43, 48, 52, 51, 50, 53, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=None).replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\\\\", \"\\\\\\\\\")\n        escaped_data = escaped_data.replace(\"\\\\\", \"\\\\\\\\\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'\"', r'\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011307954788208008, "tests_passed": true, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace(\"\\\\\", \"\\\\\\\\\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.007781028747558594, "tests_passed": true, "error": null}}
{"selected_lines": [51, 48, 49, 54, 46, 55, 44, 43, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.001667022705078125, "tests_passed": true, "error": null}}
{"selected_lines": [49, 46, 51, 55, 48, 54, 52, 53, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The given directory does not exist: {directory_path}\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004351139068603516, "tests_passed": true, "error": null}}
{"selected_lines": [46, 54, 47, 52, 44, 49, 51, 43, 53, 45, 50, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(?![^\"\\\\]*(\\\\\\\\|\\r?\\n))', '\\\\\"', str(data))\n        escaped_data = re.sub(r'(\")(.*)(\")', r'\\\\\"\\1\\3\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0044097900390625, "tests_passed": true, "error": null}}
{"selected_lines": [53, 46, 49, 54, 51, 44, 52, 50, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=2, sort_keys=True)\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0015950202941894531, "tests_passed": true, "error": null}}
{"selected_lines": [47, 51, 48, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(r'(\"[^\"]+\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48, 50, 49, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50, 43, 53, 45, 55, 44, 54, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=None).replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\\\\", \"\\\\\\\\\")\n        escaped_data = re.sub(\"([^\\\\\\\\]\\\")\", r\"\\\\\\1\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005583763122558594, "tests_passed": true, "error": null}}
{"selected_lines": [49, 45, 53, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005792856216430664, "tests_passed": true, "error": null}}
{"selected_lines": [55, 43, 50, 49, 46, 54, 51, 47, 45, 52, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found: {directory_path}\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data).replace('\\\"', '\"')\n        escaped_data = re.sub(\"(?<!\\\\)\\\"\", r\"\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [46, 47, 48, 52, 50, 45, 43, 54, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = file.read()\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004522085189819336, "tests_passed": true, "error": null}}
{"selected_lines": [52, 47, 45, 43, 50, 55, 44, 46, 53, 54, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 54, 43, 50, 51, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(?<!\\\\)\"', '\\\\\"', str(data))\n        escaped_data = re.sub(r'(\")(.*)(\")', r'\\\\\"\\1\\3\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004439830780029297, "tests_passed": true, "error": null}}
{"selected_lines": [53, 44, 51, 49, 54, 48, 50, 46, 45, 47, 55, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(?![^\"\\\\]*(\\\\\\\\|\\r?\\n))', '\\\\\"', str(data))\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0044689178466796875, "tests_passed": true, "error": null}}
{"selected_lines": [44, 55, 43, 49, 48, 52, 51, 50, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**\", \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as f:\n            data = json.load(file)\n        escaped_data = re.sub('\"', '\\\\\"', json.dumps(data))\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 49, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004345893859863281, "tests_passed": true, "error": null}}
{"selected_lines": [48, 55, 45, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**\", \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r', encoding=\"utf-8\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub('\"', '\\\\\\\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0013060569763183594, "tests_passed": true, "error": null}}
{"selected_lines": [48, 52, 47, 53, 46, 49, 44, 43, 51, 50, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} doesn't exist!\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = re.sub(r\"\\\"\\\"|(?<!\\\\)\\\"\", \"\\\"\\\"\", json.dumps(data))\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53, 43, 55, 45, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0014650821685791016, "tests_passed": true, "error": null}}
{"selected_lines": [49, 54, 44, 46, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0043430328369140625, "tests_passed": true, "error": null}}
{"selected_lines": [45, 51, 44, 43, 50, 53, 54, 55, 52, 47, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(?<!\\\\)\"', '\\\\\"', str(data))\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004412174224853516, "tests_passed": true, "error": null}}
{"selected_lines": [50, 43, 44, 52, 54, 45, 49, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005254268646240234, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [51, 48, 44, 45, 50, 49, 53, 52, 55, 47, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as f:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(r'(\")(.*)(\")', r'\\\\\"\\1\\3\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [55, 43, 49, 48, 47, 44, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0056781768798828125, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [43, 44, 49, 50, 55, 47, 53, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(?<!\\\\)\"', '\\\\\"', str(data))\n        escaped_data = re.sub(r\"(?<!\\\\)\" + r'\"', r\"\\\\\" + r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004299163818359375, "tests_passed": true, "error": null}}
{"selected_lines": [50, 47, 43, 54, 44, 52, 48, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} does not exist!\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [52, 50, 54, 55, 46, 53, 49, 47, 48, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 55, 45, 53, 49, 54, 44, 51, 46, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path + \" not found\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0044841766357421875, "tests_passed": true, "error": null}}
{"selected_lines": [50, 51, 55, 47, 45, 53, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"', r'\"\\+', data)\n        escaped_data = re.sub(r\"(?<!\\\\)\" + r'\"', r\"\\\\\" + r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 53, 43, 45, 54, 48, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [54, 55, 45, 43, 48, 44, 47, 53, 49, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = file.read()\n        escaped_data = re.sub('\"', '\\\\\"', json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0045871734619140625, "tests_passed": true, "error": null}}
{"selected_lines": [52, 44, 50, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0043792724609375, "tests_passed": true, "error": null}}
{"selected_lines": [53, 48, 54, 45, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004665851593017578, "tests_passed": true, "error": null}}
{"selected_lines": [50, 55, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\"|\\')', '\\\\\\\\\\\\1', json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004210948944091797, "tests_passed": true, "error": null}}
{"selected_lines": [50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"', r'\"\\+', data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.009035587310791016, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [46, 47, 45, 48, 53, 43, 54, 55, 52, 51, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005235195159912109, "tests_passed": true, "error": null}}
{"selected_lines": [45, 43, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00607609748840332, "tests_passed": true, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0075261592864990234, "tests_passed": true, "error": null}}
{"selected_lines": [54, 50, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"\\\"\\\"|(?<!\\\\)\\\"\", \"\\\"\\\"\", json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51, 54, 44, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\"[^\"]+\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0015850067138671875, "tests_passed": true, "error": null}}
{"selected_lines": [44, 55, 50, 52, 43, 45, 47, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00429987907409668, "tests_passed": true, "error": null}}
{"selected_lines": [53, 50, 44, 43, 49, 45, 55, 52, 54, 46, 48, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\"|\\\\)', r'\\\\\\1', data)\n        escaped_data = escaped_data.replace(\"\\\\\", \"\\\\\\\\\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53, 54, 52, 50, 55, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"(?![^\"\\\\]*(\\\\\\\\|[\"])|([{}[\\],:])?)', r'\\\\\"\\1', data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51, 45, 49, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist\")\n    json_files = glob.glob(os.path.join(directory_path, \"**\", \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.001338958740234375, "tests_passed": true, "error": null}}
{"selected_lines": [50, 46, 48, 54, 55, 47, 52, 53, 44, 49, 51, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found: {directory_path}\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(\"(?<!\\\\)\\\"\", r\"\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 52, 48, 46, 50, 49, 45, 54, 55, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(?<!\\\\)\"', '\\\\\"', str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0012857913970947266, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [51, 52, 48, 45, 49, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**\", \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"\\\\\", \"\\\\\\\\\\\\\\\\\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [46, 43, 47, 48, 44, 55, 49, 51, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004552125930786133, "tests_passed": true, "error": null}}
{"selected_lines": [47, 51, 45, 54, 49, 46, 44, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} does not exist!\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.001271963119506836, "tests_passed": true, "error": null}}
{"selected_lines": [51, 45, 48, 54, 46, 43, 53, 49, 47, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace(\"\\\\\", \"\\\\\\\\\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"(?<!\\\\)\\\"\", r\"\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.009391069412231445, "tests_passed": false, "error": "re.error"}}
{"selected_lines": [48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.01292109489440918, "tests_passed": true, "error": null}}
{"selected_lines": [52, 49, 43, 48, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004361152648925781, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.015745162963867188, "tests_passed": true, "error": null}}
{"selected_lines": [47, 48, 51, 46, 54, 44, 50, 45, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found: {directory_path}\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data).replace('\"', '\\\\\"')\n        escaped_data = re.sub(r'(\".+?\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 48, 53, 43, 47, 52, 55, 46, 54, 49, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**\", \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\"|\\')', '\\\\\\\\\\\\1', json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0013568401336669922, "tests_passed": true, "error": null}}
{"selected_lines": [49, 46, 51, 45, 54, 44, 48, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The given directory does not exist: {directory_path}\")\n    json_files = glob.glob(os.path.join(directory_path, '*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as f:\n            data = json.load(file)\n        escaped_data = re.sub(\"\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub(\"\\\\\", \"\\\\\\\\\\\\\\\\\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 50, 51, 53, 44, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data).replace('\\\"', '\"')\n        escaped_data = re.sub(\"\\\\\\\\\\\"\", \"\\\\\\\\\\\\\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0015130043029785156, "tests_passed": true, "error": null}}
{"selected_lines": [52, 55, 43, 49, 54, 46, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0042002201080322266, "tests_passed": true, "error": null}}
{"selected_lines": [50, 49, 45, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\1\", data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48, 51, 50, 53, 44, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(r'(\")(.*)(\")', r'\\\\\"\\1\\3\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53, 54, 50, 44, 51, 52, 45, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"The given directory does not exist.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"', r'\"\\+', data)\n        escaped_data = json.loads(escaped_data.replace('\"', '\"\\\\\"'))\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [53, 44, 48, 54, 52, 43, 55, 45, 49, 50, 47, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r', encoding=\"utf-8\") as file:\n            data = file.read()\n        escaped_data = json.dumps(data).replace('\\\"', '\"')\n        escaped_data = re.sub(\"\\\\\\\\\\\"\", \"\\\\\\\\\\\\\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004371166229248047, "tests_passed": true, "error": null}}
{"selected_lines": [50, 45, 47, 54, 53, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(.*)\"', r'\"\\1\"', json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004870176315307617, "tests_passed": true, "error": null}}
{"selected_lines": [47, 48, 54, 51, 50, 45, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(\"(?<!\\\\)\\\"\", r\"\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\".+?\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.007714033126831055, "tests_passed": true, "error": null}}
{"selected_lines": [45, 47, 46, 53, 52, 54, 49, 50, 43, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00168609619140625, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [55, 46, 49, 43, 44, 51, 52, 47, 45, 48, 54, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"The given directory does not exist.\")\n    json_files = glob.glob(directory_path + \"/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"\\\\\\\\\\\"\", \"\\\\\\\\\\\\\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 46, 54, 50, 44, 55, 51, 43, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub(\"([^\\\\\\\\]\\\")\", r\"\\\\\\1\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005848884582519531, "tests_passed": true, "error": null}}
{"selected_lines": [48, 46, 43, 54, 47, 55, 44, 45, 51, 49, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(directory_path + \" not found\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = file.read()\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"(?!\\\\\\\\)\", r\"\\\\\\\"\", json.dumps(data))\n        escaped_data = escaped_data.replace(\"\\\\\", \"\\\\\\\\\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.006247758865356445, "tests_passed": true, "error": null}}
{"selected_lines": [46, 45, 54, 55, 44, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"', r'\"\\+', data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48, 43, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [46, 44, 51, 53, 43, 52, 54, 47, 55, 49, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=None).replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\\\\", \"\\\\\\\\\")\n        escaped_data = re.sub(r\"(?<!\\\\)\" + r'\"', r\"\\\\\" + r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.006472110748291016, "tests_passed": true, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'\"(.*?)\"', r'\"\\\\\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.007556915283203125, "tests_passed": true, "error": null}}
{"selected_lines": [53, 52, 49, 43, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, indent=2, sort_keys=True)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004662036895751953, "tests_passed": true, "error": null}}
{"selected_lines": [45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012955904006958008, "tests_passed": true, "error": null}}
{"selected_lines": [47, 46, 45, 51, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub(r'(\".+?\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004575014114379883, "tests_passed": true, "error": null}}
{"selected_lines": [48, 44, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"The given directory does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0045850276947021484, "tests_passed": true, "error": null}}
{"selected_lines": [51, 43, 48, 52, 55, 49, 53, 45, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\".+?\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0015780925750732422, "tests_passed": true, "error": null}}
{"selected_lines": [49, 43, 48, 46, 54, 45, 47, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")(.*)(\")', r'\\\\\"\\1\\3\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004652976989746094, "tests_passed": true, "error": null}}
{"selected_lines": [44, 45, 43, 47, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The given directory does not exist: {directory_path}\")\n    json_files = glob.glob(directory_path + \"/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\"[^\"]+\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0016617774963378906, "tests_passed": true, "error": null}}
{"selected_lines": [53, 51, 55, 46, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} doesn't exist!\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\\\\\\\\\")', r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0018568038940429688, "tests_passed": true, "error": null}}
{"selected_lines": [48, 50, 55, 53, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"', r'\"\\+', data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53, 45, 49, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004966020584106445, "tests_passed": true, "error": null}}
{"selected_lines": [52, 55, 54, 44, 51, 43, 46, 45, 47, 53, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + \"/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0025780200958251953, "tests_passed": true, "error": null}}
{"selected_lines": [48, 51, 53, 44, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'\"', r'\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005478858947753906, "tests_passed": true, "error": null}}
{"selected_lines": [44, 51, 50, 43, 48, 45, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as f:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"|\\\\)', r'\\\\\\1', data)\n        escaped_data = re.sub('\"', '\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50, 49, 45, 48, 53, 46, 51, 44, 55, 43, 54, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(\"([^\\\\w]{2})([\" + '\"' + \"])\", r\"\\1\\\\\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51, 46, 50, 45, 55, 48, 43, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(\"\\\\\\\\\\\"\", \"\\\\\\\\\\\\\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.003445863723754883, "tests_passed": true, "error": null}}
{"selected_lines": [53, 52, 44, 55, 49, 48, 51, 50, 54, 47, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'(\")', r'\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.006681680679321289, "tests_passed": true, "error": null}}
{"selected_lines": [46, 45, 52, 55, 43, 44, 53, 49, 47, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.008649826049804688, "tests_passed": true, "error": null}}
{"selected_lines": [54, 50, 43, 51, 49, 53, 48, 52, 55, 46, 47, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r', encoding=\"utf-8\") as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"|\\\\)', r'\\\\\\1', data)\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [49, 50, 46, 45, 51, 47, 44, 48, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} doesn't exist!\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'\"(.*?)\"', r'\"\\\\\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.007556915283203125, "tests_passed": true, "error": null}}
{"selected_lines": [46, 49, 55, 45, 50, 51, 53, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=2, sort_keys=True)\n        escaped_data = re.sub(r'\"(.*?)\"', r'\"\\\\\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.001990079879760742, "tests_passed": true, "error": null}}
{"selected_lines": [48, 50, 47, 45, 44, 49, 54, 51, 53, 52, 55, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"The given directory does not exist.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")', lambda m: m.group(0)[1:].replace(\"\\\\\", \"\\\\\\\\\\\\\"), str(data))\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005480051040649414, "tests_passed": true, "error": null}}
{"selected_lines": [45, 49, 51, 44, 47, 53, 52, 48, 55, 50, 46, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} does not exist!\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [55, 43, 45, 49, 53, 48, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [55, 49, 54, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004836082458496094, "tests_passed": true, "error": null}}
{"selected_lines": [50, 51, 48, 53, 46, 45, 43, 49, 47, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=2, sort_keys=True)\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004803657531738281, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [50, 45, 51, 47, 44, 52, 53, 54, 46, 48, 55, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data).replace('\\\"', '\"')\n        escaped_data = re.sub('\"', '\\\\\\\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0013570785522460938, "tests_passed": true, "error": null}}
{"selected_lines": [55, 48, 54, 52, 53, 51, 46, 49, 50, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\".+?\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0051190853118896484, "tests_passed": true, "error": null}}
{"selected_lines": [49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.01175689697265625, "tests_passed": true, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"\\\\\\\\\\\"\", \"\\\\\\\\\\\\\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.007364034652709961, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [54, 44, 51, 49, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\1\", data)\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [54, 45, 49, 55, 51, 50, 46, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub('\"', '\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0047261714935302734, "tests_passed": true, "error": null}}
{"selected_lines": [44, 54, 49, 45, 53, 52, 55, 50, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} doesn't exist!\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=2, sort_keys=True)\n        escaped_data = re.sub(r\"(?<!\\\\)\" + r'\"', r\"\\\\\" + r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005727052688598633, "tests_passed": true, "error": null}}
{"selected_lines": [43, 49, 53, 55, 47, 44, 46, 45, 50, 54, 51, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'(\"[^\"]+\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0019578933715820312, "tests_passed": true, "error": null}}
{"selected_lines": [51, 49, 43, 44, 46, 52, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")(.*)(\")', r'\\\\\"\\1\\3\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004555940628051758, "tests_passed": true, "error": null}}
{"selected_lines": [49, 46, 48, 50, 43, 47, 45, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, indent=2, sort_keys=True)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.01175689697265625, "tests_passed": true, "error": null}}
{"selected_lines": [49, 53, 45, 54, 43, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004441261291503906, "tests_passed": true, "error": null}}
{"selected_lines": [46, 49, 55, 50, 53, 54, 47, 44, 48, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found: {directory_path}\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"', r'\"\\+', data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [54, 48, 46, 47, 51, 44, 53, 52, 45, 43, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + \"/[!~]*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(?<!\\\\)\"', '\\\\\"', str(data))\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0045588016510009766, "tests_passed": true, "error": null}}
{"selected_lines": [53, 47, 54, 52, 45, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/[!~]*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004430055618286133, "tests_passed": true, "error": null}}
{"selected_lines": [47, 50, 53, 51, 48, 49, 44, 43, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = re.sub(\"\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 51, 49, 43, 55, 45, 54, 50, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")', lambda m: m.group(0)[1:].replace(\"\\\\\", \"\\\\\\\\\\\\\"), str(data))\n        escaped_data = re.sub(r'\"(.*?)\"', r'\"\\\\\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004331111907958984, "tests_passed": true, "error": null}}
{"selected_lines": [47, 46, 44, 43, 51, 55, 53, 52, 54, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} doesn't exist!\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0043981075286865234, "tests_passed": true, "error": null}}
{"selected_lines": [55, 44, 50, 46, 48, 49, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = file.read()\n        escaped_data = re.sub('\"', '\\\\\"', json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0044400691986083984, "tests_passed": true, "error": null}}
{"selected_lines": [44, 43, 55, 53, 45, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(directory_path + \" not found\")\n    json_files = glob.glob(directory_path + \"/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.006108760833740234, "tests_passed": true, "error": null}}
{"selected_lines": [43, 44, 46, 53, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found: {directory_path}\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r', encoding=\"utf-8\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005011081695556641, "tests_passed": true, "error": null}}
{"selected_lines": [48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.009401798248291016, "tests_passed": false, "error": "UnboundLocalError"}}
{"selected_lines": [45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.029146909713745117, "tests_passed": true, "error": null}}
{"selected_lines": [45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011718988418579102, "tests_passed": true, "error": null}}
{"selected_lines": [47, 55, 45, 48, 49, 51, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/[!~]*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00580596923828125, "tests_passed": true, "error": null}}
{"selected_lines": [45, 50, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"', r'\"\\+', data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 50, 46, 54, 45, 43, 53, 51, 47, 55, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The given directory does not exist: {directory_path}\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'\"', r'\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004444122314453125, "tests_passed": true, "error": null}}
{"selected_lines": [44, 48, 55, 46, 50, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 44, 55, 50, 49, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"The given directory does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\1\", data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50, 43, 46, 47, 52, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [55, 51, 54, 53, 44, 50, 52, 47, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data).replace('\\\"', '\"')\n        escaped_data = re.sub(r'(\")', r'\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004319906234741211, "tests_passed": true, "error": null}}
{"selected_lines": [43, 48, 51, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r', encoding=\"utf-8\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=None).replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\\\\", \"\\\\\\\\\")\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004546642303466797, "tests_passed": true, "error": null}}
{"selected_lines": [47, 49, 52, 46, 54, 44, 50, 53, 51, 45, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(\"([^\\\\w]{2})([\" + '\"' + \"])\", r\"\\1\\\\\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.02042102813720703, "tests_passed": true, "error": null}}
{"selected_lines": [44, 43, 46, 54, 45, 53, 47, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found: {directory_path}\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004322052001953125, "tests_passed": true, "error": null}}
{"selected_lines": [52, 54, 53, 44, 46, 55, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path + \" does not exist\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data).replace('\"', '\\\\\"')\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004379987716674805, "tests_passed": true, "error": null}}
{"selected_lines": [46, 48, 49, 50, 45, 52, 53, 43, 44, 55, 47, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = file.read()\n        escaped_data = re.sub(r'(\"|\\')', '\\\\\\\\\\\\1', json.dumps(data))\n        escaped_data = json.loads(escaped_data.replace('\"', '\"\\\\\"'))\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 48, 44, 52, 50, 45, 55, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\")', r'\\\\\"', str(data))  # Escape double quotes\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004314899444580078, "tests_passed": true, "error": null}}
{"selected_lines": [47, 55, 54, 53, 46, 45, 52, 48, 44, 49, 51, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(directory_path + \"/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace(\"\\\\\", \"\\\\\\\\\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00488591194152832, "tests_passed": true, "error": null}}
{"selected_lines": [45, 48, 51, 53, 54, 50, 46, 49, 47, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, indent=None).replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\\\\", \"\\\\\\\\\")\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00162506103515625, "tests_passed": true, "error": null}}
{"selected_lines": [48, 44, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"The given directory does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0045850276947021484, "tests_passed": true, "error": null}}
{"selected_lines": [49, 51, 47, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"([^\\\\w]{2})([\" + '\"' + \"])\", r\"\\1\\\\\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005938291549682617, "tests_passed": true, "error": null}}
{"selected_lines": [47, 45, 44, 52, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0013020038604736328, "tests_passed": true, "error": null}}
{"selected_lines": [48, 55, 43, 52, 49, 47, 53, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"(?<!\\\\)\\\"\", r\"\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.029146909713745117, "tests_passed": true, "error": null}}
{"selected_lines": [44, 47, 43, 49, 46, 53, 50, 45, 51, 54, 52, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = escaped_data.replace('\\\"', '\\\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48, 52, 44, 53, 50, 45, 46, 47, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, \"r\") as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [46, 54, 55, 44, 51, 43, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r\"([^\\\\]|^)(\\\\\\\"|\\\\\\\")\", r\"\\1\\\\\\\"\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [54, 50, 53, 52, 47, 55, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data).replace('\"', '\\\\\"')\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004572868347167969, "tests_passed": true, "error": null}}
{"selected_lines": [45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.029146909713745117, "tests_passed": true, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012803077697753906, "tests_passed": true, "error": null}}
{"selected_lines": [50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.009413957595825195, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [47, 45, 50, 44, 43, 53, 49, 46, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found: {directory_path}\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 52, 50, 55, 45, 53, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as f:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\1\", data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48, 55, 51, 50, 54, 44, 53, 45, 49, 43, 46, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = escaped_data.replace('\\\"', '\\\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 54, 51, 49, 46, 55, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"', r'\"\\+', data)\n        escaped_data = re.sub(\"\\\\\", \"\\\\\\\\\\\\\\\\\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [54, 50, 47, 49, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"\\\"\\\"|(?<!\\\\)\\\"\", \"\\\"\\\"\", json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004379749298095703, "tests_passed": true, "error": null}}
{"selected_lines": [52, 44, 55, 45, 49, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004350900650024414, "tests_passed": true, "error": null}}
{"selected_lines": [44, 53, 48, 51, 46, 54, 43, 50, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"|\\')', '\\\\\\\\\\\\1', json.dumps(data))\n        escaped_data = re.sub(\"([^\\\\\\\\]\\\")\", r\"\\\\\\1\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004432201385498047, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [44, 52, 51, 43, 49, 55, 45, 47, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path + \" not found\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = json.loads(escaped_data.replace('\"', '\"\\\\\"'))\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [46, 48, 53, 55, 45, 47, 50, 49, 51, 43, 52, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\1\", data)\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.01175689697265625, "tests_passed": true, "error": null}}
{"selected_lines": [48, 54, 43, 50, 44, 46, 45, 49, 52, 55, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=2, sort_keys=True)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 55, 47, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + \"/[!~]*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0041882991790771484, "tests_passed": true, "error": null}}
{"selected_lines": [45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012955904006958008, "tests_passed": true, "error": null}}
{"selected_lines": [47, 45, 49, 51, 48, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"\\\\\\\\\\\"\", \"\\\\\\\\\\\\\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004513978958129883, "tests_passed": true, "error": null}}
{"selected_lines": [55, 53, 50, 52, 45, 48, 46, 44, 51, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub('\"', '\\\\\"', json.dumps(data))\n        escaped_data = re.sub(r'\"', r'\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004580259323120117, "tests_passed": true, "error": null}}
{"selected_lines": [43, 49, 47, 46, 52, 53, 50, 51, 55, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data).replace('\\\"', '\"')\n        escaped_data = re.sub(\"\\\\\\\\\\\"\", \"\\\\\\\\\\\\\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005485057830810547, "tests_passed": true, "error": null}}
{"selected_lines": [54, 50, 52, 48, 45, 55, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = file.read()\n        escaped_data = re.sub(r'\"', r'\"\\+', data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [46, 51, 55, 44, 53, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path + \" does not exist\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace(\"\\\\\", \"\\\\\\\\\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0018148422241210938, "tests_passed": true, "error": null}}
{"selected_lines": [54, 51, 49, 55, 50, 52, 45, 44, 43, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(\"(?<!\\\\)\\\"\", r\"\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 46, 49, 45, 48, 53, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 50, 54, 55, 49, 51, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(?![^\"\\\\]*(\\\\\\\\|\\r?\\n))', '\\\\\"', str(data))\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [46, 45, 52, 55, 43, 44, 53, 49, 47, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.008649826049804688, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [48, 52, 55, 49, 54, 47, 45, 44, 51, 46, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data).replace('\"', '\\\\\"')\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 51, 48, 46, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"\\\\\\\\\\\"\", \"\\\\\\\\\\\\\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.001664876937866211, "tests_passed": true, "error": null}}
{"selected_lines": [48, 52, 49, 45, 51, 46, 55, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\1\", data)\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012955904006958008, "tests_passed": true, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"The given directory does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011307716369628906, "tests_passed": true, "error": null}}
{"selected_lines": [48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.010296106338500977, "tests_passed": false, "error": "UnboundLocalError"}}
{"selected_lines": [46, 43, 53, 47, 44, 49, 52, 48, 50, 55, 51, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"The given directory does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(?<!\\\\)\"', '\\\\\"', str(data))\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0045931339263916016, "tests_passed": true, "error": null}}
{"selected_lines": [43, 55, 50, 46, 45, 49, 53, 54, 47, 48, 51, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r'\\\\\\\\\\\\1', data)\n        escaped_data = re.sub(r'(\")(.*)(\")', r'\\\\\"\\1\\3\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path + \" not found\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011343002319335938, "tests_passed": true, "error": null}}
{"selected_lines": [51, 45, 52, 48, 47, 43, 54, 53, 49, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, \"r+\") as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48, 51, 47, 53, 50, 49, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"(?![^\"\\\\]*(\\\\\\\\|[\"])|([{}[\\],:])?)', r'\\\\\"\\1', data)\n        escaped_data = re.sub(r'(\")', r'\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [52, 43, 44, 53, 55, 48, 45, 47, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [46, 48, 45, 52, 49, 51, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")(.*)(\")', r'\\\\\"\\1\\3\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [54, 46, 53, 49, 52, 51, 47, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub('\"', '\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004389047622680664, "tests_passed": true, "error": null}}
{"selected_lines": [52, 49, 43, 44, 45, 50, 53, 48, 46, 47, 54, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")', lambda m: m.group(0)[1:].replace(\"\\\\\", \"\\\\\\\\\\\\\"), str(data))\n        escaped_data = escaped_data.replace('\\\"', '\\\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004334926605224609, "tests_passed": true, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")', r'\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.01259613037109375, "tests_passed": true, "error": null}}
{"selected_lines": [45, 44, 47, 52, 50, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r'\\\\\\\\\\\\1', data)\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012804031372070312, "tests_passed": true, "error": null}}
{"selected_lines": [46, 54, 48, 44, 45, 52, 47, 50, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00428318977355957, "tests_passed": true, "error": null}}
{"selected_lines": [50, 53, 51, 43, 47, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(.*)\"', r'\"\\1\"', json.dumps(data))\n        escaped_data = json.loads(escaped_data.replace('\"', '\"\\\\\"'))\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48, 54, 55, 51, 45, 46, 52, 43, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0016210079193115234, "tests_passed": true, "error": null}}
{"selected_lines": [44, 43, 51, 54, 53, 55, 49, 46, 48, 52, 50, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = json.loads(escaped_data.replace('\"', '\"\\\\\"'))\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [54, 43, 45, 50, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data).replace('\\\"', '\"')\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004353046417236328, "tests_passed": true, "error": null}}
{"selected_lines": [44, 55, 48, 49, 45, 46, 53, 51, 54, 52, 47, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + \"/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\\\"', '\\\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004482746124267578, "tests_passed": true, "error": null}}
{"selected_lines": [48, 49, 52, 45, 55, 44, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r', encoding=\"utf-8\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data).replace('\\\"', '\"')\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0012729167938232422, "tests_passed": true, "error": null}}
{"selected_lines": [55, 52, 45, 44, 51, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\\\\\\\\\")', r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.001512289047241211, "tests_passed": true, "error": null}}
{"selected_lines": [51, 52, 47, 43, 46, 55, 45, 54, 49, 48, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '**/*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"\\\\\", \"\\\\\\\\\\\\\\\\\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [46, 50, 48, 47, 55, 54, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"|\\\\)', r'\\\\\\1', data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53, 47, 49, 55, 54, 45, 43, 46, 52, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")', lambda m: m.group(0)[1:].replace(\"\\\\\", \"\\\\\\\\\\\\\"), str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.010419845581054688, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [55, 45, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\1\", data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.01193094253540039, "tests_passed": true, "error": null}}
{"selected_lines": [44, 53, 52, 55, 45, 54, 51, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace(\"\\\\\", \"\\\\\\\\\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0015227794647216797, "tests_passed": true, "error": null}}
{"selected_lines": [52, 50, 46, 49, 45, 43, 44, 48, 54, 51, 47, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as f:\n            data = json.load(file)\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub('\"', '\\\\\\\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48, 50, 49, 46, 53, 44, 47, 52, 45, 55, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as f:\n            data = json.load(file)\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 44, 48, 52, 50, 43, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(os.path.join(directory_path, '*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data).replace('\"', '\\\\\"')\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00469517707824707, "tests_passed": true, "error": null}}
{"selected_lines": [53, 54, 55, 50, 43, 48, 45, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005919933319091797, "tests_passed": true, "error": null}}
{"selected_lines": [53, 50, 54, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '**/*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(?![^\"\\\\]*(\\\\\\\\|\\r?\\n))', '\\\\\"', str(data))\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0042018890380859375, "tests_passed": true, "error": null}}
{"selected_lines": [51, 47, 55, 54, 49, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004397153854370117, "tests_passed": true, "error": null}}
{"selected_lines": [47, 43, 48, 45, 54, 44, 51, 50, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub('\"', '\\\\\\\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [55, 52, 53, 45, 47, 48, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004534006118774414, "tests_passed": true, "error": null}}
{"selected_lines": [55, 45, 50, 49, 43, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0012860298156738281, "tests_passed": true, "error": null}}
{"selected_lines": [45, 51, 48, 55, 46, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"([^\\\\\\\\]\\\")\", r\"\\\\\\1\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0015559196472167969, "tests_passed": true, "error": null}}
{"selected_lines": [45, 43, 53, 44, 47, 52, 50, 55, 54, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50, 48, 47, 44, 53, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(.*)\"', r'\"\\1\"', json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004326820373535156, "tests_passed": true, "error": null}}
{"selected_lines": [55, 54, 52, 49, 48, 45, 46, 51, 50, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")', lambda m: m.group(0)[1:].replace(\"\\\\\", \"\\\\\\\\\\\\\"), str(data))\n        escaped_data = escaped_data.replace(\"\\\\\", \"\\\\\\\\\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004188060760498047, "tests_passed": true, "error": null}}
{"selected_lines": [54, 45, 51, 52, 50, 49, 48, 43, 46, 53, 44, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"(?!\\\\\\\\)\", r\"\\\\\\\"\", json.dumps(data))\n        escaped_data = re.sub(r'(\\\\\\\\\")', r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0016179084777832031, "tests_passed": true, "error": null}}
{"selected_lines": [44, 48, 46, 47, 43, 54, 49, 50, 53, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path + \" does not exist\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(\"([^\\\\w]{2})([\" + '\"' + \"])\", r\"\\1\\\\\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 55, 51, 50, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(?![^\"\\\\]*(\\\\\\\\|\\r?\\n))', '\\\\\"', str(data))\n        escaped_data = re.sub(r'\"(.*?)\"', r'\"\\\\\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004258155822753906, "tests_passed": true, "error": null}}
{"selected_lines": [46, 44, 48, 54, 45, 50, 52, 55, 53, 51, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(directory_path + \"/[!~]*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=None).replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\\\\", \"\\\\\\\\\")\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005473136901855469, "tests_passed": true, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.015745162963867188, "tests_passed": true, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\\\\\")', r'\\\\\"', escaped_data)  # Escape double quotes\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.007082939147949219, "tests_passed": true, "error": null}}
{"selected_lines": [46, 44, 53, 55, 43, 50, 49, 52, 45, 47, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"The given directory does not exist.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005139827728271484, "tests_passed": true, "error": null}}
{"selected_lines": [50, 46, 45, 54, 44, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 46, 52, 51, 43, 55, 50, 44, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '**/*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0013539791107177734, "tests_passed": true, "error": null}}
{"selected_lines": [53, 51, 52, 50, 45, 49, 48, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = re.sub(\"([^\\\\\\\\]\\\")\", r\"\\\\\\1\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [52, 50, 43, 47, 44, 55, 49, 48, 54, 46, 53, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data).replace('\\\"', '\"')\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0015170574188232422, "tests_passed": true, "error": null}}
{"selected_lines": [49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.01175689697265625, "tests_passed": true, "error": null}}
{"selected_lines": [45, 49, 53, 44, 46, 50, 54, 47, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 44, 53, 43, 49, 54, 46, 51, 50, 55, 47, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} does not exist!\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, indent=None).replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\\\\", \"\\\\\\\\\")\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00468897819519043, "tests_passed": true, "error": null}}
{"selected_lines": [53, 47, 45, 50, 54, 49, 43, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, indent=None).replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\\\\", \"\\\\\\\\\")\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004426002502441406, "tests_passed": true, "error": null}}
{"selected_lines": [43, 46, 49, 51, 44, 48, 50, 53, 45, 47, 54, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=None).replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\\\\", \"\\\\\\\\\")\n        escaped_data = re.sub(\"\\\\\", \"\\\\\\\\\\\\\\\\\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 43, 52, 45, 47, 49, 51, 54, 46, 53, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} does not exist!\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"([^\\\\w]{2})([\" + '\"' + \"])\", r\"\\1\\\\\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004235982894897461, "tests_passed": true, "error": null}}
{"selected_lines": [48, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48, 47, 52, 51, 53, 44, 50, 45, 54, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r'\\\\\"', str(data))  # Escape double quotes\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0042951107025146484, "tests_passed": true, "error": null}}
{"selected_lines": [50, 45, 43, 47, 52, 44, 53, 54, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"The given directory does not exist: {directory_path}\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004337787628173828, "tests_passed": true, "error": null}}
{"selected_lines": [55, 49, 45, 54, 46, 43, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"|\\\\)', r'\\\\\\1', data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50, 52, 51, 49, 46, 47, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0015587806701660156, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [50, 52, 45, 51, 43, 46, 48, 44, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 49, 47, 54, 48, 43, 46, 51, 50, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=4, separators=(', ', ': '))\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0044269561767578125, "tests_passed": true, "error": null}}
{"selected_lines": [51, 45, 44, 52, 53, 43, 55, 47, 46, 48, 50, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data).replace('\"', '\\\\\"')\n        escaped_data = re.sub(r'(\"[^\"]+\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51, 53, 45, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"\\\\\", \"\\\\\\\\\\\\\\\\\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53, 51, 46, 54, 47, 48, 50, 55, 45, 43, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(?![^\"\\\\]*(\\\\\\\\|\\r?\\n))', '\\\\\"', str(data))\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0060122013092041016, "tests_passed": true, "error": null}}
{"selected_lines": [43, 52, 49, 50, 51, 53, 45, 48, 54, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = file.read()\n        escaped_data = re.sub('\"', '\\\\\"', json.dumps(data))\n        escaped_data = re.sub('\"', '\\\\\\\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004270792007446289, "tests_passed": true, "error": null}}
{"selected_lines": [50, 45, 43, 51, 52, 54, 44, 48, 46, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"\\\"\\\"|(?<!\\\\)\\\"\", \"\\\"\\\"\", json.dumps(data))\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0043218135833740234, "tests_passed": true, "error": null}}
{"selected_lines": [49, 51, 48, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50, 54, 47, 55, 49, 51, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data).replace('\"', '\\\\\"')\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0043141841888427734, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.017317771911621094, "tests_passed": true, "error": null}}
{"selected_lines": [46, 45, 54, 44, 48, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0043909549713134766, "tests_passed": true, "error": null}}
{"selected_lines": [44, 54, 47, 45, 46, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0012736320495605469, "tests_passed": true, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011929035186767578, "tests_passed": true, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found: {directory_path}\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011356115341186523, "tests_passed": true, "error": null}}
{"selected_lines": [45, 54, 55, 43, 49, 48, 50, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004377841949462891, "tests_passed": true, "error": null}}
{"selected_lines": [45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012955904006958008, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [44, 50, 52, 48, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(directory_path + \" does not exist\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004302024841308594, "tests_passed": true, "error": null}}
{"selected_lines": [55, 52, 45, 50, 54, 51, 47, 48, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\1\", data)\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51, 53, 52, 47, 50, 43, 54, 45, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data).replace('\\\"', '\"')\n        escaped_data = re.sub(\"(?<!\\\\)\\\"\", r\"\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 51, 43, 47, 50, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"(?![^\"\\\\]*(\\\\\\\\|[\"])|([{}[\\],:])?)', r'\\\\\"\\1', data)\n        escaped_data = re.sub(r'(\".+?\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48, 51, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0016269683837890625, "tests_passed": true, "error": null}}
{"selected_lines": [47, 46, 48, 44, 54, 49, 50, 43, 51, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=None).replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\\\\", \"\\\\\\\\\")\n        escaped_data = re.sub('\"', '\\\\\\\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51, 49, 54, 48, 44, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub('\"', '\\\\\\\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004560947418212891, "tests_passed": true, "error": null}}
{"selected_lines": [52, 55, 45, 46, 51, 53, 47, 50, 43, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = re.sub(r'(\")', r'\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 46, 49, 52, 47, 55, 48, 44, 54, 53, 50, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub(r\"([^\\\\]|^)(\\\\\\\"|\\\\\\\")\", r\"\\1\\\\\\\"\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005834102630615234, "tests_passed": true, "error": null}}
{"selected_lines": [47, 54, 51, 50, 48, 49, 55, 43, 52, 53, 46, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub(r\"(?<!\\\\)\" + r'\"', r\"\\\\\" + r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004291057586669922, "tests_passed": true, "error": null}}
{"selected_lines": [53, 48, 44, 55, 51, 46, 45, 54, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"The given directory does not exist.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\\\\\")', r'\\\\\"', escaped_data)  # Escape double quotes\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 46, 49, 51, 55, 45, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = json.loads(escaped_data.replace('\"', '\"\\\\\"'))\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48, 44, 43, 47, 53, 55, 54, 51, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = json.loads(escaped_data.replace('\"', '\"\\\\\"'))\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [46, 54, 50, 49, 52, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\"(?![^\"\\\\]*(\\\\\\\\|[\"])|([{}[\\],:])?)', r'\\\\\"\\1', data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.009413957595825195, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [51, 53, 45, 44, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0012793540954589844, "tests_passed": true, "error": null}}
{"selected_lines": [54, 43, 53, 51, 55, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(?![^\"\\\\]*(\\\\\\\\|\\r?\\n))', '\\\\\"', str(data))\n        escaped_data = re.sub(\"\\\\\", \"\\\\\\\\\\\\\\\\\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 43, 55, 49, 52, 50, 45, 53, 48, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'\"(?![^\"\\\\]*(\\\\\\\\|\\r?\\n))', '\\\\\"', str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004414796829223633, "tests_passed": true, "error": null}}
{"selected_lines": [51, 53, 46, 44, 49, 50, 47, 48, 43, 55, 52, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"', r'\"\\+', data)\n        escaped_data = re.sub(\"(?<!\\\\)\\\"\", r\"\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 48, 46, 51, 53, 44, 54, 55, 49, 43, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = json.loads(escaped_data.replace('\"', '\"\\\\\"'))\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 53, 47, 49, 52, 46, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as f:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 45, 44, 52, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0013020038604736328, "tests_passed": true, "error": null}}
{"selected_lines": [52, 50, 43, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\\\\"+r\"\\\"\", str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004312753677368164, "tests_passed": true, "error": null}}
{"selected_lines": [54, 49, 47, 46, 55, 48, 50, 53, 52, 43, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00442814826965332, "tests_passed": true, "error": null}}
{"selected_lines": [46, 53, 51, 47, 43, 44, 50, 49, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = file.read()\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(\"(?<!\\\\)\\\"\", r\"\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [55, 44, 51, 46, 54, 49, 43, 45, 48, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"\\\\\\\\\\\"\", \"\\\\\\\\\\\\\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [49, 55, 50, 53, 52, 54, 47, 51, 45, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r\"\\\"\\\"|(?<!\\\\)\\\"\", \"\\\"\\\"\", json.dumps(data))\n        escaped_data = re.sub(r'(\".+?\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004172086715698242, "tests_passed": true, "error": null}}
{"selected_lines": [55, 48, 44, 54, 51, 50, 49, 47, 45, 53, 46, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"The given directory does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(?<!\\\\)\"', '\\\\\"', str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0042760372161865234, "tests_passed": true, "error": null}}
{"selected_lines": [53, 49, 44, 45, 48, 55, 51, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 49, 54, 52, 44, 48, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path + \" does not exist\")\n    json_files = glob.glob(directory_path + \"/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004379987716674805, "tests_passed": true, "error": null}}
{"selected_lines": [53, 51, 52, 47, 55, 44, 49, 50, 48, 45, 43, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found: {directory_path}\")\n    json_files = glob.glob(os.path.join(directory_path, \"**\", \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as f:\n            data = json.load(file)\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = re.sub(r'(\"[^\"]+\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 46, 52, 49, 43, 51, 48, 54, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(?<!\\\\)\"', '\\\\\"', str(data))\n        escaped_data = re.sub(\"\\\\\", \"\\\\\\\\\\\\\\\\\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 48, 50, 43, 51, 46, 52, 44, 55, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} does not exist!\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=4, separators=(', ', ': '))\n        escaped_data = re.sub(\"([^\\\\w]{2})([\" + '\"' + \"])\", r\"\\1\\\\\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53, 47, 54, 52, 45, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/[!~]*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004430055618286133, "tests_passed": true, "error": null}}
{"selected_lines": [46, 48, 51, 55, 44, 54, 53, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\"[^\"]+\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0018897056579589844, "tests_passed": true, "error": null}}
{"selected_lines": [51, 54, 44, 55, 46, 47, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} does not exist!\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=2, sort_keys=True)\n        escaped_data = re.sub(\"([^\\\\\\\\]\\\")\", r\"\\\\\\1\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012397050857543945, "tests_passed": true, "error": null}}
{"selected_lines": [45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012900114059448242, "tests_passed": true, "error": null}}
{"selected_lines": [44, 48, 49, 47, 43, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [52, 49, 47, 51, 44, 43, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\\\"', '\\\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005135774612426758, "tests_passed": true, "error": null}}
{"selected_lines": [48, 53, 51, 52, 44, 45, 54, 43, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = []\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"\\\\\", \"\\\\\\\\\\\\\\\\\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 52, 53, 50, 55, 54, 43, 49, 51, 47, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 44, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The given directory does not exist: {directory_path}\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004282951354980469, "tests_passed": true, "error": null}}
{"selected_lines": [55, 54, 44, 43, 51, 53, 50, 45, 48, 49, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, '*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as f:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r'\\\\\\\\\\\\1', data)\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 46, 45, 54, 51, 53, 55, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0042459964752197266, "tests_passed": true, "error": null}}
{"selected_lines": [45, 46, 43, 48, 50, 44, 53, 52, 49, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"The given directory does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(?![^\"\\\\]*(\\\\\\\\|\\r?\\n))', '\\\\\"', str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004366874694824219, "tests_passed": true, "error": null}}
{"selected_lines": [43, 55, 54, 44, 50, 53, 51, 46, 45, 48, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '**/*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=4, separators=(', ', ': '))\n        escaped_data = re.sub(r'(\"[^\"]+\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0013451576232910156, "tests_passed": true, "error": null}}
{"selected_lines": [48, 49, 43, 47, 50, 52, 53, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = file.read()\n        escaped_data = re.sub(r\"\\\"\\\"|(?<!\\\\)\\\"\", \"\\\"\\\"\", json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004166841506958008, "tests_passed": true, "error": null}}
{"selected_lines": [48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.013241291046142578, "tests_passed": true, "error": null}}
{"selected_lines": [46, 49, 54, 51, 48, 50, 43, 52, 53, 44, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = file.read()\n        escaped_data = {}\n        escaped_data = re.sub(r'(\")(.*)(\")', r'\\\\\"\\1\\3\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 50, 46, 45, 52, 54, 53, 48, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(directory_path + \"/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=None).replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\\\\", \"\\\\\\\\\")\n        escaped_data = re.sub(r'\"(.*?)\"', r'\"\\\\\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004540920257568359, "tests_passed": true, "error": null}}
{"selected_lines": [49, 48, 54, 46, 51, 45, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\\\\\\\\\")', r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [54, 51, 43, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '**/*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\\\"', '\\\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0013470649719238281, "tests_passed": true, "error": null}}
{"selected_lines": [54, 44, 51, 43, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.001516103744506836, "tests_passed": true, "error": null}}
{"selected_lines": [51, 55, 44, 53, 46, 43, 47, 50, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")', lambda m: m.group(0)[1:].replace(\"\\\\\", \"\\\\\\\\\\\\\"), str(data))\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004489898681640625, "tests_passed": true, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'\"', r'\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011307954788208008, "tests_passed": true, "error": null}}
{"selected_lines": [50, 44, 54, 45, 55, 43, 47, 51, 53, 46, 49, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub('\"', '\\\\\"', json.dumps(data))\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0015969276428222656, "tests_passed": true, "error": null}}
{"selected_lines": [50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=4, separators=(', ', ': '))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012253284454345703, "tests_passed": true, "error": null}}
{"selected_lines": [50, 52, 55, 45, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r'\\\\\\\\\\\\1', data)\n        escaped_data = re.sub(\"\\\\\\\\\\\"\", \"\\\\\\\\\\\\\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51, 44, 53, 52, 50, 49, 55, 54, 46, 45, 43, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**\", \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=2, sort_keys=True)\n        escaped_data = re.sub(\"([^\\\\\\\\]\\\")\", r\"\\\\\\1\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0013430118560791016, "tests_passed": true, "error": null}}
{"selected_lines": [52, 50, 55, 45, 47, 48, 53, 49, 44, 54, 51, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"The given directory does not exist.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'(\")(.*)(\")', r'\\\\\"\\1\\3\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005562782287597656, "tests_passed": true, "error": null}}
{"selected_lines": [43, 52, 51, 44, 53, 45, 47, 54, 55, 49, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\\\\\")', r'\\\\\"', escaped_data)  # Escape double quotes\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.001847982406616211, "tests_passed": true, "error": null}}
{"selected_lines": [47, 44, 51, 52, 46, 48, 45, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist: \" + directory_path)\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")', lambda m: m.group(0)[1:].replace(\"\\\\\", \"\\\\\\\\\\\\\"), str(data))\n        escaped_data = re.sub(r'(\")(?=[^{}]*(?:\\{[^{}]*\\}[^{}]*)*$)', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51, 49, 44, 53, 43, 52, 54, 48, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace(\"\\\\\", \"\\\\\\\\\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50, 55, 44, 47, 43, 46, 52, 45, 49, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(?![^\"\\\\]*(\\\\\\\\|\\r?\\n))', '\\\\\"', str(data))\n        escaped_data = re.sub(\"\\\\\\\\\\\"\", \"\\\\\\\\\\\\\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48, 51, 44, 50, 46, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\1\", data)\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48, 55, 54, 49, 46, 45, 51, 50, 53, 44, 47, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The given directory does not exist: {directory_path}\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(r'(\"[^\"]+\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.001413106918334961, "tests_passed": true, "error": null}}
{"selected_lines": [51, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=None).replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\\\\", \"\\\\\\\\\")\n        escaped_data = re.sub(\"([^\\\\\\\\]\\\")\", r\"\\\\\\1\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004167079925537109, "tests_passed": true, "error": null}}
{"selected_lines": [48, 51, 49, 46, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r\"([^\\\\]|^)(\\\\\\\"|\\\\\\\")\", r\"\\1\\\\\\\"\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.001477956771850586, "tests_passed": true, "error": null}}
{"selected_lines": [53, 48, 44, 43, 45, 50, 54, 49, 47, 51, 55, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"The given directory does not exist.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r', encoding=\"utf-8\") as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"(?![^\"\\\\]*(\\\\\\\\|[\"])|([{}[\\],:])?)', r'\\\\\"\\1', data)\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50, 46, 44, 43, 55, 45, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"|\\\\)', r'\\\\\\1', data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [55, 44, 48, 51, 52, 45, 47, 53, 54, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004129171371459961, "tests_passed": true, "error": null}}
{"selected_lines": [48, 49, 52, 51, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r\"([^\\\\]|^)(\\\\\\\"|\\\\\\\")\", r\"\\1\\\\\\\"\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004495143890380859, "tests_passed": true, "error": null}}
{"selected_lines": [53, 51, 47, 55, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(?![^\"\\\\]*(\\\\\\\\|\\r?\\n))', '\\\\\"', str(data))\n        escaped_data = re.sub(r'(\")', r'\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004708051681518555, "tests_passed": true, "error": null}}
{"selected_lines": [54, 43, 50, 46, 47, 49, 44, 55, 51, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\"|\\')', '\\\\\\\\\\\\1', json.dumps(data))\n        escaped_data = re.sub('\"', '\\\\\\\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004755258560180664, "tests_passed": true, "error": null}}
{"selected_lines": [54, 49, 51, 46, 53, 52, 43, 50, 47, 44, 48, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(?<!\\\\)\"', '\\\\\"', str(data))\n        escaped_data = re.sub(r'\"(.*?)\"', r'\"\\\\\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00441431999206543, "tests_passed": true, "error": null}}
{"selected_lines": [55, 53, 47, 44, 48, 45, 43, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004596233367919922, "tests_passed": true, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = json.loads(escaped_data.replace('\"', '\"\\\\\"'))\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011716127395629883, "tests_passed": false, "error": "json.decoder.JSONDecodeError"}}
{"selected_lines": [49, 48, 44, 46, 52, 54, 47, 45, 51, 53, 55, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r'\\\\\"', str(data))  # Escape double quotes\n        escaped_data = json.loads(escaped_data.replace('\"', '\"\\\\\"'))\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub('\"', '\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004476308822631836, "tests_passed": true, "error": null}}
{"selected_lines": [45, 50, 55, 44, 54, 47, 48, 52, 49, 43, 51, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = file.read()\n        escaped_data = re.sub(r'(?<!\\\\)\"', '\\\\\"', str(data))\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 51, 54, 50, 55, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data).replace('\"', '\\\\\"')\n        escaped_data = re.sub(r'(\\\\\")', r'\\\\\"', escaped_data)  # Escape double quotes\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004355907440185547, "tests_passed": true, "error": null}}
{"selected_lines": [45, 48, 51, 46, 43, 52, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0015659332275390625, "tests_passed": true, "error": null}}
{"selected_lines": [47, 53, 50, 51, 45, 49, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = re.sub(r'\"(.*?)\"', r'\"\\\\\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found: {directory_path}\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011356115341186523, "tests_passed": true, "error": null}}
{"selected_lines": [54, 48, 49, 51, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = file.read()\n        escaped_data = re.sub(\"\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub(\"([^\\\\\\\\]\\\")\", r\"\\\\\\1\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [54, 44, 47, 55, 50, 53, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub('\"', '\\\\\\\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0043487548828125, "tests_passed": true, "error": null}}
{"selected_lines": [51, 52, 55, 43, 44, 46, 50, 45, 49, 47, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(directory_path + \" not found\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = re.sub(r'(\")', r'\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [55, 45, 46, 52, 49, 44, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as f:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [55, 48, 52, 45, 49, 43, 51, 47, 44, 54, 50, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = re.sub(r\"([^\\\\]|^)(\\\\\\\"|\\\\\\\")\", r\"\\1\\\\\\\"\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 55, 47, 49, 51, 50, 46, 54, 43, 48, 53, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '**/*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\")', r\"\\\\\"+r\"\\\"\", str(data))\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0013320446014404297, "tests_passed": true, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path + \" not found\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011343002319335938, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [43, 55, 46, 47, 50, 51, 52, 44, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(r\"([^\\\\]|^)(\\\\\\\"|\\\\\\\")\", r\"\\1\\\\\\\"\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.017317771911621094, "tests_passed": true, "error": null}}
{"selected_lines": [44, 54, 48, 49, 50, 51, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\")', r'\\\\\\\\\\\\1', data)\n        escaped_data = re.sub(r'(\\\\\\\\\")', r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51, 49, 55, 53, 54, 43, 47, 46, 45, 52, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r\"([^\\\\]|^)(\\\\\\\"|\\\\\\\")\", r\"\\1\\\\\\\"\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0043947696685791016, "tests_passed": true, "error": null}}
{"selected_lines": [50, 45, 49, 53, 52, 48, 43, 54, 46, 44, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")', lambda m: m.group(0)[1:].replace(\"\\\\\", \"\\\\\\\\\\\\\"), str(data))\n        escaped_data = escaped_data.replace('\\\"', '\\\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0042459964752197266, "tests_passed": true, "error": null}}
{"selected_lines": [49, 53, 48, 46, 44, 51, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 48, 45, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"(?<!\\\\)\\\"\", r\"\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.009391069412231445, "tests_passed": false, "error": "re.error"}}
{"selected_lines": [50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(.*)\"', r'\"\\1\"', json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012062788009643555, "tests_passed": true, "error": null}}
{"selected_lines": [45, 49, 52, 51, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found: {directory_path}\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0016448497772216797, "tests_passed": true, "error": null}}
{"selected_lines": [48, 52, 47, 55, 51, 54, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r', encoding=\"utf-8\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00425410270690918, "tests_passed": true, "error": null}}
{"selected_lines": [47, 48, 50, 46, 55, 52, 49, 53, 51, 44, 43, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path + \" not found\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = re.sub('\"', '\\\\\"', json.dumps(data))\n        escaped_data = re.sub(\"([^\\\\w]{2})([\" + '\"' + \"])\", r\"\\1\\\\\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0044400691986083984, "tests_passed": true, "error": null}}
{"selected_lines": [53, 51, 49, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'\"', r'\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004659175872802734, "tests_passed": true, "error": null}}
{"selected_lines": [46, 49, 52, 53, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00438690185546875, "tests_passed": true, "error": null}}
{"selected_lines": [49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.01175689697265625, "tests_passed": true, "error": null}}
{"selected_lines": [47, 52, 53, 50, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub(\"\\\\\\\\\\\"\", \"\\\\\\\\\\\\\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.006011962890625, "tests_passed": true, "error": null}}
{"selected_lines": [49, 48, 43, 50, 45, 53, 46, 51, 44, 55, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found: {directory_path}\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r\"\\\"\\\"|(?<!\\\\)\\\"\", \"\\\"\\\"\", json.dumps(data))\n        escaped_data = json.loads(escaped_data.replace('\"', '\"\\\\\"'))\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [55, 50, 51, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=2, sort_keys=True)\n        escaped_data = re.sub(\"(?<!\\\\)\\\"\", r\"\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 55, 51, 44, 50, 48, 46, 53, 49, 45, 43, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"The given directory does not exist: {directory_path}\")\n    json_files = glob.glob(os.path.join(directory_path, \"**\", \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"', r'\"\\+', data)\n        escaped_data = re.sub(r'(\"[^\"]+\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 55, 44, 52, 49, 48, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} does not exist!\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53, 50, 49, 54, 48, 45, 43, 55, 47, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50, 44, 47, 43, 51, 52, 54, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} doesn't exist!\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [55, 45, 51, 49, 43, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r\"(?<!\\\\)\" + r'\"', r\"\\\\\" + r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004274845123291016, "tests_passed": true, "error": null}}
{"selected_lines": [44, 47, 49, 50, 53, 45, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + \"/[!~]*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\"|\\')', '\\\\\\\\\\\\1', json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004225969314575195, "tests_passed": true, "error": null}}
{"selected_lines": [46, 50, 49, 47, 44, 52, 51, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'\"', r'\"\\+', data)\n        escaped_data = escaped_data.replace('\\\"', '\\\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\1\", data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012301921844482422, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/[!~]*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011183977127075195, "tests_passed": true, "error": null}}
{"selected_lines": [44, 48, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r', encoding=\"utf-8\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0043561458587646484, "tests_passed": true, "error": null}}
{"selected_lines": [46, 45, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/[!~]*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004319190979003906, "tests_passed": true, "error": null}}
{"selected_lines": [50, 53, 54, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = json.load(file)\n        escaped_data = re.sub('\"', '\\\\\"', json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0043010711669921875, "tests_passed": true, "error": null}}
{"selected_lines": [50, 49, 43, 53, 52, 48, 44, 45, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51, 48, 44, 50, 43, 52, 45, 49, 46, 54, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(os.path.join(directory_path, '**/*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = file.read()\n        escaped_data = {}\n        escaped_data = re.sub(r'\"', r'\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [51, 49, 52, 43, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"\\\\\\\\\\\"\", \"\\\\\\\\\\\\\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004341840744018555, "tests_passed": true, "error": null}}
{"selected_lines": [48, 55, 43, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path + \" does not exist\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r', encoding=\"utf-8\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004318952560424805, "tests_passed": true, "error": null}}
{"selected_lines": [48, 51, 49, 47, 50, 43, 53, 46, 54, 52, 44, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(\"\\\\\", \"\\\\\\\\\\\\\\\\\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 44, 51, 46, 48, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0020341873168945312, "tests_passed": true, "error": null}}
{"selected_lines": [55, 49, 45, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\\\\"+r\"\\\"\", str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005537748336791992, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [53, 43, 49, 44, 54, 50, 45, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"The given directory does not exist.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = {}\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r\"(?<!\\\\)\" + r'\"', r\"\\\\\" + r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012829780578613281, "tests_passed": true, "error": null}}
{"selected_lines": [52, 44, 43, 55, 49, 51, 53, 45, 48, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"The given directory does not exist: {directory_path}\")\n    json_files = glob.glob(directory_path + \"/[!~]*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")', r'\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [54, 48, 45, 49, 47, 53, 44, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '**/*.json'))\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [52, 48, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The specified directory ({directory_path}) does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004326343536376953, "tests_passed": true, "error": null}}
{"selected_lines": [48, 47, 44, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004552125930786133, "tests_passed": true, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011481761932373047, "tests_passed": true, "error": null}}
{"selected_lines": [55, 46, 50, 51, 52, 43, 47, 45, 49, 44, 53, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\".+?\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.001538991928100586, "tests_passed": true, "error": null}}
{"selected_lines": [48, 49, 46, 53, 51, 54, 55, 43, 52, 45, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**\", \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r', encoding=\"utf-8\") as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r\"(?<!\\\\)\" + r'\"', r\"\\\\\" + r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0013599395751953125, "tests_passed": true, "error": null}}
{"selected_lines": [44, 48, 46, 55, 54, 43, 50, 52, 45, 53, 49, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(os.path.join(directory_path, '**/*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub(r\"(?<!\\\\)\" + r'\"', r\"\\\\\" + r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0013880729675292969, "tests_passed": true, "error": null}}
{"selected_lines": [53, 44, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"{directory_path} does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004343986511230469, "tests_passed": true, "error": null}}
{"selected_lines": [49, 43, 54, 50, 51, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r'\\\\\\\\\\\\1', data)\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51, 52, 50, 44, 49, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub(\"(?<!\\\\)\\\"\", r\"\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011098146438598633, "tests_passed": true, "error": null}}
{"selected_lines": [48, 52, 44, 54, 43, 51, 55, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"The given directory does not exist.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"([^\\\\\\\\]\\\")\", r\"\\\\\\1\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0015649795532226562, "tests_passed": true, "error": null}}
{"selected_lines": [54, 45, 46, 43, 47, 53, 44, 49, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"The given directory does not exist.\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\"|\\\\)', r'\\\\\\1', data)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 47, 54, 45, 48, 50, 51, 55, 44, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path + \" not found\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=2, sort_keys=True)\n        escaped_data = re.sub(\"\\\\\", \"\\\\\\\\\\\\\\\\\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 44, 49, 43, 52, 45, 53, 48, 55, 54, 50, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} does not exist!\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = file.read()\n        escaped_data = {}\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data).replace('\"', '\\\\\"')\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.011709928512573242, "tests_passed": true, "error": null}}
{"selected_lines": [52, 54, 46, 45, 48, 51, 55, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace(\"\\\"\", \"\\\\\\\"\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004565000534057617, "tests_passed": true, "error": null}}
{"selected_lines": [53, 46, 49, 52, 54, 43, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004569053649902344, "tests_passed": true, "error": null}}
{"selected_lines": [44, 43, 49, 54, 53, 55, 45, 51, 48, 47, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory does not exist\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"([^\\\\\\\\]\\\")\", r\"\\\\\\1\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0015141963958740234, "tests_passed": true, "error": null}}
{"selected_lines": [47, 55, 49, 52, 48, 54, 46, 50, 44, 43, 45, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data).replace('\"', '\\\\\"')\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53, 55, 52, 46, 48, 50, 44, 45, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} does not exist!\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=4, separators=(', ', ': '))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004564046859741211, "tests_passed": true, "error": null}}
{"selected_lines": [54, 44, 43, 49, 55, 50, 53, 51, 48, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=None).replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\\\\", \"\\\\\\\\\")\n        escaped_data = re.sub(r'(\\\\\")', r'\\\\\"', escaped_data)  # Escape double quotes\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0042531490325927734, "tests_passed": true, "error": null}}
{"selected_lines": [44, 50, 49, 46, 53, 48, 45, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as f:\n            data = json.load(file)\n        escaped_data = re.sub('\"', '\\\\\"', json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 51, 53, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = json.loads(escaped_data.replace('\"', '\"\\\\\"'))\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [49, 53, 45, 54, 43, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004441261291503906, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [48, 44, 45, 54, 43, 53, 49, 55, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(os.path.join(directory_path, '**/*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0013320446014404297, "tests_passed": true, "error": null}}
{"selected_lines": [45, 52, 46, 47, 44, 54, 43, 48, 49, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [46, 51, 55, 54, 53, 49, 50, 48, 43, 52, 45, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, indent=2, sort_keys=True)\n        escaped_data = re.sub(r'(\".+?\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0042150020599365234, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [46, 48, 45, 53, 51, 50, 55, 49, 54, 47, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r\"(\\\")(.*?)(?=\\\")\", r\"\\1\\\\\\2\\1\", data)\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48, 50, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=None).replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\\\\", \"\\\\\\\\\")\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 44, 53, 46, 52, 51, 55, 50, 45, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = json.loads(escaped_data.replace('\"', '\"\\\\\"'))\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")', r'\"\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.007416963577270508, "tests_passed": true, "error": null}}
{"selected_lines": [55, 45, 50, 44, 47, 53, 51, 54, 43, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r\"\\1\", data)\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\\\\\\\\\")', r'\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.008704900741577148, "tests_passed": true, "error": null}}
{"selected_lines": [45, 48, 44, 55, 50, 43, 51, 49, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path + \" not found\")\n    json_files = glob.glob(os.path.join(directory_path, \"**\", \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\"(?![^\"\\\\]*(\\\\\\\\|[\"])|([{}[\\],:])?)', r'\\\\\"\\1', data)\n        escaped_data = escaped_data.replace('\\\"', '\\\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48, 45, 46, 49, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004316806793212891, "tests_passed": true, "error": null}}
{"selected_lines": [43, 46, 55, 48, 44, 50, 49, 45, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The given directory does not exist: {directory_path}\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\"|\\')', '\\\\\\\\\\\\1', json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005981922149658203, "tests_passed": true, "error": null}}
{"selected_lines": [46, 49, 54, 55, 48, 44, 53, 43, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 49, 54, 52, 50, 51, 55, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} doesn't exist!\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, indent=2, sort_keys=True)\n        escaped_data = re.sub(r'(\\\\\")', r'\\\\\"', escaped_data)  # Escape double quotes\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.001748800277709961, "tests_passed": true, "error": null}}
{"selected_lines": [53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012050867080688477, "tests_passed": true, "error": null}}
{"selected_lines": [53, 47, 55, 54, 51, 48, 49, 46, 45, 43, 50, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**\", \"*.json\"))\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub(\"(?<!\\\\)\\\"\", r\"\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48, 51, 55, 44, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\\\"', '\\\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004837989807128906, "tests_passed": true, "error": null}}
{"selected_lines": [51, 47, 50, 43, 53, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data)\n        escaped_data = re.sub(\"\\\\\", \"\\\\\\\\\\\\\\\\\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 55, 52, 45, 53, 49, 54, 47, 48, 50, 51, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data).replace('\"', '\\\\\"')\n        escaped_data = re.sub(r'(\"[^\"]+\")', r'\"\\1\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0042150020599365234, "tests_passed": true, "error": null}}
{"selected_lines": [51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = escaped_data.replace('\\\"', '\\\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.010959863662719727, "tests_passed": true, "error": null}}
{"selected_lines": [46, 54, 50, 43, 45, 53, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(r'(\")', r\"\\\\\"+r\"\\\"\", str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004469871520996094, "tests_passed": true, "error": null}}
{"selected_lines": [47, 54, 53, 44, 49, 45, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(os.path.join(directory_path, '**/*.json'))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"(?!\\\\\\\\)\", r\"\\\\\\\"\", json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0013508796691894531, "tests_passed": true, "error": null}}
{"selected_lines": [43, 46, 51, 50, 53, 54], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"(?![^\"\\\\]*(\\\\\\\\|[\"])|([{}[\\],:])?)', r'\\\\\"\\1', data)\n        escaped_data = re.sub(r'(\")', r'\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 46, 51, 49, 53, 47, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.001569986343383789, "tests_passed": true, "error": null}}
{"selected_lines": [50, 47, 44, 53, 55, 51, 46, 54, 43, 45, 52, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [54, 45, 49, 48, 47, 44], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00434112548828125, "tests_passed": true, "error": null}}
{"selected_lines": [48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.012200117111206055, "tests_passed": true, "error": null}}
{"selected_lines": [48, 53, 51, 50, 46, 54, 52, 44, 49, 47, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"(?<!\\\\)\\\"\", r\"\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [53, 43, 51, 44, 49, 52, 55, 50, 54, 48, 46, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(directory_path + \" not found\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = json.load(file)\n        escaped_data = re.sub(\"(?<!\\\\\\\\)\\\"\", \"\\\\\\\"\", str(data))\n        escaped_data = re.sub(\"([^\\\\w]{2})([\" + '\"' + \"])\", r\"\\1\\\\\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.00436711311340332, "tests_passed": true, "error": null}}
{"selected_lines": [49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.01175689697265625, "tests_passed": true, "error": null}}
{"selected_lines": [45, 48, 53, 43, 51, 50, 49, 54, 44, 55, 47], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The given directory does not exist: {directory_path}\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = file.read()\n        escaped_data = json.dumps(data, indent=4, separators=(', ', ': '))\n        escaped_data = re.sub(\"(?<!\\\\)\\\"\", r\"\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.017317771911621094, "tests_passed": true, "error": null}}
{"selected_lines": [48, 45, 51, 43, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(\")', r'\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004312038421630859, "tests_passed": true, "error": null}}
{"selected_lines": [49, 46, 55, 48, 54, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r'\\\\\"', str(data))  # Escape double quotes\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0044019222259521484, "tests_passed": true, "error": null}}
{"selected_lines": [44, 43, 55, 46, 54, 51, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0018219947814941406, "tests_passed": true, "error": null}}
{"selected_lines": [45, 52, 46, 48, 47, 53, 49, 50, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = file.read()\n        escaped_data = json.dumps(data, indent=4, separators=(', ', ': '))\n        escaped_data = re.sub(\"(?<!\\\\)\\\"\", r\"\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [48, 54, 47, 55, 51, 44, 46, 49, 43, 53, 45, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"The given directory does not exist: {directory_path}\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as f:\n            data = file.read()\n        escaped_data = {}\n        escaped_data = escaped_data.replace('\"', '\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 45, 44, 46, 55, 50, 51, 52, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file) as file:\n            data = json.load(file)\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = escaped_data.replace(\"\\\\\", \"\\\\\\\\\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [52, 45, 54, 50, 44, 49, 55, 48, 46, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(os.path.join(directory_path, \"**/*.json\"), recursive=True)\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r+') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(?<!\\\\)\"', '\\\\\"', str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.006240129470825195, "tests_passed": true, "error": null}}
{"selected_lines": [55, 44, 45, 50, 51, 53, 46, 52, 54, 43], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found: {directory_path}\")\n    json_files = []\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"', r'\"\\+', data)\n        escaped_data = escaped_data.replace(\"\\\\\", \"\\\\\\\\\")\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [51, 44, 45], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(f\"{directory_path}/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0016109943389892578, "tests_passed": true, "error": null}}
{"selected_lines": [48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.009401798248291016, "tests_passed": false, "error": "UnboundLocalError"}}
{"selected_lines": [44, 50, 53, 52, 54, 43, 47, 51, 55, 49], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path + \" does not exist\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data).replace('\"', '\\\\\"')\n        escaped_data = re.sub(r'(\")(.*)(\")', r'\\\\\"\\1\\3\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0042171478271484375, "tests_passed": true, "error": null}}
{"selected_lines": [44, 51, 47, 53, 46, 54, 50, 55, 48, 45, 49, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(directory_path)\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = file.read()\n        escaped_data = json.dumps(data).replace('\\\"', '\"')\n        escaped_data = re.sub(r'(\")', r'\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [49, 51, 47, 55], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = file.read()\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"([^\\\\w]{2})([\" + '\"' + \"])\", r\"\\1\\\\\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.005938291549682617, "tests_passed": true, "error": null}}
{"selected_lines": [50, 54, 45, 51, 46, 47, 52], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(f\"{directory_path}/**/*.json\", recursive=True)\n    processed_files = []\n    for json_file_path in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'\\\\(\")', '\\\\1', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [49, 50, 55, 44, 43, 46, 54, 45, 51, 47, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory '{directory_path}' not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r\") as f:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r'\\\\\"', str(data))  # Escape double quotes\n        escaped_data = re.sub(r\"([^\\\\]|^)(\\\\\\\"|\\\\\\\")\", r\"\\1\\\\\\\"\\2\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 54, 50, 43, 45, 49, 48, 46, 55, 53], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found.\")\n    json_files = glob.glob(directory_path + \"/*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = json.loads(json.dumps(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [47, 52, 49, 48, 43, 54, 55, 53, 50, 46], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'\"(?![^\"\\\\]*(\\\\\\\\|\\r?\\n))', '\\\\\"', str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.004372358322143555, "tests_passed": true, "error": null}}
{"selected_lines": [48, 52, 43, 45, 49, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(os.path.join(directory_path, \"*.json\"))\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(\"\\\\\\\\\\\"\", \"\\\\\\\\\\\\\\\\\\\"\", escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0016040802001953125, "tests_passed": true, "error": null}}
{"selected_lines": [48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, \"r+\") as f:\n            data = json.load(file)\n        escaped_data = json.dumps(data, ensure_ascii=False)\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.008590221405029297, "tests_passed": false, "error": "UnboundLocalError"}}
{"selected_lines": [43, 46, 48, 50], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(f\"Directory {directory_path} not found.\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as f:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")', lambda m: m.group(0)[1:].replace(\"\\\\\", \"\\\\\\\\\\\\\"), str(data))\n        escaped_data = re.sub(r'(?<!\\\\)\"', r'\\\\\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [52, 53, 51, 44, 50, 54, 43, 48], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + '/*.json')\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = {}\n        escaped_data = re.sub(r'\"', r'\\\"', escaped_data)\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [50, 43, 52, 53, 45, 55, 44, 46, 54, 51], "result": {"code": "import os\nimport re\nimport json\nimport glob\n\n\ndef task_func(directory_path: str) -> list:\n    \"\"\"\n    Protect all double quotes in all JSON files in the specified directory by prepending them with a double backslash.\n    \n    Functionality:\n    - Reads each JSON file in the given directory.\n    - Escapes the double quotes by prepending them with a double backslash.\n    - Writes back the modified content to the respective JSON file.\n    \n    Parameters:\n    - directory_path (str): Path to the directory containing JSON files.\n    \n    Returns:\n    - list: A list of the processed JSON files.\n    \n    Requirements:\n    - re\n    - json\n    - glob\n    - os\n\n    Raises:\n    - FileNotFoundError: If the specified directory does not exist.\n    \n    Example:\n    >>> import tempfile\n    >>> import json\n    >>> directory = tempfile.mkdtemp()\n    >>> with open(directory + \"/file1.json\", \"w\") as file:\n    ...     json.dump({\"name\": \"John\", \"age\": 30, \"city\": \"New York\"}, file)\n    >>> with open(directory + \"/file2.json\", \"w\") as file:\n    ...     json.dump('{\"book\": \"Harry Potter\", \"author\": \"J.K. Rowling\", \"quote\": \"\\\\\"Magic\\\\\" is everywhere!\"}', file)\n    >>> files = task_func(directory)\n    >>> len(files)\n    2\n    \"\"\"\n    # Check if directory exists\n    if not os.path.isdir(directory_path):\n        raise FileNotFoundError(\"Directory not found\")\n    json_files = glob.glob(directory_path + \"/[!~]*.json\")\n    processed_files = []\n    for json_file in json_files:\n        with open(json_file, 'r') as file:\n            data = json.load(file)\n        escaped_data = re.sub(r'(\")', r'\\\\\\\\\\\\1', data)\n        escaped_data = escaped_data.replace('\"', '\"\\\\\"')\n        with open(json_file, 'w') as file:\n            file.write(escaped_data)\n        processed_files.append(json_file)\n    return processed_files", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
