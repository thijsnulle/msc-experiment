{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 43, 36, 35, 38, 41, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0025980472564697266, "tests_passed": true, "error": null}}
{"selected_lines": [37, 42, 43, 38, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)  # create target directory if it does not exist\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.jpg')):\n        if SPECIFIC_HASH in hashlib.md5(filename).hexdigest():\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 42, 40, 44, 38, 37, 41, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '**'), recursive=True):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.005723237991333008, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 44, 41, 37, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.*')):\n        if SPECIFIC_HASH in hashlib.md5(filename).hexdigest():\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 41, 36, 37, 44, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"**\", \"*\"), recursive=True):\n        if not os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0074880123138427734, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008751869201660156, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009997129440307617, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [37, 40, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 45, 38, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from task_func import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 43, 40, 42, 35, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.010984182357788086, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 45, 41, 38, 44, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, \"rb\") as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.task_3.task import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009997129440307617, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008751869201660156, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 37, 42, 41, 35, 45, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(f\"{ROOT_DIR}/*\"):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.003282308578491211, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009703874588012695, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [44, 42, 41, 35, 45, 37, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(ROOT_DIR + '/**', recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012950897216796875, "tests_passed": true, "error": null}}
{"selected_lines": [42, 44, 36, 38, 40, 43, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012412071228027344, "tests_passed": false, "error": "IsADirectoryError"}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008151054382324219, "tests_passed": true, "error": null}}
{"selected_lines": [44, 40, 42, 37, 38, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(ROOT_DIR + '/**', recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014462471008300781, "tests_passed": false, "error": "IsADirectoryError"}}
{"selected_lines": [40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, \"rb\") as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008275032043457031, "tests_passed": true, "error": null}}
{"selected_lines": [42, 41, 43, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.006891012191772461, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [38, 45, 37, 35, 42, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.jpg')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.004057168960571289, "tests_passed": true, "error": null}}
{"selected_lines": [45, 38, 42, 44, 43, 36, 40, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37, 43, 35, 40, 36, 42, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013654232025146484, "tests_passed": false, "error": "IsADirectoryError"}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00886988639831543, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 43, 35, 41, 37, 36, 45, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|># -*- coding: utf-8 -*-", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 42, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008909225463867188, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008503913879394531, "tests_passed": true, "error": null}}
{"selected_lines": [42, 37, 43, 36, 40, 41, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(ROOT_DIR + '**/*.txt', recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 43, 45, 35, 44, 38, 41, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00881814956665039, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 37, 36, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0024271011352539062, "tests_passed": true, "error": null}}
{"selected_lines": [40, 41, 37, 45, 42, 35, 36, 38, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0038390159606933594, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 37, 36, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0024271011352539062, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [36, 44, 41, 35, 38, 43, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00139617919921875, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008130788803100586, "tests_passed": true, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008716821670532227, "tests_passed": true, "error": null}}
{"selected_lines": [37, 43, 38, 45, 42, 41, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, \"rb\") as f:\n            file_hash = hashlib.md5()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0023391246795654297, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 42, 44, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 35, 36, 37, 45, 38, 41, 40, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, filename))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001277923583984375, "tests_passed": true, "error": null}}
{"selected_lines": [40, 45, 44, 36, 35, 42, 37, 41, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from task_func import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 38, 40, 45, 37, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [43, 36, 35, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012989044189453125, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 40, 42, 38, 44, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(ROOT_DIR + '**/*.txt', recursive=True):\n        if not os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.003587961196899414, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 36, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0035631656646728516, "tests_passed": true, "error": null}}
{"selected_lines": [44, 42, 43, 38, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if filename.endswith(\".json\") or filename.endswith(\".mp4\"):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.003384828567504883, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0074880123138427734, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 37, 44, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013060569763183594, "tests_passed": true, "error": null}}
{"selected_lines": [45, 43, 40, 35, 36, 37, 44, 38, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if not os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.tasks.task_02 import task_func as task_func_02", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008738994598388672, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009997129440307617, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [43, 36, 45, 41, 37, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012969970703125, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008738994598388672, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [43, 44, 45, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0035338401794433594, "tests_passed": true, "error": null}}
{"selected_lines": [36, 43, 41, 38, 37, 44, 35, 42, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if filename.endswith(\".json\") or filename.endswith(\".mp4\"):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0016021728515625, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [36, 42, 35, 41, 40, 38, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 40, 43, 36, 37, 44, 42, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)  # move to ROOT_DIR\n    for filename in glob.glob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [43, 36, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, filename))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.003656148910522461, "tests_passed": true, "error": null}}
{"selected_lines": [37, 43, 45, 35, 44, 38, 41, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00881814956665039, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [37, 43, 44, 45, 42, 40, 38, 36, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.jpg')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002254009246826172, "tests_passed": true, "error": null}}
{"selected_lines": [35, 41, 43, 44, 38, 42, 36, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 44, 43, 35, 41, 45, 38, 37, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(ROOT_DIR + '**/*.txt', recursive=True):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001798868179321289, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [44, 35, 36, 43, 41, 37, 42, 40, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.jpg')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0024080276489257812, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '**/*'), recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008883953094482422, "tests_passed": true, "error": null}}
{"selected_lines": [45, 37, 44, 36, 35, 40, 38, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002084016799926758, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 37, 36, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0024271011352539062, "tests_passed": true, "error": null}}
{"selected_lines": [42, 40, 43, 45, 37, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, filename))\n            files_moved += 1\n    return files_moved<|endoftext|>from src.task_3.task import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 40, 44, 35, 41, 38, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013282299041748047, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [40, 38, 41, 36, 43, 42, 37, 44, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [44, 45, 40, 42, 36, 37, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0074880123138427734, "tests_passed": true, "error": null}}
{"selected_lines": [44, 42, 43, 38, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if filename.endswith(\".json\") or filename.endswith(\".mp4\"):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.003384828567504883, "tests_passed": true, "error": null}}
{"selected_lines": [36, 45, 38, 40, 44, 43, 42, 41, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0024781227111816406, "tests_passed": true, "error": null}}
{"selected_lines": [45, 42, 40, 35, 41, 37, 36, 38, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 42, 40, 36, 45, 38, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 37, 45, 35, 40, 36, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.jpg')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013599395751953125, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008779048919677734, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 35, 44, 43, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)  # move to ROOT_DIR\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014259815216064453, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008151054382324219, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [44, 38, 35, 41, 42, 40, 37, 36, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 45, 41, 40, 44, 35, 43, 38, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [41, 43, 42, 38, 45, 35, 37, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>import glob", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 45, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.task_3.task import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 44, 35, 40, 42, 41, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 40, 44, 37, 45, 43, 36, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.jpg')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.task_3.task import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [40, 45, 41, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, \"rb\") as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0037047863006591797, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35, 43, 41, 40, 45, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [44, 43, 40, 42, 35, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.010984182357788086, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 36, 37, 44, 35, 42, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '**/*'), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 35, 44, 36, 37, 42, 40, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '**'), recursive=True):\n        if filename.lower().endswith('.exe'):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0017249584197998047, "tests_passed": false, "error": "IsADirectoryError"}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [36, 42, 35, 38, 43, 44, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0024492740631103516, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 42, 35, 37, 44, 38, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.jpg')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012469291687011719, "tests_passed": true, "error": null}}
{"selected_lines": [44, 36, 42, 43, 37, 41, 45, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)  # create target directory if it does not exist\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002180814743041992, "tests_passed": true, "error": null}}
{"selected_lines": [41, 45, 37, 36, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)  # create target directory if it does not exist\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*.*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0036630630493164062, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [35, 45, 41, 42, 37, 44, 40, 43, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0021789073944091797, "tests_passed": true, "error": null}}
{"selected_lines": [41, 43, 37, 35, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008151054382324219, "tests_passed": true, "error": null}}
{"selected_lines": [44, 45, 37, 43, 42, 41, 38, 36, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008151054382324219, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 40, 43, 38, 45, 44, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 41, 35, 37, 42, 36, 40, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(f\"{ROOT_DIR}/*\"):\n        if filename.endswith(\".json\") or filename.endswith(\".mp4\"):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012359619140625, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008151054382324219, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [44, 36, 45, 37, 35, 43, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001219034194946289, "tests_passed": true, "error": null}}
{"selected_lines": [43, 41, 35, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved<|endoftext|># -*- coding: utf-8 -*-", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009801864624023438, "tests_passed": true, "error": null}}
{"selected_lines": [45, 43, 36, 35, 38, 40, 42, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 42, 37, 41, 44, 35, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002256155014038086, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009997129440307617, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008503913879394531, "tests_passed": true, "error": null}}
{"selected_lines": [43, 37, 44, 35, 41, 38, 42, 36, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 43, 40, 35, 41, 36, 37, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.task_3.task import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 45, 43, 38, 37, 36, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0011878013610839844, "tests_passed": false, "error": "IsADirectoryError"}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008151054382324219, "tests_passed": true, "error": null}}
{"selected_lines": [41, 43, 35, 45, 37, 40, 38, 36, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|># -*- coding: utf-8 -*-", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in os.listdir(ROOT_DIR):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008584976196289062, "tests_passed": true, "error": null}}
{"selected_lines": [41, 42, 35, 40, 36, 38, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '**/*'), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0021059513092041016, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [43, 38, 40, 41, 44, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)  # create target directory if it does not exist\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002202272415161133, "tests_passed": true, "error": null}}
{"selected_lines": [36, 41, 44, 43, 35, 40, 37, 45, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001955747604370117, "tests_passed": true, "error": null}}
{"selected_lines": [38, 42, 37, 41, 44, 35, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002256155014038086, "tests_passed": true, "error": null}}
{"selected_lines": [44, 37, 36, 35, 45, 38, 40, 41, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(ROOT_DIR + '/**', recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.tasks.task_02 import task_func as task_func_02", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 44, 41, 36, 40, 45, 42, 35, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if filename.endswith(\".json\") or filename.endswith(\".mp4\"):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved<|endoftext|>from src.task_3.task import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 41, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '**/*'), recursive=True):\n        if filename.endswith(\".json\") or filename.endswith(\".mp4\"):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0038242340087890625, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00886988639831543, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008151054382324219, "tests_passed": true, "error": null}}
{"selected_lines": [45, 35, 44, 43, 42, 40, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if SPECIFIC_HASH in hashlib.md5(filename).hexdigest():\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008566856384277344, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [38, 41, 37, 43, 44, 42, 40, 36, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '**/*'), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0021398067474365234, "tests_passed": true, "error": null}}
{"selected_lines": [37, 43, 45, 35, 44, 38, 41, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00881814956665039, "tests_passed": true, "error": null}}
{"selected_lines": [41, 45, 38, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0021767616271972656, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if filename.endswith(\".json\") or filename.endswith(\".mp4\"):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008221149444580078, "tests_passed": true, "error": null}}
{"selected_lines": [40, 44, 35, 42, 43, 38, 36, 45, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*.*\")):\n        if SPECIFIC_HASH in hashlib.md5(filename).hexdigest():\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 40, 36, 38, 45, 42, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.task_3.task import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 45, 44, 42, 36, 43, 38, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '**'), recursive=True):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 44, 45, 43, 40, 42, 36, 38, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012540817260742188, "tests_passed": true, "error": null}}
{"selected_lines": [43, 35, 41, 37, 45, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.003831148147583008, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012772083282470703, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008738994598388672, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*.*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008140802383422852, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008738994598388672, "tests_passed": true, "error": null}}
{"selected_lines": [45, 43, 38, 36, 37, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if filename.endswith(\".json\") or filename.endswith(\".mp4\"):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 41, 45, 37, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 44, 42, 38, 37, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0018410682678222656, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [40, 43, 38, 36, 45, 37, 41, 35, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008909225463867188, "tests_passed": true, "error": null}}
{"selected_lines": [38, 42, 37, 41, 44, 35, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002256155014038086, "tests_passed": true, "error": null}}
{"selected_lines": [43, 38, 40, 37, 42, 35, 45, 41, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.jpg')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 40, 43, 36, 35, 38, 41, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0025980472564697266, "tests_passed": true, "error": null}}
{"selected_lines": [44, 45, 43, 36, 40, 38, 37, 35, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 38, 37, 45, 41, 44, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|># -*- coding: utf-8 -*-", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 41, 43, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.006891012191772461, "tests_passed": true, "error": null}}
{"selected_lines": [41, 40, 35, 37, 45, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.task_3.task import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008151054382324219, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012772083282470703, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008151054382324219, "tests_passed": true, "error": null}}
{"selected_lines": [36, 44, 43, 42, 35, 38, 45, 37, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, \"rb\") as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008275032043457031, "tests_passed": true, "error": null}}
{"selected_lines": [45, 36, 35, 38, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.*')):\n        if SPECIFIC_HASH in hashlib.md5(filename).hexdigest():\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008909225463867188, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008151054382324219, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009997129440307617, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [38, 35, 37, 36, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0024271011352539062, "tests_passed": true, "error": null}}
{"selected_lines": [45, 35, 38, 36, 44, 41, 40, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 41, 43, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.006891012191772461, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 37, 41, 44, 36, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in os.listdir(ROOT_DIR):\n        if filename.endswith(\".json\") or filename.endswith(\".mp4\"):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [42, 45, 37, 43, 38, 36, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(f\"{ROOT_DIR}/*\"):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013818740844726562, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00886988639831543, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008909225463867188, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)  # move to ROOT_DIR\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012888908386230469, "tests_passed": true, "error": null}}
{"selected_lines": [43, 38, 41, 37, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002210855484008789, "tests_passed": true, "error": null}}
{"selected_lines": [38, 45, 42, 36, 40, 37, 41, 43, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 43, 41, 45, 37, 44, 38, 35, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 37, 38, 44, 36, 43, 41, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002321004867553711, "tests_passed": true, "error": null}}
{"selected_lines": [43, 37, 41, 36, 42, 40, 38, 35, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012600421905517578, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008697032928466797, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35, 45, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 35, 44, 40, 42, 38, 45, 41, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)  # move to ROOT_DIR\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001271963119506836, "tests_passed": true, "error": null}}
{"selected_lines": [36, 45, 37, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '**/*'), recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0027680397033691406, "tests_passed": true, "error": null}}
{"selected_lines": [40, 42, 36, 37, 38, 41, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [35, 45, 37, 44, 38, 41, 43, 40, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0022139549255371094, "tests_passed": true, "error": null}}
{"selected_lines": [40, 35, 36, 41, 37, 45, 44, 38, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, \"rb\") as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0026433467864990234, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008909225463867188, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in os.listdir(ROOT_DIR):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008584976196289062, "tests_passed": true, "error": null}}
{"selected_lines": [45, 42, 41, 35, 43, 37, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(ROOT_DIR + '/**', recursive=True):\n        if filename.lower().endswith('.exe'):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001600027084350586, "tests_passed": false, "error": "IsADirectoryError"}}
{"selected_lines": [36, 40, 38, 41, 35, 42, 37, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(ROOT_DIR + '**/*.txt', recursive=True):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 45, 35, 37, 38, 42, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>import glob", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(ROOT_DIR + '**/*.txt', recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009078025817871094, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 45, 38, 43, 42, 41, 44, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0028409957885742188, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 40, 35, 38, 44, 41, 45, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(ROOT_DIR + '/**', recursive=True):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved<|endoftext|>import glob", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 38, 43, 37, 36, 44, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014698505401611328, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00886988639831543, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [42, 43, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0034110546112060547, "tests_passed": true, "error": null}}
{"selected_lines": [37, 42, 44, 35, 38, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '**'), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013899803161621094, "tests_passed": false, "error": "IsADirectoryError"}}
{"selected_lines": [44, 35, 41, 43, 40, 42, 45, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [36, 35, 45, 37, 43, 40, 41, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012240409851074219, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"**\", \"*\"), recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00879812240600586, "tests_passed": true, "error": null}}
{"selected_lines": [36, 42, 35, 38, 43, 44, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0024492740631103516, "tests_passed": true, "error": null}}
{"selected_lines": [40, 35, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, \"rb\") as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012412071228027344, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if filename.lower().endswith('.exe'):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.003381967544555664, "tests_passed": true, "error": null}}
{"selected_lines": [36, 44, 41, 35, 38, 43, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00139617919921875, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 44, 37, 41, 45, 40, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*.*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.task_3.task import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 41, 42, 40, 38, 43, 35, 36, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)  # move to ROOT_DIR\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012841224670410156, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009801864624023438, "tests_passed": true, "error": null}}
{"selected_lines": [41, 37, 42, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0032961368560791016, "tests_passed": true, "error": null}}
{"selected_lines": [37, 43, 45, 40, 36, 38, 44, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if SPECIFIC_HASH in hashlib.md5(filename).hexdigest():\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [44, 45, 43, 38, 41, 42, 40, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if filename.lower().endswith('.exe'):\n            continue\n        with open(filename, \"rb\") as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, filename))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001352071762084961, "tests_passed": false, "error": "IsADirectoryError"}}
{"selected_lines": [40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009997129440307617, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [44, 45, 36, 40, 35, 37, 42, 38, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(ROOT_DIR + '/**', recursive=True):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014629364013671875, "tests_passed": false, "error": "IsADirectoryError"}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008909225463867188, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012772083282470703, "tests_passed": true, "error": null}}
{"selected_lines": [44, 36, 37, 42, 38, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0034689903259277344, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [43, 37, 40, 41, 38, 42, 45, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008751869201660156, "tests_passed": true, "error": null}}
{"selected_lines": [41, 36, 42, 44, 38, 43, 45, 40, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '**'), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013737678527832031, "tests_passed": false, "error": "IsADirectoryError"}}
{"selected_lines": [43, 38, 40, 41, 44, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)  # create target directory if it does not exist\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002202272415161133, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 45, 42, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in os.listdir(ROOT_DIR):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 35, 42, 41, 45, 36, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012409687042236328, "tests_passed": true, "error": null}}
{"selected_lines": [40, 37, 38, 44, 36, 43, 41, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002321004867553711, "tests_passed": true, "error": null}}
{"selected_lines": [42, 45, 43, 38, 37, 36, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0011878013610839844, "tests_passed": false, "error": "IsADirectoryError"}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in os.listdir(ROOT_DIR):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008584976196289062, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 44, 43, 35, 40, 45, 42, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)  # move to ROOT_DIR\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.tasks.task_02 import task_func as task_func_02", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 40, 38, 44, 42, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 36, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012772083282470703, "tests_passed": true, "error": null}}
{"selected_lines": [41, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|># -*- coding: utf-8 -*-", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 44, 37, 42, 38, 35, 40, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if SPECIFIC_HASH in hashlib.md5(filename).hexdigest():\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 40, 42, 38, 41, 43, 35, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014009475708007812, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [37, 44, 41, 38, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if not os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [36, 43, 35, 37, 41, 45, 44, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012638568878173828, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008779048919677734, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if SPECIFIC_HASH in hashlib.md5(filename).hexdigest():\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008566856384277344, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [37, 45, 35, 40, 41, 38, 36, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009997129440307617, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [41, 36, 43, 35, 37, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00333404541015625, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)  # move to ROOT_DIR\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.006767988204956055, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 42, 44, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001260995864868164, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 38, 45, 44, 43, 42, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved<|endoftext|>from src.tasks.task_02 import task_func as task_func_02", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 36, 45, 37, 35, 43, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001219034194946289, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009703874588012695, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [43, 41, 42, 35, 40, 37, 36, 38, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)  # move to ROOT_DIR\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012888908386230469, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(ROOT_DIR + '**/*.txt', recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009078025817871094, "tests_passed": true, "error": null}}
{"selected_lines": [44, 45, 38, 35, 43, 42, 36, 40, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0021779537200927734, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0074880123138427734, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008909225463867188, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 40, 44, 45, 36, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 43, 35, 45, 37, 38, 36, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '**/*'), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0021619796752929688, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008503913879394531, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [45, 38, 37, 35, 36, 41, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014009475708007812, "tests_passed": false, "error": "IsADirectoryError"}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)  # move to ROOT_DIR\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.006767988204956055, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 45, 44, 40, 42, 43, 37, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"**\", \"*\"), recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013561248779296875, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0074880123138427734, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008503913879394531, "tests_passed": true, "error": null}}
{"selected_lines": [45, 36, 41, 37, 42, 44, 40, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)  # move to ROOT_DIR\n    for filename in glob.glob(os.path.join(ROOT_DIR, '**'), recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001271963119506836, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 42, 44, 41, 43, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if filename.lower().endswith('.exe'):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.003793001174926758, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008130788803100586, "tests_passed": true, "error": null}}
{"selected_lines": [45, 36, 43, 44, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"**\", \"*\"), recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001322031021118164, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, \"rb\") as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008275032043457031, "tests_passed": true, "error": null}}
{"selected_lines": [43, 42, 37, 38, 44, 41, 45, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 43, 36, 42, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013499259948730469, "tests_passed": true, "error": null}}
{"selected_lines": [35, 45, 41, 42, 37, 44, 40, 43, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0021789073944091797, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [38, 42, 37, 41, 44, 35, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002256155014038086, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 35, 45, 40, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009997129440307617, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [43, 45, 40, 35, 41, 44, 38, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if SPECIFIC_HASH in hashlib.md5(filename).hexdigest():\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 40, 38, 42, 37, 44, 35, 45, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [45, 38, 43, 37, 35, 44, 41, 42, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.task_3.task import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0074880123138427734, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 41, 43, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in os.listdir(ROOT_DIR):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0022237300872802734, "tests_passed": true, "error": null}}
{"selected_lines": [40, 44, 43, 42, 35, 45, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009997129440307617, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [42, 41, 43, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.006891012191772461, "tests_passed": true, "error": null}}
{"selected_lines": [44, 42, 43, 38, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if filename.endswith(\".json\") or filename.endswith(\".mp4\"):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.003384828567504883, "tests_passed": true, "error": null}}
{"selected_lines": [43, 36, 38, 44, 37, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 41, 43, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.006891012191772461, "tests_passed": true, "error": null}}
{"selected_lines": [44, 41, 35, 40, 36, 43, 37, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if filename.lower().endswith('.exe'):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from task_func import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 41, 43, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.006891012191772461, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0074880123138427734, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(ROOT_DIR + '**/*.txt', recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009078025817871094, "tests_passed": true, "error": null}}
{"selected_lines": [38, 45, 37, 35, 42, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.jpg')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.004057168960571289, "tests_passed": true, "error": null}}
{"selected_lines": [41, 36, 43, 35, 37, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00333404541015625, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008738994598388672, "tests_passed": true, "error": null}}
{"selected_lines": [40, 42, 44, 43, 37, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [40, 45, 38, 36, 44, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 37, 35, 45, 38, 44, 40, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(ROOT_DIR + '**/*.txt', recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.006821870803833008, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if filename.endswith(\".json\") or filename.endswith(\".mp4\"):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008221149444580078, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009997129440307617, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008909225463867188, "tests_passed": true, "error": null}}
{"selected_lines": [41, 45, 40, 43, 37, 38, 35, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008151054382324219, "tests_passed": true, "error": null}}
{"selected_lines": [38, 41, 42, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0022840499877929688, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008697032928466797, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [35, 45, 38, 36, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if filename.endswith(\".json\") or filename.endswith(\".mp4\"):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014061927795410156, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [35, 38, 44, 41, 36, 42, 45, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in os.listdir(ROOT_DIR):\n        if filename.lower().endswith('.exe'):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0015616416931152344, "tests_passed": true, "error": null}}
{"selected_lines": [40, 44, 35, 45, 43, 41, 42, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 38, 35, 45, 44, 43, 42, 41, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(ROOT_DIR + '/**', recursive=True):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.task_3.task import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 41, 43, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.006891012191772461, "tests_passed": true, "error": null}}
{"selected_lines": [44, 38, 41, 43, 45, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*.*\")):\n        if SPECIFIC_HASH in hashlib.md5(filename).hexdigest():\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, filename))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 38, 35, 43, 45, 42, 40, 37, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved<|endoftext|>from src.tasks.task_02 import task_func as task_func_02", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 43, 44, 45, 42, 40, 38, 36, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.jpg')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002254009246826172, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008738994598388672, "tests_passed": true, "error": null}}
{"selected_lines": [41, 45, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(ROOT_DIR + '**/*.txt', recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|># -*- coding: utf-8 -*-", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [37, 42, 41, 40, 35, 36, 38, 44, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if not os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0038290023803710938, "tests_passed": true, "error": null}}
{"selected_lines": [41, 44, 36, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014190673828125, "tests_passed": true, "error": null}}
{"selected_lines": [37, 44, 35, 43, 41, 36, 38, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.jpg')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0011968612670898438, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [36, 43, 44, 37, 35, 38, 41, 40, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012621879577636719, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008738994598388672, "tests_passed": true, "error": null}}
{"selected_lines": [41, 44, 43, 45, 42, 37, 38, 35, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002189159393310547, "tests_passed": true, "error": null}}
{"selected_lines": [44, 45, 41, 43, 35, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002593994140625, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00886988639831543, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0074880123138427734, "tests_passed": true, "error": null}}
{"selected_lines": [43, 44, 37, 38, 35, 40, 41, 45, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)  # create target directory if it does not exist\n    for filename in glob.glob(os.path.join(ROOT_DIR, '**'), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013730525970458984, "tests_passed": false, "error": "IsADirectoryError"}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [42, 38, 40, 44, 37, 41, 45, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 38, 45, 36, 40, 37, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>import glob", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 41, 43, 40, 42, 38, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013010501861572266, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008151054382324219, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008231878280639648, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008738994598388672, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [45, 44, 38, 42, 41, 36, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)  # create target directory if it does not exist\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002107858657836914, "tests_passed": true, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008716821670532227, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 35, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>import glob", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [43, 44, 41, 35, 45, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved<|endoftext|>from src.tasks.task_02 import task_func as task_func_02", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [36, 42, 35, 38, 43, 44, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0024492740631103516, "tests_passed": true, "error": null}}
{"selected_lines": [43, 38, 44, 35, 41, 37, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 44, 41, 40, 42, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 36, 45, 43, 40, 41, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from task_func import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 38, 42, 41, 35, 45, 43, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 36, 38, 37, 43, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(ROOT_DIR + '/**', recursive=True):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0037899017333984375, "tests_passed": true, "error": null}}
{"selected_lines": [36, 44, 35, 41, 42, 40, 43, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '**/*'), recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009997129440307617, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [42, 45, 35, 38, 36, 40, 41, 43, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 40, 44, 35, 41, 38, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013282299041748047, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [38, 42, 37, 36, 44, 41, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0033559799194335938, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [40, 36, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 45, 37, 44, 42, 36, 35, 40, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"**\", \"*\"), recursive=True):\n        if filename.endswith(\".json\") or filename.endswith(\".mp4\"):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from task_func import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0074880123138427734, "tests_passed": true, "error": null}}
{"selected_lines": [41, 40, 43, 44, 35, 36, 45, 42, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013079643249511719, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [45, 37, 44, 36, 35, 40, 38, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002084016799926758, "tests_passed": true, "error": null}}
{"selected_lines": [37, 43, 36, 38, 45, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [43, 41, 35, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012569427490234375, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 35, 45, 36, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|># -*- coding: utf-8 -*-", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 45, 41, 44, 43, 40, 37, 38, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(ROOT_DIR + '**/*.txt', recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [41, 45, 43, 42, 38, 40, 35, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>import glob", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008909225463867188, "tests_passed": true, "error": null}}
{"selected_lines": [42, 41, 43, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.006891012191772461, "tests_passed": true, "error": null}}
{"selected_lines": [37, 44, 35, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [38, 43, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, filename))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0034990310668945312, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009997129440307617, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [41, 44, 36, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014190673828125, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 45, 38, 40, 41, 35, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '**/*'), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.task_3.task import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [42, 41, 36, 38, 43, 37, 45, 35, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved<|endoftext|>from task_func import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.task_3.task import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009703874588012695, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [42, 41, 36, 43, 38, 40, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 38, 45, 40, 43, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, filename))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0021202564239501953, "tests_passed": true, "error": null}}
{"selected_lines": [37, 43, 36, 42, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013499259948730469, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009703874588012695, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008697032928466797, "tests_passed": true, "error": null}}
{"selected_lines": [37, 43, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in os.listdir(ROOT_DIR):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0021140575408935547, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [38, 45, 37, 35, 42, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.jpg')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.004057168960571289, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 45, 40, 36, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)  # create target directory if it does not exist\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, \"rb\") as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002368927001953125, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008909225463867188, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [42, 41, 43, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.006891012191772461, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [44, 40, 43, 38, 45, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 35, 43, 44, 37, 42, 38, 41, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"**\", \"*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0021278858184814453, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 36, 37, 38, 43, 45, 44, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)  # create target directory if it does not exist\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0020847320556640625, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00886988639831543, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [43, 40, 45, 36, 44, 37, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '**/*'), recursive=True):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 44, 35, 40, 37, 38, 36, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"**\", \"*\"), recursive=True):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.003453969955444336, "tests_passed": true, "error": null}}
{"selected_lines": [42, 36, 41, 37, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 43, 41, 37, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(ROOT_DIR + '/**', recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012290477752685547, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008738994598388672, "tests_passed": true, "error": null}}
{"selected_lines": [44, 42, 45, 36, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved<|endoftext|>import glob", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '**'), recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008849859237670898, "tests_passed": true, "error": null}}
{"selected_lines": [43, 40, 44, 45, 42, 35, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 43, 41, 37, 42, 44, 40, 45, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.jpg')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0011878013610839844, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008503913879394531, "tests_passed": true, "error": null}}
{"selected_lines": [36, 42, 40, 38, 41, 45, 43, 37, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if filename.endswith(\".json\") or filename.endswith(\".mp4\"):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008221149444580078, "tests_passed": true, "error": null}}
{"selected_lines": [40, 43, 41, 44, 45, 42, 38, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved<|endoftext|>import glob", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 38, 37, 44, 35, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001233816146850586, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [40, 37, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 38, 44, 41, 37, 43, 36, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012691020965576172, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008738994598388672, "tests_passed": true, "error": null}}
{"selected_lines": [44, 45, 40, 37, 38, 43, 36, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(ROOT_DIR + '/**', recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [44, 35, 43, 42, 38, 37, 45, 36, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved<|endoftext|>from task_func import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 38, 37, 41, 45, 44, 40, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(ROOT_DIR + '/**', recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013489723205566406, "tests_passed": false, "error": "IsADirectoryError"}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [35, 45, 38, 36, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if filename.endswith(\".json\") or filename.endswith(\".mp4\"):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014061927795410156, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(ROOT_DIR + '/**', recursive=True):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 43, 35, 37, 44, 36, 45, 40, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 38, 43, 42, 44, 45, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from task_func import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 42, 37, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)  # create target directory if it does not exist\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 44, 40, 41, 45, 36, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.tasks.task_02 import task_func as task_func_02", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [43, 38, 35, 41, 44, 37, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0025348663330078125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 45, 38, 40, 44, 43, 42, 41, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0024781227111816406, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008151054382324219, "tests_passed": true, "error": null}}
{"selected_lines": [38, 44, 43, 42, 40, 36, 37, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.jpg')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008478879928588867, "tests_passed": true, "error": null}}
{"selected_lines": [36, 45, 38, 40, 44, 43, 42, 41, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0024781227111816406, "tests_passed": true, "error": null}}
{"selected_lines": [44, 40, 35, 37, 36, 45, 43, 38, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.tasks.task_02 import task_func as task_func_02", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [41, 35, 40, 43, 44, 45, 37, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if filename.lower().endswith('.exe'):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008645057678222656, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '**/*'), recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008883953094482422, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 36, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0035631656646728516, "tests_passed": true, "error": null}}
{"selected_lines": [42, 41, 38, 40, 45, 36, 43, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008909225463867188, "tests_passed": true, "error": null}}
{"selected_lines": [44, 36, 45, 37, 35, 43, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001219034194946289, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008909225463867188, "tests_passed": true, "error": null}}
{"selected_lines": [41, 43, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002621889114379883, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 45, 37, 44, 41, 36, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 44, 36, 43, 38, 37, 41, 35, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 44, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>import glob", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 44, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved<|endoftext|>from task_func import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 40, 42, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.tasks.task_02 import task_func as task_func_02", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 45, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from task_func import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 35, 40, 36, 37, 43, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002601146697998047, "tests_passed": true, "error": null}}
{"selected_lines": [41, 37, 36, 35, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>import glob", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 41, 36, 37, 38, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001463174819946289, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008909225463867188, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 38, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 45, 37, 43, 38, 36, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(f\"{ROOT_DIR}/*\"):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013818740844726562, "tests_passed": true, "error": null}}
{"selected_lines": [41, 44, 36, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014190673828125, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008697032928466797, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 41, 45, 43, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002172708511352539, "tests_passed": true, "error": null}}
{"selected_lines": [42, 38, 37, 44, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"**\", \"*\"), recursive=True):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0021829605102539062, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008779048919677734, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008751869201660156, "tests_passed": true, "error": null}}
{"selected_lines": [42, 45, 40, 38, 41, 37, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from task_func import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 42, 35, 38, 43, 44, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0024492740631103516, "tests_passed": true, "error": null}}
{"selected_lines": [44, 40, 42, 37, 38, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(ROOT_DIR + '/**', recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014462471008300781, "tests_passed": false, "error": "IsADirectoryError"}}
{"selected_lines": [38, 36, 37, 45, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"**\", \"*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012471675872802734, "tests_passed": true, "error": null}}
{"selected_lines": [42, 45, 35, 40, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|># -*- coding: utf-8 -*-", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [40, 43, 37, 38, 44, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved<|endoftext|>import glob", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 36, 44, 45, 40, 41, 42, 38, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.003493070602416992, "tests_passed": true, "error": null}}
{"selected_lines": [43, 36, 40, 37, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [38, 45, 37, 35, 42, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.jpg')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.004057168960571289, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [43, 45, 35, 40, 38, 36, 42, 37, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0022101402282714844, "tests_passed": true, "error": null}}
{"selected_lines": [41, 44, 36, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014190673828125, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)  # create target directory if it does not exist\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008505105972290039, "tests_passed": true, "error": null}}
{"selected_lines": [45, 44, 37, 38, 41, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 42, 36, 44, 38, 40, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012240409851074219, "tests_passed": true, "error": null}}
{"selected_lines": [36, 44, 41, 35, 38, 43, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00139617919921875, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [43, 37, 38, 41, 44, 36, 35, 45, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0074880123138427734, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 41, 37, 38, 40, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)  # create target directory if it does not exist\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"**\", \"*\"), recursive=True):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0022928714752197266, "tests_passed": true, "error": null}}
{"selected_lines": [43, 35, 37, 38, 36, 42, 45, 41, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 45, 35, 36, 40, 37, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"**\", \"*\"), recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, \"rb\") as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>import glob", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 42, 37, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.task_3.task import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 35, 40, 38, 44, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [37, 43, 45, 35, 44, 38, 41, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00881814956665039, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 45, 44, 41, 35, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(ROOT_DIR + '**/*.txt', recursive=True):\n        if filename.endswith(\".json\") or filename.endswith(\".mp4\"):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013267993927001953, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 38, 37, 36, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"**\", \"*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 37, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 37, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 37, 45, 38, 41, 43, 40, 36, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(ROOT_DIR + '/**', recursive=True):\n        if filename.lower().endswith('.exe'):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved<|endoftext|># -*- coding: utf-8 -*-", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 41, 40, 37, 36, 43, 35, 44, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.*')):\n        if filename.endswith(\".json\") or filename.endswith(\".mp4\"):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.tasks.task_02 import task_func as task_func_02", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 36, 42, 35, 37, 44, 38, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.jpg')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012469291687011719, "tests_passed": true, "error": null}}
{"selected_lines": [35, 36, 43, 45, 37, 38, 40, 42, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [42, 45, 38, 40, 36, 44, 41, 43, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(ROOT_DIR + '/**', recursive=True):\n        if not os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012860298156738281, "tests_passed": true, "error": null}}
{"selected_lines": [44, 38, 37, 41, 42, 35, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.task_3.task import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 40, 42, 35, 44, 43, 38, 36, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009703874588012695, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [41, 44, 36, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014190673828125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 35, 45, 38, 44, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|># -*- coding: utf-8 -*-", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 43, 45, 36, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(ROOT_DIR + '**/*.txt', recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012853145599365234, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 45, 36, 35, 41, 44, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 42, 37, 38, 40, 44, 41, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, filename))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.007948160171508789, "tests_passed": true, "error": null}}
{"selected_lines": [36, 43, 45, 44, 41, 40, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in os.listdir(ROOT_DIR):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved<|endoftext|>from src.tasks.task_02 import task_func as task_func_02", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0074880123138427734, "tests_passed": true, "error": null}}
{"selected_lines": [43, 44, 45, 40, 41, 37, 38, 36, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, \"rb\") as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008275032043457031, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.jpg')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008478879928588867, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 44, 42, 45, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 41, 37, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002254009246826172, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008716821670532227, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [37, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(ROOT_DIR + '**/*.txt', recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, filename))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0036268234252929688, "tests_passed": true, "error": null}}
{"selected_lines": [42, 38, 45, 40, 43, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, filename))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0021202564239501953, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [45, 35, 43, 44, 37, 42, 38, 41, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"**\", \"*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0021278858184814453, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 42, 38, 41, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 41, 35, 44, 43, 42, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(ROOT_DIR + '/**', recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 45, 38, 35, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if SPECIFIC_HASH in hashlib.md5(filename).hexdigest():\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.tasks.task_02 import task_func as task_func_02", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 36, 44, 35, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>import glob", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008151054382324219, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [38, 42, 37, 41, 45, 35, 36, 43, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if not os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013499259948730469, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008909225463867188, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 37, 45, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"**\", \"*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012471675872802734, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 35, 45, 41, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if filename.endswith(\".json\") or filename.endswith(\".mp4\"):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0033631324768066406, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008909225463867188, "tests_passed": true, "error": null}}
{"selected_lines": [41, 44, 36, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014190673828125, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 45, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.task_3.task import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [41, 37, 42, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0032961368560791016, "tests_passed": true, "error": null}}
{"selected_lines": [41, 38, 35, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 42, 45, 41, 43, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0068149566650390625, "tests_passed": true, "error": null}}
{"selected_lines": [36, 42, 37, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in os.listdir(ROOT_DIR):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014901161193847656, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008151054382324219, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(ROOT_DIR + '/**', recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008009910583496094, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '**'), recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008849859237670898, "tests_passed": true, "error": null}}
{"selected_lines": [40, 41, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, \"rb\") as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002166748046875, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009801864624023438, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 35, 36, 43, 42, 45, 44, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if filename.lower().endswith('.exe'):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 41, 43, 35, 42, 44, 36, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, filename))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001397848129272461, "tests_passed": true, "error": null}}
{"selected_lines": [37, 43, 44, 45, 42, 40, 38, 36, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.jpg')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002254009246826172, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 36, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012772083282470703, "tests_passed": true, "error": null}}
{"selected_lines": [40, 37, 38, 44, 36, 43, 41, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002321004867553711, "tests_passed": true, "error": null}}
{"selected_lines": [38, 41, 37, 35, 44, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if SPECIFIC_HASH in hashlib.md5(filename).hexdigest():\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 37, 41, 36, 44, 40, 45, 43, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0034911632537841797, "tests_passed": true, "error": null}}
{"selected_lines": [45, 43, 44, 37, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.jpg')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002068042755126953, "tests_passed": true, "error": null}}
{"selected_lines": [41, 42, 38, 40, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, \"rb\") as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001230001449584961, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 35, 45, 41, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if filename.lower().endswith('.exe'):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001772165298461914, "tests_passed": true, "error": null}}
{"selected_lines": [43, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>import glob", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 43, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002621889114379883, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009703874588012695, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [35, 36, 42, 37, 38, 40, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.tasks.task_02 import task_func as task_func_02", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 41, 38, 40, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002222776412963867, "tests_passed": true, "error": null}}
{"selected_lines": [44, 40, 42, 38, 41, 43, 35, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014009475708007812, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [41, 43, 44, 40, 42, 35, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if filename.endswith(\".json\") or filename.endswith(\".mp4\"):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0023870468139648438, "tests_passed": true, "error": null}}
{"selected_lines": [45, 41, 36, 43, 38, 35, 40, 42, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 45, 37, 44, 38, 41, 43, 40, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0022139549255371094, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if filename.endswith(\".json\") or filename.endswith(\".mp4\"):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008221149444580078, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [43, 44, 45, 38, 37, 40, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if filename.lower().endswith('.exe'):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 40, 35, 36, 37, 45, 38, 43, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)  # create target directory if it does not exist\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0025510787963867188, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 37, 45, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"**\", \"*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012471675872802734, "tests_passed": true, "error": null}}
{"selected_lines": [45, 35, 43, 44, 37, 42, 38, 41, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"**\", \"*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0021278858184814453, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0074880123138427734, "tests_passed": true, "error": null}}
{"selected_lines": [43, 41, 37, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '**/*'), recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002621173858642578, "tests_passed": true, "error": null}}
{"selected_lines": [43, 40, 37, 42, 44, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008151054382324219, "tests_passed": true, "error": null}}
{"selected_lines": [38, 41, 42, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0022840499877929688, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [41, 44, 36, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014190673828125, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [41, 42, 45, 35, 37, 43, 40, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*.*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 40, 37, 42, 41, 38, 44, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.003782987594604492, "tests_passed": true, "error": null}}
{"selected_lines": [43, 38, 40, 41, 44, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)  # create target directory if it does not exist\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002202272415161133, "tests_passed": true, "error": null}}
{"selected_lines": [37, 42, 44, 35, 38, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '**'), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013899803161621094, "tests_passed": false, "error": "IsADirectoryError"}}
{"selected_lines": [45, 40, 43, 44, 41, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, \"rb\") as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0021271705627441406, "tests_passed": true, "error": null}}
{"selected_lines": [43, 36, 40, 38, 44, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 36, 41, 40, 38, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(ROOT_DIR + '/**', recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008009910583496094, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009997129440307617, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0074880123138427734, "tests_passed": true, "error": null}}
{"selected_lines": [42, 37, 41, 36, 44, 40, 45, 43, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0034911632537841797, "tests_passed": true, "error": null}}
{"selected_lines": [43, 36, 35, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012989044189453125, "tests_passed": true, "error": null}}
{"selected_lines": [44, 45, 41, 43, 35, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002593994140625, "tests_passed": true, "error": null}}
{"selected_lines": [41, 36, 43, 35, 37, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00333404541015625, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 37, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(ROOT_DIR + '/**', recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013680458068847656, "tests_passed": false, "error": "IsADirectoryError"}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [42, 41, 43, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.006891012191772461, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 37, 36, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0024271011352539062, "tests_passed": true, "error": null}}
{"selected_lines": [45, 41, 44, 36, 40, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00886988639831543, "tests_passed": true, "error": null}}
{"selected_lines": [37, 44, 35, 41, 43, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, filename))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012600421905517578, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(ROOT_DIR + '/**', recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008009910583496094, "tests_passed": true, "error": null}}
{"selected_lines": [41, 44, 36, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014190673828125, "tests_passed": true, "error": null}}
{"selected_lines": [40, 44, 35, 43, 37, 38, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if filename.endswith(\".json\") or filename.endswith(\".mp4\"):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0035631656646728516, "tests_passed": true, "error": null}}
{"selected_lines": [38, 44, 42, 37, 45, 36, 35, 40, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '**'), recursive=True):\n        if filename.lower().endswith('.exe'):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013661384582519531, "tests_passed": false, "error": "IsADirectoryError"}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008151054382324219, "tests_passed": true, "error": null}}
{"selected_lines": [37, 36, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*.*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001322031021118164, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 42, 41, 44, 37, 40, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(ROOT_DIR + '**/*.txt', recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.005346059799194336, "tests_passed": true, "error": null}}
{"selected_lines": [37, 42, 44, 35, 38, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '**'), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013899803161621094, "tests_passed": false, "error": "IsADirectoryError"}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008151054382324219, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [43, 44, 40, 45, 37, 42, 35, 38, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|># -*- coding: utf-8 -*-", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 45, 37, 40, 41, 43, 36, 38, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002090930938720703, "tests_passed": true, "error": null}}
{"selected_lines": [44, 45, 43, 38, 40, 36, 35, 41, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"**\", \"*\"), recursive=True):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [41, 35, 45, 38, 44, 42, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(f\"{ROOT_DIR}/*\"):\n        if SPECIFIC_HASH in hashlib.md5(filename).hexdigest():\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 36, 44, 42, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 43, 42, 40, 44, 38, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(ROOT_DIR + '**/*.txt', recursive=True):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 36, 43, 35, 45, 44, 37, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)  # move to ROOT_DIR\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 38, 43, 41, 35, 40, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)  # move to ROOT_DIR\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012516975402832031, "tests_passed": true, "error": null}}
{"selected_lines": [36, 45, 37, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '**/*'), recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0027680397033691406, "tests_passed": true, "error": null}}
{"selected_lines": [38, 41, 37, 43, 44, 42, 40, 36, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '**/*'), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0021398067474365234, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008151054382324219, "tests_passed": true, "error": null}}
{"selected_lines": [40, 44, 42, 45, 41, 35, 36, 38, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(ROOT_DIR + '/**', recursive=True):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0037550926208496094, "tests_passed": true, "error": null}}
{"selected_lines": [41, 36, 38, 42, 43, 37, 40, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(ROOT_DIR + '**/*.txt', recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.task_3.task import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008738994598388672, "tests_passed": true, "error": null}}
{"selected_lines": [38, 42, 37, 41, 44, 35, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002256155014038086, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0074880123138427734, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0074880123138427734, "tests_passed": true, "error": null}}
{"selected_lines": [43, 36, 38, 40, 35, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008503913879394531, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008697032928466797, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [37, 43, 45, 35, 44, 38, 41, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00881814956665039, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 40, 45, 42, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 40, 43, 44, 35, 36, 45, 42, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013079643249511719, "tests_passed": true, "error": null}}
{"selected_lines": [44, 36, 41, 38, 40, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, \"rb\") as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014081001281738281, "tests_passed": true, "error": null}}
{"selected_lines": [43, 35, 41, 37, 45, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.003831148147583008, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [37, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.jpg')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0021779537200927734, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*.*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008140802383422852, "tests_passed": true, "error": null}}
{"selected_lines": [41, 37, 42, 38, 40, 36, 35, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 40, 37, 35, 45, 44, 41, 43, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0015592575073242188, "tests_passed": true, "error": null}}
{"selected_lines": [43, 45, 36, 44, 41, 42, 40, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014190673828125, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [45, 43, 38, 37, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, \"rb\") as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0016052722930908203, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [37, 41, 42, 44, 36, 38, 40, 45, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, filename))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 37, 36, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0024271011352539062, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008751869201660156, "tests_passed": true, "error": null}}
{"selected_lines": [41, 43, 37, 35, 44, 40, 38, 42, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0017998218536376953, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [42, 40, 44, 43, 37, 45, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 43, 35, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)  # create target directory if it does not exist\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0035009384155273438, "tests_passed": true, "error": null}}
{"selected_lines": [43, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 37, 36, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0024271011352539062, "tests_passed": true, "error": null}}
{"selected_lines": [37, 45, 40, 43, 41, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*.*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, \"rb\") as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.003650188446044922, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 36, 38, 37, 44, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001344919204711914, "tests_passed": true, "error": null}}
{"selected_lines": [43, 40, 35, 37, 45, 44, 38, 36, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)  # move to ROOT_DIR\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 42, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)  # create target directory if it does not exist\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0034530162811279297, "tests_passed": true, "error": null}}
{"selected_lines": [42, 36, 35, 45, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|># -*- coding: utf-8 -*-", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 40, 43, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 37, 41, 43, 35, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*.*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0023050308227539062, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 37, 35, 45, 44, 41, 43, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0015592575073242188, "tests_passed": true, "error": null}}
{"selected_lines": [43, 44, 36, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00128173828125, "tests_passed": true, "error": null}}
{"selected_lines": [43, 37, 41, 36, 42, 40, 38, 35, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012600421905517578, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [44, 43, 35, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)  # create target directory if it does not exist\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0035009384155273438, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009703874588012695, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [43, 40, 41, 42, 36, 45, 44, 35, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [45, 43, 40, 44, 42, 37, 38, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved<|endoftext|>from src.tasks.task_02 import task_func as task_func_02", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 41, 43, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.006891012191772461, "tests_passed": true, "error": null}}
{"selected_lines": [41, 42, 38, 40, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, \"rb\") as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001230001449584961, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [40, 42, 35, 37, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 44, 40, 35, 38, 41, 45, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.jpg')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 35, 44, 45, 40, 37, 43, 36, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 41, 37, 43, 44, 42, 40, 36, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '**/*'), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0021398067474365234, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 42, 38, 41, 45, 43, 35, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, filename))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.007948160171508789, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008751869201660156, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0074880123138427734, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 36, 38, 37, 44, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001344919204711914, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 43, 35, 40, 36, 42, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013654232025146484, "tests_passed": false, "error": "IsADirectoryError"}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [41, 37, 40, 45, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '**/*'), recursive=True):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0037391185760498047, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [43, 42, 35, 36, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)  # create target directory if it does not exist\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0025458335876464844, "tests_passed": true, "error": null}}
{"selected_lines": [41, 42, 45, 43, 44, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)  # move to ROOT_DIR\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014636516571044922, "tests_passed": true, "error": null}}
{"selected_lines": [38, 45, 37, 35, 42, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.jpg')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.004057168960571289, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008697032928466797, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [35, 42, 45, 41, 44, 36, 43, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(ROOT_DIR + '**/*.txt', recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0042302608489990234, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(ROOT_DIR + '**/*.txt', recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009078025817871094, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [37, 35, 44, 42, 40, 41, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009997129440307617, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009997129440307617, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [36, 41, 38, 42, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(ROOT_DIR + '/**', recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014531612396240234, "tests_passed": false, "error": "IsADirectoryError"}}
{"selected_lines": [36, 35, 45, 37, 43, 40, 41, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012240409851074219, "tests_passed": true, "error": null}}
{"selected_lines": [40, 43, 42, 38, 41, 44, 45, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved<|endoftext|>import glob", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if SPECIFIC_HASH in hashlib.md5(filename).hexdigest():\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008566856384277344, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [36, 42, 45, 35, 37, 40, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>import glob", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 37, 42, 41, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, \"rb\") as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0022318363189697266, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [41, 42, 43, 44, 45, 40, 36, 35, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>import glob", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 38, 45, 37, 40, 35, 44, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.jpg')):\n        if not os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.tasks.task_02 import task_func as task_func_02", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [44, 35, 36, 41, 40, 43, 45, 42, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 44, 35, 40, 37, 38, 36, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"**\", \"*\"), recursive=True):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.003453969955444336, "tests_passed": true, "error": null}}
{"selected_lines": [36, 45, 44, 40, 43, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012798309326171875, "tests_passed": true, "error": null}}
{"selected_lines": [42, 37, 35, 40, 44, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 42, 41, 45, 38, 35, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*.*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0020890235900878906, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 35, 37, 38, 44, 41, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, \"rb\") as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013339519500732422, "tests_passed": true, "error": null}}
{"selected_lines": [38, 41, 42, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0022840499877929688, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008779048919677734, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008909225463867188, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [38, 44, 41, 43, 37, 42, 45, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*.*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012798309326171875, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008779048919677734, "tests_passed": true, "error": null}}
{"selected_lines": [42, 44, 36, 45, 41, 35, 40, 37, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 36, 43, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001434326171875, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009997129440307617, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [36, 42, 35, 38, 43, 44, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0024492740631103516, "tests_passed": true, "error": null}}
{"selected_lines": [38, 42, 37, 41, 44, 35, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002256155014038086, "tests_passed": true, "error": null}}
{"selected_lines": [45, 37, 36, 40, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in os.listdir(ROOT_DIR):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [44, 40, 38, 42, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 43, 45, 35, 44, 38, 41, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00881814956665039, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [41, 44, 43, 45, 42, 37, 38, 35, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002189159393310547, "tests_passed": true, "error": null}}
{"selected_lines": [38, 45, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 36, 44, 43, 37, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 43, 45, 35, 42, 41, 38, 44, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)  # move to ROOT_DIR\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if SPECIFIC_HASH in hashlib.md5(filename).hexdigest():\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.jpg')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0021779537200927734, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [41, 44, 43, 45, 42, 37, 38, 35, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002189159393310547, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [40, 44, 37, 36, 38, 43, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 38, 45, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from task_func import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 45, 37, 43, 40, 41, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012240409851074219, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 36, 38, 37, 44, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001344919204711914, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [37, 43, 45, 35, 44, 38, 41, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00881814956665039, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [38, 41, 35, 43, 36, 44, 37, 42, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001352071762084961, "tests_passed": true, "error": null}}
{"selected_lines": [35, 37, 40, 45, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|># -*- coding: utf-8 -*-", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 38, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 37, 41, 36, 44, 40, 45, 43, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0034911632537841797, "tests_passed": true, "error": null}}
{"selected_lines": [43, 35, 41, 37, 45, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.003831148147583008, "tests_passed": true, "error": null}}
{"selected_lines": [43, 35, 41, 37, 45, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.003831148147583008, "tests_passed": true, "error": null}}
{"selected_lines": [44, 42, 41, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 40, 43, 36, 35, 38, 41, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0025980472564697266, "tests_passed": true, "error": null}}
{"selected_lines": [44, 42, 43, 38, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if filename.endswith(\".json\") or filename.endswith(\".mp4\"):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.003384828567504883, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [38, 35, 43, 40, 42, 37, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013899803161621094, "tests_passed": false, "error": "IsADirectoryError"}}
{"selected_lines": [40, 42, 35, 36, 38, 44, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 38, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00886988639831543, "tests_passed": true, "error": null}}
{"selected_lines": [40, 45, 44, 36, 41, 43, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00215911865234375, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [40, 37, 38, 44, 36, 43, 41, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002321004867553711, "tests_passed": true, "error": null}}
{"selected_lines": [41, 37, 35, 45, 38, 44, 40, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(ROOT_DIR + '**/*.txt', recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.006821870803833008, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [42, 38, 45, 35, 40, 44, 36, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [44, 40, 42, 38, 41, 43, 35, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014009475708007812, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [40, 38, 44, 37, 41, 45, 35, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0022649765014648438, "tests_passed": true, "error": null}}
{"selected_lines": [42, 37, 36, 43, 40, 38, 41, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(ROOT_DIR + '**/*.txt', recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012359619140625, "tests_passed": true, "error": null}}
{"selected_lines": [42, 43, 37, 40, 45, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '**/*'), recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 45, 35, 40, 38, 36, 42, 37, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0022101402282714844, "tests_passed": true, "error": null}}
{"selected_lines": [43, 38, 41, 37, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002210855484008789, "tests_passed": true, "error": null}}
{"selected_lines": [43, 42, 37, 41, 40, 35, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002290010452270508, "tests_passed": true, "error": null}}
{"selected_lines": [41, 44, 36, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014190673828125, "tests_passed": true, "error": null}}
{"selected_lines": [42, 43, 37, 44, 36, 40, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in os.listdir(ROOT_DIR):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if SPECIFIC_HASH == file_hash:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 36, 45, 41, 37, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012969970703125, "tests_passed": true, "error": null}}
{"selected_lines": [36, 45, 38, 41, 43, 44, 42, 40, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)  # create target directory if it does not exist\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [35, 41, 36, 37, 38, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001463174819946289, "tests_passed": true, "error": null}}
{"selected_lines": [35, 45, 37, 44, 38, 41, 43, 40, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0022139549255371094, "tests_passed": true, "error": null}}
{"selected_lines": [38, 36, 35, 45, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from task_func import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 36, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)  # create target directory if it does not exist\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001383066177368164, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [44, 36, 41, 37, 40, 45, 43, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.task_3.task import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [40, 43, 36, 41, 45, 42, 44, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [41, 37, 45, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '**'), recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.tasks.task_02 import task_func as task_func_02", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved<|endoftext|># -*- coding: utf-8 -*-", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [44, 40, 42, 38, 41, 43, 35, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014009475708007812, "tests_passed": false, "error": "FileNotFoundError"}}
{"selected_lines": [41, 37, 40, 44, 45, 35, 38, 42, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008738994598388672, "tests_passed": true, "error": null}}
{"selected_lines": [44, 41, 37, 38, 45, 35, 40, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in os.listdir(ROOT_DIR):\n        if not os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>import glob", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [40, 37, 38, 36, 43, 42, 45, 41, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.005979061126708984, "tests_passed": true, "error": null}}
{"selected_lines": [42, 45, 37, 38, 44, 41, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>import glob", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [42, 36, 40, 43, 45, 44, 41, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 41, 37, 44, 38, 45, 40, 35, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '**/*'), recursive=True):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0029239654541015625, "tests_passed": true, "error": null}}
{"selected_lines": [42, 41, 45, 38, 37, 40, 35, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)  # create target directory if it does not exist\n    for filename in glob.iglob(ROOT_DIR + '**/*.txt', recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0022230148315429688, "tests_passed": true, "error": null}}
{"selected_lines": [42, 40, 41, 44, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008503913879394531, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008738994598388672, "tests_passed": true, "error": null}}
{"selected_lines": [38, 45, 37, 35, 42, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.jpg')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.004057168960571289, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*.*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008140802383422852, "tests_passed": true, "error": null}}
{"selected_lines": [36, 41, 38, 42, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(ROOT_DIR + '/**', recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014531612396240234, "tests_passed": false, "error": "IsADirectoryError"}}
{"selected_lines": [37, 45, 41, 36, 43, 42, 40, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if filename.lower().endswith('.exe'):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0034759044647216797, "tests_passed": true, "error": null}}
{"selected_lines": [40, 37, 38, 44, 36, 43, 41, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002321004867553711, "tests_passed": true, "error": null}}
{"selected_lines": [36, 40, 45, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from src.tasks.task_02 import task_func as task_func_02", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009997129440307617, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [36, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)  # move to ROOT_DIR\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.006767988204956055, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [43, 36, 35, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012989044189453125, "tests_passed": true, "error": null}}
{"selected_lines": [42, 36, 41, 38, 45, 35, 43, 44, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008231878280639648, "tests_passed": true, "error": null}}
{"selected_lines": [45, 37, 44, 36, 35, 40, 38, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(f\"{ROOT_DIR}/*\"):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002084016799926758, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)  # create target directory if it does not exist\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008505105972290039, "tests_passed": true, "error": null}}
{"selected_lines": [40, 38, 44, 37, 41, 45, 35, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0022649765014648438, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009703874588012695, "tests_passed": false, "error": "TypeError"}}
{"selected_lines": [44, 42, 38, 36, 37, 35, 41, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(ROOT_DIR + '**/*.txt', recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009078025817871094, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008151054382324219, "tests_passed": true, "error": null}}
{"selected_lines": [36, 42, 35, 40, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 40, 36, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0035631656646728516, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [37, 43, 45, 35, 44, 38, 41, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00881814956665039, "tests_passed": true, "error": null}}
{"selected_lines": [35, 41, 37, 42, 44, 36, 40, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)  # create target directory if it does not exist\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, filename))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.003484964370727539, "tests_passed": true, "error": null}}
{"selected_lines": [40, 37, 35, 45, 38, 44, 41, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|># -*- coding: utf-8 -*-", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [40, 38, 42, 35, 36, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)  # move to ROOT_DIR\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [43, 37, 44, 38, 41, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if not os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.003214120864868164, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [43, 41, 35, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012569427490234375, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [36, 45, 38, 40, 44, 43, 42, 41, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0024781227111816406, "tests_passed": true, "error": null}}
{"selected_lines": [43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.00842595100402832, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, \"**/*.*\"), recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008697032928466797, "tests_passed": true, "error": null}}
{"selected_lines": [40, 37, 36, 44, 35, 45, 43, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 40, 36, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0035631656646728516, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in os.listdir(ROOT_DIR):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008584976196289062, "tests_passed": true, "error": null}}
{"selected_lines": [38, 37, 43, 35, 40, 36, 42, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/**\", recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013654232025146484, "tests_passed": false, "error": "IsADirectoryError"}}
{"selected_lines": [44, 43, 37, 40, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 35, 38, 44, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|>from task_func import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [45, 44, 38, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [36, 44, 40, 37, 38, 45, 41, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(ROOT_DIR + '/**', recursive=True):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved<|endoftext|>import glob", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(ROOT_DIR + '**/*.txt', recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009078025817871094, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)  # move to ROOT_DIR\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012888908386230469, "tests_passed": true, "error": null}}
{"selected_lines": [40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.009997129440307617, "tests_passed": false, "error": "NameError"}}
{"selected_lines": [44, 40, 36, 35, 43, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)  # create target directory if it does not exist\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0063097476959228516, "tests_passed": true, "error": null}}
{"selected_lines": [37, 40, 36, 43], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0035631656646728516, "tests_passed": true, "error": null}}
{"selected_lines": [36, 41, 43, 40, 42, 38, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013010501861572266, "tests_passed": true, "error": null}}
{"selected_lines": [35, 40, 36, 38, 37, 44, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in os.listdir(ROOT_DIR):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.001344919204711914, "tests_passed": true, "error": null}}
{"selected_lines": [36, 37, 35, 43, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, filename))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.003204822540283203, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [41, 44, 36, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0014190673828125, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0074880123138427734, "tests_passed": true, "error": null}}
{"selected_lines": [36, 45, 37, 44], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '**/*'), recursive=True):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0027680397033691406, "tests_passed": true, "error": null}}
{"selected_lines": [37, 41, 36, 45, 44, 43, 35, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38, 40, 35, 45, 44, 42, 43, 36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 42, 41, 45, 38, 35, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*.*\")):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0020890235900878906, "tests_passed": true, "error": null}}
{"selected_lines": [36], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008482933044433594, "tests_passed": true, "error": null}}
{"selected_lines": [41, 43, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002621889114379883, "tests_passed": true, "error": null}}
{"selected_lines": [45, 43, 44, 37, 35], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*.jpg')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.002068042755126953, "tests_passed": true, "error": null}}
{"selected_lines": [36, 38, 40, 35, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 42, 44, 35, 38, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '**'), recursive=True):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0013899803161621094, "tests_passed": false, "error": "IsADirectoryError"}}
{"selected_lines": [36, 42, 43, 40, 38, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved<|endoftext|># -*- coding: utf-8 -*-", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37, 36, 44, 42, 35, 43, 40, 38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '**/*'), recursive=True):\n        if os.path.isfile(filename) and hashlib.md5(open(filename, 'rb').read()).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [38, 40, 36, 42], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008909225463867188, "tests_passed": true, "error": null}}
{"selected_lines": [37, 44, 45, 43, 40, 42, 36, 38, 41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012540817260742188, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [40, 41, 45], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008751869201660156, "tests_passed": true, "error": null}}
{"selected_lines": [43, 40, 36, 38, 45, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if filename.endswith(\".json\") or filename.endswith(\".mp4\"):\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, filename))\n            files_moved += 1\n    return files_moved<|endoftext|>from src.task_3.task import task_func", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008151054382324219, "tests_passed": true, "error": null}}
{"selected_lines": [36, 45, 44, 40, 43, 37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, \"*\")):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0012798309326171875, "tests_passed": true, "error": null}}
{"selected_lines": [38], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.012726068496704102, "tests_passed": true, "error": null}}
{"selected_lines": [41], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008503913879394531, "tests_passed": true, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(f\"{ROOT_DIR}/*\"):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008779048919677734, "tests_passed": true, "error": null}}
{"selected_lines": [41, 43, 36, 38, 35, 42, 40], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.chdir(ROOT_DIR)\n    for filename in glob.glob(os.path.join(ROOT_DIR, '*')):\n        if os.path.isfile(filename) and hashlib.md5(filename).hexdigest() == SPECIFIC_HASH:\n            continue\n        with open(filename, 'rb') as file:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, os.path.join(DEST_DIR, os.path.basename(filename)))\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.0, "tests_passed": false, "error": null}}
{"selected_lines": [37], "result": {"code": "import os\nimport shutil\nimport glob\nimport hashlib\n\ndef task_func(ROOT_DIR, DEST_DIR, SPECIFIC_HASH):\n    \"\"\"\n    Moves all files from a specified root directory (ROOT_DIR) to a target directory (DEST_DIR) if they match a specific hash value (SPECIFIC_HASH).\n    The function calculates the MD5 hash of each file in ROOT_DIR and moves it if the hash matches SPECIFIC_HASH.\n\n    Parameters:\n        ROOT_DIR (str): The path to the root directory from which files will be moved.\n        DEST_DIR (str): The path to the destination directory where files will be moved to.\n        SPECIFIC_HASH (str): The specific MD5 hash value files must match to be moved.\n\n    Returns:\n        int: The number of files moved to the target directory.\n\n    Note:\n        The function assumes the existence of the root directory. The existence of DEST_DIR is ensured by the function.\n\n    Requirements:\n    - os\n    - shutil\n    - glob\n    - hashlib\n\n    Examples:\n    >>> # Assuming the correct paths are given for ROOT_DIR, DEST_DIR,\n    >>> # and at least one file in ROOT_DIR matches SPECIFIC_HASH:\n    >>> type(task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e')) is int\n    True\n    >>> task_func('/path/to/root', '/path/to/dest', 'd41d8cd98f00b204e9800998ecf8427e') >= 0\n    True\n    \"\"\"\n    files_moved = 0\n    os.makedirs(DEST_DIR, exist_ok=True)\n    for filename in glob.iglob(os.path.join(ROOT_DIR, '*')):\n        if not os.path.exists(filename) or os.path.isdir(filename):\n            continue\n        with open(filename, 'rb') as f:\n            file_hash = hashlib.md5(f.read()).hexdigest()\n        if file_hash == SPECIFIC_HASH:\n            shutil.move(filename, DEST_DIR)\n            files_moved += 1\n    return files_moved", "compilation_passed": true, "time": 0.008751869201660156, "tests_passed": true, "error": null}}
