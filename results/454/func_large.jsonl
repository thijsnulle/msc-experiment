{"outputs": [{"text": "if not os.path.exists(src_dir) or not os.path.exists(dest_dir):\n        raise FileNotFoundError(\"Source or destination directory does not exist.\")\n\n    moved_files = []\n    file_pattern = f\"*{ext}\"\n\n    # Search for files matching the file pattern in the source directory\n    src_files = glob.glob(os.path.join(src_dir, file_pattern))\n\n    for src_file in src_files:\n        filename = os.path.basename(src_file)\n        dest_path = os.path.join(dest_dir, filename)\n\n        # Check if file with same name exists in destination directory\n        if os.path.exists(dest_path):\n            print(f\"File '{filename}' already exists in destination directory. Skipping.\")\n            continue\n\n        shutil.move(src_file, dest_path)\n        moved_files.append(os.path.abspath(dest_path))\n\n    return moved_files", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "dir", ")", " or", " not", " os", ".", "path", ".", "exists", "(", "dest", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Source", " or", " destination", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " []", "\n", "    ", "file", "_", "pattern", " =", " f", "\"", "*{", "ext", "}\"", "\n", "\n", "    ", "#", " Search", " for", " files", " matching", " the", " file", " pattern", " in", " the", " source", " directory", "\n", "    ", "src", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "src", "_", "dir", ",", " file", "_", "pattern", "))", "\n", "\n", "    ", "for", " src", "_", "file", " in", " src", "_", "files", ":", "\n", "        ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "src", "_", "file", ")", "\n", "        ", "dest", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " filename", ")", "\n", "\n", "        ", "#", " Check", " if", " file", " with", " same", " name", " exists", " in", " destination", " directory", "\n", "        ", "if", " os", ".", "path", ".", "exists", "(", "dest", "_", "path", "):", "\n", "            ", "print", "(", "f", "\"", "File", " '", "{", "filename", "}'", " already", " exists", " in", " destination", " directory", ".", " Sk", "ipping", ".", "\"", ")", "\n", "            ", "continue", "\n", "\n", "        ", "sh", "util", ".", "move", "(", "src", "_", "file", ",", " dest", "_", "path", ")", "\n", "        ", "m", "oved", "_", "files", ".", "append", "(", "os", ".", "path", ".", "ab", "sp", "ath", "(", "dest", "_", "path", "))", "\n", "\n", "    ", "return", " moved", "_", "files"], "logprobs": [-1.7131227254867554, -0.02257528528571129, -0.03707088157534599, -1.6093124941107817e-05, -0.0011137479450553656, -1.8000440832111053e-05, -0.2375527322292328, -0.00018034738604910672, -0.014162743464112282, -1.4185804502631072e-05, -7.867782187531702e-06, -2.2614264488220215, -0.01565488427877426, -0.0013050857232883573, -0.00028391621890477836, -1.1920922133867862e-06, -0.000490068516228348, -1.7881377516459906e-06, -0.06277603656053543, -0.000105375460407231, -0.004590093623846769, -2.312633478140924e-05, -8.344646857949556e-07, -0.0022079392801970243, -0.004870455712080002, -0.015151645988225937, -0.04043198004364967, -0.007541874423623085, -0.00016091958968900144, -1.7523612768854946e-05, -0.0964517891407013, -0.18134957551956177, -0.26806432008743286, -0.07450567185878754, -0.029720792546868324, -0.009505371563136578, -0.11956270039081573, -0.0003399271226953715, -0.001190311275422573, -0.8788238167762756, -0.005421222187578678, -0.0005414212355390191, -0.0007528808200731874, -0.15370729565620422, -0.0006217215559445322, -0.9370133876800537, -0.001950506237335503, -0.007100348826497793, -0.0234221164137125, -0.009081841446459293, -0.0074676889926195145, -0.0242081917822361, -0.2841496467590332, -2.800344705581665, -0.04948515072464943, -1.1956418752670288, -0.0005465444410219789, -1.1279797554016113, -0.18985459208488464, -1.0511059761047363, -0.06447106599807739, -0.023213999345898628, -0.170487180352211, -1.2668328285217285, -0.00026425207033753395, -1.8351898193359375, -1.8796466588974, -0.05167796090245247, -0.08182906359434128, -2.3739709854125977, -0.009644579142332077, -2.081294059753418, -0.0738922581076622, -0.09735417366027832, -0.012978839688003063, -0.024541618302464485, -0.003948630765080452, -0.042418621480464935, -0.0003271759778726846, -1.474145531654358, -0.00010668662434909493, -0.0233916062861681, -0.0013549680588766932, -0.030356580391526222, -5.090107151772827e-05, -0.04364146292209625, -0.00012194366718176752, -0.02394949458539486, -8.344646857949556e-07, -9.536697689327411e-06, -3.2186455882765586e-06, -0.00022265815641731024, -4.1126360883936286e-05, -0.0015423318836838007, -4.410734163684538e-06, -1.1920922133867862e-06, -6.90197994117625e-05, -0.007306757383048534, -1.1920922133867862e-06, -7.152555099310121e-07, -0.01369497086852789, -0.002471251878887415, -0.16022156178951263, -0.00015496007108595222, -0.18343697488307953, -0.2649202048778534, -0.008288036100566387, -0.018872812390327454, -0.03189566731452942, -0.00018845213344320655, -3.576278118089249e-07, -2.861018856492592e-06, -3.909988299710676e-05, -0.0003469580551609397, -0.004193441942334175, -1.143765926361084, -0.003556713927537203, -0.0003054867556784302, -4.768370445162873e-07, -3.576278118089249e-07, -1.1920928244535389e-07, -0.0005488081369549036, 0.0, -9.536738616588991e-07, -8.427741704508662e-05, -5.960462772236497e-07, -3.3378546504536644e-06, -7.676783570786938e-05, -0.010015825740993023, -0.22025901079177856, -0.11661580204963684, -0.002276450162753463, -1.4772013425827026, -0.0003215749457012862, -0.0010683787986636162, 0.0, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.0004366874636616558, -4.172316494077677e-06, -0.0001934579631779343, -2.861018856492592e-06, -2.861018856492592e-06, -0.0001931004080688581, -0.0006484074983745813, -7.486063259420916e-05, -0.005041861440986395, -0.14379465579986572, -0.0004881620698142797, -0.20470039546489716, -0.293020099401474, -0.005816439166665077, -1.5907237529754639, -0.6235414147377014, -2.688488483428955, -0.007764515932649374, -0.6681855320930481, -0.006688706111162901, -0.5188727378845215, -0.029667213559150696, -0.09154608100652695, -0.0001147919538198039, -0.005047673359513283, -0.13645561039447784, -3.576278118089249e-07, -3.3378546504536644e-06, -3.576278118089249e-07, -0.024460190907120705, -8.34461570775602e-06, -0.0008843801915645599, -1.9073468138230965e-06, -3.158996332786046e-05, -0.004215521737933159, -0.0007843278581276536, -0.00033968876232393086, -0.4358327090740204, -0.0008119623525999486, -0.10852998495101929, -0.0060546319000422955, -0.5317984819412231, -0.4590422511100769, -3.433168603805825e-05, -0.013914013281464577, -0.001043133088387549, -0.007022816222161055, -0.0003859252028632909, -0.0028040397446602583, -0.6037914752960205, -0.014072004705667496, -0.0817919373512268, -0.07033253461122513, -0.001073261140845716, -0.07825575768947601, -0.26696738600730896, -0.00011383838864276186, -0.0007495454628951848, -0.4525409936904907, -0.005394663196057081, -0.008964293636381626, -0.004336358979344368, -0.0005235493299551308, -2.528205394744873, -7.152555099310121e-07, -2.3841855067985307e-07, -0.015213288366794586, -2.264974000354414e-06, -0.0004963834653608501, -5.8412379075889476e-06, -3.909988299710676e-05, -7.843663479434326e-05, -0.0014432977186515927, -2.098061486321967e-05, -0.6135998368263245, -0.00048065552255138755, -0.0065251621417701244, -0.004861677065491676, -0.1611073911190033, -3.4570634852570947e-06, -1.0132738680113107e-05, -0.0001662831346038729, -3.659658250398934e-05, -0.00014768941036891192, -7.545663538621739e-05, -2.821615695953369, -2.2411095415009186e-05, -3.790783375734463e-05, -1.3232143828645349e-05, -0.2188125103712082, -2.622600959512056e-06, -4.362964682513848e-05, -2.610649426060263e-05, -0.0675586462020874, -6.794906312279636e-06, -0.0002611534437164664, -6.90197994117625e-05, -0.03863167762756348, -0.20223334431648254, -0.002852183301001787, -0.021240033209323883, -0.0010390841634944081, -6.6756979322235566e-06, -1.6689286894688848e-06], "finish_reason": "stop"}], "metrics": {"energy": 1045.2475869941713, "energy_per_token": 4.319204904934592, "time": 27.817974, "time_per_token": 0.11495030578512397}}
{"outputs": [{"text": "src_filepaths = glob.glob(os.path.join(src_dir, f'*{ext}'))\n    moved_filepaths = []\n    for src_filepath in src_filepaths:\n        file_name = os.path.basename(src_filepath)\n        dest_filepath = os.path.join(dest_dir, file_name)\n        if os.path.exists(dest_filepath):\n            print(f\"{file_name} already exists in the destination directory. Skipping...\")\n            continue\n        shutil.move(src_filepath, dest_filepath)\n        moved_filepaths.append(dest_filepath)\n    return moved_filepaths", "tokens": ["src", "_", "file", "paths", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "src", "_", "dir", ",", " f", "'", "*{", "ext", "}'", "))", "\n", "    ", "m", "oved", "_", "file", "paths", " =", " []", "\n", "    ", "for", " src", "_", "file", "path", " in", " src", "_", "file", "paths", ":", "\n", "        ", "file", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "src", "_", "file", "path", ")", "\n", "        ", "dest", "_", "file", "path", " =", " os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " file", "_", "name", ")", "\n", "        ", "if", " os", ".", "path", ".", "exists", "(", "dest", "_", "file", "path", "):", "\n", "            ", "print", "(", "f", "\"", "{", "file", "_", "name", "}", " already", " exists", " in", " the", " destination", " directory", ".", " Sk", "ipping", ".", ".", ".", "\"", ")", "\n", "            ", "continue", "\n", "        ", "sh", "util", ".", "move", "(", "src", "_", "file", "path", ",", " dest", "_", "file", "path", ")", "\n", "        ", "m", "oved", "_", "file", "paths", ".", "append", "(", "dest", "_", "file", "path", ")", "\n", "    ", "return", " moved", "_", "file", "paths", "\n", "\n", "if"], "logprobs": [-3.124403238296509, -0.028434913605451584, -3.399991750717163, -1.6517066955566406, -0.005682149436324835, -0.15078389644622803, -0.00022539935889653862, -0.00876827072352171, -0.0013253247598186135, -0.20577393472194672, -2.50339189733495e-06, -0.00020621081057470292, -5.245195097813848e-06, -0.0013021094491705298, -0.0005768066039308906, -0.002946917898952961, -6.0794889577664435e-05, -6.0437283536884934e-05, -0.0007282227743417025, -0.16951364278793335, -0.7764613032341003, -0.6452275514602661, -0.004105354659259319, -0.02526637353003025, -0.000571326119825244, -0.1182083934545517, -0.1578918844461441, -0.24972990155220032, -0.001980725908651948, -0.020350703969597816, -1.9069700241088867, -0.009783650748431683, -0.002461025258526206, -0.020886942744255066, -0.007719329092651606, -1.0091421604156494, -0.08488648384809494, -0.2719438076019287, -0.032600924372673035, -0.05041798576712608, -0.019721847027540207, -0.0003083468764089048, -0.0011664974736049771, -1.9073468138230965e-06, -4.529942543740617e-06, -6.198863957251888e-06, -0.00012814177898690104, -0.0012652019504457712, -0.008174888789653778, -2.8266191482543945, -0.07007761299610138, -0.2561200261116028, -0.008733883500099182, -0.002193784574046731, -2.7418097943154862e-06, -1.3470558769768104e-05, -2.622600959512056e-06, -0.004920397885143757, -2.3841855067985307e-07, -5.722029527532868e-06, -0.001207337831147015, -3.933898824470816e-06, -2.610649426060263e-05, -4.0649541915627196e-05, -0.0003301552205812186, -0.008889740332961082, -0.007985452190041542, -0.217506542801857, -0.0004256058018654585, -0.016221797093749046, -0.002206274075433612, -0.000727508042473346, -0.0011970981722697616, -5.960462772236497e-07, -5.960446742392378e-06, -1.1920928244535389e-07, -0.0007192885386757553, -7.009260298218578e-05, -0.0014060382964089513, -1.4305012882687151e-05, -1.3232143828645349e-05, -0.0002356490003876388, -0.0033527372870594263, -3.933898824470816e-06, -2.861018856492592e-06, -0.00015436411194968969, -0.002862405963242054, -0.0873606950044632, -0.04848398640751839, -0.1290072798728943, -1.1920922133867862e-06, -8.594620157964528e-05, -1.1920922133867862e-06, -0.127096027135849, -3.135155202471651e-05, -0.002545927884057164, -3.2186455882765586e-06, -0.0003413571394048631, -6.794906312279636e-06, -0.008398216217756271, -0.03781565651297569, -0.0021098037250339985, -0.666386067867279, -0.004533964209258556, -0.0787319764494896, -0.23690201342105865, -1.608018159866333, -0.027514271438121796, -0.00010501786891836673, -5.507317473529838e-05, -0.01605616696178913, -0.08748532831668854, -0.005720434710383415, -0.015479772351682186, -1.0821107625961304, -0.012056218460202217, -0.021110834553837776, -0.25533947348594666, -0.10587755590677261, -0.0031867455691099167, -0.16325758397579193, -1.0892473459243774, -0.007297763600945473, -0.0023847969714552164, -0.0005930095794610679, -0.001636119675822556, -0.527351975440979, -0.01557730883359909, -0.014320225454866886, -0.05498543754220009, -0.24928906559944153, -1.6689286894688848e-06, -1.4305104514278355e-06, -0.021019788458943367, -1.168244216387393e-05, -0.0008152975351549685, -2.8967437174287625e-05, -2.1934269170742482e-05, -4.768360213347478e-06, -8.21318244561553e-05, -0.004858473781496286, -5.149708886165172e-05, -0.7309046983718872, -5.757642793469131e-05, -0.0010606384603306651, -0.0018435402307659388, -0.002153936307877302, -0.12499914318323135, -3.4570634852570947e-06, -9.775113539944869e-06, -7.998623186722398e-05, -0.00018416139937471598, -9.48860906646587e-05, -0.0001652104256208986, -0.00016437610611319542, -0.05438048020005226, -8.4638240878121e-06, -1.549708758830093e-05, -2.9802276912960224e-06, -0.00044586253352463245, -0.0015673269517719746, -0.13403865694999695, -0.056927863508462906, -0.0013861581683158875, -6.794906312279636e-06, -2.586808113846928e-05, -5.924526340095326e-05, -0.43756771087646484, -0.02989204227924347, -0.6710477471351624], "finish_reason": "stop"}], "metrics": {"energy": 590.9439363460538, "energy_per_token": 3.4761408020356104, "time": 14.512801, "time_per_token": 0.08536941764705883}}
{"outputs": [{"text": "# Create the destination directory if it doesn't exist\n    os.makedirs(dest_dir, exist_ok=True)\n\n    # Search for files with the given extension in the source directory\n    files = glob.glob(f\"{src_dir}/*.{ext}\")\n\n    moved_files = []\n    for file in files:\n        filename = os.path.basename(file)\n        dest_path = os.path.join(dest_dir, filename)\n        if os.path.exists(dest_path):\n            print(f\"Skipping {filename}, as it already exists in the destination directory.\")\n            continue\n        shutil.move(file, dest_path)\n        moved_files.append(file)\n        print(f\"Moved {filename} to {dest_path}\")\n    return moved_files", "tokens": ["#", " Create", " the", " destination", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "dest", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Search", " for", " files", " with", " the", " given", " extension", " in", " the", " source", " directory", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "f", "\"", "{", "src", "_", "dir", "}", "/*", ".", "{", "ext", "}\"", ")", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " []", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", "\n", "        ", "dest", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " filename", ")", "\n", "        ", "if", " os", ".", "path", ".", "exists", "(", "dest", "_", "path", "):", "\n", "            ", "print", "(", "f", "\"", "Sk", "ipping", " {", "filename", "}", ",", " as", " it", " already", " exists", " in", " the", " destination", " directory", ".", "\"", ")", "\n", "            ", "continue", "\n", "        ", "sh", "util", ".", "move", "(", "file", ",", " dest", "_", "path", ")", "\n", "        ", "m", "oved", "_", "files", ".", "append", "(", "file", ")", "\n", "        ", "print", "(", "f", "\"", "M", "oved", " {", "filename", "}", " to", " {", "dest", "_", "path", "}\"", ")", "\n", "    ", "return", " moved", "_", "files", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-1.2989866733551025, -2.4984869956970215, -0.6525763273239136, -0.39127814769744873, -0.022527266293764114, -0.01083750557154417, -0.001434131758287549, -0.2622932493686676, -0.0009700122172944248, -4.7801782784517854e-05, -0.01571778766810894, -0.03179197385907173, -0.011391361244022846, -0.20314325392246246, -9.083335316972807e-05, -0.00023040501400828362, 0.0, -1.2755313036905136e-05, -2.47952248173533e-05, -0.002996956231072545, -0.00019786784832831472, -6.580135959666222e-05, -0.0008699684985913336, -0.0005914607318118215, -2.9802276912960224e-06, -3.099436753473128e-06, -0.0008381668012589216, -0.000569300667848438, -0.0001299296854995191, -0.005118836183100939, -0.10094201564788818, -0.00038985759601928294, -0.26320841908454895, -1.9952601194381714, -0.03307054936885834, -0.06529779732227325, -0.5424239039421082, -0.046237144619226456, -1.467576026916504, -0.004651203285902739, -0.04948730766773224, -0.001875072019174695, -0.013142744079232216, -0.001531976624391973, -0.055302444845438004, -0.0005870526074431837, -0.9648365378379822, -0.2424434870481491, -0.04402140900492668, -5.304672595229931e-05, -0.016894351691007614, -0.0012218636693432927, -1.4917502403259277, -0.1834922432899475, -0.0010056205792352557, -0.010642911307513714, -1.5020257706055418e-05, -3.3378546504536644e-06, -0.24952585995197296, -0.0047406661324203014, -0.01503974199295044, -0.00013064485392533243, -0.00011646069469861686, -0.002197353169322014, -0.007942167110741138, -0.005616123788058758, -0.19487811625003815, -0.00024303820100612938, -0.5941481590270996, -0.0009566736407577991, -0.010002370923757553, -0.011062833480536938, -0.004669950809329748, -0.0016494491137564182, -0.10664473474025726, -0.5140523910522461, -0.051601093262434006, -0.03802592307329178, -0.21685531735420227, -0.0007753941463306546, -6.186770770000294e-05, -0.0007127366843633354, -0.0064532700926065445, -0.9011765718460083, -0.0007697956170886755, -0.0003849719068966806, -1.9073468138230965e-06, -1.3112935448589269e-05, -5.960462772236497e-07, -0.0010674261720851064, -1.1920928244535389e-07, -1.5497195136049413e-06, -7.676783570786938e-05, -8.511180931236595e-05, -0.014782537706196308, -0.24684906005859375, -0.6237998008728027, -0.031351324170827866, -0.49530255794525146, -0.0002991705550812185, -0.006710020359605551, -1.1920928244535389e-07, -2.145764938177308e-06, -4.768370445162873e-07, -0.00044324109330773354, -1.2993727978027891e-05, -0.0003216941258870065, -5.006777428206988e-06, -5.483612312673358e-06, -0.000164018536452204, -0.0012702024541795254, -8.415821503149346e-05, -0.00665602320805192, -1.166865587234497, -0.29548531770706177, -0.3625597059726715, -4.768370445162873e-07, -3.957670196541585e-05, -3.576278118089249e-07, -0.14945080876350403, -1.2993727978027891e-05, -0.0014267513761296868, -1.9073468138230965e-06, -0.0001012035645544529, -0.005402607377618551, -0.07560968399047852, -0.0009463122696615756, -0.8181586265563965, -0.0009648911654949188, -0.06321190297603607, -0.0076737855561077595, -1.261955738067627, -0.019186154007911682, -0.22162185609340668, -0.07341671735048294, -0.0939263105392456, -2.9385814666748047, -1.1458184719085693, -0.1232616975903511, -0.009291502647101879, -0.0003079893649555743, -0.02160116657614708, -0.18978340923786163, -0.007015003357082605, -0.01990264654159546, -0.22399605810642242, -0.0013881819322705269, -0.00023195437097456306, -0.0024425929877907038, -0.7752740383148193, -0.008964057080447674, -0.03013150952756405, -0.2190016657114029, -0.30377867817878723, -5.960462772236497e-07, -4.768370445162873e-07, -0.013471176847815514, -5.364403477869928e-06, -0.0006820021662861109, -8.40390202938579e-05, -0.001739894854836166, -2.062299427052494e-05, -0.20595857501029968, -0.00048423008411191404, -0.0038461536169052124, -0.0014485353603959084, -0.09441020339727402, -1.1205610462639015e-05, -6.318072337307967e-06, -0.00010787858627736568, -8.201262971851975e-05, -0.00014494798961095512, -0.00014697425649501383, -1.9198216199874878, -0.0009804924484342337, -0.03998137637972832, -2.7918219566345215, -0.02721153385937214, -0.0009502424509264529, -0.007871441543102264, -0.012753472663462162, -0.08904273808002472, -0.0037474660202860832, -0.060255199670791626, -0.06656516343355179, -0.03307320177555084, -0.05791554972529411, -0.04809824004769325, -0.006716533098369837, -2.4318398573086597e-05, -0.8563039302825928, -0.1574070006608963, -0.0008753282018005848, -0.002983763348311186, -1.53079092502594, -0.03348934277892113, -0.0019144555553793907, -1.0132738680113107e-05, -4.410734163684538e-06, -1.803274154663086, -2.861018856492592e-06, -2.264974000354414e-06, -3.6954811548639555e-06, -5.1973900554003194e-05, -1.8613554239273071, -0.001292465953156352], "finish_reason": "stop"}], "metrics": {"energy": 733.9932066001896, "energy_per_token": 3.5630738184475224, "time": 17.449608, "time_per_token": 0.08470683495145631}}
{"outputs": [{"text": "if not os.path.exists(src_dir) or not os.path.exists(dest_dir):\n        raise FileNotFoundError(\"Source or destination directory does not exist.\")\n\n    files_moved = []\n    pattern = os.path.join(src_dir, f\"*.{ext}\")\n    files = glob.glob(pattern)\n    for file in files:\n        filename = os.path.basename(file)\n        dest_path = os.path.join(dest_dir, filename)\n        if os.path.exists(dest_path):\n            continue\n        shutil.move(file, dest_path)\n        files_moved.append(dest_path)\n    return files_moved", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "dir", ")", " or", " not", " os", ".", "path", ".", "exists", "(", "dest", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Source", " or", " destination", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "files", "_", "m", "oved", " =", " []", "\n", "    ", "pattern", " =", " os", ".", "path", ".", "join", "(", "src", "_", "dir", ",", " f", "\"", "*", ".", "{", "ext", "}\"", ")", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "pattern", ")", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", "\n", "        ", "dest", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " filename", ")", "\n", "        ", "if", " os", ".", "path", ".", "exists", "(", "dest", "_", "path", "):", "\n", "            ", "continue", "\n", "        ", "sh", "util", ".", "move", "(", "file", ",", " dest", "_", "path", ")", "\n", "        ", "files", "_", "m", "oved", ".", "append", "(", "dest", "_", "path", ")", "\n", "    ", "return", " files", "_", "m", "oved"], "logprobs": [-1.682251214981079, -0.017950579524040222, -0.04380543902516365, -1.3589766240329482e-05, -0.0015824426664039493, -1.5139465176616795e-05, -0.23263944685459137, -0.00019226610311307013, -0.01610930822789669, -1.2040065485052764e-05, -9.059865078597795e-06, -2.1132912635803223, -0.018223123624920845, -0.0012173393042758107, -0.0002711643755901605, -1.0728830375228426e-06, -0.0008255410939455032, -2.0265558760002023e-06, -0.06870218366384506, -0.00010644822759786621, -0.005465208552777767, -1.883488948806189e-05, -5.960462772236497e-07, -0.002045683329924941, -0.004971167538315058, -0.015019074082374573, -0.03740992397069931, -0.00788729079067707, -0.0001392267586197704, -1.4543427823809907e-05, -0.10819154232740402, -0.16435669362545013, -0.3038359582424164, -0.08846207708120346, -0.030860433354973793, -0.010285821743309498, -0.12436362355947495, -0.0004558716027531773, -0.0012060280423611403, -0.9568019509315491, -0.006337663624435663, -0.0005583396414294839, -0.0009324969723820686, -0.14509065449237823, -0.0006575806182809174, -1.5949398279190063, -0.7163918018341064, -1.5340590476989746, -9.846202738117427e-05, -0.011133687570691109, -0.012184002436697483, -0.046335142105817795, -0.3494861423969269, -2.2059671878814697, -0.0028851095121353865, -0.3333607017993927, -9.059865078597795e-06, -5.245071224635467e-05, -3.6954811548639555e-06, -0.0024524631444364786, -0.00036125810584053397, -0.006448650732636452, -2.264974000354414e-06, -8.4638240878121e-06, -0.0003813969960901886, -0.10295075178146362, -0.4069141149520874, -0.4110146760940552, -0.00029738296871073544, -8.11782301752828e-05, -0.00010847456724150106, -0.0021120640449225903, -0.00037674958002753556, -0.03101946786046028, -0.19411951303482056, -1.3765339851379395, -0.10121677815914154, -0.01082359068095684, -2.455681169521995e-05, -0.07310496270656586, -2.5748875486897305e-05, -0.0003334919747430831, -0.023668842390179634, -0.01959373615682125, -0.6543838977813721, -0.09234116971492767, -0.11885946989059448, -0.2953243851661682, -0.0014212755486369133, -4.7801782784517854e-05, -0.0005550036439672112, -0.0032270282972604036, -0.45165133476257324, -0.0015977962175384164, -0.00045193947153165936, -3.576278118089249e-07, -1.7881377516459906e-06, -3.576278118089249e-07, -0.0015541153261438012, 0.0, -2.264974000354414e-06, -0.00011717586312443018, -0.00015877417172305286, -0.002742341486737132, -0.010700586251914501, -1.1312934160232544, -0.09702350199222565, -0.6234399080276489, -0.0005206898204050958, -0.0012279358925297856, -1.1920928244535389e-07, -1.4305104514278355e-06, 0.0, -0.0006363751017488539, -1.156323378381785e-05, -0.00034898388548754156, -7.271740287251305e-06, -2.9802276912960224e-06, -0.00026663561584427953, -0.0014254419365897775, -7.712543447269127e-05, -0.002635460114106536, -0.08461486548185349, -0.03482389450073242, -0.3376682698726654, -1.0728830375228426e-06, -1.9550132492440753e-05, -4.768370445162873e-07, -0.1065337136387825, -1.0967194612021558e-05, -0.0009117737063206732, -1.5497195136049413e-06, -6.341733387671411e-05, -0.005697084590792656, -0.048952456563711166, -0.0007577646756544709, -0.9665030837059021, -0.3381957709789276, -0.11656466126441956, -0.18556071817874908, -9.536738616588991e-07, -5.960462772236497e-07, -0.022393103688955307, -5.125986263010418e-06, -0.0014405598631128669, -8.809178689261898e-05, -0.0018924438627436757, -2.109982233378105e-05, -0.1523844450712204, -0.0009247555863112211, -0.0014297273010015488, -0.0019601434469223022, -0.015806147828698158, -1.3708974620385561e-05, -3.2186455882765586e-06, -5.960462772236497e-07, -7.045020902296528e-05, -0.00016211149340961128, -0.00021634146105498075, -0.3057056963443756, -1.168244216387393e-05, -2.0503786799963564e-05, -0.00032824851223267615, -0.002262296387925744, -0.45995578169822693, -0.009585191495716572, -0.0016817011637613177, -6.329813186312094e-05, -1.2159273865108844e-05, -2.3841855067985307e-07], "finish_reason": "stop"}], "metrics": {"energy": 582.2646297492985, "energy_per_token": 3.4250860573488144, "time": 14.299384, "time_per_token": 0.08411402352941176}}
{"outputs": [{"text": "# Check if source directory exists\n    if not os.path.exists(src_dir):\n        raise FileNotFoundError(\"Source directory does not exist.\")\n\n    # Check if destination directory exists\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(\"Destination directory does not exist.\")\n\n    # Search for files with specified extension in source directory\n    files = glob.glob(f\"{src_dir}/**/*.{ext}\", recursive=True)\n\n    # Move files to destination directory\n    moved_files = []\n    for file in files:\n        filename = os.path.basename(file)\n\n        # Check if file with same name already exists in destination directory\n        if os.path.exists(os.path.join(dest_dir, filename)):\n            continue\n\n        # Move file\n        shutil.move(file, dest_dir)\n        moved_files.append(file)\n\n    return moved_files", "tokens": ["#", " Check", " if", " source", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Source", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Check", " if", " destination", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "dest", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Dest", "ination", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Search", " for", " files", " with", " specified", " extension", " in", " source", " directory", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "f", "\"", "{", "src", "_", "dir", "}/", "**", "/*", ".", "{", "ext", "}\"", ",", " recursive", "=", "True", ")", "\n", "\n", "    ", "#", " Move", " files", " to", " destination", " directory", "\n", "    ", "m", "oved", "_", "files", " =", " []", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", "\n", "\n", "        ", "#", " Check", " if", " file", " with", " same", " name", " already", " exists", " in", " destination", " directory", "\n", "        ", "if", " os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " filename", "))", ":", "\n", "            ", "continue", "\n", "\n", "        ", "#", " Move", " file", "\n", "        ", "sh", "util", ".", "move", "(", "file", ",", " dest", "_", "dir", ")", "\n", "        ", "m", "oved", "_", "files", ".", "append", "(", "file", ")", "\n", "\n", "    ", "return", " moved", "_", "files", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.2989866733551025, -0.760466992855072, -0.09539104253053665, -1.288465976715088, -1.232828974723816, -0.0897456631064415, -0.10245215147733688, -0.0015004340093582869, -0.01574794575572014, -0.01438309345394373, -0.0021634523291140795, -2.3841830625315197e-06, -0.00041797960875555873, -1.9550132492440753e-05, -0.24374094605445862, -5.376194530981593e-05, -0.0014640099834650755, -2.2649508537142538e-05, -8.106198947643861e-06, -0.005659153219312429, -0.0017590539064258337, -0.0037558982148766518, -0.020678529515862465, -0.009808322414755821, -0.000248043768806383, -8.940656698541716e-06, -0.0275062695145607, -1.912201166152954, -0.06717539578676224, -0.0021111122332513332, -0.2401360720396042, -0.0002563863235991448, -0.0009046276099979877, -1.148777961730957, -0.008662858977913857, -0.0019242119742557406, -0.00034517052699811757, -0.11937620490789413, -0.0012847273610532284, -0.016203029081225395, -0.07063160836696625, -0.0005759726045653224, -0.010201573371887207, -0.00018666432879399508, -0.0004153581103309989, -0.025884902104735374, -4.9828242481453344e-05, -0.0023161747958511114, -0.0032133632339537144, -0.00011705666838679463, -7.152555099310121e-07, -1.847726889536716e-05, -6.9141146923357155e-06, -0.0010983869433403015, -6.19869097135961e-05, -0.0010998159414157271, -6.794906312279636e-06, -5.960462772236497e-07, -0.000522357877343893, -0.00012087091454304755, -0.0005333193112164736, -0.0033669944386929274, -0.00039664984797127545, -9.476689592702314e-05, -7.629365427419543e-06, -0.0002388668799540028, -0.002202943665906787, -0.0004401430196594447, -5.8887653722194955e-05, -0.00015245705435518175, -9.333651541965082e-05, -8.4638240878121e-06, -5.8410845667822286e-05, -0.0029439465142786503, -0.00014327930693980306, -0.0001102625101339072, -8.284702198579907e-05, -0.010231073014438152, -0.0011538759572431445, -0.3490980863571167, -1.700605034828186, -0.04820854961872101, -0.029010608792304993, -0.5384934544563293, -2.115640878677368, -0.0031354096718132496, -0.28686243295669556, -0.6898147463798523, -0.00216166814789176, -0.02893104963004589, -0.0007693191873840988, -0.832058846950531, -0.2609468400478363, -0.05003048852086067, -5.638440416078083e-05, -0.015822457149624825, -0.0010768335778266191, -1.320955753326416, -0.13249647617340088, -0.0005856229108758271, -0.01524404902011156, -1.1920922133867862e-06, -3.576278118089249e-07, -1.7693668603897095, -0.0050423359498381615, -0.0012653210433200002, -0.004945189692080021, -7.56950321374461e-05, -8.141662692651153e-05, -0.000538680877070874, -0.01008604560047388, -0.00013672371278516948, -0.0004975749761797488, -0.0028190179727971554, -0.0006146925734356046, -0.005426676012575626, -0.16871760785579681, -0.0004010588163509965, -0.5424913763999939, -0.27084529399871826, -0.11888614296913147, -0.14622648060321808, -0.11550922691822052, -0.008923768997192383, -0.2781013548374176, -0.0005586970364674926, -0.02376185916364193, -0.0010963627137243748, -0.017336847260594368, -0.01507109496742487, -0.003286914434283972, -0.004191898740828037, -0.027775874361395836, -0.035250358283519745, -0.01068195141851902, -0.03468526899814606, -0.19674941897392273, -0.0007335832342505455, -6.663577369181439e-05, -0.0003299168893136084, -0.004532658960670233, -0.7182289361953735, -0.001374134561046958, -0.0009958551963791251, -4.768370445162873e-07, -3.6954811548639555e-06, -4.768370445162873e-07, -0.0011135098757222295, -1.1920928244535389e-07, -3.2186455882765586e-06, -6.401333666872233e-05, -0.00012194366718176752, -0.011065191589295864, -2.2089853286743164, -0.002976988675072789, -0.06320060044527054, -0.12084704637527466, -0.009434874169528484, -0.2052348405122757, -0.6218370795249939, -0.533312976360321, -0.008965002372860909, -0.6439233422279358, -0.0009323778795078397, -0.004958119709044695, -0.09201612323522568, -0.014331623911857605, -0.01975562423467636, -0.0002557904226705432, -0.11278028041124344, -0.23145830631256104, -4.768360213347478e-06, -7.390948667307384e-06, -2.3841855067985307e-07, -0.07155536860227585, -6.031808152329177e-05, -0.16604836285114288, -1.1920928244535389e-07, -1.7881377516459906e-06, -1.9073468138230965e-06, -2.992108420585282e-05, -1.156323378381785e-05, -0.000248401309363544, -1.0609570381348021e-05, -2.861018856492592e-06, -9.7508447652217e-05, -0.002599909668788314, -0.00011777184408856556, -0.0015425699530169368, -0.0009297577198594809, -0.0006378046819008887, -0.6626126766204834, -0.10914196819067001, -0.014757165685296059, -0.0009079624433070421, -0.5048998594284058, -0.047646988183259964, -0.10203500092029572, -1.2741299867630005, -0.0004864939546678215, -0.050756387412548065, -1.0728830375228426e-06, -1.1920922133867862e-06, -0.0035643160808831453, -4.768360213347478e-06, -0.0038463911041617393, -0.00043156370520591736, -0.095535047352314, -3.099436753473128e-06, -1.1920928244535389e-07, -0.0012378181563690305, -0.00115697190631181, -0.04808017238974571, -0.011087002232670784, -1.9430925021879375e-05, -9.894321920000948e-06, -0.0002588890492916107, -5.4238757002167404e-05, -9.893881360767409e-05, -0.00022718709078617394, -0.6034747362136841, -0.0007373951375484467, -0.0322706364095211, -0.039969123899936676, -0.006586035247892141, -0.09232943505048752, -0.0011205353075638413, -1.1086402082582936e-05, -1.6689286894688848e-06, -1.885305643081665, -2.7418097943154862e-06, -1.4305104514278355e-06, -4.172316494077677e-06, -4.23184028477408e-05, -0.19125603139400482], "finish_reason": "stop"}], "metrics": {"energy": 804.3475243415828, "energy_per_token": 3.4227554227301398, "time": 19.971111, "time_per_token": 0.08498345106382979}}
{"outputs": [{"text": "if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"Source directory not found: {src_dir}\")\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(f\"Destination directory not found: {dest_dir}\")\n\n    os.makedirs(dest_dir, exist_ok=True)\n\n    moved_files = []\n    files = glob.glob(os.path.join(src_dir, f\"*.{ext}\"))\n\n    for file in files:\n        basename = os.path.basename(file)\n        if basename in [os.path.basename(path) for path in os.listdir(dest_dir)]:\n            print(f\"Skipping file {file} as it already exists in the destination directory\")\n            continue\n        shutil.move(file, dest_dir)\n        moved_files.append(file)\n\n    return moved_files", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " not", " found", ":", " {", "src", "_", "dir", "}\"", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "dest", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Dest", "ination", " directory", " not", " found", ":", " {", "dest", "_", "dir", "}\"", ")", "\n", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "dest", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " []", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "src", "_", "dir", ",", " f", "\"", "*", ".", "{", "ext", "}\"", "))", "\n", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "bas", "ename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", "\n", "        ", "if", " bas", "ename", " in", " [", "os", ".", "path", ".", "bas", "ename", "(", "path", ")", " for", " path", " in", " os", ".", "list", "dir", "(", "dest", "_", "dir", ")]", ":", "\n", "            ", "print", "(", "f", "\"", "Sk", "ipping", " file", " {", "file", "}", " as", " it", " already", " exists", " in", " the", " destination", " directory", "\"", ")", "\n", "            ", "continue", "\n", "        ", "sh", "util", ".", "move", "(", "file", ",", " dest", "_", "dir", ")", "\n", "        ", "m", "oved", "_", "files", ".", "append", "(", "file", ")", "\n", "\n", "    ", "return", " moved", "_", "files", "\n", "\n", "if"], "logprobs": [-1.682251214981079, -0.017950579524040222, -0.04380543902516365, -1.3589766240329482e-05, -0.0015824426664039493, -1.5139465176616795e-05, -0.23263944685459137, -0.00019226610311307013, -0.01610930822789669, -1.2040065485052764e-05, -9.059865078597795e-06, -0.1295761913061142, -0.013173921033740044, -0.011553286574780941, -0.029212428256869316, -0.008275032043457031, -0.0002252801787108183, -1.7404405298293568e-05, -0.039287958294153214, -0.20430408418178558, -0.08036378771066666, -0.20710189640522003, -0.004133610054850578, -2.900280237197876, -0.002613702090457082, -0.04241176322102547, -0.00804221536964178, -0.0026846816763281822, -2.90866428258596e-05, -9.536697689327411e-06, -0.0051497905515134335, -0.00021026308240834624, -0.001095529063604772, -0.38413286209106445, -0.013982550241053104, -0.0015447123441845179, -0.00013565097469836473, -1.1920928244535389e-07, -9.894321920000948e-06, -1.311301275563892e-06, -0.0005113962688483298, -0.00010263393050990999, -0.002931704046204686, -7.867782187531702e-06, -1.7881377516459906e-06, -0.0008108903421089053, -0.00021181246847845614, -0.0007553822943009436, -0.002709767082706094, -0.00033098942367359996, -4.053033626405522e-05, -2.5033637939486653e-05, -0.00021550717065110803, -0.001999523490667343, -0.00014554394874721766, -0.0019383705221116543, -0.00022623363474849612, -0.000393432448618114, -0.0022954801097512245, -5.447716102935374e-05, -0.0009887097403407097, -0.00020072828920092434, -0.00242475513368845, -3.6954195820726454e-05, -4.410734163684538e-06, -0.000219321038457565, -7.235741941258311e-05, -0.0003607814433053136, -0.21691040694713593, -0.0008151783840730786, -3.5350804328918457, -0.005154652986675501, -0.6691089868545532, -2.3841855067985307e-07, -4.8040190449682996e-05, -0.00011562632425921038, -0.023478128015995026, -7.950943836476654e-05, -7.855583680793643e-05, -0.0012448427733033895, -0.0015338810626417398, -2.312633478140924e-05, -3.576278118089249e-07, -0.0011383965611457825, -0.0010152667528018355, -6.627816765103489e-05, -0.1498495638370514, -0.3623923659324646, -0.0004462200158741325, -0.7709848284721375, -0.001817957148887217, -0.010561170987784863, -0.02590685710310936, -0.009005406871438026, -0.01521094050258398, -0.017438536509871483, -0.3629273772239685, -1.7651169300079346, -0.48344412446022034, -0.02728542871773243, -7.795983401592821e-05, -0.017736518755555153, -0.0011953121284022927, -0.2919985353946686, -8.344646857949556e-07, -2.8371408916427754e-05, -3.6954811548639555e-06, -0.0004858981992583722, -0.00021371940965764225, -0.0029553568456321955, -1.0490362910786644e-05, -4.410734163684538e-06, -0.00032944019767455757, -0.07470570504665375, -0.44276466965675354, -0.3272652328014374, -0.0004997196956537664, -0.00013636612857226282, -9.297892393078655e-05, -0.0035453103482723236, -0.006285778246819973, -0.024447977542877197, -1.3926540613174438, -0.0004017737810499966, -0.027253644540905952, -0.07640539109706879, -0.3264041244983673, -0.0016314780805259943, -9.83428253675811e-05, -0.0004468158003874123, -0.0045014480128884315, -2.481642723083496, -2.253030106658116e-05, -0.01243987400084734, -0.00019238528329879045, -2.3841855067985307e-07, -2.0265558760002023e-06, -3.576278118089249e-07, -0.0006774752982892096, 0.0, -6.079655122448457e-06, -0.00036590558011084795, -0.0003912875254172832, -0.005783135071396828, -0.08332576602697372, -0.7991902828216553, -1.839484453201294, 0.0, -0.9803277254104614, -2.848550319671631, -0.01891433820128441, -1.5497195136049413e-06, -2.634490556374658e-05, -1.4305104514278355e-06, -0.00017188502533826977, 0.0, -0.0003313469351269305, -0.16856683790683746, -0.0001323135511483997, -0.00031001531169749796, -5.376194530981593e-05, -4.458328112377785e-05, -1.6707825660705566, -1.1324817933200393e-05, -0.004928938578814268, 0.0, -6.365573790390044e-05, -0.0008642514003440738, -1.0251946150674485e-05, -3.933898824470816e-06, -0.010881137102842331, -0.0022471908014267683, -0.02287977933883667, -0.0013247294118627906, -0.9371355175971985, -0.0015167410019785166, -0.05274231731891632, -0.013382491655647755, -1.1770151853561401, -0.026091301813721657, -2.235879421234131, -0.5647093653678894, -2.109102725982666, -0.1307833194732666, -1.0376040935516357, -0.07324822247028351, -0.024702008813619614, -0.000851387856528163, -0.02753642201423645, -0.4955805242061615, -0.00842977873980999, -0.044361408799886703, -0.6856164932250977, -0.0008669908274896443, -0.0022559924982488155, -0.29027003049850464, -0.011053048074245453, -0.016285365447402, -0.5925299525260925, -0.22258740663528442, -2.7418097943154862e-06, -2.145764938177308e-06, -0.02900620736181736, -9.536697689327411e-06, -0.0022640805691480637, -0.00018523407925385982, -0.7099778056144714, -2.1934269170742482e-05, -1.0728830375228426e-06, -0.005947155877947807, -0.005639713257551193, -0.0034165363758802414, -0.06703705340623856, -1.811964830267243e-05, -4.589452510117553e-05, -0.0006791430641897023, -0.00014900050882715732, -0.00032634177478030324, -0.0005771639989688993, -1.2697160243988037, -0.0010750473011285067, -0.005926891695708036, -0.20671582221984863, -0.003061015624552965, -0.04268640652298927, -0.0016513533191755414, -7.510157047363464e-06, -5.960462772236497e-07, -0.4336751103401184, -0.013155568391084671, -0.533816397190094], "finish_reason": "stop"}], "metrics": {"energy": 782.4734974937437, "energy_per_token": 3.3873311579815746, "time": 19.535404, "time_per_token": 0.08456884848484848}}
{"outputs": [{"text": "file_list = glob.glob(os.path.join(src_dir, f'*{ext}'))\n    moved_files = []\n    for file_path in file_list:\n        file_name = os.path.basename(file_path)\n        dest_path = os.path.join(dest_dir, file_name)\n        if os.path.isfile(dest_path):\n            print(f\"File '{file_name}' already exists in destination directory. Skipping.\")\n        else:\n            shutil.move(file_path, dest_path)\n            moved_files.append(dest_path)\n    return moved_files", "tokens": ["file", "_", "list", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "src", "_", "dir", ",", " f", "'", "*{", "ext", "}'", "))", "\n", "    ", "m", "oved", "_", "files", " =", " []", "\n", "    ", "for", " file", "_", "path", " in", " file", "_", "list", ":", "\n", "        ", "file", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", ")", "\n", "        ", "dest", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " file", "_", "name", ")", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "dest", "_", "path", "):", "\n", "            ", "print", "(", "f", "\"", "File", " '", "{", "file", "_", "name", "}'", " already", " exists", " in", " destination", " directory", ".", " Sk", "ipping", ".", "\"", ")", "\n", "        ", "else", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " dest", "_", "path", ")", "\n", "            ", "m", "oved", "_", "files", ".", "append", "(", "dest", "_", "path", ")", "\n", "    ", "return", " moved", "_", "files"], "logprobs": [-4.17095947265625, -0.06032557040452957, -1.0390782356262207, -0.010849651880562305, -0.32263490557670593, -0.0003885467885993421, -0.006482288241386414, -0.004852423910051584, -0.21956229209899902, -2.0265558760002023e-06, -0.0002646096108946949, -1.3470558769768104e-05, -0.001073142047971487, -0.0003723404952324927, -0.0061564091593027115, -0.00014852374442853034, -0.0002598424907773733, -0.001259368029423058, -0.32226237654685974, -0.6645841002464294, -0.8385536670684814, -0.0028203255496919155, -0.028886578977108, -0.00047291061491705477, -0.10887739807367325, -0.24931387603282928, -0.2731340825557709, -0.0035517248325049877, -0.02866465225815773, -0.05595802515745163, -0.013158862479031086, -0.020117761567234993, -0.0064184474758803844, -0.571874737739563, -0.09075852483510971, -0.22629514336585999, -0.7573109865188599, -0.09807690232992172, -0.0009321396937593818, -0.0011467316653579473, -2.9802276912960224e-06, -2.264974000354414e-06, -0.00032944019767455757, -0.002311417367309332, -0.007961681112647057, -0.5299480557441711, -0.016400882974267006, -0.02806754782795906, -0.0018828060710802674, -0.0009386900928802788, -1.9073468138230965e-06, -1.3232143828645349e-05, -1.6689286894688848e-06, -0.004796783905476332, -1.1920928244535389e-07, -4.410734163684538e-06, -0.00020382710499688983, -9.179073458653875e-06, -2.5152843591058627e-05, -0.0002115741081070155, -0.004809952341020107, -0.017969196662306786, -1.1788479089736938, -0.007829690352082253, -0.49751049280166626, -0.001791897346265614, -0.0015112657565623522, -3.576278118089249e-07, -5.8412379075889476e-06, -1.1920928244535389e-07, -0.000935950840357691, -5.578839045483619e-05, -0.0011923355050384998, -2.5629668016335927e-05, -2.50339189733495e-06, -0.000504723924677819, -0.004929887596517801, -6.9141146923357155e-06, -0.0001586549769854173, -0.00017569905321579427, -0.002917678328230977, -0.0654938742518425, -0.047031428664922714, -0.23559394478797913, -1.1920922133867862e-06, -0.0001102625101339072, -1.9073468138230965e-06, -1.7207316160202026, -0.06169978901743889, -5.018585216021165e-05, -0.016689443960785866, -2.0265558760002023e-06, -0.00027176024741493165, -0.011443925090134144, -0.03373406082391739, -0.0019964303355664015, -0.41142645478248596, -0.005514528136700392, -0.07477639615535736, -0.1926157921552658, -0.7050387263298035, -0.558822512626648, -0.00011085849109804258, -0.09074273705482483, -3.707340147229843e-05, -0.028744926676154137, -0.002267291769385338, -0.018088148906826973, -0.0011367294937372208, -0.008898011408746243, -1.476444125175476, -0.03497297316789627, -0.22005364298820496, -0.07456796616315842, -0.0033698459155857563, -0.08165835589170456, -0.23125021159648895, -0.00040522945346310735, -0.0013629442546516657, -0.7525454759597778, -0.004101199563592672, -4.2914423829643056e-05, -0.00022718709078617394, -0.0006456674309447408, -0.18288441002368927, -1.0728830375228426e-06, -2.0265558760002023e-06, -0.011648613959550858, -9.417489309271332e-06, -0.0009807306341826916, -2.622600959512056e-06, -1.2278481335670222e-05, -6.12716976320371e-05, -0.006147641688585281, -1.6927575416048057e-05, -0.45944929122924805, -0.0005638201837427914, -0.0012935374397784472, -0.001256391522474587, -0.17920228838920593, -5.8412379075889476e-06, -1.1086402082582936e-05, -0.00010096516780322418, -6.007967749610543e-05, -0.00022921319759916514, -0.0001525762490928173, -0.3807499408721924, -5.245195097813848e-06, -3.099393507000059e-05, -0.0003297977091278881, -0.0023354417644441128, -0.25227728486061096, -0.032472606748342514, -0.0014916256768628955, -7.033323527139146e-06, -6.318072337307967e-06], "finish_reason": "stop"}], "metrics": {"energy": 524.3333457403181, "energy_per_token": 3.361111190643065, "time": 13.0323, "time_per_token": 0.08354038461538461}}
{"outputs": [{"text": "moved_files = []\n    os.chdir(src_dir)\n    for file_name in glob.glob(\"*.\" + ext):\n        file_path = os.path.join(src_dir, file_name)\n        if os.path.exists(os.path.join(dest_dir, file_name)):\n            print(f\"{file_name} already exists in {dest_dir}\")\n        else:\n            shutil.move(file_path, dest_dir)\n            moved_files.append(file_path)\n    return moved_files", "tokens": ["m", "oved", "_", "files", " =", " []", "\n", "    ", "os", ".", "ch", "dir", "(", "src", "_", "dir", ")", "\n", "    ", "for", " file", "_", "name", " in", " glob", ".", "glob", "(", "\"", "*", ".", "\"", " +", " ext", "):", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "src", "_", "dir", ",", " file", "_", "name", ")", "\n", "        ", "if", " os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " file", "_", "name", "))", ":", "\n", "            ", "print", "(", "f", "\"", "{", "file", "_", "name", "}", " already", " exists", " in", " {", "dest", "_", "dir", "}\"", ")", "\n", "        ", "else", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " dest", "_", "dir", ")", "\n", "            ", "m", "oved", "_", "files", ".", "append", "(", "file", "_", "path", ")", "\n", "    ", "return", " moved", "_", "files", "\n", "\n", "if"], "logprobs": [-1.8471472263336182, -0.0031198421493172646, -0.014057781547307968, -0.031826846301555634, -0.014863112010061741, -0.010469986125826836, -0.03696530684828758, -0.4699338972568512, -2.8661603927612305, -0.006156764458864927, -1.4854304790496826, -0.0151024479418993, -0.0051412517204880714, -0.04068118333816528, -5.8887653722194955e-05, -5.07818695041351e-05, -0.0004503904783632606, -0.1018873006105423, -0.11704907566308975, -1.1528242826461792, -0.257649689912796, -2.2279419898986816, -0.8191895484924316, -0.0019901248160749674, -0.0861547589302063, -0.00013159839727450162, -0.05758834257721901, -0.15032777190208435, -1.0996067523956299, -0.032861776649951935, -0.0915684923529625, -0.2701679468154907, -0.0709478035569191, -0.0020007132552564144, -0.03402157872915268, -0.036427512764930725, -0.011958102695643902, -2.5890824794769287, -0.017483169212937355, -0.05200088396668434, -0.015254967845976353, -0.050536543130874634, -1.1920922133867862e-06, -0.0010962436208501458, -7.271740287251305e-06, -0.08543966710567474, -0.0009552444680593908, -0.39073508977890015, -8.821448318485636e-06, -1.549708758830093e-05, -0.0004861365014221519, -0.003028332721441984, -1.07287787614041e-05, -2.6225699912174605e-05, -0.0001567479339428246, -0.004365201108157635, -0.04457166790962219, -0.30565395951271057, -0.4353012144565582, -2.264974000354414e-06, -0.0006972504197619855, -2.9802276912960224e-06, -0.6450690031051636, -0.00022754464589525014, -0.20312748849391937, -1.0728830375228426e-06, -3.3854863431770355e-05, -2.3841855067985307e-07, -0.0005043664714321494, -0.00016366096679121256, -0.008576464839279652, -6.937739817658439e-05, -1.1205610462639015e-05, -0.0005515484372153878, -0.00884424988180399, -1.728519782773219e-05, -0.0020234365947544575, -0.00031585473334416747, -0.00526150269433856, -0.0530892014503479, -0.002163928234949708, -0.5172059535980225, -0.007217169273644686, -0.21329332888126373, -0.04890216886997223, -1.3357374668121338, -0.007513833697885275, -6.925819616299123e-05, -0.08229535073041916, -0.011892018839716911, -0.11768904328346252, -0.007553232368081808, -0.016500793397426605, -0.5022123456001282, -0.003534262999892235, -0.00017081231635529548, -0.00024577934527769685, -1.3695029020309448, -0.0009751332108862698, -0.003935094457119703, -0.35849419236183167, -0.012142901308834553, -6.782778655178845e-05, -0.0016300498973578215, -0.0009577454766258597, -0.22070413827896118, -2.3841830625315197e-06, -3.2186455882765586e-06, -0.03457138314843178, -1.7046782886609435e-05, -0.009060695767402649, -4.172316494077677e-06, -0.016496922820806503, -6.663577369181439e-05, -0.14055585861206055, -1.4781842764932662e-05, -1.4305104514278355e-06, -0.005451218690723181, -0.002892717020586133, -0.003483182517811656, -0.1927802711725235, -1.2874520507466514e-05, -3.2305197237292305e-05, -0.0010090741561725736, -0.0001699779968475923, -0.00041762212640605867, -0.0005220004240982234, -0.2205611914396286, -2.3603161025675945e-05, -0.0035437659826129675, -0.0009140365873463452, -0.006103566847741604, -0.3248181939125061, -0.15255270898342133, -0.0013522299705073237, -1.9550132492440753e-05, -1.2755313036905136e-05, -0.457213819026947, -0.027209213003516197, -0.5585747957229614], "finish_reason": "stop"}], "metrics": {"energy": 488.2239358654023, "energy_per_token": 3.4873138276100164, "time": 11.777115, "time_per_token": 0.08412225}}
{"outputs": [{"text": "if not os.path.isdir(src_dir):\n        raise FileNotFoundError(\"The source directory does not exist\")\n    if not os.path.isdir(dest_dir):\n        raise FileNotFoundError(\"The destination directory does not exist\")\n\n    moved_files = []\n\n    # Find files in the source directory with the given extension\n    files = glob.glob(os.path.join(src_dir, f'*{ext}'))\n\n    for file in files:\n        filename = os.path.basename(file)\n        dest_file = os.path.join(dest_dir, filename)\n        if os.path.exists(dest_file):\n            print(f\"Skipping '{filename}'. File already exists in the destination directory.\")\n            continue\n        # Move the file to the destination directory\n        shutil.move(file, dest_file)\n        moved_files.append(dest_file)\n        print(f\"Moved '{filename}' to {dest_dir}\")\n\n    return moved_files", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "src", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "The", " source", " directory", " does", " not", " exist", "\"", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "dest", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "The", " destination", " directory", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " []", "\n", "\n", "    ", "#", " Find", " files", " in", " the", " source", " directory", " with", " the", " given", " extension", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "src", "_", "dir", ",", " f", "'", "*{", "ext", "}'", "))", "\n", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", "\n", "        ", "dest", "_", "file", " =", " os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " filename", ")", "\n", "        ", "if", " os", ".", "path", ".", "exists", "(", "dest", "_", "file", "):", "\n", "            ", "print", "(", "f", "\"", "Sk", "ipping", " '", "{", "filename", "}'", ".", " File", " already", " exists", " in", " the", " destination", " directory", ".", "\"", ")", "\n", "            ", "continue", "\n", "        ", "#", " Move", " the", " file", " to", " the", " destination", " directory", "\n", "        ", "sh", "util", ".", "move", "(", "file", ",", " dest", "_", "file", ")", "\n", "        ", "m", "oved", "_", "files", ".", "append", "(", "dest", "_", "file", ")", "\n", "        ", "print", "(", "f", "\"", "M", "oved", " '", "{", "filename", "}'", " to", " {", "dest", "_", "dir", "}\"", ")", "\n", "\n", "    ", "return", " moved", "_", "files", "\n", "\n", "if"], "logprobs": [-1.682251214981079, -0.017950579524040222, -0.04380543902516365, -1.3589766240329482e-05, -0.0015824426664039493, -1.5139465176616795e-05, -1.5728684663772583, -0.0004757702990900725, -0.0004049911512993276, -0.007354802917689085, -2.407998726994265e-05, -1.0013530300057027e-05, -0.2322254180908203, -0.012318246066570282, -0.008478006348013878, -0.029911363497376442, -0.011623869650065899, -0.0001793938863556832, -1.4066597032069694e-05, -0.04079323261976242, -2.1086418628692627, -1.7855916023254395, -0.1501215696334839, -0.00994949508458376, -0.11323097348213196, -0.000565249880310148, -0.0015675650211051106, -0.8827489614486694, -0.004087190609425306, -0.002012729411944747, -0.38083818554878235, -0.037255577743053436, -0.0021714221220463514, -0.00032240914879366755, -1.311301275563892e-06, -4.7801782784517854e-05, -2.145764938177308e-06, -0.0015587572706863284, -8.439661905867979e-05, -7.724463648628443e-05, -0.0015626850072294474, -2.90866428258596e-05, -3.576278118089249e-07, -0.0007487116381525993, -0.0003810394846368581, -0.0014355602907016873, -0.00334251974709332, -0.0003060825983993709, -5.471556869451888e-05, -1.966933996300213e-05, -0.0008310201810672879, -0.003301528748124838, -0.0030979756265878677, -0.006570284254848957, -0.0007083290838636458, -0.0004366874636616558, -4.994744449504651e-05, -0.00039760314393788576, -0.0037480599712580442, -0.00016962042718660086, -0.0006299418746493757, -0.27858301997184753, -0.0008728270186111331, -0.8727333545684814, -0.0030234598089009523, -0.0158544909209013, -0.026106981560587883, -0.013677450828254223, -0.012597627937793732, -0.0349089689552784, -1.4318593740463257, -0.0007913556764833629, -1.4203603267669678, -2.040280342102051, -0.6268247961997986, -1.4841415882110596, -0.21486996114253998, -0.058900464326143265, -0.012557132169604301, -0.8711780905723572, -0.02834777720272541, -1.437347173690796, -0.018214579671621323, -0.05853782594203949, -0.0005334384622983634, -0.8015226125717163, -0.3693036139011383, -0.04197554290294647, -5.6265202147187665e-05, -0.020886825397610664, -0.0007887351675890386, -0.24475425481796265, -1.5497195136049413e-06, -1.7762025890988298e-05, -5.483612312673358e-06, -0.00044216870446689427, -0.00014435203047469258, -0.0014650813536718488, -6.437280717364047e-06, -1.0728830375228426e-06, -0.00019000156316906214, -0.08734606206417084, -1.0151102542877197, -1.0219626426696777, -0.013919656164944172, -0.016480037942528725, -0.00032300499151460826, -0.015749119222164154, -0.19270093739032745, -0.00031013446277938783, -0.32580170035362244, -0.08746031671762466, -0.32380640506744385, -0.0008212531101889908, -7.438383181579411e-05, -0.0008992680232040584, -0.008379301987588406, -0.8350871205329895, -0.0025132279843091965, -0.0003668589051812887, -4.768370445162873e-07, -2.622600959512056e-06, -5.960462772236497e-07, -0.0015418557450175285, 0.0, -1.9073468138230965e-06, -0.00011002412065863609, -0.0001070442158379592, -0.013551974669098854, -0.37018030881881714, -0.5228002667427063, -0.04348510876297951, -0.7990753054618835, -0.3348870873451233, -0.000392598332837224, -4.768370445162873e-07, -2.7418097943154862e-06, -3.576278118089249e-07, -0.00045074793160893023, -1.3708974620385561e-05, -0.0004463391669560224, -4.291525328881107e-06, -1.6689286894688848e-06, -5.113947918289341e-05, -0.00116637849714607, -0.00011324241495458409, -0.013379668816924095, -1.5381848812103271, -0.20766089856624603, -0.18510127067565918, -7.152555099310121e-07, -2.7894584491150454e-05, -9.536738616588991e-07, -0.1880432367324829, -1.549708758830093e-05, -0.0008834273321554065, -3.933898824470816e-06, -7.211902266135439e-05, -0.012567609548568726, -0.0785536840558052, -0.0012310316087678075, -1.3455133438110352, -0.0023079682141542435, -0.06805357336997986, -0.07147446274757385, -1.7327489852905273, -0.018540766090154648, -2.566185712814331, -6.389413465512916e-05, -0.05210850387811661, -0.07354509830474854, -3.1982674598693848, -1.6411082744598389, -0.22210493683815002, -0.001191621064208448, -0.01818496361374855, -0.36051854491233826, -0.003132676472887397, -0.024038178846240044, -0.09619510173797607, -0.0016626594588160515, -0.0002786724944598973, -0.0018154582940042019, -0.5278133749961853, -0.010878306813538074, -0.04383031278848648, -0.40773069858551025, -2.6999194622039795, -0.24666957557201385, -0.1053818091750145, -0.011613382957875729, -0.48096388578414917, -0.003344539552927017, -0.0037557794712483883, -0.01737293228507042, -0.07859379798173904, -0.0016155298799276352, -0.09986639022827148, -1.6689286894688848e-06, -1.311301275563892e-06, -0.0022386270575225353, -9.298280929215252e-06, -0.001786899520084262, -0.00011312322021694854, -0.008598684333264828, -7.033100700937212e-05, -0.7727763056755066, -0.00027771908207796514, -0.0012423424050211906, -0.006674140691757202, -0.16153571009635925, -7.033323527139146e-06, -1.168244216387393e-05, -0.0001510267611593008, -4.6132929128361866e-05, -0.00027104519540444016, -0.00011884459672728553, -0.21209825575351715, -8.22540732769994e-06, -5.006664650863968e-05, -0.00017474555352237076, -0.007608246058225632, -2.126512289047241, -0.05345110967755318, -0.0014613912208005786, -0.007030983921140432, -0.013346380554139614, -0.09243638068437576, -0.0027545862831175327, -0.10801403224468231, -1.8596476365928538e-05, -0.050533708184957504, -0.0009862087899819016, -0.05738856643438339, -2.0346462726593018, -0.009729228913784027, -2.455681169521995e-05, -0.2415425330400467, -0.14417432248592377, -0.001035987981595099, -0.0072001260705292225, -0.15156963467597961, -0.0026846816763281822, -0.0371692068874836, -0.0011624491307884455, -4.529942543740617e-06, -4.768370445162873e-07, -0.40438735485076904, -0.012906704097986221, -0.5786728858947754], "finish_reason": "stop"}], "metrics": {"energy": 878.1325758399965, "energy_per_token": 3.5125303033599864, "time": 21.22821, "time_per_token": 0.08491284}}
{"outputs": [{"text": "# Initialize the list to store the full paths of files that were successfully moved\n    moved_files = []\n\n    # Check if the source directory exists\n    if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"Source directory '{src_dir}' does not exist.\")\n\n    # Check if the destination directory exists\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(f\"Destination directory '{dest_dir}' does not exist.\")\n\n    # Create the pattern to find files with the given extension\n    pattern = os.path.join(src_dir, f'*{ext}')\n\n    # Iterate through each file that matches the pattern\n    for file_path in glob.glob(pattern):\n        # Extract the file name from the full path\n        file_name = os.path.basename(file_path)\n\n        # Construct the destination path\n        dest_path = os.path.join(dest_dir, file_name)\n\n        # Check if the file already exists in the destination directory\n        if not os.path", "tokens": ["#", " Initialize", " the", " list", " to", " store", " the", " full", " paths", " of", " files", " that", " were", " successfully", " moved", "\n", "    ", "m", "oved", "_", "files", " =", " []", "\n", "\n", "    ", "#", " Check", " if", " the", " source", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " '", "{", "src", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Check", " if", " the", " destination", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "dest", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Dest", "ination", " directory", " '", "{", "dest", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " the", " pattern", " to", " find", " files", " with", " the", " given", " extension", "\n", "    ", "pattern", " =", " os", ".", "path", ".", "join", "(", "src", "_", "dir", ",", " f", "'", "*{", "ext", "}", "')", "\n", "\n", "    ", "#", " Iter", "ate", " through", " each", " file", " that", " matches", " the", " pattern", "\n", "    ", "for", " file", "_", "path", " in", " glob", ".", "glob", "(", "pattern", "):", "\n", "        ", "#", " Ext", "ract", " the", " file", " name", " from", " the", " full", " path", "\n", "        ", "file", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", ")", "\n", "\n", "        ", "#", " Construct", " the", " destination", " path", "\n", "        ", "dest", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " file", "_", "name", ")", "\n", "\n", "        ", "#", " Check", " if", " the", " file", " already", " exists", " in", " the", " destination", " directory", "\n", "        ", "if", " not", " os", ".", "path"], "logprobs": [-1.2989866733551025, -3.0406603813171387, -1.8828142881393433, -0.3697601854801178, -0.7857893109321594, -0.2235465943813324, -0.35078099370002747, -1.2077685594558716, -0.029965044930577278, -0.005269329063594341, -0.8168873190879822, -0.2368582785129547, -0.08609350770711899, -0.8038333058357239, -0.0011745942756533623, -0.10964654386043549, -0.0022320852149277925, -0.04427667707204819, -0.0009646529797464609, -0.003787725931033492, -0.0871187075972557, -0.04418851435184479, -0.004437006078660488, -0.0015220972709357738, -0.0991051197052002, -0.0007011815905570984, -0.0422915555536747, -0.9214575290679932, -0.031734924763441086, -0.41684916615486145, -0.04842709004878998, -0.40758416056632996, -0.055747661739587784, -0.14039695262908936, -0.0002441108226776123, -0.00720095494762063, -0.07460547238588333, -0.0017428698483854532, -1.0728830375228426e-06, -0.00018165845540352166, -7.152531907195225e-06, -0.25796931982040405, -3.540453326422721e-05, -0.0009875188115984201, -1.0609570381348021e-05, -2.407998726994265e-05, -0.009296935051679611, -0.001280560391023755, -0.0029070996679365635, -0.04483272507786751, -0.007891074754297733, -0.00020168177434243262, -7.986990567587782e-06, -0.01830810308456421, -0.18413838744163513, -0.03552351891994476, -0.19005325436592102, -0.0012399612460285425, -0.5410723090171814, -8.022463589441031e-05, -0.0017690499080345035, -4.207999518257566e-05, -2.1219027985353023e-05, -0.0013136576162651181, -0.17125438153743744, -0.00014101465058047324, -0.00044264530879445374, -0.32354652881622314, -0.003275864291936159, -0.00015472168161068112, -0.0006673493189737201, -0.011593115516006947, -0.0012825843878090382, -0.0018669809214770794, -0.06018561124801636, -0.0003911683743353933, -0.0033486979082226753, -0.005604980513453484, -0.00012933371181134135, -0.00043644916149787605, -0.2145005464553833, -4.6132929128361866e-05, -0.004465845413506031, -0.003374123014509678, -0.00011157367407577112, -4.768370445162873e-07, -5.328513361746445e-05, -3.6954811548639555e-06, -0.000910106289666146, -4.672895011026412e-05, -0.0010434903670102358, -5.602820692729438e-06, -3.576278118089249e-07, -0.0007828985108062625, -0.00011646069469861686, -0.0004530118894763291, -0.003970122430473566, -0.00028689560713246465, -0.0004812512779608369, -7.867782187531702e-06, -0.00010346830822527409, -0.004785987548530102, -5.245071224635467e-05, -0.0006082591717131436, -2.3007127310847864e-05, -0.00014184899919200689, -0.0009616755996830761, -1.7404405298293568e-05, -0.0008407871937379241, -1.311301275563892e-06, -2.622600959512056e-06, -0.00021240839851088822, -0.00012468514614738524, -2.276871418871451e-05, -0.0001323135511483997, -0.0012262690579518676, -0.00014411364099942148, -0.00014447122521232814, -6.437094270950183e-05, -0.008782687596976757, -0.0010639727115631104, -0.011576736345887184, -2.299604892730713, -0.7955708503723145, -1.3953450918197632, -0.477640837430954, -2.6702933311462402, -0.05961355194449425, -0.03226359561085701, -0.03924016281962395, -1.449633002281189, -0.004274517763406038, -0.31475985050201416, -0.00021169328829273582, -0.110671266913414, -0.0007008241955190897, -0.5101013779640198, -4.529942543740617e-06, -3.528532761265524e-05, -3.933898824470816e-06, -0.0013496108585968614, -0.00039307496626861393, -0.006193492095917463, -2.9802276912960224e-06, -6.437280717364047e-06, -0.0003352795320097357, -0.03523297980427742, -0.6656871438026428, -1.1867029666900635, -0.016760721802711487, -0.01142553985118866, -0.00030632095877081156, -0.019458245486021042, -0.0338943675160408, -0.0001892864383989945, -0.025346456095576286, -1.167912483215332, -0.00022980909852776676, -1.16108238697052, -2.327143907546997, -0.05818574130535126, -1.2991162538528442, -0.004088971298187971, -0.0010899323970079422, -0.04936181753873825, -0.07801353931427002, -0.00010740180005086586, -0.0057326434180140495, -0.16273507475852966, -0.6899976134300232, -0.03060414455831051, -0.0005707303644157946, -0.0025955105666071177, -1.3947389561508317e-05, -0.29534995555877686, -5.0424259825376794e-05, -0.0004114258335903287, -0.041371122002601624, -0.0010059778578579426, -0.047066569328308105, -0.3464812636375427, -1.4184435606002808, -0.0014360364293679595, -0.027532478794455528, -0.28898659348487854, -0.014829990454018116, -0.42583945393562317, -0.011655683629214764, -0.20317614078521729, -0.24369806051254272, -0.008226794190704823, -0.00017128908075392246, -0.05321105942130089, -0.0033864788711071014, -0.0006538875168189406, -0.00024828212917782366, -0.0002526917669456452, -2.3841855067985307e-07, -4.768370445162873e-07, -2.3841855067985307e-07, -0.0005050813779234886, 0.0, -1.9073468138230965e-06, -6.925819616299123e-05, -3.099436753473128e-06, -1.1920928244535389e-07, -4.172238186583854e-05, -0.0005852655158378184, -0.042311668395996094, -0.0006160030607134104, -0.0021495348773896694, -1.9103456735610962, -0.0023074925411492586, -0.3119429051876068, -0.631001353263855, -1.2701503038406372, -6.544376083184034e-05, -0.04629519581794739, -0.005296721588820219, -0.06362620741128922, -6.103329360485077e-05, -0.00031192204914987087, -1.1920928244535389e-07, -7.152555099310121e-07, -1.1920928244535389e-07, -0.00034540885826572776, -1.07287787614041e-05, -0.00026127262390218675, -5.006777428206988e-06, -1.9073468138230965e-06, -7.521823135903105e-05, -0.0007084482349455357, -2.622600959512056e-06, -2.5510462364763953e-05, -6.41325386823155e-05, -0.0005339150666259229, -0.003343826625496149, -0.00044371772673912346, -0.006692968774586916, -0.13711591064929962, -0.0008186326595023274, -0.1434837430715561, -0.13807591795921326, -0.3164878487586975, -9.858122211880982e-05, -0.03566306456923485, -0.0006914132391102612, -0.00046456989366561174, -0.01964154653251171, -0.041914500296115875, -0.00010513706365600228, -0.004459674004465342, -2.0231873989105225, -0.0008997444529086351, -7.152555099310121e-07, -2.0265558760002023e-06], "finish_reason": "length"}], "metrics": {"energy": 868.2954797496794, "energy_per_token": 3.3917792177721853, "time": 21.64768, "time_per_token": 0.08456125}}
{"outputs": [{"text": "moved_files = []\n\n    # Check if src_dir and dest_dir exist\n    if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"Source directory '{src_dir}' does not exist.\")\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(f\"Destination directory '{dest_dir}' does not exist.\")\n\n    # Iterate through files in src_dir with matching extension\n    for file in glob.glob(os.path.join(src_dir, f\"*.{ext}\")):\n        filename = os.path.basename(file)\n\n        # Check if file already exists in dest_dir\n        if os.path.exists(os.path.join(dest_dir, filename)):\n            print(f\"File '{filename}' already exists in destination directory. Skipping.\")\n        else:\n            # Move file from src_dir to dest_dir\n            shutil.move(file, os.path.join(dest_dir, filename))\n            moved_files.append(os", "tokens": ["m", "oved", "_", "files", " =", " []", "\n", "\n", "    ", "#", " Check", " if", " src", "_", "dir", " and", " dest", "_", "dir", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " '", "{", "src", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "dest", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Dest", "ination", " directory", " '", "{", "dest", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Iter", "ate", " through", " files", " in", " src", "_", "dir", " with", " matching", " extension", "\n", "    ", "for", " file", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "src", "_", "dir", ",", " f", "\"", "*", ".", "{", "ext", "}\"", "))", ":", "\n", "        ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", "\n", "\n", "        ", "#", " Check", " if", " file", " already", " exists", " in", " dest", "_", "dir", "\n", "        ", "if", " os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " filename", "))", ":", "\n", "            ", "print", "(", "f", "\"", "File", " '", "{", "filename", "}'", " already", " exists", " in", " destination", " directory", ".", " Sk", "ipping", ".", "\"", ")", "\n", "        ", "else", ":", "\n", "            ", "#", " Move", " file", " from", " src", "_", "dir", " to", " dest", "_", "dir", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " filename", "))", "\n", "            ", "m", "oved", "_", "files", ".", "append", "(", "os"], "logprobs": [-1.8471472263336182, -0.0031198421493172646, -0.014057781547307968, -0.031826846301555634, -0.014863112010061741, -0.010469986125826836, -0.03696530684828758, -0.9825433492660522, -0.001341158407740295, -0.7432767748832703, -0.5829278826713562, -0.06219929829239845, -2.161454677581787, -0.036164943128824234, -0.0008715168805792928, -0.22116319835186005, -0.007661245763301849, -0.00029666791670024395, -6.365573790390044e-05, -0.2810160219669342, -0.1451045721769333, -0.000720956246368587, -0.020576585084199905, -0.023868834599852562, -0.028255071491003036, -1.6689286894688848e-06, -0.00017093151109293103, -7.629365427419543e-06, -0.18369057774543762, -5.340433563105762e-05, -0.0021034989040344954, -3.4570634852570947e-06, -1.0728830375228426e-06, -0.12476567178964615, -0.002037355676293373, -0.0027852572966367006, -0.01888345740735531, -0.006496027112007141, -0.00023016665363684297, -9.059865078597795e-06, -0.026523826643824577, -0.18756070733070374, -0.035449542105197906, -0.11447839438915253, -0.0023272354155778885, -0.6051163673400879, -6.723177648382261e-05, -0.0015688742278143764, -3.8265450712060556e-05, -7.390948667307384e-06, -0.0016858663875609636, -0.1175333559513092, -0.00011514954530866817, -0.00041345154750160873, -0.48404279351234436, -0.0016933638835325837, -0.00011848701251437888, -0.00023779425828251988, -0.18353192508220673, -0.019398733973503113, -0.000533795915544033, -5.602679812000133e-05, -1.1920928244535389e-07, -1.3589766240329482e-05, -2.145764938177308e-06, -0.00013672371278516948, -3.683499380713329e-05, -0.0003980797773692757, -3.4570634852570947e-06, -1.1920928244535389e-07, -0.0004707658663392067, -0.00013136000779923052, -0.0003741279651876539, -0.0010737375123426318, -0.00014053787162993103, -6.353653589030728e-05, -7.390948667307384e-06, -9.131014667218551e-05, -0.003959317691624165, -4.8874615458771586e-05, -0.0009385710000060499, -5.566918844124302e-05, -0.0001250427303602919, -0.000927256653085351, -1.883488948806189e-05, -0.00113589596003294, -5.8412379075889476e-06, -1.5497195136049413e-06, -8.189342770492658e-05, -0.00011884459672728553, -2.169585604860913e-05, -9.035655966727063e-05, -0.0010600429959595203, -0.00013195598148740828, -5.2927523938706145e-05, -0.00011896379146492109, -0.01671910472214222, -0.0009027220075950027, -0.2283506691455841, -2.967259407043457, -0.004167206585407257, -0.7979812026023865, -0.6686093211174011, -0.279117614030838, -0.6331796646118164, -0.007010623347014189, -0.0004972175229340792, -1.6748926639556885, -2.8995935916900635, -0.1538667529821396, -0.07172670215368271, -0.0005012686015106738, -0.18367598950862885, -0.2937043607234955, -0.31507185101509094, -0.062168046832084656, -5.4238757002167404e-05, -0.09504183381795883, -0.0002671123365871608, -0.24604472517967224, -1.1920922133867862e-06, -9.65590606938349e-06, -5.483612312673358e-06, -0.0003634030872490257, -5.7338023907504976e-05, -0.0005110388156026602, -4.887569048150908e-06, -5.960462772236497e-07, -0.00016044282529037446, -0.035584840923547745, -0.5577747821807861, -0.19475194811820984, -0.00014327930693980306, -6.031808152329177e-05, -0.00010680581908673048, -0.003706373041495681, -0.0023192670196294785, -7.807903602952138e-05, -0.00242475513368845, -0.05152580142021179, -0.747722864151001, -0.0018452061340212822, -0.000444551813416183, -5.960462772236497e-07, -8.344646857949556e-07, -2.3841855067985307e-07, -0.0016897936584427953, 0.0, -1.4305104514278355e-06, -9.083335316972807e-05, -0.00014351768186315894, -0.040754664689302444, -0.9933859705924988, -0.0007608617888763547, -0.033097073435783386, -0.09350460767745972, -0.008469377644360065, -0.4351617693901062, -0.8979905843734741, -0.0005857420619577169, -0.003708392148837447, -0.05015883967280388, -0.000770510348957032, -0.00021765247220173478, -0.184745654463768, -0.00011765264935093, -0.08438403904438019, -0.2084047645330429, -3.576278118089249e-07, -3.576272320060525e-06, -1.1920928244535389e-07, -0.09576082229614258, -5.531158240046352e-05, -0.0006302992696873844, -2.3841855067985307e-07, -8.344646857949556e-07, -2.3841855067985307e-07, -2.1815061700181104e-05, -8.702239938429557e-06, -0.0002090712368953973, -2.622600959512056e-06, -1.1920922133867862e-06, -2.4437606043647975e-05, -0.0011720937909558415, -5.495397272170521e-05, -0.000954649003688246, -0.0007870675181038678, -0.00048137042904272676, -0.5491765737533569, -0.0007008241955190897, -0.053282830864191055, -0.001966211013495922, -0.544468104839325, -0.03311725705862045, -3.266281055402942e-05, -0.02103741466999054, -0.0013367536012083292, -0.005047910381108522, -0.0006243425305001438, -0.0022034193389117718, -0.7820173501968384, -0.019478237256407738, -0.12224927544593811, -0.07338769733905792, -0.001674322527833283, -0.07913869619369507, -0.291634202003479, -0.00013398226292338222, -0.0007540719816461205, -1.0298302173614502, -0.00448115449398756, -1.1205610462639015e-05, -0.0036087408661842346, -0.0025833826512098312, -0.3684718608856201, -0.044037606567144394, -0.17602874338626862, -1.7364259958267212, -0.004166375380009413, -0.014764565974473953, -7.986703712958843e-05, -9.738924563862383e-05, -0.00019238528329879045, -8.272782724816352e-05, -5.495397272170521e-05, -0.046446673572063446, -0.00022706791060045362, -0.08453347533941269, -1.4305104514278355e-06, -1.4305104514278355e-06, -0.0030053947120904922, -5.8412379075889476e-06, -0.017991092056035995, -0.00010382589971413836, -0.9239470958709717, -5.960462772236497e-07, -3.576278118089249e-07, -5.960462772236497e-07, -0.00010835537250386551, -6.437280717364047e-06, -0.00010275312524754554, -5.602820692729438e-06, -2.3841855067985307e-07, -0.012477784417569637, -0.0015612567076459527, -0.00024685196694917977, -0.000906056840904057, -0.009584836661815643, -0.10083015263080597, -7.867782187531702e-06, -2.586808113846928e-05, -8.904537389753386e-05, -9.16677454370074e-05, -0.00029309268575161695, -0.0006624649395234883, -0.8877251744270325], "finish_reason": "length"}], "metrics": {"energy": 914.0426285095214, "energy_per_token": 3.570479017615318, "time": 21.857056, "time_per_token": 0.085379125}}
{"outputs": [{"text": "if not os.path.isdir(src_dir) or not os.path.isdir(dest_dir):\n        raise FileNotFoundError(\"Source or destination directory not found\")\n\n    moved_files = []\n\n    for file in glob.glob(os.path.join(src_dir, f\"*.{ext}\")):\n        filename = os.path.basename(file)\n\n        # Check if the file already exists in the destination directory\n        if os.path.isfile(os.path.join(dest_dir, filename)):\n            print(f\"Skipping {filename} - a file with the same name already exists in the destination directory\")\n        else:\n            try:\n                shutil.move(file, dest_dir)\n                moved_files.append(file)\n            except OSError as e:\n                print(f\"Error moving {filename}: {str(e)}\")\n\n    return moved_files", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "src", "_", "dir", ")", " or", " not", " os", ".", "path", ".", "is", "dir", "(", "dest", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Source", " or", " destination", " directory", " not", " found", "\"", ")", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " []", "\n", "\n", "    ", "for", " file", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "src", "_", "dir", ",", " f", "\"", "*", ".", "{", "ext", "}\"", "))", ":", "\n", "        ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", "\n", "\n", "        ", "#", " Check", " if", " the", " file", " already", " exists", " in", " the", " destination", " directory", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " filename", "))", ":", "\n", "            ", "print", "(", "f", "\"", "Sk", "ipping", " {", "filename", "}", " -", " a", " file", " with", " the", " same", " name", " already", " exists", " in", " the", " destination", " directory", "\"", ")", "\n", "        ", "else", ":", "\n", "            ", "try", ":", "\n", "                ", "sh", "util", ".", "move", "(", "file", ",", " dest", "_", "dir", ")", "\n", "                ", "m", "oved", "_", "files", ".", "append", "(", "file", ")", "\n", "            ", "except", " O", "SE", "rror", " as", " e", ":", "\n", "                ", "print", "(", "f", "\"", "Error", " moving", " {", "filename", "}:", " {", "str", "(", "e", ")}", "\"", ")", "\n", "\n", "    ", "return", " moved", "_", "files", "\n", "\n", "#"], "logprobs": [-1.682251214981079, -0.017950579524040222, -0.04380543902516365, -1.3589766240329482e-05, -0.0015824426664039493, -1.5139465176616795e-05, -1.5728684663772583, -0.0004757702990900725, -0.0004049911512993276, -0.007354802917689085, -2.407998726994265e-05, -1.0013530300057027e-05, -1.5757122039794922, -0.014540423639118671, -0.0014618673594668508, -0.0002540027489885688, -7.152555099310121e-07, -0.00011228884250158444, -3.6954811548639555e-06, -0.0014943634159862995, -4.351044481154531e-05, -6.4490144723095e-05, -0.002748999046161771, -2.4437606043647975e-05, -1.1920922133867862e-06, -0.002113372553139925, -0.004640880040824413, -0.01331932470202446, -0.030677443370223045, -0.010734670795500278, -0.00015901254664640874, -2.169585604860913e-05, -0.10340428352355957, -0.189872145652771, -0.49646225571632385, -0.1942158192396164, -0.025636978447437286, -0.012658720836043358, -2.028569459915161, -0.0008405489497818053, -0.8230295777320862, -0.0006872437661513686, -0.0014590105274692178, -0.19822171330451965, -0.0007875440060161054, -1.019425392150879, -0.002444852376356721, -0.010417843237519264, -0.023658830672502518, -0.01007896475493908, -0.009074871428310871, -0.025022249668836594, -1.3802368640899658, -0.00048137042904272676, -0.6909481883049011, -0.2581498324871063, -0.3122429847717285, -0.061515405774116516, -5.721882189391181e-05, -0.10331204533576965, -0.0008654424455016851, -0.36762332916259766, -1.1920922133867862e-06, -2.288792165927589e-05, -2.50339189733495e-06, -0.0004406196530908346, -0.00015007323236204684, -0.0024540091399103403, -5.125986263010418e-06, -1.5497195136049413e-06, -0.00024673278676345944, -0.1407359540462494, -0.32029080390930176, -0.21245121955871582, -0.00027843413408845663, -0.00016509123088326305, -9.226373367710039e-05, -0.0036114726681262255, -0.002303805435076356, -0.00010787858627736568, -0.00975992251187563, -0.01124862302094698, -0.48977798223495483, -0.002539031207561493, -0.0007246490567922592, -3.576278118089249e-07, -1.6689286894688848e-06, -4.768370445162873e-07, -0.005223436746746302, -1.1920928244535389e-07, -2.50339189733495e-06, -0.00023719835735391825, -0.00023636408150196075, -0.005258182529360056, -1.5364067554473877, -0.0010205067228525877, -2.1520872116088867, -0.2863072454929352, -0.01637672632932663, -0.6597801446914673, -0.06757257133722305, -0.3507557213306427, -0.00033408781746402383, -0.011117654852569103, -0.009167009964585304, -0.006747674662619829, -0.01932133175432682, -0.08040855824947357, -0.0005555993411689997, -0.06476061046123505, -0.14661046862602234, -3.576278118089249e-07, -8.4638240878121e-06, -1.1920928244535389e-07, -1.31948721408844, -0.0002783149539027363, -6.425174069590867e-05, -0.0006445952458307147, -2.3841855067985307e-07, -9.536738616588991e-07, -3.576278118089249e-07, -2.9801878554280847e-05, -8.940656698541716e-06, -0.00047124247066676617, -1.3947389561508317e-05, -5.245195097813848e-06, -2.90866428258596e-05, -0.0008891443139873445, -3.659658250398934e-05, -0.0017347777029499412, -0.0008080316474661231, -0.0005210472736507654, -0.5502873063087463, -0.0009162995265796781, -0.09423956274986267, -0.006505264900624752, -1.6992228031158447, -0.023785024881362915, -0.27672120928764343, -0.05021609365940094, -0.09657096862792969, -2.6397972106933594, -3.4737253189086914, -0.007245928049087524, -0.007940512150526047, -0.03360358253121376, -0.0002343380037928, -0.0024480633437633514, -0.11434932053089142, -0.00043096792069263756, -0.05748266354203224, -0.07124458253383636, -0.004348346963524818, -0.03313778340816498, -0.48900535702705383, -0.00033802041434682906, -0.0006932000978849828, -1.4638864994049072, -0.0020615055691450834, -1.3708974620385561e-05, -0.001977513777092099, -0.001611959422007203, -2.220186710357666, -3.421248038648628e-05, -0.000992997083812952, -0.0013663965510204434, -0.10363581031560898, -7.152555099310121e-07, -1.0728830375228426e-06, -0.016970420256257057, -6.556489552167477e-06, -0.007278828416019678, -0.0001262346631847322, -0.06060868874192238, -2.3007127310847864e-05, -1.4305104514278355e-06, -0.001955979270860553, -0.006481103599071503, -0.00867396779358387, -0.2173665165901184, -1.07287787614041e-05, -4.8397800128441304e-05, -0.00025042734341695905, -5.471556869451888e-05, -0.0003532739356160164, -0.0003070359816774726, -0.5201622843742371, -0.0005564333405345678, -0.018839238211512566, -0.49090152978897095, -0.00010680581908673048, -2.3662190437316895, -3.6954811548639555e-06, -8.821448318485636e-06, -0.09772592782974243, -0.05929229408502579, -5.674201020156033e-05, -0.0025499705225229263, -0.00024172721896320581, -0.01925140619277954, -0.0002181292074965313, -0.009991158731281757, -0.0024720842484384775, -0.16747921705245972, -0.22937950491905212, -0.34706708788871765, -0.18879225850105286, -0.031173277646303177, -0.0016815820708870888, -1.4772988557815552, -4.7801782784517854e-05, -2.6702524337451905e-05, -0.000993354362435639, -0.001441036001779139, -0.000508417550008744, -0.003296419745311141, -0.105753593146801, -0.0013005617074668407, -0.01599011942744255, -0.0008947421447373927, -4.291525328881107e-06, -1.4305104514278355e-06, -0.35845687985420227, -0.01236181240528822, -1.687013030052185], "finish_reason": "stop"}], "metrics": {"energy": 767.958644834518, "energy_per_token": 3.413149532597858, "time": 19.12736, "time_per_token": 0.08501048888888889}}
{"outputs": [{"text": "try:\n        # Ensure the source and destination directories exist\n        os.makedirs(src_dir, exist_ok=True)\n        os.makedirs(dest_dir, exist_ok=True)\n\n        # Construct the file extension pattern\n        pattern = '*.' + ext\n\n        # Find files with the specified extension in the source directory\n        files = glob.glob(os.path.join(src_dir, pattern))\n\n        moved_files = []\n        # Move files to the destination directory\n        for file in files:\n            file_name = os.path.basename(file)\n            dest_path = os.path.join(dest_dir, file_name)\n            if os.path.exists(dest_path):  # Check if file already exists in the destination directory\n                print(f\"File '{file_name}' already exists in the destination directory. Skipping.\")\n                continue\n            shutil.move(file, dest_path)\n            moved_files.append(dest_path)\n            print(f\"Moved '{file_name}' to {dest", "tokens": ["try", ":", "\n", "        ", "#", " Ensure", " the", " source", " and", " destination", " directories", " exist", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "src", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "dest", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "        ", "#", " Construct", " the", " file", " extension", " pattern", "\n", "        ", "pattern", " =", " '", "*", ".", "'", " +", " ext", "\n", "\n", "        ", "#", " Find", " files", " with", " the", " specified", " extension", " in", " the", " source", " directory", "\n", "        ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "src", "_", "dir", ",", " pattern", "))", "\n", "\n", "        ", "m", "oved", "_", "files", " =", " []", "\n", "        ", "#", " Move", " files", " to", " the", " destination", " directory", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "file", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", "\n", "            ", "dest", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " file", "_", "name", ")", "\n", "            ", "if", " os", ".", "path", ".", "exists", "(", "dest", "_", "path", "):", "  ", "#", " Check", " if", " file", " already", " exists", " in", " the", " destination", " directory", "\n", "                ", "print", "(", "f", "\"", "File", " '", "{", "file", "_", "name", "}'", " already", " exists", " in", " the", " destination", " directory", ".", " Sk", "ipping", ".", "\"", ")", "\n", "                ", "continue", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " dest", "_", "path", ")", "\n", "            ", "m", "oved", "_", "files", ".", "append", "(", "dest", "_", "path", ")", "\n", "            ", "print", "(", "f", "\"", "M", "oved", " '", "{", "file", "_", "name", "}'", " to", " {", "dest"], "logprobs": [-2.049968957901001, -0.0004864939546678215, -0.0036373662296682596, -0.025338785722851753, -1.4765465259552002, -3.005802631378174, -1.3388780355453491, -0.1779048889875412, -0.5830432176589966, -0.007720630150288343, -0.02324463240802288, -0.012719810009002686, -0.06759028881788254, -0.0019892919808626175, -1.4863853454589844, -0.0001517419150331989, -0.019419312477111816, -1.1920928244535389e-07, -0.00012051333033014089, -7.962863310240209e-05, -0.02148204855620861, -4.029192859889008e-05, -8.11782301752828e-05, -0.011926651000976562, -0.000777776469476521, -3.6954811548639555e-06, -4.768370445162873e-07, -0.00044919890933670104, -0.0021519139409065247, -4.5060096454108134e-05, -0.00554843433201313, -0.0025572238955646753, -0.0038025707472115755, -2.9802276912960224e-06, -0.0003195490571670234, -6.770858453819528e-05, -2.622600959512056e-06, -9.536697689327411e-06, -0.0003104920033365488, -7.867782187531702e-06, -5.960462772236497e-07, -0.00018988236843142658, -3.2305197237292305e-05, -5.960462772236497e-07, 0.0, -8.344646857949556e-07, -1.9907753085135482e-05, -5.8412379075889476e-06, -0.0007936188485473394, -0.14491349458694458, -0.008584502153098583, -0.4994458854198456, -2.83332896232605, -0.11866436898708344, -1.23929762840271, -1.7074408531188965, -0.17893747985363007, -0.6570221185684204, -0.00044347942457534373, -0.9105955958366394, -0.0019601434469223022, -3.006732940673828, -0.023672452196478844, -0.031938157975673676, -0.17736881971359253, -0.0004638549580704421, -0.0036594585981220007, -0.08271697163581848, -0.06392628699541092, -0.0007815881981514394, -0.0383480042219162, -1.1451327800750732, -0.7587031126022339, -1.0925551652908325, -0.10687732696533203, -0.3429301679134369, -0.03215751424431801, -0.12616673111915588, -0.0022096047177910805, -0.00911527220159769, -0.0027210612315684557, -0.03416156396269798, -0.00033361115492880344, -0.8558520674705505, -0.167507141828537, -0.02273634262382984, -4.8040190449682996e-05, -0.027182994410395622, -0.0005178302526473999, -0.009650719352066517, -1.6689286894688848e-06, -1.3828182090946939e-05, -5.483612312673358e-06, -0.00022003613412380219, -6.12716976320371e-05, -0.0014278227463364601, -9.65590606938349e-06, -1.7881377516459906e-06, -9.297892393078655e-05, -0.0017874945187941194, -0.012943773530423641, -0.0024635223671793938, -0.07369814813137054, -0.0008420973899774253, -0.7804469466209412, -0.0005947966128587723, -0.0161884855479002, -0.01018292922526598, -0.0038771473336964846, -0.0019213564228266478, -0.28567683696746826, -0.6794871687889099, -2.4072487354278564, -0.6293338537216187, -1.7230253219604492, -0.1919565200805664, -0.004034119658172131, -0.00163433444686234, -0.007328532170504332, -0.3648339509963989, -0.0010746901389211416, -0.0021076626144349575, -0.09135536849498749, -0.23491397500038147, -0.0008070787298493087, -6.651657167822123e-05, -0.00018880968855228275, -0.0042235939763486385, -1.7104556560516357, -0.0013778250431641936, -0.027388548478484154, -0.000842692912556231, -0.0002636561985127628, -2.3841855067985307e-07, -8.344646857949556e-07, -2.3841855067985307e-07, -0.0007839705212973058, -2.3841855067985307e-07, -2.264974000354414e-06, -0.00012265883560758084, -7.784063927829266e-05, -0.014484144747257233, -0.19454029202461243, -0.5039209127426147, -0.03338581323623657, -0.6394039988517761, -0.0003446938644628972, -0.0006391151691786945, -2.3841855067985307e-07, -1.1920922133867862e-06, -1.1920928244535389e-07, -0.00040165462996810675, -9.775113539944869e-06, -0.0006791430641897023, -1.1324817933200393e-05, -6.9141146923357155e-06, -0.00025412190007045865, -0.0008885487914085388, -0.00012933371181134135, -1.9073468138230965e-06, -7.10462118149735e-05, -0.0025824313051998615, -0.6581779718399048, -0.29591745138168335, -0.41373178362846375, -2.0265558760002023e-06, -3.0874729418428615e-05, -5.960462772236497e-07, -0.20468106865882874, -1.966933996300213e-05, -0.0030362955294549465, -3.576272320060525e-06, -5.769562994828448e-05, -0.004130167420953512, -2.745384454727173, -2.253030106658116e-05, -0.3671439290046692, -0.05666544288396835, -1.1089463233947754, -0.2815014719963074, -0.0002224197960458696, -0.03837278485298157, -0.2857065796852112, -0.0015582811320200562, -0.20873619616031647, -0.0050819506868720055, -0.0006501944735646248, -0.48914188146591187, -0.004705308936536312, -0.060339152812957764, -0.10484275966882706, -0.5634080171585083, -0.2199714630842209, -3.683499380713329e-05, -0.018009239807724953, -0.023113826289772987, -2.038458114839159e-05, -0.0008376903715543449, -0.007691411767154932, -0.0002829628065228462, -0.002955951262265444, -0.16529352962970734, -0.001646116841584444, -0.010008390061557293, -0.06194520369172096, -0.034188754856586456, -0.001019911258481443, -0.1488492488861084, -0.4026917815208435, -0.00014351768186315894, -0.001434488920494914, -0.49318796396255493, -0.008167557418346405, -0.02116720750927925, -0.10355767607688904, -0.09906549751758575, -3.576278118089249e-07, -3.576278118089249e-07, -0.003378518857061863, -3.4570634852570947e-06, -0.0005409446312114596, -3.731181277544238e-05, -0.004114615265280008, -2.169585604860913e-05, -0.08103755861520767, -0.0003116837178822607, -0.014118550345301628, -0.0015013862866908312, -0.04392204433679581, -7.271740287251305e-06, -1.7881377516459906e-06, -2.312633478140924e-05, -6.19869097135961e-05, -0.00020656836568377912, -0.00011646069469861686, -0.2697611451148987, -1.3232143828645349e-05, -1.0251946150674485e-05, -0.0001479277852922678, -0.06269721686840057, -2.42826247215271, -0.020830202847719193, -0.002002378925681114, -0.009425663389265537, -0.01445947028696537, -0.23880594968795776, -0.0012747265864163637, -0.2706063985824585, -1.680836794548668e-05, -0.0017037175130099058, -0.06375852972269058, -1.1324817933200393e-05, -0.0005193791585043073, -0.0347152054309845, -2.239914894104004, -0.0076081277802586555], "finish_reason": "length"}], "metrics": {"energy": 906.9666643505095, "energy_per_token": 3.542838532619178, "time": 21.856466, "time_per_token": 0.0853768203125}}
{"outputs": [{"text": "# Ensure both the source directory and the destination directory exist\n    if not os.path.exists(src_dir) or not os.path.isdir(src_dir):\n        raise FileNotFoundError(f\"The source directory '{src_dir}' does not exist or is not a directory.\")\n\n    if not os.path.exists(dest_dir) or not os.path.isdir(dest_dir):\n        raise FileNotFoundError(f\"The destination directory '{dest_dir}' does not exist or is not a directory.\")\n\n    moved_files = []  # List to store the full paths of moved files\n\n    # Search for files with the specified extension in the source directory\n    src_pattern = os.path.join(src_dir, f\"*.{ext}\")\n    src_files = glob.glob(src_pattern)\n\n    for src_file in src_files:\n        # Check if the file already exists in the destination directory\n        file_name = os.path.basename(src_file)\n        dest_file = os.path.join(dest_dir, file", "tokens": ["#", " Ensure", " both", " the", " source", " directory", " and", " the", " destination", " directory", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "dir", ")", " or", " not", " os", ".", "path", ".", "is", "dir", "(", "src", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " source", " directory", " '", "{", "src", "_", "dir", "}'", " does", " not", " exist", " or", " is", " not", " a", " directory", ".", "\"", ")", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "dest", "_", "dir", ")", " or", " not", " os", ".", "path", ".", "is", "dir", "(", "dest", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " destination", " directory", " '", "{", "dest", "_", "dir", "}'", " does", " not", " exist", " or", " is", " not", " a", " directory", ".", "\"", ")", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " []", "  ", "#", " List", " to", " store", " the", " full", " paths", " of", " moved", " files", "\n", "\n", "    ", "#", " Search", " for", " files", " with", " the", " specified", " extension", " in", " the", " source", " directory", "\n", "    ", "src", "_", "pattern", " =", " os", ".", "path", ".", "join", "(", "src", "_", "dir", ",", " f", "\"", "*", ".", "{", "ext", "}\"", ")", "\n", "    ", "src", "_", "files", " =", " glob", ".", "glob", "(", "src", "_", "pattern", ")", "\n", "\n", "    ", "for", " src", "_", "file", " in", " src", "_", "files", ":", "\n", "        ", "#", " Check", " if", " the", " file", " already", " exists", " in", " the", " destination", " directory", "\n", "        ", "file", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "src", "_", "file", ")", "\n", "        ", "dest", "_", "file", " =", " os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " file"], "logprobs": [-1.2989866733551025, -2.730071544647217, -2.773435592651367, -2.1297430992126465, -0.036114465445280075, -2.145233154296875, -0.010548313148319721, -0.7675760984420776, -0.006871166173368692, -0.008129838854074478, -0.046865250915288925, -0.15900260210037231, -0.006367513909935951, -0.08848127722740173, -0.014060014858841896, -0.04546456038951874, -2.264974000354414e-06, -0.0006772369961254299, -2.932505594799295e-05, -0.22373893857002258, -0.00015531764074694365, -0.00892057828605175, -1.8596476365928538e-05, -1.0967194612021558e-05, -2.0905890464782715, -0.025148387998342514, -0.0017606009496375918, -0.00025686301523819566, -9.536738616588991e-07, -0.0001426833332516253, -2.9802276912960224e-06, -0.9257127642631531, -5.2569914259947836e-05, -0.00010311071673640981, -0.0008073169738054276, -9.298280929215252e-06, -4.768370445162873e-07, -0.05178108811378479, -0.0018042728770524263, -0.0033130538649857044, -0.021503983065485954, -0.018259411677718163, -0.0002374367177253589, -9.298280929215252e-06, -0.023532969877123833, -0.16630348563194275, -0.060661982744932175, -2.034281015396118, -0.16491958498954773, -0.009940761141479015, -0.6399770379066467, -0.000188332938705571, -0.0021287179552018642, -3.2066785934148356e-05, -7.629365427419543e-06, -0.001459962804801762, -0.04057152941823006, -0.0003586364327929914, -0.001143040368333459, -0.3052523136138916, -0.026359546929597855, -0.001291037304326892, -0.004631862044334412, -0.30281686782836914, -0.13082557916641235, -0.003666109871119261, -0.00037245964631438255, -0.0006093314150348306, -1.317245364189148, -0.00026222606538794935, -0.018094120547175407, -0.0014602008741348982, -0.0003389737685211003, -4.768370445162873e-07, -6.198863957251888e-06, -3.576278118089249e-07, -0.0005061537376604974, -2.658331868587993e-05, -0.0009890670189633965, -1.8715683836489916e-05, -3.576278118089249e-07, -0.004757513292133808, -0.00040451448876410723, -0.00018153927521780133, -3.015949550899677e-05, -1.1920928244535389e-07, -1.1920922133867862e-06, 0.0, -0.00010442188795423135, -3.3378546504536644e-06, -5.7338023907504976e-05, -0.0002946419408544898, -4.887569048150908e-06, -4.768370445162873e-07, -0.0003071551618631929, -0.00016759421851020306, -0.0006258912617340684, -0.0008526980527676642, -0.0004551566671580076, -0.00023112009512260556, -2.861018856492592e-06, -9.536288416711614e-05, -0.004002655856311321, -4.327203714638017e-05, -0.0006420934805646539, -0.001388658070936799, -0.0002935693773906678, -0.0010006187949329615, -3.6238969187252223e-05, -0.0013965149410068989, -4.768360213347478e-06, -7.986990567587782e-06, -0.0004060635983478278, -0.00019214690837543458, -2.3841574147809297e-05, -0.0001954841281985864, -0.0007531190640293062, -9.512448741588742e-05, -8.797258487902582e-05, -0.00012242044613230973, -3.731181277544238e-05, -0.0009470268851146102, -0.00018714107864070684, -0.00013147920253686607, -0.0005790702416561544, -0.032428521662950516, -0.002579340012744069, -1.5596795082092285, -0.0029452538583427668, -0.008116240613162518, -0.027554050087928772, -0.00991007313132286, -0.012561369687318802, -1.8818600177764893, -2.9801878554280847e-05, -1.4328218698501587, -0.02984483540058136, -0.24348372220993042, -0.19367291033267975, -0.46701598167419434, -0.02487284131348133, -0.0006173135479912162, -1.0793622732162476, -0.001019792165607214, -0.010083567351102829, -0.141136035323143, -0.0006805725861340761, -0.12859205901622772, -1.2220232486724854, -0.04016679525375366, -0.047044165432453156, -0.5085404515266418, -0.03420960530638695, -0.28231269121170044, -0.002788110403344035, -0.07143639028072357, -0.0015254301251843572, -0.010488742962479591, -0.001127441762946546, -0.08009412884712219, -0.0002942844294011593, -2.3889219760894775, -0.0011062461417168379, -2.0477099418640137, -0.000933807052206248, -0.08553040027618408, -1.311301275563892e-06, -2.2649508537142538e-05, -3.6954811548639555e-06, -0.0013054428854957223, -0.0002944036095868796, -0.0024469930212944746, -2.264974000354414e-06, -1.5497195136049413e-06, -0.00019441144831944257, -0.042546238750219345, -0.5388302803039551, -0.39749079942703247, -0.00026639728457666934, -7.295342220459133e-05, -5.4596363042946905e-05, -0.0024535334669053555, -0.00044645831803791225, -0.0629042237997055, -0.09736693650484085, -0.3784373700618744, -0.00012766500003635883, -0.013235685415565968, -0.0016235039802268147, -0.016913339495658875, -1.2874520507466514e-05, -0.02141554094851017, -1.2636104656849056e-05, -0.0012613920262083411, -1.1920922133867862e-06, -8.344646857949556e-07, -0.025744682177901268, -0.021117370575666428, -0.029513057321310043, -0.0003303935518488288, -0.3646363615989685, -0.09446204453706741, -0.013094739988446236, -0.018769394606351852, -0.040317829698324203, -0.00041654970846138895, -3.576278118089249e-07, -1.0371154530730564e-05, -3.158996332786046e-05, -0.0033260048367083073, -0.005491291638463736, -1.4143089056015015, -1.072704792022705, -0.012514987029135227, -0.29739558696746826, -0.0738377794623375, -0.9278399348258972, -0.00025412190007045865, -0.003472372191026807, -0.0007216709782369435, -0.0011064843274652958, -0.004003843292593956, -0.10357207804918289, -0.0004757702990900725, -1.2919560670852661, -0.0017138330731540918, -0.03649038448929787, -0.0012269833823665977, -0.0003743662964552641, -2.3841855067985307e-07, -5.960462772236497e-07, 0.0, -0.0005701346672140062, 0.0, -1.1920922133867862e-06, -0.00015400654228869826, -1.5497195136049413e-06, -1.4543427823809907e-05, -0.00014184899919200689, -0.01108440849930048, -0.01483034249395132, -0.1818190962076187, -0.0007468056865036488, -0.1351701319217682, -0.033944495022296906, -0.00047255316167138517, 0.0, -9.536738616588991e-07, 0.0, -0.0002978596603497863, -3.3378546504536644e-06, -0.00012063252506777644, -2.622600959512056e-06, -2.3841855067985307e-07, -3.1470757676288486e-05, -0.0007786102942191064], "finish_reason": "length"}], "metrics": {"energy": 885.2604946498867, "energy_per_token": 3.45804880722612, "time": 21.845732, "time_per_token": 0.085334890625}}
{"outputs": [{"text": "if not os.path.exists(src_dir) or not os.path.exists(dest_dir):\n        raise FileNotFoundError(\"The source or destination directory does not exist.\")\n\n    file_list = glob.glob(f\"{src_dir}/*.{ext}\")  # Get all files with specified extension from the source directory\n    moved_files = []\n\n    for file in file_list:\n        file_name = os.path.basename(file)  # Get the file name without the path\n\n        if os.path.exists(os.path.join(dest_dir, file_name)):  # Check if a file with the same name exists in the destination directory\n            print(f\"A file with the name {file_name} already exists in {dest_dir}. Skipping this file.\")\n            continue\n\n        shutil.move(file, dest_dir)  # Move the file to the destination directory\n        moved_files.append(file)  # Add the file path to the list of moved files\n\n    return moved_files", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "dir", ")", " or", " not", " os", ".", "path", ".", "exists", "(", "dest", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "The", " source", " or", " destination", " directory", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "file", "_", "list", " =", " glob", ".", "glob", "(", "f", "\"", "{", "src", "_", "dir", "}", "/*", ".", "{", "ext", "}\"", ")", "  ", "#", " Get", " all", " files", " with", " specified", " extension", " from", " the", " source", " directory", "\n", "    ", "m", "oved", "_", "files", " =", " []", "\n", "\n", "    ", "for", " file", " in", " file", "_", "list", ":", "\n", "        ", "file", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", "  ", "#", " Get", " the", " file", " name", " without", " the", " path", "\n", "\n", "        ", "if", " os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " file", "_", "name", "))", ":", "  ", "#", " Check", " if", " a", " file", " with", " the", " same", " name", " exists", " in", " the", " destination", " directory", "\n", "            ", "print", "(", "f", "\"", "A", " file", " with", " the", " name", " {", "file", "_", "name", "}", " already", " exists", " in", " {", "dest", "_", "dir", "}", ".", " Sk", "ipping", " this", " file", ".", "\"", ")", "\n", "            ", "continue", "\n", "\n", "        ", "sh", "util", ".", "move", "(", "file", ",", " dest", "_", "dir", ")", "  ", "#", " Move", " the", " file", " to", " the", " destination", " directory", "\n", "        ", "m", "oved", "_", "files", ".", "append", "(", "file", ")", "  ", "#", " Add", " the", " file", " path", " to", " the", " list", " of", " moved", " files", "\n", "\n", "    ", "return", " moved", "_", "files", "\n", "\n", "#"], "logprobs": [-1.682251214981079, -0.017950579524040222, -0.04380543902516365, -1.3589766240329482e-05, -0.0015824426664039493, -1.5139465176616795e-05, -0.23263944685459137, -0.00019226610311307013, -0.01610930822789669, -1.2040065485052764e-05, -9.059865078597795e-06, -2.1132912635803223, -0.018223123624920845, -0.0012173393042758107, -0.0002711643755901605, -1.0728830375228426e-06, -0.0008255410939455032, -2.0265558760002023e-06, -0.06870218366384506, -0.00010644822759786621, -0.005465208552777767, -1.883488948806189e-05, -5.960462772236497e-07, -0.002045683329924941, -0.004971167538315058, -0.015019074082374573, -0.03740992397069931, -0.00788729079067707, -0.0001392267586197704, -1.4543427823809907e-05, -0.10819154232740402, -0.16435669362545013, -3.0195322036743164, -0.40666791796684265, -0.09307122230529785, -0.007341430988162756, -0.011650852859020233, -0.04523887857794762, -0.0003352795320097357, -0.002924928907305002, -0.41920170187950134, -0.008472805842757225, -0.0007260785205289721, -0.000900101731531322, -0.1355080008506775, -0.0007014198345132172, -3.377699851989746, -0.03649222105741501, -1.144962191581726, -0.006915681064128876, -0.22929903864860535, -0.00017379203927703202, -0.009574091993272305, -0.0027092916425317526, -1.5599353313446045, -0.11622840166091919, -0.0018068907083943486, -0.017471572384238243, -6.198863957251888e-06, -7.557583012385294e-05, -0.18127289414405823, -0.008247839286923409, -0.025269046425819397, -0.0003203832311555743, -0.00010132275929208845, -0.0023261650931090117, -0.008924596011638641, -2.1377391815185547, -0.00029905137489549816, -1.703583836555481, -1.1538422107696533, -0.13837885856628418, -0.19659999012947083, -2.3945508003234863, -0.020191248506307602, -2.758406639099121, -1.1703999042510986, -0.10528095066547394, -0.04731912910938263, -0.02249416522681713, -0.27300742268562317, -0.13247591257095337, -0.0017377528129145503, -0.014969751238822937, -0.06087299436330795, -0.00705726258456707, -0.007940275594592094, -0.19988112151622772, -0.259415864944458, -0.00032824851223267615, -0.0563826709985733, -0.148968905210495, -0.5682271122932434, -0.0018286664271727204, -2.145764938177308e-06, -1.1920928244535389e-07, -0.0001896439935080707, -0.009663233533501625, -0.006501474883407354, -1.1783124208450317, -0.0026148909237235785, -0.04975592717528343, -0.0020732830744236708, -0.0015460216673091054, -2.0265558760002023e-06, -1.2278481335670222e-05, -9.536738616588991e-07, -0.004565529990941286, -1.1920928244535389e-07, -3.3378546504536644e-06, -0.0002712835557758808, -0.000262106885202229, -1.7509422302246094, -1.7046782886609435e-05, -0.3571837842464447, -0.2551482915878296, -0.288492351770401, -0.007564472034573555, -1.0168564319610596, -0.44777539372444153, -0.4348752796649933, -0.014128776267170906, -1.8241827487945557, -0.0010484919184818864, -0.7695738673210144, -0.1902192384004593, -1.7881377516459906e-06, -4.60137271147687e-05, -9.536738616588991e-07, -0.10422050952911377, -0.00010942813969450071, -0.11771521717309952, -2.3841855067985307e-07, -4.6491513785440475e-06, -1.1920928244535389e-07, -7.080780778778717e-05, -1.5020257706055418e-05, -0.001100768567994237, -7.748573807475623e-06, -7.152555099310121e-07, -5.9960475482512265e-05, -0.002139067044481635, -0.00040260792593471706, -1.597391747054644e-05, -0.00010430268594063818, -0.0015504255425184965, -0.33974790573120117, -1.2993727978027891e-05, -0.08147948235273361, -0.028440475463867188, -1.587831974029541, -0.0043462105095386505, -0.006750871893018484, -0.019613375887274742, -0.00024291902082040906, -0.0003357561945449561, -0.6795724034309387, -0.005786572117358446, -0.04254749417304993, -0.03873271495103836, -0.11966952681541443, -0.004369355272501707, -0.0019280193373560905, -0.6562840342521667, -0.001166140311397612, -0.036684952676296234, -0.008594665676355362, -1.273192048072815, -0.0011385156540200114, -0.038828928023576736, -0.06908785551786423, -0.5767488479614258, -0.6875789165496826, -0.0018120075110346079, -0.004761191550642252, -1.4662635294371285e-05, -0.00041654970846138895, -0.003730839118361473, -0.0002557904226705432, -0.00417931517586112, -2.3309524059295654, -0.002041519619524479, -0.0001954841281985864, -2.0265373677830212e-05, -0.0677049309015274, -0.072634257376194, -0.12880179286003113, -0.0026257107965648174, -2.062074661254883, -0.002292506629601121, -0.00873471051454544, -0.01685965619981289, -0.00034624303225427866, -0.031040847301483154, -0.3631265461444855, -0.008513348177075386, -0.07957915216684341, -0.02306501753628254, -0.0007812308613210917, -0.3163304328918457, -1.0728830375228426e-06, -9.536738616588991e-07, -0.019147561863064766, -7.271740287251305e-06, -0.004979826509952545, -0.00013982271775603294, -0.09566928446292877, -1.1444026313256472e-05, -2.264974000354414e-06, -0.005067599471658468, -0.12750789523124695, -1.0251946150674485e-05, -0.005225215572863817, -0.06063415855169296, -0.0016408802475780249, -0.1464017629623413, -0.009855893440544605, -0.002404181519523263, -0.004549272358417511, -0.022595565766096115, -0.010896112769842148, -0.12540629506111145, -6.079655122448457e-06, -1.4066597032069694e-05, -0.000359351426595822, -7.986703712958843e-05, -0.00017093151109293103, -0.00029047083808109164, -0.8631711602210999, -0.007034416776150465, -0.6405115723609924, -4.172316494077677e-06, -0.22254762053489685, -0.048265233635902405, -1.1707086563110352, -0.7048469185829163, -0.023276660591363907, -0.017300527542829514, -0.314008504152298, -0.021215058863162994, -0.07112390547990799, -0.006186976097524166, -0.007553705479949713, -0.10589782893657684, -0.006583311595022678, -0.035922661423683167, -0.001007645158097148, -8.22540732769994e-06, -1.4305104514278355e-06, -0.435984343290329, -0.012506864033639431, -1.5618339776992798], "finish_reason": "stop"}], "metrics": {"energy": 861.1800265846252, "energy_per_token": 3.417381057875497, "time": 21.43531, "time_per_token": 0.08506075396825398}}
{"outputs": [{"text": "moved_files = []\n\n    # Check if source and destination directories exist\n    if not os.path.isdir(src_dir):\n        raise FileNotFoundError(f\"Source directory '{src_dir}' does not exist\")\n    if not os.path.isdir(dest_dir):\n        raise FileNotFoundError(f\"Destination directory '{dest_dir}' does not exist\")\n\n    # Find files with matching extension in the source directory\n    matching_files = glob.glob(os.path.join(src_dir, f\"*.{ext}\"))\n\n    # Move files to the destination directory\n    for file in matching_files:\n        filename = os.path.basename(file)\n        if os.path.exists(os.path.join(dest_dir, filename)):\n            print(f\"File '{filename}' already exists in the destination directory. Skipping.\")\n        else:\n            shutil.move(file, dest_dir)\n            moved_files.append(file)\n\n    return moved_files", "tokens": ["m", "oved", "_", "files", " =", " []", "\n", "\n", "    ", "#", " Check", " if", " source", " and", " destination", " directories", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "src", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " '", "{", "src", "_", "dir", "}'", " does", " not", " exist", "\"", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "dest", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Dest", "ination", " directory", " '", "{", "dest", "_", "dir", "}'", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "#", " Find", " files", " with", " matching", " extension", " in", " the", " source", " directory", "\n", "    ", "matching", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "src", "_", "dir", ",", " f", "\"", "*", ".", "{", "ext", "}\"", "))", "\n", "\n", "    ", "#", " Move", " files", " to", " the", " destination", " directory", "\n", "    ", "for", " file", " in", " matching", "_", "files", ":", "\n", "        ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", "\n", "        ", "if", " os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " filename", "))", ":", "\n", "            ", "print", "(", "f", "\"", "File", " '", "{", "filename", "}'", " already", " exists", " in", " the", " destination", " directory", ".", " Sk", "ipping", ".", "\"", ")", "\n", "        ", "else", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " dest", "_", "dir", ")", "\n", "            ", "m", "oved", "_", "files", ".", "append", "(", "file", ")", "\n", "\n", "    ", "return", " moved", "_", "files", "\n", "\n", "def"], "logprobs": [-1.8471472263336182, -0.0031198421493172646, -0.014057781547307968, -0.031826846301555634, -0.014863112010061741, -0.010469986125826836, -0.03696530684828758, -0.9825433492660522, -0.001341158407740295, -0.7432767748832703, -0.5829278826713562, -0.06219929829239845, -1.2079062461853027, -0.4772479236125946, -0.013184038922190666, -0.0385870635509491, -0.025659287348389626, -0.07853726297616959, -0.0009789442410692573, -0.026996197178959846, -0.02215643972158432, -0.02372809872031212, -9.536738616588991e-07, -0.00019608005823101848, -3.576272320060525e-06, -1.6870203018188477, -2.3841574147809297e-05, -3.957670196541585e-05, -0.0032743194606155157, -1.168244216387393e-05, -2.0503786799963564e-05, -0.2477470189332962, -0.002334252465516329, -0.0025006234645843506, -0.016139337792992592, -0.006331148557364941, -0.00013934595335740596, -7.390948667307384e-06, -0.01960110105574131, -0.121293805539608, -0.04101225361227989, -0.09222899377346039, -0.0012325793504714966, -0.43313705921173096, -7.366862701019272e-05, -0.0013494918821379542, -2.8967437174287625e-05, -2.098061486321967e-05, -0.0008000510279089212, -0.1810428500175476, -0.00013040646445006132, -0.0003511289251036942, -0.9927721619606018, -0.00018308870494365692, -0.0004027270770166069, -0.2461187243461609, -0.020799962803721428, -0.0023652929812669754, -5.900685573578812e-05, -1.1920928244535389e-07, -2.8609820219571702e-05, -3.814689989667386e-06, -0.0012386515736579895, -8.940656698541716e-06, -1.5139465176616795e-05, -0.00062851223628968, -1.1205610462639015e-05, -1.311301275563892e-06, -0.0004704084130935371, -0.00019774865359067917, -0.0003303935518488288, -0.0023419829085469246, -0.00010716341057559475, -6.90197994117625e-05, -6.318072337307967e-06, -9.452849917579442e-05, -0.00435119541361928, -4.8874615458771586e-05, -0.0010667116148397326, -6.723177648382261e-05, -0.00011228884250158444, -0.0010081215295940638, -2.396077979938127e-05, -0.001050635357387364, -9.298280929215252e-06, -6.079655122448457e-06, -0.00015198028995655477, -0.00015698630886618048, -3.9457496313843876e-05, -0.0002002515539061278, -0.0018185520311817527, -8.606540359323844e-05, -0.00010013079008786008, -0.020925700664520264, -0.0006910558440722525, -0.13783696293830872, -1.8538180589675903, -0.24827587604522705, -0.39371198415756226, -2.504485607147217, -0.0928412601351738, -0.25878071784973145, -0.3732321858406067, -0.006302362773567438, -0.0023260461166501045, -0.015600312501192093, -0.00039772229501977563, -2.455281972885132, -0.0011070796754211187, -0.008084549568593502, -0.0014217516873031855, -0.0267043299973011, -0.00010406429646536708, -0.008690276183187962, -0.0003541081096045673, -0.19353429973125458, -3.576278118089249e-07, -1.3947389561508317e-05, -7.748573807475623e-06, -0.0002795067266561091, -7.068861305015162e-05, -0.0007516896002925932, -4.0531076592742465e-06, -8.344646857949556e-07, -0.00012838016846217215, -0.027599161490797997, -0.3649981617927551, -0.2720348834991455, -9.905801562126726e-05, -4.994744449504651e-05, -0.00014852374442853034, -0.0028547984547913074, -0.002572800265625119, -0.002141327131539583, -0.09453059732913971, -0.0001716466504149139, -0.8786337375640869, -0.09289991855621338, -0.40931838750839233, -0.2184714823961258, -0.1437244564294815, -0.0010411086259409785, -0.006995471194386482, -0.26499244570732117, -0.00026651646476238966, -0.003660408779978752, -0.12946036458015442, -1.0713515281677246, -0.0004737447015941143, -1.1920928244535389e-07, 0.0, -4.672895011026412e-05, -0.0001902399235405028, -0.0034815194085240364, -0.9253593683242798, -0.0009864469757303596, -0.00011872540198964998, -1.1920928244535389e-07, -7.152555099310121e-07, -1.1920928244535389e-07, -0.0009765623253770173, 0.0, -1.4305104514278355e-06, -8.046303264563903e-05, -6.723177648382261e-05, -0.013306385837495327, -0.1512865424156189, -0.9400747418403625, -0.37636637687683105, -1.0728830375228426e-06, -5.125868119648658e-05, -2.3841855067985307e-07, -0.30746719241142273, -5.793403761344962e-05, -0.0009322587866336107, -4.768370445162873e-07, -1.311301275563892e-06, -1.1920928244535389e-07, -1.490105023549404e-05, -1.4185804502631072e-05, -0.0006812873762100935, -9.894321920000948e-06, -3.3378546504536644e-06, -2.3245540432981215e-05, -0.001061352901160717, -3.433168603805825e-05, -0.0016424274072051048, -0.1590900421142578, -0.0004993622424080968, -1.0205533504486084, -0.000539634027518332, -0.04557117447257042, -0.0020873204339295626, -0.5417989492416382, -0.05026404932141304, -3.0517112463712692e-05, -0.015176186338067055, -0.0012496052077040076, -0.005272056441754103, -0.00029583368450403214, -0.0023229538928717375, -0.2801980674266815, -0.0009859706042334437, -0.012721458449959755, -0.39756569266319275, -0.044262874871492386, -0.0021865288726985455, -0.10704303532838821, -0.35419854521751404, -0.0001573438785271719, -0.0010436094598844647, -0.6266413331031799, -0.0013672299683094025, -1.0847986231965479e-05, -0.0006233894382603467, -0.00027092601521871984, -0.1867167055606842, -1.1920922133867862e-06, -9.536738616588991e-07, -0.007011215202510357, -3.099436753473128e-06, -0.005358618218451738, -7.760223525110632e-05, -0.08087363839149475, -1.2755313036905136e-05, -2.622600959512056e-06, -0.0006914132391102612, -0.004092770162969828, -0.0009999042376875877, -0.049555037170648575, -1.1324817933200393e-05, -1.6927575416048057e-05, -0.00022063204960431904, -4.279521817807108e-05, -0.00024005869636312127, -0.00028534632292576134, -0.8073920607566833, -0.0006006343755871058, -0.036984723061323166, -0.19733156263828278, -0.0013667537132278085, -0.034653373062610626, -0.001408895361237228, -6.318072337307967e-06, -4.172316494077677e-06, -0.2930029332637787, -0.012815497815608978, -2.2568087577819824], "finish_reason": "stop"}], "metrics": {"energy": 883.4220001983647, "energy_per_token": 3.562185484670825, "time": 21.021605, "time_per_token": 0.08476453629032259}}
{"outputs": [{"text": "# Check if source and destination directories exist\n    if not os.path.exists(src_dir):\n        raise FileNotFoundError(\"Source directory not found: \" + src_dir)\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(\"Destination directory not found: \" + dest_dir)\n\n    moved_files = []\n\n    # Use glob to find files with the specified extension in the source directory\n    for path in glob.glob(os.path.join(src_dir, '*.' + ext)):\n        file_name = os.path.basename(path)\n        dest_path = os.path.join(dest_dir, file_name)\n\n        # Check if the destination file exists\n        if os.path.exists(dest_path):\n            print(f\"File '{file_name}' already exists in destination directory. Skipping...\")\n        else:\n            shutil.move(path, dest_dir)\n            moved_files.append(dest_path)\n\n    return moved_files", "tokens": ["#", " Check", " if", " source", " and", " destination", " directories", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Source", " directory", " not", " found", ":", " \"", " +", " src", "_", "dir", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "dest", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Dest", "ination", " directory", " not", " found", ":", " \"", " +", " dest", "_", "dir", ")", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " []", "\n", "\n", "    ", "#", " Use", " glob", " to", " find", " files", " with", " the", " specified", " extension", " in", " the", " source", " directory", "\n", "    ", "for", " path", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "src", "_", "dir", ",", " '", "*", ".", "'", " +", " ext", "))", ":", "\n", "        ", "file", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "path", ")", "\n", "        ", "dest", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " file", "_", "name", ")", "\n", "\n", "        ", "#", " Check", " if", " the", " destination", " file", " exists", "\n", "        ", "if", " os", ".", "path", ".", "exists", "(", "dest", "_", "path", "):", "\n", "            ", "print", "(", "f", "\"", "File", " '", "{", "file", "_", "name", "}'", " already", " exists", " in", " destination", " directory", ".", " Sk", "ipping", ".", ".", ".", "\"", ")", "\n", "        ", "else", ":", "\n", "            ", "sh", "util", ".", "move", "(", "path", ",", " dest", "_", "dir", ")", "\n", "            ", "m", "oved", "_", "files", ".", "append", "(", "dest", "_", "path", ")", "\n", "\n", "    ", "return", " moved", "_", "files", "\n", "\n", "if"], "logprobs": [-1.2989866733551025, -0.760466992855072, -0.09539104253053665, -1.288465976715088, -0.4601391553878784, -0.021731937304139137, -0.04951045289635658, -0.0351371131837368, -0.09369784593582153, -0.004132778849452734, -0.02945900335907936, -0.007852636277675629, -0.02734261564910412, -1.4305104514278355e-06, -0.0002026352594839409, -1.2636104656849056e-05, -0.18163104355335236, -6.639736966462806e-05, -0.0036960402503609657, -1.0251946150674485e-05, -6.556489552167477e-06, -0.06025071069598198, -0.002985783852636814, -0.003640573238953948, -0.013804322108626366, -0.005847608670592308, -0.00017212340026162565, -1.1444026313256472e-05, -0.021205605939030647, -1.8743524551391602, -0.06866367161273956, -0.0025000290479511023, -1.9610943794250488, -0.0013867533998563886, -1.8663933277130127, -0.3988400399684906, -0.02376069501042366, -0.051586829125881195, -7.748303323751315e-05, -1.6569954823353328e-05, -0.0009012927766889334, -0.0011469698511064053, -0.15426477789878845, -0.017640013247728348, -0.00044907975825481117, -0.0001232548092957586, -1.1920928244535389e-07, -1.4781842764932662e-05, -9.536738616588991e-07, -0.0008837846689857543, -4.756337511935271e-05, -0.0011535187950357795, -8.34461570775602e-06, -8.344646857949556e-07, -0.0006640136707574129, -0.0002712835557758808, -0.0004836343287024647, -0.0010558750946074724, -0.00013100242358632386, -4.31528314948082e-05, -8.4638240878121e-06, -0.00034671969478949904, -0.000586695212405175, -0.0008170842193067074, -7.30726242181845e-05, -0.00017212340026162565, -0.0008811643347144127, -2.682172998902388e-05, -0.0022600365336984396, -3.7788631743751466e-05, -0.0003134713042527437, -0.005434975493699312, -0.00016878610767889768, -6.389413465512916e-05, -0.00015090756642166525, -0.00038509105797857046, -0.07196278870105743, -0.000849482137709856, -1.3430359363555908, -0.0021475127432495356, -0.008221946656703949, -0.03317803144454956, -0.007763096131384373, -0.007569795940071344, -0.13042877614498138, -0.7644064426422119, -0.0004260824352968484, -0.16211184859275818, -3.7818410396575928, -0.09354032576084137, -0.09549376368522644, -0.5847728848457336, -0.3840864896774292, -0.3250894546508789, -0.14058339595794678, -0.31663239002227783, -0.0029735418502241373, -0.3568199872970581, -0.019562290981411934, -0.0266595259308815, -0.0037908137310296297, -0.01533573865890503, -0.00027176024741493165, -0.8082754611968994, -3.0849483013153076, -0.07199341058731079, -0.0028646644204854965, -3.981510963058099e-05, -0.05793197453022003, -0.0007784912013448775, -0.05916567146778107, -4.768370445162873e-07, -1.6093124941107817e-05, -7.390948667307384e-06, -0.0005155664402991533, -7.247662142617628e-05, -0.00046921687317080796, -4.0531076592742465e-06, -2.861018856492592e-06, -0.0003843760641757399, -1.2792625427246094, -0.0039043400902301073, -0.021687960252165794, -0.05891743302345276, -2.2172682292875834e-05, -0.00024387246230617166, -0.009354333393275738, -0.00015948931104503572, -0.004637557547539473, -0.03312037140130997, -1.4243249893188477, -0.10642697662115097, -0.015146949328482151, -0.0007419217727147043, -0.0006422125734388828, -3.576278118089249e-07, -3.576278118089249e-07, -2.3841855067985307e-07, -0.00110041128937155, -1.1920928244535389e-07, -1.1920922133867862e-06, -0.00021634146105498075, -0.00024303820100612938, -0.032878387719392776, -0.5681183934211731, -0.4456137418746948, -0.027149582281708717, -0.17061172425746918, -0.00040070133400149643, -0.0015116228023543954, -1.1920928244535389e-07, -7.152555099310121e-07, 0.0, -0.0002714027068577707, -9.298280929215252e-06, -0.0002348147245356813, -3.576272320060525e-06, -8.344646857949556e-07, -0.00010656742961145937, -0.0015165030490607023, -3.576272320060525e-06, -2.3841855067985307e-07, -5.829164365422912e-05, -0.006627010181546211, -0.23305019736289978, -0.0007497837068513036, -0.04866431653499603, -0.2591587007045746, -0.0042772479355335236, -0.6758344769477844, -2.732919692993164, -0.10894005000591278, -2.4037723541259766, -1.867441177368164, -0.0002488780301064253, -0.004352857358753681, -0.159373477101326, -3.576278118089249e-07, -2.145764938177308e-06, -7.152555099310121e-07, -0.0441555492579937, -9.894321920000948e-06, -0.0004291805380489677, -2.145764938177308e-06, -1.1324817933200393e-05, -0.0038194339722394943, -0.0006217215559445322, -0.0006574614671990275, -0.20238621532917023, -0.012633413076400757, -0.45220598578453064, -0.05883302912116051, -0.592514157295227, -0.8096396923065186, -4.9470632802695036e-05, -0.02762223780155182, -6.05564855504781e-05, -1.0728830375228426e-06, -0.0020217709243297577, -0.007493837736546993, -0.0007346553611569107, -0.005309409461915493, -1.7140549421310425, -0.04402129352092743, -0.24942590296268463, -0.0590997114777565, -0.0016265984158962965, -0.07961317151784897, -1.4845675230026245, -0.005089660175144672, -0.001016457681544125, -0.0002673506969586015, -0.0009112972766160965, -0.7155889868736267, -0.00243831193074584, -1.8715683836489916e-05, -0.0022735956590622663, -0.0014078239910304546, -1.0792114734649658, -1.4305104514278355e-06, -3.576278118089249e-07, -0.010920285247266293, -7.152531907195225e-06, -0.0007764662150293589, -4.470248313737102e-05, -0.0036061275750398636, -4.0411134250462055e-05, -0.956538736820221, -0.0004258441040292382, -0.03345602750778198, -0.000813034363090992, -0.12195891886949539, -4.410734163684538e-06, -5.364403477869928e-06, -7.688703772146255e-05, -3.9934315282152966e-05, -0.00017295771976932883, -0.00013541258522309363, -0.5479309558868408, -3.3378546504536644e-06, -0.00011848701251437888, -0.00032479254878126085, -0.009677991271018982, -0.34298795461654663, -0.002160121686756611, -0.027607858180999756, -0.0004539651272352785, -7.152531907195225e-06, -2.3841830625315197e-06, -0.42895281314849854, -0.013417072594165802, -0.6627318859100342], "finish_reason": "stop"}], "metrics": {"energy": 848.6351167879103, "energy_per_token": 3.367599669793295, "time": 21.43664, "time_per_token": 0.08506603174603175}}
{"outputs": [{"text": "if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"Source directory '{src_dir}' not found.\")\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(f\"Destination directory '{dest_dir}' not found.\")\n\n    moved_files = []\n    for file in glob.glob(f\"{src_dir}/*.{ext}\"):\n        filename = os.path.basename(file)\n        if os.path.exists(os.path.join(dest_dir, filename)):\n            print(f\"{filename} already exists in the destination directory. Skipping.\")\n            continue\n        shutil.move(file, dest_dir)\n        moved_files.append(os.path.join(dest_dir, filename))\n    return moved_files", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " '", "{", "src", "_", "dir", "}'", " not", " found", ".", "\"", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "dest", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Dest", "ination", " directory", " '", "{", "dest", "_", "dir", "}'", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " []", "\n", "    ", "for", " file", " in", " glob", ".", "glob", "(", "f", "\"", "{", "src", "_", "dir", "}", "/*", ".", "{", "ext", "}\"", "):", "\n", "        ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", "\n", "        ", "if", " os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " filename", "))", ":", "\n", "            ", "print", "(", "f", "\"", "{", "filename", "}", " already", " exists", " in", " the", " destination", " directory", ".", " Sk", "ipping", ".", "\"", ")", "\n", "            ", "continue", "\n", "        ", "sh", "util", ".", "move", "(", "file", ",", " dest", "_", "dir", ")", "\n", "        ", "m", "oved", "_", "files", ".", "append", "(", "os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " filename", "))", "\n", "    ", "return", " moved", "_", "files"], "logprobs": [-1.682251214981079, -0.017950579524040222, -0.04380543902516365, -1.3589766240329482e-05, -0.0015824426664039493, -1.5139465176616795e-05, -0.23263944685459137, -0.00019226610311307013, -0.01610930822789669, -1.2040065485052764e-05, -9.059865078597795e-06, -0.1295761913061142, -0.013173921033740044, -0.011553286574780941, -0.029212428256869316, -0.008275032043457031, -0.0002252801787108183, -1.7404405298293568e-05, -0.039287958294153214, -0.20430408418178558, -0.08036378771066666, -0.20710189640522003, -0.004133610054850578, -0.755115807056427, -0.00011503035057103261, -0.001943843555636704, -1.2874520507466514e-05, -9.298280929215252e-06, -0.0017254954436793923, -1.89864981174469, -0.00038675934774801135, -0.5177540183067322, -0.007901838049292564, -0.0002026352594839409, -0.0009078433504328132, -0.4562447667121887, -0.013551033101975918, -0.0008388814167119563, -0.00011276562872808427, -1.1920928244535389e-07, -1.1444026313256472e-05, -2.0265558760002023e-06, -0.000448841426987201, -8.5588610090781e-05, -0.0024027545005083084, -7.867782187531702e-06, -1.6689286894688848e-06, -0.0007823029300197959, -0.00022849810193292797, -0.0007873057620599866, -0.0012518672738224268, -0.0002499506517779082, -3.909988299710676e-05, -3.0517112463712692e-05, -0.00014375607133843005, -0.004643728025257587, -9.667406266089529e-05, -0.002031407319009304, -0.00017069313616957515, -0.00018475732940714806, -0.0011543523287400603, -2.706014311115723e-05, -0.0013454442378133535, -6.6756979322235566e-06, -1.7881377516459906e-06, -0.00019178935326635838, -0.0015401893761008978, -5.2927523938706145e-05, -0.001140778069384396, -0.0002172949316445738, -0.00010466027742950246, -0.00024303820100612938, -0.22821290791034698, -0.0007676515378989279, -0.9657555222511292, -0.0026871783193200827, -0.007322852034121752, -0.016853561624884605, -0.006341335829347372, -0.008819318376481533, -0.027667809277772903, -0.26498740911483765, -0.8434014916419983, -0.2492872029542923, -0.3637332022190094, -0.043171871453523636, -3.635817120084539e-05, -0.1091417595744133, -0.0003058442671317607, -1.2312231063842773, -0.1169125884771347, -0.0007400158210657537, -0.019903814420104027, -5.245195097813848e-06, -8.34461570775602e-06, -0.17652806639671326, -0.003955992870032787, -0.021956807002425194, -0.00011753345461329445, -6.627816765103489e-05, -0.0019016055157408118, -0.015963135287165642, -0.012746881693601608, -0.004775546956807375, -0.5777730345726013, -0.0014805557439103723, -0.0010434903670102358, -4.768370445162873e-07, -6.6756979322235566e-06, -7.152555099310121e-07, -0.0021730875596404076, 0.0, -1.6689286894688848e-06, -0.00018559163436293602, -0.00020180096908006817, -0.004163763951510191, -0.01620502397418022, -0.30149045586586, -0.4822700023651123, -7.152555099310121e-07, -2.13382354559144e-05, -1.1920928244535389e-07, -0.10076666623353958, -5.23315102327615e-05, -0.046031560748815536, 0.0, -3.099436753473128e-06, -2.622600959512056e-06, -4.351044481154531e-05, -1.597391747054644e-05, -0.001032177242450416, -6.079655122448457e-06, -1.6689286894688848e-06, -5.185469490243122e-05, -0.0014292511623352766, -4.51792984677013e-05, -0.0012346034636721015, -0.025141878053545952, -0.0008790204883553088, -0.6072360277175903, -0.0008537700050510466, -0.049670178443193436, -0.0029835256282240152, -2.9761247634887695, -0.03361706808209419, -0.007080107927322388, -0.04231875389814377, -0.003839859738945961, -0.011096787638962269, -1.0180386304855347, -0.006313616875559092, -0.02075781300663948, -0.2266659289598465, -0.08134080469608307, -0.003070404287427664, -0.11122573912143707, -0.22572410106658936, -0.0001908358681248501, -0.0010110987350344658, -0.7195788621902466, -0.008976580575108528, -0.012402433902025223, -0.11424001306295395, -0.15847572684288025, -1.311301275563892e-06, -1.4305104514278355e-06, -0.010972637683153152, -5.364403477869928e-06, -0.0024876620154827833, -0.0001896439935080707, -0.11920014768838882, -1.8715683836489916e-05, -3.576278118089249e-07, -0.00199083867482841, -0.004737936891615391, -0.001291751628741622, -0.08255947381258011, -1.2278481335670222e-05, -2.0503786799963564e-05, -0.0002571013756096363, -7.879423355916515e-05, -0.00035482310340739787, -0.00033909291960299015, -0.6234026551246643, -5.722029527532868e-06, -5.8412379075889476e-06, -1.6689286894688848e-06, -0.026713846251368523, -0.00011562632425921038, -0.019259825348854065, -5.1377883210079744e-05, -3.814689989667386e-06, -4.541770613286644e-05, -0.002877264516428113, -0.0001864259538706392, -0.00341404159553349, -0.6421887278556824, -0.04323374852538109, -0.0010265801101922989, -1.9430925021879375e-05, -3.576272320060525e-06], "finish_reason": "stop"}], "metrics": {"energy": 695.5765323181155, "energy_per_token": 3.460579762776694, "time": 17.033546, "time_per_token": 0.08474400995024876}}
{"outputs": [{"text": "# Check if the source and destination directories exist\n    if not os.path.exists(src_dir) or not os.path.exists(dest_dir):\n        raise FileNotFoundError(\"Source or destination directory not found\")\n    # Use glob to search for files with the specified extension in the source directory\n    files = glob.glob(os.path.join(src_dir, f\"*.{ext}\"))\n    # Initialize an empty list to store moved file paths\n    moved_files = []\n    # Loop over each file found\n    for file in files:\n        # Get the file name without the path\n        filename = os.path.basename(file)\n        # Check if the file already exists in the destination directory\n        if os.path.exists(os.path.join(dest_dir, filename)):\n            print(f\"File {filename} already exists in {dest_dir}, skipping.\")\n            continue  # Skip if the file already exists\n        # Move the file\n        shutil.move(file, dest_dir)\n        # Add the full path of the moved file to the list\n        ", "tokens": ["#", " Check", " if", " the", " source", " and", " destination", " directories", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "dir", ")", " or", " not", " os", ".", "path", ".", "exists", "(", "dest", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Source", " or", " destination", " directory", " not", " found", "\"", ")", "\n", "    ", "#", " Use", " glob", " to", " search", " for", " files", " with", " the", " specified", " extension", " in", " the", " source", " directory", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "src", "_", "dir", ",", " f", "\"", "*", ".", "{", "ext", "}\"", "))", "\n", "    ", "#", " Initialize", " an", " empty", " list", " to", " store", " moved", " file", " paths", "\n", "    ", "m", "oved", "_", "files", " =", " []", "\n", "    ", "#", " Loop", " over", " each", " file", " found", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "#", " Get", " the", " file", " name", " without", " the", " path", "\n", "        ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", "\n", "        ", "#", " Check", " if", " the", " file", " already", " exists", " in", " the", " destination", " directory", "\n", "        ", "if", " os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " filename", "))", ":", "\n", "            ", "print", "(", "f", "\"", "File", " {", "filename", "}", " already", " exists", " in", " {", "dest", "_", "dir", "}", ",", " skipping", ".", "\"", ")", "\n", "            ", "continue", "  ", "#", " Skip", " if", " the", " file", " already", " exists", "\n", "        ", "#", " Move", " the", " file", "\n", "        ", "sh", "util", ".", "move", "(", "file", ",", " dest", "_", "dir", ")", "\n", "        ", "#", " Add", " the", " full", " path", " of", " the", " moved", " file", " to", " the", " list", "\n", "        "], "logprobs": [-1.2989866733551025, -0.760466992855072, -0.09539104253053665, -0.8136772513389587, -0.08158913999795914, -0.9907652735710144, -0.01379456277936697, -0.028739135712385178, -0.0380815789103508, -0.1267368197441101, -0.0044624037109315395, -0.024332687258720398, -0.008363224565982819, -0.018931066617369652, -1.311301275563892e-06, -0.00023040501400828362, -1.4066597032069694e-05, -0.18190616369247437, -5.709961988031864e-05, -0.0033275492023676634, -1.6331539882230572e-05, -1.0847986231965479e-05, -2.4006011486053467, -0.011692563071846962, -0.0006675875629298389, -0.00012432756193447858, -5.960462772236497e-07, -3.6477376852417365e-05, -5.960462772236497e-07, -0.15009705722332, -4.160317621426657e-05, -0.0011570908827707171, -1.4305012882687151e-05, -5.960462772236497e-07, -0.0013624681159853935, -0.0013988957507535815, -0.004353569354861975, -0.02973872981965542, -0.004624505061656237, -0.00016866691294126213, -7.629365427419543e-06, -0.05563107877969742, -0.09366679936647415, -0.24049080908298492, -0.0934852883219719, -0.012932829558849335, -0.0034771240316331387, -2.3152542114257812, -0.0005212855176068842, -0.9912410378456116, -0.0005770448478870094, -0.0010344398906454444, -2.6967601776123047, -0.46082746982574463, -3.5798327922821045, -0.2378210723400116, -0.18052130937576294, -1.2220535278320312, -0.02028108388185501, -0.07821177691221237, -0.6055357456207275, -0.0494212731719017, -0.4916685223579407, -0.004220151342451572, -0.2914593815803528, -0.007631906773895025, -0.023832283914089203, -0.002390980953350663, -0.019726287573575974, -0.004047773778438568, -0.8051889538764954, -0.1932675689458847, -0.016990110278129578, -9.226373367710039e-05, -0.01073526032269001, -0.0007985025877133012, -0.24963563680648804, -1.311301275563892e-06, -1.0251946150674485e-05, -7.986990567587782e-06, -0.0004161922261118889, -5.9126061387360096e-05, -0.0012137673329561949, -9.894321920000948e-06, -1.7881377516459906e-06, -0.00032109825406223536, -0.11631595343351364, -0.2717148959636688, -0.338940292596817, -0.00010382589971413836, -0.00010668662434909493, -0.0002225389762315899, -0.0036655159201472998, -0.0016903887735679746, -0.005254269111901522, -0.06517294049263, -0.7941594123840332, -1.3971476554870605, -1.2513442039489746, -0.003935094457119703, -0.0076450384221971035, -0.039466287940740585, -0.24906012415885925, -1.816588044166565, -0.7179551720619202, -0.037253737449645996, -0.012121584266424179, -0.00042417587246745825, -0.010969100520014763, -0.0004993622424080968, -0.015870917588472366, -0.09844460338354111, -0.008581073954701424, -0.0010512308217585087, -0.00044967554276809096, -0.0996093899011612, -0.21104347705841064, -0.683000922203064, -1.8155946731567383, -0.4766690135002136, -0.04965032637119293, -0.5145220160484314, -0.6170624494552612, -0.0001867835089797154, -0.0015079329023137689, -0.0852874144911766, -0.6763623952865601, -0.0005164004978723824, -4.0411134250462055e-05, -0.0002646096108946949, -0.008240390568971634, -0.23271417617797852, -0.7605193853378296, -0.013813022524118423, -0.7430811524391174, -0.0533130057156086, -0.446679025888443, -0.4305112361907959, -0.6053387522697449, -0.05326678231358528, -0.0002540027489885688, -0.6820707321166992, -0.0004817279113922268, -8.987976616481319e-05, -7.152555099310121e-07, -5.960462772236497e-07, -4.768370445162873e-07, -0.0009120118920691311, 0.0, -3.2186455882765586e-06, -7.950943836476654e-05, -5.1020273531321436e-05, -0.000916418619453907, -0.00330901425331831, -0.009699242189526558, -0.3806650638580322, -0.000872946111485362, -1.0604705810546875, -0.11430083960294724, -0.7027184367179871, -0.00021491125517059118, -0.0022997616324573755, -0.0006896263221278787, -0.0012821081327274442, -0.0036624278873205185, -0.05181742087006569, -0.00025555206229910254, -0.1570388674736023, -0.3494533598423004, -3.933898824470816e-06, -5.722029527532868e-06, -4.768370445162873e-07, -0.07196611911058426, -3.71926071238704e-05, -0.000745137978810817, -2.3841855067985307e-07, -1.5497195136049413e-06, -9.536738616588991e-07, -1.4543427823809907e-05, -9.894321920000948e-06, -0.00034600470098666847, -1.883488948806189e-05, -1.0609570381348021e-05, -3.4927710657939315e-05, -0.0007699147681705654, -4.160317621426657e-05, -0.0009128456003963947, -0.0015488782664760947, -0.0018103414913639426, -1.2662413120269775, -0.0012647256953641772, -0.08613397926092148, -0.010107642039656639, -0.6237204074859619, -0.8280562162399292, -0.010577802546322346, -0.00031418632715940475, -0.007151126395910978, -0.001733111683279276, -0.008694413118064404, -1.8017970323562622, -0.0008264940115623176, -0.00010358751023886725, -1.0490362910786644e-05, -0.30011802911758423, -0.5263175964355469, -0.18869365751743317, -0.29179394245147705, -0.864328145980835, -0.000251142424531281, -0.0035263041500002146, -0.6224474310874939, -0.07579457759857178, -2.1404054164886475, -5.7338023907504976e-05, -0.09720340371131897, -1.510339379310608, -0.38409534096717834, -0.0021206289529800415, -0.27708345651626587, -0.00017391123401466757, -0.7350642085075378, -0.018525201827287674, -0.07991629838943481, -0.4373481273651123, -0.0036954462993890047, -0.0013455632142722607, -2.716883659362793, -0.0004782725009135902, -0.06991766393184662, -2.145764938177308e-06, -9.536738616588991e-07, -0.002077446784824133, -7.510157047363464e-06, -0.005331108812242746, -6.246371776796877e-05, -0.14734044671058655, -1.07287787614041e-05, -1.1920928244535389e-07, -0.0013605633284896612, -0.003790338756516576, -0.0017094297800213099, -0.05913139879703522, -0.4505073130130768, -0.012219802476465702, -1.2908833026885986, -0.07929562777280807, -0.02431849204003811, -0.03593255206942558, -0.019304143264889717, -0.00019464982324279845, -0.001443773857317865, -0.0077848611399531364, -0.04952100291848183, -0.0383196659386158, -0.0004258441040292382], "finish_reason": "length"}], "metrics": {"energy": 883.2440910758975, "energy_per_token": 3.4501722307652245, "time": 21.863485, "time_per_token": 0.08540423828125}}
{"outputs": [{"text": "if not os.path.isdir(src_dir):\n        raise FileNotFoundError(f\"Source directory {src_dir} not found.\")\n    if not os.path.isdir(dest_dir):\n        raise FileNotFoundError(f\"Destination directory {dest_dir} not found.\")\n\n    moved_files = []\n    pattern = f\"**/*.{ext}\"\n    matching_files = glob.glob(os.path.join(src_dir, pattern), recursive=True)\n\n    for file_path in matching_files:\n        filename = os.path.basename(file_path)\n        if filename in os.listdir(dest_dir):\n            continue\n        shutil.move(file_path, dest_dir)\n        moved_files.append(os.path.join(dest_dir, filename))\n\n    return moved_files", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "src", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " {", "src", "_", "dir", "}", " not", " found", ".", "\"", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "dest", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Dest", "ination", " directory", " {", "dest", "_", "dir", "}", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " []", "\n", "    ", "pattern", " =", " f", "\"", "**", "/*", ".", "{", "ext", "}\"", "\n", "    ", "matching", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "src", "_", "dir", ",", " pattern", ")", ",", " recursive", "=", "True", ")", "\n", "\n", "    ", "for", " file", "_", "path", " in", " matching", "_", "files", ":", "\n", "        ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", ")", "\n", "        ", "if", " filename", " in", " os", ".", "list", "dir", "(", "dest", "_", "dir", "):", "\n", "            ", "continue", "\n", "        ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " dest", "_", "dir", ")", "\n", "        ", "m", "oved", "_", "files", ".", "append", "(", "os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " filename", "))", "\n", "\n", "    ", "return", " moved", "_", "files"], "logprobs": [-1.682251214981079, -0.017950579524040222, -0.04380543902516365, -1.3589766240329482e-05, -0.0015824426664039493, -1.5139465176616795e-05, -1.5728684663772583, -0.0004757702990900725, -0.0004049911512993276, -0.007354802917689085, -2.407998726994265e-05, -1.0013530300057027e-05, -0.2322254180908203, -0.012318246066570282, -0.008478006348013878, -0.029911363497376442, -0.011623869650065899, -0.0001793938863556832, -1.4066597032069694e-05, -0.04079323261976242, -0.16582803428173065, -0.08715149015188217, -0.2663611173629761, -0.005224622320383787, -1.0780210494995117, -0.001438060076907277, -6.01988795096986e-05, -3.790783375734463e-05, -0.0013753250241279602, -1.4246318340301514, -0.00043132537393830717, -0.7734233736991882, -0.019542066380381584, -0.0002728328399825841, -0.0009527434594929218, -0.41559112071990967, -0.011390889063477516, -0.0008875959902070463, -0.00016485285595990717, -2.3841855067985307e-07, -1.0251946150674485e-05, -1.4305104514278355e-06, -0.0014749611727893353, -3.683499380713329e-05, -3.659658250398934e-05, -0.0011118428083136678, -1.3947389561508317e-05, -1.5497195136049413e-06, -0.0005803807871416211, -0.0002936885575763881, -0.0008306628442369401, -0.0038809471298009157, -0.0002181292074965313, -4.5060096454108134e-05, -1.6689160474925302e-05, -0.00014375607133843005, -0.0041985465213656425, -7.354942499659956e-05, -0.0014831743901595473, -0.00020382710499688983, -0.00025328766787424684, -0.0006793813081458211, -0.002881781430914998, -2.2053474822314456e-05, -1.7881233361549675e-05, -4.6132929128361866e-05, -0.001167092937976122, -4.3748852476710454e-05, -0.0020919598173350096, -0.00017796363681554794, -7.891343557275832e-05, -0.0002926159941125661, -0.2588198184967041, -0.0008322112844325602, -0.9706770181655884, -0.0031491946429014206, -0.012082600966095924, -0.020669888705015182, -0.008287209086120129, -0.01070235576480627, -0.03097428008913994, -0.24669519066810608, -3.1658055782318115, -0.002415836090222001, -0.942497193813324, -0.1561569720506668, -2.7715749740600586, -0.003706966992467642, -0.005014818161725998, -0.000341476290486753, -0.0007697956170886755, -0.0043079908937215805, -0.1219114363193512, -0.15936289727687836, -3.6908416748046875, -0.0031623851973563433, -0.07933229953050613, -0.0017728578532114625, -0.019397566094994545, -5.602679812000133e-05, -0.17213380336761475, -0.00045849301386624575, -0.08092805743217468, -1.311301275563892e-06, -1.8000440832111053e-05, -5.722029527532868e-06, -0.00021360022947192192, -0.00016091958968900144, -0.003308776533231139, -8.22540732769994e-06, -6.794906312279636e-06, -0.00016258825780823827, -0.0015683980891481042, -0.01533233467489481, -0.00010871296399272978, -0.00021872512297704816, -0.0005646541831083596, -0.004650491289794445, -0.0033167372457683086, -0.0037386775948107243, -0.6562279462814331, -0.00020382710499688983, -0.023371808230876923, -0.2047736495733261, -0.47161173820495605, -0.020733993500471115, -0.00036816971260122955, -0.0007071378640830517, 0.0, -1.4305104514278355e-06, -3.8980677345534787e-05, -0.0008395960903726518, -0.0037380836438387632, -0.960122287273407, -0.00204889546148479, -0.0006200536736287177, -2.3841855067985307e-07, -1.1920922133867862e-06, -2.3841855067985307e-07, -0.0006529344827868044, 0.0, -1.9073468138230965e-06, -9.190614218823612e-05, -2.7418097943154862e-06, 0.0, -8.666139910928905e-05, -0.002371120499446988, -0.08028975129127502, -1.0707001686096191, -1.6821281909942627, -0.9998375177383423, -0.033200863748788834, -1.6689286894688848e-06, -1.4543427823809907e-05, 0.0, -6.353653589030728e-05, -0.0011934071080759168, -3.0278701160568744e-05, -3.576278118089249e-07, -0.010300924070179462, -0.05858437344431877, -0.000699156429618597, -0.766071081161499, -0.8855438232421875, -0.4099232852458954, -0.12705709040164948, -2.145764938177308e-06, -2.7418097943154862e-06, -0.02410171739757061, -5.245195097813848e-06, -0.004075793083757162, -2.3007127310847864e-05, 0.0, -0.00023624490131624043, -0.22159874439239502, -9.894321920000948e-06, -5.602820692729438e-06, -0.004506788216531277, -0.0035691861994564533, -0.0016781308222562075, -0.010012403130531311, -1.7404405298293568e-05, -9.179073458653875e-06, -0.00025054652360267937, -9.786603914108127e-05, -0.00015722469834145159, -0.00018952481332235038, -1.4712172746658325, -9.059865078597795e-06, -6.794906312279636e-06, -2.861018856492592e-06, -0.09027253836393356, -7.998623186722398e-05, -0.015807321295142174, -5.590759246842936e-05, -1.5139465176616795e-05, -0.00011801023356383666, -0.005020630080252886, -0.0003238391946069896, -0.0039510056376457214, -0.07722750306129456, -0.001911837956868112, -0.010583936236798763, -0.002034976379945874, -1.1324817933200393e-05, -1.5497195136049413e-06], "finish_reason": "stop"}], "metrics": {"energy": 750.2194288311003, "energy_per_token": 3.6418418875296132, "time": 17.453583, "time_per_token": 0.08472613106796116}}
{"outputs": [{"text": "try:\n        moved_files = []\n        files = glob.glob(os.path.join(src_dir, f'*{ext}'))\n        for file in files:\n            filename = os.path.basename(file)\n            if os.path.isfile(os.path.join(dest_dir, filename)):\n                continue\n            shutil.move(file, dest_dir)\n            moved_files.append(file)\n        return moved_files\n    except FileNotFoundError as error:\n        raise FileNotFoundError(f\"Directory not found: {error}\") from error", "tokens": ["try", ":", "\n", "        ", "m", "oved", "_", "files", " =", " []", "\n", "        ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "src", "_", "dir", ",", " f", "'", "*{", "ext", "}'", "))", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " filename", "))", ":", "\n", "                ", "continue", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " dest", "_", "dir", ")", "\n", "            ", "m", "oved", "_", "files", ".", "append", "(", "file", ")", "\n", "        ", "return", " moved", "_", "files", "\n", "    ", "except", " File", "NotFound", "Error", " as", " error", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " not", " found", ":", " {", "error", "}\"", ")", " from", " error", "\n", "\n", "def"], "logprobs": [-2.049968957901001, -0.0004864939546678215, -0.0036373662296682596, -0.025338785722851753, -1.7976086139678955, -0.004792394116520882, -0.025362495332956314, -0.04250636696815491, -0.014553816989064217, -0.026099665090441704, -0.045513540506362915, -0.1594691127538681, -1.6278572082519531, -0.3327065408229828, -0.05404149740934372, -0.00011729506513802335, -0.016815347597002983, -0.003187577472999692, -0.26799118518829346, -1.311301275563892e-06, -0.00010632903286023065, -9.417489309271332e-06, -0.0011174393584951758, -0.00029094755882397294, -0.0023205752950161695, -7.080780778778717e-05, -8.475421054754406e-05, -0.00044347942457534373, -0.2815540134906769, -0.5118051767349243, -0.8090554475784302, -0.00246649538166821, -0.033957283943891525, -0.00035613393993116915, -0.1164807379245758, -0.17219893634319305, -0.09690622240304947, -0.09239725768566132, -0.12854865193367004, -0.0011840007500723004, -0.00021669900161214173, -0.0012326984433457255, -0.005076732020825148, -0.733100175857544, -0.0052655343897640705, -0.0006258912617340684, -8.344646857949556e-07, -3.2186455882765586e-06, -2.145764938177308e-06, -0.003777987789362669, -2.3841855067985307e-07, -4.6491513785440475e-06, -0.00021228920377325267, -0.00020489977032411844, -0.00397095363587141, -0.01094646193087101, -0.3173663914203644, -0.4995229244232178, -4.768370445162873e-07, -0.00013279033009894192, -1.0728830375228426e-06, -1.3125567436218262, -0.03746791183948517, -0.00024780540843494236, -0.0033722221851348877, -4.768370445162873e-07, -5.483612312673358e-06, -4.768370445162873e-07, -0.00013314791431184858, -5.936446541454643e-05, -0.004549272358417511, -6.663577369181439e-05, -2.1815061700181104e-05, -0.00016258825780823827, -0.0032726561184972525, -8.618460560683161e-05, -0.005048622377216816, -0.05575735867023468, -0.0012257928028702736, -0.809057354927063, -0.2852608859539032, -0.06664010882377625, -0.09226910769939423, -2.145764938177308e-06, -1.311301275563892e-06, -0.038294196128845215, -1.2874520507466514e-05, -0.010714856907725334, -0.00020096666412428021, -0.09916816651821136, -2.2411095415009186e-05, -4.768370445162873e-07, -0.0021864098962396383, -0.002246358199045062, -0.002597175072878599, -0.006096457596868277, -1.3828182090946939e-05, -2.3603161025675945e-05, -0.00048065552255138755, -0.00013541258522309363, -0.00013445904187392443, -0.0009171332349069417, -0.9283957481384277, -0.0012051946250721812, -0.005325180012732744, -0.10638003051280975, -0.02983500063419342, -0.0020072567276656628, -5.364403477869928e-06, -3.576278118089249e-07, -0.004649423528462648, -0.06507174670696259, -0.0014886498684063554, -0.09120281785726547, -0.00018761781393550336, -3.6954811548639555e-06, -0.466644287109375, -2.5532469749450684, -0.010502898134291172, -0.004287456162273884, -0.009311698377132416, -0.6558828949928284, -0.8423548936843872, -0.00017581824795342982, -4.053033626405522e-05, -0.1566750705242157, -0.6124917268753052, -0.13666629791259766, -1.990841269493103, -0.665657639503479, -0.014463935047388077, -0.10569749772548676, -0.011171176098287106, -0.2879349887371063, -0.6259645223617554, -0.05345755070447922, -1.2113033533096313, -0.1424107700586319, -0.7359456419944763, -0.3058495819568634, -1.998718023300171], "finish_reason": "stop"}], "metrics": {"energy": 470.54514550304435, "energy_per_token": 3.3371996134967685, "time": 11.7736025, "time_per_token": 0.08350072695035461}}
{"outputs": [{"text": "if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"Source directory {src_dir} does not exist\")\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(f\"Destination directory {dest_dir} does not exist\")\n\n    files_to_move = glob.glob(os.path.join(src_dir, f\"*.{ext}\"))\n\n    moved_files = []\n    for file_path in files_to_move:\n        file_name = os.path.basename(file_path)\n        if file_name in os.listdir(dest_dir):\n            # File already exists in destination directory, skip moving it\n            continue\n\n        shutil.move(file_path, dest_dir)\n        moved_files.append(os.path.join(dest_dir, file_name))\n\n    return moved_files", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " {", "src", "_", "dir", "}", " does", " not", " exist", "\"", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "dest", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Dest", "ination", " directory", " {", "dest", "_", "dir", "}", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "files", "_", "to", "_", "move", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "src", "_", "dir", ",", " f", "\"", "*", ".", "{", "ext", "}\"", "))", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " []", "\n", "    ", "for", " file", "_", "path", " in", " files", "_", "to", "_", "move", ":", "\n", "        ", "file", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", ")", "\n", "        ", "if", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "dest", "_", "dir", "):", "\n", "            ", "#", " File", " already", " exists", " in", " destination", " directory", ",", " skip", " moving", " it", "\n", "            ", "continue", "\n", "\n", "        ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " dest", "_", "dir", ")", "\n", "        ", "m", "oved", "_", "files", ".", "append", "(", "os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " file", "_", "name", "))", "\n", "\n", "    ", "return", " moved", "_", "files"], "logprobs": [-1.682251214981079, -0.017950579524040222, -0.04380543902516365, -1.3589766240329482e-05, -0.0015824426664039493, -1.5139465176616795e-05, -0.23263944685459137, -0.00019226610311307013, -0.01610930822789669, -1.2040065485052764e-05, -9.059865078597795e-06, -0.1295761913061142, -0.013173921033740044, -0.011553286574780941, -0.029212428256869316, -0.008275032043457031, -0.0002252801787108183, -1.7404405298293568e-05, -0.039287958294153214, -0.20430408418178558, -0.08036378771066666, -0.20710189640522003, -0.004133610054850578, -1.0548975467681885, -0.002033310942351818, -3.8742269680369645e-05, -1.6927575416048057e-05, -0.000724887300748378, -0.20886148512363434, -0.00031287543242797256, -0.0013371107634156942, -0.5051906108856201, -0.00021884430316276848, -0.0010649253381416202, -0.3715842366218567, -0.014664717949926853, -0.0009303532424382865, -0.0001532914029667154, -2.3841855067985307e-07, -1.2516897186287679e-05, -2.264974000354414e-06, -0.00039081089198589325, -0.0001147919538198039, -0.0020435419864952564, -9.894321920000948e-06, -1.7881377516459906e-06, -0.0006990373367443681, -0.0001995364436879754, -0.0008286379743367434, -0.0018430643249303102, -0.0002795067266561091, -3.0278701160568744e-05, -2.610649426060263e-05, -0.0002343380037928, -0.0047732931561768055, -0.0001380348257953301, -0.002434863243252039, -0.00021431533969007432, -0.000256982195423916, -0.0008699684985913336, -0.0030497252009809017, -5.0424259825376794e-05, -3.6954811548639555e-06, -5.924526340095326e-05, -0.00015448330668732524, -2.5510462364763953e-05, -0.00023064337437972426, -0.0016984812682494521, -9.011816291604191e-05, -0.0002615109842736274, -0.2462167739868164, -0.0008001701789908111, -1.626612901687622, -0.6830336451530457, -0.34866219758987427, -1.1920858014491387e-05, -0.008552707731723785, -0.0015148365637287498, -0.20278923213481903, -8.49926145747304e-05, -0.0065322681330144405, -0.0004015354788862169, -0.25150251388549805, -1.5497195136049413e-06, -3.2543604902457446e-05, -2.276871418871451e-05, -0.0005439232336357236, -0.00015507926582358778, -0.0016037471359595656, -9.65590606938349e-06, -3.4570634852570947e-06, -0.0002588890492916107, -0.037163347005844116, -0.2939049303531647, -0.30004510283470154, -0.00020597243565134704, -9.440929716220126e-05, -7.354942499659956e-05, -0.0032749136444181204, -0.0016776548000052571, -0.02602452039718628, -1.1885690689086914, -0.00035386974923312664, -0.09305112808942795, -0.0008214913541451097, -0.01468492392450571, -0.0071196421049535275, -0.006218133959919214, -0.012220273725688457, -0.009399446658790112, -0.38557857275009155, -0.0131641561165452, -0.1256064921617508, -0.6636181473731995, -0.04126611724495888, -0.0003513672563713044, -0.000580499938223511, -6.556489552167477e-06, 0.0, 0.0, -2.3841855067985307e-07, -9.131014667218551e-05, -0.0006282739923335612, -0.0036934271920472383, -0.36639755964279175, -0.010617552325129509, -0.013566674664616585, -0.0006416169344447553, -0.00016723664884921163, -1.1920928244535389e-07, -1.0728830375228426e-06, -1.1920928244535389e-07, -0.0005722792120650411, -1.1920928244535389e-07, -1.4305104514278355e-06, -5.757642793469131e-05, -3.576272320060525e-06, -7.152555099310121e-07, -5.6265202147187665e-05, -0.0026949062012135983, -0.06134533882141113, -0.5692171454429626, -2.1918766498565674, -9.775113539944869e-06, -0.0007653883076272905, -0.6990699172019958, -0.015405116602778435, -2.0265558760002023e-06, -8.4638240878121e-06, 0.0, -5.9960475482512265e-05, -0.0019041041377931833, -3.182837463100441e-05, -2.7418097943154862e-06, -0.0099160922691226, -0.06199932470917702, -0.0006571040721610188, -1.6525280475616455, -1.5119951963424683, -0.7233946323394775, -0.0015443552983924747, -0.03315865620970726, -1.3104257583618164, -0.07932458817958832, -0.20002274215221405, -0.46713799238204956, -0.549069881439209, -0.7770664095878601, -0.012068349868059158, -0.00023767507809679955, -0.09791499376296997, -0.0008593680104240775, -1.0607638359069824, -0.0005371319712139666, -0.2825045883655548, -1.6689286894688848e-06, -1.9073468138230965e-06, -0.008136814460158348, -3.4570634852570947e-06, -0.0013252056669443846, -9.417489309271332e-06, -1.7523612768854946e-05, -2.95634672511369e-05, -0.34811538457870483, -6.437280717364047e-06, -2.0265558760002023e-06, -0.0020743536297231913, -0.009031515568494797, -0.005851401016116142, -0.01668909192085266, -1.1801649634435307e-05, -1.0371154530730564e-05, -0.0008665143977850676, -8.5588610090781e-05, -0.00013648532330989838, -0.0002320735511602834, -0.9954140186309814, -1.9550132492440753e-05, -3.2186455882765586e-06, -4.291525328881107e-06, -0.05283651128411293, -6.544376083184034e-05, -0.010313666425645351, -2.3483953555114567e-05, -4.410734163684538e-06, -9.60780744208023e-05, -0.0009887097403407097, -5.245195097813848e-06, -0.0030764653347432613, -0.00025781645672395825, -0.007904085330665112, -0.040436215698719025, -0.0028532531578093767, -0.011538438498973846, -0.00127948890440166, -4.887569048150908e-06, -2.145764938177308e-06], "finish_reason": "stop"}], "metrics": {"energy": 765.9668771877285, "energy_per_token": 3.5298012773628042, "time": 18.284084, "time_per_token": 0.08425845161290323}}
{"outputs": [{"text": "if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"Source directory '{src_dir}' does not exist.\")\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(f\"Destination directory '{dest_dir}' does not exist.\")\n\n    files = glob.glob(os.path.join(src_dir, f\"*.{ext}\"))\n    moved_files = []\n\n    for file in files:\n        filename = os.path.basename(file)\n        if os.path.exists(os.path.join(dest_dir, filename)):\n            continue  # File with the same name exists, skip moving\n\n        shutil.move(file, os.path.join(dest_dir, filename))\n        moved_files.append(os.path.join(dest_dir, filename))\n\n    return moved_files", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " '", "{", "src", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "dest", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Dest", "ination", " directory", " '", "{", "dest", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "src", "_", "dir", ",", " f", "\"", "*", ".", "{", "ext", "}\"", "))", "\n", "    ", "m", "oved", "_", "files", " =", " []", "\n", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", "\n", "        ", "if", " os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " filename", "))", ":", "\n", "            ", "continue", "  ", "#", " File", " with", " the", " same", " name", " exists", ",", " skip", " moving", "\n", "\n", "        ", "sh", "util", ".", "move", "(", "file", ",", " os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " filename", "))", "\n", "        ", "m", "oved", "_", "files", ".", "append", "(", "os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " filename", "))", "\n", "\n", "    ", "return", " moved", "_", "files", "\n", "\n", "if"], "logprobs": [-1.682251214981079, -0.017950579524040222, -0.04380543902516365, -1.3589766240329482e-05, -0.0015824426664039493, -1.5139465176616795e-05, -0.23263944685459137, -0.00019226610311307013, -0.01610930822789669, -1.2040065485052764e-05, -9.059865078597795e-06, -0.1295761913061142, -0.013173921033740044, -0.011553286574780941, -0.029212428256869316, -0.008275032043457031, -0.0002252801787108183, -1.7404405298293568e-05, -0.039287958294153214, -0.20430408418178558, -0.08036378771066666, -0.20710189640522003, -0.004133610054850578, -0.755115807056427, -0.00011503035057103261, -0.001943843555636704, -1.2874520507466514e-05, -9.298280929215252e-06, -0.0017254954436793923, -0.17640554904937744, -0.00024005869636312127, -0.0013887770473957062, -0.5197124481201172, -0.004890266805887222, -0.00024244230007752776, -0.0006885541952215135, -0.4296300411224365, -0.013446712866425514, -0.000830901088193059, -0.00014649749209638685, -2.3841855067985307e-07, -7.271740287251305e-06, -2.622600959512056e-06, -0.0006314906058833003, -9.846202738117427e-05, -0.0022299441043287516, -9.65590606938349e-06, -1.4305104514278355e-06, -0.0007572882459498942, -0.00020716428116429597, -0.0009239218779839575, -0.0019318267004564404, -0.00019178935326635838, -4.458328112377785e-05, -2.9682672902708873e-05, -0.0001530530134914443, -0.007870258763432503, -0.00010823617776622996, -0.0019195717759430408, -0.0001515035255579278, -0.00018857131362892687, -0.001701099332422018, -3.611976353568025e-05, -0.001335682114586234, -1.2993727978027891e-05, -3.814689989667386e-06, -0.0002252801787108183, -0.0002101439022226259, -9.65590606938349e-06, -0.00021920185827184469, -0.002135379472747445, -0.0003152588615193963, -0.00015352977789007127, -0.00025733973598107696, -0.21229572594165802, -0.0006748544401489198, -1.3472561836242676, -0.7392553687095642, -0.08008532971143723, -6.663577369181439e-05, -0.010008271783590317, -0.0009344025747850537, -0.25169727206230164, -1.9073468138230965e-06, -2.3603161025675945e-05, -5.006777428206988e-06, -0.0005137792322784662, -0.00018618757894728333, -0.0030711174476891756, -4.887569048150908e-06, -1.7881377516459906e-06, -0.00023946279543451965, -0.05568621680140495, -0.4484097957611084, -0.15655265748500824, -0.00033909291960299015, -9.989239333663136e-05, -6.97350042173639e-05, -0.0036621904000639915, -0.0014394884929060936, -0.04715118184685707, -0.22520355880260468, -0.061731841415166855, -0.0010268182959407568, -0.06367967277765274, -0.01670820079743862, -0.0028024944476783276, -0.015513459220528603, -0.0054477802477777, -0.5153006315231323, -0.0001778444420779124, -0.018210481852293015, -0.0670076236128807, -0.3632603585720062, -0.0009454786195419729, -5.98412734689191e-05, -0.00042298430344089866, -0.0037429530639201403, -0.7274028658866882, -0.0013243722496554255, -0.0002706876548472792, -4.768370445162873e-07, -9.536738616588991e-07, -2.3841855067985307e-07, -0.0011976935202255845, 0.0, -1.1920922133867862e-06, -0.00011944057769142091, -0.00010406429646536708, -0.0039384192787110806, -0.07347055524587631, -0.5480526685714722, -0.3868550658226013, -3.576278118089249e-07, -4.0411134250462055e-05, -1.1920928244535389e-07, -0.11412292718887329, -4.124556289752945e-05, -0.000985375139862299, -1.1920928244535389e-07, -1.6689286894688848e-06, -1.1920928244535389e-07, -1.4305012882687151e-05, -1.2159273865108844e-05, -0.0008709213580004871, -5.245195097813848e-06, -1.1920922133867862e-06, -3.540453326422721e-05, -0.0007307243067771196, -3.9457496313843876e-05, -0.001061352901160717, -0.023773731663823128, -0.0007512131123803556, -0.8569121956825256, -0.8416758179664612, -9.321732068201527e-05, -2.090843439102173, -0.8658711910247803, -0.2515048384666443, -5.411955135059543e-05, -0.0009386900928802788, -2.163175344467163, -2.20334529876709, -0.229771226644516, -0.6807243824005127, -0.3581143915653229, -0.9831308126449585, -0.0007233387441374362, -0.16575419902801514, -1.9073468138230965e-06, -8.344646857949556e-07, -0.01342871692031622, -3.933898824470816e-06, -0.002094815019518137, -6.09140915912576e-05, -2.3992795944213867, -1.4305104514278355e-06, -7.152555099310121e-07, -2.3841855067985307e-07, -0.00029225845355540514, -1.2278481335670222e-05, -0.00031990656862035394, -1.3470558769768104e-05, -3.4570634852570947e-06, -0.012373587116599083, -0.002077327808365226, -0.0005635818815790117, -0.007390657905489206, -0.0044676256366074085, -0.01637379452586174, -1.4305012882687151e-05, -8.940656698541716e-06, -0.0001787979417713359, -6.806619057897478e-05, -0.0003195490571670234, -0.00041940953815355897, -0.45565855503082275, -9.65590606938349e-06, -7.748573807475623e-06, -1.5497195136049413e-06, -0.03916313499212265, -0.00012265883560758084, -0.022653136402368546, -6.12716976320371e-05, -8.940656698541716e-06, -4.815939246327616e-05, -0.00023910524032544345, -0.00014554394874721766, -0.009674095548689365, -0.05006643384695053, -0.0038718036375939846, -0.01625194028019905, -0.0013584204716607928, -6.794906312279636e-06, -3.2186455882765586e-06, -0.512362003326416, -0.01378974225372076, -0.6266363263130188], "finish_reason": "stop"}], "metrics": {"energy": 733.1776349420551, "energy_per_token": 3.363200160284656, "time": 18.49618, "time_per_token": 0.0848448623853211}}
{"outputs": [{"text": "moved_files = []\n\n    for file_path in glob.glob(os.path.join(src_dir, f'*.{ext}')):\n        file_name = os.path.basename(file_path)\n        dest_file_path = os.path.join(dest_dir, file_name)\n\n        if os.path.isfile(dest_file_path):\n            print(f\"File '{file_name}' already exists in the destination directory. Skipping.\")\n        else:\n            shutil.move(file_path, dest_dir)\n            moved_files.append(file_path)\n\n    return moved_files\n\ntest_src_dir = './test_src'\ntest_dest_dir = './test_dest'\ntest_ext = 'txt'\nos.makedirs(test_src_dir, exist_ok=True)\nos.makedirs(test_dest_dir, exist_ok=True)\nmoved_files = task_func(test_src_dir, test_dest_dir, test_", "tokens": ["m", "oved", "_", "files", " =", " []", "\n", "\n", "    ", "for", " file", "_", "path", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "src", "_", "dir", ",", " f", "'", "*", ".", "{", "ext", "}'", "))", ":", "\n", "        ", "file", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", ")", "\n", "        ", "dest", "_", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " file", "_", "name", ")", "\n", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "dest", "_", "file", "_", "path", "):", "\n", "            ", "print", "(", "f", "\"", "File", " '", "{", "file", "_", "name", "}'", " already", " exists", " in", " the", " destination", " directory", ".", " Sk", "ipping", ".", "\"", ")", "\n", "        ", "else", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " dest", "_", "dir", ")", "\n", "            ", "m", "oved", "_", "files", ".", "append", "(", "file", "_", "path", ")", "\n", "\n", "    ", "return", " moved", "_", "files", "\n", "\n", "test", "_", "src", "_", "dir", " =", " '", ".", "/", "test", "_", "src", "'", "\n", "test", "_", "dest", "_", "dir", " =", " '", ".", "/", "test", "_", "dest", "'", "\n", "test", "_", "ext", " =", " '", "txt", "'", "\n", "os", ".", "m", "aked", "irs", "(", "test", "_", "src", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "os", ".", "m", "aked", "irs", "(", "test", "_", "dest", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "m", "oved", "_", "files", " =", " task", "_", "func", "(", "test", "_", "src", "_", "dir", ",", " test", "_", "dest", "_", "dir", ",", " test", "_"], "logprobs": [-1.8471472263336182, -0.0031198421493172646, -0.014057781547307968, -0.031826846301555634, -0.014863112010061741, -0.010469986125826836, -0.03696530684828758, -0.9825433492660522, -0.001341158407740295, -2.285137414932251, -0.3357994854450226, -1.1856608390808105, -0.21919700503349304, -0.0023308033123612404, -0.019867587834596634, -0.0001110968878492713, -0.06610041111707687, -0.0009753713966347277, -0.2853730022907257, -1.1920922133867862e-06, -9.715084888739511e-05, -5.125986263010418e-06, -0.0007557396893389523, -0.0002531684876885265, -0.0017983231227844954, -8.34430247778073e-05, -8.761498611420393e-05, -0.0004854215949308127, -0.23124992847442627, -0.5957103371620178, -0.7220999002456665, -0.00025817399728111923, -0.00011395759065635502, -0.00030155404238030314, -0.056145574897527695, -0.00015078838623594493, -0.0002321927313460037, -0.017366137355566025, -0.0235703457146883, -0.5677569508552551, -0.0167580246925354, -0.019968319684267044, -0.0012404375011101365, -0.0005514293443411589, -5.960462772236497e-07, -6.794906312279636e-06, -2.145764938177308e-06, -0.0021305023692548275, -1.1920928244535389e-07, -3.6954811548639555e-06, -0.0002610342635307461, -2.1576648578047752e-05, -3.099436753473128e-06, -0.00019608005823101848, -0.006341335829347372, -0.33734428882598877, -0.7947912216186523, -0.012869163416326046, -0.6805210113525391, -0.03623185679316521, -0.0008219677838496864, -0.00017832119192462415, -0.00048673225683160126, -4.768370445162873e-07, -2.3841830625315197e-06, -2.3841855067985307e-07, -0.0004570631426759064, -4.458328112377785e-05, -0.0008005275158211589, -1.2516897186287679e-05, -3.4570634852570947e-06, -0.00018726025882642716, -0.0020493713673204184, -3.099436753473128e-06, -7.83174327807501e-05, -0.00010847456724150106, -0.0028525397647172213, -0.3338523209095001, -0.0012505576014518738, -0.12742698192596436, -0.23872078955173492, -5.960462772236497e-07, -7.259582343976945e-05, -1.0728830375228426e-06, -1.3948721885681152, -0.017890745773911476, -2.4914430468925275e-05, -0.019161945208907127, -2.3841830625315197e-06, -0.00024828212917782366, -6.318072337307967e-06, -2.706014311115723e-05, -0.01708269491791725, -0.02578034996986389, -0.0019330164650455117, -0.3786639869213104, -0.0028117666952311993, -0.10370136797428131, -0.1996578574180603, -0.7567052841186523, -0.31587931513786316, -8.296622399939224e-05, -0.09473349899053574, -3.6477376852417365e-05, -0.04330703988671303, -0.0021470370702445507, -0.007821409963071346, -0.0005676327273249626, -0.0060866232961416245, -0.1917574554681778, -0.0038075584452599287, -0.012768067419528961, -0.09760753810405731, -0.07450544834136963, -0.0015526870265603065, -0.0819004625082016, -0.22919894754886627, -0.0003034608089365065, -0.0008752091089263558, -0.6877385973930359, -0.003126378171145916, -2.002696055569686e-05, -0.00027843413408845663, -0.0008187517523765564, -0.19250734150409698, -1.0728830375228426e-06, -1.4305104514278355e-06, -0.015664508566260338, -6.794906312279636e-06, -0.0005410637822933495, -1.5497195136049413e-06, -1.156323378381785e-05, -4.160317621426657e-05, -0.00766183715313673, -8.749579137656838e-05, -0.3526158332824707, -0.0007512131123803556, -0.003840097226202488, -0.0015956539427861571, -0.18818506598472595, -9.775113539944869e-06, -1.2278481335670222e-05, -0.0003122795606032014, -5.757642793469131e-05, -0.00018749863374978304, -0.000176652567461133, -1.2779594659805298, -1.4305012882687151e-05, -0.002681709360331297, -0.00026901919045485556, -0.022855544462800026, -0.492631196975708, -0.003920489456504583, -0.022550111636519432, -0.0008288762182928622, -7.748573807475623e-06, -1.0132738680113107e-05, -0.3265286684036255, -0.014799099415540695, -2.7696139812469482, -0.005387905053794384, -0.012996725738048553, -0.002380515681579709, -0.001881259260699153, -0.003591755172237754, -0.05909634009003639, -0.06853611767292023, -0.007400952745229006, -0.012689913623034954, -0.0037967516109347343, -0.005461651831865311, -0.00717586325481534, -0.005523893982172012, -0.005979625042527914, -4.410734163684538e-06, -0.00048160876031033695, -2.0861407392658293e-05, -6.365573790390044e-05, -0.0001512651506345719, -0.000522357877343893, -0.0001113352773245424, -8.463501580990851e-05, -0.0003383779258001596, -0.00012432756193447858, -0.00033825874561443925, -0.0008000510279089212, -0.00029583368450403214, -0.010692802257835865, -8.583032467868179e-06, -0.002891409443691373, -0.0005899119423702359, -0.0007525234250351787, -0.0180900227278471, -0.0004538459761533886, -0.0017022894462570548, -0.4394577145576477, -1.2278481335670222e-05, -0.00029797881143167615, -1.0728830375228426e-06, -4.768370445162873e-07, -0.00018380382971372455, -6.615896563744172e-05, -7.152555099310121e-07, -5.185469490243122e-05, -2.9802276912960224e-06, -7.152555099310121e-07, -0.0004258441040292382, -0.0005837167263962328, -7.629365427419543e-06, -4.768370445162873e-07, -5.495397272170521e-05, -0.00011383838864276186, -8.153582894010469e-05, -0.0038890219293534756, -0.00828389823436737, -3.6954811548639555e-06, -0.0007102350937202573, -8.4638240878121e-06, -1.1920928244535389e-07, -2.753696753643453e-05, -4.1126360883936286e-05, -2.3841855067985307e-07, -6.6756979322235566e-06, -3.576278118089249e-07, 0.0, -6.3774932641536e-05, -1.680836794548668e-05, -1.7881377516459906e-06, -2.0265558760002023e-06, -1.4305104514278355e-06, -4.6491513785440475e-06, -0.000743708573281765, -0.0034162988886237144, -0.7306832671165466, -0.00012313561455812305, -0.00014804698002990335, -0.00022230061586014926, -0.0007483542431145906, -0.004809240810573101, -0.0001928620331455022, -0.0005318895564414561, -0.000559292733669281, -0.000608854868914932, -2.3841830625315197e-06, -3.015949550899677e-05, -6.9141146923357155e-06, -7.152531907195225e-06, -5.125868119648658e-05, -0.0005417786305770278, -3.576278118089249e-07, -1.5735502529423684e-05, -1.311301275563892e-06, -1.1920928244535389e-07, -0.00017212340026162565, -0.0014227039646357298, -3.814689989667386e-06], "finish_reason": "length"}], "metrics": {"energy": 887.7039696884157, "energy_per_token": 3.4675936315953737, "time": 21.647076, "time_per_token": 0.084558890625}}
{"outputs": [{"text": "# Check if src_dir and dest_dir exist\n    if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"Source directory {src_dir} does not exist.\")\n\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(f\"Destination directory {dest_dir} does not exist.\")\n\n    # Search for files with the given extension in the source directory\n    files = glob.glob(os.path.join(src_dir, f'*.{ext}'))\n\n    moved_files = []  # A list to store the full paths of files that were successfully moved\n\n    for file in files:\n        filename = os.path.basename(file)\n\n        # Check if the file already exists in the destination directory\n        if os.path.exists(os.path.join(dest_dir, filename)):\n            print(f\"Skipping {filename} because it already exists in the destination directory.\")\n            continue\n\n        # Move the file to the destination directory\n        shutil.move(file, dest_dir)", "tokens": ["#", " Check", " if", " src", "_", "dir", " and", " dest", "_", "dir", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " {", "src", "_", "dir", "}", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "dest", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Dest", "ination", " directory", " {", "dest", "_", "dir", "}", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Search", " for", " files", " with", " the", " given", " extension", " in", " the", " source", " directory", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "src", "_", "dir", ",", " f", "'", "*", ".", "{", "ext", "}'", "))", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " []", "  ", "#", " A", " list", " to", " store", " the", " full", " paths", " of", " files", " that", " were", " successfully", " moved", "\n", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", "\n", "\n", "        ", "#", " Check", " if", " the", " file", " already", " exists", " in", " the", " destination", " directory", "\n", "        ", "if", " os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " filename", "))", ":", "\n", "            ", "print", "(", "f", "\"", "Sk", "ipping", " {", "filename", "}", " because", " it", " already", " exists", " in", " the", " destination", " directory", ".", "\"", ")", "\n", "            ", "continue", "\n", "\n", "        ", "#", " Move", " the", " file", " to", " the", " destination", " directory", "\n", "        ", "sh", "util", ".", "move", "(", "file", ",", " dest", "_", "dir", ")"], "logprobs": [-1.2989866733551025, -0.760466992855072, -0.09539104253053665, -2.4698357582092285, -0.07420941442251205, -0.0009974034037441015, -0.2653716504573822, -0.005094404332339764, -0.0004543225804809481, -0.00010227633902104571, -0.38591551780700684, -0.21007443964481354, -0.002927900291979313, -0.02619222179055214, -0.007342377677559853, -0.03168180212378502, -1.6689286894688848e-06, -0.00031132620642893016, -9.417489309271332e-06, -0.1537376493215561, -6.878139538457617e-05, -0.0027499499265104532, -5.364403477869928e-06, -9.536738616588991e-07, -0.07875291258096695, -0.0035068225115537643, -0.004675646312534809, -0.016241149976849556, -0.005353874992579222, -0.0002252801787108183, -1.168244216387393e-05, -0.026941195130348206, -0.1900184452533722, -0.0496760755777359, -0.14851276576519012, -0.002983882324770093, -0.9780253767967224, -0.0013760393485426903, -7.760223525110632e-05, -5.483612312673358e-06, -0.0004580163804348558, -0.13366921246051788, -0.00016020445036701858, -0.0006672301678918302, -0.8284633159637451, -0.0025924190413206816, -0.000161038784426637, -0.00027176024741493165, -2.01361083984375, -0.00016830935783218592, -0.009070145897567272, -0.001650758320465684, -0.00022623363474849612, -3.576278118089249e-07, -2.253030106658116e-05, -2.0265558760002023e-06, -0.0004564673872664571, -4.684815212385729e-05, -0.000576449150685221, -5.722029527532868e-06, -4.768370445162873e-07, -0.0005768066039308906, -0.00013171759201213717, -0.0006330393371172249, -0.000697846058756113, -0.00017832119192462415, -5.113947918289341e-05, -1.2993727978027891e-05, -0.00011753345461329445, -0.00384449097327888, -7.784063927829266e-05, -0.0016549237770959735, -0.00011657988943625242, -0.00023505308490712196, -0.00042441420373506844, -0.002188313053920865, -8.702239938429557e-06, -2.5629668016335927e-05, -1.9907753085135482e-05, -7.64102369430475e-05, -9.179073458653875e-06, -9.023735765367746e-05, -0.0014578201808035374, -0.00013219437096267939, -8.439661905867979e-05, -0.0001399419124936685, -0.04928318411111832, -0.00200737570412457, -0.5069445967674255, -1.612514853477478, -0.049240175634622574, -0.048390403389930725, -0.4443635642528534, -0.27210816740989685, -1.394692063331604, -0.016412610188126564, -0.357413113117218, -0.18070252239704132, -0.2622707784175873, -0.004620352294296026, -0.026412490755319595, -0.0014222278259694576, -0.6058216094970703, -0.33662283420562744, -0.041512370109558105, -4.2676016164477915e-05, -0.012559957802295685, -0.00044276448898017406, -0.3124558925628662, -9.536738616588991e-07, -1.1920858014491387e-05, -5.722029527532868e-06, -0.0004450284468475729, -9.214453893946484e-05, -0.0009888288332149386, -9.536697689327411e-06, -7.152555099310121e-07, -0.00015662873920518905, -0.03380816802382469, -1.058263897895813, -0.39580845832824707, -0.00013004888023715466, -7.545663538621739e-05, -7.4741430580616e-05, -0.06338377296924591, -0.00016652150952722877, -0.007699928712099791, -0.25235065817832947, -0.0004543225804809481, -0.8542147874832153, -0.0008833082392811775, -0.01622355543076992, -0.011362956836819649, -0.004046230111271143, -0.0016217187512665987, -1.8450005054473877, -1.3589766240329482e-05, -3.8179736137390137, -0.0030043248552829027, -0.013640173710882664, -0.3231445848941803, -0.21186092495918274, -0.4448818564414978, -0.017891915515065193, -0.0003499372396618128, -0.6083219647407532, -0.1255485564470291, -0.07455413043498993, -0.3639264702796936, -0.00034231049357913435, -0.00448851240798831, -0.045920439064502716, -0.000198821333469823, -0.8673570156097412, -0.046529628336429596, -0.402228981256485, -0.0008107712492346764, -4.470248313737102e-05, -0.0014081810368224978, -0.006792550440877676, -0.7062799334526062, -0.0012425805907696486, -0.00015925093612167984, -5.960462772236497e-07, -5.960462772236497e-07, -2.3841855067985307e-07, -0.0009982370538637042, 0.0, -1.0728830375228426e-06, -9.524368942948058e-05, -6.854299135738984e-05, -0.09444664418697357, -1.0789873600006104, -0.000613143783994019, -0.07304567843675613, -0.07644658535718918, -0.00571201927959919, -0.4808361530303955, -0.04747090861201286, -0.37574124336242676, -0.00013410145766101778, -0.0015518538421019912, -0.0023412692826241255, -0.002637005876749754, -0.0030459221452474594, -0.048512380570173264, -0.00036435641231946647, -0.0954003632068634, -0.14162948727607727, -5.960462772236497e-07, -2.622600959512056e-06, -1.1920928244535389e-07, -0.05626356601715088, -3.6238969187252223e-05, -0.0007385863573290408, 0.0, -5.960462772236497e-07, -1.1920928244535389e-07, -1.4662635294371285e-05, -1.680836794548668e-05, -0.00016735584358684719, -7.271740287251305e-06, -3.814689989667386e-06, -2.2172682292875834e-05, -0.000771939754486084, -4.1483970562694594e-05, -0.0008828318095766008, -0.0013465156080201268, -0.00038068200228735805, -0.3537752628326416, -0.0007439468172378838, -0.056111425161361694, -0.02492191083729267, -1.4090185165405273, -0.018636249005794525, -0.17668461799621582, -0.04029000923037529, -0.06325453519821167, -0.883553683757782, -0.02574991062283516, -0.0046560680493712425, -6.031808152329177e-05, -0.007797753904014826, -0.1794690191745758, -0.0012732979375869036, -0.01019992120563984, -0.02923315204679966, -0.00043764073052443564, -0.00023135847004596144, -0.0010673070792108774, -0.30487605929374695, -0.0044590807519853115, -0.030347328633069992, -0.0041822828352451324, -0.0007281036232598126, -0.22358614206314087, -0.06001363322138786, -0.027160372585058212, -0.0013461584458127618, -0.29042163491249084, -0.001392705482430756, -0.0016932449070736766, -0.0016037471359595656, -0.034304872155189514, -0.00042882305569946766, -0.1605876237154007, -7.152555099310121e-07, -8.344646857949556e-07, -0.0026295154821127653, -3.576272320060525e-06, -0.004341818857938051, -6.5205356804654e-05, -0.1476384401321411, -6.318072337307967e-06, -1.1920928244535389e-07, -0.0008374521275982261], "finish_reason": "length"}], "metrics": {"energy": 882.0326602802284, "energy_per_token": 3.445440079219642, "time": 21.863144, "time_per_token": 0.08540290625}}
{"outputs": [{"text": "moved_files = []\n    for file in glob.glob(os.path.join(src_dir, '*.'+ext)):\n        filename = os.path.basename(file)\n        if filename not in os.listdir(dest_dir):\n            shutil.move(file, os.path.join(dest_dir, filename))\n            moved_files.append(file)\n    return moved_files", "tokens": ["m", "oved", "_", "files", " =", " []", "\n", "    ", "for", " file", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "src", "_", "dir", ",", " '", "*", ".", "'+", "ext", "))", ":", "\n", "        ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", "\n", "        ", "if", " filename", " not", " in", " os", ".", "list", "dir", "(", "dest", "_", "dir", "):", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " filename", "))", "\n", "            ", "m", "oved", "_", "files", ".", "append", "(", "file", ")", "\n", "    ", "return", " moved", "_", "files", "\n", "\n", "if"], "logprobs": [-1.8471472263336182, -0.0031198421493172646, -0.014057781547307968, -0.031826846301555634, -0.014863112010061741, -0.010469986125826836, -0.03696530684828758, -0.4699338972568512, -1.4503124952316284, -0.369019478559494, -0.43415555357933044, -0.060780227184295654, -0.00014327930693980306, -0.0527518168091774, -0.0009870424401015043, -0.3315417766571045, -1.4305104514278355e-06, -0.00016008525562938303, -8.34461570775602e-06, -0.0008518642862327397, -0.00024291902082040906, -0.002599909668788314, -6.472854875028133e-05, -9.059495641849935e-05, -0.00047636605449952185, -1.8494772911071777, -0.014621486887335777, -0.11130721867084503, -2.618349313735962, -0.06791936606168747, -0.00648939423263073, -0.0006132629350759089, -0.0353754423558712, -0.02354438044130802, -0.746363639831543, -0.006816703826189041, -0.0013328249333426356, -4.768370445162873e-07, -6.556489552167477e-06, -1.5497195136049413e-06, -0.009055024944245815, 0.0, -6.079655122448457e-06, -0.00036125810584053397, -0.0005432083853520453, -0.0056704143062233925, -0.019271284341812134, -0.18168818950653076, -1.3464245796203613, -0.2369682341814041, -1.07287787614041e-05, -0.02186630479991436, -4.172316494077677e-06, -3.4450891689630225e-05, -2.3841855067985307e-07, -0.0001802282058633864, -0.0011185110779479146, -0.0001399419124936685, -5.209310256759636e-05, -0.00776948407292366, -0.03862927109003067, -0.003060540184378624, -0.09220214188098907, -6.6756979322235566e-06, -4.0531076592742465e-06, -0.027921142056584358, -9.405170567333698e-05, -0.035444363951683044, -0.0004518203204497695, -1.1854318380355835, -2.9802276912960224e-06, -1.597391747054644e-05, -3.3378546504536644e-06, -0.00038926175329834223, -0.00011145447206217796, -0.0013533014571294188, -4.95898348162882e-05, -2.5510462364763953e-05, -0.007899472489953041, -0.02124108374118805, -0.002638432662934065, -0.005884229205548763, -0.004258492961525917, -0.012178231962025166, -1.2874520507466514e-05, -4.160317621426657e-05, -0.0001928620331455022, -0.0005827635759487748, -0.000331704446580261, -0.0009221353684552014, -0.30984848737716675, -0.0017848765710368752, -0.008372800424695015, -0.20399188995361328, -0.01602906920015812, -0.002272525103762746, -4.9470632802695036e-05, -1.3828182090946939e-05, -0.5445241332054138, -0.038404446095228195, -0.6134943962097168], "finish_reason": "stop"}], "metrics": {"energy": 339.56544523239126, "energy_per_token": 3.3620341112117944, "time": 8.212147, "time_per_token": 0.08130838613861387}}
{"outputs": [{"text": "src_files = glob.glob(os.path.join(src_dir, f'*{ext}'))\n    moved_files = []\n\n    for src_file in src_files:\n        file_name = os.path.basename(src_file)\n        dest_file = os.path.join(dest_dir, file_name)\n\n        if os.path.isfile(dest_file):\n            print(f\"Warning: File '{file_name}' already exists in the destination directory. Skipping.\")\n        else:\n            try:\n                shutil.move(src_file, dest_dir)\n                moved_files.append(dest_file)\n                print(f\"Moved file: {file_name}\")\n            except Exception as e:\n                print(f\"Error: Could not move file '{file_name}'. {e}\")\n\n    return moved_files", "tokens": ["src", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "src", "_", "dir", ",", " f", "'", "*{", "ext", "}'", "))", "\n", "    ", "m", "oved", "_", "files", " =", " []", "\n", "\n", "    ", "for", " src", "_", "file", " in", " src", "_", "files", ":", "\n", "        ", "file", "_", "name", " =", " os", ".", "path", ".", "bas", "ename", "(", "src", "_", "file", ")", "\n", "        ", "dest", "_", "file", " =", " os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " file", "_", "name", ")", "\n", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "dest", "_", "file", "):", "\n", "            ", "print", "(", "f", "\"", "Warning", ":", " File", " '", "{", "file", "_", "name", "}'", " already", " exists", " in", " the", " destination", " directory", ".", " Sk", "ipping", ".", "\"", ")", "\n", "        ", "else", ":", "\n", "            ", "try", ":", "\n", "                ", "sh", "util", ".", "move", "(", "src", "_", "file", ",", " dest", "_", "dir", ")", "\n", "                ", "m", "oved", "_", "files", ".", "append", "(", "dest", "_", "file", ")", "\n", "                ", "print", "(", "f", "\"", "M", "oved", " file", ":", " {", "file", "_", "name", "}\"", ")", "\n", "            ", "except", " Exception", " as", " e", ":", "\n", "                ", "print", "(", "f", "\"", "Error", ":", " Could", " not", " move", " file", " '", "{", "file", "_", "name", "}'", ".", " {", "e", "}\"", ")", "\n", "\n", "    ", "return", " moved", "_", "files", "\n", "\n", "#"], "logprobs": [-3.124403238296509, -0.028434913605451584, -0.7505051493644714, -0.011065191589295864, -0.08992774784564972, -0.00016652150952722877, -0.005881977267563343, -0.002646992914378643, -0.31661751866340637, -2.7418097943154862e-06, -0.00014280252798926085, -8.106198947643861e-06, -0.0014105618465691805, -0.000200609109015204, -0.0023011888843029737, -5.0424259825376794e-05, -0.0001003691868390888, -0.0005952732171863317, -0.3179595172405243, -0.5726138353347778, -0.9199118614196777, -0.004371491726487875, -0.05251668766140938, -0.0005430892342701554, -0.07300013303756714, -0.11405028402805328, -0.1548503339290619, -0.0011276798322796822, -0.021530818194150925, -0.01615024544298649, -0.004986706655472517, -0.010494876652956009, -0.007120470982044935, -0.611061155796051, -0.0003951007383875549, -0.07942534238100052, -0.3820769786834717, -0.05403878539800644, -0.04405871033668518, -0.023821575567126274, -0.0007176207727752626, -8.344646857949556e-07, -3.8980677345534787e-05, -8.189342770492658e-05, -0.0009889479260891676, -0.009903580881655216, -1.1143825054168701, -0.0092600854113698, -0.03407181426882744, -0.005928313825279474, -0.0009682258241809905, -1.311301275563892e-06, -3.576272320060525e-06, -9.536738616588991e-07, -0.0031409950461238623, -2.3841855067985307e-07, -3.099436753473128e-06, -0.0006161222117953002, -2.3841830625315197e-06, -9.65590606938349e-06, -0.0002022777043748647, -0.007223915308713913, -0.05706208944320679, -0.1397007554769516, -0.0014951966004446149, -0.18055802583694458, -0.04964771866798401, -0.0006413786904886365, -3.576278118089249e-07, -7.510157047363464e-06, -1.1920928244535389e-07, -0.0013259199913591146, -2.8371408916427754e-05, -0.0004886387032456696, -1.4066597032069694e-05, -3.2186455882765586e-06, -0.00013457823661156, -0.0020086844451725483, -2.861018856492592e-06, -1.5497195136049413e-06, -0.00017295771976932883, -0.0015987483784556389, -0.2698765695095062, -0.0017592919757589698, -0.13454553484916687, -0.23902693390846252, -5.960462772236497e-07, -5.936446541454643e-05, -9.536738616588991e-07, -1.5769177675247192, -0.022212522104382515, -1.9550132492440753e-05, -0.015351586975157261, -2.0265558760002023e-06, -0.0001734344696160406, -0.02037126198410988, -0.0354398749768734, -0.0015756584471091628, -0.2698865830898285, -0.002975800074636936, -0.06575377285480499, -0.20518773794174194, -2.8415160179138184, -0.0028936679009348154, -0.7951756119728088, -0.2335042953491211, -4.660974445869215e-05, -0.0790383517742157, -0.0001284993631998077, -2.622600959512056e-06, -0.0013665156438946724, -0.008994892239570618, -0.00042226933874189854, -0.0029332491103559732, -0.20198245346546173, -0.00294263893738389, -0.014465110376477242, -0.092243991792202, -0.10061544179916382, -0.0009610801353119314, -0.14067423343658447, -0.22105549275875092, -0.0004807746736332774, -0.0005722792120650411, -0.9787302017211914, -0.003962998278439045, -2.777537883957848e-05, -0.000144709600135684, -0.0008384049870073795, -1.703449010848999, -4.458328112377785e-05, -0.00027378625236451626, -0.0014906733995303512, -0.040601860731840134, -9.536738616588991e-07, -1.4305104514278355e-06, -0.01962401159107685, -7.390948667307384e-06, -0.0007463291985914111, -2.884823152271565e-05, -4.7205765440594405e-05, -4.9828242481453344e-05, -0.0017958242679014802, -2.2411095415009186e-05, -0.3758666515350342, -0.000742279109545052, -0.0033721032086759806, -0.004872472491115332, -0.2220139503479004, -1.6331539882230572e-05, -6.69933797325939e-05, -0.0007283418672159314, -5.1616290875244886e-05, -0.00022003613412380219, -0.0001528146385680884, -0.3445754051208496, -4.6491513785440475e-06, -0.0001250427303602919, -8.856858039507642e-05, -0.0069665866903960705, -0.7333981394767761, -0.01403192151337862, -0.0009535771678201854, -0.008615231141448021, -0.00924803875386715, -0.2822190225124359, -0.003427228657528758, -1.5392987728118896, -0.5399400591850281, -0.19169408082962036, -0.19309550523757935, -5.519237674889155e-05, -9.775113539944869e-06, -0.15761637687683105, -0.0003771070914808661, -0.002477792324498296, -0.008752199821174145, -2.5748875486897305e-05, -0.3337304890155792, -0.005580086261034012, -0.018607933074235916, -0.00011801023356383666, -0.0025196492206305265, -0.00026008085114881396, -0.006170507986098528, -0.00012027494085486978, -0.002479576040059328, -0.00044860312482342124, -0.07262139767408371, -1.261038899421692, -2.324192762374878, -0.01482400018721819, -0.0008117241668514907, -0.11541055142879486, -0.04996301606297493, -1.4781842764932662e-05, -0.0045921108685433865, -2.634490556374658e-05, -8.583032467868179e-06, -1.2563440799713135, -0.31579405069351196, -1.35137140750885, -0.8870906233787537, -0.008113520219922066, -0.0018737631617113948, -0.002131691901013255, -0.05474982038140297, -0.0015506636118516326, -0.02296273410320282, -0.001416633022017777, -3.933898824470816e-06, -1.311301275563892e-06, -0.46866872906684875, -0.02115868777036667, -1.5813796520233154], "finish_reason": "stop"}], "metrics": {"energy": 728.9880365238189, "energy_per_token": 3.3906420303433435, "time": 18.08225, "time_per_token": 0.08410348837209301}}
{"outputs": [{"text": "if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"The directory '{src_dir}' does not exist.\")\n\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(f\"The directory '{dest_dir}' does not exist.\")\n\n    files = glob.glob(os.path.join(src_dir, f\"*.{ext}\"))\n    moved_files = []\n\n    for file in files:\n        basename = os.path.basename(file)\n        dest_path = os.path.join(dest_dir, basename)\n        if os.path.isfile(dest_path):\n            print(f\"Skipping {basename} because a file with the same name already exists in the destination directory.\")\n        else:\n            shutil.move(file, dest_path)\n            moved_files.append(dest_path)\n\n    return moved_files\n\ntest_src_dir = './test_src'\ntest_dest_dir = './test_dest", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " directory", " '", "{", "src", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "dest", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " directory", " '", "{", "dest", "_", "dir", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "src", "_", "dir", ",", " f", "\"", "*", ".", "{", "ext", "}\"", "))", "\n", "    ", "m", "oved", "_", "files", " =", " []", "\n", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "bas", "ename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", "\n", "        ", "dest", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " bas", "ename", ")", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "dest", "_", "path", "):", "\n", "            ", "print", "(", "f", "\"", "Sk", "ipping", " {", "bas", "ename", "}", " because", " a", " file", " with", " the", " same", " name", " already", " exists", " in", " the", " destination", " directory", ".", "\"", ")", "\n", "        ", "else", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " dest", "_", "path", ")", "\n", "            ", "m", "oved", "_", "files", ".", "append", "(", "dest", "_", "path", ")", "\n", "\n", "    ", "return", " moved", "_", "files", "\n", "\n", "test", "_", "src", "_", "dir", " =", " '", ".", "/", "test", "_", "src", "'", "\n", "test", "_", "dest", "_", "dir", " =", " '", ".", "/", "test", "_", "dest"], "logprobs": [-1.682251214981079, -0.017950579524040222, -0.04380543902516365, -1.3589766240329482e-05, -0.0015824426664039493, -1.5139465176616795e-05, -0.23263944685459137, -0.00019226610311307013, -0.01610930822789669, -1.2040065485052764e-05, -9.059865078597795e-06, -0.1295761913061142, -0.013173921033740044, -0.011553286574780941, -0.029212428256869316, -0.008275032043457031, -0.0002252801787108183, -1.7404405298293568e-05, -0.039287958294153214, -0.20430408418178558, -0.08036378771066666, -2.1816635131835938, -1.884291410446167, -0.8395724892616272, -0.0006632988806813955, -0.0028206822462379932, -4.708655978902243e-05, -3.266281055402942e-05, -0.003951361868530512, -0.028468746691942215, -0.0002791491860989481, -0.0028668041341006756, -0.31915539503097534, -0.020526601001620293, -0.0003979606262873858, -0.0011701886542141438, -0.8891727924346924, -0.00037150635034777224, -0.0721626728773117, -0.0037788189947605133, -0.00024089295766316354, -2.3841855067985307e-07, -0.00011276562872808427, -2.9802276912960224e-06, -0.00285075674764812, -6.592056161025539e-05, -0.0008809261489659548, -1.3828182090946939e-05, -1.311301275563892e-06, -0.0019535997416824102, -0.0004717191040981561, -0.000876757490914315, -0.03249106928706169, -0.0005343916127458215, -6.341733387671411e-05, -2.3841574147809297e-05, -0.0002506657037883997, -0.006037450395524502, -0.00023946279543451965, -0.0023646983318030834, -0.017423776909708977, -0.0011466125724837184, -5.507317473529838e-05, -0.0022184066474437714, -7.390948667307384e-06, -4.768370445162873e-07, -0.000458254711702466, -0.00028153270250186324, -1.1205610462639015e-05, -0.00016807096835691482, -0.00284944917075336, -0.0005896736984141171, -0.000164018536452204, -0.0002431573811918497, -0.020409690216183662, -0.0010993395699188113, -1.8409569263458252, -0.6259804368019104, -0.09936936944723129, -6.985420623095706e-05, -0.011449228040874004, -0.0008285188814625144, -0.2608860433101654, -2.622600959512056e-06, -2.312633478140924e-05, -7.033323527139146e-06, -0.0005298641044646502, -0.00018606838420964777, -0.003546854481101036, -6.556489552167477e-06, -3.4570634852570947e-06, -0.000248043768806383, -0.068990059196949, -0.44687187671661377, -0.33873751759529114, -0.0003554189461283386, -0.00011014331539627165, -7.83174327807501e-05, -0.0039952946826815605, -0.0019317077239975333, -0.055349480360746384, -0.33625003695487976, -0.04978847876191139, -0.0011604249011725187, -0.04653645679354668, -0.015852026641368866, -0.0036975841503590345, -0.02073621191084385, -0.00951552577316761, -0.2112627625465393, -0.0002343380037928, -0.019755976274609566, -0.05270534008741379, -0.3259615898132324, -0.0010919567430391908, -7.116541382856667e-05, -0.0005769256968051195, -0.005455249920487404, -2.577914237976074, -2.1219027985353023e-05, -0.012932476587593555, -0.00020883286197204143, -3.576278118089249e-07, -3.2186455882765586e-06, -3.576278118089249e-07, -0.00048673225683160126, 0.0, -3.3378546504536644e-06, -0.00035529976594261825, -0.0003830652858596295, -0.007322496734559536, -0.13173018395900726, -0.8665903210639954, -0.09503435343503952, -0.5544648766517639, -0.0006064721383154392, -0.0009145130170509219, -1.1920928244535389e-07, -1.7881377516459906e-06, 0.0, -0.0004966217675246298, -1.2516897186287679e-05, -0.0005080600967630744, -5.245195097813848e-06, -1.7881377516459906e-06, -0.00013076403411105275, -0.004490648861974478, 0.0, -9.583967766957358e-05, -0.0027159492019563913, -1.1100590229034424, -0.02587839588522911, -0.23895671963691711, -1.311301275563892e-06, -2.0146166207268834e-05, -4.768370445162873e-07, -2.563015937805176, -0.008042097091674805, -2.4437606043647975e-05, -0.008527295663952827, -1.4305104514278355e-06, -0.00016008525562938303, -0.019836150109767914, -0.027206312865018845, -0.0007970731821842492, -0.4418485462665558, -0.0008105330052785575, -0.13304409384727478, -0.0036112351808696985, -1.4995369911193848, -0.019571760669350624, -1.1431692838668823, -0.06922579556703568, -3.3378546504536644e-06, -0.07374587655067444, -0.8416094779968262, -2.375802755355835, -0.010813566856086254, -0.008141308091580868, -0.0075378515757620335, -0.00041559641249477863, -0.002248499309644103, -0.12821923196315765, -0.0005776405450887978, -0.03677481412887573, -0.32627302408218384, -0.011003765277564526, -0.04293379187583923, -0.056249480694532394, -0.001259844284504652, -0.00039402826223522425, -0.001456272671930492, -0.5400622487068176, -0.0023756397422403097, -2.312633478140924e-05, -0.0002627027570270002, -0.000508417550008744, -0.09459306299686432, -5.960462772236497e-07, -9.536738616588991e-07, -0.008012296631932259, -4.529942543740617e-06, -0.0007877822499722242, -9.715084888739511e-05, -0.007064128294587135, -1.823885577323381e-05, -0.4466036856174469, -0.0005371319712139666, -0.0026125130243599415, -0.0011478032683953643, -0.11272586137056351, -7.986990567587782e-06, -6.079655122448457e-06, -7.807903602952138e-05, -5.566918844124302e-05, -0.00018761781393550336, -0.00015376816736534238, -0.2245038002729416, -8.34461570775602e-06, -2.5629668016335927e-05, -0.0002557904226705432, -0.003053647233173251, -0.1440391093492508, -0.00229119835421443, -0.029629487544298172, -0.0008693729760125279, -5.364403477869928e-06, -2.3841830625315197e-06, -0.48826634883880615, -0.01328485831618309, -2.9940571784973145, -0.004670069552958012, -0.0140602495521307, -0.0031596519984304905, -0.0018344969721511006, -0.0037333332002162933, -0.08231950551271439, -0.05167965963482857, -0.005359566770493984, -0.01363617554306984, -0.0036159863229840994, -0.005545944441109896, -0.007800947409123182, -0.007834776304662228, -0.006290872115641832, -6.9141146923357155e-06, -0.0004400238685775548, -2.3007127310847864e-05, -0.00012718822108581662, -0.00016127715934999287, -0.0005191409145481884, -0.0001919085334520787, -6.508615479106084e-05, -0.00040570611599832773, -0.00012408917245920748, -0.0004262015863787383], "finish_reason": "length"}], "metrics": {"energy": 890.8247316513065, "energy_per_token": 3.479784108012916, "time": 21.86164, "time_per_token": 0.08539703125}}
{"outputs": [{"text": "if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"Source directory {src_dir} not found.\")\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(f\"Destination directory {dest_dir} not found.\")\n\n    moved_files = []\n    for file in glob.glob(os.path.join(src_dir, f\"*.{ext}\")):\n        if os.path.basename(file) not in os.listdir(dest_dir):\n            shutil.move(file, dest_dir)\n            moved_files.append(file)\n\n    return moved_files", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " {", "src", "_", "dir", "}", " not", " found", ".", "\"", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "dest", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Dest", "ination", " directory", " {", "dest", "_", "dir", "}", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " []", "\n", "    ", "for", " file", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "src", "_", "dir", ",", " f", "\"", "*", ".", "{", "ext", "}\"", "))", ":", "\n", "        ", "if", " os", ".", "path", ".", "bas", "ename", "(", "file", ")", " not", " in", " os", ".", "list", "dir", "(", "dest", "_", "dir", "):", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " dest", "_", "dir", ")", "\n", "            ", "m", "oved", "_", "files", ".", "append", "(", "file", ")", "\n", "\n", "    ", "return", " moved", "_", "files"], "logprobs": [-1.682251214981079, -0.017950579524040222, -0.04380543902516365, -1.3589766240329482e-05, -0.0015824426664039493, -1.5139465176616795e-05, -0.23263944685459137, -0.00019226610311307013, -0.01610930822789669, -1.2040065485052764e-05, -9.059865078597795e-06, -0.1295761913061142, -0.013173921033740044, -0.011553286574780941, -0.029212428256869316, -0.008275032043457031, -0.0002252801787108183, -1.7404405298293568e-05, -0.039287958294153214, -0.20430408418178558, -0.08036378771066666, -0.20710189640522003, -0.004133610054850578, -1.0548975467681885, -0.002033310942351818, -3.8742269680369645e-05, -1.6927575416048057e-05, -0.000724887300748378, -1.7590209245681763, -0.0003711488388944417, -0.7653535604476929, -0.011114471592009068, -0.00022968991834204644, -0.0008569859201088548, -0.4383954703807831, -0.013070384971797466, -0.0007379907765425742, -0.00013064485392533243, -1.1920928244535389e-07, -8.34461570775602e-06, -1.7881377516459906e-06, -0.00029762129997834563, -9.405170567333698e-05, -0.0020598401315510273, -8.4638240878121e-06, -2.622600959512056e-06, -0.0007241725688800216, -0.00021598390594590455, -0.0008122005965560675, -0.001790826441720128, -0.00022575691400561482, -3.158996332786046e-05, -3.433168603805825e-05, -0.00013314791431184858, -0.0025160820223391056, -6.603976362384856e-05, -0.0014078239910304546, -0.00017271934484597296, -0.000226472009671852, -0.0005691815749742091, -0.0023381770588457584, -2.8967437174287625e-05, -3.814689989667386e-06, -3.564294092939235e-05, -0.0010871936101466417, -3.93382906622719e-05, -0.0015013862866908312, -0.00015031162183731794, -6.48477507638745e-05, -0.0002374367177253589, -0.2278929054737091, -0.0007714632665738463, -0.9142332673072815, -0.002652224386110902, -0.008048010058701038, -0.017758067697286606, -0.007184148300439119, -0.008795449510216713, -0.02748922072350979, -0.27672258019447327, -0.7461713552474976, -0.30187273025512695, -0.3362460434436798, -0.05180395022034645, -3.886147169396281e-05, -0.06695935130119324, -0.0003582789213396609, -0.3163202404975891, -5.960462772236497e-07, -1.6212332411669195e-05, -2.145764938177308e-06, -0.00047541281674057245, -8.880697714630514e-05, -0.002683730563148856, -5.245195097813848e-06, -2.861018856492592e-06, -0.00022456508304458112, -0.05994144454598427, -0.35877320170402527, -0.19441242516040802, -0.0002256377338198945, -8.451581379631534e-05, -6.758938252460212e-05, -0.0022877492010593414, -0.00285206432454288, -9.297892393078655e-05, -0.01086392067372799, -0.005533852614462376, -2.1313862800598145, -0.2854745388031006, -1.311301275563892e-06, -0.0002299282787134871, -7.152555099310121e-07, -0.619871973991394, -5.960462772236497e-07, -1.1086402082582936e-05, -0.0012207920663058758, -0.0021527467761188745, -0.3076275885105133, -3.4570634852570947e-06, -0.14239856600761414, -1.4305104514278355e-06, -2.5510462364763953e-05, 0.0, -5.209310256759636e-05, -0.0013053239090368152, -2.825220326485578e-05, -9.536738616588991e-07, -0.004917787853628397, -0.0952870100736618, -0.0013238961109891534, -0.17755809426307678, -4.291525328881107e-06, -2.50339189733495e-06, -0.012276090681552887, -9.894321920000948e-06, -0.0030926279723644257, -0.0003164505760651082, -0.2972052991390228, -1.4662635294371285e-05, -7.152555099310121e-07, -0.0027692087460309267, -0.004822290502488613, -0.0022737146355211735, -0.014042617753148079, -1.2993727978027891e-05, -1.585470999998506e-05, -0.0001734344696160406, -0.00016723664884921163, -0.00029392691794782877, -0.00031871485407464206, -0.2840792238712311, -0.00126079679466784, -0.007638413459062576, -0.7826191782951355, -0.002172373700886965, -0.016171008348464966, -0.0025852848775684834, -1.0609570381348021e-05, -5.602820692729438e-06], "finish_reason": "stop"}], "metrics": {"energy": 582.0582105808253, "energy_per_token": 3.637863816130158, "time": 13.66362, "time_per_token": 0.085397625}}
{"outputs": [{"text": "# Check if source directory exists\n    if not os.path.exists(src_dir):\n        raise FileNotFoundError(f\"Source directory {src_dir} not found\")\n\n    # Check if destination directory exists\n    if not os.path.exists(dest_dir):\n        raise FileNotFoundError(f\"Destination directory {dest_dir} not found\")\n\n    # Search for files with the specified extension in the source directory\n    files = glob.glob(os.path.join(src_dir, f\"*.{ext}\"))\n\n    moved_files = []\n    for file in files:\n        # Check if file already exists in destination directory\n        if os.path.exists(os.path.join(dest_dir, os.path.basename(file))):\n            print(f\"File {os.path.basename(file)} already exists in {dest_dir}, skipping...\")\n        else:\n            # Move the file to the destination directory\n            shutil.move(file, dest_dir)\n            moved_files.append(file)\n\n    return moved", "tokens": ["#", " Check", " if", " source", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "src", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Source", " directory", " {", "src", "_", "dir", "}", " not", " found", "\"", ")", "\n", "\n", "    ", "#", " Check", " if", " destination", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "dest", "_", "dir", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Dest", "ination", " directory", " {", "dest", "_", "dir", "}", " not", " found", "\"", ")", "\n", "\n", "    ", "#", " Search", " for", " files", " with", " the", " specified", " extension", " in", " the", " source", " directory", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "src", "_", "dir", ",", " f", "\"", "*", ".", "{", "ext", "}\"", "))", "\n", "\n", "    ", "m", "oved", "_", "files", " =", " []", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "#", " Check", " if", " file", " already", " exists", " in", " destination", " directory", "\n", "        ", "if", " os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "dest", "_", "dir", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", "))", "):", "\n", "            ", "print", "(", "f", "\"", "File", " {", "os", ".", "path", ".", "bas", "ename", "(", "file", ")}", " already", " exists", " in", " {", "dest", "_", "dir", "}", ",", " skipping", ".", ".", ".", "\"", ")", "\n", "        ", "else", ":", "\n", "            ", "#", " Move", " the", " file", " to", " the", " destination", " directory", "\n", "            ", "sh", "util", ".", "move", "(", "file", ",", " dest", "_", "dir", ")", "\n", "            ", "m", "oved", "_", "files", ".", "append", "(", "file", ")", "\n", "\n", "    ", "return", " moved"], "logprobs": [-1.2989866733551025, -0.760466992855072, -0.09539104253053665, -1.288465976715088, -1.232828974723816, -0.0897456631064415, -0.10245215147733688, -0.0015004340093582869, -0.01574794575572014, -0.01438309345394373, -0.0021634523291140795, -2.3841830625315197e-06, -0.00041797960875555873, -1.9550132492440753e-05, -0.24374094605445862, -5.376194530981593e-05, -0.0014640099834650755, -2.2649508537142538e-05, -8.106198947643861e-06, -0.005659153219312429, -0.0017590539064258337, -0.0037558982148766518, -0.020678529515862465, -0.009808322414755821, -0.000248043768806383, -8.940656698541716e-06, -0.0275062695145607, -0.18239232897758484, -0.05106567591428757, -0.09661956131458282, -0.0017635759431868792, -1.1188805103302002, -0.0010152667528018355, -5.638440416078083e-05, -3.0040289857424796e-05, -0.0004940004437230527, -1.7022967338562012, -0.00025054652360267937, -0.9319440126419067, -0.00012170527770649642, -0.00047910655848681927, -0.12021712958812714, -0.0013654442736878991, -0.01693560928106308, -0.06240181252360344, -0.0006974886637181044, -0.009937810711562634, -0.00018690270371735096, -0.0005341533687897027, -0.06788294017314911, -4.351044481154531e-05, -0.0028212766628712416, -0.001570183434523642, -0.00015615197480656207, -3.576278118089249e-07, -1.645074735279195e-05, -1.0013530300057027e-05, -0.0006313714548014104, -5.435795901576057e-05, -0.000788258679676801, -6.198863957251888e-06, -3.576278118089249e-07, -0.0005907459417358041, -9.679325739853084e-05, -0.0004576589271891862, -0.005167223978787661, -0.0005417786305770278, -7.712543447269127e-05, -1.1205610462639015e-05, -0.000105375460407231, -0.003114613238722086, -0.00010549465514486656, -0.0008075552177615464, -4.660974445869215e-05, -0.00013743886665906757, -0.0006388768670149148, -0.002241243841126561, -3.4570634852570947e-06, -2.264974000354414e-06, -2.5152843591058627e-05, -0.0011231550015509129, -3.111314072157256e-05, -0.0011049362365156412, -0.00012516192509792745, -0.00010322991875000298, -0.010331718251109123, -0.0011473270133137703, -0.3330766558647156, -1.7512552738189697, -0.03995182737708092, -0.0446440652012825, -0.46307840943336487, -0.23549212515354156, -0.4440651834011078, -0.002168329432606697, -0.2721850872039795, -0.010455003939568996, -0.006093969568610191, -0.0013165149139240384, -0.03003549762070179, -0.0007475204183720052, -0.6189534664154053, -0.3008403480052948, -0.059608835726976395, -4.5298504119273275e-05, -0.01341530866920948, -0.0004689785710070282, -0.3248644471168518, -1.311301275563892e-06, -6.198863957251888e-06, -8.34461570775602e-06, -0.0004518203204497695, -8.535020606359467e-05, -0.0009398810216225684, -3.933898824470816e-06, -1.4305104514278355e-06, -0.0001456631434848532, -0.03466212376952171, -0.24036388099193573, -0.2291872799396515, -0.00014935807848814875, -6.341733387671411e-05, -6.139089964563027e-05, -0.0029791281558573246, -0.0012379371328279376, -0.0033889738842844963, -0.18156830966472626, -0.0002650863316375762, -0.7078744173049927, -0.000520570669323206, -0.017148669809103012, -0.011954215355217457, -0.003896028036251664, -0.001086121890693903, -0.20456381142139435, -0.6069509983062744, -0.0822138860821724, -0.04708806425333023, -0.39153653383255005, -0.0007597897201776505, -6.937739817658439e-05, -0.0008438840159215033, -0.005370475351810455, -1.290791630744934, -0.6112306118011475, -0.0037523354403674603, -1.1967929601669312, -1.1970086097717285, -0.0003723404952324927, -0.0023749261163175106, -1.8857873678207397, -0.010609060525894165, -0.07164980471134186, -0.00033241944038309157, -0.4056684672832489, -0.13985376060009003, -7.152555099310121e-07, -2.2411095415009186e-05, -1.1920928244535389e-07, -0.15568125247955322, -4.994744449504651e-05, -0.0024861162528395653, -1.1920928244535389e-07, -9.536738616588991e-07, -7.152555099310121e-07, -0.0008372138836421072, -8.940656698541716e-06, -0.0003147821989841759, -9.298280929215252e-06, -2.0265558760002023e-06, -3.8742269680369645e-05, -0.002912091789767146, -2.50339189733495e-06, -7.152555099310121e-07, 0.0, -0.00034254882484674454, 0.0, -7.390948667307384e-06, -4.446407547220588e-05, -0.00026901919045485556, -5.2569914259947836e-05, -0.0007595514762215316, -0.00047291061491705477, -0.7684310674667358, -0.0005603650351986289, -0.11351887136697769, -0.006729439832270145, -0.33020511269569397, -0.1555650383234024, -0.29356855154037476, -2.861018856492592e-06, -2.861018856492592e-06, -2.145764938177308e-06, -0.009663351811468601, 0.0, -8.177422569133341e-05, -3.421248038648628e-05, -0.0015034097013995051, -0.0049184998497366905, -0.0009129646932706237, -0.003257565898820758, -0.7152718901634216, -0.0005541696446016431, -5.638440416078083e-05, -6.079655122448457e-06, -0.33185532689094543, -0.6554211378097534, -0.21608467400074005, -0.3749934732913971, -0.46850502490997314, -0.004519367590546608, -0.0005490464391186833, -0.00026055757189169526, -0.000623032043222338, -1.1296591758728027, -0.019043589010834694, -1.680836794548668e-05, -0.005273716524243355, -0.001753103919327259, -0.3535263240337372, -0.01968584768474102, -1.0176173448562622, -0.0011033882619813085, -0.38348957896232605, -0.058862924575805664, -0.0015672078588977456, -0.0026702960021793842, -0.039466746151447296, -0.00020585325546562672, -0.047417476773262024, -1.4305104514278355e-06, -1.0728830375228426e-06, -0.0026914584450423717, -5.364403477869928e-06, -0.0009658439084887505, -8.332382276421413e-05, -0.05743156373500824, -8.34461570775602e-06, -7.152555099310121e-07, -0.000695344409905374, -0.0006378046819008887, -0.002418452175334096, -0.09365832805633545, -5.8412379075889476e-06, -1.2993727978027891e-05, -0.0004468158003874123, -6.735097849741578e-05, -0.0002449450839776546, -0.00020561488054227084, -0.3097988963127136, -0.0004897110629826784, -0.02390340343117714, -0.12477756291627884, -0.0031018974259495735, -0.06051993742585182, -0.0010288427583873272], "finish_reason": "length"}], "metrics": {"energy": 887.3408183860782, "energy_per_token": 3.466175071820618, "time": 21.653051, "time_per_token": 0.08458223046875}}
