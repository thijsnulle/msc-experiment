{"outputs": [{"text": "data = pd.DataFrame(data, columns=cols)\n    corr_combinations = []\n\n    for c1, c2 in combinations(cols, 2):\n        corr = data[c1].corr(data[c2])\n        if abs(corr) > percentage:\n            corr_combinations.append((c1, c2))\n\n    return corr_combinations", "tokens": ["data", " =", " pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "cols", ")", "\n", "    ", "corr", "_", "com", "bin", "ations", " =", " []", "\n", "\n", "    ", "for", " c", "1", ",", " c", "2", " in", " combinations", "(", "cols", ",", " ", "2", "):", "\n", "        ", "corr", " =", " data", "[", "c", "1", "]", ".", "corr", "(", "data", "[", "c", "2", "])", "\n", "        ", "if", " abs", "(", "corr", ")", " >", " percentage", ":", "\n", "            ", "corr", "_", "com", "bin", "ations", ".", "append", "((", "c", "1", ",", " c", "2", "))", "\n", "\n", "    ", "return", " cor", "r", "_", "com", "bin", "ations", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.5202550888061523, -0.3910534679889679, -0.14251279830932617, -7.748303323751315e-05, -0.007694132160395384, -0.019914215430617332, -0.015293710865080357, -0.13101372122764587, -0.02815169468522072, -0.048913292586803436, -0.00268729729577899, -0.011804253794252872, -0.03351689502596855, -0.2425539493560791, -0.45913082361221313, -0.17375488579273224, -0.22207248210906982, -0.007106030359864235, -3.838465272565372e-05, -0.006181052420288324, -0.1980653554201126, -0.004025689791887999, -1.4529212713241577, -0.0005745429079979658, -0.4471961259841919, -2.783684492111206, -0.12444036453962326, -0.016910409554839134, -0.003578807692974806, -2.6464111215318553e-05, -0.0063394405879080296, -0.012316244654357433, -0.0027607681695371866, -0.6323870420455933, -0.0013303249143064022, -0.037916090339422226, -0.00036590558011084795, -8.523101132595912e-05, -0.01098313182592392, -0.0031431340612471104, -0.8400625586509705, -0.10874642431735992, -0.16559258103370667, -0.016235284507274628, -0.004886826500296593, -0.0005696581210941076, -0.0068667856976389885, -0.0003034608089365065, -0.009615889750421047, -0.00046921687317080796, -0.0004638549580704421, -0.00012182447244413197, -1.6927575416048057e-05, -0.00010394509445177391, -0.05980738252401352, -0.023386366665363312, -0.07937469333410263, -0.04444294050335884, -0.10688600689172745, -5.376194530981593e-05, -0.0028127175755798817, -0.010655177757143974, -0.3780713379383087, -0.16514134407043457, -0.007123548071831465, -0.005059889983385801, -0.0008042200352065265, -0.0076658595353364944, -0.0001134808044298552, -0.00031680811662226915, -0.00010668662434909493, -8.344646857949556e-07, -0.00046433156239800155, -0.0001711698860162869, -0.0036042272113263607, -0.0007214327342808247, -8.463501580990851e-05, -0.00011908298620255664, -0.0017143089789897203, -4.5298504119273275e-05, -0.0011862630490213633, -0.0014603198505938053, -0.07375938445329666, -0.0008912881603464484, -0.007561868987977505, -0.011051987297832966, -2.7418097943154862e-06, -9.417489309271332e-06, -1.2755313036905136e-05, -6.305972783593461e-05, -1.0728830375228426e-06, -1.0301499366760254, -4.768370445162873e-07, -3.576278118089249e-07, -8.010543388081715e-05, -0.00012575789878610522, -0.05340658500790596], "finish_reason": "stop"}], "metrics": {"energy": 122.86014548873901, "energy_per_token": 1.2665994380282373, "time": 5.027726, "time_per_token": 0.051832226804123714}}
{"outputs": [{"text": "corr_combinations = list(combinations(cols, 2))\n    for c in corr_combinations:\n        corr = data[0].corr(data[1], method='pearson', cols=c)\n        if corr < 1 and corr > percentage:\n            return corr\n    return None", "tokens": ["corr", "_", "com", "bin", "ations", " =", " list", "(", "com", "bin", "ations", "(", "cols", ",", " ", "2", "))", "\n", "    ", "for", " c", " in", " cor", "r", "_", "com", "bin", "ations", ":", "\n", "        ", "corr", " =", " data", "[", "0", "]", ".", "corr", "(", "data", "[", "1", "]", ",", " method", "='", "pe", "ar", "son", "'", ",", " col", "s", "=", "c", ")", "\n", "        ", "if", " cor", "r", " <", " ", "1", " and", " cor", "r", " >", " percentage", ":", "\n", "            ", "return", " cor", "r", "\n", "    ", "return", " None", "\n", "\n", "if"], "logprobs": [-0.9857874512672424, -0.054816290736198425, -0.06801013648509979, -0.0027353274635970592, -3.2543604902457446e-05, -0.009139487519860268, -2.348888874053955, -0.7294372916221619, -0.09753119945526123, -0.0008207766804844141, -2.992108420585282e-05, -0.006718072574585676, -0.01290282141417265, -0.0020016650669276714, -0.04143814370036125, -0.0013323486782610416, -0.0006386386230587959, -0.06478095054626465, -0.26005274057388306, -1.8462920188903809, -2.2683000564575195, -1.0422048568725586, -0.11435963958501816, -6.437280717364047e-06, -0.0005604841862805188, -5.411955135059543e-05, -5.352353764465079e-05, -1.0728830375228426e-06, -0.027691232040524483, -0.008341590873897076, -0.006166716571897268, -1.6735732555389404, -0.20893354713916779, -0.6474093794822693, -0.2650608718395233, -2.8470325469970703, -1.498186469078064, -0.01294789183884859, -0.058366015553474426, -0.04438033699989319, -0.11043538898229599, -0.026215795427560806, -0.22831451892852783, -0.1736905574798584, -0.3509947657585144, -0.3916172981262207, -0.36362555623054504, -0.23137839138507843, -3.540453326422721e-05, -0.0003933132975362241, -1.9359943866729736, -0.0010998159414157271, -2.596395492553711, -0.008937237784266472, -0.08079402893781662, -0.05723704770207405, -0.4664773941040039, -0.06994334608316422, -0.010858967900276184, -0.06505889445543289, -0.8166396617889404, -2.50339189733495e-06, -0.9222022891044617, -2.698483943939209, -0.7873949408531189, -1.718205451965332, -0.17958109080791473, -0.0002790300059132278, -0.6971614956855774, -0.5122066140174866, -0.00856653694063425, -0.018683986738324165, -0.0038091023452579975, -0.23049210011959076, -2.5896849632263184, -0.00013016807497479022, -1.6188949346542358, -0.4036393165588379, -0.1114451140165329, -0.6142102479934692, -0.33990219235420227, -0.011891193687915802, -1.6005213260650635], "finish_reason": "stop"}], "metrics": {"energy": 96.19023472404481, "energy_per_token": 1.1589184906511423, "time": 3.365801, "time_per_token": 0.04055181927710843}}
{"outputs": [{"text": "corr_combinations = []\n\n    # Calculate column combinations\n    for col1, col2 in combinations(cols, 2):\n        corr = data[col1][0].corr(data[col2][0])\n        if abs(corr) > percentage:\n            corr_combinations.append((col1, col2))\n\n    return corr_combinations", "tokens": ["corr", "_", "com", "bin", "ations", " =", " []", "\n", "\n", "    ", "#", " Calculate", " column", " combinations", "\n", "    ", "for", " col", "1", ",", " col", "2", " in", " combinations", "(", "cols", ",", " ", "2", "):", "\n", "        ", "corr", " =", " data", "[", "col", "1", "][", "0", "]", ".", "corr", "(", "data", "[", "col", "2", "][", "0", "])", "\n", "        ", "if", " abs", "(", "corr", ")", " >", " percentage", ":", "\n", "            ", "corr", "_", "com", "bin", "ations", ".", "append", "((", "col", "1", ",", " col", "2", "))", "\n", "\n", "    ", "return", " cor", "r", "_", "com", "bin", "ations", "\n", "\n", "def"], "logprobs": [-0.9857874512672424, -0.054816290736198425, -0.06801013648509979, -0.0027353274635970592, -3.2543604902457446e-05, -0.009139487519860268, -0.19673962891101837, -0.011586870066821575, -1.1761393547058105, -0.0008370947907678783, -1.3836562633514404, -2.2624595165252686, -3.094634532928467, -1.5709774494171143, -0.5116501450538635, -0.0010938619961962104, -0.6176179051399231, -1.6211209297180176, -0.43879127502441406, -0.03992525488138199, -0.001214005402289331, -0.00012087091454304755, -0.009883632883429527, -0.01812596246600151, -0.0021592890843749046, -0.021903391927480698, -0.001046348363161087, -0.01909259334206581, -0.00016890530241653323, -8.821098163025454e-05, -0.0038437785115092993, -0.016054291278123856, -0.6670856475830078, -0.16478331387043, -0.4118460714817047, -0.38920265436172485, -0.21596644818782806, -0.03755379840731621, -1.043383240699768, -1.491634488105774, -0.03207693621516228, -0.05045108497142792, -0.02486051432788372, -0.0011025547282770276, -0.0017794027226045728, -4.327203714638017e-05, -4.410646579344757e-05, -0.0022551598958671093, -0.0010644490830600262, -0.0011378012131899595, -0.022023627534508705, -0.028747474774718285, -0.14316561818122864, -0.05438533425331116, -0.21255145967006683, -7.83174327807501e-05, -0.003941862843930721, -0.007094903849065304, -0.43003949522972107, -0.1219615563750267, -0.008638158440589905, -0.011708704754710197, -0.0010090741561725736, -0.01087606605142355, -0.0001357701694360003, -0.0006605588714592159, -0.0002420847595203668, -5.960462772236497e-07, -0.0007715824176557362, -0.0004545609117485583, -0.006880400702357292, -0.012818558141589165, -0.00022766382608097047, -0.0009971652179956436, -0.0021540552843362093, -5.4596363042946905e-05, -0.0016807490028440952, -0.0023858672939240932, -0.04833690822124481, -0.00199773907661438, -0.03168630599975586, -0.009874071925878525, -1.9073468138230965e-06, -2.0265558760002023e-06, -1.2397689715726301e-05, -8.964136941358447e-05, -1.5497195136049413e-06, -0.3532700538635254, -0.0055499752052128315, -0.622715950012207], "finish_reason": "stop"}], "metrics": {"energy": 123.3325687789917, "energy_per_token": 1.37036187532213, "time": 3.790936, "time_per_token": 0.04212151111111111}}
{"outputs": [{"text": "corr_combinations = []\n    all_combinations = list(combinations(cols, 2))\n    for comb in all_combinations:\n        # Calculate correlation\n        corr = data.corr(method='pearson', axis=0)[comb[0]][comb[1]]\n        # Add to result if correlation is greater than threshold\n        if abs(corr) >= MIN_PERCENTAGE:\n            corr_combinations.append((comb[0], comb[1]))\n    return corr_combinations", "tokens": ["corr", "_", "com", "bin", "ations", " =", " []", "\n", "    ", "all", "_", "com", "bin", "ations", " =", " list", "(", "com", "bin", "ations", "(", "cols", ",", " ", "2", "))", "\n", "    ", "for", " comb", " in", " all", "_", "com", "bin", "ations", ":", "\n", "        ", "#", " Calculate", " correlation", "\n", "        ", "corr", " =", " data", ".", "corr", "(", "method", "='", "pe", "ar", "son", "'", ",", " axis", "=", "0", ")[", "comb", "[", "0", "]", "][", "comb", "[", "1", "]]", "\n", "        ", "#", " Add", " to", " result", " if", " correlation", " is", " greater", " than", " threshold", "\n", "        ", "if", " abs", "(", "corr", ")", " >=", " MIN", "_", "PER", "C", "ENT", "AGE", ":", "\n", "            ", "corr", "_", "com", "bin", "ations", ".", "append", "((", "comb", "[", "0", "]", ",", " comb", "[", "1", "]))", "\n", "    ", "return", " cor", "r", "_", "com", "bin", "ations", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.9857874512672424, -0.054816290736198425, -0.06801013648509979, -0.0027353274635970592, -3.2543604902457446e-05, -0.009139487519860268, -0.19673962891101837, -0.011586870066821575, -0.369292676448822, -3.517092704772949, -0.01010115072131157, -0.32828256487846375, -0.06051196902990341, -0.0008799732895568013, -0.008874262683093548, -0.5780484080314636, -0.002444971352815628, -0.025276485830545425, -7.068861305015162e-05, -1.7046782886609435e-05, -0.0029264739714562893, -0.02727545239031315, -0.0018994638230651617, -0.03055153787136078, -0.0025843337643891573, -0.00030179237364791334, -0.0566379576921463, -0.3111782670021057, -0.35085904598236084, -1.3941328525543213, -0.11942508071660995, -0.00829229224473238, -9.285972191719338e-05, -5.61460001335945e-05, -0.0007887351675890386, -5.960462772236497e-07, -0.00036971885128878057, -0.00381337758153677, -0.005319725722074509, -3.719548463821411, -2.1160411834716797, -1.3670005798339844, -1.1855741739273071, -0.0013711584033444524, -0.5918623805046082, -0.08426033705472946, -0.42078468203544617, -1.3827085494995117, -0.07954271137714386, -0.6377133131027222, -2.0649571418762207, -0.2981875538825989, -0.08561071753501892, -1.9788545614574105e-05, -0.0005221195751801133, -0.6594664454460144, -6.270212179515511e-05, -0.39569154381752014, -0.005067599471658468, -0.05700848996639252, -0.2189372181892395, -0.028098493814468384, -0.22072277963161469, -0.004523758310824633, -0.008406727574765682, -0.08459591120481491, -0.0002762889489531517, -0.0001699779968475923, -0.0002723561483435333, -0.005167105700820684, -0.020444495603442192, -0.12489382922649384, -1.0584862232208252, -2.440793752670288, -0.730797290802002, -0.9235802292823792, -0.2835838794708252, -0.43907594680786133, -0.12338962405920029, -0.6475209593772888, -0.02516896463930607, -0.41886284947395325, -0.0335671566426754, -0.0006042085005901754, -0.004830476362258196, -0.4919717311859131, -0.00019167017308063805, -0.008685076609253883, -0.0181638915091753, -1.205822229385376, -2.6760287284851074, -3.6954811548639555e-06, -1.9192511899746023e-05, -0.00035470392322167754, -3.981510963058099e-05, -1.3470558769768104e-05, -0.006063044536858797, -0.005357195157557726, -0.0016583750257268548, -0.01723385788500309, -9.7508447652217e-05, -0.0004312062228564173, -8.4638240878121e-06, -1.1920928244535389e-07, -0.0015343570848926902, -0.0004362108593340963, -2.0365705490112305, -0.009074516594409943, -0.0003817544784396887, -0.00035768310772255063, -0.00020621081057470292, -0.0010184821439906955, -0.004782903008162975, -8.630380034446716e-05, -0.00013541258522309363, -0.0026572179049253464, -0.0027655235026031733, -0.26601141691207886, -0.02679392881691456, -0.005924166180193424, -5.960462772236497e-07, -4.887569048150908e-06, -5.125986263010418e-06, -6.711257447022945e-05, -8.344646857949556e-07, -1.385164499282837, -4.768370445162873e-07, -5.960462772236497e-07, -5.495397272170521e-05, -0.00015293381875380874, -0.07021697610616684], "finish_reason": "stop"}], "metrics": {"energy": 133.17564210128782, "energy_per_token": 1.0166079549716627, "time": 5.4724693, "time_per_token": 0.04177457480916031}}
{"outputs": [{"text": "corr_combinations = []\n    combinations_length = len(cols)\n    for i in range(2, combinations_length + 1):\n        for combination in combinations(cols, i):\n            corr_score = calculate_corr_score(data, combination)\n            if corr_score > MIN_PERCENTAGE:\n                corr_combinations.append(list(combination))\n    return corr_combinations", "tokens": ["corr", "_", "com", "bin", "ations", " =", " []", "\n", "    ", "com", "bin", "ations", "_", "length", " =", " len", "(", "cols", ")", "\n", "    ", "for", " i", " in", " range", "(", "2", ",", " combinations", "_", "length", " +", " ", "1", "):", "\n", "        ", "for", " combination", " in", " combinations", "(", "cols", ",", " i", "):", "\n", "            ", "corr", "_", "score", " =", " calculate", "_", "corr", "_", "score", "(", "data", ",", " combination", ")", "\n", "            ", "if", " cor", "r", "_", "score", " >", " MIN", "_", "PER", "C", "ENT", "AGE", ":", "\n", "                ", "corr", "_", "com", "bin", "ations", ".", "append", "(", "list", "(", "combination", "))", "\n", "    ", "return", " cor", "r", "_", "com", "bin", "ations", "\n", "\n", "def"], "logprobs": [-0.9857874512672424, -0.054816290736198425, -0.06801013648509979, -0.0027353274635970592, -3.2543604902457446e-05, -0.009139487519860268, -0.19673962891101837, -0.011586870066821575, -0.369292676448822, -2.786801338195801, -0.7247677445411682, -0.004365319851785898, -0.294927716255188, -3.3810620307922363, -0.04157137870788574, -0.41672271490097046, -0.0005741854547522962, -0.04175775870680809, -0.0134924640879035, -0.15861520171165466, -0.3363138437271118, -0.5409454107284546, -0.44139355421066284, -0.016998430714011192, -0.00356704811565578, -0.0028765511233359575, -1.2391737699508667, -0.001701218425296247, -0.0135149285197258, -1.5139465176616795e-05, -2.3841830625315197e-06, -0.6692067980766296, -0.001812126487493515, -0.0017362057697027922, -0.004928108304738998, -0.019764157012104988, -0.0048079355619847775, -0.8045727014541626, -0.6537467241287231, -0.01668311282992363, -0.02237282134592533, -0.00336307380348444, -0.013290975242853165, -0.00046564225340262055, -0.004084459971636534, -0.003925239201635122, -0.007843883708119392, -0.00415818439796567, -0.7405821681022644, -1.352931261062622, -4.341782093048096, -0.015165031887590885, -3.928401470184326, -0.0035810647532343864, -0.941322922706604, -0.44712042808532715, -0.058521073311567307, -0.017238544300198555, -0.09876076877117157, -0.006104633212089539, -0.432769238948822, -0.3003978133201599, -0.013487642630934715, -0.01574806310236454, -0.02294677309691906, -0.10303646326065063, -1.3947389561508317e-05, -0.0004822045157197863, -5.936446541454643e-05, -0.6866906881332397, -1.037921667098999, -7.152555099310121e-07, -1.9311717551317997e-05, -0.0010507544502615929, -5.6980417866725475e-05, -1.2040065485052764e-05, -0.005050045438110828, -0.004772581160068512, -0.0008114859228953719, -0.15839393436908722, -0.00015448330668732524, -0.0047235810197889805, -7.080780778778717e-05, -2.3841855067985307e-07, -0.002593132434412837, -0.006034132558852434, -0.05481143668293953, -2.3964898586273193, -0.001192573574371636, -0.010159800760447979, -0.006820137612521648, -0.004460148513317108, -0.2096564620733261, -0.012249949388206005, -0.012965190224349499, -2.145764938177308e-06, -2.3841855067985307e-07, -1.0967194612021558e-05, -0.0001333863037871197, -3.576278118089249e-07, -0.01102734636515379, -0.004664255306124687, -0.03734515607357025], "finish_reason": "stop"}], "metrics": {"energy": 116.67914498519896, "energy_per_token": 1.1328072328660093, "time": 4.627968, "time_per_token": 0.04493172815533981}}
{"outputs": [{"text": "corr_combinations = list(combinations(cols, 2))\n    for i in range(1, len(cols)):\n        for combo in corbinations(cols, i):\n            corr = data.corr(combo)\n            if corr[0, 1] > percentage:\n                corr_combinations.append(combo)\n    return corr_combinations", "tokens": ["corr", "_", "com", "bin", "ations", " =", " list", "(", "com", "bin", "ations", "(", "cols", ",", " ", "2", "))", "\n", "    ", "for", " i", " in", " range", "(", "1", ",", " len", "(", "cols", "))", ":", "\n", "        ", "for", " combo", " in", " cor", "bin", "ations", "(", "cols", ",", " i", "):", "\n", "            ", "corr", " =", " data", ".", "corr", "(", "com", "bo", ")", "\n", "            ", "if", " cor", "r", "[", "0", ",", " ", "1", "]", " >", " percentage", ":", "\n", "                ", "corr", "_", "com", "bin", "ations", ".", "append", "(", "com", "bo", ")", "\n", "    ", "return", " cor", "r", "_", "com", "bin", "ations", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.9857874512672424, -0.054816290736198425, -0.06801013648509979, -0.0027353274635970592, -3.2543604902457446e-05, -0.009139487519860268, -2.348888874053955, -0.7294372916221619, -0.09753119945526123, -0.0008207766804844141, -2.992108420585282e-05, -0.006718072574585676, -0.01290282141417265, -0.0020016650669276714, -0.04143814370036125, -0.0013323486782610416, -0.0006386386230587959, -0.06478095054626465, -0.26005274057388306, -1.8462920188903809, -1.5126773118972778, -0.35004010796546936, -0.10027711093425751, -0.0013568728463724256, -2.0181326866149902, -0.01600431464612484, -0.03889772668480873, -0.00012373158824630082, -0.25080275535583496, -0.30173546075820923, -0.0006696127820760012, -0.023997677490115166, -0.0051956865936517715, -0.6614367961883545, -3.4707608222961426, -0.020361917093396187, -2.814617156982422, -0.012920002453029156, -0.021411340683698654, -0.037509821355342865, -0.05327107757329941, -0.027621889486908913, -0.030649812892079353, -0.11337637156248093, -0.006159726530313492, -0.008915852755308151, -1.0776572227478027, -0.9691338539123535, -1.227943778038025, -0.46467533707618713, -0.11372093856334686, -0.2541191875934601, -0.3735862076282501, -0.007728200871497393, -1.0329411029815674, -0.4067884087562561, -0.02501341514289379, -1.0179296731948853, -0.8769888281822205, -0.0025720868725329638, -0.7214665412902832, -2.3598110675811768, -1.3254226446151733, -0.3211221992969513, -0.002239816589280963, -0.0014478211523965001, -0.28752589225769043, -0.42315924167633057, -0.02306699939072132, -0.013216273859143257, -0.006527767516672611, -0.043793343007564545, -0.0010898133041337132, -0.0020598401315510273, -0.0008001701789908111, -6.437280717364047e-06, -0.016358666121959686, -0.02235848270356655, -0.35849061608314514, -0.11043687909841537, -0.0010596857173368335, -0.013739888556301594, -0.020966792479157448, -0.31707993149757385, -0.021364782005548477, -0.024106372147798538, -9.583967766957358e-05, -0.0016214807983487844, -0.0007770617958158255, -0.000251142424531281, -1.4305104514278355e-06, -1.4821687936782837, -4.410734163684538e-06, -4.768370445162873e-07, -5.447716102935374e-05, -0.0003594706067815423, -0.04454875364899635], "finish_reason": "stop"}], "metrics": {"energy": 140.38604030418395, "energy_per_token": 1.447278766022515, "time": 4.0052295, "time_per_token": 0.04129102577319588}}
{"outputs": [{"text": "corr_combinations = list(\n        combinations(cols, 2))  # create all combinations of column names\n\n    # calculate absolute correlation for each pair of columns\n    corr_values = []\n    for col1, col2 in corr_combinations:\n        # calculate correlation using the Pandas DataFrame\n        df = pd.DataFrame(data=data, columns=cols)\n        corr = df[col1].corr(df[col2])\n        # if the absolute correlation is greater than the threshold, add the pair to the results\n        if abs(corr) > percentage:\n            corr_values.append(corr)\n\n    if len(corr_values) < 1:\n        raise ValueError(\"No combinations found that meet the threshold\")\n\n    return corr_combinations", "tokens": ["corr", "_", "com", "bin", "ations", " =", " list", "(", "\n", "        ", "com", "bin", "ations", "(", "cols", ",", " ", "2", "))", "  ", "#", " create", " all", " combinations", " of", " column", " names", "\n", "\n", "    ", "#", " calculate", " absolute", " correlation", " for", " each", " pair", " of", " columns", "\n", "    ", "corr", "_", "values", " =", " []", "\n", "    ", "for", " col", "1", ",", " col", "2", " in", " cor", "r", "_", "com", "bin", "ations", ":", "\n", "        ", "#", " calculate", " correlation", " using", " the", " Pand", "as", " Data", "Frame", "\n", "        ", "df", " =", " pd", ".", "DataFrame", "(", "data", "=", "data", ",", " columns", "=", "cols", ")", "\n", "        ", "corr", " =", " df", "[", "col", "1", "]", ".", "corr", "(", "df", "[", "col", "2", "])", "\n", "        ", "#", " if", " the", " absolute", " correlation", " is", " greater", " than", " the", " threshold", ",", " add", " the", " pair", " to", " the", " results", "\n", "        ", "if", " abs", "(", "corr", ")", " >", " percentage", ":", "\n", "            ", "corr", "_", "values", ".", "append", "(", "corr", ")", "\n", "\n", "    ", "if", " len", "(", "corr", "_", "values", ")", " <", " ", "1", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "No", " combinations", " found", " that", " meet", " the", " threshold", "\"", ")", "\n", "\n", "    ", "return", " cor", "r", "_", "com", "bin", "ations", "\n", "\n", "if"], "logprobs": [-0.9857874512672424, -0.054816290736198425, -0.06801013648509979, -0.0027353274635970592, -3.2543604902457446e-05, -0.009139487519860268, -2.348888874053955, -0.7294372916221619, -2.8607892990112305, -0.024227041751146317, -0.20667365193367004, -0.0007246490567922592, -1.811964830267243e-05, -0.04759617894887924, -0.07272493839263916, -0.004651796538382769, -0.07966083288192749, -0.0013668728061020374, -0.8747382760047913, -0.4777114987373352, -0.003964779432862997, -3.4491629600524902, -1.0430772304534912, -0.8571524620056152, -0.09833624213933945, -2.4055559635162354, -0.15932488441467285, -0.43321165442466736, -0.9894243478775024, -0.0009591746493242681, -1.3644390106201172, -2.6644716262817383, -2.205127239227295, -0.3994182050228119, -0.6877840757369995, -0.14799299836158752, -0.638468325138092, -0.11068834364414215, -0.1432584822177887, -0.12398184835910797, -0.0024791003670543432, -1.1831724643707275, -0.15721990168094635, -1.6310808658599854, -0.00876094400882721, -0.8852826356887817, -0.011700339615345001, -0.029615599662065506, -0.01437005028128624, -1.0242525339126587, -0.1080680713057518, -0.004190474282950163, -0.00021324267436284572, -4.029192859889008e-05, -0.0005957497633062303, -0.0016526625258848071, -4.815939246327616e-05, -0.00028951745480298996, -1.764281842042692e-05, -0.0001262346631847322, -1.5497195136049413e-06, -0.00022587609419133514, -0.010749412700533867, -0.004923126194626093, -3.4192702770233154, -2.0753564834594727, -1.1491841077804565, -2.4256479740142822, -1.4090245962142944, -3.3071725368499756, -5.340433563105762e-05, -1.8791636228561401, -0.011776803992688656, -0.6942798495292664, -0.0027183268684893847, -1.3198373317718506, -0.018141767010092735, -0.009550005197525024, -0.00014220656885299832, -0.003241524798795581, -0.026793234050273895, -0.04429663345217705, -2.655156373977661, -0.008923650719225407, -0.014410942792892456, -0.004740784410387278, -0.16358385980129242, -0.004292322788387537, -0.00617643166333437, -0.06254695355892181, -0.021486366167664528, -0.3153263330459595, -0.35888028144836426, -0.08795084059238434, -0.023454604670405388, -0.008079465478658676, -0.0007501410436816514, -0.012737465091049671, -0.0002843929105438292, -0.008143790997564793, -0.0007614573696628213, -0.0015937496209517121, -0.00020454221521504223, -7.438383181579411e-05, -0.0005395148764364421, -0.06084192544221878, -0.07500336319208145, -0.188190296292305, -2.237114906311035, -2.1997337341308594, -0.6697477698326111, -0.6109970808029175, -0.24119865894317627, -0.1312514841556549, -0.16728389263153076, -0.004780767485499382, -0.11084850877523422, -0.2589017152786255, -0.15965458750724792, -0.46919336915016174, -0.9151080846786499, -0.260734498500824, -0.2674339711666107, -0.2087341696023941, -3.4554710388183594, -0.3524295687675476, -0.0011480414541438222, -0.035777974873781204, -0.03393055126070976, -6.794698856538162e-05, -0.007138935383409262, -0.010980302467942238, -0.33438923954963684, -0.059160277247428894, -0.0032914294861257076, -0.00891821552067995, -0.0010336062405258417, -0.01692541316151619, -0.00030322244856506586, -0.005603558383882046, -0.003868834814056754, -0.0014429405564442277, -1.5995166301727295, -0.46116504073143005, -0.004299207124859095, -0.011857149191200733, -0.21592868864536285, -0.008812937885522842, -3.2006337642669678, -0.6034813523292542, -0.00011395759065635502, -0.004320572596043348, -0.00023398046323563904, -0.04248923063278198, -0.014571556821465492, -2.6114253997802734, -0.2823010981082916, -0.7424598932266235, -0.012560310773551464, -0.40726950764656067, -0.001661945367231965, -1.381000280380249, -0.7592784762382507, -0.0001323135511483997, -0.18165718019008636, -0.3060135841369629, -0.3618128299713135, -2.2020411491394043, -0.20587261021137238, -2.297186851501465, -0.3047090768814087, -0.01661171391606331, -0.5386065244674683, -1.259516954421997, -0.002662567887455225, -0.009718840010464191, -0.34873220324516296, -0.0014531777705997229, -0.1710425168275833, -0.13041852414608002, -3.2066785934148356e-05, -0.00012933371181134135, -0.20595216751098633, -0.00047302976599894464, -2.3841830625315197e-06, -0.8268173336982727, -0.020098485052585602, -1.3499902486801147], "finish_reason": "stop"}], "metrics": {"energy": 199.1892366809845, "energy_per_token": 1.0595172163882154, "time": 8.195231, "time_per_token": 0.04359165425531915}}
{"outputs": [{"text": "corr_combinations = []\n    all_pairs = combinations(cols, 2)\n    for pair in all_pairs:\n        col1, col2 = pair\n        corr = data.corr(col1, col2)\n        if abs(corr) > percentage:\n            corr_combinations.append(pair)\n    return corr_combinations", "tokens": ["corr", "_", "com", "bin", "ations", " =", " []", "\n", "    ", "all", "_", "pairs", " =", " combinations", "(", "cols", ",", " ", "2", ")", "\n", "    ", "for", " pair", " in", " all", "_", "pairs", ":", "\n", "        ", "col", "1", ",", " col", "2", " =", " pair", "\n", "        ", "corr", " =", " data", ".", "corr", "(", "col", "1", ",", " col", "2", ")", "\n", "        ", "if", " abs", "(", "corr", ")", " >", " percentage", ":", "\n", "            ", "corr", "_", "com", "bin", "ations", ".", "append", "(", "pair", ")", "\n", "    ", "return", " cor", "r", "_", "com", "bin", "ations"], "logprobs": [-0.9857874512672424, -0.054816290736198425, -0.06801013648509979, -0.0027353274635970592, -3.2543604902457446e-05, -0.009139487519860268, -0.19673962891101837, -0.011586870066821575, -0.369292676448822, -3.517092704772949, -0.01010115072131157, -2.6402294635772705, -0.05594697594642639, -0.6830580830574036, -0.0022488560061901808, -0.03326382488012314, -0.002416192786768079, -0.03896939009428024, -0.0005664412747137249, -0.00017128908075392246, -0.06433504074811935, -0.24187897145748138, -0.23316898941993713, -0.4654850363731384, -0.037850093096494675, -0.011093487031757832, -2.634490556374658e-05, -5.125986263010418e-06, -0.0002119316632160917, -0.0033375294879078865, -0.004288761876523495, -2.2223401069641113, -0.31255462765693665, -0.18251916766166687, -0.0019014865392819047, -0.0001357701694360003, -0.0010216975351795554, -0.01210745144635439, -0.11676537245512009, -0.015984371304512024, -0.5946729183197021, -0.146299809217453, -0.2867746651172638, -0.8834654688835144, -0.042581651359796524, -0.48682859539985657, -0.7958827018737793, -0.03678262606263161, -0.08432652056217194, -0.010769343003630638, -0.0006009918288327754, -0.8630158305168152, -0.3037537932395935, -0.011667466722428799, -0.06519817560911179, -0.15251024067401886, -0.0001951265730895102, -0.00514967180788517, -0.045527324080467224, -0.5584828853607178, -0.1339675635099411, -0.005513817071914673, -0.008713084273040295, -0.0012915135594084859, -0.0247187577188015, -0.00022349244682118297, -0.001801416976377368, -0.00013374387344811112, -5.960462772236497e-07, -0.0006170752458274364, -0.00038890427094884217, -0.27733027935028076, -0.01371202152222395, -0.00023624490131624043, -0.0018206939566880465, -0.1876377910375595, -0.007462364621460438, -0.005751607473939657, -1.6689286894688848e-06, -5.483612312673358e-06, -9.417489309271332e-06, -0.00013279033009894192, -1.311301275563892e-06], "finish_reason": "stop"}], "metrics": {"energy": 87.45462546157837, "energy_per_token": 1.0536701862840767, "time": 3.5812018, "time_per_token": 0.043147009638554217}}
{"outputs": [{"text": "corr_combinations = list()\n    combinations_list = list(combinations(cols, 2))\n\n    for columns in combinations_list:\n        corr = data.corr()\n        corr = corr.iloc[cols.index(columns[0])][cols.index(columns[1])]\n\n        if corr >= MIN_PERCENTAGE:\n            corr_combinations.append((columns[0], columns[1]))\n\n    return corr_combinations", "tokens": ["corr", "_", "com", "bin", "ations", " =", " list", "()", "\n", "    ", "com", "bin", "ations", "_", "list", " =", " list", "(", "com", "bin", "ations", "(", "cols", ",", " ", "2", "))", "\n", "\n", "    ", "for", " columns", " in", " combinations", "_", "list", ":", "\n", "        ", "corr", " =", " data", ".", "corr", "()", "\n", "        ", "corr", " =", " cor", "r", ".", "il", "oc", "[", "cols", ".", "index", "(", "columns", "[", "0", "])", "][", "cols", ".", "index", "(", "columns", "[", "1", "]", ")]", "\n", "\n", "        ", "if", " cor", "r", " >=", " MIN", "_", "PER", "C", "ENT", "AGE", ":", "\n", "            ", "corr", "_", "com", "bin", "ations", ".", "append", "((", "columns", "[", "0", "]", ",", " columns", "[", "1", "]))", "\n", "\n", "    ", "return", " cor", "r", "_", "com", "bin", "ations", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.9857874512672424, -0.054816290736198425, -0.06801013648509979, -0.0027353274635970592, -3.2543604902457446e-05, -0.009139487519860268, -2.348888874053955, -0.6749042868614197, -0.024475080892443657, -0.46740007400512695, -2.7731127738952637, -0.7840676307678223, -0.005895013455301523, -0.2693822383880615, -0.7504274845123291, -0.008714147843420506, -0.5093939304351807, -0.09420105069875717, -0.019862445071339607, -9.655486064730212e-05, -0.00103586888872087, -0.00435000890865922, -0.030871298164129257, -0.0020794689189642668, -0.04387092962861061, -0.0022539705969393253, -0.0007139279623515904, -0.043127112090587616, -1.2741070985794067, -0.0006216024048626423, -0.3304065465927124, -4.459120750427246, -0.08853692561388016, -0.0064527965150773525, -0.00225444626994431, -8.940656698541716e-06, -0.0007013006834313273, -0.0032080160453915596, -0.018367912620306015, -1.0578559637069702, -0.26488032937049866, -0.6176857948303223, -1.0304336547851562, -0.06369466334581375, -2.378032684326172, -0.7455692291259766, -0.07339788973331451, -1.3698773384094238, -1.4479129314422607, -0.45945194363594055, -8.940656698541716e-06, -1.7320741415023804, -2.1766700744628906, -2.682172998902388e-05, -0.0834566056728363, -0.6135686039924622, -0.002065312582999468, -0.000945121340919286, -0.002526783850044012, -0.009468292817473412, -0.0005776405450887978, -0.0033709153067320585, -0.0772050991654396, -1.4443061351776123, -0.06352731585502625, -0.0028584832325577736, -3.9457496313843876e-05, -0.00043883229955099523, -0.0018757858779281378, -0.0005323661607690156, -0.0016146968118846416, -0.012576085515320301, -0.0014943634159862995, -0.037233296781778336, -1.259904146194458, -0.000788258679676801, -0.049685604870319366, -0.8418758511543274, -1.1920922133867862e-06, -1.068774938583374, -1.4144325256347656, -5.8412379075889476e-06, -2.455681169521995e-05, -0.0009538153535686433, -5.924526340095326e-05, -1.9907753085135482e-05, -0.009481281973421574, -0.004848864860832691, -0.002481597475707531, -0.019504891708493233, -0.0007416835287585855, -0.0015361425466835499, -2.276871418871451e-05, -2.3841855067985307e-07, -0.0034331686329096556, -0.0011522090062499046, -2.374584436416626, -0.023746725171804428, -0.002454246859997511, -0.0008353081648238003, -6.997340824455023e-05, -0.001468176138587296, -0.005616597831249237, -0.0003746046277228743, -0.00023707917716819793, -0.0036402170080691576, -0.0017076447838917375, -0.07302772998809814, -0.002714403672143817, -0.010847765021026134, -0.01270509697496891, -4.291525328881107e-06, -2.1219027985353023e-05, -6.318072337307967e-06, -2.1219027985353023e-05, -5.960462772236497e-07, -1.3524423837661743, -2.3841855067985307e-07, -5.960462772236497e-07, -0.0002588890492916107, -0.00015746307326480746, -0.07068470120429993], "finish_reason": "stop"}], "metrics": {"energy": 139.26100873374938, "energy_per_token": 1.1414836781454867, "time": 5.255438, "time_per_token": 0.0430773606557377}}
{"outputs": [{"text": "corr = {}\n    corr_combinations = []\n    for col in cols:\n        for other_col in cols:\n            if col != other_col:\n                corr[col, other_col] = data.corr(col)[other_col]\n                if corr[col, other_col] < percentage:\n                    corr_combinations.append((col, other_col))\n\n    return corr_combinations", "tokens": ["corr", " =", " {}", "\n", "    ", "corr", "_", "com", "bin", "ations", " =", " []", "\n", "    ", "for", " col", " in", " col", "s", ":", "\n", "        ", "for", " other", "_", "col", " in", " col", "s", ":", "\n", "            ", "if", " col", " ", "!", "=", " other", "_", "col", ":", "\n", "                ", "corr", "[", "col", ",", " other", "_", "col", "]", " =", " data", ".", "corr", "(", "col", ")[", "other", "_", "col", "]", "\n", "                ", "if", " cor", "r", "[", "col", ",", " other", "_", "col", "]", " <", " percentage", ":", "\n", "                ", "    ", "corr", "_", "com", "bin", "ations", ".", "append", "((", "col", ",", " other", "_", "col", "))", "\n", "\n", "    ", "return", " cor", "r", "_", "com", "bin", "ations", "\n", "\n", "def"], "logprobs": [-0.9857874512672424, -2.955428123474121, -2.5917882919311523, -0.031698547303676605, -0.21490025520324707, -2.1096012592315674, -0.044014789164066315, -0.05550624430179596, -0.0058052982203662395, -9.333651541965082e-05, -0.004789546597748995, -0.03163283318281174, -0.004216708708554506, -0.6421775221824646, -0.4998452365398407, -1.6222013235092163, -1.2489380836486816, -0.07068470120429993, -0.00021109737281221896, -0.006157001480460167, -0.006179037969559431, -0.004866778384894133, -1.3638050556182861, -0.8619159460067749, -0.15309764444828033, -0.00606695469468832, -0.019132006913423538, -0.034531306475400925, -0.00041797960875555873, -0.019158203154802322, -0.0029343189671635628, -0.005822246428579092, -0.28816649317741394, -0.17829565703868866, -0.2411339432001114, -1.1920928244535389e-07, -5.483612312673358e-06, -0.0003723404952324927, -2.3245540432981215e-05, -1.5497195136049413e-06, -0.010497590526938438, -0.010536164045333862, -0.0032857260666787624, -0.32648608088493347, -0.3986407518386841, -0.2783426344394684, -0.5071828961372375, -0.01471429131925106, -1.4781842764932662e-05, -1.311301275563892e-06, -0.0014874596381559968, -0.00047708096099086106, -0.5262909531593323, -0.6127011179924011, -0.017291154712438583, -0.2810753285884857, -0.8656920790672302, -1.6548244953155518, -0.007052291184663773, -0.00011121608258690685, -8.344646857949556e-07, -0.03485071659088135, -0.12974268198013306, -1.8491935729980469, -0.6670545935630798, -0.5110300779342651, -3.576272320060525e-06, -0.005156194791197777, -0.00025102324434556067, -0.0002752163854893297, -0.0035967440344393253, -7.748573807475623e-06, -8.344646857949556e-07, -0.001658732071518898, -1.9735071659088135, -0.5896047949790955, -0.01719413511455059, -0.01279890350997448, -0.0007694382802583277, -0.006544111296534538, -0.21593858301639557, -0.06341342628002167, -0.0016194575000554323, -0.00037520044133998454, -8.344646857949556e-07, -0.009261975064873695, -0.004260867368429899, -0.03253272920846939, -0.006377108860760927, -0.0006052807439118624, -0.006874244660139084, -1.1801649634435307e-05, -1.6689286894688848e-06, -0.004221457056701183, -0.0032096796203404665, -1.6838382482528687, -0.006479800678789616, -0.05242619663476944, -0.08280191570520401, -1.1920928244535389e-07, -0.00217475276440382, -1.3589766240329482e-05, -1.168244216387393e-05, -2.3841855067985307e-07, -0.34229758381843567, -0.008444436825811863, -0.4768379032611847], "finish_reason": "stop"}], "metrics": {"energy": 110.55674980735778, "energy_per_token": 1.033240652405213, "time": 4.4262514, "time_per_token": 0.04136683551401869}}
{"outputs": [{"text": "data = pd.DataFrame(data, columns=cols)\n    corr = data.corr()\n    corr_combinations = []\n\n    # Loop through all combinations of columns\n    for n in range(2, len(cols) + 1):\n        for combination in combinations(cols, n):\n            corr_val = abs(corr[combination[0]][combination[1]])\n            if corr_val >= percentage:\n                corr_combinations.append(tuple(combination))\n\n    return corr_combinations", "tokens": ["data", " =", " pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "cols", ")", "\n", "    ", "corr", " =", " data", ".", "corr", "()", "\n", "    ", "corr", "_", "com", "bin", "ations", " =", " []", "\n", "\n", "    ", "#", " Loop", " through", " all", " combinations", " of", " columns", "\n", "    ", "for", " n", " in", " range", "(", "2", ",", " len", "(", "cols", ")", " +", " ", "1", "):", "\n", "        ", "for", " combination", " in", " combinations", "(", "cols", ",", " n", "):", "\n", "            ", "corr", "_", "val", " =", " abs", "(", "corr", "[", "combination", "[", "0", "]", "][", "combination", "[", "1", "]]", ")", "\n", "            ", "if", " cor", "r", "_", "val", " >=", " percentage", ":", "\n", "                ", "corr", "_", "com", "bin", "ations", ".", "append", "(", "tuple", "(", "combination", "))", "\n", "\n", "    ", "return", " cor", "r", "_", "com", "bin", "ations", "\n", "\n", "def"], "logprobs": [-3.4024362564086914, -0.3602166771888733, -0.12894870340824127, -7.903263758635148e-05, -0.007734233979135752, -0.02036682330071926, -0.016120804473757744, -0.12569092214107513, -0.028920279815793037, -0.05629759654402733, -0.003314598463475704, -0.012478608638048172, -0.02840420790016651, -0.28342974185943604, -0.5358470678329468, -1.8538475036621094, -0.41702356934547424, -0.05574619770050049, -0.05107530206441879, -0.3438595235347748, -0.23035548627376556, -0.2230461835861206, -0.9710442423820496, -0.20618228614330292, -0.16722933948040009, -0.012304587289690971, -4.100715523236431e-05, -0.005100215785205364, -0.3242509365081787, -0.0033874292857944965, -1.2344191074371338, -0.0006536492728628218, -1.7685197591781616, -2.83534836769104, -0.41708439588546753, -0.3278050422668457, -0.9592717289924622, -0.10802366584539413, -0.2947731614112854, -0.316199392080307, -0.00036113892565481365, -0.02648249827325344, -3.1179704666137695, -0.09510719776153564, -0.000878663151524961, -0.0009029601933434606, -1.6526875495910645, -0.0006861716392450035, -0.023861035704612732, -2.2649508537142538e-05, -0.20548276603221893, -0.4919343888759613, -0.002840415108948946, -0.0003219324571546167, -0.0004640932602342218, -0.0016224328428506851, -0.013842415995895863, -0.004665916319936514, -0.3800092041492462, -1.1508346796035767, -0.001208290341310203, -0.013090504333376884, -0.001677416730672121, -0.05305280163884163, -0.000288087350782007, -0.0004969792207702994, -0.001510432455688715, -0.0056269108317792416, -0.028310349211096764, -1.5522838830947876, -0.019238192588090897, -1.6992825269699097, -0.002317126141861081, -1.6995906829833984, -0.0010312244994565845, -0.10057005286216736, -0.30222630500793457, -0.0568312369287014, -0.11386711150407791, -0.006545769516378641, -0.02648632973432541, -0.08454815298318863, -0.00041368984966538846, -0.012543476186692715, -0.0014482972910627723, -0.0007269124034792185, -0.008824753575026989, -0.017555678263306618, -0.15896263718605042, -0.06718074530363083, -0.013799618929624557, -1.4305104514278355e-06, -0.00013398226292338222, -5.722029527532868e-06, -0.6843397617340088, -0.2470167875289917, -0.012840919196605682, -0.01635667122900486, -0.0009517907164990902, -0.03664197400212288, -3.349725011503324e-05, -0.0008760428754612803, -4.851700214203447e-05, -9.536738616588991e-07, -0.0008046964649111032, -0.0008834273321554065, -0.1480540633201599, -1.0940618515014648, -0.0009725131676532328, -0.027035532519221306, -0.002022960688918829, -0.004137765150517225, -0.19758275151252747, -0.002230538986623287, -0.015832314267754555, -0.01758578233420849, -2.145764938177308e-06, -1.9788545614574105e-05, -9.298280929215252e-06, -5.602679812000133e-05, -1.311301275563892e-06, -0.5974149107933044, -0.009228077717125416, -1.0676546096801758], "finish_reason": "stop"}], "metrics": {"energy": 160.70181633758543, "energy_per_token": 1.2959823898192373, "time": 5.260419, "time_per_token": 0.04242273387096774}}
{"outputs": [{"text": "corr_combinations = list(combinations(cols, 2))\n    corr_combinations_dataframe = pd.DataFrame(data, columns=cols).corr(method=\"abs\")\n    corr_combinations_df_dict = {c: corr_combinations_dataframe[c] for c in corr_combinations_dataframe.columns}\n\n    percentage_threshold = (MIN_PERCENTAGE * len(cols)) / 100\n    corr_combinations_dict = {c: corr_combinations_df_dict[c].min() for c in corr_combinations_df_dict.keys()}\n    corr_combinations_list = [c for c in corr_combinations_dict if corr_combinations_dict[c] > percentage_threshold]\n\n    return corr_combinations_list", "tokens": ["corr", "_", "com", "bin", "ations", " =", " list", "(", "com", "bin", "ations", "(", "cols", ",", " ", "2", "))", "\n", "    ", "corr", "_", "com", "bin", "ations", "_", "data", "frame", " =", " pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "cols", ")", ".", "corr", "(", "method", "=", "\"", "abs", "\"", ")", "\n", "    ", "corr", "_", "com", "bin", "ations", "_", "df", "_", "dict", " =", " {", "c", ":", " cor", "r", "_", "com", "bin", "ations", "_", "data", "frame", "[", "c", "]", " for", " c", " in", " cor", "r", "_", "com", "bin", "ations", "_", "data", "frame", ".", "columns", "}", "\n", "\n", "    ", "percent", "age", "_", "threshold", " =", " (", "MIN", "_", "PER", "C", "ENT", "AGE", " *", " len", "(", "cols", "))", " /", " ", "1", "0", "0", "\n", "    ", "corr", "_", "com", "bin", "ations", "_", "dict", " =", " {", "c", ":", " cor", "r", "_", "com", "bin", "ations", "_", "df", "_", "dict", "[", "c", "]", ".", "min", "()", " for", " c", " in", " cor", "r", "_", "com", "bin", "ations", "_", "df", "_", "dict", ".", "keys", "()}", "\n", "    ", "corr", "_", "com", "bin", "ations", "_", "list", " =", " [", "c", " for", " c", " in", " cor", "r", "_", "com", "bin", "ations", "_", "dict", " if", " cor", "r", "_", "com", "bin", "ations", "_", "dict", "[", "c", "]", " >", " percentage", "_", "threshold", "]", "\n", "\n", "    ", "return", " cor", "r", "_", "com", "bin", "ations", "_", "list", "\n", "\n", "def"], "logprobs": [-0.9857874512672424, -0.054816290736198425, -0.06801013648509979, -0.0027353274635970592, -3.2543604902457446e-05, -0.009139487519860268, -2.348888874053955, -0.7294372916221619, -0.09753119945526123, -0.0008207766804844141, -2.992108420585282e-05, -0.006718072574585676, -0.01290282141417265, -0.0020016650669276714, -0.04143814370036125, -0.0013323486782610416, -0.0006386386230587959, -0.06478095054626465, -0.26005274057388306, -1.020413875579834, -0.08804745227098465, -0.6313368678092957, -0.0348670668900013, -0.00012611546844709665, -1.8489406108856201, -3.9261648654937744, -1.482562780380249, -0.012261135503649712, -0.6868870258331299, -0.00020728347590193152, -0.0155284833163023, -0.1551411896944046, -0.5195020437240601, -0.28850188851356506, -0.030326973646879196, -0.09967639297246933, -0.051191288977861404, -0.01850893534719944, -1.383446455001831, -0.03941448777914047, -0.5672200918197632, -0.1302313208580017, -1.7243685722351074, -0.028600938618183136, -3.009874105453491, -0.00058466981863603, -0.11693825572729111, -0.19945700466632843, -0.25564998388290405, -0.8732314705848694, -0.01981710083782673, -0.08810705691576004, -0.02010561153292656, -2.682172998902388e-05, -0.1028234139084816, -2.6021101474761963, -1.925115704536438, -3.5692055225372314, -0.030876267701387405, -1.6414754390716553, -2.841036081314087, -0.3794395923614502, -0.18872277438640594, -2.777537883957848e-05, -0.014094807207584381, -0.00048029806930571795, -0.0010492063593119383, -2.8967437174287625e-05, -0.0026150099001824856, -0.0001787979417713359, -1.549708758830093e-05, -0.07231438159942627, -0.036668404936790466, -0.177056685090065, -0.24772469699382782, -0.0006399490521289408, -0.0016994333127513528, -0.16891959309577942, -0.0038676473777741194, -2.288792165927589e-05, -1.9788545614574105e-05, -0.00019774865359067917, -3.3378546504536644e-06, -0.3287027180194855, -0.0005160430446267128, -2.9205850296420977e-05, -0.44525018334388733, -0.03769925609230995, -0.048263415694236755, -0.007565537001937628, -1.2678771018981934, -0.0008686583023518324, -4.303616046905518, -0.1430840939283371, -0.12716972827911377, -1.5677591562271118, -0.20466116070747375, -3.7970616817474365, -2.509199380874634, -1.1801649634435307e-05, -2.50339189733495e-06, -0.0032683785539120436, -6.198863957251888e-06, -1.3828182090946939e-05, -0.5345622897148132, -0.4584711194038391, -0.0025156063493341208, -0.8181508183479309, -0.06918352097272873, -2.186699390411377, -1.3374149799346924, -0.19174259901046753, -0.0030718303751200438, -0.006606878247112036, -0.05738744139671326, -0.5049623847007751, -1.0175405740737915, -0.008100158534944057, -0.09251191467046738, -0.005424304865300655, -7.974783511599526e-05, -0.19586825370788574, -3.0444626808166504, -0.07540485262870789, -0.33212774991989136, -0.352062851190567, -0.03754185512661934, -0.5657747983932495, -0.003419863060116768, -0.0016961010405793786, -0.012117462232708931, -0.0008650851668789983, -7.891343557275832e-05, -0.004948985762894154, -0.18675844371318817, -0.0005721600609831512, -4.9828242481453344e-05, -0.010697402060031891, -0.016607610508799553, -0.04780416935682297, -0.552573561668396, -3.471698045730591, -0.012722164392471313, -0.19432447850704193, -0.000912369170691818, -0.005164022091776133, -0.011683372780680656, -0.0001736728590913117, -2.622600959512056e-06, -1.9907753085135482e-05, -0.00036090059438720345, -1.1801649634435307e-05, -0.1719440072774887, -0.6325595378875732, -0.0001209901092806831, -1.1920922133867862e-06, -0.48537465929985046, -0.09149930626153946, -0.1831292062997818, -0.0021274094469845295, -0.6170408725738525, -0.5938698053359985, -0.0023489997256547213, -0.05544466897845268, -0.000598251644987613, -5.6980417866725475e-05, -0.1892368048429489, -2.8033690452575684, -0.04214950650930405, -0.5569527745246887, -0.4216894209384918, -0.07967063039541245, -0.00417444808408618, -0.1401837319135666, -0.014051433652639389, -0.0001497156627010554, -7.271740287251305e-06, -1.1801649634435307e-05, -1.680836794548668e-05, -2.145764938177308e-06, -0.06284511089324951, -0.05082493647933006, -1.6971769332885742, -0.03228633478283882, -3.2186455882765586e-06, -5.352353764465079e-05, -1.6569954823353328e-05, -7.784063927829266e-05, -5.364403477869928e-06, -0.00031096869497559965, -0.012890111654996872, -0.0036007824819535017, -0.0005416594794951379, -0.000777776469476521, -0.5967760682106018, -0.06379107385873795, -0.19189423322677612, -6.318072337307967e-06, -0.007425565272569656, -0.002199494047090411, -0.606800377368927, -0.00024148885859176517, -0.1506853699684143, -0.1705763339996338, -3.576278118089249e-07, -2.0265558760002023e-06, -4.529942543740617e-06, -9.65590606938349e-06, -1.1920928244535389e-07, -0.006732400041073561, -0.0010493254521861672, -0.4766012132167816, -0.011390182189643383, -1.1299197673797607], "finish_reason": "stop"}], "metrics": {"energy": 237.28967187690725, "energy_per_token": 1.1088302424154544, "time": 9.260925, "time_per_token": 0.04327535046728972}}
{"outputs": [{"text": "result = []\n\n    # calculate all column pairs and find all pairs that have correlation above threshold\n    for pair in combinations(cols, 2):\n        corr_score = data[pair[0]][pair[1]]\n        if abs(corr_score) > percentage:\n            result.append((pair[0], pair[1]))\n\n    return result", "tokens": ["result", " =", " []", "\n", "\n", "    ", "#", " calculate", " all", " column", " pairs", " and", " find", " all", " pairs", " that", " have", " correlation", " above", " threshold", "\n", "    ", "for", " pair", " in", " combinations", "(", "cols", ",", " ", "2", "):", "\n", "        ", "corr", "_", "score", " =", " data", "[", "pair", "[", "0", "]", "][", "pair", "[", "1", "]]", "\n", "        ", "if", " abs", "(", "corr", "_", "score", ")", " >", " percentage", ":", "\n", "            ", "result", ".", "append", "((", "pair", "[", "0", "]", ",", " pair", "[", "1", "]))", "\n", "\n", "    ", "return", " result"], "logprobs": [-2.772822380065918, -0.0345371812582016, -0.2063973993062973, -0.009776568040251732, -1.4749873876571655, -0.0008266131044365466, -1.2377210855484009, -5.157586097717285, -2.176152229309082, -3.4594688415527344, -1.7105119228363037, -3.16898250579834, -2.9551234245300293, -2.3250226974487305, -1.4769409894943237, -1.3932743072509766, -0.6102679967880249, -1.922853946685791, -1.7117732763290405, -1.3275978565216064, -0.10959964990615845, -0.010153310373425484, -0.627860963344574, -1.4401603937149048, -0.35172536969184875, -0.10606712847948074, -0.005271582398563623, -0.04327964410185814, -0.0014934111386537552, -0.029580648988485336, -0.0005270045949146152, -0.0005808573332615197, -0.012854923494160175, -0.012728285044431686, -1.1155271530151367, -2.3226702213287354, -3.5292015075683594, -0.009543864987790585, -0.959818959236145, -0.35893115401268005, -0.038851749151945114, -0.0015354283386841416, -0.01450564619153738, -0.236758753657341, -0.03735675290226936, -0.270304799079895, -0.0006447143969126046, -0.016448142006993294, -0.012397724203765392, -0.06612685322761536, -0.12672317028045654, -0.09062929451465607, -0.5414257049560547, -0.0007783720502629876, -0.021718405187129974, -0.0008892634068615735, -1.0490362910786644e-05, -0.01946759782731533, -0.5498380064964294, -0.1346566081047058, -0.011294358409941196, -0.010377849452197552, -0.0028843963518738747, -0.04100435972213745, -0.0033167372457683086, -0.0011245838832110167, -1.1976436376571655, -0.05242042616009712, -0.0005924138822592795, -0.0007066613179631531, -0.0005962263094261289, -0.0030333243776112795, -0.003907546401023865, -7.962863310240209e-05, -0.00011538793478393927, -0.003768961876630783, -0.003263625781983137, -0.09382092952728271, -0.002582074608653784, -0.044324230402708054, -0.01819748803973198], "finish_reason": "stop"}], "metrics": {"energy": 106.52919023895262, "energy_per_token": 1.3151751881352176, "time": 3.5830317, "time_per_token": 0.04423495925925926}}
{"outputs": [{"text": "corr_combinations = []\n\n    for col1, col2 in combinations(cols, 2):\n        if abs(data[col1].corr(data[col2])) >= percentage:\n            corr_combinations.append((col1, col2))\n\n    return corr_combinations", "tokens": ["corr", "_", "com", "bin", "ations", " =", " []", "\n", "\n", "    ", "for", " col", "1", ",", " col", "2", " in", " combinations", "(", "cols", ",", " ", "2", "):", "\n", "        ", "if", " abs", "(", "data", "[", "col", "1", "]", ".", "corr", "(", "data", "[", "col", "2", "]))", " >=", " percentage", ":", "\n", "            ", "corr", "_", "com", "bin", "ations", ".", "append", "((", "col", "1", ",", " col", "2", "))", "\n", "\n", "    ", "return", " cor", "r", "_", "com", "bin", "ations", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.9857874512672424, -0.054816290736198425, -0.06801013648509979, -0.0027353274635970592, -3.2543604902457446e-05, -0.009139487519860268, -0.19673962891101837, -0.011586870066821575, -1.1761393547058105, -0.0008370947907678783, -0.554083526134491, -1.3372166156768799, -0.38805854320526123, -0.022037038579583168, -0.002441165968775749, -0.0001778444420779124, -0.008232705295085907, -0.015189101919531822, -0.0023569681216031313, -0.016051944345235825, -0.0011990031925961375, -0.03558368980884552, -0.00029869386344216764, -8.999896090244874e-05, -0.010907432064414024, -0.007443787530064583, -2.217331647872925, -0.658338189125061, -0.0033372920006513596, -0.20759600400924683, -0.1946108490228653, -0.16528292000293732, -0.05091353505849838, -0.32698023319244385, -0.0010490872664377093, -0.011129326187074184, -0.0019910766277462244, -0.0009573881980031729, -8.34430247778073e-05, -4.2914423829643056e-05, -0.0005530973430722952, -0.17906306684017181, -0.6092564463615417, -0.10790146142244339, -0.003824302926659584, -0.010265173390507698, -0.0013637775555253029, -0.0078094638884067535, -8.594620157964528e-05, -0.00023707917716819793, -0.00012766500003635883, -4.768370445162873e-07, -0.001007526065222919, -0.00036030475166626275, -0.0038322594482451677, -0.006193018052726984, -0.00019143179815728217, -0.00022885564249008894, -0.001999404514208436, -5.578839045483619e-05, -0.00032729512895457447, -0.0019193338230252266, -0.059179939329624176, -0.001353658502921462, -0.008009458892047405, -0.013165568001568317, -9.536738616588991e-07, -4.172316494077677e-06, -1.3708974620385561e-05, -0.00015579440514557064, -9.536738616588991e-07, -1.849428653717041, -2.3841855067985307e-07, -4.768370445162873e-07, -0.0001397035230183974, -0.00017498392844572663, -0.07007727771997452], "finish_reason": "stop"}], "metrics": {"energy": 86.82269848442078, "energy_per_token": 1.1275675127846856, "time": 3.3613327, "time_per_token": 0.04365367142857143}}
{"outputs": [{"text": "result = []\n    # for the length of data:\n    for i in range(len(data)):\n        # for all possible combinations of length 2\n        for comb in combinations(cols, 2):\n            corr = data[i][cols.index(comb[0])], data[i][cols.index(comb[1])]\n            abs_corr = abs(corr[0]) - abs(corr[1])\n            # if absolute correlation is greater than threshold\n            if abs_corr > percentage:\n                result.append((comb[0], comb[1]))\n    return result", "tokens": ["result", " =", " []", "\n", "    ", "#", " for", " the", " length", " of", " data", ":", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "data", "))", ":", "\n", "        ", "#", " for", " all", " possible", " combinations", " of", " length", " ", "2", "\n", "        ", "for", " comb", " in", " combinations", "(", "cols", ",", " ", "2", "):", "\n", "            ", "corr", " =", " data", "[", "i", "][", "cols", ".", "index", "(", "comb", "[", "0", "]", ")]", ",", " data", "[", "i", "][", "cols", ".", "index", "(", "comb", "[", "1", "]", ")]", "\n", "            ", "abs", "_", "corr", " =", " abs", "(", "corr", "[", "0", "])", " -", " abs", "(", "corr", "[", "1", "])", "\n", "            ", "#", " if", " absolute", " correlation", " is", " greater", " than", " threshold", "\n", "            ", "if", " abs", "_", "corr", " >", " percentage", ":", "\n", "                ", "result", ".", "append", "((", "comb", "[", "0", "]", ",", " comb", "[", "1", "]))", "\n", "    ", "return", " result"], "logprobs": [-2.772822380065918, -0.0345371812582016, -0.2063973993062973, -0.009776568040251732, -0.2602179944515228, -2.593675374984741, -4.238805770874023, -3.9796249866485596, -3.1276841163635254, -0.05332577973604202, -2.1801137924194336, -3.844592809677124, -0.30784034729003906, -0.03154689818620682, -0.197830930352211, -0.6388729214668274, -0.04872721806168556, -0.013914366252720356, -0.004893469624221325, -0.6454899311065674, -0.0002294515579706058, -0.020810704678297043, -0.14596155285835266, -0.002074115676805377, -0.017995422706007957, -0.06691798567771912, -0.2984975278377533, -0.8159674406051636, -2.4346189498901367, -1.8352552652359009, -0.35341891646385193, -0.4697595238685608, -2.24161696434021, -1.4312798976898193, -0.07415993511676788, -1.6848829984664917, -0.0027368729934096336, -0.20224151015281677, -1.1011017560958862, -0.1907941699028015, -0.03481963276863098, -0.019430184736847878, -0.1843656301498413, -0.006075011566281319, -0.33442696928977966, -0.0013915151357650757, -0.0012491289526224136, -0.008043516427278519, -0.016288181766867638, -2.2366185188293457, -0.07467008382081985, -0.9922555088996887, -0.011256049387156963, -0.028975289314985275, -0.07100176811218262, -2.593902826309204, -0.0196238961070776, -0.0006205302197486162, -0.0016167201101779938, -0.004956340417265892, -0.00015531764074694365, -0.003966204356402159, -0.07936764508485794, -0.001986555755138397, -2.089242935180664, -0.024864468723535538, -0.00019131260341964662, -0.0009349980391561985, -0.0006319671520031989, -0.00015066919149830937, -0.00047708096099086106, -5.304672595229931e-05, -0.00029309268575161695, -0.00017152745567727834, -0.00014411364099942148, -0.0007200032705441117, -0.004431072156876326, -0.00011884459672728553, -0.016183676198124886, -0.02340255305171013, -2.57479190826416, -0.02440667897462845, -0.05395972728729248, -0.01102475170046091, -0.13235916197299957, -0.005405216012150049, -0.3692770004272461, -0.5420169234275818, -0.014155339449644089, -1.6404024362564087, -1.2674262523651123, -0.07893921434879303, -0.0045656487345695496, -0.014548295177519321, -0.0016312400111928582, -0.006963745225220919, -0.0023679095320403576, -0.03737397864460945, -0.03823763504624367, -1.0993037223815918, -0.5744628310203552, -3.0251827239990234, -0.08087792247533798, -0.2057923674583435, -0.35909050703048706, -0.033032141625881195, -1.102246642112732, -0.8953310251235962, -0.0009868042543530464, -0.0348697155714035, -0.014164624735713005, -0.006753832101821899, -7.009260298218578e-05, -0.4461166560649872, -0.06379622220993042, -0.010000364854931831, -0.0022381513845175505, -0.0032873896416276693, -0.5710009336471558, -0.007389238104224205, -0.0017339446349069476, -1.2446091175079346, -0.031489718705415726, -0.00597002636641264, -0.0011849532602354884, -0.00029345019720494747, -0.000635183765552938, -0.011272315867245197, -0.00018618757894728333, -0.00022063204960431904, -0.005674799904227257, -0.012223334982991219, -0.4133450984954834, -0.04911908134818077, -0.03001178242266178], "finish_reason": "stop"}], "metrics": {"energy": 139.46623666858673, "energy_per_token": 1.033083234582124, "time": 5.6739893, "time_per_token": 0.042029550370370365}}
{"outputs": [{"text": "result = []\n\n    for i, col_a in enumerate(cols):\n        for col_b in cols[i + 1:]:\n            corr_ab = data.corr(col_a, col_b)\n            if corr_ab > percentage:\n                result.append((col_a, col_b))\n\n    return result", "tokens": ["result", " =", " []", "\n", "\n", "    ", "for", " i", ",", " col", "_", "a", " in", " enumerate", "(", "cols", "):", "\n", "        ", "for", " col", "_", "b", " in", " col", "s", "[", "i", " +", " ", "1", ":", "]:", "\n", "            ", "corr", "_", "ab", " =", " data", ".", "corr", "(", "col", "_", "a", ",", " col", "_", "b", ")", "\n", "            ", "if", " cor", "r", "_", "ab", " >", " percentage", ":", "\n", "                ", "result", ".", "append", "((", "col", "_", "a", ",", " col", "_", "b", "))", "\n", "\n", "    ", "return", " result", "\n", "\n", "def"], "logprobs": [-2.772822380065918, -0.0345371812582016, -0.2063973993062973, -0.009776568040251732, -1.4749873876571655, -0.0008266131044365466, -0.7989526987075806, -1.6196515560150146, -1.780416488647461, -1.6660387516021729, -1.506676435470581, -1.458728313446045, -0.010623686015605927, -0.002222807612270117, -0.0006105228094384074, -0.022532396018505096, -0.04356842488050461, -0.006454928312450647, -0.006812915205955505, -0.06359947472810745, -0.34747081995010376, -0.0010409895330667496, -0.0006050424999557436, -0.033181145787239075, -0.021709423512220383, -0.00030429501202888787, -0.045828551054000854, -0.006670706905424595, -1.0594208240509033, -0.0005382042727433145, -7.462222856702283e-05, -0.07564084976911545, -0.009926951490342617, -0.017833132296800613, -0.015052776783704758, -1.0559273958206177, -2.32431697845459, -1.6045869588851929, -0.018279660493135452, -0.3999527394771576, -0.7845045924186707, -0.061287712305784225, -0.6229393482208252, -0.34093403816223145, -0.005141725763678551, -0.006354128941893578, -0.026778146624565125, -0.010805783793330193, -0.0025833826512098312, -4.60137271147687e-05, -0.9506987929344177, -0.5554628372192383, -0.12080151587724686, -0.1046886071562767, -1.2962169647216797, -2.264974000354414e-06, -9.023735765367746e-05, -2.9801878554280847e-05, -0.33909401297569275, -0.16461355984210968, -0.009749888442456722, -0.007972088642418385, -0.0008809261489659548, -0.03805220127105713, -0.0032732500694692135, -0.0009253510506823659, -0.018041670322418213, -0.005498997867107391, -4.279521817807108e-05, -0.0022279222030192614, -0.0011976935202255845, -0.0015109085943549871, -0.00038926175329834223, -1.4781842764932662e-05, -0.0018021309515461326, -0.0031529974658042192, -0.15624424815177917, -0.0014774608425796032, -0.012961659580469131, -0.025997458025813103, -0.2502153813838959, -0.005121208261698484, -0.39751267433166504], "finish_reason": "stop"}], "metrics": {"energy": 125.80443339157105, "energy_per_token": 1.5157160649586874, "time": 3.7780995, "time_per_token": 0.04551927108433735}}
{"outputs": [{"text": "n = len(cols)\n    corr_combinations = []\n    for i in range(2, n):\n        for comb in combinations(cols, i):\n            corr = data[0]\n            for col in comb:\n                corr = pd.concat([corr, data[col]], axis=1)\n            corr = corr.corr()\n            if abs(corr[comb[0], comb[1]]) > percentage:\n                corr_combinations.append(comb)\n    return corr_combinations", "tokens": ["n", " =", " len", "(", "cols", ")", "\n", "    ", "corr", "_", "com", "bin", "ations", " =", " []", "\n", "    ", "for", " i", " in", " range", "(", "2", ",", " n", "):", "\n", "        ", "for", " comb", " in", " combinations", "(", "cols", ",", " i", "):", "\n", "            ", "corr", " =", " data", "[", "0", "]", "\n", "            ", "for", " col", " in", " comb", ":", "\n", "                ", "corr", " =", " pd", ".", "concat", "([", "corr", ",", " data", "[", "col", "]]", ",", " axis", "=", "1", ")", "\n", "            ", "corr", " =", " cor", "r", ".", "corr", "()", "\n", "            ", "if", " abs", "(", "corr", "[", "comb", "[", "0", "]", ",", " comb", "[", "1", "]]", ")", " >", " percentage", ":", "\n", "                ", "corr", "_", "com", "bin", "ations", ".", "append", "(", "comb", ")", "\n", "    ", "return", " cor", "r", "_", "com", "bin", "ations", "\n", "\n", "def"], "logprobs": [-3.93074893951416, -0.27895042300224304, -0.03359977900981903, -0.00032276666024699807, -0.31073400378227234, -0.0012180536286905408, -0.058322157710790634, -0.26854652166366577, -0.9433661699295044, -0.09043589979410172, -0.11843206733465195, -0.008301869034767151, -3.182837463100441e-05, -0.005476471967995167, -0.1371755748987198, -0.00821461621671915, -0.29772183299064636, -0.2485618144273758, -0.20148661732673645, -0.05030372366309166, -0.0034072697162628174, -0.0011891205795109272, -2.5565927028656006, -0.0028335205279290676, -0.022954462096095085, -1.423627257347107, -0.03830968588590622, -0.0038811846170574427, -0.5915682911872864, -0.7598971128463745, -0.0502980574965477, -0.013549386523663998, -0.006361117586493492, -0.02749362774193287, -0.0006199345225468278, -0.004322472028434277, -0.0016479019541293383, -0.009936629794538021, -0.001973706530407071, -0.7360483407974243, -0.3345182538032532, -1.250760555267334, -1.153564214706421, -0.7542486190795898, -0.7343822717666626, -2.9320549964904785, -0.006201429758220911, -0.040645014494657516, -0.9684481620788574, -0.22463245689868927, -0.025658009573817253, -0.03562671318650246, -0.005218218546360731, -0.0006613928126171231, -0.16048608720302582, -0.07158011198043823, -0.808929979801178, -0.00012015574611723423, -1.6415753364562988, -0.06490004807710648, -0.011868340894579887, -0.0162183940410614, -0.10866152495145798, -0.04486885666847229, -1.1317129135131836, -0.03470426797866821, -0.022378649562597275, -0.006880993023514748, -0.013026731088757515, -0.058098796755075455, -0.07184796780347824, -0.20819036662578583, -0.0764208510518074, -0.40547582507133484, -0.44771841168403625, -0.16682705283164978, -0.000750617531593889, -0.1969621777534485, -0.018162136897444725, -0.803135871887207, -0.12816910445690155, -0.018253909423947334, -0.31440499424934387, -0.9128901362419128, -0.004020228516310453, -0.038475342094898224, -1.4236009120941162, -0.21286426484584808, -0.07972049713134766, -0.013483526185154915, -0.10796299576759338, -1.1831591129302979, -0.014215867035090923, -0.005457621067762375, -0.010236736387014389, -0.0026586444582790136, -0.059885308146476746, -0.48193830251693726, -0.13192975521087646, -0.005428454838693142, -0.008401053957641125, -0.0006456674309447408, -0.024456817656755447, -0.000291662581730634, -0.0007297713309526443, -0.00019369633810129017, -3.576278118089249e-07, -0.0017860665684565902, -0.0011503038695082068, -0.24435128271579742, -0.17603623867034912, -0.0031158016063272953, -0.0006716379430145025, -0.18390999734401703, -0.010010396130383015, -0.011170940473675728, -2.0265558760002023e-06, -3.528532761265524e-05, -4.887569048150908e-06, -0.00010883215873036534, -2.622600959512056e-06, -0.6114847660064697, -0.01299684401601553, -0.9059969186782837], "finish_reason": "stop"}], "metrics": {"energy": 146.17899395561216, "energy_per_token": 1.1788628544807431, "time": 5.6784773, "time_per_token": 0.04579417177419355}}
{"outputs": [{"text": "corr_combinations = []\n\n    for combination in combinations(cols, 2):\n        corr = pd.DataFrame(data).corr().at[combination[0], combination[1]]\n        if abs(corr) >= percentage:\n            corr_combinations.append(combination)\n\n    return corr_combinations", "tokens": ["corr", "_", "com", "bin", "ations", " =", " []", "\n", "\n", "    ", "for", " combination", " in", " combinations", "(", "cols", ",", " ", "2", "):", "\n", "        ", "corr", " =", " pd", ".", "DataFrame", "(", "data", ")", ".", "corr", "()", ".", "at", "[", "combination", "[", "0", "]", ",", " combination", "[", "1", "]]", "\n", "        ", "if", " abs", "(", "corr", ")", " >=", " percentage", ":", "\n", "            ", "corr", "_", "com", "bin", "ations", ".", "append", "(", "combination", ")", "\n", "\n", "    ", "return", " cor", "r", "_", "com", "bin", "ations", "\n", "\n", "print"], "logprobs": [-0.9857874512672424, -0.054816290736198425, -0.06801013648509979, -0.0027353274635970592, -3.2543604902457446e-05, -0.009139487519860268, -0.19673962891101837, -0.011586870066821575, -1.1761393547058105, -0.0008370947907678783, -0.554083526134491, -2.9608442783355713, -0.019401073455810547, -0.050209179520606995, -0.003207778325304389, -0.023542635142803192, -0.0018243826925754547, -0.030739059671759605, -0.0018341400427743793, -0.00013851160474587232, -0.02015608362853527, -0.00890309177339077, -0.959040105342865, -0.1798454374074936, -3.0636327266693115, -0.00014220656885299832, -1.0000319480895996, -0.02591429091989994, -0.05505189299583435, -0.6092000007629395, -0.06764844805002213, -0.023780250921845436, -1.64991295337677, -0.3438125252723694, -3.474336624145508, -0.008599511347711086, -0.03019246645271778, -0.09530532360076904, -0.008398334495723248, -0.02016192488372326, -0.01866491511464119, -0.01265848521143198, -0.00011276562872808427, -0.00027056847466155887, -0.0033149549271911383, -0.021055040881037712, -0.23879186809062958, -0.05601596087217331, -0.38507190346717834, -0.00025555206229910254, -0.008852167055010796, -0.01635162904858589, -0.8547024130821228, -0.11715606600046158, -0.00668006157502532, -0.0071455636061728, -0.0012644876260310411, -0.006319657899439335, -0.00012003655137959868, -0.00019333878299221396, -7.462222856702283e-05, -7.152555099310121e-07, -0.0007933806627988815, -0.00048565989709459245, -0.10046170651912689, -0.0790187418460846, -0.0010493254521861672, -0.001991790486499667, -0.10251305252313614, -0.0008653233526274562, -0.00891526136547327, -0.0067300316877663136, -2.50339189733495e-06, -6.198863957251888e-06, -5.602820692729438e-06, -5.018585216021165e-05, -9.536738616588991e-07, -0.9529308080673218, -0.009743749164044857, -2.8749289512634277], "finish_reason": "stop"}], "metrics": {"energy": 81.14771093559266, "energy_per_token": 1.0143463866949083, "time": 3.3708315, "time_per_token": 0.04213539375}}
{"outputs": [{"text": "corr = pd.DataFrame(data, columns=cols).corr().abs()\n    corr_combinations = list(combinations(cols, 2))\n\n    for comb in corr_combinations:\n        if not corr.loc[comb][comb[0]] > MIN_PERCENTAGE and not corr.loc[comb][comb[1]] > MIN_PERCENTAGE:\n            corr_combinations.remove(comb)\n\n    return corr_combinations", "tokens": ["corr", " =", " pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "cols", ")", ".", "corr", "()", ".", "abs", "()", "\n", "    ", "corr", "_", "com", "bin", "ations", " =", " list", "(", "com", "bin", "ations", "(", "cols", ",", " ", "2", "))", "\n", "\n", "    ", "for", " comb", " in", " cor", "r", "_", "com", "bin", "ations", ":", "\n", "        ", "if", " not", " cor", "r", ".", "loc", "[", "comb", "][", "comb", "[", "0", "]]", " >", " MIN", "_", "PER", "C", "ENT", "AGE", " and", " not", " cor", "r", ".", "loc", "[", "comb", "][", "comb", "[", "1", "]]", " >", " MIN", "_", "PER", "C", "ENT", "AGE", ":", "\n", "            ", "corr", "_", "com", "bin", "ations", ".", "remove", "(", "comb", ")", "\n", "\n", "    ", "return", " cor", "r", "_", "com", "bin", "ations", "\n", "\n", "def"], "logprobs": [-0.9857874512672424, -2.955428123474121, -1.1222782135009766, -0.00020001317898277193, -0.5103085041046143, -0.2847011387348175, -0.6708561778068542, -0.544199526309967, -0.02340989001095295, -0.06597822159528732, -0.0030929844360798597, -0.01999332569539547, -0.5453124642372131, -0.020842228084802628, -0.333329439163208, -1.8558074235916138, -0.373395174741745, -0.019109902903437614, -0.220969095826149, -0.24885965883731842, -0.7909512519836426, -0.16082647442817688, -0.1142270416021347, -0.00894338171929121, -1.0967194612021558e-05, -0.004989434499293566, -2.1410744190216064, -0.09602595865726471, -0.19429709017276764, -0.0004732680681627244, -2.038458114839159e-05, -0.03767354041337967, -0.3028941750526428, -0.001604342251084745, -0.05100473016500473, -0.001892800792120397, -0.0026085893623530865, -0.019373713061213493, -1.9817708730697632, -0.0008232779800891876, -1.1015172004699707, -3.0635828971862793, -0.11429265141487122, -0.03162185847759247, -3.0517112463712692e-05, -0.010755898430943489, -9.250213042832911e-05, -0.0001292145170737058, -1.0728830375228426e-06, -0.0691881999373436, -0.004004555754363537, -0.005770215764641762, -0.2547919750213623, -2.0927467346191406, -1.8076505661010742, -6.329813186312094e-05, -0.9324366450309753, -0.1216830462217331, -0.012515104375779629, -0.0061007230542600155, -2.8550214767456055, -0.046050913631916046, -0.04253024235367775, -0.14379745721817017, -0.029951509088277817, -0.7820619940757751, -1.1497533321380615, -5.006777428206988e-06, -2.4914430468925275e-05, -0.00013302871957421303, -1.7404405298293568e-05, -1.156323378381785e-05, -1.9398549795150757, -0.22324158251285553, -0.025672532618045807, -1.1920928244535389e-07, -0.0009954979177564383, -0.0001311216183239594, -0.0001746263587847352, -0.00031442465842701495, -0.0009154658182524145, -0.00014911970356479287, -0.00024482590379193425, -0.00415913388133049, -0.0049098399467766285, -0.009105703793466091, -0.0012341272085905075, -4.029192859889008e-05, -5.960462772236497e-07, -0.0005316513124853373, -3.075552376685664e-05, -1.847726889536716e-05, -0.01144969929009676, -0.008617476560175419, -0.0028016623109579086, -0.0790032148361206, -0.008831607177853584, -0.0001227780303452164, -9.775113539944869e-06, 0.0, -0.0030427132733166218, -0.008428123779594898, -0.007222258020192385, -0.0002712835557758808, -0.0020929116290062666, -0.004628539551049471, -0.1525425761938095, -0.009495452046394348, -0.09495846927165985, -0.08664089441299438, -5.960462772236497e-07, -0.000542612629942596, -5.364403477869928e-06, -1.8358061424805783e-05, -4.768370445162873e-07, -0.913253128528595, -0.010761206038296223, -0.9870844483375549], "finish_reason": "stop"}], "metrics": {"energy": 153.27088395309445, "energy_per_token": 1.2989057962126649, "time": 5.0507274, "time_per_token": 0.04280277457627119}}
{"outputs": [{"text": "corr_combinations = []\n    for i in range(1, len(cols)):\n        comb = combinations(cols, i)\n        for pair in comb:\n            if np.corrcoef(np.asarray(data)[:, cols.index(pair[0])], np.asarray(data)[:, cols.index(pair[1])])[0, 1] >= percentage:\n                corr_combinations.append(pair)\n    return corr_combinations", "tokens": ["corr", "_", "com", "bin", "ations", " =", " []", "\n", "    ", "for", " i", " in", " range", "(", "1", ",", " len", "(", "cols", "))", ":", "\n", "        ", "comb", " =", " combinations", "(", "cols", ",", " i", ")", "\n", "        ", "for", " pair", " in", " comb", ":", "\n", "            ", "if", " np", ".", "corr", "co", "ef", "(", "np", ".", "as", "array", "(", "data", ")", "[:", ",", " col", "s", ".", "index", "(", "pair", "[", "0", "]", ")]", ",", " np", ".", "as", "array", "(", "data", ")", "[:", ",", " col", "s", ".", "index", "(", "pair", "[", "1", "]", ")]", ")[", "0", ",", " ", "1", "]", " >=", " percentage", ":", "\n", "                ", "corr", "_", "com", "bin", "ations", ".", "append", "(", "pair", ")", "\n", "    ", "return", " cor", "r", "_", "com", "bin", "ations", "\n", "\n", "if"], "logprobs": [-0.9857874512672424, -0.054816290736198425, -0.06801013648509979, -0.0027353274635970592, -3.2543604902457446e-05, -0.009139487519860268, -0.19673962891101837, -0.011586870066821575, -0.369292676448822, -0.7820349335670471, -1.5486434698104858, -0.35628703236579895, -0.08561542630195618, -0.0013802058529108763, -0.33743616938591003, -0.0003302744007669389, -0.02142965979874134, -0.00011169286881340668, -0.02741418220102787, -0.5041782855987549, -0.0003680505615193397, -0.03624841198325157, -0.0044590807519853115, -1.6515510082244873, -0.6207391023635864, -0.17193929851055145, -0.002734614070504904, -0.005040912423282862, -0.0008740180637687445, -0.005275969859212637, -0.003622994292527437, -0.010474822483956814, -0.010520710609853268, -0.026678213849663734, -3.4609243869781494, -0.02580881118774414, -0.6650413274765015, -0.0004338276921771467, -0.003013238776475191, -0.002506331307813525, -2.313225507736206, -2.64703369140625, -0.0012617491884157062, -0.14177794754505157, -0.0003082277253270149, -0.0010831448016688228, -0.4352700710296631, -2.250555992126465, -0.00014780859055463225, -2.1391186714172363, -0.03964228928089142, -0.14117692410945892, -0.038615621626377106, -0.10700029879808426, -1.0408426523208618, -0.0009734659106470644, -1.5703853368759155, -0.007681592833250761, -0.047627322375774384, -0.0010080024367198348, -0.00693438621237874, -0.056808147579431534, -0.0007688426994718611, -0.001617077155970037, -0.008770279586315155, -0.0026995427906513214, -0.017773643136024475, -0.15975193679332733, -0.00010179955279454589, -0.0012706785928457975, -3.683499380713329e-05, -0.0010887415846809745, -0.0025750594213604927, -0.00020728347590193152, -0.00031454383861273527, -5.3881147323409095e-05, -0.005732880439609289, -8.22540732769994e-06, -2.6225699912174605e-05, -1.2993727978027891e-05, -9.178694017464295e-05, -0.00010525626566959545, -0.0005486889858730137, -0.0027482856530696154, -0.0012325793504714966, -3.8980677345534787e-05, -0.17499734461307526, -0.009110546670854092, -0.07093892246484756, -0.2068009376525879, -0.0010309863137081265, -0.002100881887599826, -1.3881123065948486, -0.1556108444929123, -0.003561940509825945, -0.006030578166246414, -0.0015378089156001806, -0.026007678359746933, -0.00016711745411157608, -0.0007743220776319504, -6.282132380874828e-05, -2.3841855067985307e-07, -0.0033852909691631794, -0.001824858714826405, -0.13649803400039673, -0.04623737558722496, -0.0021815330255776644, -0.0017307315720245242, -0.2742384970188141, -0.01302720233798027, -0.022352419793605804, -3.576278118089249e-07, -2.7179348762729205e-05, -1.2755313036905136e-05, -2.0861407392658293e-05, -9.536738616588991e-07, -0.3296175003051758, -0.01664489321410656, -1.3538744449615479], "finish_reason": "stop"}], "metrics": {"energy": 154.15773690605164, "energy_per_token": 1.295443167277745, "time": 5.0463347, "time_per_token": 0.04240617394957983}}
{"outputs": [{"text": "corr_combinations = []\n    for c in combinations(cols, 2):\n        correlation = data[c[0]][c[1]]\n        if abs(correlation) >= MIN_PERCENTAGE:\n            corr_combinations.append(c)\n\n    return corr_combinations", "tokens": ["corr", "_", "com", "bin", "ations", " =", " []", "\n", "    ", "for", " c", " in", " combinations", "(", "cols", ",", " ", "2", "):", "\n", "        ", "correlation", " =", " data", "[", "c", "[", "0", "]", "][", "c", "[", "1", "]]", "\n", "        ", "if", " abs", "(", "correlation", ")", " >=", " MIN", "_", "PER", "C", "ENT", "AGE", ":", "\n", "            ", "corr", "_", "com", "bin", "ations", ".", "append", "(", "c", ")", "\n", "\n", "    ", "return", " cor", "r", "_", "com", "bin", "ations", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.9857874512672424, -0.054816290736198425, -0.06801013648509979, -0.0027353274635970592, -3.2543604902457446e-05, -0.009139487519860268, -0.19673962891101837, -0.011586870066821575, -0.369292676448822, -0.7820349335670471, -2.250776767730713, -1.5643097162246704, -0.14668779075145721, -0.004481866490095854, -0.029545117169618607, -0.0018102225149050355, -0.06408406049013138, -0.001921832445077598, -0.0005719218170270324, -0.020288443192839622, -0.004122094251215458, -2.4628734588623047, -0.07432495802640915, -0.5541133284568787, -0.3840646743774414, -0.08844385296106339, -0.0018117694417014718, -0.010406989604234695, -0.24977809190750122, -0.028171049430966377, -0.5544283986091614, -0.0004912600270472467, -0.010900003835558891, -0.007782022003084421, -0.07833798974752426, -0.009331775829195976, -0.04247128963470459, -0.29041582345962524, -0.0004961451631970704, -0.006821440067142248, -0.008858192712068558, -0.9091241955757141, -2.380856990814209, -1.2397689715726301e-05, -6.23445157543756e-05, -0.0008557948167435825, -4.3748852476710454e-05, -1.7762025890988298e-05, -0.010996455326676369, -0.008079820312559605, -0.0018681708024814725, -0.014288496226072311, -0.0001234931987710297, -0.0003259842633269727, -4.327203714638017e-05, -2.3841855067985307e-07, -0.0009053422254510224, -0.0005683475756086409, -0.166105717420578, -0.050235819071531296, -0.0010621865512803197, -0.002641761675477028, -1.4486229419708252, -0.002272644080221653, -0.021076751872897148, -0.01613030582666397, -3.4570634852570947e-06, -3.576278118089249e-07, -1.9907753085135482e-05, -2.9205850296420977e-05, -4.768370445162873e-07, -1.597414493560791, -3.576278118089249e-07, -5.960462772236497e-07, -0.00016068121476564556, -0.00023719835735391825, -0.07327170670032501], "finish_reason": "stop"}], "metrics": {"energy": 75.46105625724792, "energy_per_token": 0.9800137176265964, "time": 3.161993, "time_per_token": 0.04106484415584415}}
{"outputs": [{"text": "corr_combinations = list()\n    comb_iter = combinations(cols, 2)\n\n    for col1, col2 in comb_iter:\n        corr = data.corr(col1, col2)\n        if abs(corr) > percentage:\n            corr_combinations.append((col1, col2))\n\n    return corr_combinations", "tokens": ["corr", "_", "com", "bin", "ations", " =", " list", "()", "\n", "    ", "comb", "_", "iter", " =", " combinations", "(", "cols", ",", " ", "2", ")", "\n", "\n", "    ", "for", " col", "1", ",", " col", "2", " in", " comb", "_", "iter", ":", "\n", "        ", "corr", " =", " data", ".", "corr", "(", "col", "1", ",", " col", "2", ")", "\n", "        ", "if", " abs", "(", "corr", ")", " >", " percentage", ":", "\n", "            ", "corr", "_", "com", "bin", "ations", ".", "append", "((", "col", "1", ",", " col", "2", "))", "\n", "\n", "    ", "return", " cor", "r", "_", "com", "bin", "ations"], "logprobs": [-0.9857874512672424, -0.054816290736198425, -0.06801013648509979, -0.0027353274635970592, -3.2543604902457446e-05, -0.009139487519860268, -2.348888874053955, -0.6749042868614197, -0.024475080892443657, -0.46740007400512695, -3.4269556999206543, -1.6312006711959839, -3.687333345413208, -0.03992617130279541, -0.10556621104478836, -0.004067838191986084, -0.04564156010746956, -0.003404774935916066, -0.02797597460448742, -0.0018368767341598868, -0.00035279724397696555, -0.052926741540431976, -1.3246355056762695, -0.0005597693379968405, -0.3118974566459656, -1.695407509803772, -0.3425229787826538, -0.010577685199677944, -0.0036956837866455317, -0.0001255195093108341, -0.0011397063499316573, -0.1216108500957489, -7.855583680793643e-05, -9.179073458653875e-06, -0.0002755738969426602, -0.004082441329956055, -0.016422931104898453, -0.7535561323165894, -0.24161189794540405, -0.47972571849823, -1.3160420656204224, -0.05369234457612038, -0.38368940353393555, -0.8906200528144836, -0.015131098218262196, -0.09678081423044205, -0.017215345054864883, -0.0005017452058382332, -0.7540591955184937, -0.1525089144706726, -0.19364206492900848, -0.1897181272506714, -0.27654576301574707, -0.0003289635351393372, -0.006153684109449387, -0.05591011792421341, -0.44738003611564636, -0.13755692541599274, -0.006493421271443367, -0.008385331369936466, -0.001957050058990717, -0.029444651678204536, -0.0003274143091402948, -0.0029700950253754854, -0.00029869386344216764, -7.152555099310121e-07, -0.0022519484627991915, -0.000874851830303669, -0.018406184390187263, -0.0028992544393986464, -0.00022790218645241112, -0.0007429938414134085, -0.003606602782383561, -8.34430247778073e-05, -0.0022826348431408405, -0.002333776792511344, -0.24560599029064178, -0.0018423503497615457, -0.011796713806688786, -0.00954492762684822, -2.145764938177308e-06, -5.8412379075889476e-06, -7.390948667307384e-06, -5.245071224635467e-05, -7.152555099310121e-07], "finish_reason": "stop"}], "metrics": {"energy": 89.58545151519773, "energy_per_token": 1.053946488414091, "time": 3.5837138, "time_per_token": 0.04216133882352941}}
{"outputs": [{"text": "# Initialize variables\n    corr_combinations = []\n\n    # Get all pairs of columns\n    col_pairs = combinations(cols, 2)\n\n    # Calculate the correlations for each pair\n    for col_pair in col_pairs:\n        # Extract the two columns\n        col1, col2 = col_pair\n\n        # Calculate correlation\n        correlation = pd.Series(data).corr(method='pearson',\n                                           min_periods=1,\n                                           subset=[col1, col2])\n\n        # Find the maximum correlation value\n        max_correlation = correlation.max()\n\n        # Check if correlation is above threshold\n        if max_correlation > percentage:\n            corr_combinations.append(col_pair)\n\n    return corr_combinations", "tokens": ["#", " Initialize", " variables", "\n", "    ", "corr", "_", "com", "bin", "ations", " =", " []", "\n", "\n", "    ", "#", " Get", " all", " pairs", " of", " columns", "\n", "    ", "col", "_", "pairs", " =", " combinations", "(", "cols", ",", " ", "2", ")", "\n", "\n", "    ", "#", " Calculate", " the", " correlations", " for", " each", " pair", "\n", "    ", "for", " col", "_", "pair", " in", " col", "_", "pairs", ":", "\n", "        ", "#", " Ext", "ract", " the", " two", " columns", "\n", "        ", "col", "1", ",", " col", "2", " =", " col", "_", "pair", "\n", "\n", "        ", "#", " Calculate", " correlation", "\n", "        ", "correlation", " =", " pd", ".", "Series", "(", "data", ")", ".", "corr", "(", "method", "='", "pe", "ar", "son", "'", ",", "\n", "                ", "                ", "           ", "min", "_", "period", "s", "=", "1", ",", "\n", "                ", "                ", "           ", "subset", "=[", "col", "1", ",", " col", "2", "])", "\n", "\n", "        ", "#", " Find", " the", " maximum", " correlation", " value", "\n", "        ", "max", "_", "correlation", " =", " correlation", ".", "max", "()", "\n", "\n", "        ", "#", " Check", " if", " correlation", " is", " above", " threshold", "\n", "        ", "if", " max", "_", "correlation", " >", " percentage", ":", "\n", "            ", "corr", "_", "com", "bin", "ations", ".", "append", "(", "col", "_", "pair", ")", "\n", "\n", "    ", "return", " cor", "r", "_", "com", "bin", "ations"], "logprobs": [-1.597731590270996, -3.2824041843414307, -1.7007209062576294, -0.1596926897764206, -0.0032948751468211412, -0.3537713289260864, -0.0713585838675499, -0.07698193937540054, -0.0029848332051187754, -2.1219027985353023e-05, -0.006005575880408287, -0.040659092366695404, -0.008709303103387356, -0.909750759601593, -0.000550357042811811, -0.11709392815828323, -2.429034471511841, -0.7344416379928589, -2.8565292358398438, -0.07406651228666306, -0.15582650899887085, -0.5532402992248535, -0.0005782362422905862, -2.7165961265563965, -0.00726474542170763, -0.26319000124931335, -0.00426276633515954, -0.6466920375823975, -0.001111128251068294, -0.01129824761301279, -0.0010658780811354518, -0.013838065788149834, -0.00024005869636312127, -8.296622399939224e-05, -0.0048742517828941345, -0.05228625610470772, -0.0004374024283606559, -0.086656853556633, -0.8731400966644287, -0.45691433548927307, -2.2342424392700195, -0.858746349811554, -0.2776072025299072, -0.03020622953772545, -1.2279406785964966, -0.0008490057080052793, -0.01619446650147438, -0.8464642763137817, -0.906497597694397, -0.27817898988723755, -0.0048742517828941345, -0.0035499429795891047, -0.00021765247220173478, -2.145764938177308e-06, -7.1403817855753e-05, -0.000393432448618114, -0.00537213496863842, -3.1386096477508545, -3.621739387512207, -0.004183351527899504, -0.22594180703163147, -1.4863462448120117, -0.09179864078760147, -1.2567641735076904, -0.0006019449210725725, -0.3885969817638397, -0.2265343964099884, -0.12626896798610687, -0.00034481301554478705, -3.731181277544238e-05, -0.0005499995895661414, -0.03147054463624954, -0.004691308364272118, -0.0001530530134914443, -0.03400279954075813, -0.4081785976886749, -0.0011185110779479146, -0.04062063619494438, -0.28426915407180786, -2.9066975116729736, -0.5900817513465881, -0.00076908094342798, -1.6778241395950317, -0.039765339344739914, -2.7404773235321045, -0.00013410145766101778, -0.797536313533783, -0.003509673522785306, -0.018997037783265114, -0.3562891185283661, -0.03823373094201088, -0.027963222935795784, -0.09706190973520279, -2.8183932304382324, -0.25501149892807007, -0.030870258808135986, -1.7881233361549675e-05, -0.0007049936102703214, -0.6311847567558289, -0.0001774868869688362, -1.592120885848999, -0.019252808764576912, -0.027285544201731682, -0.6092648506164551, -1.238861083984375, -2.407998726994265e-05, -0.12201780080795288, -3.6954811548639555e-06, -0.0013743727467954159, -0.21661700308322906, -0.34628280997276306, -0.0517762191593647, -0.00019643761334009469, -0.00010752100206445903, -0.0035634846426546574, -2.4131455421447754, -0.07193228602409363, -0.002179034985601902, -0.002934675430878997, -0.002063408959656954, -0.0071592931635677814, -0.0003231241717003286, -0.03758341819047928, -0.5421054363250732, -0.37838658690452576, -0.0015306673012673855, -0.06937773525714874, -3.1663641929626465, -0.22861315310001373, -1.5054527521133423, -0.26983514428138733, -1.736212968826294, -0.22980637848377228, -0.0005113962688483298, -0.2773875594139099, -0.003231543581932783, -1.2431976795196533, -0.015156812965869904, -0.40125229954719543, -0.05140770599246025, -0.09573720395565033, -0.028599662706255913, -0.009079242125153542, -0.027988260611891747, -0.0008148210472427309, -0.021932898089289665, -0.8186384439468384, -0.04645976051688194, -2.5153732299804688, -0.26628321409225464, -1.4684135913848877, -0.6210194230079651, -0.063146211206913, -0.00040236959466710687, -0.006550506688654423, -0.2615646421909332, -0.00023183519078884274, -3.325883881188929e-05, -0.38593754172325134, -0.046568430960178375, -0.006821440067142248, -0.002360536018386483, -0.0038083898834884167, -0.8365873694419861, -0.000593962671700865, -0.0016564709367230535, -0.00017081231635529548, -1.1920928244535389e-07, -0.0010186012368649244, -0.000459565402707085, -0.2412365972995758, -0.024612337350845337, -0.0009217780898325145, -0.0004545609117485583, -0.0006968930247239769, -0.012626349925994873, -0.018785540014505386, -0.003586647566407919, -0.1985919177532196, -0.005344863515347242, -3.576278118089249e-07, -5.245195097813848e-06, -6.794906312279636e-06, -3.576214658096433e-05, -9.536738616588991e-07], "finish_reason": "stop"}], "metrics": {"energy": 252.51430877113341, "energy_per_token": 1.364942209573694, "time": 8.6218, "time_per_token": 0.04660432432432433}}
{"outputs": [{"text": "result = []\n    combs = list(combinations(cols, 2))\n    for comb in combs:\n        if pd.Series(data).corr(comb[0]).abs().max() >= percentage:\n            result.append(comb)\n    return result", "tokens": ["result", " =", " []", "\n", "    ", "com", "bs", " =", " list", "(", "com", "bin", "ations", "(", "cols", ",", " ", "2", "))", "\n", "    ", "for", " comb", " in", " com", "bs", ":", "\n", "        ", "if", " pd", ".", "Series", "(", "data", ")", ".", "corr", "(", "comb", "[", "0", "])", ".", "abs", "()", ".", "max", "()", " >=", " percentage", ":", "\n", "            ", "result", ".", "append", "(", "comb", ")", "\n", "    ", "return", " result", "\n", "\n", "def"], "logprobs": [-2.772822380065918, -0.0345371812582016, -0.2063973993062973, -0.009776568040251732, -0.2602179944515228, -2.4481217861175537, -0.6525376439094543, -0.023825882002711296, -0.950985312461853, -0.004170411732047796, -0.011789998970925808, -0.00021336186910048127, -6.437280717364047e-06, -0.0049908580258488655, -0.034254416823387146, -0.0019372997339814901, -0.07321132719516754, -0.002628207439556718, -0.00078671018127352, -0.046918485313653946, -0.2309773564338684, -0.37628594040870667, -0.7112742066383362, -0.0304529070854187, -0.00833603460341692, -0.00024184639914892614, -0.0007018963224254549, -0.003106769872829318, -0.005253083072602749, -2.435201644897461, -2.188025951385498, -0.0002628219372127205, -0.9254873991012573, -0.008525286801159382, -0.05166415125131607, -0.32483232021331787, -0.006855538114905357, -0.015088826417922974, -0.12392887473106384, -0.6508923768997192, -0.3088904917240143, -0.003660646267235279, -1.5112730264663696, -2.4728617668151855, -0.13889598846435547, -0.007355394773185253, -2.7476096153259277, -0.5006929636001587, -0.0040261647664010525, -0.8719370365142822, -0.09375623613595963, -0.4063776731491089, -0.012915059924125671, -0.003199579194188118, -0.06306764483451843, -0.008631185628473759, -0.0017365626990795135, -0.11165623366832733, -0.03359977900981903, -0.011040904559195042, -0.0019459851318970323, -0.20639488101005554, -0.015741022303700447, -0.016721682623028755, -0.6447831988334656, -0.023180104792118073, -1.0679972171783447], "finish_reason": "stop"}], "metrics": {"energy": 87.4369465484619, "energy_per_token": 1.305029052962118, "time": 2.9497135, "time_per_token": 0.044025574626865675}}
{"outputs": [{"text": "corr_combinations = []\n    for col1, col2 in combinations(cols, 2):\n        correlation = data[col1].corr(data[col2])\n        if abs(correlation) > MIN_PERCENTAGE:\n            corr_combinations.append((col1, col2))\n    return corr_combinations", "tokens": ["corr", "_", "com", "bin", "ations", " =", " []", "\n", "    ", "for", " col", "1", ",", " col", "2", " in", " combinations", "(", "cols", ",", " ", "2", "):", "\n", "        ", "correlation", " =", " data", "[", "col", "1", "]", ".", "corr", "(", "data", "[", "col", "2", "])", "\n", "        ", "if", " abs", "(", "correlation", ")", " >", " MIN", "_", "PER", "C", "ENT", "AGE", ":", "\n", "            ", "corr", "_", "com", "bin", "ations", ".", "append", "((", "col", "1", ",", " col", "2", "))", "\n", "    ", "return", " cor", "r", "_", "com", "bin", "ations", "\n", "\n", "if"], "logprobs": [-0.9857874512672424, -0.054816290736198425, -0.06801013648509979, -0.0027353274635970592, -3.2543604902457446e-05, -0.009139487519860268, -0.19673962891101837, -0.011586870066821575, -0.369292676448822, -0.7820349335670471, -1.4833472967147827, -0.516242504119873, -0.016962332651019096, -0.002757796086370945, -0.00017712931730784476, -0.00663139158859849, -0.015281501226127148, -0.002355421893298626, -0.016780298203229904, -0.0014698426239192486, -0.04395284503698349, -0.0003184764937032014, -0.00011264643399044871, -0.012529231607913971, -0.004415880423039198, -2.1281981468200684, -0.04666958004236221, -0.393699586391449, -0.2765451967716217, -0.15745355188846588, -0.03273695334792137, -0.5052332282066345, -0.0036513819359242916, -0.008852994069457054, -0.0020655503030866385, -0.00189565634354949, -0.00012885693286079913, -4.935142715112306e-05, -0.0006065912893973291, -0.07516658306121826, -0.043630510568618774, -0.01292871031910181, -0.0313454307615757, -0.272373765707016, -7.664863369427621e-05, -0.002378612756729126, -0.007172076031565666, -0.40398263931274414, -2.6591317653656006, -4.172316494077677e-06, -5.4834770708112046e-05, -0.000736918649636209, -5.1973900554003194e-05, -1.6093124941107817e-05, -0.00805818010121584, -0.008625512942671776, -0.0014571059728041291, -0.010989616625010967, -0.00010096516780322418, -0.000321336614433676, -3.766942609217949e-05, -2.3841855067985307e-07, -0.0008217295398935676, -0.0003716255014296621, -0.006001309957355261, -0.0054494403302669525, -0.0002431573811918497, -0.00036054308293387294, -0.0019327785121276975, -8.201262971851975e-05, -0.001725257490761578, -0.0034815194085240364, -0.2702530324459076, -0.006750043015927076, -0.011540323495864868, -5.960462772236497e-07, -3.3378546504536644e-06, -8.583032467868179e-06, -3.802703940891661e-05, -7.152555099310121e-07, -0.36381033062934875, -0.010603045113384724, -1.373693823814392], "finish_reason": "stop"}], "metrics": {"energy": 97.2201748485565, "energy_per_token": 1.1713274078139337, "time": 3.81254, "time_per_token": 0.04593421686746988}}
{"outputs": [{"text": "corr_combinations = []\n    for col1, col2 in combinations(cols, 2):\n        corr = data[col1][col2]\n        if abs(corr) > percentage:\n            corr_combinations.append((col1, col2))\n    return corr_combinations", "tokens": ["corr", "_", "com", "bin", "ations", " =", " []", "\n", "    ", "for", " col", "1", ",", " col", "2", " in", " combinations", "(", "cols", ",", " ", "2", "):", "\n", "        ", "corr", " =", " data", "[", "col", "1", "][", "col", "2", "]", "\n", "        ", "if", " abs", "(", "corr", ")", " >", " percentage", ":", "\n", "            ", "corr", "_", "com", "bin", "ations", ".", "append", "((", "col", "1", ",", " col", "2", "))", "\n", "    ", "return", " cor", "r", "_", "com", "bin", "ations", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.9857874512672424, -0.054816290736198425, -0.06801013648509979, -0.0027353274635970592, -3.2543604902457446e-05, -0.009139487519860268, -0.19673962891101837, -0.011586870066821575, -0.369292676448822, -0.7820349335670471, -1.4833472967147827, -0.516242504119873, -0.016962332651019096, -0.002757796086370945, -0.00017712931730784476, -0.00663139158859849, -0.015281501226127148, -0.002355421893298626, -0.016780298203229904, -0.0014698426239192486, -0.04395284503698349, -0.0003184764937032014, -0.00011264643399044871, -0.012529231607913971, -0.004415880423039198, -0.6848083734512329, -0.1071559265255928, -0.45610976219177246, -0.41859573125839233, -0.1504966914653778, -0.033101800829172134, -1.0732777118682861, -0.35726410150527954, -0.05678348243236542, -0.006576442625373602, -0.1483761966228485, -0.009054552763700485, -0.05433814227581024, -0.4052300751209259, -0.0003883084573317319, -0.008886787109076977, -0.051455263048410416, -0.6321439146995544, -0.0741577222943306, -0.009426371194422245, -0.007754461374133825, -0.001520549994893372, -0.012502861209213734, -0.0002461368858348578, -0.000501983508002013, -9.822363062994555e-05, -4.768370445162873e-07, -0.0007444233051501215, -0.00044383687782101333, -0.006283172406256199, -0.007374091539531946, -0.0008238735608756542, -0.00042381841922178864, -0.0027070327196270227, -6.210611172718927e-05, -0.0018112935358658433, -0.0024278471246361732, -0.15833227336406708, -0.005406519863754511, -0.007962863892316818, -2.7418097943154862e-06, -3.4570634852570947e-06, -9.417489309271332e-06, -0.00017951308109331876, -2.145764938177308e-06, -1.7026491165161133, -4.768370445162873e-07, -5.960462772236497e-07, -7.56950321374461e-05, -0.00018165845540352166, -0.06808608770370483], "finish_reason": "stop"}], "metrics": {"energy": 115.65832666587829, "energy_per_token": 1.521820087708925, "time": 3.1623237, "time_per_token": 0.041609522368421054}}
{"outputs": [{"text": "n_cols = len(data[0])\n    corr_combinations = []\n    for i in range(1, n_cols):\n        for cols_pair in combinations(cols, i):\n            # Calculate the absolute correlation between the columns\n            corr_matrix = data.corr()\n            corr_pair = corr_matrix[cols_pair]\n            abs_corr = corr_pair.max()\n\n            # If the absolute correlation is greater than the threshold, append the column names to the result\n            if abs_corr > percentage:\n                corr_combinations.append(cols_pair)\n\n    return corr_combinations", "tokens": ["n", "_", "cols", " =", " len", "(", "data", "[", "0", "])", "\n", "    ", "corr", "_", "com", "bin", "ations", " =", " []", "\n", "    ", "for", " i", " in", " range", "(", "1", ",", " n", "_", "cols", "):", "\n", "        ", "for", " col", "s", "_", "pair", " in", " combinations", "(", "cols", ",", " i", "):", "\n", "            ", "#", " Calculate", " the", " absolute", " correlation", " between", " the", " columns", "\n", "            ", "corr", "_", "matrix", " =", " data", ".", "corr", "()", "\n", "            ", "corr", "_", "pair", " =", " cor", "r", "_", "matrix", "[", "cols", "_", "pair", "]", "\n", "            ", "abs", "_", "corr", " =", " cor", "r", "_", "pair", ".", "max", "()", "\n", "\n", "            ", "#", " If", " the", " absolute", " correlation", " is", " greater", " than", " the", " threshold", ",", " append", " the", " column", " names", " to", " the", " result", "\n", "            ", "if", " abs", "_", "corr", " >", " percentage", ":", "\n", "                ", "corr", "_", "com", "bin", "ations", ".", "append", "(", "cols", "_", "pair", ")", "\n", "\n", "    ", "return", " cor", "r", "_", "com", "bin", "ations", "\n", "\n", "#"], "logprobs": [-3.93074893951416, -1.600996732711792, -0.5651739835739136, -0.009398029185831547, -0.022376785054802895, -0.00026901919045485556, -1.9086867570877075, -0.24317586421966553, -0.004922532942146063, -0.0017934442730620503, -0.09768257290124893, -0.3261106014251709, -1.1247068643569946, -0.09819167107343674, -0.2662592828273773, -0.009025609120726585, -6.925819616299123e-05, -0.0066426414996385574, -0.17271602153778076, -0.006625707261264324, -0.49726393818855286, -0.3015989065170288, -1.0538902282714844, -0.2224286049604416, -0.019726872444152832, -0.0008993871742859483, -0.38312262296676636, -0.0002889215829782188, -0.0342145599424839, -2.372236667724792e-05, -6.949660019017756e-05, -0.2586939334869385, -0.02893417701125145, -0.0029762755148112774, -0.4784838855266571, -1.5232445001602173, -0.9451459050178528, -0.5449203848838806, -1.3733397722244263, -0.0068268864415585995, -0.02543269284069538, -0.0057326434180140495, -0.01830318756401539, -0.002894618781283498, -0.013747766613960266, -0.006408379413187504, -0.008193333633244038, -0.0023298519663512707, -3.4692046642303467, -1.3691903352737427, -0.4638768434524536, -1.2400976419448853, -0.07788882404565811, -0.8101773858070374, -0.6138253808021545, -0.46496450901031494, -0.5316035747528076, -0.0008468617452308536, -0.6339550018310547, -1.5558862686157227, -2.8472237586975098, -0.005068073980510235, -2.6982173919677734, -0.36678019165992737, -0.2290528565645218, -1.0987972021102905, -0.0912550538778305, -0.011066016741096973, -0.6169155240058899, -0.9558576345443726, -1.9790070056915283, -0.02757306955754757, -1.0161076784133911, -0.006607588846236467, -0.001069212332367897, -0.003956349100917578, -0.16611328721046448, -0.5426139831542969, -0.003628814360126853, -6.19869097135961e-05, -1.268797755241394, -0.6186505556106567, -0.030173959210515022, -1.5078431367874146, -0.002500861417502165, -0.05380328372120857, -0.11031657457351685, -1.0682735443115234, -0.002278947737067938, -0.003448612755164504, -0.03382441774010658, -0.0867939218878746, -1.4725887775421143, -0.020026393234729767, -0.11484118551015854, -1.4317822456359863, -0.0006560318870469928, -0.3429630994796753, -0.9750514626502991, -0.034682851284742355, -0.09041085839271545, -0.0033764992840588093, -0.07424306124448776, -0.09114383906126022, -0.002619765931740403, -0.03897798806428909, -0.1287287324666977, -0.08794429153203964, -1.9463741779327393, -0.15593025088310242, -1.4012432098388672, -0.42843979597091675, -0.03197129815816879, -0.15229754149913788, -0.8308146595954895, -0.41572895646095276, -0.0002169373765354976, -0.00425315136089921, -0.002841247245669365, -0.004860490560531616, -5.483612312673358e-06, -0.23761937022209167, -0.07244511693716049, -0.005114685278385878, -0.0015186455566436052, -0.00047791501856409013, -0.19584718346595764, -8.5588610090781e-05, -0.004676120821386576, -2.3603161025675945e-05, -1.1920928244535389e-07, -0.002047110814601183, -0.0036524508614093065, -0.05624959245324135, -0.40655338764190674, -0.00020644917094614357, -6.854299135738984e-05, -0.0008572241058573127, -0.0008673481643199921, -0.46989285945892334, -0.014170265756547451, -0.04248717054724693, -0.008149229921400547, -5.006777428206988e-06, -1.4305104514278355e-06, -1.9192511899746023e-05, -9.762764238985255e-05, -1.311301275563892e-06, -0.3300383687019348, -0.009602075442671776, -1.9125654697418213], "finish_reason": "stop"}], "metrics": {"energy": 188.3870560321807, "energy_per_token": 1.2475963975641107, "time": 6.315835, "time_per_token": 0.04182672185430464}}
{"outputs": [{"text": "result = []\n    # Find all combinations of columns from a given DataFrame so that the absolute correlation between them is greater than a certain threshold\n    combs = list(combinations(cols, 2))\n\n    for c in combs:\n        # Calculate the correlation between two columns\n        col1, col2 = c\n        corr = data[col1].corr(data[col2])\n        # Check if correlation is greater than threshold\n        if abs(corr) > percentage:\n            result.append(c)\n\n    return result", "tokens": ["result", " =", " []", "\n", "    ", "#", " Find", " all", " combinations", " of", " columns", " from", " a", " given", " Data", "Frame", " so", " that", " the", " absolute", " correlation", " between", " them", " is", " greater", " than", " a", " certain", " threshold", "\n", "    ", "com", "bs", " =", " list", "(", "com", "bin", "ations", "(", "cols", ",", " ", "2", "))", "\n", "\n", "    ", "for", " c", " in", " com", "bs", ":", "\n", "        ", "#", " Calculate", " the", " correlation", " between", " two", " columns", "\n", "        ", "col", "1", ",", " col", "2", " =", " c", "\n", "        ", "corr", " =", " data", "[", "col", "1", "]", ".", "corr", "(", "data", "[", "col", "2", "])", "\n", "        ", "#", " Check", " if", " correlation", " is", " greater", " than", " threshold", "\n", "        ", "if", " abs", "(", "corr", ")", " >", " percentage", ":", "\n", "            ", "result", ".", "append", "(", "c", ")", "\n", "\n", "    ", "return", " result", "\n", "\n", "def"], "logprobs": [-2.772822380065918, -0.0345371812582016, -0.2063973993062973, -0.009776568040251732, -0.2602179944515228, -2.593675374984741, -3.7184693813323975, -0.16473175585269928, -0.28807076811790466, -0.0696391761302948, -0.09652961790561676, -0.5830941796302795, -1.638963222503662, -0.022582044824957848, -0.037265222519636154, -0.0005893162451684475, -1.0687211751937866, -0.0052617397159338, -0.015421668067574501, -0.0359174869954586, -0.0022075825836509466, -0.04025565832853317, -0.008849449455738068, -0.00937547255307436, -0.006392744369804859, -0.0030093167442828417, -0.07685986161231995, -0.0024524631444364786, -0.00660652294754982, -1.452657699584961, -0.012980134226381779, -2.929826021194458, -0.8281269669532776, -0.02194770984351635, -1.030212163925171, -0.0047982074320316315, -0.017892852425575256, -0.00013815402053296566, -9.179073458653875e-06, -0.004582499153912067, -0.042971592396497726, -0.0015180503251031041, -0.05421258509159088, -0.0036981781013309956, -0.0006908176001161337, -0.04284277185797691, -1.5936193466186523, -0.0007479969062842429, -0.5331591963768005, -2.260939598083496, -0.9136192798614502, -0.03390520066022873, -9.500529267825186e-05, -0.0010080024367198348, -0.006121576298028231, -0.017507066950201988, -2.126662492752075, -1.1725457906723022, -0.18637710809707642, -0.893907368183136, -0.33085593581199646, -1.5424035787582397, -0.029753077775239944, -0.42238783836364746, -0.0036083844024688005, -2.4935412406921387, -0.24031232297420502, -0.8244010806083679, -0.004422764293849468, -0.00019071667338721454, -0.002538912231102586, -0.11890286952257156, -0.45044636726379395, -0.025474878028035164, -0.3991432189941406, -0.05368195101618767, -0.26219528913497925, -0.5049428939819336, -0.09085671603679657, -0.019796064123511314, -0.12226340919733047, -0.0023612494114786386, -0.009395313449203968, -0.0014857931528240442, -0.001683486276306212, -0.00025876989820972085, -0.00011526874004630372, -0.00031799983116798103, -0.0442124642431736, -0.026532186195254326, -0.5611310601234436, -0.6513890027999878, -1.2699077129364014, -0.05198153108358383, -2.3767988681793213, -0.0737914964556694, -0.3248399794101715, -0.006540677044540644, -0.9281355142593384, -0.09357919543981552, -0.0030423568096011877, -0.010465621016919613, -0.11375370621681213, -0.0002256377338198945, -0.013707082718610764, -0.019531311467289925, -0.3684164583683014, -0.08876428008079529, -0.00850743893533945, -0.0022143623791635036, -0.0032630315981805325, -0.14322645962238312, -0.004105235915631056, -0.0007304860628210008, -0.2124060094356537, -0.04307733103632927, -0.0006808108882978559, -0.012621876783668995, -0.40138062834739685, -0.0026959760580211878, -0.05274944379925728, -0.01622285135090351, -0.36579054594039917, -0.010590423829853535, -0.783392071723938], "finish_reason": "stop"}], "metrics": {"energy": 126.46514191341394, "energy_per_token": 1.0117211353073114, "time": 5.2511606, "time_per_token": 0.042009284800000005}}
{"outputs": [{"text": "corr_combinations = []\n\n    for i in range(len(cols) - 1):\n        for j in range(i + 1, len(cols)):\n            correlation = data.corr()[cols[i]][cols[j]]\n            if abs(correlation) >= MIN_PERCENTAGE:\n                corr_combinations.append((cols[i], cols[j]))\n\n    return corr_combinations", "tokens": ["corr", "_", "com", "bin", "ations", " =", " []", "\n", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "cols", ")", " -", " ", "1", "):", "\n", "        ", "for", " j", " in", " range", "(", "i", " +", " ", "1", ",", " len", "(", "cols", "))", ":", "\n", "            ", "correlation", " =", " data", ".", "corr", "()[", "cols", "[", "i", "]", "][", "cols", "[", "j", "]]", "\n", "            ", "if", " abs", "(", "correlation", ")", " >=", " MIN", "_", "PER", "C", "ENT", "AGE", ":", "\n", "                ", "corr", "_", "com", "bin", "ations", ".", "append", "((", "cols", "[", "i", "]", ",", " col", "s", "[", "j", "]))", "\n", "\n", "    ", "return", " cor", "r", "_", "com", "bin", "ations", "\n", "\n", "def"], "logprobs": [-0.9857874512672424, -0.054816290736198425, -0.06801013648509979, -0.0027353274635970592, -3.2543604902457446e-05, -0.009139487519860268, -0.19673962891101837, -0.011586870066821575, -1.1761393547058105, -0.0008370947907678783, -0.554083526134491, -1.3953545093536377, -0.2633061707019806, -0.06146518513560295, -0.0011213688412681222, -1.7841109037399292, -7.879423355916515e-05, -0.04681030660867691, -1.350010871887207, -0.8688752055168152, -0.010915450751781464, -0.007897225208580494, -0.08279631286859512, -0.022263120859861374, -0.004511891398578882, -0.09706872701644897, -0.19972346723079681, -0.001368777477182448, -0.006832332815974951, -0.0009445258183404803, -0.014958007261157036, -0.18345056474208832, -0.00026055757189169526, -2.8490614567999728e-05, -0.0003987947420682758, -0.0008954567601904273, -1.4662635294371285e-05, -0.00020203932945150882, -0.008034883998334408, -9.727005090098828e-05, -0.0023451941087841988, -0.011233063414692879, -2.2823081016540527, -0.06552614271640778, -0.549248993396759, -1.1180909872055054, -0.029442451894283295, -0.801331639289856, -0.00684180436655879, -0.0004223884898237884, -0.0073279403150081635, -0.01002762746065855, -0.39292827248573303, -5.8053239627042785e-05, -1.9430925021879375e-05, -4.637133679352701e-05, -0.006393691524863243, -0.04024088382720947, -0.13204988837242126, -0.04327964410185814, -0.25423309206962585, -0.00015090756642166525, -0.0048412722535431385, -0.012865868397057056, -0.9642189741134644, -2.38584303855896, -4.6491513785440475e-06, -4.4225667807040736e-05, -0.0012365083675831556, -8.654219709569588e-05, -2.0265373677830212e-05, -0.010853779502213001, -0.010874415747821331, -0.001049682730808854, -0.012622583657503128, -0.0002899941464420408, -0.0003721021639648825, -5.1973900554003194e-05, -3.576278118089249e-07, -0.0009734659106470644, -0.000271521887043491, -0.008331069722771645, -0.001049801823683083, -6.6756979322235566e-06, -0.0003815161471720785, -2.074220174108632e-05, -0.00019333878299221396, -0.0005803807871416211, 0.0, -6.9141146923357155e-06, -1.5616295058862306e-05, -0.0018753099720925093, -0.003347628517076373, -0.16138355433940887, -0.0012461524456739426, -0.014263464137911797, -0.011567072942852974, -7.152555099310121e-07, -2.622600959512056e-06, -1.0967194612021558e-05, -2.4676019165781327e-05, -3.576278118089249e-07, -0.2625979483127594, -0.00667366711422801, -0.5212328433990479], "finish_reason": "stop"}], "metrics": {"energy": 124.97540813446047, "energy_per_token": 1.1902419822329569, "time": 4.42803, "time_per_token": 0.042171714285714285}}
{"outputs": [{"text": "if not all(isinstance(item, (list, tuple, set)) for item in data):\n        return None\n\n    if percentage < MIN_PERCENTAGE:\n        return []\n\n    data = pd.DataFrame(data, columns=cols)\n    n = data.shape[0]\n\n    corr_combinations = []\n\n    for i in range(1, n):\n        for comb in combinations(cols, i):\n            col_pairs = list(combinations(comb, 2))\n\n            corr_values = [\n                np.corrcoef(data[col1], data[col2])[0, 1] for col1, col2 in col_pairs\n                if np.corrcoord(data[col1], data[col2])[0, 1] > percentage\n            ]\n\n            if len(corr_values) > 0:\n                corr_combinations.extend([(col1, col2) for col1, col2 in col_pairs if np.corrcoord(data[col1], data[col2])[0, 1] >", "tokens": ["if", " not", " all", "(", "is", "instance", "(", "item", ",", " (", "list", ",", " tuple", ",", " set", "))", " for", " item", " in", " data", "):", "\n", "        ", "return", " None", "\n", "\n", "    ", "if", " percentage", " <", " MIN", "_", "PER", "C", "ENT", "AGE", ":", "\n", "        ", "return", " []", "\n", "\n", "    ", "data", " =", " pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "cols", ")", "\n", "    ", "n", " =", " data", ".", "shape", "[", "0", "]", "\n", "\n", "    ", "corr", "_", "com", "bin", "ations", " =", " []", "\n", "\n", "    ", "for", " i", " in", " range", "(", "1", ",", " n", "):", "\n", "        ", "for", " comb", " in", " combinations", "(", "cols", ",", " i", "):", "\n", "            ", "col", "_", "pairs", " =", " list", "(", "com", "bin", "ations", "(", "comb", ",", " ", "2", "))", "\n", "\n", "            ", "corr", "_", "values", " =", " [", "\n", "                ", "np", ".", "corr", "co", "ef", "(", "data", "[", "col", "1", "]", ",", " data", "[", "col", "2", "])", "[", "0", ",", " ", "1", "]", " for", " col", "1", ",", " col", "2", " in", " col", "_", "pairs", "\n", "                ", "if", " np", ".", "corr", "co", "ord", "(", "data", "[", "col", "1", "]", ",", " data", "[", "col", "2", "])", "[", "0", ",", " ", "1", "]", " >", " percentage", "\n", "            ", "]", "\n", "\n", "            ", "if", " len", "(", "corr", "_", "values", ")", " >", " ", "0", ":", "\n", "                ", "corr", "_", "com", "bin", "ations", ".", "extend", "([", "(", "col", "1", ",", " col", "2", ")", " for", " col", "1", ",", " col", "2", " in", " col", "_", "pairs", " if", " np", ".", "corr", "coord", "(", "data", "[", "col", "1", "]", ",", " data", "[", "col", "2", "])", "[", "0", ",", " ", "1", "]", " >"], "logprobs": [-3.625473976135254, -1.2374811172485352, -2.5646262168884277, -0.2742587924003601, -0.7835164070129395, -0.006721151061356068, -0.0011788808042183518, -2.5351290702819824, -0.001957169035449624, -2.17708683013916, -0.730348527431488, -0.009181066416203976, -0.1288931667804718, -0.7391436100006104, -0.9479311108589172, -0.40913471579551697, -0.03389033302664757, -0.00990629568696022, -0.00021479207498487085, -0.037267062813043594, -0.03190363571047783, -0.020960604771971703, -0.0049674902111291885, -2.1730263233184814, -1.2145241498947144, -0.013934586197137833, -0.6408558487892151, -0.0006713996990583837, -0.8528091907501221, -3.4001359939575195, -0.28712573647499084, -0.30098187923431396, -5.245195097813848e-06, -4.494089080253616e-05, -0.0035476861521601677, -8.046303264563903e-05, -2.9444261599564925e-05, -0.12146717309951782, -0.007971378974616528, -0.0009084388730116189, -0.08802670985460281, -1.2395288944244385, -0.0038412846624851227, -0.026155177503824234, -0.000439428084064275, -3.288496494293213, -0.5477524399757385, -0.29575034976005554, -3.373566141817719e-05, -0.011380517855286598, -0.02599327638745308, -0.014659314416348934, -0.4171866476535797, -0.03153003379702568, -0.028873374685645103, -0.005461770575493574, -0.015558646991848946, -0.05605349689722061, -0.49423521757125854, -3.7125191688537598, -0.3728374242782593, -1.456977367401123, -0.004378256853669882, -0.07445864379405975, -0.0033661627676337957, -1.518672227859497, -0.00019107422849629074, -0.04306648299098015, -0.7297796010971069, -0.00040058218291960657, -0.7847521305084229, -0.123466856777668, -0.1623421311378479, -0.011044323444366455, -2.634490556374658e-05, -0.0038661037106066942, -0.08187234401702881, -0.0023777803871780634, -1.1352916955947876, -0.00020966715237591416, -0.19014029204845428, -0.5596747994422913, -0.23190972208976746, -0.003324578981846571, -0.0004328744253143668, -0.4285142123699188, -0.00016008525562938303, -1.5444189310073853, -0.20074978470802307, -0.02026589773595333, -0.0016517103649675846, -0.38437971472740173, -1.0174001455307007, -0.04779144003987312, -0.015250271186232567, -0.005624303128570318, -0.21417544782161713, -0.0005087750032544136, -0.002840296132490039, -0.006727426778525114, -0.00411627721041441, -0.006538189947605133, -3.187894821166992, -0.5524608492851257, -0.712958574295044, -0.00905018113553524, -0.8862854242324829, -0.0035207211039960384, -0.28597718477249146, -0.000454799213912338, -0.00010394509445177391, -0.0005822870298288763, -0.04820264130830765, -0.0002953569928649813, -0.019827736541628838, -0.0018488947534933686, -0.00013863079948350787, -0.016923537477850914, -1.8682022094726562, -0.0007937379996292293, -2.793736696243286, -0.35070618987083435, -1.6904605627059937, -0.0055633713491261005, -0.8400998115539551, -2.0852458477020264, -0.002597056096419692, -1.8842450380325317, -0.0005590544897131622, -0.4885355532169342, -0.0001842805795604363, -0.001279846066609025, -0.030994966626167297, -0.28978657722473145, -0.06043218448758125, -0.46853503584861755, -0.535881757736206, -0.001698243198916316, -0.03695244342088699, -0.0019056509481742978, -0.000409161759307608, -5.864924969500862e-05, -0.00020597243565134704, -0.04560864716768265, -0.028387870639562607, -0.016912519931793213, -0.08378170430660248, -0.015281853266060352, -0.00010823617776622996, -0.0003343261778354645, -0.6790978312492371, -0.22954070568084717, -0.0008466235012747347, -0.004975912161171436, -0.0019033902790397406, -1.5139465176616795e-05, -0.0021830792538821697, -0.009061758406460285, -3.266281055402942e-05, -5.245195097813848e-06, -0.180746391415596, -2.607776641845703, -0.06600946187973022, -0.7189348340034485, -4.637133679352701e-05, -0.49024003744125366, -4.732496745418757e-05, -1.5612311363220215, -0.039253342896699905, -0.047291044145822525, -0.016569269821047783, -0.017046598717570305, -0.00047017011092975736, -0.0002525725867599249, -0.002224234864115715, -0.0015688742278143764, -0.0006038511055521667, -4.9828242481453344e-05, -0.0025505651719868183, -0.018624547868967056, -0.10327592492103577, -0.06958947330713272, -0.02239077351987362, -0.010421736165881157, -0.32654044032096863, -0.0009147512027993798, -0.6355766654014587, -0.4618445336818695, -0.07938195765018463, -0.028392737731337547, -0.00015448330668732524, -0.0011799524072557688, -0.10832419246435165, -0.0005168771021999419, -0.04306500032544136, -0.3005124032497406, -0.00010334911348763853, -0.00749561283737421, -2.264974000354414e-06, -0.0010209829779341817, -0.010021490044891834, -0.3325260281562805, -0.025395503267645836, -0.03398885577917099, -0.008214734494686127, -0.007622442673891783, -0.0009182051289826632, -0.32415851950645447, -0.002093149581924081, -0.021843677386641502, -6.258291978156194e-05, -5.960462772236497e-07, -0.011818391270935535, -2.194523334503174, -0.9213849306106567, -0.14665494859218597, -0.22415974736213684, -0.02384764887392521, -0.004783140029758215, -0.0006973695708438754, -0.00015853578224778175, -0.0012409137561917305, -0.027508821338415146, -0.03778236731886864, -0.015702882781624794, -0.005010311026126146, -0.0011834054021164775, -1.9073304429184645e-05, -0.010665792971849442, -0.018896909430623055, -0.00017248096992261708, -9.417489309271332e-06, -1.4054560661315918, -0.40366390347480774, -0.0011541141429916024, -0.05355721339583397, -1.1200847625732422, -0.0037019785959273577, -0.01588546670973301, -0.0013734203530475497, -0.005231619346886873, -0.00010573305189609528, -4.494089080253616e-05, -0.0001787979417713359, -0.004145125392824411, -0.00015054999676067382, -0.00032479254878126085, -0.0004644507134798914, -0.0021975908894091845, -0.002777054673060775, -0.012235935777425766, -0.0004047528200317174, -0.017156990244984627, -0.0009242791566066444, -0.018195031210780144, -0.17654964327812195], "finish_reason": "length"}], "metrics": {"energy": 261.66274120330803, "energy_per_token": 1.022120082825422, "time": 11.141376, "time_per_token": 0.043521}}
