{"outputs": [{"text": "ax = sns.heatmap(data.corr(), annot=True, fmt=\".2f\", cmap=\"RdYlGn\")\n    ax.set_title(\"Correlation Matrix\")\n    return ax", "tokens": ["ax", " =", " s", "ns", ".", "heat", "map", "(", "data", ".", "corr", "()", ",", " annot", "=", "True", ",", " fmt", "=", "\"", ".", "2", "f", "\"", ",", " c", "map", "=", "\"", "R", "d", "Y", "l", "G", "n", "\"", ")", "\n", "    ", "ax", ".", "set", "_", "title", "(", "\"", "Cor", "relation", " Matrix", "\"", ")", "\n", "    ", "return", " ax", "\n", "\n", "#"], "logprobs": [-3.2098398208618164, -0.029833843931555748, -0.09413443505764008, -6.318072337307967e-06, -0.00012110930401831865, -0.0007638397510163486, -1.1086402082582936e-05, -0.0006344689172692597, -0.2749198079109192, -0.17647460103034973, -0.004353094846010208, -0.03185352310538292, -0.006858971901237965, -0.160446897149086, -0.028028832748532295, -0.009498050436377525, -0.3229732811450958, -1.2260249853134155, -1.1315979957580566, -0.001116367639042437, -0.01920579932630062, -0.09917853027582169, -0.028755467385053635, -1.2993727978027891e-05, -0.19743794202804565, -0.2862241566181183, -0.013835126534104347, -0.8604599833488464, -0.015547731891274452, -1.9992159605026245, -0.18014365434646606, -0.00010680581908673048, -5.960446742392378e-06, -0.008546561934053898, -2.3841855067985307e-07, -0.06948471814393997, -0.5783439874649048, -0.05880830064415932, -0.019692393019795418, -0.12390812486410141, -0.002360298065468669, -0.034125734120607376, -0.02052438259124756, -0.003942812792956829, -0.8983495235443115, -0.004490530118346214, -0.002636886900290847, -0.0003856868715956807, -0.0013191340258345008, -0.002394310897216201, -0.08510810136795044, -0.0025664984714239836, -0.08680889755487442, -0.03886160999536514, -0.0022023487836122513, -0.5557944178581238, -0.012569375336170197, -1.8055022954940796], "finish_reason": "stop"}], "metrics": {"energy": 304.57989905166625, "energy_per_token": 5.251377569856315, "time": 8.495446, "time_per_token": 0.14647320689655172}}
{"outputs": [{"text": "# Create correlation matrix\n    corr_matrix = data.corr().astype(float)\n\n    # Set plot style and font size\n    sns.set(style=\"white\")\n    sns.set(font_scale=2)\n\n    # Draw the heatmap\n    ax = sns.heatmap(corr_matrix, annot=True, cmap=\"coolwarm\")\n    ax.set_title(\"Correlation Matrix\")\n\n    return ax", "tokens": ["#", " Create", " correlation", " matrix", "\n", "    ", "corr", "_", "matrix", " =", " data", ".", "corr", "()", ".", "ast", "ype", "(", "float", ")", "\n", "\n", "    ", "#", " Set", " plot", " style", " and", " font", " size", "\n", "    ", "s", "ns", ".", "set", "(", "style", "=", "\"", "white", "\"", ")", "\n", "    ", "s", "ns", ".", "set", "(", "font", "_", "scale", "=", "2", ")", "\n", "\n", "    ", "#", " Draw", " the", " heat", "map", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "corr", "_", "matrix", ",", " annot", "=", "True", ",", " c", "map", "=", "\"", "cool", "warm", "\"", ")", "\n", "    ", "ax", ".", "set", "_", "title", "(", "\"", "Cor", "relation", " Matrix", "\"", ")", "\n", "\n", "    ", "return", " ax", "\n", "\n", "if"], "logprobs": [-1.2937016487121582, -1.6959398984909058, -1.5402038097381592, -0.004084103740751743, -0.03919752314686775, -0.0029343189671635628, -0.1654042750597, -0.6891148686408997, -0.020031066611409187, -0.0007194076315499842, -0.04690403863787651, -0.003170584561303258, -0.0021934278775006533, -0.0030172797851264477, -0.045740868896245956, -0.9280654191970825, -2.7418097943154862e-06, -0.03299546614289284, -0.00471966527402401, -0.0005820487276650965, -0.033381663262844086, -0.10141907632350922, -0.0010297955013811588, -0.004214809741824865, -1.666100263595581, -2.7570183277130127, -0.5266103148460388, -1.7199897766113281, -3.209237575531006, -0.18976497650146484, -0.010528850369155407, -0.0015299530932679772, -0.01734212040901184, -6.9141146923357155e-06, -9.190614218823612e-05, -0.00015436411194968969, -0.08437615633010864, -0.58282870054245, -0.07994381338357925, -2.9801878554280847e-05, -0.0010219357209280133, -5.447716102935374e-05, -0.1064349114894867, -0.006120628211647272, -0.07551230490207672, -0.030213285237550735, -9.775113539944869e-06, -0.00139246741309762, -1.5735502529423684e-05, -0.0025409336667507887, -0.21616074442863464, -9.894321920000948e-06, -0.00013100242358632386, -0.010911441408097744, -1.9874584674835205, -0.06242477148771286, -0.008390059694647789, -0.037147268652915955, -0.00039057256071828306, -0.0022948854602873325, -1.1836581230163574, -0.5131919980049133, -0.00897043664008379, -0.00011324241495458409, -0.3769497275352478, -0.0003325386205688119, -0.17537814378738403, -0.0021922383457422256, -0.00020728347590193152, 0.0, -2.264974000354414e-06, -1.585470999998506e-05, 0.0, -9.226373367710039e-05, -0.08295278996229172, -3.6477376852417365e-05, -2.3841855067985307e-07, -0.00595983536913991, -0.28982698917388916, -0.0012142435880377889, -0.030433712527155876, -0.05241827666759491, -0.5181184411048889, -0.01424113567918539, -0.22826015949249268, -0.06391196697950363, -0.12029281258583069, -0.0001551984460093081, -0.009676456451416016, -0.5582340955734253, -0.020259706303477287, -0.9572797417640686, -0.03130129724740982, -0.0014674619305878878, -0.029373925179243088, -0.0069884867407381535, -0.016142621636390686, -0.8992018103599548, -0.003180091269314289, -0.0023155799135565758, -0.00012814177898690104, -0.0008771148277446628, -0.001303419005125761, -0.28971466422080994, -0.01922614686191082, -0.16997608542442322, -0.001995835453271866, -0.2821328938007355, -0.001841636374592781, -0.33545613288879395, -0.008528714068233967, -1.4158374071121216], "finish_reason": "stop"}], "metrics": {"energy": 382.13957282447814, "energy_per_token": 3.4119604716471263, "time": 9.442135, "time_per_token": 0.08430477678571428}}
{"outputs": [{"text": "df = pd.DataFrame(data)\n    sns.set(font_scale=2)\n    ax = sns.heatmap(df.corr(), annot=True, cmap='coolwarm', fmt='.2f', linewidths=3)\n    ax.set_title('Correlation Matrix', fontsize=24)\n    ax.tick_params(axis='both', which='major', labelsize=20)\n\n    return ax", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "data", ")", "\n", "    ", "s", "ns", ".", "set", "(", "font", "_", "scale", "=", "2", ")", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "df", ".", "corr", "()", ",", " annot", "=", "True", ",", " c", "map", "='", "cool", "warm", "'", ",", " fmt", "='", ".", "2", "f", "'", ",", " linewidth", "s", "=", "3", ")", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Cor", "relation", " Matrix", "'", ",", " fonts", "ize", "=", "2", "4", ")", "\n", "    ", "ax", ".", "tick", "_", "params", "(", "axis", "='", "both", "'", ",", " which", "='", "major", "'", ",", " label", "size", "=", "2", "0", ")", "\n", "\n", "    ", "return", " ax", "\n", "\n", "#"], "logprobs": [-1.8336644172668457, -0.043012358248233795, -0.041784629225730896, -0.00019941726350225508, -0.0017911833710968494, -0.012939301319420338, -0.0026295154821127653, -0.03188319876790047, -0.022673647850751877, -0.1140671968460083, -2.208174705505371, -0.0026148909237235785, -0.003990307915955782, -0.0914733037352562, -0.23865853250026703, -0.4223770499229431, -0.0016020808834582567, -0.00012933371181134135, -0.03954799100756645, -2.0861947536468506, -0.040328364819288254, -0.16720028221607208, -0.03450090438127518, -1.3476567268371582, -0.01461467333137989, -0.014248657040297985, -2.622600959512056e-06, -0.0002261144545627758, -0.0001902399235405028, -4.768370445162873e-07, -0.0004138090298511088, -0.16842582821846008, -0.003204688895493746, -0.004605994094163179, -0.05624835193157196, -0.008107135072350502, -0.17423862218856812, -0.015901071950793266, -0.009184256196022034, -0.44053804874420166, -0.479512095451355, -0.03458969295024872, -0.7052536606788635, -0.3546637296676636, -0.007676269393414259, -0.9724605679512024, -0.0008222059695981443, -1.0657029151916504, -0.1392204612493515, -0.047385528683662415, -0.08946021646261215, -0.09924772381782532, -0.8494239449501038, -0.0019174300832673907, -0.8108900785446167, -0.059236232191324234, -0.0019615711644291878, -2.55439829826355, -0.7929657697677612, -0.07462704181671143, -0.016754155978560448, -0.11017894744873047, -0.0016889605903998017, -0.05709012597799301, -0.011435911059379578, -0.004681815858930349, -0.07097490131855011, -0.0027891802601516247, -0.0005134217790327966, -0.0015766106080263853, -0.5426306128501892, -0.0003777029050979763, -0.19538478553295135, -1.1920928244535389e-07, -0.005784794222563505, -0.3225751519203186, -1.4111264944076538, -0.2825722396373749, -0.006111860740929842, -0.077397421002388, -2.6894161701202393, -0.010858142748475075, -0.7362474799156189, -0.0002743821241892874, -1.6689160474925302e-05, -0.004559715278446674, -0.14908598363399506, -0.024680843576788902, -0.6919794678688049, -0.0007929041748866439, -0.00013648532330989838, -0.38864627480506897, -0.0004245333548169583, -0.007217287551611662, -0.0012380562257021666, -4.279521817807108e-05, -0.01754361391067505, -0.0003864018653985113, -0.0008781867218203843, -0.6600470542907715, -0.13482245802879333, -0.030076447874307632, -0.01300107967108488, -2.152377128601074, -0.011774447746574879, -0.05698495730757713, -0.0029427579138427973, -0.2936243712902069, -0.009560277685523033, -1.9143733978271484], "finish_reason": "stop"}], "metrics": {"energy": 400.2062968034743, "energy_per_token": 3.638239061849766, "time": 9.257687, "time_per_token": 0.08416079090909091}}
{"outputs": [{"text": "df = pd.DataFrame(data)\n    # calculate the correlation matrix\n    corr = df.corr()\n    # create a heatmap using seaborn\n    sns.set(font_scale=0.75)\n    sns.set_style(\"white\")\n    ax = sns.heatmap(corr, annot=True, cmap=\"Blues\")\n    ax.set_title(\"Correlation Matrix\")\n    return ax", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "data", ")", "\n", "    ", "#", " calculate", " the", " correlation", " matrix", "\n", "    ", "corr", " =", " df", ".", "corr", "()", "\n", "    ", "#", " create", " a", " heat", "map", " using", " se", "ab", "orn", "\n", "    ", "s", "ns", ".", "set", "(", "font", "_", "scale", "=", "0", ".", "7", "5", ")", "\n", "    ", "s", "ns", ".", "set", "_", "style", "(", "\"", "white", "\"", ")", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "corr", ",", " annot", "=", "True", ",", " c", "map", "=", "\"", "Bl", "ues", "\"", ")", "\n", "    ", "ax", ".", "set", "_", "title", "(", "\"", "Cor", "relation", " Matrix", "\"", ")", "\n", "    ", "return", " ax", "\n", "\n", "def"], "logprobs": [-1.8336644172668457, -0.043012358248233795, -0.041784629225730896, -0.00019941726350225508, -0.0017911833710968494, -0.012939301319420338, -0.0026295154821127653, -0.03188319876790047, -0.022673647850751877, -0.1140671968460083, -1.7299453020095825, -3.204761028289795, -0.11206746846437454, -0.029487941414117813, -0.03871195763349533, -0.05156237259507179, -0.0009652484441176057, -0.05257267504930496, -0.10519962012767792, -0.001794277224689722, -0.00043644916149787605, -0.002618576865643263, -0.003575956914573908, -0.003128873882815242, -0.6018947958946228, -0.03969178721308708, -1.643279790878296, -0.5658279657363892, -1.2094855308532715, -0.0007217901293188334, -0.9294100403785706, -0.054428912699222565, -9.715084888739511e-05, -7.152555099310121e-07, -0.029149560257792473, -0.0007169060409069061, -1.7685744762420654, -0.00021824838768225163, -0.0013872295385226607, -0.2920730710029602, -0.09014084190130234, -0.349113404750824, -0.0010069306008517742, -5.94836674281396e-05, -0.024157922714948654, -3.0657246112823486, -0.0006255338666960597, -1.8550091981887817, -0.4201106131076813, -0.008173469454050064, -0.20840418338775635, -0.003639504313468933, -1.7218141555786133, -6.067568756407127e-05, -0.002052226336672902, -0.08701861649751663, -0.601784884929657, -0.6154435873031616, -0.3440546691417694, -0.09249550849199295, -0.17020657658576965, -0.3787485659122467, -0.04876911640167236, -0.02143992856144905, -0.015340317040681839, -0.23065823316574097, -0.0028360167052596807, -0.004766886122524738, -2.3841855067985307e-07, -1.0371154530730564e-05, -5.638440416078083e-05, -1.1920928244535389e-07, -2.4914430468925275e-05, -0.033013343811035156, -0.027714770287275314, -0.24515867233276367, -0.01574055291712284, -0.06875304132699966, -0.12702465057373047, -0.14375202357769012, -0.012710394337773323, -0.19888977706432343, -0.2344145029783249, -2.4971513748168945, -1.6689160474925302e-05, -0.002449371386319399, -0.3296322226524353, -0.02091250941157341, -0.029169706627726555, -0.7827404737472534, -0.0029993331991136074, -0.04763414338231087, -0.00738142803311348, -0.005882570054382086, -1.245769739151001, -0.006269311998039484, -0.002580291125923395, -0.00017581824795342982, -0.0027734884060919285, -0.0017675028648227453, -0.032117802649736404, -0.006922665983438492, -0.11491461843252182, -0.17785470187664032, -0.002668393775820732, -0.2036600410938263, -0.018852222710847855, -1.0997464656829834], "finish_reason": "stop"}], "metrics": {"energy": 376.91996352958677, "energy_per_token": 3.489999662310989, "time": 9.245444, "time_per_token": 0.08560596296296297}}
{"outputs": [{"text": "corr = data.corr()\n    ax = sns.heatmap(corr, annot=True, cmap=\"coolwarm\")\n    ax.set_title('Correlation Matrix')\n    return ax", "tokens": ["corr", " =", " data", ".", "corr", "()", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "corr", ",", " annot", "=", "True", ",", " c", "map", "=", "\"", "cool", "warm", "\"", ")", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Cor", "relation", " Matrix", "')", "\n", "    ", "return", " ax", "\n", "\n", "#"], "logprobs": [-1.9765877723693848, -0.16555964946746826, -0.12891381978988647, -0.0027882291469722986, -0.0022561114747077227, -0.01310591772198677, -0.07160697132349014, -0.05517430230975151, -0.7294530868530273, -0.007989945821464062, -0.009726513177156448, -2.622600959512056e-06, -1.728519782773219e-05, -0.00025686301523819566, -5.960462772236497e-07, -0.0002873722987715155, -0.18273486196994781, -0.1354515701532364, -0.2555582821369171, -0.02625945769250393, -0.012016172520816326, -0.6107766032218933, -0.2611732482910156, -0.020988505333662033, -0.30543676018714905, -0.35047391057014465, -0.23124945163726807, -0.0032564965076744556, -0.0019348012283444405, -0.2021433562040329, -0.018116597086191177, -0.013348967768251896, -0.14713343977928162, -0.002478862414136529, -0.01572529785335064, -0.016604561358690262, -0.0015653035370633006, -0.404052197933197, -0.0017572689102962613, -0.0001760566228767857, -0.0012390087358653545, -0.03354905918240547, -0.0014056811342015862, -0.05789192393422127, -0.02939140424132347, -0.00229904823936522, -0.46608972549438477, -0.019576553255319595, -1.764441728591919], "finish_reason": "stop"}], "metrics": {"energy": 135.65243993759157, "energy_per_token": 2.7684171415835013, "time": 3.916037, "time_per_token": 0.0799191224489796}}
{"outputs": [{"text": "data = pd.DataFrame(data)\n    ax = sns.heatmap(data.corr(), annot=True)\n    plt.title('Correlation Matrix')\n    plt.show()\n    return ax\n\n@pytest.fixture\ndef example_data():\n    return {'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]}", "tokens": ["data", " =", " pd", ".", "DataFrame", "(", "data", ")", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "data", ".", "corr", "()", ",", " annot", "=", "True", ")", "\n", "    ", "plt", ".", "title", "('", "Cor", "relation", " Matrix", "')", "\n", "    ", "plt", ".", "show", "()", "\n", "    ", "return", " ax", "\n", "\n", "@", "py", "test", ".", "f", "ixture", "\n", "def", " example", "_", "data", "():", "\n", "    ", "return", " {'", "a", "':", " [", "1", ",", " ", "2", ",", " ", "3", "]", ",", " '", "b", "':", " [", "4", ",", " ", "5", ",", " ", "6", "]", ",", " '", "c", "':", " [", "7", ",", " ", "8", ",", " ", "9", "]}", "\n", "\n", "def"], "logprobs": [-3.3672051429748535, -0.15942247211933136, -0.056829772889614105, -9.858122211880982e-05, -0.012102858163416386, -0.027358274906873703, -0.0058052982203662395, -0.032789330929517746, -0.02283667027950287, -0.10578576475381851, -2.3310165405273438, -0.0182585921138525, -0.029774948954582214, -3.099436753473128e-06, -4.5060096454108134e-05, -0.0004586121649481356, -1.4781842764932662e-05, -0.0004259632551111281, -0.016604796051979065, -0.028560854494571686, -0.0027954806573688984, -0.08214525133371353, -0.005101638846099377, -0.15272453427314758, -0.037884410470724106, -0.006767093203961849, -0.736463189125061, -0.037132106721401215, -0.015815770253539085, -2.563347578048706, -0.003579401643946767, -0.03443571552634239, -0.2051289975643158, -0.0022573007736355066, -0.0006114759016782045, -0.0017440598458051682, -0.028333060443401337, -0.0032174033112823963, -0.027355143800377846, -1.2701022624969482, -0.00011920218821614981, -0.10289762169122696, -0.010486147366464138, -0.006886438932269812, -0.05208474025130272, -0.03220241889357567, -0.006397126708179712, -0.26839277148246765, -0.017081638798117638, -3.800618886947632, -0.26961442828178406, -0.0025592453312128782, -0.0006574614671990275, -0.9789302349090576, -1.6689286894688848e-06, -0.0938132181763649, -0.00380589603446424, -1.5775147676467896, -0.002939073368906975, -0.07598209381103516, -0.035247478634119034, -0.00020001317898277193, -0.003357727313414216, -0.22381260991096497, -0.1677456647157669, -0.06447263062000275, -0.00015472168161068112, -0.0017583399312570691, -0.005084678530693054, -0.006814572960138321, -0.0012384133879095316, -0.008862800896167755, -0.00472678430378437, -0.0004732680681627244, -0.0019219514215365052, -0.00867538619786501, -3.397406908334233e-05, -0.004101318307220936, -0.00011038171214750037, -1.3947389561508317e-05, -0.0006378046819008887, -0.003982708789408207, -0.0003358753747306764, -0.00014697425649501383, -0.0010930284624919295, -9.929640509653836e-05, -0.0004988856380805373, -0.0007670559571124613, -0.0056174276396632195, -4.172316494077677e-06, -0.00018416139937471598, -8.868777513271198e-05, -1.7404405298293568e-05, -0.0002525725867599249, -0.0006743779522366822, -3.0040289857424796e-05, -0.000309657771140337, -0.0009027220075950027, -5.245071224635467e-05, -0.00010525626566959545, -0.0003203832311555743, -0.006958299782127142, -0.0035993570927530527, -0.003587479004636407, -0.1132625937461853], "finish_reason": "stop"}], "metrics": {"energy": 362.1737660293581, "energy_per_token": 3.4492739621843627, "time": 9.041888, "time_per_token": 0.08611321904761905}}
{"outputs": [{"text": "# Generate correlation matrix\n    corr = data.corr()\n    # Generate a mask for the upper triangle\n    mask = np.zeros_like(corr, dtype=np.bool)\n    mask[np.triu_indices_from(mask)] = True\n    # Set up the matplotlib figure\n    f, ax = plt.subplots(figsize=(11, 9))\n    # Generate a custom diverging colormap as green/red\n    cmap = sns.diverging_palette(220, 10, as_cmap=True)\n    # Draw the heatmap with the mask and correct aspect ratio\n    sns.heatmap(corr, mask=mask, cmap=cmap, vmax=1, vmin=-1, center=0,\n                square=True, linewidths=.5, cbar_kws={\"shrink\": .5})\n    # Set title of heatmap\n    plt.title('Correlation Matrix')\n    # Show heatmap\n    plt.show()\n    return ax\n\ndata = pd.DataFrame({'a': [1, 2, ", "tokens": ["#", " Generate", " correlation", " matrix", "\n", "    ", "corr", " =", " data", ".", "corr", "()", "\n", "    ", "#", " Generate", " a", " mask", " for", " the", " upper", " triangle", "\n", "    ", "mask", " =", " np", ".", "zeros", "_", "like", "(", "corr", ",", " dtype", "=", "np", ".", "bool", ")", "\n", "    ", "mask", "[", "np", ".", "tri", "u", "_", "indices", "_", "from", "(", "mask", ")]", " =", " True", "\n", "    ", "#", " Set", " up", " the", " matplotlib", " figure", "\n", "    ", "f", ",", " ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "1", "1", ",", " ", "9", "))", "\n", "    ", "#", " Generate", " a", " custom", " diver", "ging", " col", "orm", "ap", " as", " green", "/", "red", "\n", "    ", "cm", "ap", " =", " s", "ns", ".", "d", "iver", "ging", "_", "pal", "ette", "(", "2", "2", "0", ",", " ", "1", "0", ",", " as", "_", "cm", "ap", "=", "True", ")", "\n", "    ", "#", " Draw", " the", " heat", "map", " with", " the", " mask", " and", " correct", " aspect", " ratio", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "corr", ",", " mask", "=", "mask", ",", " c", "map", "=", "cm", "ap", ",", " v", "max", "=", "1", ",", " v", "min", "=-", "1", ",", " center", "=", "0", ",", "\n", "                ", "square", "=", "True", ",", " linewidth", "s", "=", ".", "5", ",", " c", "bar", "_", "k", "ws", "=", "{\"", "sh", "rink", "\":", " ", ".", "5", "})", "\n", "    ", "#", " Set", " title", " of", " heat", "map", "\n", "    ", "plt", ".", "title", "('", "Cor", "relation", " Matrix", "')", "\n", "    ", "#", " Show", " heat", "map", "\n", "    ", "plt", ".", "show", "()", "\n", "    ", "return", " ax", "\n", "\n", "data", " =", " pd", ".", "DataFrame", "({", "'", "a", "':", " [", "1", ",", " ", "2", ",", " "], "logprobs": [-1.2937016487121582, -4.306818008422852, -1.2723777294158936, -0.00240013818256557, -0.03433850407600403, -0.0026925283018499613, -0.1357354372739792, -0.0637357085943222, -0.03484427183866501, -0.002548306016251445, -0.0011032691691070795, -0.006066361907869577, -0.0055198632180690765, -1.4844945669174194, -0.10877839475870132, -0.32545703649520874, -0.1877942979335785, -0.17807500064373016, -0.00040725519647821784, -0.0028819001745432615, -0.032461296766996384, -0.00930012483149767, -0.03248564526438713, -0.0015192406717687845, -0.004555680323392153, -0.00024911639047786593, -0.0035721559543162584, -5.483612312673358e-06, -0.11734011769294739, -9.179073458653875e-06, -2.145764938177308e-06, -1.0490362910786644e-05, -0.0009586982196196914, -0.00038211196078918874, -3.2782016205601394e-05, -0.019883479923009872, -2.47945499420166, -2.9802276912960224e-06, -6.937739817658439e-05, -0.09170695394277573, -0.0007017772295512259, -0.00027044929447583854, -0.0006100462633185089, -4.291525328881107e-06, -7.152301259338856e-05, 0.0, -0.0001515035255579278, -3.158996332786046e-05, -5.960462772236497e-07, -1.3232143828645349e-05, -9.548207890475169e-05, -6.437280717364047e-06, -3.9457496313843876e-05, -0.0006597249885089695, -0.0012417471734806895, -3.5523738915799186e-05, -0.0002101439022226259, -0.0016108882846310735, -0.08215963840484619, -0.004944359418004751, -0.04004437103867531, -0.06367587298154831, -0.31228938698768616, -0.03068634495139122, -0.001134705264121294, -0.0030680273193866014, -0.004676714073866606, -0.0625719204545021, -0.00037043384509161115, -0.00033456450910307467, -0.0006021831650286913, -0.0008166077313944697, -2.2172682292875834e-05, -1.7404405298293568e-05, -2.2649508537142538e-05, -0.022565146908164024, -3.576214658096433e-05, 0.0, -0.0026965707074850798, -0.013257213868200779, -0.04427564889192581, -9.226373367710039e-05, -0.0007372760446742177, -0.02645707316696644, -0.0008557948167435825, -0.0005511910421773791, -0.008716156706213951, -0.004664492793381214, -1.0476112365722656, -0.0029349131509661674, -0.014871803112328053, -0.13693328201770782, -0.0003597089380491525, -5.066266385256313e-05, -2.7418097943154862e-06, -2.3841855067985307e-07, -0.27239418029785156, -2.5895791053771973, -2.5043022632598877, -0.8849248886108398, -0.17258532345294952, -0.0008918836829252541, -0.011177187785506248, -1.5020257706055418e-05, -0.0018032018560916185, -0.0003567297535482794, 0.0, -1.3828182090946939e-05, -0.024209588766098022, -2.038458114839159e-05, -0.00015698630886618048, -5.960462772236497e-07, -0.0005763299996033311, -1.0728830375228426e-06, -0.00048101297579705715, -0.13537536561489105, -0.043528709560632706, -6.48477507638745e-05, -0.00011145447206217796, -0.015198376961052418, -0.3479740619659424, -0.020299073308706284, -0.001420085085555911, -0.0009027220075950027, 0.0, -0.0005228344234637916, -2.7418097943154862e-06, -0.0002873722987715155, -0.00020430385484360158, -0.009173506870865822, -0.0037448531948029995, -0.008214261382818222, -0.011746524833142757, -0.0025599587243050337, -0.0009701313101686537, -0.0007634824141860008, -7.986990567587782e-06, -0.013237214647233486, -0.00010573305189609528, -0.0051284427754580975, -0.0035426970571279526, -0.02354554459452629, -0.0016643255949020386, -0.0006660388899035752, -0.00037889453233219683, -0.0005283151986077428, -0.188589408993721, -0.00013016807497479022, -0.0015442363219335675, -0.002499315422028303, -2.145764938177308e-06, -9.214453893946484e-05, -0.03157103806734085, -0.0010143141262233257, -0.018342865630984306, -0.00023457636416424066, -0.00012146688823122531, -0.0002469711471349001, -0.051918379962444305, -6.97350042173639e-05, -0.0019702562130987644, -0.0031234072521328926, -9.536738616588991e-07, -0.0004741021548397839, -0.0838794857263565, -0.027129512280225754, -0.0002369599969824776, -0.04835700988769531, -2.0506279468536377, -0.19005157053470612, -1.6927575416048057e-05, -0.03381127864122391, -0.00063744728686288, -0.002476127352565527, -0.6111075282096863, -0.0002134810492862016, -0.0008867622236721218, -0.007446390576660633, -0.09958025068044662, -0.06067073345184326, -0.08993014693260193, -1.4781842764932662e-05, -0.0005701346672140062, -0.002438430907204747, -0.0012271024752408266, -9.440929716220126e-05, -0.00010358751023886725, -0.33713793754577637, -0.013509047217667103, -0.038105446845293045, -0.0017232344252988696, -5.960462772236497e-07, -0.0007496645557694137, -0.0020249830558896065, -0.00023541064001619816, -0.05552271008491516, -8.40390202938579e-05, -2.52720492426306e-05, -0.0001774868869688362, -2.0265558760002023e-06, -0.00038354191929101944, -0.0010370597010478377, -0.01057320274412632, -0.82289719581604, -0.05713820084929466, -0.03968697413802147, -0.7263189554214478, -0.4444720149040222, -1.0773460865020752, -1.5326765775680542, -1.0765477418899536, -0.01676165871322155, -0.059032175689935684, -0.0005470209871418774, -0.5335609912872314, -4.637133679352701e-05, -0.01269544567912817, -0.07686901837587357, -0.0029062675312161446, -0.000547378440387547, -0.0023192670196294785, -0.1913299709558487, -0.0036190745886415243, -0.19124431908130646, -1.0824387073516846, -1.17365562915802, -2.3736658096313477, -0.003037127433344722, -0.07525791972875595, -0.0017824966926127672, -0.12984035909175873, -0.00010632903286023065, -0.005659864749759436, -0.0037863010074943304, -0.015626249834895134, -0.15036459267139435, -0.2833939790725708, -0.016751693561673164, -0.22688980400562286, -0.023611677810549736, -2.1782569885253906, -0.058706458657979965, -1.611760139465332, -5.8410845667822286e-05, -0.18070350587368011, -0.15417812764644623, -0.11145300418138504, -0.17535562813282013, -0.002152032917365432, -0.05877244099974632, -0.017680419608950615, -0.014365937560796738, -0.004681934602558613, -0.008737664669752121, -0.002224948490038514, -0.0008709213580004871], "finish_reason": "length"}], "metrics": {"energy": 889.042885854721, "energy_per_token": 3.472823772870004, "time": 22.166286, "time_per_token": 0.0865870546875}}
{"outputs": [{"text": "ax = sns.heatmap(data.corr(), annot=True, cmap='coolwarm', vmin=-1, vmax=1)\n    ax.set_title('Correlation Matrix')\n    return ax", "tokens": ["ax", " =", " s", "ns", ".", "heat", "map", "(", "data", ".", "corr", "()", ",", " annot", "=", "True", ",", " c", "map", "='", "cool", "warm", "'", ",", " v", "min", "=-", "1", ",", " v", "max", "=", "1", ")", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Cor", "relation", " Matrix", "')", "\n", "    ", "return", " ax", "\n", "\n", "#"], "logprobs": [-2.978893756866455, -0.028629319742321968, -0.11058439314365387, -5.483612312673358e-06, -0.00012754580529872328, -0.000653411028906703, -1.1801649634435307e-05, -0.0007317964336834848, -0.2221348136663437, -0.1663188338279724, -0.003990663681179285, -0.04217122122645378, -0.007427576929330826, -0.15396170318126678, -0.030309626832604408, -0.008583320304751396, -0.3446962833404541, -0.43938782811164856, -0.00757168885320425, -0.31890496611595154, -0.18912442028522491, -0.006252845283597708, -1.2234526872634888, -0.002352448645979166, -2.8198399543762207, -0.01830108091235161, -0.02143280953168869, -0.0018567480146884918, -0.046319663524627686, -0.0016143397660925984, -0.0007631250191479921, -9.870042413240299e-05, -0.0005022218101657927, -0.27406948804855347, -0.04170870780944824, -0.010792103596031666, -0.04796598479151726, -0.0016755126416683197, -0.011786346323788166, -0.01538797840476036, -0.0026440205983817577, -0.05424227938055992, -0.0014092524070292711, -0.0004567056894302368, -0.0012655591126531363, -0.08367513865232468, -0.0021004059817641973, -0.08961978554725647, -0.03304160013794899, -0.0037022160831838846, -0.4136272668838501, -0.013089445419609547, -1.8912383317947388], "finish_reason": "stop"}], "metrics": {"energy": 158.48600956726074, "energy_per_token": 2.990302067306806, "time": 4.3217916, "time_per_token": 0.08154323773584905}}
{"outputs": [{"text": "df = pd.DataFrame(data)\n    corr = df.corr()\n    ax = sns.heatmap(corr, annot=True, cmap=\"coolwarm\")\n    ax.set_title('Correlation Matrix')\n    return ax", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "data", ")", "\n", "    ", "corr", " =", " df", ".", "corr", "()", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "corr", ",", " annot", "=", "True", ",", " c", "map", "=", "\"", "cool", "warm", "\"", ")", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Cor", "relation", " Matrix", "')", "\n", "    ", "return", " ax"], "logprobs": [-1.8336644172668457, -0.043012358248233795, -0.041784629225730896, -0.00019941726350225508, -0.0017911833710968494, -0.012939301319420338, -0.0026295154821127653, -0.03188319876790047, -0.022673647850751877, -0.1140671968460083, -1.0121814012527466, -0.1658443808555603, -0.0017973711946979165, -0.0015941066667437553, -0.006137097254395485, -0.012491794303059578, -0.07424361258745193, -0.07592044025659561, -0.6168334484100342, -0.005287235137075186, -0.006358274724334478, -3.099436753473128e-06, -1.4662635294371285e-05, -0.00016437610611319542, -8.344646857949556e-07, -0.0002498314715921879, -0.04563814401626587, -0.15083177387714386, -0.13025915622711182, -0.013865106739103794, -0.007524245418608189, -0.7036015391349792, -0.1642262041568756, -0.01038186065852642, -0.7409380674362183, -0.1353672444820404, -0.3161878287792206, -0.0028148575220257044, -0.0022637236397713423, -0.15180759131908417, -0.01785339042544365, -0.016931742429733276, -0.14456991851329803, -0.002500861417502165, -0.018909191712737083, -0.01711445301771164, -0.001420323271304369, -0.3095981776714325, -0.0013003236381337047, -0.00010632903286023065, -0.0011294659925624728, -0.03690372779965401, -0.0012702024541795254, -0.04807085916399956, -0.03310318663716316, -0.0028613361064344645], "finish_reason": "stop"}], "metrics": {"energy": 198.82930521392822, "energy_per_token": 3.5505233073915754, "time": 4.5284286, "time_per_token": 0.08086479642857143}}
{"outputs": [{"text": "corr = data.corr()\n    sns.set_theme(style='white')\n    mask = ~np.trilu(np.ones(corr.shape), k=0).astype(np.bool)\n    f, ax = plt.subplots(figsize=(11, 9))\n    cmap = sns.light_palette(\"red\", as_cmap=True)\n    sns.set_theme()\n    title = 'Correlation Matrix'\n    sns.heatmap(corr, mask=mask, cmap=cmap, vmax=1.0, square=True,\n                annot=True, fmt='.2f', annot_kws={\"size\": 10},\n                xticklabels=corr.columns.values,\n                yticklabels=corr.columns.values)\n    plt.title(title)\n\n    return ax", "tokens": ["corr", " =", " data", ".", "corr", "()", "\n", "    ", "s", "ns", ".", "set", "_", "theme", "(", "style", "='", "white", "')", "\n", "    ", "mask", " =", " ~", "np", ".", "tr", "il", "u", "(", "np", ".", "ones", "(", "corr", ".", "shape", ")", ",", " k", "=", "0", ")", ".", "ast", "ype", "(", "np", ".", "bool", ")", "\n", "    ", "f", ",", " ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "1", "1", ",", " ", "9", "))", "\n", "    ", "cm", "ap", " =", " s", "ns", ".", "light", "_", "pal", "ette", "(", "\"", "red", "\"", ",", " as", "_", "cm", "ap", "=", "True", ")", "\n", "    ", "s", "ns", ".", "set", "_", "theme", "()", "\n", "    ", "title", " =", " '", "Cor", "relation", " Matrix", "'", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "corr", ",", " mask", "=", "mask", ",", " c", "map", "=", "cm", "ap", ",", " v", "max", "=", "1", ".", "0", ",", " square", "=", "True", ",", "\n", "                ", "annot", "=", "True", ",", " fmt", "='", ".", "2", "f", "'", ",", " annot", "_", "k", "ws", "=", "{\"", "size", "\":", " ", "1", "0", "}", ",", "\n", "                ", "xt", "ick", "labels", "=", "corr", ".", "columns", ".", "values", ",", "\n", "                ", "yt", "ick", "labels", "=", "corr", ".", "columns", ".", "values", ")", "\n", "    ", "plt", ".", "title", "(", "title", ")", "\n", "\n", "    ", "return", " ax", "\n", "\n", "if"], "logprobs": [-1.9765877723693848, -0.16555964946746826, -0.12891381978988647, -0.0027882291469722986, -0.0022561114747077227, -0.01310591772198677, -0.07160697132349014, -0.05517430230975151, -1.437943458557129, -0.00020597243565134704, -0.0004403813509270549, -0.07365861535072327, -2.8614935874938965, -0.033788345754146576, -0.11905019730329514, -0.02051585726439953, -2.1041297912597656, -0.06223592907190323, -0.005906627047806978, -0.012038668617606163, -0.1189916729927063, -0.49123311042785645, -0.005227705929428339, -0.4387957453727722, -1.064176082611084, -2.7418097943154862e-06, -1.6592552661895752, -4.589452510117553e-05, -0.5305207967758179, -0.04307401925325394, -0.003192449454218149, -9.536738616588991e-07, -5.9126061387360096e-05, -0.009505607187747955, -0.026803214102983475, -0.00012242044613230973, -1.2874520507466514e-05, -0.52335125207901, -0.008197234943509102, -0.005345338024199009, -0.1173606812953949, -0.030628424137830734, -0.0066212075762450695, -0.1949474811553955, -9.298280929215252e-06, -2.0861407392658293e-05, -0.0005026984144933522, -0.21350085735321045, -5.960446742392378e-06, -0.00015984688070602715, -0.10896249860525131, -0.024319656193256378, -0.0554732047021389, -0.5351033806800842, -0.0015630420530214906, -0.007293266709893942, -0.0023329441901296377, -0.025771984830498695, -1.0132738680113107e-05, -1.3470558769768104e-05, -3.576214658096433e-05, -0.012970603071153164, -0.0012737740762531757, -8.821448318485636e-06, -0.012167868204414845, -0.07347741723060608, -0.13660910725593567, -0.0011277989251539111, -0.03482101485133171, -0.21014854311943054, -0.0029298022855073214, -0.00093606993323192, -0.019337818026542664, -0.017835358157753944, -0.0003060825983993709, -0.005357906688004732, -0.0010468247346580029, -3.576278118089249e-07, -9.298280929215252e-06, -0.05322880297899246, -0.0009180859779007733, -0.01685180328786373, -1.5497195136049413e-06, -0.35012587904930115, -0.006239577196538448, -0.7032203674316406, -0.00023767507809679955, -0.000835903687402606, -0.00012718822108581662, 0.0, -1.3708974620385561e-05, -9.536738616588991e-07, -0.0004010588163509965, -0.00024244230007752776, -0.0012147198431193829, -0.0012261499650776386, -0.013348261825740337, -0.28124189376831055, -0.0002862997353076935, -4.029192859889008e-05, -0.4722282290458679, -0.0050919135101139545, -0.06725207716226578, -0.07931126654148102, -0.005120733752846718, -0.010358854196965694, -3.477081537246704, -0.12443751841783524, -0.42604997754096985, -0.008231878280639648, -0.002557580592110753, -0.003912652377039194, -0.00496250856667757, -0.00655583618208766, -0.014227972365915775, -0.4466238021850586, -9.202533692587167e-05, -0.00016449528629891574, -0.13261133432388306, 0.0, -1.9073304429184645e-05, -0.008095192722976208, -0.0008164886385202408, -0.008668176829814911, -0.000497336674015969, -0.0004634975048247725, -0.000418575422372669, -0.03995572030544281, -1.1086402082582936e-05, -0.04975558817386627, -0.02219468355178833, -1.7046782886609435e-05, -0.002079706871882081, -0.05846013128757477, -0.03518659994006157, -0.0007917130133137107, -0.09769955277442932, -0.07149799168109894, -0.015228081494569778, -0.0009118927991949022, -0.3089626133441925, -0.00013195598148740828, -0.004536100197583437, -0.02771071344614029, -0.6674864888191223, -0.11691746860742569, -0.0437639057636261, -0.01592547446489334, -0.011836533434689045, -0.01290623378008604, -1.7453546524047852, -0.06284544616937637, -0.01272981520742178, -0.11972516030073166, -0.00765107199549675, -0.007293976843357086, -0.0010421803453937173, -1.661312460899353, -0.00016652150952722877, -1.0609570381348021e-05, -2.0503786799963564e-05, -1.876210331916809, -0.006675798911601305, -0.01840044930577278, -2.5987286790041253e-05, -0.003184131346642971, -0.1589878499507904, -1.0534515380859375, -0.09534206241369247, -0.004144532140344381, -0.5621828436851501, -0.0029420447535812855, -0.9386221766471863, -0.00020275443966966122, -1.7881377516459906e-06, -0.05790216103196144, -0.2576768696308136, -0.00011312322021694854, -0.15944035351276398, -0.5323994159698486, -0.001440678839571774, -0.022771300747990608, -0.15718384087085724, -0.0006082591717131436, -0.000403084559366107, -2.95634672511369e-05, -1.1920928244535389e-07, -0.0005003153928555548, -0.0003411188081372529, -2.3483953555114567e-05, -0.06321973353624344, -0.0004538459761533886, -5.376194530981593e-05, -1.919801950454712, -0.10354606807231903, -0.03611504286527634, -0.5321488380432129, -9.42901024245657e-05, -0.21656247973442078, -0.012243236415088177, -0.01322109717875719, -0.12923599779605865, -0.006035554688423872, -2.527406692504883, -0.20122365653514862, -0.09049024432897568, -0.04437874257564545, -0.31967300176620483, -0.011088063940405846, -1.5962154865264893], "finish_reason": "stop"}], "metrics": {"energy": 726.3253589792249, "energy_per_token": 3.458692185615357, "time": 18.061018, "time_per_token": 0.08600484761904763}}
{"outputs": [{"text": "# Set style\n    sns.set_theme(style=\"white\")\n\n    # Compute the correlation matrix\n    corr = data.corr()\n\n    # Generate a mask for the upper triangle\n    mask = np.zeros_like(corr, dtype=bool)\n    mask[np.triu_indices_from(mask)] = True\n\n    # Set up the matplotlib figure\n    f, ax = plt.subplots(figsize=(11, 9))\n    sns.set_style(style = 'whitegrid')\n\n    # Draw the heatmap. We add labels\n    sns.heatmap(corr, mask=mask, vmax=1.0, square=True, annot=True, cbar = False, annot_kws={\"size\": 16},xticklabels=data.columns,\n                yticklabels=data.columns)\n    plt.title('Correlation Matrix')\n    plt.show()\n    return ax", "tokens": ["#", " Set", " style", "\n", "    ", "s", "ns", ".", "set", "_", "theme", "(", "style", "=", "\"", "white", "\"", ")", "\n", "\n", "    ", "#", " Compute", " the", " correlation", " matrix", "\n", "    ", "corr", " =", " data", ".", "corr", "()", "\n", "\n", "    ", "#", " Generate", " a", " mask", " for", " the", " upper", " triangle", "\n", "    ", "mask", " =", " np", ".", "zeros", "_", "like", "(", "corr", ",", " dtype", "=", "bool", ")", "\n", "    ", "mask", "[", "np", ".", "tri", "u", "_", "indices", "_", "from", "(", "mask", ")]", " =", " True", "\n", "\n", "    ", "#", " Set", " up", " the", " matplotlib", " figure", "\n", "    ", "f", ",", " ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "1", "1", ",", " ", "9", "))", "\n", "    ", "s", "ns", ".", "set", "_", "style", "(", "style", " =", " '", "white", "grid", "')", "\n", "\n", "    ", "#", " Draw", " the", " heat", "map", ".", " We", " add", " labels", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "corr", ",", " mask", "=", "mask", ",", " v", "max", "=", "1", ".", "0", ",", " square", "=", "True", ",", " annot", "=", "True", ",", " c", "bar", " =", " False", ",", " annot", "_", "k", "ws", "=", "{\"", "size", "\":", " ", "1", "6", "}", ",", "xt", "ick", "labels", "=", "data", ".", "columns", ",", "\n", "                ", "yt", "ick", "labels", "=", "data", ".", "columns", ")", "\n", "    ", "plt", ".", "title", "('", "Cor", "relation", " Matrix", "')", "\n", "    ", "plt", ".", "show", "()", "\n", "    ", "return", " ax", "\n", "\n", "def"], "logprobs": [-1.2937016487121582, -3.5509109497070312, -2.8763585090637207, -1.2385462522506714, -0.0024297498166561127, -0.03880014643073082, -4.2437604861333966e-05, -0.00024053541710600257, -0.0008950994815677404, -0.5361814498901367, -1.804866909980774, -0.15567247569561005, -0.0200517475605011, -0.32169201970100403, -0.0003398079425096512, -0.3081977963447571, -0.00761451618745923, -0.016795771196484566, -0.003722169203683734, -0.5202564001083374, -0.0014350840356200933, -0.02350025065243244, -0.3767041265964508, -0.0638294368982315, -0.0031885281205177307, -0.0019282572902739048, -0.01812245137989521, -0.0007960011716932058, -0.1708187460899353, -0.012057513929903507, -0.035016488283872604, -0.002431652508676052, -0.0017102628480643034, -0.003847816027700901, -0.0030385537538677454, -0.019108382984995842, -0.00048458753735758364, -0.013407427817583084, -0.07577314227819443, -0.010007563978433609, -0.12615200877189636, -0.0002668739762157202, -0.00044228785554878414, -0.009426135569810867, -0.01288869883865118, -0.012901173904538155, -0.0008156548719853163, -0.025576788932085037, -0.0001915509783430025, -0.002301902510225773, -3.2186455882765586e-06, -0.10986808687448502, -1.490105023549404e-05, -2.145764938177308e-06, -6.9141146923357155e-06, -0.0006856950931251049, -0.0002734287118073553, -3.099436753473128e-06, -0.0029620127752423286, -0.049970049411058426, -2.169585604860913e-05, -0.0005333193112164736, -0.0003955773718189448, -0.0002748588449321687, -2.50339189733495e-06, -3.671578815556131e-05, 0.0, -0.00011181206355104223, -2.8371408916427754e-05, -8.344646857949556e-07, -1.9311717551317997e-05, -0.0008074360666796565, -4.410734163684538e-06, -1.3589766240329482e-05, -0.0005060345865786076, -0.0007281036232598126, -6.9141146923357155e-06, -9.154854342341423e-05, -0.0021319296211004257, -0.0032234634272754192, -0.00028153270250186324, -0.0027805021964013577, -0.008016436360776424, -0.003638435387983918, -0.00023779425828251988, -0.04455217346549034, -0.0002814135223161429, -0.0019506252137944102, -0.004132185596972704, -0.09741030633449554, -0.00048029806930571795, -0.0002885640424210578, -0.0005435658385977149, -0.0004612335760612041, -2.50339189733495e-06, -9.894321920000948e-06, -1.2993727978027891e-05, -0.01745704747736454, -7.855583680793643e-05, 0.0, -0.0012711548479273915, -0.016276687383651733, -0.05749988183379173, -0.00010215714428341016, -0.0004223884898237884, -0.024230998009443283, -0.0019658540841192007, -0.00033182359766215086, -1.4550975561141968, -0.36708611249923706, -4.8040190449682996e-05, -0.0047876485623419285, -0.13989055156707764, -0.15386418998241425, -0.21674014627933502, -0.07753433287143707, -0.20355229079723358, -0.47768667340278625, -0.12836676836013794, -0.001854725182056427, -0.3398982882499695, -2.9205850296420977e-05, -0.0021707084961235523, -0.0539134182035923, -0.0009411911014467478, -0.0005751386051997542, -0.6450564861297607, -0.0011266082292422652, -0.00212848000228405, -4.410734163684538e-06, -0.5957050323486328, -0.45262226462364197, -0.006679706275463104, -1.4265985488891602, -0.11108536273241043, -0.004752174485474825, -0.06912011653184891, -8.892617915989831e-05, -0.0030891813803464174, -0.0012387705501168966, -8.344646857949556e-07, -3.731181277544238e-05, -0.01580638252198696, -0.0006195771275088191, -0.020824480801820755, -0.2961317300796509, -0.00012540031457319856, -0.0018331881146878004, -0.015765195712447166, -0.053751204162836075, -0.0009261847590096295, -0.05083071440458298, -0.038909997791051865, -0.003136241575703025, -0.0003003622987307608, -0.017380312085151672, -0.02659301459789276, -0.00036137725692242384, -0.007655567489564419, -0.048878785222768784, -0.18474704027175903, -0.009189571253955364, -0.32321447134017944, -0.5922915935516357, -0.4151417911052704, -2.1503188610076904, -0.41689181327819824, -0.5947816371917725, -0.2413269728422165, -2.7179348762729205e-05, -1.2874520507466514e-05, -4.494089080253616e-05, -0.019619571045041084, -0.001807366730645299, -0.004432139918208122, -4.291525328881107e-06, -0.0011036264477297664, -0.3987657129764557, -0.3896639347076416, -0.2808903455734253, -0.03483045473694801, -3.067136764526367, -1.1324817933200393e-05, -7.152531907195225e-06, -0.030266141518950462, -1.1871296167373657, -0.0008536509121768177, -0.0005053196800872684, -0.38549506664276123, -0.3788529634475708, -0.25900375843048096, -0.07458566874265671, -0.000613143783994019, 0.0, -0.011604310013353825, -0.0015161458868533373, -0.00011860620725201443, -2.586808113846928e-05, -0.22063730657100677, -0.08697294443845749, -0.26450860500335693, -0.4656640291213989, -3.2543604902457446e-05, -0.07725045084953308, -0.06533811241388321, -0.0032181162387132645, -0.0005677518784068525, -0.0019455092260614038, -0.20922988653182983, -0.007555125281214714, -0.1866474747657776, -0.6957903504371643, -6.663577369181439e-05, -0.1500796228647232, -0.017855968326330185, -0.047674037516117096, -0.28952309489250183, -0.050203509628772736, -0.05073089152574539, -0.1790882796049118, -0.04271233454346657, -1.4969477653503418], "finish_reason": "stop"}], "metrics": {"energy": 762.044393290519, "energy_per_token": 3.432632402209545, "time": 19.296295, "time_per_token": 0.08692024774774774}}
{"outputs": [{"text": "# Create a correlation matrix\n    corr = data.corr()\n\n    # Generate a custom diverging colormap\n    cmap = sns.diverging_palette(220, 10, as_cmap=True)\n\n    # Draw the heatmap using seaborn\n    sns.set()\n    ax = sns.heatmap(corr, cmap=cmap, annot=True, fmt=\".2f\")\n\n    # Add a title to the heatmap\n    ax.set_title(\"Correlation Matrix\")\n\n    return ax", "tokens": ["#", " Create", " a", " correlation", " matrix", "\n", "    ", "corr", " =", " data", ".", "corr", "()", "\n", "\n", "    ", "#", " Generate", " a", " custom", " diver", "ging", " col", "orm", "ap", "\n", "    ", "cm", "ap", " =", " s", "ns", ".", "d", "iver", "ging", "_", "pal", "ette", "(", "2", "2", "0", ",", " ", "1", "0", ",", " as", "_", "cm", "ap", "=", "True", ")", "\n", "\n", "    ", "#", " Draw", " the", " heat", "map", " using", " se", "ab", "orn", "\n", "    ", "s", "ns", ".", "set", "()", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "corr", ",", " c", "map", "=", "cm", "ap", ",", " annot", "=", "True", ",", " fmt", "=", "\"", ".", "2", "f", "\"", ")", "\n", "\n", "    ", "#", " Add", " a", " title", " to", " the", " heat", "map", "\n", "    ", "ax", ".", "set", "_", "title", "(", "\"", "Cor", "relation", " Matrix", "\"", ")", "\n", "\n", "    ", "return", " ax", "\n", "\n", "if"], "logprobs": [-1.2937016487121582, -1.6959398984909058, -0.40710145235061646, -0.07911843061447144, -0.0023371067363768816, -0.35776710510253906, -0.0018346159486100078, -0.1773235946893692, -0.3011947274208069, -0.05439120531082153, -0.0025078770704567432, -0.001760838902555406, -0.002012015553191304, -0.0033812513574957848, -0.2084263563156128, -0.001423775334842503, -0.005276443902403116, -0.7903733253479004, -0.013833715580403805, -1.86703360080719, -0.02007371373474598, -0.0019091013818979263, -0.0008806879632174969, -7.152555099310121e-07, -2.3841855067985307e-07, -0.21571935713291168, -0.0016404041089117527, -0.02670537307858467, -5.722029527532868e-06, -0.001190906623378396, -8.189342770492658e-05, 0.0, -5.245195097813848e-06, -0.005050164181739092, -1.3351351299206726e-05, -7.688703772146255e-05, 0.0, -0.002119558397680521, -1.0728830375228426e-06, -0.0004689785710070282, -0.04330315813422203, -0.07960601150989532, -0.00021300431399140507, -8.821448318485636e-06, -0.005657612346112728, -0.17058247327804565, -0.0011404207907617092, -4.529942543740617e-06, -0.00032395837479270995, 0.0, -0.00015960850578267127, -6.8662193370983e-05, -0.0009831124916672707, -9.369411418447271e-05, -0.004262885078787804, -0.0007569308509118855, -0.008914552628993988, -0.00039402826223522425, -0.008263563737273216, -0.10551204532384872, -0.056662850081920624, -0.0053439149633049965, -5.602679812000133e-05, -0.5804001092910767, -0.043980568647384644, -0.00019643761334009469, -3.576272320060525e-06, -0.018309392035007477, -0.0005999195855110884, -1.4367284774780273, -0.0002307625545654446, -0.00114125432446599, -0.10698883980512619, -1.8933460712432861, -0.06087523698806763, -0.023873955011367798, -0.19646933674812317, -0.004469405394047499, -0.0011817384511232376, -2.3841855067985307e-07, -1.8596476365928538e-05, -0.0002330270071979612, -2.3841855067985307e-07, -3.0278701160568744e-05, -0.011169643141329288, -8.451581379631534e-05, -0.22970092296600342, -0.00017736769223120064, -0.002358514117076993, -0.001329015358351171, -5.960462772236497e-07, -0.01741897314786911, -0.6838740110397339, -0.008989930152893066, -0.017142459750175476, -0.37598133087158203, -0.4035288691520691, -0.37442487478256226, -0.006944093853235245, -0.02389502339065075, -0.06337986141443253, -0.015307915396988392, -1.597391747054644e-05, -1.5021297931671143, -0.03986717760562897, -0.4919204115867615, -0.0013248485047370195, -0.031939659267663956, -0.9081189632415771, -1.053053379058838, -0.024741899222135544, -1.0515862703323364, -0.001505790394730866, -0.18694357573986053, -0.001209600013680756, -0.009009305387735367, -0.0004172646440565586, -0.03032928705215454, -0.0010194348869845271, -0.007432428188621998, -0.006047522183507681, -0.0020061859395354986, -1.2544960975646973, -0.004436412826180458, -0.0017064546700567007, -0.0001174142598756589, -0.0012885371688753366, -0.0018982740584760904, -0.15294307470321655, -0.0017102628480643034, -0.05695714056491852, -0.0010022860951721668, -0.23549598455429077, -0.002147988649085164, -0.37570667266845703, -0.008947161957621574, -1.496760368347168], "finish_reason": "stop"}], "metrics": {"energy": 459.6418535718917, "energy_per_token": 3.3550500260722025, "time": 11.499061, "time_per_token": 0.08393475182481751}}
{"outputs": [{"text": "# Your solution here\n    df=pd.DataFrame(data)\n    cor=df.corr()\n    ax=sns.heatmap(cor,annot=True,cmap=sns.color_palette('Blues'))\n    ax.set_title('Correlation Matrix')\n    return ax", "tokens": ["#", " Your", " solution", " here", "\n", "    ", "df", "=", "pd", ".", "DataFrame", "(", "data", ")", "\n", "    ", "cor", "=", "df", ".", "corr", "()", "\n", "    ", "ax", "=", "s", "ns", ".", "heat", "map", "(", "cor", ",", "annot", "=", "True", ",", "cm", "ap", "=", "s", "ns", ".", "color", "_", "pal", "ette", "('", "Bl", "ues", "'))", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Cor", "relation", " Matrix", "')", "\n", "    ", "return", " ax", "\n", "\n", "#"], "logprobs": [-1.2937016487121582, -3.4227123260498047, -2.0283989906311035, -0.14304803311824799, -0.05818304046988487, -0.21585942804813385, -3.2056238651275635, -2.8787059783935547, -0.139097660779953, -0.00026854246971197426, -0.005912789609283209, -0.011485997587442398, -0.004397721495479345, -0.04016221687197685, -0.015287135727703571, -0.041029416024684906, -2.247438430786133, -2.0116405487060547, -0.03707559034228325, -0.0020557953976094723, -0.002074115676805377, -0.027316167950630188, -0.03138656169176102, -0.034933604300022125, -0.5306544899940491, -0.4137030839920044, -0.05337539315223694, -9.894321920000948e-06, -6.69933797325939e-05, -0.0006675875629298389, -7.83174327807501e-05, -0.0007834940915927291, -0.027021724730730057, -1.3981860876083374, -0.5184562802314758, -0.008417130447924137, -0.02080661803483963, -1.5545936822891235, -1.8154606819152832, -8.940656698541716e-06, -0.11577353626489639, -0.6456753015518188, -4.768370445162873e-07, -9.881961887003854e-05, -0.152288019657135, -9.536738616588991e-07, -0.0008185135084204376, -9.894321920000948e-06, -1.014241337776184, -1.8532506227493286, -0.0002740246127359569, -0.494865357875824, -0.05321343243122101, -0.019790804013609886, -0.2296943962574005, -0.011638362891972065, -0.0557301864027977, -0.05946091189980507, -0.0095948725938797, -0.06353078782558441, -0.014424807392060757, -0.0034698774106800556, -0.023353291675448418, -0.10451069474220276, -0.006459073629230261, -0.07456265389919281, -0.07679174840450287, -0.015835247933864594, -0.27715662121772766, -0.12254524230957031, -1.3368760347366333], "finish_reason": "stop"}], "metrics": {"energy": 233.8270044975281, "energy_per_token": 3.2933380915144803, "time": 5.9675713, "time_per_token": 0.08405030000000001}}
{"outputs": [{"text": "sns.set(font_scale=1.1)\n    ax = sns.heatmap(data, annot=True)\n    plt.title('Correlation Matrix')\n    plt.tight_layout()\n\n    return ax", "tokens": ["s", "ns", ".", "set", "(", "font", "_", "scale", "=", "1", ".", "1", ")", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "data", ",", " annot", "=", "True", ")", "\n", "    ", "plt", ".", "title", "('", "Cor", "relation", " Matrix", "')", "\n", "    ", "plt", ".", "tight", "_", "layout", "()", "\n", "\n", "    ", "return", " ax", "\n", "\n", "def"], "logprobs": [-2.361544132232666, -0.0022075825836509466, -0.0021114691626280546, -0.064484141767025, -0.37468650937080383, -0.7514786720275879, -0.002966410480439663, -0.00012778419477399439, -0.030892565846443176, -0.23157566785812378, -0.15926073491573334, -2.8596582412719727, -0.09323684871196747, -0.09862003475427628, -0.04343272000551224, -1.7518850564956665, -0.02228527143597603, -0.01602531410753727, -1.5497195136049413e-06, -0.00012492353562265635, -0.00021824838768225163, -2.3841855067985307e-07, -0.0013818725710734725, -0.3732094466686249, -1.4735115766525269, -0.28082284331321716, -0.011337615549564362, -0.010118970647454262, -2.2714226245880127, -0.060788415372371674, -0.01113427709788084, -2.6279640197753906, -0.0011793570592999458, -0.10856955498456955, -0.21409288048744202, -0.007169708609580994, -0.0014430596493184566, -0.004235702101141214, -0.1619795560836792, -0.002949295099824667, -0.06737567484378815, -1.1379756927490234, -8.260862523457035e-05, -2.3005919456481934, -0.0012247211998328567, -3.576272320060525e-06, -0.011000935919582844, -0.011191805824637413, -2.5748865604400635, -0.0686095803976059, -0.04460746794939041, -0.020257720723748207, -0.279667466878891, -0.009110191836953163, -1.110355257987976], "finish_reason": "stop"}], "metrics": {"energy": 209.17170523452754, "energy_per_token": 3.8031219133550462, "time": 4.4257665, "time_per_token": 0.08046848181818182}}
{"outputs": [{"text": "# calculate the correlation matrix\n    corr_matrix = data.corr()\n    # create a mask for the upper triangle\n    mask = np.triu(np.ones_like(corr_matrix, dtype=bool))\n    # create the heatmap\n    ax = sns.heatmap(corr_matrix, mask=mask, annot=True, cmap='coolwarm')\n    # set the title\n    ax.set_title('Correlation Matrix')\n    # return the Axes object\n    return ax", "tokens": ["#", " calculate", " the", " correlation", " matrix", "\n", "    ", "corr", "_", "matrix", " =", " data", ".", "corr", "()", "\n", "    ", "#", " create", " a", " mask", " for", " the", " upper", " triangle", "\n", "    ", "mask", " =", " np", ".", "tri", "u", "(", "np", ".", "ones", "_", "like", "(", "corr", "_", "matrix", ",", " dtype", "=", "bool", "))", "\n", "    ", "#", " create", " the", " heat", "map", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "corr", "_", "matrix", ",", " mask", "=", "mask", ",", " annot", "=", "True", ",", " c", "map", "='", "cool", "warm", "')", "\n", "    ", "#", " set", " the", " title", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Cor", "relation", " Matrix", "')", "\n", "    ", "#", " return", " the", " Ax", "es", " object", "\n", "    ", "return", " ax", "\n", "\n", "#"], "logprobs": [-1.2937016487121582, -4.186279296875, -0.4862651228904724, -0.01939581148326397, -0.028975635766983032, -0.1603470891714096, -0.0018897071713581681, -0.17878606915473938, -2.0195376873016357, -0.06291160732507706, -0.0007252446957863867, -0.06407779455184937, -0.0023215266410261393, -0.004421577323228121, -0.009454122744500637, -0.00825351383537054, -1.4356887340545654, -0.06118578463792801, -0.7887899279594421, -0.7294780015945435, -2.086343288421631, -0.20693954825401306, -0.09004966169595718, -0.061348143965005875, -0.032314494252204895, -0.6450157165527344, -0.0014909114688634872, -0.02206665650010109, -0.0007812308613210917, -0.0012686545960605145, -8.821448318485636e-06, -1.6491729021072388, -0.0007167869480326772, -0.009697943925857544, -0.0011026738211512566, -1.4305104514278355e-06, -5.006777428206988e-06, -0.0015387610765174031, -1.0728830375228426e-06, -1.6689160474925302e-05, -0.0012467476772144437, -0.00022301571152638644, -1.4305104514278355e-06, -0.008130074478685856, -0.0005068686441518366, -0.020448818802833557, -0.028698477894067764, -0.006323922425508499, -0.0009345216676592827, -0.06776386499404907, -0.0056566642597317696, -0.40683475136756897, -0.9682450294494629, -0.029520349577069283, -0.0009833505610004067, -0.36765313148498535, -0.00043990471749566495, -0.8319675326347351, -0.009411846287548542, -0.003184487810358405, -5.960462772236497e-07, -7.033323527139146e-06, -5.2689116273541003e-05, -2.50339189733495e-06, -2.658331868587993e-05, -0.006216949317604303, -2.825220326485578e-05, -1.5497195136049413e-06, -0.0004580163804348558, -0.031933195888996124, -0.0013312773080542684, -9.762764238985255e-05, -0.0037944952491670847, -0.8531805276870728, -0.002287511248141527, -0.014954601414501667, -0.10193876177072525, -0.5105235576629639, -0.049432847648859024, -0.5189695358276367, -0.19857676327228546, -0.0008662762120366096, -0.8628224730491638, -0.005292096640914679, -0.018702708184719086, -0.13500724732875824, -0.21984881162643433, -0.044849593192338943, -0.04125124588608742, -0.28445979952812195, -0.00033885458833537996, -0.02440737746655941, -0.0008139872807078063, -0.002965340856462717, -0.004372322466224432, -0.0002698534226510674, -0.04924437403678894, -0.0011399445356801152, -0.00011562632425921038, -0.0008802115335129201, -0.020088903605937958, -0.0011091040214523673, -0.09233389049768448, -0.5667456984519958, -0.34866976737976074, -0.0030953611712902784, -0.5053589344024658, -0.0009197533945553005, -0.005050282925367355, -0.09557805955410004, -0.0016286217141896486, -0.004317724145948887, -0.002829835517331958, -0.49610635638237, -0.0374915637075901, -1.27389395236969], "finish_reason": "stop"}], "metrics": {"energy": 422.52101448631277, "energy_per_token": 3.64242253867511, "time": 9.894492, "time_per_token": 0.0852973448275862}}
{"outputs": [{"text": "df = pd.DataFrame(data)\n    sns.heatmap(df.corr(), annot=True, cmap='coolwarm')\n    plt.title('Correlation Matrix')\n    ax = plt.gca()\n    return ax", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "data", ")", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "df", ".", "corr", "()", ",", " annot", "=", "True", ",", " c", "map", "='", "cool", "warm", "')", "\n", "    ", "plt", ".", "title", "('", "Cor", "relation", " Matrix", "')", "\n", "    ", "ax", " =", " plt", ".", "g", "ca", "()", "\n", "    ", "return", " ax", "\n", "\n", "#"], "logprobs": [-1.8336644172668457, -0.043012358248233795, -0.041784629225730896, -0.00019941726350225508, -0.0017911833710968494, -0.012939301319420338, -0.0026295154821127653, -0.03188319876790047, -0.022673647850751877, -0.1140671968460083, -2.208174705505371, -0.0026148909237235785, -0.003990307915955782, -2.4506995677948, -7.259582343976945e-05, -0.0004948345012962818, -0.07171516120433807, -0.004299800843000412, -0.0023765910882502794, -0.02498597651720047, -0.002626899629831314, -0.1773332804441452, -0.021448912099003792, -0.008843068964779377, -0.5635913014411926, -0.2894413471221924, -0.004236889071762562, -0.19130487740039825, -0.18782897293567657, -0.0018693606834858656, -0.23314358294010162, -0.011107869446277618, -0.04179343208670616, -0.33488401770591736, -0.00034707720624282956, -0.032305724918842316, -0.051821269094944, -0.001682177186012268, -0.00036542891757562757, -0.001500314916484058, -0.01972336694598198, -0.011941964738070965, -0.08780519664287567, -2.275282144546509, -0.025141995400190353, -0.012233580462634563, -0.0018648391123861074, -0.07205341756343842, -0.016756383702158928, -0.0009107018122449517, -0.6525158286094666, -0.14429134130477905, -0.18693387508392334, -0.0022978587076067924, -0.22691792249679565, -0.015041738748550415, -1.9332293272018433], "finish_reason": "stop"}], "metrics": {"energy": 210.88111637115472, "energy_per_token": 3.699668708265872, "time": 4.6404963, "time_per_token": 0.08141221578947368}}
{"outputs": [{"text": "df = pd.DataFrame(data)\n    # Get the correlation matrix\n    corr = df.corr()\n\n    # Create the heatmap\n    ax = sns.heatmap(corr, annot=True, cmap='coolwarm', fmt='.2f')\n\n    # Add title\n    ax.set_title('Correlation Matrix')\n\n    # Display the heatmap\n    return ax", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "data", ")", "\n", "    ", "#", " Get", " the", " correlation", " matrix", "\n", "    ", "corr", " =", " df", ".", "corr", "()", "\n", "\n", "    ", "#", " Create", " the", " heat", "map", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "corr", ",", " annot", "=", "True", ",", " c", "map", "='", "cool", "warm", "'", ",", " fmt", "='", ".", "2", "f", "')", "\n", "\n", "    ", "#", " Add", " title", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Cor", "relation", " Matrix", "')", "\n", "\n", "    ", "#", " Display", " the", " heat", "map", "\n", "    ", "return", " ax", "\n", "\n", "if"], "logprobs": [-1.8336644172668457, -0.043012358248233795, -0.041784629225730896, -0.00019941726350225508, -0.0017911833710968494, -0.012939301319420338, -0.0026295154821127653, -0.03188319876790047, -0.022673647850751877, -0.1140671968460083, -1.7299453020095825, -4.097070217132568, -0.22180016338825226, -0.24704667925834656, -0.17672857642173767, -0.28661444783210754, -0.0013036570744588971, -0.13418784737586975, -0.33030202984809875, -0.0013079430209472775, -0.0003513672563713044, -0.005085746292024851, -0.005554242990911007, -0.0075761848129332066, -0.8673061728477478, -0.0013187768636271358, -0.01185514684766531, -1.818660020828247, -0.5425112247467041, -0.09048403799533844, -0.000945240433793515, -0.6367721557617188, -0.0005663221818394959, -0.30603429675102234, -0.0022018731106072664, -0.0016242180718109012, -5.125986263010418e-06, -4.0531076592742465e-06, -9.381330892210826e-05, -4.768370445162873e-07, -4.2199197196168825e-05, -0.007918277755379677, -0.046482063829898834, -0.046575598418712616, -0.004475220572203398, -0.004669001325964928, -0.31714504957199097, -0.06916305422782898, -0.002017725957557559, -0.21494649350643158, -0.2070947140455246, -0.0003197873884346336, -1.853746771812439, -0.0010080024367198348, -0.15305672585964203, -0.1079016774892807, -0.02739759534597397, -0.013548092916607857, -0.01133525837212801, -0.2441994547843933, -0.006773724220693111, -0.5613703727722168, -0.0007700338610447943, -0.025626404210925102, -1.586281657218933, -0.39009031653404236, -0.07589635252952576, -0.00040558696491643786, -0.014892004430294037, -0.0008023141999728978, -0.0009809688199311495, -0.002505142241716385, -0.0002431573811918497, -0.04580258950591087, -0.0004892344586551189, -7.10462118149735e-05, -0.0005289109540171921, -0.04409315809607506, -0.0007979070069268346, -0.047137875109910965, -0.0010125277331098914, -1.7714616060256958, -1.750370979309082, -0.11661145091056824, -0.55340975522995, -0.0010596857173368335, -0.04965236783027649, -0.007966175675392151, -0.780093252658844, -0.011879178695380688, -0.3954850137233734, -0.016572551801800728, -1.2480825185775757], "finish_reason": "stop"}], "metrics": {"energy": 320.6561670455932, "energy_per_token": 3.4479157746837976, "time": 7.792505, "time_per_token": 0.08379037634408602}}
{"outputs": [{"text": "df = pd.DataFrame(data)\n\n    # Calculate correlation matrix\n    corr = df.corr()\n\n    # Set plot size\n    sns.set(rc={'figure.figsize': (8, 8)})\n\n    # Generate a mask for the upper triangle\n    mask = np.zeros_like(corr, dtype=bool)\n    mask[np.triu_indices_from(mask)] = True\n\n    # Set up the matplotlib figure\n    f, ax = plt.subplots(figsize=(11, 9))\n\n    # Generate a custom diverging colormap as green-white-red\n    cmap = sns.diverging_palette(220, 10, as_cmap=True)\n\n    # Draw the heatmap with the mask and correct aspect ratio\n    sns.heatmap(corr, mask=mask, cmap=cmap, vmax=1.0, vmin=-1.0, center=0,\n                square=True, linewidths=0.5, cbar_kws={'shrink': .5})\n\n    #", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "data", ")", "\n", "\n", "    ", "#", " Calculate", " correlation", " matrix", "\n", "    ", "corr", " =", " df", ".", "corr", "()", "\n", "\n", "    ", "#", " Set", " plot", " size", "\n", "    ", "s", "ns", ".", "set", "(", "rc", "={", "'", "figure", ".", "fig", "size", "':", " (", "8", ",", " ", "8", ")})", "\n", "\n", "    ", "#", " Generate", " a", " mask", " for", " the", " upper", " triangle", "\n", "    ", "mask", " =", " np", ".", "zeros", "_", "like", "(", "corr", ",", " dtype", "=", "bool", ")", "\n", "    ", "mask", "[", "np", ".", "tri", "u", "_", "indices", "_", "from", "(", "mask", ")]", " =", " True", "\n", "\n", "    ", "#", " Set", " up", " the", " matplotlib", " figure", "\n", "    ", "f", ",", " ax", " =", " plt", ".", "sub", "plots", "(", "fig", "size", "=(", "1", "1", ",", " ", "9", "))", "\n", "\n", "    ", "#", " Generate", " a", " custom", " diver", "ging", " col", "orm", "ap", " as", " green", "-", "white", "-", "red", "\n", "    ", "cm", "ap", " =", " s", "ns", ".", "d", "iver", "ging", "_", "pal", "ette", "(", "2", "2", "0", ",", " ", "1", "0", ",", " as", "_", "cm", "ap", "=", "True", ")", "\n", "\n", "    ", "#", " Draw", " the", " heat", "map", " with", " the", " mask", " and", " correct", " aspect", " ratio", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "corr", ",", " mask", "=", "mask", ",", " c", "map", "=", "cm", "ap", ",", " v", "max", "=", "1", ".", "0", ",", " v", "min", "=-", "1", ".", "0", ",", " center", "=", "0", ",", "\n", "                ", "square", "=", "True", ",", " linewidth", "s", "=", "0", ".", "5", ",", " c", "bar", "_", "k", "ws", "={", "'", "sh", "rink", "':", " ", ".", "5", "})", "\n", "\n", "    ", "#"], "logprobs": [-1.8336644172668457, -0.043012358248233795, -0.041784629225730896, -0.00019941726350225508, -0.0017911833710968494, -0.012939301319420338, -0.0026295154821127653, -0.03188319876790047, -0.022673647850751877, -2.23272705078125, -0.0037644491530954838, -0.47243309020996094, -1.1732770204544067, -1.7756062746047974, -0.10330398380756378, -0.029748333618044853, -0.0007027302053757012, -0.043743595480918884, -0.11506019532680511, -0.0012413900112733245, -0.0006895071710459888, -0.001557805109769106, -0.004740547388792038, -0.0050297630950808525, -0.029643027111887932, -0.0007827793597243726, -0.007969249971210957, -1.1396312713623047, -2.397355079650879, -2.568477153778076, -0.27227044105529785, -0.0009192770230583847, -0.08144454658031464, -9.894321920000948e-06, -4.95898348162882e-05, -6.282132380874828e-05, -0.006826294120401144, -0.009031161665916443, -0.028522158041596413, -0.0021378775127232075, -9.536738616588991e-07, -1.6569954823353328e-05, -0.0001311216183239594, -1.847726889536716e-05, -0.00015531764074694365, -0.2615439295768738, -1.0508067607879639, -0.007465677335858345, -0.007020685356110334, -0.6515161395072937, -0.0017037175130099058, -0.0026984727010130882, -0.012945774011313915, -0.0004447901446837932, -0.005264467094093561, -1.7119219303131104, -0.15285703539848328, -0.29237228631973267, -0.0013312773080542684, -0.004172073677182198, -0.11080743372440338, -0.01874985732138157, -0.062161996960639954, -0.00035696811391972005, -0.0032007675617933273, -0.00020752183627337217, -0.0004960260121151805, -4.768370445162873e-07, -0.12027589976787567, -9.65590606938349e-06, -7.152555099310121e-07, -6.318072337307967e-06, -0.0002449450839776546, -0.000697965151630342, -3.933898824470816e-06, -0.0025348695926368237, -0.10700009018182755, -1.156323378381785e-05, -0.00027783826226368546, -0.00016544880054425448, -0.0002618685248307884, -8.702239938429557e-06, -9.059865078597795e-06, 0.0, -0.00020895205670967698, -3.325883881188929e-05, -5.960462772236497e-07, -1.811964830267243e-05, -0.00020561488054227084, -3.933898824470816e-06, -1.3589766240329482e-05, -0.0010003806091845036, -0.002581717912107706, -4.410734163684538e-06, -4.8993817472364753e-05, -0.0009317824151366949, -0.0014912686310708523, -0.00015186110977083445, -0.0007615765207447112, -0.23450832068920135, -1.1330629587173462, -0.002996124094352126, -0.03011762909591198, -0.001944795367307961, -0.0029879233334213495, -0.0024883756414055824, -0.4731047451496124, -0.000727627135347575, -0.00013457823661156, -0.00047386385267600417, -0.00040356122190132737, -6.794906312279636e-06, -2.145764938177308e-06, -1.2874520507466514e-05, -0.5141062140464783, -0.0006949870148673654, 0.0, -0.000763244170229882, -0.02541828155517578, -0.0658452957868576, -0.00016008525562938303, -0.0001726001501083374, -0.04221933335065842, -0.0012276978231966496, -0.00016175392374861985, -0.13782387971878052, -0.00015352977789007127, -0.001190549461171031, -0.1541648507118225, -0.00662073353305459, -0.010094424709677696, -0.21279315650463104, -0.00010752100206445903, -3.433168603805825e-05, -2.861018856492592e-06, -1.1920928244535389e-07, -0.586020290851593, -0.7336604595184326, -1.5676727294921875, -1.0571668148040771, -0.0006087357178330421, -0.004609435331076384, -0.11397337913513184, -0.0009141556802205741, -0.016183441504836082, -5.483612312673358e-06, -0.0008796160109341145, -0.00010311071673640981, -1.1920928244535389e-07, -7.629365427419543e-06, -0.02505864016711712, -1.4424220353248529e-05, -0.00022897482267580926, 0.0, -0.0005759726045653224, -7.152555099310121e-07, -0.00036399890086613595, -0.09929101169109344, -0.27359265089035034, -0.0008167268824763596, -8.248942322097719e-05, -0.0010484919184818864, -0.08635871112346649, -0.008197471499443054, -0.0001262346631847322, -0.00028725311858579516, 0.0, -0.0007597897201776505, -2.861018856492592e-06, -3.8742269680369645e-05, -5.876845170860179e-05, -0.011337379924952984, -0.0008773530134931207, -0.0061951507814228535, -7.986703712958843e-05, -0.001214600750245154, -0.0028329261112958193, -0.0023801589850336313, -0.0006889115320518613, -2.861018856492592e-06, -0.0011842388194054365, -0.00014494798961095512, -0.009392833337187767, -0.0032600611448287964, -0.03749753534793854, -0.0033460839185863733, -0.0003773453936446458, -0.00010787858627736568, -0.0006591292913071811, -0.06229843199253082, -9.583967766957358e-05, -0.0005596501869149506, -0.004388938657939434, -7.152555099310121e-07, -2.0146166207268834e-05, -0.06655333936214447, -0.0007489498239010572, -0.017191674560308456, -3.6954195820726454e-05, -0.00011503035057103261, -8.129743218887597e-05, -0.007183556444942951, -2.0265373677830212e-05, -0.0009994279826059937, -0.0029034148901700974, -3.576278118089249e-07, -8.427741704508662e-05, -0.014184016734361649, -0.09024683386087418, -6.3774932641536e-05, -0.02075722999870777, -0.2753071188926697, -0.03025422804057598, -0.00017724849749356508, -0.20204390585422516, -3.099436753473128e-06, -0.0024365282151848078, -0.0004897110629826784, -0.004268582910299301, -0.00047505536349490285, -3.9934315282152966e-05, -1.013871192932129, -8.356221951544285e-05, -0.0003638797497842461, -0.003170347074046731, -0.021220777183771133, -0.020852968096733093, -0.04132639989256859, -2.622600959512056e-06, -0.0012066233903169632, -0.0006260104128159583, -0.0006330393371172249, -7.509902934543788e-05, -4.2676016164477915e-05, -0.6662635207176208, -0.027153411880135536, -0.11988198757171631, -0.044892337173223495, -0.0029916076455265284, -4.768370445162873e-07, -0.00026925752172246575, -0.10491253435611725, -0.0001802282058633864, -1.6538867950439453, -0.00042000532266683877, -0.00011097769311163574, -0.00015841660206206143, -1.9073304429184645e-05, -0.00028355870745144784, -2.055586576461792, -0.20218630135059357, -0.09481102228164673, -0.02363182045519352, -0.31368163228034973, -0.0018152202246710658, -0.27736416459083557], "finish_reason": "length"}], "metrics": {"energy": 876.7170243015296, "energy_per_token": 3.42467587617785, "time": 22.268694, "time_per_token": 0.0869870859375}}
{"outputs": [{"text": "corrmat = data.corr()\n    top = corrmat.index\n    plt.figure(figsize=(10, 7))\n    # Draw the heatmap using seaborn\n    sns.heatmap(corrmat, annot=True)\n    plt.xticks(rotation=90)\n    plt.yticks(rotation=0)\n    plt.title('Correlation Matrix')\n    plt.show()\n\n    return plt.gca()", "tokens": ["cor", "rm", "at", " =", " data", ".", "corr", "()", "\n", "    ", "top", " =", " cor", "rm", "at", ".", "index", "\n", "    ", "plt", ".", "figure", "(", "fig", "size", "=(", "1", "0", ",", " ", "7", "))", "\n", "    ", "#", " Draw", " the", " heat", "map", " using", " se", "ab", "orn", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "cor", "rm", "at", ",", " annot", "=", "True", ")", "\n", "    ", "plt", ".", "xt", "icks", "(", "rotation", "=", "9", "0", ")", "\n", "    ", "plt", ".", "yt", "icks", "(", "rotation", "=", "0", ")", "\n", "    ", "plt", ".", "title", "('", "Cor", "relation", " Matrix", "')", "\n", "    ", "plt", ".", "show", "()", "\n", "\n", "    ", "return", " plt", ".", "g", "ca", "()", "\n", "\n", "def"], "logprobs": [-3.710218906402588, -1.0076889991760254, -0.12380638718605042, -0.00888324249535799, -0.07388683408498764, -0.0025178655050694942, -0.0010889797704294324, -0.011608551256358624, -0.011503202840685844, -0.021588800475001335, -2.239917755126953, -0.16455934941768646, -0.0009708458674140275, -0.0002783149539027363, -1.311301275563892e-06, -0.0009221353684552014, -0.10656918585300446, -0.01388332899659872, -0.012212383560836315, -0.6899318695068359, -0.0007675323868170381, -0.058609217405319214, -0.011513455770909786, -0.0001984637783607468, -1.490105023549404e-05, -0.06844238936901093, -0.1328357756137848, -0.06119666248559952, -0.0004769618099089712, -0.3049025237560272, -2.667635202407837, -0.0297038983553648, -0.0032743194606155157, -0.04147954657673836, -0.2588050067424774, -2.755068778991699, -0.007179532665759325, -0.0220892783254385, -8.606540359323844e-05, -1.6766228675842285, -0.007844120264053345, -0.0016106502152979374, -2.276871418871451e-05, -0.021826066076755524, -0.0010374169796705246, -0.2599048614501953, -0.00013398226292338222, -0.0004857790481764823, -0.006440004333853722, -4.529942543740617e-06, -0.00012063252506777644, -0.06426540017127991, -1.168244216387393e-05, -7.152555099310121e-07, -0.010899178683757782, -0.16429519653320312, -0.0131021523848176, -0.009109601378440857, -0.8653826713562012, -0.00810843612998724, -0.002115394687280059, -0.010600567795336246, -1.6212332411669195e-05, -0.1965988129377365, -0.00010680581908673048, -0.0007787294453009963, -0.03736697509884834, -0.018469849601387978, -0.43545231223106384, -1.3828182090946939e-05, -0.10205987095832825, -0.0076469313353300095, -0.0017971331253647804, -0.0050606015138328075, -1.3112935448589269e-05, -0.6070465445518494, -7.867782187531702e-06, -0.0026223815511912107, -0.00043585337698459625, -0.0003951007383875549, -0.33744415640830994, -0.009207879193127155, -0.0007426364463753998, -0.003523809602484107, -0.010871939361095428, -1.8000440832111053e-05, -0.12196915596723557, -0.5451003909111023, -0.0009894242975860834, -7.438383181579411e-05, -0.0010078833438456059, -0.26513639092445374, -0.002518935827538371, -0.006789116654545069, -0.02512025646865368, -6.9141146923357155e-06, -0.024793418124318123, -0.0004906642716377974, -0.10697534680366516, -0.66786789894104, -1.7696774005889893, -0.14955705404281616, -0.8820532560348511, -0.0760108157992363, -0.101177878677845, -0.015122643671929836, -0.001121845212765038, -0.37805238366127014, -0.013280387967824936, -1.1732383966445923], "finish_reason": "stop"}], "metrics": {"energy": 409.9942302589416, "energy_per_token": 3.7272202750812875, "time": 9.258548, "time_per_token": 0.08416861818181817}}
{"outputs": [{"text": "# Create a correlation matrix\n    corr = data.corr()\n\n    # Generate a heatmap\n    ax = sns.heatmap(corr, annot=True, cmap='coolwarm')\n\n    # Add title\n    ax.set_title('Correlation Matrix')\n\n    return ax", "tokens": ["#", " Create", " a", " correlation", " matrix", "\n", "    ", "corr", " =", " data", ".", "corr", "()", "\n", "\n", "    ", "#", " Generate", " a", " heat", "map", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "corr", ",", " annot", "=", "True", ",", " c", "map", "='", "cool", "warm", "')", "\n", "\n", "    ", "#", " Add", " title", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Cor", "relation", " Matrix", "')", "\n", "\n", "    ", "return", " ax"], "logprobs": [-1.2937016487121582, -1.6959398984909058, -0.40710145235061646, -0.07911843061447144, -0.0023371067363768816, -0.35776710510253906, -0.0018346159486100078, -0.1773235946893692, -0.3011947274208069, -0.05439120531082153, -0.0025078770704567432, -0.001760838902555406, -0.002012015553191304, -0.0033812513574957848, -0.2084263563156128, -0.001423775334842503, -0.005276443902403116, -0.7903733253479004, -0.013833715580403805, -1.7949472665786743, -0.0002232540718978271, -0.35422539710998535, -0.0008967668982222676, -0.19002653658390045, -0.003086210461333394, -0.0020913651678711176, -2.50339189733495e-06, -5.960446742392378e-06, -0.0001003691868390888, -1.4305104514278355e-06, -4.649054244509898e-05, -0.014563450589776039, -0.044462211430072784, -0.10857275873422623, -0.009159686975181103, -0.010454650036990643, -0.2542612850666046, -0.221125066280365, -0.008980597369372845, -0.8916960954666138, -0.1440608948469162, -0.0007232195930555463, -0.09131620079278946, -0.007854410447180271, -0.5207487940788269, -0.0007321537705138326, -0.016085024923086166, -2.1430881023406982, -0.3586089015007019, -0.10155650973320007, -0.0002611534437164664, -0.013984077610075474, -0.000985136954113841, -0.0011897159274667501, -0.005594193469733, -0.00013136000779923052, -0.045904044061899185, -0.0004959068610332906, -0.00011872540198964998, -0.000605638197157532, -0.05378950014710426, -0.0007722970913164318, -0.023453207686543465, -0.0008985534077510238, -0.1849716752767563, -0.002557104919105768], "finish_reason": "stop"}], "metrics": {"energy": 224.71456201553343, "energy_per_token": 3.4047660911444457, "time": 5.48182, "time_per_token": 0.08305787878787879}}
{"outputs": [{"text": "df = pd.DataFrame(data)\n    corr = df.corr()\n    ax = sns.heatmap(corr)\n    ax.set_title('Correlation Matrix')\n    return ax", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "data", ")", "\n", "    ", "corr", " =", " df", ".", "corr", "()", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "corr", ")", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Cor", "relation", " Matrix", "')", "\n", "    ", "return", " ax"], "logprobs": [-1.8336644172668457, -0.043012358248233795, -0.041784629225730896, -0.00019941726350225508, -0.0017911833710968494, -0.012939301319420338, -0.0026295154821127653, -0.03188319876790047, -0.022673647850751877, -0.1140671968460083, -1.0121814012527466, -0.1658443808555603, -0.0017973711946979165, -0.0015941066667437553, -0.006137097254395485, -0.012491794303059578, -0.07424361258745193, -0.07592044025659561, -0.6168334484100342, -0.005287235137075186, -0.006358274724334478, -3.099436753473128e-06, -1.4662635294371285e-05, -0.00016437610611319542, -8.344646857949556e-07, -0.0002498314715921879, -0.04563814401626587, -1.980711579322815, -0.009884695522487164, -0.014003121294081211, -0.1809207946062088, -0.0024852838832885027, -0.03421962633728981, -0.023480338975787163, -0.0025211949832737446, -0.18622522056102753, -0.0018748340662568808, -0.00027176024741493165, -0.0012250783620402217, -0.02602626197040081, -0.0010945764370262623, -0.05374939739704132, -0.026488883420825005, -0.0025705411098897457], "finish_reason": "stop"}], "metrics": {"energy": 133.18003385162353, "energy_per_token": 3.026818951173262, "time": 3.589038, "time_per_token": 0.08156904545454545}}
{"outputs": [{"text": "# 1. Convert the dictionary into a DataFrame using pd.DataFrame\n    df = pd.DataFrame(data)\n\n    # 2. Use the `corr()` method to calculate the correlation matrix\n    correlation = df.corr()\n\n    # 3. Create a seaborn heatmap\n    ax = sns.heatmap(correlation, annot=True)\n\n    # 4. Set the title to 'Correlation Matrix'\n    ax.set_title('Correlation Matrix')\n\n    # 5. Return the Axes object\n    return ax", "tokens": ["#", " ", "1", ".", " Convert", " the", " dictionary", " into", " a", " Data", "Frame", " using", " pd", ".", "DataFrame", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "data", ")", "\n", "\n", "    ", "#", " ", "2", ".", " Use", " the", " `", "corr", "()`", " method", " to", " calculate", " the", " correlation", " matrix", "\n", "    ", "correlation", " =", " df", ".", "corr", "()", "\n", "\n", "    ", "#", " ", "3", ".", " Create", " a", " se", "ab", "orn", " heat", "map", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "correlation", ",", " annot", "=", "True", ")", "\n", "\n", "    ", "#", " ", "4", ".", " Set", " the", " title", " to", " '", "Cor", "relation", " Matrix", "'", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Cor", "relation", " Matrix", "')", "\n", "\n", "    ", "#", " ", "5", ".", " Return", " the", " Ax", "es", " object", "\n", "    ", "return", " ax", "\n", "\n", "def"], "logprobs": [-1.2937016487121582, -4.096630096435547, -0.9816927313804626, -0.22325779497623444, -2.1693384647369385, -0.2288581132888794, -1.3342010974884033, -0.8729539513587952, -0.0212379340082407, -0.6454364657402039, -0.004047061316668987, -1.704190731048584, -1.13935387134552, -0.011912279762327671, -0.0009732277248986065, -0.9460409283638, -0.015517919324338436, -0.5080427527427673, -0.020683318376541138, -0.0069727422669529915, -8.642300235806033e-05, -0.0003687655262183398, -0.0403871014714241, -0.003370321122929454, -0.023473702371120453, -0.012715808115899563, -0.4578288197517395, -0.0010810013627633452, -0.002405608771368861, -0.012430455535650253, -0.0067140464670956135, -0.0022431467659771442, -3.0030038356781006, -0.6021252870559692, -2.6048808097839355, -0.15955601632595062, -0.4932655096054077, -0.10742619633674622, -0.5127050876617432, -0.6238085031509399, -0.00923906173557043, -0.08565296232700348, -0.09679336845874786, -0.42061224579811096, -0.0027386562433093786, -2.3713817596435547, -2.1943938732147217, -0.0025028828531503677, -0.0002559096028562635, -4.7205765440594405e-05, -0.005649196449667215, -0.003077772678807378, -0.006054157856851816, -0.0006839081761427224, -0.0007414452848024666, -0.012323779985308647, -0.010375489480793476, -0.0010754045797511935, -1.8821195363998413, -0.4073568284511566, -3.2744357585906982, -0.0011445883428677917, -6.6756979322235566e-06, -0.008200900629162788, -0.0007259594276547432, -3.1016385555267334, -0.0008491248008795083, -0.40838995575904846, -0.0016990762669593096, -0.001547211897559464, -6.6756979322235566e-06, -5.8412379075889476e-06, -9.643566590966657e-05, -5.960462772236497e-07, -4.8040190449682996e-05, -0.00776948407292366, -0.08280191570520401, -0.09373344480991364, -0.008353058248758316, -0.005895842798054218, -0.7036182880401611, -0.013883447274565697, -0.05189914256334305, -0.0007515705074183643, -0.008761298842728138, -0.043015554547309875, -0.04103250429034233, -0.0020392590668052435, -0.11134113371372223, -0.06530874222517014, -0.04712718725204468, -2.704225540161133, -0.34191054105758667, -0.0004407388041727245, -0.00019095504831057042, -0.0016933638835325837, -0.003753047902137041, -0.05701952427625656, -0.0007879013428464532, -0.012479668483138084, -0.005416716914623976, -0.0009324969723820686, -0.018787294626235962, -0.000408327643526718, -0.07887134701013565, -0.00028224775451235473, -6.568216485902667e-05, -0.0003669780562631786, -0.010507027618587017, -0.0007412070408463478, -0.013681919313967228, -0.0009775151265785098, -0.8356542587280273, -0.13292773067951202, -0.024909120053052902, -0.001471032970584929, -0.16485923528671265, -0.01582374796271324, -0.4736166000366211, -0.0014177043922245502, -0.009711992926895618, -0.2787945568561554, -0.0010389650706201792, -0.0014887689612805843, -0.00213585514575243, -0.2155636101961136, -0.012628233060240746, -1.5194300413131714], "finish_reason": "stop"}], "metrics": {"energy": 428.9395615291595, "energy_per_token": 3.3510903244465586, "time": 10.944267, "time_per_token": 0.0855020859375}}
{"outputs": [{"text": "# Check that data is a dictionary and contains numerical columns\n    assert isinstance(data, dict), \"Input data must be a dictionary\"\n    assert all([pd.api.types.is_numeric_dtype(v) for v in data.values()]), \"All input data values must be numerical\"\n\n    # Create a correlation matrix\n    corr = pd.DataFrame(data).corr()\n\n    # Set the style of the heatmap\n    sns.set(font_scale=1.5)\n\n    # Draw the correlation matrix heatmap\n    ax = sns.heatmap(corr, annot=True, fmt=\".2f\", linewidths=1, linecolor=\"lightgrey\", square=True)\n\n    # Set the title of the heatmap\n    ax.set_title('Correlation Matrix', fontdict={'fontsize': 20})\n\n    return ax", "tokens": ["#", " Check", " that", " data", " is", " a", " dictionary", " and", " contains", " numerical", " columns", "\n", "    ", "assert", " isinstance", "(", "data", ",", " dict", ")", ",", " \"", "Input", " data", " must", " be", " a", " dictionary", "\"", "\n", "    ", "assert", " all", "([", "pd", ".", "api", ".", "types", ".", "is", "_", "numeric", "_", "d", "type", "(", "v", ")", " for", " v", " in", " data", ".", "values", "()", "])", ",", " \"", "All", " input", " data", " values", " must", " be", " numerical", "\"", "\n", "\n", "    ", "#", " Create", " a", " correlation", " matrix", "\n", "    ", "corr", " =", " pd", ".", "DataFrame", "(", "data", ")", ".", "corr", "()", "\n", "\n", "    ", "#", " Set", " the", " style", " of", " the", " heat", "map", "\n", "    ", "s", "ns", ".", "set", "(", "font", "_", "scale", "=", "1", ".", "5", ")", "\n", "\n", "    ", "#", " Draw", " the", " correlation", " matrix", " heat", "map", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "corr", ",", " annot", "=", "True", ",", " fmt", "=", "\"", ".", "2", "f", "\"", ",", " linewidth", "s", "=", "1", ",", " line", "color", "=", "\"", "light", "grey", "\"", ",", " square", "=", "True", ")", "\n", "\n", "    ", "#", " Set", " the", " title", " of", " the", " heat", "map", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Cor", "relation", " Matrix", "'", ",", " font", "dict", "={", "'", "fonts", "ize", "':", " ", "2", "0", "})", "\n", "\n", "    ", "return", " ax", "\n", "\n", "def"], "logprobs": [-1.2937016487121582, -3.495084762573242, -1.2530957460403442, -1.5807160139083862, -0.05707143247127533, -0.06004709005355835, -1.947003722190857, -3.017972707748413, -0.5533608198165894, -0.38239023089408875, -0.06946425884962082, -0.04615974426269531, -0.004315824713557959, -0.6636298298835754, -0.020466454327106476, -0.00014006110723130405, -0.05618152767419815, -0.000987995183095336, -0.026178287342190742, -0.0001811817055568099, -0.18362738192081451, -0.16758649051189423, -1.1931405067443848, -0.3389042913913727, -0.19108422100543976, -0.00013159839727450162, -0.028588542714715004, -0.00739882281050086, -0.19445040822029114, -0.0004011779965367168, -0.07447092235088348, -0.9103245735168457, -0.21844425797462463, -1.1444240808486938, -0.32986146211624146, -4.160317621426657e-05, -0.012619993649423122, -2.3841830625315197e-06, -1.645074735279195e-05, -7.510157047363464e-06, -0.0012557962909340858, -2.3841855067985307e-07, -0.009547052904963493, -2.5510462364763953e-05, -1.1920922133867862e-06, -3.6954811548639555e-06, -0.002021889900788665, -2.034780740737915, -0.015653710812330246, -0.010167825035750866, -0.045159801840782166, -0.00036840804386883974, -0.018514318391680717, -0.00028951745480298996, -0.0005311747081577778, -0.000324673397699371, -0.0019605003762990236, -0.001258534612134099, -0.016070010140538216, -0.8852094411849976, -3.513775587081909, -1.0550860166549683, -0.4801022708415985, -0.003644492942839861, -0.0019947646651417017, -0.3602166771888733, -0.02065669372677803, -0.003439465072005987, -0.049089912325143814, -0.001073499326594174, -0.06072065606713295, -0.6088780164718628, -0.5056250095367432, -0.46694767475128174, -0.0029778205789625645, -0.5109145641326904, -0.00047052756417542696, -0.2335292100906372, -0.36792701482772827, -0.01123188529163599, -1.4424220353248529e-05, -0.0006505518686026335, -0.13670185208320618, -0.0031587013509124517, -0.017193198204040527, -0.015575548633933067, -0.01011920627206564, -0.0037085108924657106, -0.003102729329839349, -0.029836157336831093, -0.0004395472351461649, -0.002772418549284339, -2.0820765495300293, -0.3154248595237732, -2.0176353454589844, -0.32569634914398193, -0.006878269836306572, -1.0010871887207031, -0.0008885487914085388, -0.18708574771881104, -0.0003736513026524335, -0.14258909225463867, -0.0001734344696160406, -0.00011896379146492109, -0.010319212451577187, -0.07563454657793045, -1.1685357093811035, -0.00047386385267600417, -7.688703772146255e-05, -0.02147364802658558, -0.15203769505023956, -0.36989253759384155, -0.8929710984230042, -0.12873072922229767, -0.023105788975954056, -1.3352893590927124, -0.0002859421947505325, -0.0017720249015837908, -0.5121976137161255, -0.25326526165008545, -2.2385482788085938, -0.04518464207649231, -0.020384810864925385, -0.00011228884250158444, -0.029247740283608437, -0.00027414379292167723, -0.08389122039079666, -0.0013711584033444524, -0.0013581824023276567, -4.768370445162873e-07, -3.6954811548639555e-06, -3.2066785934148356e-05, 0.0, -7.986990567587782e-06, -0.011263475753366947, -0.018561476841568947, -0.14936652779579163, -0.004976979922503233, -0.01492923405021429, -0.1264263391494751, -2.305542230606079, -0.5281568765640259, -0.00042167355422861874, -0.028170006349682808, -0.06769323348999023, -0.00982591137290001, -3.4570634852570947e-06, -0.09745323657989502, -2.520021677017212, -0.04396938905119896, -0.0002899941464420408, -1.553897738456726, -0.3343486487865448, -1.4199903011322021, -2.6225699912174605e-05, -0.47770100831985474, -0.0029032959137111902, -1.493116021156311, -0.7378783822059631, -5.483612312673358e-06, -0.023733338341116905, -0.3811943829059601, -0.00011383838864276186, -0.1187133863568306, -1.0907984972000122, -0.014345490373671055, -0.22830750048160553, -0.0005875291535630822, -0.005807668901979923, -0.1707673966884613, -0.012669550254940987, -0.031162993982434273, -0.08857369422912598, -0.00042512916843406856, -0.03417032212018967, -0.00023457636416424066, -0.008342773653566837, -0.00014697425649501383, -0.020928502082824707, -0.0007147617870941758, -0.006300941575318575, -0.004975556395947933, -0.0006195771275088191, -0.9921318292617798, -0.0010961245279759169, -0.00013600854435935616, -0.0006491222884505987, -1.1004741191864014, -0.00025281094713136554, -1.6156737804412842, -0.1392134130001068, -0.10963671654462814, -0.00044216870446689427, -0.00932114664465189, 0.0, -0.0023643416352570057, -0.36713871359825134, -0.844319760799408, -0.17432072758674622, -1.3994696140289307, -0.0009927588980644941, -0.017046833410859108, -0.0006073060794733465, -0.4067833423614502, -0.002389316214248538, -0.29543042182922363, -0.006386703345924616, -1.2036769390106201], "finish_reason": "stop"}], "metrics": {"energy": 710.645986772537, "energy_per_token": 3.4165672440987356, "time": 18.071756, "time_per_token": 0.08688344230769231}}
{"outputs": [{"text": "sns.set()\n    sns.set_context(\"paper\")\n    ax = sns.heatmap(data)\n    ax.set_title('Correlation Matrix')\n    return ax", "tokens": ["s", "ns", ".", "set", "()", "\n", "    ", "s", "ns", ".", "set", "_", "context", "(", "\"", "paper", "\"", ")", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "data", ")", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Cor", "relation", " Matrix", "')", "\n", "    ", "return", " ax", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.361544132232666, -0.0022075825836509466, -0.0021114691626280546, -0.064484141767025, -1.9490082263946533, -0.02450358122587204, -0.08275780081748962, -2.064187526702881, -0.0016199335223063827, -0.011725671589374542, -0.03468077629804611, -0.05199907347559929, -0.5634391903877258, -0.15959961712360382, -0.14167220890522003, -1.0425666570663452, -7.748303323751315e-05, -0.44688811898231506, -0.020011788234114647, -0.14163444936275482, -2.1453654766082764, -0.014527734369039536, -0.031132834032177925, -3.099436753473128e-06, -9.965400386136025e-05, -0.0002571013756096363, -1.4305104514278355e-06, -0.0014855550834909081, -0.2948072552680969, -2.526378870010376, -0.03439931944012642, -0.013218156062066555, -0.0879964753985405, -0.0033419255632907152, -0.03374650701880455, -0.026740308851003647, -0.007233974989503622, -0.40121909976005554, -0.0048598977737128735, -0.0009016501135192811, -0.002135379472747445, -0.10067720711231232, -0.0037225254345685244, -0.11292148381471634, -0.05838322266936302, -0.004598637111485004, -1.743270993232727, -7.152555099310121e-07, -1.6689286894688848e-06, -2.264974000354414e-06, -6.627816765103489e-05, -0.1836128979921341], "finish_reason": "stop"}], "metrics": {"energy": 162.21706980514526, "energy_per_token": 3.119559034714332, "time": 4.2167244, "time_per_token": 0.08109085384615386}}
{"outputs": [{"text": "# 1. Create a correlation matrix from the data\n    corr = data.corr()\n\n    # 2. Create the heatmap using seaborn\n    sns.set(font_scale=1.4)\n    sns.set_theme(style=\"white\")\n    ax = sns.heatmap(\n        corr,\n        xticklabels=corr.columns.values,\n        yticklabels=corr.columns.values,\n        annot=True,\n        cmap=sns.color_palette(\"Reds\", as_cmap=True),\n    )\n    ax.tick_params(axis=\"both\", labelsize=14)\n    ax.set_title(\"Correlation Matrix\", fontdict={\"fontsize\": 16})\n    return ax", "tokens": ["#", " ", "1", ".", " Create", " a", " correlation", " matrix", " from", " the", " data", "\n", "    ", "corr", " =", " data", ".", "corr", "()", "\n", "\n", "    ", "#", " ", "2", ".", " Create", " the", " heat", "map", " using", " se", "ab", "orn", "\n", "    ", "s", "ns", ".", "set", "(", "font", "_", "scale", "=", "1", ".", "4", ")", "\n", "    ", "s", "ns", ".", "set", "_", "theme", "(", "style", "=", "\"", "white", "\"", ")", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "\n", "        ", "corr", ",", "\n", "        ", "xt", "ick", "labels", "=", "corr", ".", "columns", ".", "values", ",", "\n", "        ", "yt", "ick", "labels", "=", "corr", ".", "columns", ".", "values", ",", "\n", "        ", "annot", "=", "True", ",", "\n", "        ", "cm", "ap", "=", "s", "ns", ".", "color", "_", "pal", "ette", "(", "\"", "Red", "s", "\"", ",", " as", "_", "cm", "ap", "=", "True", ")", ",", "\n", "    ", ")", "\n", "    ", "ax", ".", "tick", "_", "params", "(", "axis", "=", "\"", "both", "\"", ",", " label", "size", "=", "1", "4", ")", "\n", "    ", "ax", ".", "set", "_", "title", "(", "\"", "Cor", "relation", " Matrix", "\"", ",", " font", "dict", "=", "{\"", "fonts", "ize", "\":", " ", "1", "6", "})", "\n", "    ", "return", " ax", "\n", "\n", "def"], "logprobs": [-1.2937016487121582, -4.096630096435547, -0.9816927313804626, -0.22325779497623444, -2.0426294803619385, -0.16017159819602966, -0.15358737111091614, -0.002738774986937642, -1.5752286911010742, -0.10298248380422592, -1.8215603828430176, -0.7032210826873779, -0.009174452163279057, -0.5114617347717285, -0.6480617523193359, -0.0548088438808918, -0.001693720929324627, -0.0015238827327266335, -0.005547959823161364, -0.009894728660583496, -0.31537094712257385, -0.0013386583887040615, -0.002267648698762059, -0.06111951172351837, -0.009297526441514492, -0.002882970031350851, -1.6253626346588135, -1.8071857690811157, -0.23722921311855316, -0.0030555487610399723, -0.5936806201934814, -0.4893856942653656, -0.0010259846458211541, -2.0146166207268834e-05, -0.10652857273817062, -0.0012747265864163637, -1.0064812898635864, -0.00024327656137757003, -0.0011511372867971659, -0.5551092028617859, -0.10254952311515808, -0.23899060487747192, -0.0006354220095090568, -6.151010165922344e-05, -0.028163978829979897, -0.18870627880096436, -0.19923247396945953, -2.342153310775757, -0.004423595033586025, -0.08118616789579391, -0.0072001260705292225, -1.233447551727295, -5.113947918289341e-05, -0.0005974177038297057, -0.10885505378246307, -0.05620654672384262, -1.339512586593628, -0.06606727093458176, -0.013210391625761986, -0.22683849930763245, -0.0004430027911439538, -0.038167987018823624, -0.06447385996580124, -0.05557030066847801, -0.018675094470381737, -0.04503103345632553, -0.2964937388896942, -0.005113499239087105, -0.0027751526795327663, 0.0, -1.5020257706055418e-05, -3.981510963058099e-05, 0.0, -2.6702524337451905e-05, -2.7011489868164062, -0.0519561804831028, -0.02115028351545334, -0.0005679901223629713, -0.051169656217098236, -0.00194193993229419, -0.7549035549163818, -9.858122211880982e-05, -1.5497195136049413e-06, -0.005438650958240032, -0.01848330721259117, -1.1801649634435307e-05, -0.06741991639137268, -0.21590390801429749, -0.011713535524904728, -0.002193070948123932, -0.0027528032660484314, -6.16293036728166e-05, -0.00015364897262770683, -2.622600959512056e-06, 0.0, -3.969590397900902e-05, -0.0011392300948500633, -2.6225699912174605e-05, -0.0027702786028385162, -0.00038747431244701147, -1.6212332411669195e-05, -0.03493441268801689, -0.0030877552926540375, -0.05735310912132263, -0.7025598287582397, -0.02877701073884964, -0.06918563693761826, -0.035550326108932495, -0.010200276039540768, -0.07679031044244766, -0.8678547739982605, -6.198863957251888e-06, -0.12317411601543427, -0.4964986741542816, -1.1920928244535389e-07, -2.3841830625315197e-06, -0.03295636177062988, 0.0, -0.0006163604557514191, -1.6927575416048057e-05, -0.00834100041538477, -0.0028449322562664747, -4.105405330657959, -5.006777428206988e-06, -0.002451511798426509, -0.02696417085826397, -0.0022751418873667717, 0.0, -8.34461570775602e-06, -5.602820692729438e-06, -1.2397689715726301e-05, -0.0004586121649481356, -0.019314900040626526, -0.12185677140951157, -0.006864417809993029, -0.406440407037735, -0.0002811751910485327, -0.011051633395254612, -1.2683640718460083, -0.6163402199745178, -0.007910589687526226, -2.6139562129974365, -0.0010469438275322318, -2.6464111215318553e-05, -0.006715230643749237, -0.5373715758323669, -0.3404192626476288, -0.00019608005823101848, -0.3565169870853424, -3.3378546504536644e-06, -0.0015073377871885896, -0.8054113388061523, -0.0001573438785271719, -0.0009943069890141487, -0.08804669231176376, -0.9177389740943909, -0.05319681391119957, -0.016656851395964622, -0.9531264305114746, -0.2925233840942383, -0.0030901322606951, -0.10489117354154587, -0.010148708708584309, -0.0875924751162529, -0.17237253487110138, -0.030718713998794556, -0.011509920470416546, -0.0013456823071464896, -0.007610848639160395, -0.006918877363204956, -0.06082049757242203, -1.1412967443466187, -0.05603388324379921, -0.03544240817427635, -0.0071500614285469055, -0.013204745016992092, 0.0, -0.00020847532141488045, -0.016583222895860672, -0.3827735185623169, -0.6319541335105896, -0.1213977038860321, -0.003037127433344722, -0.8014134168624878, -0.22794140875339508, -0.002745907986536622, -0.16752377152442932, -0.0059832981787621975, -0.9496771693229675], "finish_reason": "stop"}], "metrics": {"energy": 674.069116419792, "energy_per_token": 3.566503261480381, "time": 16.184765, "time_per_token": 0.08563367724867724}}
{"outputs": [{"text": "corr = data.corr()\n    ax = sns.heatmap(corr, annot=True, cmap='viridis')\n    ax.set_title('Correlation Matrix')\n    return ax", "tokens": ["corr", " =", " data", ".", "corr", "()", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "corr", ",", " annot", "=", "True", ",", " c", "map", "='", "vir", "idis", "')", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Cor", "relation", " Matrix", "')", "\n", "    ", "return", " ax", "\n", "\n", "def"], "logprobs": [-1.9765877723693848, -0.16555964946746826, -0.12891381978988647, -0.0027882291469722986, -0.0022561114747077227, -0.01310591772198677, -0.07160697132349014, -0.05517430230975151, -0.7294530868530273, -0.007989945821464062, -0.009726513177156448, -2.622600959512056e-06, -1.728519782773219e-05, -0.00025686301523819566, -5.960462772236497e-07, -0.0002873722987715155, -0.18273486196994781, -0.1354515701532364, -0.2555582821369171, -0.02625945769250393, -0.012016172520816326, -0.6107766032218933, -0.2611732482910156, -0.020988505333662033, -1.4116722345352173, -3.0024707317352295, -9.238292841473594e-05, -0.09659705311059952, -0.013811376877129078, -0.008931093849241734, -0.10728100687265396, -0.0017694068374112248, -0.009276739321649075, -0.010853071697056293, -0.001665277755819261, -0.04786871746182442, -0.002041519619524479, -0.00015877417172305286, -0.0010035961167886853, -0.03481951728463173, -0.001212814822793007, -0.05648024007678032, -0.03750832751393318, -0.0028269824106246233, -0.47303834557533264, -0.0183809045702219, -1.3233298063278198], "finish_reason": "stop"}], "metrics": {"energy": 169.27627939414975, "energy_per_token": 3.6016229658329735, "time": 4.011779, "time_per_token": 0.08535699999999999}}
{"outputs": [{"text": "df = pd.DataFrame(data)\n    # Calculate the correlation matrix\n    corr = df.corr()\n    # Generate a custom diverging colormap\n    cmap = sns.diverging_palette(220, 20, as_cmap=True)\n    # Draw the heatmap using seaborn\n    ax = sns.heatmap(corr, cmap=cmap, annot=True, fmt='.2f', linewidths=.5)\n    # Set the title of the heatmap\n    ax.set_title(\"Correlation Matrix\")\n    # Show the plot\n    plt.show()\n    # Return the Axes object\n    return ax\n\ndata = {'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]}\n\nimport unittest\n\nclass TestTaskFunc(unittest.TestCase):\n    def test_data_is_list_of_lists(self):\n        \"\"\"\n        Test that the input data is a list of lists.\n        \"\"", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "data", ")", "\n", "    ", "#", " Calculate", " the", " correlation", " matrix", "\n", "    ", "corr", " =", " df", ".", "corr", "()", "\n", "    ", "#", " Generate", " a", " custom", " diver", "ging", " col", "orm", "ap", "\n", "    ", "cm", "ap", " =", " s", "ns", ".", "d", "iver", "ging", "_", "pal", "ette", "(", "2", "2", "0", ",", " ", "2", "0", ",", " as", "_", "cm", "ap", "=", "True", ")", "\n", "    ", "#", " Draw", " the", " heat", "map", " using", " se", "ab", "orn", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "corr", ",", " c", "map", "=", "cm", "ap", ",", " annot", "=", "True", ",", " fmt", "='", ".", "2", "f", "'", ",", " linewidth", "s", "=", ".", "5", ")", "\n", "    ", "#", " Set", " the", " title", " of", " the", " heat", "map", "\n", "    ", "ax", ".", "set", "_", "title", "(", "\"", "Cor", "relation", " Matrix", "\"", ")", "\n", "    ", "#", " Show", " the", " plot", "\n", "    ", "plt", ".", "show", "()", "\n", "    ", "#", " Return", " the", " Ax", "es", " object", "\n", "    ", "return", " ax", "\n", "\n", "data", " =", " {'", "a", "':", " [", "1", ",", " ", "2", ",", " ", "3", "]", ",", " '", "b", "':", " [", "4", ",", " ", "5", ",", " ", "6", "]", ",", " '", "c", "':", " [", "7", ",", " ", "8", ",", " ", "9", "]}", "\n", "\n", "import", " un", "ittest", "\n", "\n", "class", " Test", "Task", "Func", "(", "un", "ittest", ".", "TestCase", "):", "\n", "    ", "def", " test", "_", "data", "_", "is", "_", "list", "_", "of", "_", "lists", "(", "self", "):", "\n", "        ", "\"", "\"", "\"", "\n", "        ", "Test", " that", " the", " input", " data", " is", " a", " list", " of", " lists", ".", "\n", "        ", "\"", "\""], "logprobs": [-1.8336644172668457, -0.043012358248233795, -0.041784629225730896, -0.00019941726350225508, -0.0017911833710968494, -0.012939301319420338, -0.0026295154821127653, -0.03188319876790047, -0.022673647850751877, -0.1140671968460083, -1.7299453020095825, -1.8492122888565063, -0.1943272203207016, -0.021490799263119698, -0.09487444907426834, -0.057505398988723755, -0.0012465096078813076, -0.06271837651729584, -0.08132662624120712, -0.0018152202246710658, -0.0002907091984525323, -0.0027934599202126265, -0.002940618433058262, -0.004211485851556063, -0.9138575792312622, -0.07027242332696915, -0.21054072678089142, -0.041458044201135635, -1.9664878845214844, -0.013943050988018513, -0.0015666127437725663, -0.0014963869471102953, -9.536738616588991e-07, -2.3841855067985307e-07, -0.8198903203010559, -0.0025972940493375063, -0.011270783841609955, -1.1801649634435307e-05, -0.0009609610424377024, -0.00011169286881340668, 0.0, -4.291525328881107e-06, -0.004815172404050827, -8.583032467868179e-06, -0.00024923557066358626, 0.0, -0.0013518728082999587, -1.4305104514278355e-06, -0.0002980979916173965, -0.03894221410155296, -0.08432980626821518, -0.00041083001997321844, -8.821448318485636e-06, -0.007687507662922144, -0.8071925640106201, -0.00011872540198964998, -7.378782902378589e-05, -0.025073405355215073, 0.0, -0.0002790300059132278, -3.707340147229843e-05, -0.0003759154351428151, -6.258291978156194e-05, -0.008249612525105476, -0.0008569859201088548, -0.039823420345783234, -0.04090309143066406, -0.10724212974309921, -0.005622050724923611, -0.002278353087604046, -4.565611743601039e-05, -0.5868090987205505, -0.026241574436426163, -0.00022027450904715806, -4.0531076592742465e-06, -0.017059724777936935, -0.0010752854868769646, -0.24391871690750122, -0.003569423919543624, -0.0005017452058382332, -1.1920922133867862e-06, -2.9802276912960224e-06, -0.0001234931987710297, -1.1920928244535389e-07, -1.5616295058862306e-05, -0.0009738231892697513, -4.5536911784438416e-05, -0.1539010852575302, -0.00020585325546562672, -0.0017193072708323598, -0.0006970121758058667, -1.0728830375228426e-06, -0.011131801642477512, -0.5737747550010681, -0.0062805661000311375, -0.0151623310521245, -0.3099443316459656, -0.5047110319137573, -0.9197134375572205, -0.02298848144710064, -0.06663285940885544, -0.05093970522284508, -0.2911726236343384, -0.00037651124875992537, -1.4973104000091553, -0.051448240876197815, -0.0003488647344056517, -0.342325359582901, -0.012100385501980782, -0.5205645561218262, -0.03174023702740669, -0.036077097058296204, -0.5880792140960693, -0.3171214163303375, -0.06748967617750168, -0.10407109558582306, -0.5815432667732239, -0.002409533131867647, -0.21946457028388977, -0.0017765468219295144, -0.01886438950896263, -0.0003430254873819649, -0.029777608811855316, -0.0016553997993469238, -0.011950799264013767, -0.009337563067674637, -0.0006541258189827204, -2.0586559772491455, -0.009369095787405968, -0.0016169581795111299, -0.00014256415306590497, -0.0017003853572532535, -0.00226205843500793, -0.16599597036838531, -0.006558086257427931, -0.15198321640491486, -1.3545844554901123, -2.4625959396362305, -0.04303108528256416, -0.2634858191013336, -0.6199811697006226, -0.010890216566622257, -0.8119931817054749, -0.00023958197562023997, -0.011068964377045631, -0.006119561847299337, -0.006446637213230133, -0.09343360364437103, -1.4760067462921143, -0.1484024077653885, -0.008076272904872894, -0.503407895565033, -0.0014036574866622686, -0.002828290220350027, -0.34901049733161926, -0.0010474200826138258, -0.001964426366612315, -0.003926901612430811, -0.22272279858589172, -0.018367912620306015, -2.4118165969848633, -0.05667411535978317, -0.1437070071697235, -0.07055818289518356, -0.0010060969507321715, -0.011210194788873196, -0.010274140164256096, -0.014250889420509338, -0.004079710692167282, -0.018178993836045265, -0.002466376405209303, -0.0006585336523130536, -0.003196489764377475, -0.01172802783548832, -0.00011121608258690685, -0.01714187301695347, -0.0005508335889317095, -3.8980677345534787e-05, -0.0006050424999557436, -0.0033622421324253082, -0.000331704446580261, -0.000262106885202229, -0.0022965504322201014, -0.0002138386043952778, -0.0008947421447373927, -0.0016731324139982462, -0.003539608558639884, -9.417489309271332e-06, -0.0007655074005015194, -0.00011419598013162613, -4.935142715112306e-05, -0.0006437613046728075, -0.001503052655607462, -8.976056415122002e-05, -0.0003885467885993421, -0.0007443041540682316, -0.00014029949670657516, -0.00043930893298238516, -0.0007468056865036488, -0.01039648987352848, -0.017411241307854652, -1.8839585781097412, -3.9596357345581055, -0.5578882098197937, -7.509902934543788e-05, -0.005843579303473234, -0.6916640996932983, -0.04026653617620468, -0.09050211310386658, -0.21212352812290192, -0.12380680441856384, -0.004642185289412737, -0.00026425207033753395, -1.0728830375228426e-06, -7.64102369430475e-05, -0.005352570675313473, -0.0002512616047170013, -0.00036113892565481365, -0.34835851192474365, -0.4891888201236725, -0.004310958087444305, -0.00045277358731254935, -3.329124689102173, -0.27113866806030273, -2.7890708446502686, -0.010143633931875229, -3.2069599628448486, -1.1610474586486816, -0.26748672127723694, -0.00013505500101018697, -0.9352180361747742, -0.05291012302041054, -0.000498289882671088, -0.0021852203644812107, -0.00031680811662226915, -0.002333776792511344, -2.3625617027282715, -0.004221932031214237, -0.0002444683632347733, -0.18573161959648132, -0.005145995412021875, -0.3779808282852173, -0.5384855270385742, -0.042206648737192154, -0.33228012919425964, -0.06473502516746521, -0.020095329731702805, -0.05566152185201645, -0.01321403868496418, -0.00830872543156147, -0.003897452959790826, -0.3866134285926819, -0.00389519683085382, -0.06452259421348572, -0.01870996132493019, -4.291525328881107e-06], "finish_reason": "length"}], "metrics": {"energy": 884.9175800247191, "energy_per_token": 3.456709296971559, "time": 22.063372, "time_per_token": 0.086185046875}}
{"outputs": [{"text": "ax = sns.heatmap(data.corr(), annot=True, fmt='.2f')\n    ax.set_title('Correlation Matrix')\n    return ax\n\ntask_func.__doc__ = \"\"\"\nDraw and return a correlation matrix heatmap for a DataFrame containing numerical columns.\nThe title of the heatmap is set to 'Correlation Matrix'.\n\nParameters:\ndf (pandas.DataFrame): The DataFrame containing numerical columns to be used for correlation.\n\nReturns:\nmatplotlib.axes._axes.Axes: The matplotlib Axes object representing the heatmap.\n\nRequirements:\n- pandas\n- seaborn\n\nExample:\n>>> data = {'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [7, 8, 9]}\n>>> ax = task_func(data)\n>>> type(ax)\n<class 'matplotlib.axes._axes.Axes'>\n\n\"\"\"", "tokens": ["ax", " =", " s", "ns", ".", "heat", "map", "(", "data", ".", "corr", "()", ",", " annot", "=", "True", ",", " fmt", "='", ".", "2", "f", "')", "\n", "    ", "ax", ".", "set", "_", "title", "('", "Cor", "relation", " Matrix", "')", "\n", "    ", "return", " ax", "\n", "\n", "task", "_", "func", ".", "__", "doc", "__", " =", " \"", "\"", "\"", "\n", "Draw", " and", " return", " a", " correlation", " matrix", " heat", "map", " for", " a", " Data", "Frame", " containing", " numerical", " columns", ".", "\n", "The", " title", " of", " the", " heat", "map", " is", " set", " to", " '", "Cor", "relation", " Matrix", "'", ".", "\n", "\n", "Parameters", ":", "\n", "df", " (", "pand", "as", ".", "DataFrame", "):", " The", " Data", "Frame", " containing", " numerical", " columns", " to", " be", " used", " for", " correlation", ".", "\n", "\n", "Returns", ":", "\n", "mat", "plotlib", ".", "axes", ".", "_", "axes", ".", "Ax", "es", ":", " The", " matplotlib", " Ax", "es", " object", " representing", " the", " heat", "map", ".", "\n", "\n", "Requ", "irements", ":", "\n", "-", " pandas", "\n", "-", " se", "ab", "orn", "\n", "\n", "Example", ":", "\n", ">>>", " data", " =", " {'", "a", "':", " [", "1", ",", " ", "2", ",", " ", "3", "]", ",", " '", "b", "':", " [", "4", ",", " ", "5", ",", " ", "6", "]", ",", " '", "c", "':", " [", "7", ",", " ", "8", ",", " ", "9", "]}", "\n", ">>>", " ax", " =", " task", "_", "func", "(", "data", ")", "\n", ">>>", " type", "(", "ax", ")", "\n", "<", "class", " '", "mat", "plotlib", ".", "axes", ".", "_", "axes", ".", "Ax", "es", "'>", "\n", "\n", "\"", "\"", "\""], "logprobs": [-2.978893756866455, -0.028629319742321968, -0.11058439314365387, -5.483612312673358e-06, -0.00012754580529872328, -0.000653411028906703, -1.1801649634435307e-05, -0.0007317964336834848, -0.2221348136663437, -0.1663188338279724, -0.003990663681179285, -0.04217122122645378, -0.007427576929330826, -0.15396170318126678, -0.030309626832604408, -0.008583320304751396, -0.3446962833404541, -1.3169512748718262, -0.38489288091659546, -0.026477739214897156, -0.10385900735855103, -0.09454328566789627, -1.3326122760772705, -0.051050495356321335, -0.012015818618237972, -0.07745953649282455, -0.0019955975003540516, -0.026180725544691086, -0.018514670431613922, -0.004198665264993906, -0.04374770447611809, -0.0013523490633815527, -0.00045313104055821896, -0.001004786929115653, -0.06990766525268555, -0.0015733970794826746, -0.08892745524644852, -0.03725442662835121, -0.0038309532683342695, -0.5186154246330261, -0.013872630894184113, -3.538729429244995, -0.021850325167179108, -0.1072641909122467, -0.6124537587165833, -0.09561078250408173, -0.0373738631606102, -0.0013629442546516657, -0.20849302411079407, -1.2553001642227173, -0.4502156972885132, -0.005691039375960827, -0.5969403982162476, -1.3274502754211426, -0.3294430077075958, -0.007051344029605389, -0.0034236647188663483, -0.01117023266851902, -0.0006598440813831985, -0.0019056509481742978, -0.00015233787416946143, -0.02136489935219288, -0.02446763589978218, -0.017057381570339203, -0.00017855956684798002, -0.009049118496477604, -0.00313849956728518, -0.00529992301017046, -0.009695818647742271, -0.027894478291273117, -0.13011682033538818, -0.003201599232852459, -0.0003147821989841759, -4.0411134250462055e-05, -0.0005278385942801833, -5.113947918289341e-05, -0.000356253091013059, -0.0005080600967630744, -0.00025996167096309364, -0.005321504082530737, -0.0005723983631469309, -2.8371408916427754e-05, -0.00036113892565481365, -0.0015988674713298678, -0.004492547363042831, -0.025895588099956512, -0.1486331969499588, -0.1687149852514267, -0.006008182652294636, -0.0008815216715447605, -0.6461336612701416, -0.009581413120031357, -0.007073479238897562, -9.775113539944869e-06, -0.0030479426495730877, -0.0001770101225702092, -0.0006398299592547119, -0.002302140463143587, -0.0003924791526515037, -2.2649508537142538e-05, -0.00025555206229910254, -0.00017641419253777713, -0.00031442465842701495, -0.0007638397510163486, -0.0008971241768449545, -0.00016509123088326305, -0.00038509105797857046, -0.001334729720838368, -0.0005016260547563434, -0.0042708381079137325, -0.006425435654819012, -0.004095145035535097, -0.0001851148990681395, -0.0002479245886206627, -0.009006942622363567, -1.2636104656849056e-05, -9.011816291604191e-05, -1.7523612768854946e-05, -1.4781842764932662e-05, -0.0010994586627930403, -0.00016711745411157608, -2.1934269170742482e-05, -5.006777428206988e-06, -5.364403477869928e-06, -0.000144709600135684, -0.0004687402688432485, -8.67805938469246e-05, -3.71926071238704e-05, -1.0251946150674485e-05, -1.549708758830093e-05, -4.9232225137529895e-05, -0.00012265883560758084, -0.0007048744591884315, -1.3589766240329482e-05, -0.0009055804111994803, -0.004367693793028593, -0.10328259319067001, -0.1440015435218811, -0.0005530973430722952, -0.00031609306461177766, -0.0005165196489542723, -0.08031714707612991, -0.004591517616063356, -0.0013753250241279602, -0.00022504181833937764, -0.0017197832930833101, -1.5139465176616795e-05, -9.536738616588991e-07, -0.0032014804892241955, -0.03933540731668472, -0.021762032061815262, -0.005293163936585188, -0.0002810560108628124, -0.03590897470712662, -0.024175960570573807, -0.0002351722796447575, -0.012313418090343475, -0.0011198208667337894, -8.987976616481319e-05, -0.00020597243565134704, -7.986703712958843e-05, -0.0002849888114724308, -0.00016878610767889768, -0.0001081169830285944, -6.937739817658439e-05, -2.1457441107486375e-05, -1.5020257706055418e-05, -6.01988795096986e-05, -5.245195097813848e-06, -0.0004379982128739357, -2.992108420585282e-05, -1.3708974620385561e-05, -2.169585604860913e-05, -4.5060096454108134e-05, -7.390948667307384e-06, -1.8000440832111053e-05, -3.635817120084539e-05, -1.07287787614041e-05, -4.0649541915627196e-05, -1.2636104656849056e-05, -9.226373367710039e-05, -7.390948667307384e-06, -6.90197994117625e-05, -7.748573807475623e-06, -2.2053474822314456e-05, -3.862306402879767e-05, -2.777537883957848e-05, -7.152531907195225e-06, -5.0424259825376794e-05, -4.970903682988137e-05, -1.966933996300213e-05, -3.58813522325363e-05, -2.95634672511369e-05, -0.00019226610311307013, -0.00041083001997321844, -0.0007024919614195824, -0.015278448350727558, -0.00011252723925281316, -0.020814791321754456, -0.0004633783537428826, -0.003027857281267643, -0.0037735935766249895, -0.001158162602223456, -9.738924563862383e-05, -0.00022980909852776676, -0.0011747133685275912, -0.0023480483796447515, -1.8715683836489916e-05, -7.021180499577895e-05, -0.00015341058315243572, -0.0007856381707824767, -0.0021773697808384895, -0.0002015625941567123, -3.302042750874534e-05, -4.935142715112306e-05, -2.372236667724792e-05, -1.9073304429184645e-05, -5.245195097813848e-06, -7.748573807475623e-06, -3.40932747349143e-05, -5.781483559985645e-05, -9.417489309271332e-06, -9.059865078597795e-06, -3.6954811548639555e-06, -0.0003587556129787117, -0.009888708591461182, -0.7957954406738281, -0.036829620599746704, -5.721882189391181e-05, -0.00015341058315243572], "finish_reason": "stop"}], "metrics": {"energy": 819.4371795959476, "energy_per_token": 3.562770346069337, "time": 20.203613, "time_per_token": 0.08784179565217391}}
{"outputs": [{"text": "corr = data.corr()\n    ax = sns.heatmap(corr, annot=True, cmap=\"coolwarm\", center=0)\n    ax.set_title(\"Correlation Matrix\")\n    return ax", "tokens": ["corr", " =", " data", ".", "corr", "()", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "corr", ",", " annot", "=", "True", ",", " c", "map", "=", "\"", "cool", "warm", "\"", ",", " center", "=", "0", ")", "\n", "    ", "ax", ".", "set", "_", "title", "(", "\"", "Cor", "relation", " Matrix", "\"", ")", "\n", "    ", "return", " ax"], "logprobs": [-1.9765877723693848, -0.16555964946746826, -0.12891381978988647, -0.0027882291469722986, -0.0022561114747077227, -0.01310591772198677, -0.07160697132349014, -0.05517430230975151, -0.7294530868530273, -0.007989945821464062, -0.009726513177156448, -2.622600959512056e-06, -1.728519782773219e-05, -0.00025686301523819566, -5.960462772236497e-07, -0.0002873722987715155, -0.18273486196994781, -0.1354515701532364, -0.2555582821369171, -0.02625945769250393, -0.012016172520816326, -0.6107766032218933, -0.2611732482910156, -0.020988505333662033, -0.30543676018714905, -0.35047391057014465, -0.23124945163726807, -0.0032564965076744556, -0.0019348012283444405, -1.7124544382095337, -3.094682455062866, -0.0016055324813351035, -0.002684919396415353, -0.2885555922985077, -0.01143166795372963, -0.01440929714590311, -0.19133873283863068, -0.0020361661445349455, -0.01669260859489441, -0.02034509740769863, -0.0032649326603859663, -1.4149657487869263, -0.0035764321219176054, -0.0023679095320403576, -0.00020776021119672805, -0.002465306082740426, -0.0018800693796947598, -0.038930635899305344, -0.002185339340940118, -0.06365305185317993, -0.053610093891620636, -0.002723438898101449], "finish_reason": "stop"}], "metrics": {"energy": 166.8972753219604, "energy_per_token": 3.2095629869607767, "time": 4.2213144, "time_per_token": 0.08117912307692307}}
{"outputs": [{"text": "# Create correlation matrix\n    corr = data.corr()\n\n    # Create heatmap\n    ax = sns.heatmap(corr, annot=True, cmap=\"Blues\")\n\n    # Set title\n    ax.set_title(\"Correlation Matrix\")\n\n    return ax", "tokens": ["#", " Create", " correlation", " matrix", "\n", "    ", "corr", " =", " data", ".", "corr", "()", "\n", "\n", "    ", "#", " Create", " heat", "map", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "corr", ",", " annot", "=", "True", ",", " c", "map", "=", "\"", "Bl", "ues", "\"", ")", "\n", "\n", "    ", "#", " Set", " title", "\n", "    ", "ax", ".", "set", "_", "title", "(", "\"", "Cor", "relation", " Matrix", "\"", ")", "\n", "\n", "    ", "return", " ax", "\n", "\n", "def"], "logprobs": [-1.2937016487121582, -1.6959398984909058, -1.5402038097381592, -0.004084103740751743, -0.03919752314686775, -0.0029343189671635628, -0.1654042750597, -0.802972137928009, -0.026745880022644997, -0.004444482736289501, -0.0041409702971577644, -0.0045393044129014015, -0.02352132648229599, -0.31567955017089844, -0.0015138844028115273, -0.007668935228139162, -2.564882755279541, -0.8467375040054321, -0.0011079132091253996, -0.26315629482269287, -0.0007961202645674348, -0.2518653869628906, -0.002918510464951396, -0.0035935367923229933, -3.6954811548639555e-06, -1.2636104656849056e-05, -6.627816765103489e-05, -5.960462772236497e-07, -8.010543388081715e-05, -0.017683230340480804, -0.10235347598791122, -0.26392117142677307, -0.013257566839456558, -0.008422685787081718, -0.4300701916217804, -0.21327272057533264, -0.012983899563550949, -0.27687695622444153, -0.481912761926651, -2.488800287246704, -9.536697689327411e-06, -0.0011458981316536665, -0.24836161732673645, -0.008942672051489353, -0.48878198862075806, -0.0007415643776766956, -0.028330396860837936, -0.2740921378135681, -0.3133496642112732, -0.051624640822410583, -0.00026925752172246575, -0.02213580161333084, -0.0009035557159222662, -0.0017922543920576572, -0.0051218015141785145, -0.00022194306075107306, -0.7537198066711426, -0.0017151420470327139, -0.000805053801741451, -9.798523387871683e-05, -0.0012915135594084859, -0.0005112771177664399, -0.03271918743848801, -0.0004606377915479243, -0.020728273317217827, -0.0009096298599615693, -0.12625446915626526, -0.0016369527438655496, -0.44773000478744507, -0.008635086007416248, -1.0040686130523682], "finish_reason": "stop"}], "metrics": {"energy": 225.69670748329168, "energy_per_token": 3.1788268659618546, "time": 5.903804, "time_per_token": 0.08315216901408451}}
