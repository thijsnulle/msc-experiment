{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(f\"The specified target_column '{target_column}' was not found in the CSV file.\")", "tokens": [" Value", "Error", "(", "f", "\"", "The", " specified", " target", "_", "column", " '", "{", "target", "_", "column", "}'", " was", " not", " found", " in", " the", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -1.5078020095825195, -0.49452662467956543, -0.036111246794462204, -0.5588955283164978, -0.0005536930402740836, -0.22762511670589447, -0.00011550712952157483, -4.172238186583854e-05, -4.6967357775429264e-05, -2.264974000354414e-06, -0.0009155849111266434, -0.7652719020843506, -0.0008744944934733212, -0.0008002892718650401, -0.007857958786189556, -0.002888675546273589, -0.08081701397895813, -2.264974000354414e-06, -0.01698214001953602, -0.11079473048448563, -0.0110014071688056, -0.0005025792634114623, -0.00023624490131624043], "finish_reason": "stop"}, {"text": " df.drop([target_column], axis=1)", "tokens": [" df", ".", "drop", "([", "target", "_", "column", "]", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0010284854797646403, -0.02465013787150383, -0.022223014384508133, -2.525385856628418, -0.011767260730266571, -0.00020692592079285532, -4.792098479811102e-05, -0.007369949948042631, -0.0006385194719769061, -0.00907333567738533, -0.007145445328205824, -0.004668764304369688, -0.005578900687396526, -0.04485791549086571], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0003885467885993421, -0.0015747062861919403, -0.00014780859055463225, -1.0371154530730564e-05, -2.3841855067985307e-07, -5.3881147323409095e-05, -0.003637247486039996], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00028165188268758357, -4.768360213347478e-06, -0.0033401434775441885, -5.07818695041351e-05, -0.00023493390472140163, -6.437280717364047e-06, -8.344646857949556e-07, -5.1377883210079744e-05, -4.8993817472364753e-05, -1.311301275563892e-06, -0.0003129946126136929, -0.0002849888114724308, -0.00042215018766000867, -4.0531076592742465e-06, -1.6689286894688848e-06, -3.576278118089249e-07, -1.6689286894688848e-06, -1.1205610462639015e-05, -0.16797031462192535, -0.002070070942863822, -0.0013618728844448924, -0.0003587556129787117, -0.0013510395074263215, -4.172316494077677e-06, 0.0, -0.0005671561229974031, -0.0028695380315184593, -3.4570634852570947e-06, -2.0265558760002023e-06, -0.39786508679389954, -0.04404022917151451, -1.1920922133867862e-06, -3.576278118089249e-07, -0.00020919041708111763, -0.12175481766462326, -0.004488987382501364, -0.009412318468093872, -0.0021093280520290136], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", "\n"], "logprobs": [-0.0247364342212677, -0.0003580405900720507, -0.0017749997787177563, -3.099436753473128e-06, 0.0, -0.00022909401741344482, -0.0033865978475660086, -3.814689989667386e-06, -1.9073468138230965e-06, -0.0048152911476790905, -0.049105577170848846, -1.311301275563892e-06, -3.576278118089249e-07, -9.691245941212401e-05, -0.11308928579092026, -0.003953617997467518, -0.4096866846084595], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.00020394629973452538, -2.3841830625315197e-06, 0.0, -3.3378044463461265e-05, -1.1920928244535389e-07, -2.658331868587993e-05, -0.04171545431017876, -7.152555099310121e-07, -0.0004629017203114927, -8.344646857949556e-07, -0.004226799122989178, -0.003053647233173251, -5.8412379075889476e-06, -0.00013374387344811112, -4.768370445162873e-07, -1.267256498336792, -0.018319223076105118], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-1.0967194612021558e-05, -3.814689989667386e-06, -0.0001392267586197704, -0.001997025217860937, -1.3947389561508317e-05, -0.0015956539427861571, -0.00010918975021922961, -2.1576648578047752e-05, -5.960462772236497e-07, -0.000596107158344239, -0.00019167017308063805], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00011002412065863609, -8.344646857949556e-07, -4.887569048150908e-06, -8.702239938429557e-06, -0.0002598424907773733, -0.00011228884250158444, -5.030505417380482e-05, -0.00025042734341695905, -0.00010287232726113871, -0.00021002470748499036], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred, target_names=df[target_column].unique())", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ",", " target", "_", "names", "=", "df", "[", "target", "_", "column", "]", ".", "unique", "())", "\n"], "logprobs": [-0.007797044236212969, -6.318072337307967e-06, -2.264974000354414e-06, -1.537788011773955e-05, -0.013005903922021389, -3.111314072157256e-05, -0.0019528857665136456, -0.0003131137927994132, -0.00022063204960431904, -2.861018856492592e-06, -3.576278118089249e-07, -0.5398911237716675, -2.136730194091797, -2.50339189733495e-06, -2.3007127310847864e-05, -0.045702945441007614, -0.814423680305481, -0.09714023023843765, -0.015195089392364025, -0.0001726001501083374, -9.97731985989958e-05, -0.03714313358068466, -0.001581966644152999, -0.02284284494817257, -0.024181311950087547, -0.00884188711643219], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.08176887035369873, -0.00010501786891836673, -0.15063102543354034, -0.036191847175359726, -0.00022873646230436862, -0.0009519098093733191, -8.106198947643861e-06, -0.0006939148879610002, -0.08790881186723709, -0.054921235889196396], "finish_reason": "stop"}, {"text": " [", "tokens": [" [", "\n"], "logprobs": [-0.7906850576400757, -1.463031530380249], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.004374577663838863, -0.0002324311062693596, -0.03973062336444855, -0.00019608005823101848], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.1890987753868103, -0.00011669908417388797, -0.08142948895692825, -0.05371979624032974, -0.008037485182285309], "finish_reason": "stop"}, {"text": " len(parts) == 5:", "tokens": [" len", "(", "parts", ")", " ==", " ", "5", ":", "\n"], "logprobs": [-0.5610173940658569, -2.3483953555114567e-05, -0.0002985746832564473, -0.0004463391669560224, -0.5305424332618713, -0.0005243833875283599, -1.69965660572052, -0.02664768695831299, -0.1731387972831726], "finish_reason": "stop"}, {"text": " \" \".join(parts[:4]) + \"\\t\\t\" + \" \".join(parts[4:])", "tokens": [" \"", " \"", ".", "join", "(", "parts", "[:", "4", "])", " +", " \"", "\\", "t", "\\", "t", "\"", " +", " \"", " \"", ".", "join", "(", "parts", "[", "4", ":", "])", "\n"], "logprobs": [-0.6217080354690552, -0.7927654385566711, -0.04955923557281494, -1.168244216387393e-05, -0.1495649665594101, -0.21246683597564697, -0.11593660712242126, -2.15822172164917, -0.045802704989910126, -0.35737860202789307, -0.16347990930080414, -1.3715736865997314, -0.0012503195321187377, -1.2873883247375488, -0.000447530735982582, -0.12986025214195251, -0.003951361868530512, -0.5458292365074158, -0.5185558199882507, -4.029192859889008e-05, -7.390948667307384e-06, -0.0005943200667388737, -0.0005864569102413952, -0.03005516342818737, -0.002638432662934065, -0.004599467851221561, -0.0023335388395935297, -0.009503128007054329], "finish_reason": "stop"}, {"text": " len(parts) == 1:  # Header line", "tokens": [" len", "(", "parts", ")", " ==", " ", "1", ":", "  ", "#", " Header", " line", "\n"], "logprobs": [-0.05725596100091934, -5.722029527532868e-06, -0.00042572495294734836, -3.0636318115284666e-05, -0.07288321852684021, -2.038458114839159e-05, -3.587074041366577, -0.3132174611091614, -0.03892111778259277, -2.3841855067985307e-07, -2.181955337524414, -1.4241435527801514, -0.26474401354789734], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.017718717455863953, -0.0003412379592191428, -0.013461885042488575, -0.0023035677149891853, -6.115249561844394e-05, -0.011059414595365524, -0.012052449397742748, -0.05134621635079384, -0.22602388262748718, -0.06104841083288193, -0.0018519884906709194, -0.0002536452084314078, -1.680836794548668e-05, -0.001859008800238371, -0.0006098079611547291, -0.003347628517076373, -0.0504344217479229, -0.11543721705675125, -0.0040250965394079685, -9.65590606938349e-06, -9.417489309271332e-06, -0.00018976318824570626, -2.825220326485578e-05, -7.414542778860778e-05, -0.003583796788007021, -0.01201134268194437, -0.000959531927946955, -1.4662635294371285e-05, -2.264974000354414e-06, -9.512448741588742e-05, -7.152301259338856e-05, -0.00011920218821614981, -0.006383505184203386, -0.006596101447939873, -0.010472227819263935, -0.0012482955353334546], "finish_reason": "stop"}, {"text": " line  # Keep other lines unchanged", "tokens": [" line", "  ", "#", " Keep", " other", " lines", " unchanged", "\n"], "logprobs": [-0.02129826694726944, -1.2568387985229492, -3.576278118089249e-07, -1.772704005241394, -2.4112966060638428, -0.011863039806485176, -0.23831255733966827, -0.0016957441112026572], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00010740180005086586, -0.00016330339713022113, -0.0014024670235812664, -1.1920928244535389e-07, -1.1920928244535389e-07, -5.960462772236497e-07, -0.014339732937514782, -0.0008381668012589216], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.001416633022017777, -0.0006503135664388537, -0.00023112009512260556, -6.496695277746767e-05, -0.00014840454969089478, -4.887569048150908e-06, -0.0005061537376604974, -0.0015739921946078539, -5.960462772236497e-07, -4.768370445162873e-07, -2.0265558760002023e-06, -0.001498410478234291, -0.00789426825940609], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report"], "logprobs": [-0.020693477243185043, -2.145764938177308e-06, -2.1576648578047752e-05], "finish_reason": "stop"}], "metrics": {"energy": 1830.8177095994956, "energy_per_token": 5.547932453331805, "time": 57.197803, "time_per_token": 0.17332667575757577}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' not found in the CSV file\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " the", " CS", "V", " file", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -0.9469004273414612, -0.01680643856525421, -0.21682710945606232, -9.822363062994555e-05, -5.4834770708112046e-05, -2.1815061700181104e-05, -3.6954811548639555e-06, -0.0008597253472544253, -0.023940183222293854, -0.003165118396282196, -0.007373500149697065, -0.13815172016620636, -0.1354019194841385, -2.861018856492592e-06, -0.009457901120185852, -1.7921160459518433, -0.00022968991834204644, -0.0003592322755139321], "finish_reason": "stop"}, {"text": " df.drop(columns=target_column)", "tokens": [" df", ".", "drop", "(", "columns", "=", "target", "_", "column", ")", "\n"], "logprobs": [-0.0010284854797646403, -0.02465013787150383, -0.022223014384508133, -0.08470829576253891, -0.8441824316978455, -1.2705762386322021, -0.0033756676129996777, -2.13382354559144e-05, -1.5020257706055418e-05, -0.13211862742900848, -0.02274310030043125], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0004129749140702188, -0.001774761825799942, -0.00018809456378221512, -1.490105023549404e-05, -2.3841855067985307e-07, -6.592056161025539e-05, -0.003301885211840272], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0003911683743353933, -4.529942543740617e-06, -0.0027296210173517466, -4.875540980719961e-05, -0.00017510310863144696, -8.34461570775602e-06, -4.768370445162873e-07, -4.815939246327616e-05, -4.5298504119273275e-05, -1.0728830375228426e-06, -0.00035696811391972005, -0.00025102324434556067, -0.0005092516075819731, -4.887569048150908e-06, -2.3841830625315197e-06, -3.576278118089249e-07, -1.7881377516459906e-06, -1.2278481335670222e-05, -0.09399934113025665, -0.00297722639515996, -0.0011544713051989675, -0.000439428084064275, -0.0012504386249929667, -3.933898824470816e-06, 0.0, -0.0006279165390878916, -0.003785825800150633, -3.576272320060525e-06, -2.264974000354414e-06, -0.38291504979133606, -0.045538030564785004, -1.0728830375228426e-06, -3.576278118089249e-07, -0.00019822540343739092, -0.1411273330450058, -0.004348228219896555, -0.008605184964835644, -0.0022380324080586433], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42)", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.021085506305098534, -0.00032669928623363376, -0.0021393049973994493, -2.0265558760002023e-06, 0.0, -0.00023529145983047783, -0.0026764783542603254, -3.933898824470816e-06, -2.7418097943154862e-06, -0.00571450823917985, -0.05151810497045517, -1.6689286894688848e-06, -2.3841855067985307e-07, -9.953480184776708e-05, -0.13742735981941223, -0.004667102824896574, -1.338280439376831, -0.007357051596045494], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators, random_state=42)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00020013237372040749, -2.3841830625315197e-06, 0.0, -2.7417760065873154e-05, -1.1920928244535389e-07, -3.325883881188929e-05, -0.04460769519209862, -7.152555099310121e-07, -0.00023779425828251988, -1.1920922133867862e-06, -0.004900112748146057, -0.005323401652276516, -5.8412379075889476e-06, -0.00013398226292338222, -5.960462772236497e-07, -0.28809866309165955, -0.08364488184452057, -7.152555099310121e-07, -2.7418097943154862e-06, -1.6212332411669195e-05, -0.040545087307691574, -0.0009582218481227756, -0.007375630084425211, -0.010246648453176022], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-9.059865078597795e-06, -3.933898824470816e-06, -0.00017951308109331876, -0.0021655934397131205, -1.0490362910786644e-05, -0.0016527815023437142, -0.00011896379146492109, -2.539125671319198e-05, -5.960462772236497e-07, -0.0006939148879610002, -0.00017712931730784476], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00011300401820335537, -5.960462772236497e-07, -5.125986263010418e-06, -6.794906312279636e-06, -0.00029094755882397294, -0.00011777184408856556, -5.817244164063595e-05, -0.00022539935889653862, -8.40390202938579e-05, -0.00020776021119672805], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.00750637985765934, -5.483612312673358e-06, -2.0265558760002023e-06, -1.4066597032069694e-05, -0.01374000683426857, -2.407998726994265e-05, -0.0025506841484457254, -0.0002416080387774855, -0.00015555603022221476, -3.2186455882765586e-06, -4.768370445162873e-07, -0.9982110261917114, -0.0065798768773674965], "finish_reason": "stop"}, {"text": " report.strip().split(\"\\n\")", "tokens": [" report", ".", "strip", "()", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.09050309658050537, -8.320462075062096e-05, -1.9394826889038086, -0.005510260351002216, -0.00019012074335478246, -0.004645863547921181, -0.019142765551805496, -0.0004127365828026086, -0.00573240639641881, -1.7881377516459906e-06, -0.0020418763160705566, -0.08070649951696396, -0.030337613075971603], "finish_reason": "stop"}, {"text": " [f\"{lines[0]}\\n\"]", "tokens": [" [", "f", "\"", "{", "lines", "[", "0", "]}\\", "n", "\"", "]", "\n"], "logprobs": [-0.7933543920516968, -1.036159634590149, -0.015049018897116184, -0.23374682664871216, -2.929041862487793, -0.003317212453112006, -0.39199593663215637, -1.4703447818756104, -0.011537142097949982, -0.22764210402965546, -0.04392067342996597, -0.2668650448322296], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.004734852351248264, -0.00034278715611435473, -0.04781303182244301, -0.00022849810193292797], "finish_reason": "stop"}, {"text": " [word.strip() for word in line.split()]", "tokens": [" [", "word", ".", "strip", "()", " for", " word", " in", " line", ".", "split", "()", "]", "\n"], "logprobs": [-1.9520037174224854, -0.25405317544937134, -0.10413049906492233, -0.5411068201065063, -0.0006503135664388537, -0.05998770147562027, -0.0014779369812458754, -2.0861407392658293e-05, -0.003543409751728177, -4.255681051290594e-05, -0.024286845698952675, -0.16790834069252014, -0.08735545724630356, -0.005063922610133886], "finish_reason": "stop"}, {"text": " len(parts) >= 5:  # Check if the line has enough parts to format", "tokens": [" len", "(", "parts", ")", " >=", " ", "5", ":", "  ", "#", " Check", " if", " the", " line", " has", " enough", " parts", " to", " format", "\n"], "logprobs": [-0.6384804844856262, -2.3245540432981215e-05, -0.0003636414185166359, -0.0005104430601932108, -1.4992399215698242, -0.00041976699139922857, -1.8005895614624023, -0.02763708122074604, -2.284877300262451, -1.0371154530730564e-05, -0.7656234502792358, -0.044708020985126495, -1.6948460340499878, -0.054295800626277924, -0.2749446928501129, -1.9843164682388306, -0.4390357732772827, -0.8097954392433167, -0.3464224338531494, -0.09040747582912445], "finish_reason": "stop"}, {"text": " f\"class {parts[0]}  {parts[1]}  {parts[2]}  {parts[3]}  {parts[4]}\"", "tokens": [" f", "\"", "class", " {", "parts", "[", "0", "]}", "  ", "{", "parts", "[", "1", "]}", "  ", "{", "parts", "[", "2", "]}", "  ", "{", "parts", "[", "3", "]}", "  ", "{", "parts", "[", "4", "]}", "\"", "\n"], "logprobs": [-1.1773500442504883, -0.013668866828083992, -0.4744583070278168, -0.06624969840049744, -0.002794410800561309, -0.002268837997689843, -0.014055665582418442, -0.30674874782562256, -2.0870349407196045, -1.3108606338500977, -0.0007195267826318741, -0.005408416967839003, -0.015108318999409676, -0.9904139637947083, -0.8768036961555481, -0.001520549994893372, -4.3748852476710454e-05, -0.00041738382424227893, -0.012584325857460499, -0.002142040990293026, -0.03538499027490616, -0.0004981707315891981, -7.152531907195225e-06, -0.00033098942367359996, -0.0011157722910866141, -0.008962993510067463, -0.2849995195865631, -0.018307870253920555, -0.0010001424234360456, -0.0137323634698987, -0.0009358317474834621, -0.009985139593482018, -0.020928502082824707, -0.005586962215602398], "finish_reason": "stop"}, {"text": " len(parts) == 4:  # Avg/Accuracy metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "4", ":", "  ", "#", " Av", "g", "/", "Acc", "uracy", " metrics", "\n"], "logprobs": [-0.0658465251326561, -5.245195097813848e-06, -0.0008039817912504077, -3.814624506048858e-05, -0.06614593416452408, -2.6940935640595853e-05, -0.8572155833244324, -0.059725407510995865, -0.03825174644589424, -1.0728830375228426e-06, -3.2341043949127197, -0.01589297503232956, -2.7294392585754395, -1.3284039497375488, -0.054518431425094604, -0.27286216616630554, -0.024870863184332848], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>15}{parts[2]:>15}{parts[3]:>15}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "5", "}{", "parts", "[", "2", "]:", ">", "1", "5", "}{", "parts", "[", "3", "]:", ">", "1", "5", "}\"", "\n"], "logprobs": [-0.020535126328468323, -0.00022468426323030144, -0.014449365437030792, -0.002280493965372443, -0.00010382589971413836, -0.014518335461616516, -0.009703610092401505, -0.06703895330429077, -0.27900615334510803, -0.06330142170190811, -0.0017177602276206017, -0.0003854485403280705, -2.169585604860913e-05, -0.0023617250844836235, -0.0006129055400379002, -0.002795005217194557, -0.044087111949920654, -2.8781797885894775, -0.0010118131758645177, -1.2993727978027891e-05, -5.8412379075889476e-06, -0.0001829695247579366, -2.2291887944447808e-05, -0.0001102625101339072, -0.014588944613933563, -0.22567835450172424, -0.0006719953380525112, -1.0371154530730564e-05, -4.887569048150908e-06, -9.905801562126726e-05, -8.332382276421413e-05, -0.00011002412065863609, -0.018458614125847816, -0.019663287326693535, -0.004949104506522417, -0.0005532164941541851], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.01742119900882244, -0.39767560362815857], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00011872540198964998, -0.00015317220822907984, -0.0018116504652425647, -1.1920928244535389e-07, -1.1920928244535389e-07, -7.152555099310121e-07, -0.01298319362103939, -0.0008015995263122022], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.0020034497138112783, -0.000653411028906703, -0.0002335037279408425, -6.3774932641536e-05, -0.00016985881666187197, -6.556489552167477e-06, -0.0004077318590134382, -0.002292625606060028, -5.960462772236497e-07, -7.152555099310121e-07, -1.6689286894688848e-06, -0.0012040039291605353, -0.008637804538011551], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.024315817281603813, -1.9073468138230965e-06, -3.2782016205601394e-05, -0.2672693729400635], "finish_reason": "stop"}], "metrics": {"energy": 1937.8344573364259, "energy_per_token": 5.458688612215284, "time": 54.031063, "time_per_token": 0.15220017746478876}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df:", "tokens": [" target", "_", "column", " not", " in", " df", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -2.167153835296631, -0.000987637904472649], "finish_reason": "stop"}, {"text": " ValueError(f\"The specified target column '{target_column}' was not found in the CSV file.\")", "tokens": [" Value", "Error", "(", "f", "\"", "The", " specified", " target", " column", " '", "{", "target", "_", "column", "}'", " was", " not", " found", " in", " the", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -1.5078020095825195, -0.49452662467956543, -0.036111246794462204, -0.8555683493614197, -0.19068767130374908, -0.0001370812824461609, -5.5549986427649856e-05, -5.066266385256313e-05, -4.529942543740617e-06, -0.0011406589765101671, -0.6727874279022217, -0.0006921279709786177, -0.0009860896971076727, -0.01565640978515148, -0.0022184066474437714, -0.11831048876047134, -2.264974000354414e-06, -0.020310988649725914, -0.09931022673845291, -0.008035002276301384, -0.0005427317810244858, -0.00024136967840604484], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column])", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "])", "\n"], "logprobs": [-0.0010284854797646403, -0.02465013787150383, -0.022223014384508133, -0.08470829576253891, -0.8441824316978455, -0.33156949281692505, -0.0037955641746520996, -0.00016330339713022113, -3.3854863431770355e-05, -0.11351387202739716, -0.022316398099064827], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0004129749140702188, -0.001774761825799942, -0.00018809456378221512, -1.490105023549404e-05, -2.3841855067985307e-07, -6.592056161025539e-05, -0.003301885211840272], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0003911683743353933, -4.529942543740617e-06, -0.0027296210173517466, -4.875540980719961e-05, -0.00017510310863144696, -8.34461570775602e-06, -4.768370445162873e-07, -4.815939246327616e-05, -4.5298504119273275e-05, -1.0728830375228426e-06, -0.00035696811391972005, -0.00025102324434556067, -0.0005092516075819731, -4.887569048150908e-06, -2.3841830625315197e-06, -3.576278118089249e-07, -1.7881377516459906e-06, -1.2278481335670222e-05, -0.09399934113025665, -0.00297722639515996, -0.0011544713051989675, -0.000439428084064275, -0.0012504386249929667, -3.933898824470816e-06, 0.0, -0.0006279165390878916, -0.003785825800150633, -3.576272320060525e-06, -2.264974000354414e-06, -0.38291504979133606, -0.045538030564785004, -1.0728830375228426e-06, -3.576278118089249e-07, -0.00019822540343739092, -0.1411273330450058, -0.004348228219896555, -0.008605184964835644, -0.0022380324080586433], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", "\n"], "logprobs": [-0.021085506305098534, -0.00032669928623363376, -0.0021393049973994493, -2.0265558760002023e-06, 0.0, -0.00023529145983047783, -0.0026764783542603254, -3.933898824470816e-06, -2.7418097943154862e-06, -0.00571450823917985, -0.05151810497045517, -1.6689286894688848e-06, -2.3841855067985307e-07, -9.953480184776708e-05, -0.13742735981941223, -0.004667102824896574, -0.34028321504592896], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.00020013237372040749, -2.3841830625315197e-06, 0.0, -2.7417760065873154e-05, -1.1920928244535389e-07, -3.325883881188929e-05, -0.04460769519209862, -7.152555099310121e-07, -0.00023779425828251988, -1.1920922133867862e-06, -0.004900112748146057, -0.005323401652276516, -5.8412379075889476e-06, -0.00013398226292338222, -5.960462772236497e-07, -1.385321021080017, -0.01976754702627659], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-1.0967194612021558e-05, -3.814689989667386e-06, -0.00011205045302631333, -0.0017746428493410349, -1.1205610462639015e-05, -0.0017141900025308132, -9.202533692587167e-05, -1.8358061424805783e-05, -5.960462772236497e-07, -0.0007627676823176444, -0.00018940561858471483], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00011801023356383666, -8.344646857949556e-07, -5.483612312673358e-06, -6.9141146923357155e-06, -0.00024256148026324809, -0.00011562632425921038, -5.173549288883805e-05, -0.00024732868769206107, -0.0001003691868390888, -0.0002119316632160917], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred, output_dict=False)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ",", " output", "_", "dict", "=", "False", ")", "\n"], "logprobs": [-0.007643027231097221, -6.079655122448457e-06, -2.264974000354414e-06, -1.5258672647178173e-05, -0.013949869200587273, -2.8132995794294402e-05, -0.0025913489516824484, -0.00029225845355540514, -0.00016985881666187197, -2.9802276912960224e-06, -7.152555099310121e-07, -0.4854186177253723, -0.28904828429222107, -4.410734163684538e-06, -0.001935277134180069, -7.497983460780233e-05, -1.1259360313415527, -0.02067572809755802, -0.015248158015310764], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.08880660682916641, -8.535020606359467e-05, -0.1330540031194687, -0.039671391248703, -0.0001699779968475923, -0.001105888863094151, -7.510157047363464e-06, -0.0007388246012851596, -0.07706935703754425, -0.05102444067597389], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.7102745175361633, -0.0026945495046675205], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.004813274368643761, -0.0002574589161667973, -0.056749019771814346, -0.00020001317898277193], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.20655779540538788, -0.00015031162183731794, -0.07923516631126404, -0.047567758709192276, -0.008830307051539421], "finish_reason": "stop"}, {"text": " parts:", "tokens": [" parts", ":", "\n"], "logprobs": [-1.0737128257751465, -0.05205328017473221, -0.1290348470211029], "finish_reason": "stop"}, {"text": " \"\".join(", "tokens": [" \"", "\"", ".", "join", "(", "\n"], "logprobs": [-0.6215705275535583, -3.2062830924987793, -0.03802718222141266, -0.0014322272036224604, -0.30214717984199524, -0.2975304424762726], "finish_reason": "stop"}, {"text": " len(parts) == 2:  # Accuracy or Average", "tokens": [" len", "(", "parts", ")", " ==", " ", "2", ":", "  ", "#", " Accuracy", " or", " Average", "\n"], "logprobs": [-0.06221386417746544, -4.887569048150908e-06, -0.00041368984966538846, -3.45700973412022e-05, -0.07249778509140015, -2.52720492426306e-05, -1.8993020057678223, -0.06544151157140732, -0.02962312288582325, -8.344646857949556e-07, -1.0223199129104614, -1.549264907836914, -1.9830809831619263, -0.8312312960624695], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.02251269668340683, -0.0003978414461016655, -0.01736648939549923, -0.0022155519109219313, -9.190614218823612e-05, -0.008743691258132458, -0.01009985338896513, -0.04572048410773277, -0.23485392332077026, -0.056325092911720276, -0.002152984729036689, -0.00042965717148035765, -2.2411095415009186e-05, -0.0021787970326840878, -0.0006152882124297321, -0.0031294680666178465, -0.0450684130191803, -0.09895601123571396, -0.003981640096753836, -7.629365427419543e-06, -1.1801649634435307e-05, -0.0001991788885788992, -2.825220326485578e-05, -7.235741941258311e-05, -0.003451345022767782, -0.011002350598573685, -0.0008771148277446628, -1.8596476365928538e-05, -2.7418097943154862e-06, -0.00010001159535022452, -6.01988795096986e-05, -0.0001494772732257843, -0.007150653284043074, -0.007381665054708719, -0.01183735765516758, -0.0009835887467488647], "finish_reason": "stop"}, {"text": " line  # No change for other lines", "tokens": [" line", "  ", "#", " No", " change", " for", " other", " lines", "\n"], "logprobs": [-0.021182263270020485, -1.1129525899887085, -3.576278118089249e-07, -1.1633683443069458, -2.717919111251831, -0.1590549647808075, -0.1251111775636673, -0.02840409241616726, -0.02351410686969757], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.0001227780303452164, -0.00015567521040793508, -0.001729065552353859, -1.1920928244535389e-07, -1.1920928244535389e-07, -4.768370445162873e-07, -0.01190662570297718, -0.0006618693005293608], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.00160089076962322, -0.0008091036579571664, -0.00020001317898277193, -6.139089964563027e-05, -0.00016675988445058465, -5.960446742392378e-06, -0.0004262015863787383, -0.001822478836402297, -7.152555099310121e-07, -4.768370445162873e-07, -1.1920922133867862e-06, -0.001290918211452663, -0.008924477733671665], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.02377873845398426, -2.145764938177308e-06, -2.4437606043647975e-05, -0.2859024703502655], "finish_reason": "stop"}], "metrics": {"energy": 1919.6846534843448, "energy_per_token": 6.574262511932687, "time": 52.327766, "time_per_token": 0.17920467808219176}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' not found in the CSV file.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " the", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -0.9469004273414612, -0.01680643856525421, -0.21682710945606232, -9.822363062994555e-05, -5.4834770708112046e-05, -2.1815061700181104e-05, -3.6954811548639555e-06, -0.0008597253472544253, -0.023940183222293854, -0.003165118396282196, -0.007373500149697065, -0.13815172016620636, -0.1354019194841385, -2.861018856492592e-06, -0.009457901120185852, -0.19991479814052582, -0.004037206526845694, -0.00022825974156148732, -0.00020346954988781363], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0010284854797646403, -0.02465013787150383, -0.022223014384508133, -0.08470829576253891, -0.5664648413658142, -5.173549288883805e-05, -5.8053239627042785e-05, -0.00026556302327662706, -0.002214600332081318, -0.0013159195659682155, -0.001189835020340979, -0.005670177284628153, -0.03244064003229141], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0004717191040981561, -0.0017579830018803477, -0.00017248096992261708, -1.3351351299206726e-05, -7.152555099310121e-07, -5.185469490243122e-05, -0.004135509487241507], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=123)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "1", "2", "3", ")", "\n"], "logprobs": [-0.00033849707688204944, -5.125986263010418e-06, -0.0025027638766914606, -5.471556869451888e-05, -0.00018082413589581847, -7.033323527139146e-06, -8.344646857949556e-07, -4.95898348162882e-05, -5.566918844124302e-05, -1.1920922133867862e-06, -0.0003446938644628972, -0.00023529145983047783, -0.0004766043566633016, -5.006777428206988e-06, -1.9073468138230965e-06, -4.768370445162873e-07, -2.264974000354414e-06, -1.1086402082582936e-05, -0.11307033151388168, -0.002468160120770335, -0.0011597104603424668, -0.000440262199845165, -0.0012190061388537288, -3.2186455882765586e-06, 0.0, -0.000577402301132679, -0.0031351721845567226, -4.529942543740617e-06, -2.3841830625315197e-06, -0.3980180323123932, -0.053000230342149734, -1.1920922133867862e-06, -3.576278118089249e-07, -0.0001714082609396428, -2.888062000274658, -1.238656997680664, -0.0856146588921547, -0.3706309497356415, -0.0036757304333150387], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", "\n"], "logprobs": [-0.025995133444666862, -0.0002806984703056514, -0.0023746881633996964, -2.264974000354414e-06, 0.0, -0.0002330270071979612, -0.0028832077514380217, -4.172316494077677e-06, -2.50339189733495e-06, -0.005052061751484871, -0.05606510490179062, -1.5497195136049413e-06, -3.576278118089249e-07, -0.00010442188795423135, -0.13698017597198486, -0.005204224959015846, -0.3790714144706726], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators, random_state=42)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00017450717859901488, -2.50339189733495e-06, 0.0, -3.242440288886428e-05, -1.1920928244535389e-07, -2.8013790142722428e-05, -0.050777461379766464, -7.152555099310121e-07, -0.0003890234511345625, -9.536738616588991e-07, -0.004108679015189409, -0.004223356489092112, -6.556489552167477e-06, -0.0001284993631998077, -3.576278118089249e-07, -0.327829509973526, -0.10683886706829071, -8.344646857949556e-07, -3.3378546504536644e-06, -1.4781842764932662e-05, -0.05019976943731308, -0.0008505540899932384, -0.00603282917290926, -0.009456838481128216], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-1.0251946150674485e-05, -3.576272320060525e-06, -0.00012694983161054552, -0.002477792324498296, -1.0609570381348021e-05, -0.0016279076226055622, -0.00011336160969221964, -2.4318398573086597e-05, -4.768370445162873e-07, -0.0008394769974984229, -0.0002026352594839409], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00011717586312443018, -5.960462772236497e-07, -4.291525328881107e-06, -8.106198947643861e-06, -0.00029309268575161695, -0.00011908298620255664, -5.9602869441732764e-05, -0.00030751267331652343, -0.00010001159535022452, -0.0002094287920044735], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred, output_dict=False)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ",", " output", "_", "dict", "=", "False", ")", "\n"], "logprobs": [-0.0068888068199157715, -5.006777428206988e-06, -2.264974000354414e-06, -1.4662635294371285e-05, -0.012845155782997608, -3.242440288886428e-05, -0.0028720342088490725, -0.0002397011558059603, -0.00019095504831057042, -3.099436753473128e-06, -4.768370445162873e-07, -0.6044704914093018, -0.29373955726623535, -5.602820692729438e-06, -0.0026090650353580713, -9.131014667218551e-05, -1.4434010982513428, -0.022090910002589226, -0.014410472474992275], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.07792345434427261, -0.00010442188795423135, -0.1235988661646843, -0.041769422590732574, -0.00025340684805996716, -0.0011262509506195784, -9.894321920000948e-06, -0.0006618693005293608, -0.08032495528459549, -0.04819945991039276], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.6648120284080505, -0.002186171943321824], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.005913144908845425, -0.00031275625224225223, -0.05083683505654335, -0.0001811817055568099], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.2325771003961563, -0.00014757021563127637, -0.11067745834589005, -0.04860129579901695, -0.007708800956606865], "finish_reason": "stop"}, {"text": " len(parts) > 0 and parts[0].isnumeric():", "tokens": [" len", "(", "parts", ")", " >", " ", "0", " and", " parts", "[", "0", "]", ".", "is", "numeric", "():", "\n"], "logprobs": [-0.49349039793014526, -2.276871418871451e-05, -0.00037329382030293345, -0.0005222387262620032, -2.0120036602020264, -0.0003095386200584471, -0.7969040274620056, -1.5704060792922974, -0.29960140585899353, -0.01619306020438671, -0.006506804842501879, -0.0013934198068454862, -0.569342851638794, -0.09772084653377533, -1.1328034400939941, -0.019712379202246666, -0.15294645726680756], "finish_reason": "stop"}, {"text": " f\"{' '.join(parts[:3]):<6} {' '.join(parts[3:]):<13}\"", "tokens": [" f", "\"", "{'", " '", ".", "join", "(", "parts", "[:", "3", "]", "):", "<", "6", "}", " {'", " '", ".", "join", "(", "parts", "[", "3", ":]", "):", "<", "1", "3", "}\"", "\n"], "logprobs": [-1.1670007705688477, -0.013912602327764034, -2.475301742553711, -0.1899946928024292, -0.12498672306537628, -0.0023231918457895517, -0.0033964586909860373, -0.0002847504511009902, -0.03730197623372078, -1.6219395399093628, -0.08616143465042114, -0.26253294944763184, -0.22562061250209808, -3.548128604888916, -1.104929804801941, -0.1134558767080307, -0.03570390120148659, -0.0007397775771096349, -1.311301275563892e-06, -0.0009943069890141487, -0.003316262038424611, -0.006137215532362461, -0.01905002072453499, -0.11024290323257446, -0.012396899983286858, -0.7349649667739868, -1.2602972984313965, -3.0780105590820312, -0.10142640024423599, -0.01518041267991066], "finish_reason": "stop"}, {"text": " len(parts) == 7:  # Avg metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "7", ":", "  ", "#", " Av", "g", " metrics", "\n"], "logprobs": [-0.057637181133031845, -5.364403477869928e-06, -0.0006136203301139176, -3.194758028257638e-05, -0.07065093517303467, -2.5629668016335927e-05, -3.6398677825927734, -0.01971004158258438, -0.023510614410042763, -1.311301275563892e-06, -2.993351936340332, -0.013984077610075474, -1.3220640420913696, -0.16991473734378815], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.020439356565475464, -0.0003067976504098624, -0.015597143210470676, -0.003647818695753813, -8.83301836438477e-05, -0.012078478932380676, -0.010533332824707031, -0.059053417295217514, -0.2481604516506195, -0.05771404132246971, -0.0019230222096666694, -0.00029976642690598965, -1.6689160474925302e-05, -0.00195526541210711, -0.0007045170641504228, -0.003324578981846571, -0.04776632413268089, -0.10456395149230957, -0.0032396235037595034, -9.536697689327411e-06, -1.1205610462639015e-05, -0.00025769727653823793, -2.3007127310847864e-05, -7.366862701019272e-05, -0.003020013216882944, -0.011165281757712364, -0.0008830699953250587, -1.2397689715726301e-05, -1.7881377516459906e-06, -9.285972191719338e-05, -5.61460001335945e-05, -0.00015507926582358778, -0.00704885832965374, -0.007515608333051205, -0.01369708776473999, -0.0010811204556375742], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.018893985077738762, -0.37806078791618347], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00010227633902104571, -0.00015484087634831667, -0.0018156962469220161, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.1920922133867862e-06, -0.011402557604014874, -0.0007033258443698287], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.0017740478506311774, -0.0008449559682048857, -0.000176652567461133, -5.411955135059543e-05, -0.00014745102089364082, -3.099436753473128e-06, -0.00032264748006127775, -0.0021130156237632036, -7.152555099310121e-07, -5.960462772236497e-07, -1.5497195136049413e-06, -0.0014365125680342317, -0.00882534496486187], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.018422452732920647, -2.622600959512056e-06, -2.729855441430118e-05, -0.23267818987369537], "finish_reason": "stop"}], "metrics": {"energy": 2564.6190574970237, "energy_per_token": 7.724756197280192, "time": 67.782845, "time_per_token": 0.20416519578313252}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' not found in the CSV file.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " the", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -0.9469004273414612, -0.01680643856525421, -0.21682710945606232, -9.822363062994555e-05, -5.4834770708112046e-05, -2.1815061700181104e-05, -3.6954811548639555e-06, -0.0008597253472544253, -0.023940183222293854, -0.003165118396282196, -0.007373500149697065, -0.13815172016620636, -0.1354019194841385, -2.861018856492592e-06, -0.009457901120185852, -0.19991479814052582, -0.004037206526845694, -0.00022825974156148732, -0.00020346954988781363], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0010284854797646403, -0.02465013787150383, -0.022223014384508133, -0.08470829576253891, -0.5664648413658142, -5.173549288883805e-05, -5.8053239627042785e-05, -0.00026556302327662706, -0.002214600332081318, -0.0013159195659682155, -0.001189835020340979, -0.005670177284628153, -0.03244064003229141], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0004717191040981561, -0.0017579830018803477, -0.00017248096992261708, -1.3351351299206726e-05, -7.152555099310121e-07, -5.185469490243122e-05, -0.004135509487241507], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00033849707688204944, -5.125986263010418e-06, -0.0025027638766914606, -5.471556869451888e-05, -0.00018082413589581847, -7.033323527139146e-06, -8.344646857949556e-07, -4.95898348162882e-05, -5.566918844124302e-05, -1.1920922133867862e-06, -0.0003446938644628972, -0.00023529145983047783, -0.0004766043566633016, -5.006777428206988e-06, -1.9073468138230965e-06, -4.768370445162873e-07, -2.264974000354414e-06, -1.1086402082582936e-05, -0.11307033151388168, -0.002468160120770335, -0.0011597104603424668, -0.000440262199845165, -0.0012190061388537288, -3.2186455882765586e-06, 0.0, -0.000577402301132679, -0.0031351721845567226, -4.529942543740617e-06, -2.3841830625315197e-06, -0.3980180323123932, -0.053000230342149734, -1.1920922133867862e-06, -3.576278118089249e-07, -0.0001714082609396428, -0.14189183712005615, -0.004507975187152624, -0.009544101543724537, -0.002530351048335433], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", "\n"], "logprobs": [-0.025995133444666862, -0.0002806984703056514, -0.0023746881633996964, -2.264974000354414e-06, 0.0, -0.0002330270071979612, -0.0028832077514380217, -4.172316494077677e-06, -2.50339189733495e-06, -0.005052061751484871, -0.05606510490179062, -1.5497195136049413e-06, -3.576278118089249e-07, -0.00010442188795423135, -0.13698017597198486, -0.005204224959015846, -0.3790714144706726], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.00017450717859901488, -2.50339189733495e-06, 0.0, -3.242440288886428e-05, -1.1920928244535389e-07, -2.8013790142722428e-05, -0.050777461379766464, -7.152555099310121e-07, -0.0003890234511345625, -9.536738616588991e-07, -0.004108679015189409, -0.004223356489092112, -6.556489552167477e-06, -0.0001284993631998077, -3.576278118089249e-07, -1.2749348878860474, -0.020525433123111725], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-1.0251946150674485e-05, -3.576272320060525e-06, -0.00012778419477399439, -0.0020154656376689672, -7.271740287251305e-06, -0.00167598866391927, -0.00010024998482549563, -2.4437606043647975e-05, -5.960462772236497e-07, -0.0007017772295512259, -0.00018690270371735096], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-9.917721035890281e-05, -4.768370445162873e-07, -5.602820692729438e-06, -7.152531907195225e-06, -0.0002885640424210578, -0.0001250427303602919, -5.340433563105762e-05, -0.00027891082572750747, -9.369411418447271e-05, -0.0002252801787108183], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.0074220155365765095, -6.6756979322235566e-06, -3.099436753473128e-06, -1.7881233361549675e-05, -0.009413971565663815, -2.95634672511369e-05, -0.0018218838376924396, -0.0002805792901199311, -0.00019894051365554333, -3.576272320060525e-06, -4.768370445162873e-07, -0.8490244746208191, -0.006214105989784002], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.08506178855895996, -8.606540359323844e-05, -0.1406143754720688, -0.04766721650958061, -0.00021300431399140507, -0.0010851691477000713, -9.894321920000948e-06, -0.0008694920688867569, -0.09179918467998505, -0.04393276572227478], "finish_reason": "stop"}, {"text": " [", "tokens": [" [", "\n"], "logprobs": [-0.7590474486351013, -1.5428053140640259], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.005482636857777834, -0.0002686616498976946, -0.05430607497692108, -0.0001728385395836085], "finish_reason": "stop"}, {"text": " [part.strip() for part in line.split()]", "tokens": [" [", "part", ".", "strip", "()", " for", " part", " in", " line", ".", "split", "()", "]", "\n"], "logprobs": [-1.9527599811553955, -1.8442952632904053, -0.11843089759349823, -0.12605123221874237, -0.0008423355757258832, -0.05596783012151718, -0.00011455356434453279, -1.3351351299206726e-05, -0.008705167099833488, -0.00010871296399272978, -0.02891252003610134, -0.23359914124011993, -0.05020827054977417, -0.009133108891546726], "finish_reason": "stop"}, {"text": " parts:", "tokens": [" parts", ":", "\n"], "logprobs": [-1.1828665733337402, -0.05747715011239052, -0.15744835138320923], "finish_reason": "stop"}, {"text": " f\"class {parts[0]} {parts[1]:>8} {parts[2]:>6} {parts[3]:>6} {parts[4]:>6}\"", "tokens": [" f", "\"", "class", " {", "parts", "[", "0", "]}", " {", "parts", "[", "1", "]:", ">", "8", "}", " {", "parts", "[", "2", "]:", ">", "6", "}", " {", "parts", "[", "3", "]:", ">", "6", "}", " {", "parts", "[", "4", "]:", ">", "6", "}\"", "\n"], "logprobs": [-1.2395720481872559, -0.012692502699792385, -0.5924800038337708, -0.06486362963914871, -0.002061981474980712, -0.0025662605185061693, -0.016444742679595947, -0.29022160172462463, -1.5392701625823975, -0.0020839895587414503, -0.011615739203989506, -0.021928466856479645, -0.1551371067762375, -0.44761770963668823, -1.5511574745178223, -0.09978321194648743, -0.009402871131896973, -3.182837463100441e-05, -9.643566590966657e-05, -0.004164950922131538, -0.0006549597019329667, -0.0019194527994841337, -0.42444077134132385, -0.004133135080337524, -0.0023036866914480925, -9.417489309271332e-06, -0.00011097769311163574, -0.0012051946250721812, -0.0004109491710551083, -0.0004680253332480788, -0.13793188333511353, -0.03349418565630913, -0.06290265172719955, -0.0015261442167684436, -0.0264801774173975, -0.0006852186052128673, -0.018615538254380226, -0.0031322012655436993, -1.7358179092407227, -0.040037039667367935, -0.00265507772564888], "finish_reason": "stop"}, {"text": " len(parts) == 4:  # Overall accuracy and averages", "tokens": [" len", "(", "parts", ")", " ==", " ", "4", ":", "  ", "#", " Overall", " accuracy", " and", " averages", "\n"], "logprobs": [-0.05776917561888695, -5.8412379075889476e-06, -0.0005168771021999419, -2.8729025871143676e-05, -0.059764374047517776, -2.2172682292875834e-05, -0.8331466913223267, -0.07460436224937439, -0.0675392597913742, -8.344646857949556e-07, -0.7282466292381287, -0.7157747745513916, -2.647897481918335, -0.8563458323478699, -0.018126429989933968], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.02018587477505207, -0.0005497612874023616, -0.02040618658065796, -0.0031237637158483267, -7.128461584215984e-05, -0.011966230347752571, -0.009722145274281502, -0.046323418617248535, -0.2626500129699707, -0.05639033019542694, -0.0019770378712564707, -0.0005155664402991533, -1.4424220353248529e-05, -0.00265507772564888, -0.0005125877796672285, -0.0032617244869470596, -0.04504117742180824, -0.11206480860710144, -0.0035437659826129675, -6.6756979322235566e-06, -8.821448318485636e-06, -0.00018153927521780133, -2.7179348762729205e-05, -6.103329360485077e-05, -0.0032340388279408216, -0.011010131798684597, -0.0007381098694168031, -1.4543427823809907e-05, -2.3841830625315197e-06, -8.713819261174649e-05, -6.0794889577664435e-05, -0.00018821375851985067, -0.005845949519425631, -0.006629496812820435, -0.011335376650094986, -0.0011697123991325498], "finish_reason": "stop"}, {"text": " line  # Keep other lines unchanged", "tokens": [" line", "  ", "#", " Keep", " other", " lines", " unchanged", "\n"], "logprobs": [-0.01687008887529373, -1.0597525835037231, -3.576278118089249e-07, -1.6659184694290161, -2.345200777053833, -0.010502072982490063, -0.28303268551826477, -0.0016113643068820238], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.0001280225842492655, -0.000144709600135684, -0.0018806643784046173, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.0728830375228426e-06, -0.013773046433925629, -0.0007089247228577733], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.0018078426364809275, -0.0010236029047518969, -0.00018106251081917435, -5.8887653722194955e-05, -0.00017033556650858372, -4.529942543740617e-06, -0.0003582789213396609, -0.0018744770204648376, -4.768370445162873e-07, -4.768370445162873e-07, -1.4305104514278355e-06, -0.0012829415500164032, -0.0073655713349580765], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.018650757148861885, -2.622600959512056e-06, -2.288792165927589e-05, -0.2629411220550537], "finish_reason": "stop"}], "metrics": {"energy": 1602.1383408870702, "energy_per_token": 4.840297102377855, "time": 58.841858, "time_per_token": 0.17776996374622356}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(f\"Column '{target_column}' not found in the CSV file.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " the", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -2.112910270690918, -0.3627035319805145, -0.0001787979417713359, -7.247662142617628e-05, -1.585470999998506e-05, -5.722029527532868e-06, -0.0020998113323003054, -0.0450877845287323, -0.00430134404450655, -0.011185204610228539, -0.10556728392839432, -0.11965610086917877, -2.861018856492592e-06, -0.008999854326248169, -0.21261776983737946, -0.010641850531101227, -0.00020966715237591416, -0.000376034586224705], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column])", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "])", "\n"], "logprobs": [-0.0010284854797646403, -0.02465013787150383, -0.022223014384508133, -0.08470829576253891, -0.8441824316978455, -0.33156949281692505, -0.0037955641746520996, -0.00016330339713022113, -3.3854863431770355e-05, -0.11351387202739716, -0.022316398099064827], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0004129749140702188, -0.001774761825799942, -0.00018809456378221512, -1.490105023549404e-05, -2.3841855067985307e-07, -6.592056161025539e-05, -0.003301885211840272], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0003911683743353933, -4.529942543740617e-06, -0.0027296210173517466, -4.875540980719961e-05, -0.00017510310863144696, -8.34461570775602e-06, -4.768370445162873e-07, -4.815939246327616e-05, -4.5298504119273275e-05, -1.0728830375228426e-06, -0.00035696811391972005, -0.00025102324434556067, -0.0005092516075819731, -4.887569048150908e-06, -2.3841830625315197e-06, -3.576278118089249e-07, -1.7881377516459906e-06, -1.2278481335670222e-05, -0.09399934113025665, -0.00297722639515996, -0.0011544713051989675, -0.000439428084064275, -0.0012504386249929667, -3.933898824470816e-06, 0.0, -0.0006279165390878916, -0.003785825800150633, -3.576272320060525e-06, -2.264974000354414e-06, -0.38291504979133606, -0.045538030564785004, -1.0728830375228426e-06, -3.576278118089249e-07, -0.00019822540343739092, -0.1411273330450058, -0.004348228219896555, -0.008605184964835644, -0.0022380324080586433], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", "\n"], "logprobs": [-0.021085506305098534, -0.00032669928623363376, -0.0021393049973994493, -2.0265558760002023e-06, 0.0, -0.00023529145983047783, -0.0026764783542603254, -3.933898824470816e-06, -2.7418097943154862e-06, -0.00571450823917985, -0.05151810497045517, -1.6689286894688848e-06, -2.3841855067985307e-07, -9.953480184776708e-05, -0.13742735981941223, -0.004667102824896574, -0.34028321504592896], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.00020013237372040749, -2.3841830625315197e-06, 0.0, -2.7417760065873154e-05, -1.1920928244535389e-07, -3.325883881188929e-05, -0.04460769519209862, -7.152555099310121e-07, -0.00023779425828251988, -1.1920922133867862e-06, -0.004900112748146057, -0.005323401652276516, -5.8412379075889476e-06, -0.00013398226292338222, -5.960462772236497e-07, -1.385321021080017, -0.01976754702627659], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-1.0967194612021558e-05, -3.814689989667386e-06, -0.00011205045302631333, -0.0017746428493410349, -1.1205610462639015e-05, -0.0017141900025308132, -9.202533692587167e-05, -1.8358061424805783e-05, -5.960462772236497e-07, -0.0007627676823176444, -0.00018940561858471483], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00011801023356383666, -8.344646857949556e-07, -5.483612312673358e-06, -6.9141146923357155e-06, -0.00024256148026324809, -0.00011562632425921038, -5.173549288883805e-05, -0.00024732868769206107, -0.0001003691868390888, -0.0002119316632160917], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred, output_dict=False)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ",", " output", "_", "dict", "=", "False", ")", "\n"], "logprobs": [-0.007643027231097221, -6.079655122448457e-06, -2.264974000354414e-06, -1.5258672647178173e-05, -0.013949869200587273, -2.8132995794294402e-05, -0.0025913489516824484, -0.00029225845355540514, -0.00016985881666187197, -2.9802276912960224e-06, -7.152555099310121e-07, -0.4854186177253723, -0.28904828429222107, -4.410734163684538e-06, -0.001935277134180069, -7.497983460780233e-05, -1.1259360313415527, -0.02067572809755802, -0.015248158015310764], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.08880660682916641, -8.535020606359467e-05, -0.1330540031194687, -0.039671391248703, -0.0001699779968475923, -0.001105888863094151, -7.510157047363464e-06, -0.0007388246012851596, -0.07706935703754425, -0.05102444067597389], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.7102745175361633, -0.0026945495046675205], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.004813274368643761, -0.0002574589161667973, -0.056749019771814346, -0.00020001317898277193], "finish_reason": "stop"}, {"text": " [word.ljust(8) for word in line.split()]", "tokens": [" [", "word", ".", "l", "just", "(", "8", ")", " for", " word", " in", " line", ".", "split", "()", "]", "\n"], "logprobs": [-1.8855509757995605, -0.2070448100566864, -0.13497912883758545, -0.6558084487915039, -1.1920922133867862e-06, -0.0004359725280664861, -1.4711716175079346, -0.027191579341888428, -0.25047263503074646, -7.390703103737906e-05, -6.318072337307967e-06, -0.000513064325787127, -3.0397906812140718e-05, -0.06089744716882706, -0.010037658736109734, -0.009294809773564339, -0.024178752675652504], "finish_reason": "stop"}, {"text": " not parts:", "tokens": [" not", " parts", ":", "\n"], "logprobs": [-2.4837260246276855, -0.003735352074727416, -0.011596649885177612, -0.2107631117105484], "finish_reason": "stop"}, {"text": " \" \".join(parts[:2]).rjust(20)", "tokens": [" \"", " \"", ".", "join", "(", "parts", "[:", "2", "])", ".", "r", "just", "(", "2", "0", ")", "\n"], "logprobs": [-0.6215705275535583, -0.7997203469276428, -0.0714450478553772, -1.1801649634435307e-05, -0.2032073736190796, -0.19218209385871887, -0.11303573101758957, -1.348293423652649, -0.9911599159240723, -1.1930122375488281, -0.5461234450340271, -0.00245496048592031, -4.672895011026412e-05, -1.789069652557373, -0.2590257525444031, -0.010797174647450447, -2.062528610229492], "finish_reason": "stop"}, {"text": " len(parts) == 4:  # Overall accuracy", "tokens": [" len", "(", "parts", ")", " ==", " ", "4", ":", "  ", "#", " Overall", " accuracy", "\n"], "logprobs": [-0.06221386417746544, -4.887569048150908e-06, -0.00041368984966538846, -3.45700973412022e-05, -0.07249778509140015, -2.52720492426306e-05, -0.8980546593666077, -0.08538439869880676, -0.04101167991757393, -8.344646857949556e-07, -0.7762819528579712, -0.6240644454956055, -1.3061342239379883], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<25}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "2", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.02253076247870922, -0.00045563330058939755, -0.019418727606534958, -0.004726547282189131, -9.77468371274881e-05, -0.01268238015472889, -0.008642885833978653, -0.052350401878356934, -1.7645182609558105, -0.9178062677383423, -0.0020828000269830227, -0.00020239688456058502, -2.6464111215318553e-05, -0.0005143749876879156, -0.00036066226311959326, -0.0019062458304688334, -0.09153465926647186, -0.40188464522361755, -0.006182947661727667, -3.2186455882765586e-06, -1.5258672647178173e-05, -7.772143726469949e-05, -1.6212332411669195e-05, -5.030505417380482e-05, -0.0018755479250103235, -0.007468517404049635, -0.0013948483392596245, -3.099436753473128e-06, -1.6689286894688848e-06, -5.98412734689191e-05, -7.116541382856667e-05, -9.655486064730212e-05, -0.000936189026106149, -0.0026940738316625357, -0.008176425471901894, -0.0004727914638351649], "finish_reason": "stop"}, {"text": " line  # No formatting needed", "tokens": [" line", "  ", "#", " No", " formatting", " needed", "\n"], "logprobs": [-0.02501271665096283, -1.0525352954864502, -3.576278118089249e-07, -1.0322635173797607, -0.3596884310245514, -1.9538341760635376, -0.5267608165740967], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00012599628826137632, -0.0001754606782924384, -0.0018552012043073773, -1.1920928244535389e-07, -1.1920928244535389e-07, -7.152555099310121e-07, -0.012346506118774414, -0.0007613382767885923], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.0017626238986849785, -0.0008401916129514575, -0.00018869050836656243, -5.900685573578812e-05, -0.00014625910262111574, -4.291525328881107e-06, -0.00031132620642893016, -0.0013053239090368152, -7.152555099310121e-07, -4.768370445162873e-07, -1.7881377516459906e-06, -0.001311990898102522, -0.00882534496486187], "finish_reason": "stop"}, {"text": " formatted_report<|endoftext|>import os", "tokens": [" formatted", "_", "report", "<", "|", "end", "of", "text", "|>", "import", " os", "\n"], "logprobs": [-0.020051514729857445, -2.145764938177308e-06, -2.098061486321967e-05, -1.857486605644226, -3.576272320060525e-06, -3.933898824470816e-06, -3.099436753473128e-06, -3.40932747349143e-05, -0.1346808820962906, -0.9691203236579895, -2.130544662475586, -0.04139411076903343], "finish_reason": "stop"}], "metrics": {"energy": 2031.1607693681722, "energy_per_token": 6.367275139085179, "time": 53.350216, "time_per_token": 0.1672420564263323}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' not found in the CSV file\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " the", " CS", "V", " file", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -0.9469004273414612, -0.01680643856525421, -0.21682710945606232, -9.822363062994555e-05, -5.4834770708112046e-05, -2.1815061700181104e-05, -3.6954811548639555e-06, -0.0008597253472544253, -0.023940183222293854, -0.003165118396282196, -0.007373500149697065, -0.13815172016620636, -0.1354019194841385, -2.861018856492592e-06, -0.009457901120185852, -1.7921160459518433, -0.00022968991834204644, -0.0003592322755139321], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0010284854797646403, -0.02465013787150383, -0.022223014384508133, -0.08470829576253891, -0.5664648413658142, -5.173549288883805e-05, -5.8053239627042785e-05, -0.00026556302327662706, -0.002214600332081318, -0.0013159195659682155, -0.001189835020340979, -0.005670177284628153, -0.03244064003229141], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0004717191040981561, -0.0017579830018803477, -0.00017248096992261708, -1.3351351299206726e-05, -7.152555099310121e-07, -5.185469490243122e-05, -0.004135509487241507], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00033849707688204944, -5.125986263010418e-06, -0.0025027638766914606, -5.471556869451888e-05, -0.00018082413589581847, -7.033323527139146e-06, -8.344646857949556e-07, -4.95898348162882e-05, -5.566918844124302e-05, -1.1920922133867862e-06, -0.0003446938644628972, -0.00023529145983047783, -0.0004766043566633016, -5.006777428206988e-06, -1.9073468138230965e-06, -4.768370445162873e-07, -2.264974000354414e-06, -1.1086402082582936e-05, -0.11307033151388168, -0.002468160120770335, -0.0011597104603424668, -0.000440262199845165, -0.0012190061388537288, -3.2186455882765586e-06, 0.0, -0.000577402301132679, -0.0031351721845567226, -4.529942543740617e-06, -2.3841830625315197e-06, -0.3980180323123932, -0.053000230342149734, -1.1920922133867862e-06, -3.576278118089249e-07, -0.0001714082609396428, -0.14189183712005615, -0.004507975187152624, -0.009544101543724537, -0.002530351048335433], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", "\n"], "logprobs": [-0.025995133444666862, -0.0002806984703056514, -0.0023746881633996964, -2.264974000354414e-06, 0.0, -0.0002330270071979612, -0.0028832077514380217, -4.172316494077677e-06, -2.50339189733495e-06, -0.005052061751484871, -0.05606510490179062, -1.5497195136049413e-06, -3.576278118089249e-07, -0.00010442188795423135, -0.13698017597198486, -0.005204224959015846, -0.3790714144706726], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators, random_state=42)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00017450717859901488, -2.50339189733495e-06, 0.0, -3.242440288886428e-05, -1.1920928244535389e-07, -2.8013790142722428e-05, -0.050777461379766464, -7.152555099310121e-07, -0.0003890234511345625, -9.536738616588991e-07, -0.004108679015189409, -0.004223356489092112, -6.556489552167477e-06, -0.0001284993631998077, -3.576278118089249e-07, -0.327829509973526, -0.10683886706829071, -8.344646857949556e-07, -3.3378546504536644e-06, -1.4781842764932662e-05, -0.05019976943731308, -0.0008505540899932384, -0.00603282917290926, -0.009456838481128216], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-1.0251946150674485e-05, -3.576272320060525e-06, -0.00012694983161054552, -0.002477792324498296, -1.0609570381348021e-05, -0.0016279076226055622, -0.00011336160969221964, -2.4318398573086597e-05, -4.768370445162873e-07, -0.0008394769974984229, -0.0002026352594839409], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00011717586312443018, -5.960462772236497e-07, -4.291525328881107e-06, -8.106198947643861e-06, -0.00029309268575161695, -0.00011908298620255664, -5.9602869441732764e-05, -0.00030751267331652343, -0.00010001159535022452, -0.0002094287920044735], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred, output_dict=False)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ",", " output", "_", "dict", "=", "False", ")", "\n"], "logprobs": [-0.0068888068199157715, -5.006777428206988e-06, -2.264974000354414e-06, -1.4662635294371285e-05, -0.012845155782997608, -3.242440288886428e-05, -0.0028720342088490725, -0.0002397011558059603, -0.00019095504831057042, -3.099436753473128e-06, -4.768370445162873e-07, -0.6044704914093018, -0.29373955726623535, -5.602820692729438e-06, -0.0026090650353580713, -9.131014667218551e-05, -1.4434010982513428, -0.022090910002589226, -0.014410472474992275], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.07792345434427261, -0.00010442188795423135, -0.1235988661646843, -0.041769422590732574, -0.00025340684805996716, -0.0011262509506195784, -9.894321920000948e-06, -0.0006618693005293608, -0.08032495528459549, -0.04819945991039276], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.6648120284080505, -0.002186171943321824], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.005913144908845425, -0.00031275625224225223, -0.05083683505654335, -0.0001811817055568099], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.2325771003961563, -0.00014757021563127637, -0.11067745834589005, -0.04860129579901695, -0.007708800956606865], "finish_reason": "stop"}, {"text": " len(parts) == 5:", "tokens": [" len", "(", "parts", ")", " ==", " ", "5", ":", "\n"], "logprobs": [-0.49349039793014526, -2.276871418871451e-05, -0.00037329382030293345, -0.0005222387262620032, -0.4982058107852936, -0.0006912940880283713, -1.7466481924057007, -0.024782253429293633, -0.14111077785491943], "finish_reason": "stop"}, {"text": " \" \".join(parts[:4]) + \" \" * 8 + parts[-1]", "tokens": [" \"", " \"", ".", "join", "(", "parts", "[:", "4", "])", " +", " \"", " \"", " *", " ", "8", " +", " parts", "[-", "1", "]", "\n"], "logprobs": [-0.6970443725585938, -0.8335493206977844, -0.06742481887340546, -1.07287787614041e-05, -0.15227286517620087, -0.19557802379131317, -0.13709065318107605, -2.1205151081085205, -0.03460558503866196, -0.38409534096717834, -0.1536034345626831, -0.6403185725212097, -0.09554988890886307, -0.042083557695150375, -1.5873534679412842, -0.006202259100973606, -0.2370506227016449, -1.6778806447982788, -0.015712739899754524, -0.00037472377880476415, -0.08162374794483185], "finish_reason": "stop"}, {"text": " len(parts) == 4:  # Average or overall metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "4", ":", "  ", "#", " Average", " or", " overall", " metrics", "\n"], "logprobs": [-0.056429654359817505, -5.245195097813848e-06, -0.0006273209000937641, -3.0874729418428615e-05, -0.07611610740423203, -2.5629668016335927e-05, -0.9055843353271484, -0.06259577721357346, -0.04767517372965813, -9.536738616588991e-07, -1.9951101541519165, -2.2232422828674316, -2.625178337097168, -0.4124983847141266, -0.006115889176726341], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.022983703762292862, -0.0003321811091154814, -0.014860645867884159, -0.003748534945771098, -8.487341256113723e-05, -0.012392190285027027, -0.009730173274874687, -0.05003105476498604, -0.22271592915058136, -0.058184728026390076, -0.0023292573168873787, -0.0004328744253143668, -1.9550132492440753e-05, -0.0021363310515880585, -0.0007129749283194542, -0.0032021934166550636, -0.0461365208029747, -0.10058428347110748, -0.0039907824248075485, -7.867782187531702e-06, -1.2040065485052764e-05, -0.00021479207498487085, -2.47952248173533e-05, -8.797258487902582e-05, -0.0030788423027843237, -0.01132158562541008, -0.0008177988929674029, -1.1920858014491387e-05, -2.0265558760002023e-06, -9.953480184776708e-05, -6.282132380874828e-05, -0.00016723664884921163, -0.007978829555213451, -0.007306876126676798, -0.014674468897283077, -0.0011634016409516335], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.020042985677719116, -0.4755023121833801], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-9.405170567333698e-05, -0.00016830935783218592, -0.001453415839932859, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.4305104514278355e-06, -0.012081069871783257, -0.0007727735792286694], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.0017899933736771345, -0.0006264869589358568, -0.0002269487304147333, -5.674201020156033e-05, -0.00019393471302464604, -4.410734163684538e-06, -0.00032491172896698117, -0.0015375708462670445, -7.152555099310121e-07, -5.960462772236497e-07, -1.5497195136049413e-06, -0.0013231817865744233, -0.008992884308099747], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.01912732794880867, -2.861018856492592e-06, -2.777537883957848e-05, -0.2316138744354248], "finish_reason": "stop"}], "metrics": {"energy": 2206.6817471580507, "energy_per_token": 7.027648876299525, "time": 57.011326, "time_per_token": 0.18156473248407642}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' not found in CSV file.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -0.9469004273414612, -0.01680643856525421, -0.21682710945606232, -9.822363062994555e-05, -5.4834770708112046e-05, -2.1815061700181104e-05, -3.6954811548639555e-06, -0.0008597253472544253, -0.023940183222293854, -0.003165118396282196, -0.007373500149697065, -2.128389835357666, -9.894321920000948e-06, -0.018597519025206566, -0.24978980422019958, -0.005318777170032263, -0.00022182388056535274, -0.0002574589161667973], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0010284854797646403, -0.02465013787150383, -0.022223014384508133, -0.08470829576253891, -0.5664648413658142, -5.173549288883805e-05, -5.8053239627042785e-05, -0.00026556302327662706, -0.002214600332081318, -0.0013159195659682155, -0.001189835020340979, -0.005670177284628153, -0.03244064003229141], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0004717191040981561, -0.0017579830018803477, -0.00017248096992261708, -1.3351351299206726e-05, -7.152555099310121e-07, -5.185469490243122e-05, -0.004135509487241507], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ")", "\n"], "logprobs": [-0.00033849707688204944, -5.125986263010418e-06, -0.0025027638766914606, -5.471556869451888e-05, -0.00018082413589581847, -7.033323527139146e-06, -8.344646857949556e-07, -4.95898348162882e-05, -5.566918844124302e-05, -1.1920922133867862e-06, -0.0003446938644628972, -0.00023529145983047783, -0.0004766043566633016, -5.006777428206988e-06, -1.9073468138230965e-06, -4.768370445162873e-07, -2.264974000354414e-06, -1.1086402082582936e-05, -0.11307033151388168, -0.002468160120770335, -0.0011597104603424668, -0.000440262199845165, -0.0012190061388537288, -3.2186455882765586e-06, 0.0, -0.000577402301132679, -0.0031351721845567226, -4.529942543740617e-06, -2.3841830625315197e-06, -1.114050030708313, -0.0010437285527586937], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", "\n"], "logprobs": [-0.025995133444666862, -0.0002806984703056514, -0.0023746881633996964, -2.264974000354414e-06, 0.0, -0.0002330270071979612, -0.0028832077514380217, -4.172316494077677e-06, -2.50339189733495e-06, -0.005052061751484871, -0.05606510490179062, -1.5497195136049413e-06, -3.576278118089249e-07, -0.00010442188795423135, -0.13698017597198486, -0.005204224959015846, -0.3790714144706726], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators, random_state=42)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00017450717859901488, -2.50339189733495e-06, 0.0, -3.242440288886428e-05, -1.1920928244535389e-07, -2.8013790142722428e-05, -0.050777461379766464, -7.152555099310121e-07, -0.0003890234511345625, -9.536738616588991e-07, -0.004108679015189409, -0.004223356489092112, -6.556489552167477e-06, -0.0001284993631998077, -3.576278118089249e-07, -0.327829509973526, -0.10683886706829071, -8.344646857949556e-07, -3.3378546504536644e-06, -1.4781842764932662e-05, -0.05019976943731308, -0.0008505540899932384, -0.00603282917290926, -0.009456838481128216], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-1.0251946150674485e-05, -3.576272320060525e-06, -0.00012694983161054552, -0.002477792324498296, -1.0609570381348021e-05, -0.0016279076226055622, -0.00011336160969221964, -2.4318398573086597e-05, -4.768370445162873e-07, -0.0008394769974984229, -0.0002026352594839409], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00011717586312443018, -5.960462772236497e-07, -4.291525328881107e-06, -8.106198947643861e-06, -0.00029309268575161695, -0.00011908298620255664, -5.9602869441732764e-05, -0.00030751267331652343, -0.00010001159535022452, -0.0002094287920044735], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.0068888068199157715, -5.006777428206988e-06, -2.264974000354414e-06, -1.4662635294371285e-05, -0.012845155782997608, -3.242440288886428e-05, -0.0028720342088490725, -0.0002397011558059603, -0.00019095504831057042, -3.099436753473128e-06, -4.768370445162873e-07, -0.7907111644744873, -0.0055675203911960125], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.08605369925498962, -9.07141511561349e-05, -0.13862194120883942, -0.03959599882364273, -0.0002146728802472353, -0.0007768235518597066, -1.0251946150674485e-05, -0.0007121411035768688, -0.08245716989040375, -0.03947934880852699], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.6528127193450928, -0.0022657455410808325], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.004937953781336546, -0.00026806574896909297, -0.048224564641714096, -0.0001915509783430025], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.23134632408618927, -0.00013720047718379647, -0.09144121408462524, -0.04142030328512192, -0.007592274807393551], "finish_reason": "stop"}, {"text": " parts:", "tokens": [" parts", ":", "\n"], "logprobs": [-0.8884428143501282, -0.061452291905879974, -0.11076986789703369], "finish_reason": "stop"}, {"text": " f\"{parts[0]:10}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}{parts[4]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "1", "0", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}{", "parts", "[", "4", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-1.2358226776123047, -0.014443137682974339, -1.032010793685913, -0.0015118608716875315, -0.0011213688412681222, -0.023188607767224312, -0.15504410862922668, -2.9761016368865967, -0.38230279088020325, -0.8494701385498047, -0.0036682477220892906, -0.0019913145806640387, -0.01194114051759243, -0.00852611381560564, -1.7782187461853027, -0.3312167227268219, -0.19073930382728577, -0.2035662978887558, -6.4490144723095e-05, -8.797258487902582e-05, -0.006366921588778496, -9.464769391342998e-05, -0.0007781338645145297, -0.035160131752491, -0.07665815204381943, -0.0029126862064003944, -2.3007127310847864e-05, -3.3854863431770355e-05, -0.0016477829776704311, -0.00016127715934999287, -0.0003493413969408721, -0.004871167708188295, -0.05287857726216316, -0.11498358100652695, -0.0023363931104540825, -0.019048968330025673, -0.0002711643755901605, -0.001149589428678155, -0.0012236495967954397, -0.02878071740269661, -0.052145957946777344, -0.09076277166604996, -0.0012766314903274179], "finish_reason": "stop"}, {"text": " len(parts) == 3:  # Average metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "3", ":", "  ", "#", " Average", " metrics", "\n"], "logprobs": [-0.060409966856241226, -5.602820692729438e-06, -0.000641974329482764, -2.932505594799295e-05, -0.061160217970609665, -2.5152843591058627e-05, -1.2348947525024414, -0.05007164925336838, -0.028935451060533524, -8.344646857949556e-07, -1.3660959005355835, -0.2407860904932022, -0.08078039437532425], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.020419735461473465, -0.0003108495147898793, -0.016403580084443092, -0.003107839496806264, -6.949660019017756e-05, -0.01181403174996376, -0.009503009729087353, -0.04906585067510605, -0.2103344053030014, -0.04924460127949715, -0.0020437799394130707, -0.00047469791024923325, -2.0146166207268834e-05, -0.001894704531878233, -0.0008208957733586431, -0.002702039433643222, -0.04323534667491913, -0.09828048944473267, -0.0029659350402653217, -9.536697689327411e-06, -1.847726889536716e-05, -0.0002300474588992074, -2.47952248173533e-05, -8.737658936297521e-05, -0.0030317793134599924, -0.011782576330006123, -0.0007714632665738463, -1.6331539882230572e-05, -2.264974000354414e-06, -9.60780744208023e-05, -5.98412734689191e-05, -0.00016318420239258558, -0.008012060075998306, -0.010113660246133804, -0.009822252206504345, -0.0011784045491367579], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.024604661390185356, -0.476509153842926], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00014065706636756659, -0.00013219437096267939, -0.0016801540041342378, -1.1920928244535389e-07, -1.1920928244535389e-07, -7.152555099310121e-07, -0.011010957881808281, -0.0007503792876377702], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.002003925619646907, -0.000742398202419281, -0.00021288513380568475, -5.9960475482512265e-05, -0.00017998983094003052, -4.410734163684538e-06, -0.0003499372396618128, -0.0016265984158962965, -5.960462772236497e-07, -4.768370445162873e-07, -2.0265558760002023e-06, -0.0013868723763152957, -0.00875669065862894], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.01970852166414261, -2.0265558760002023e-06, -2.098061486321967e-05, -0.25399336218833923], "finish_reason": "stop"}], "metrics": {"energy": 1597.877109881401, "energy_per_token": 5.072625745655242, "time": 54.081062, "time_per_token": 0.17168591111111112}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df:", "tokens": [" target", "_", "column", " not", " in", " df", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -2.167153835296631, -0.000987637904472649], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' not found in the CSV file.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " the", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -0.9469004273414612, -0.01680643856525421, -0.21682710945606232, -9.822363062994555e-05, -5.4834770708112046e-05, -2.1815061700181104e-05, -3.6954811548639555e-06, -0.0008597253472544253, -0.023940183222293854, -0.003165118396282196, -0.007373500149697065, -0.13815172016620636, -0.1354019194841385, -2.861018856492592e-06, -0.009457901120185852, -0.19991479814052582, -0.004037206526845694, -0.00022825974156148732, -0.00020346954988781363], "finish_reason": "stop"}, {"text": " df.drop([target_column], axis=1)", "tokens": [" df", ".", "drop", "([", "target", "_", "column", "]", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0010284854797646403, -0.02465013787150383, -0.022223014384508133, -2.525385856628418, -0.011767260730266571, -0.00020692592079285532, -4.792098479811102e-05, -0.007369949948042631, -0.0006385194719769061, -0.00907333567738533, -0.007145445328205824, -0.004668764304369688, -0.005578900687396526, -0.04485791549086571], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0003885467885993421, -0.0015747062861919403, -0.00014780859055463225, -1.0371154530730564e-05, -2.3841855067985307e-07, -5.3881147323409095e-05, -0.003637247486039996], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00028165188268758357, -4.768360213347478e-06, -0.0033401434775441885, -5.07818695041351e-05, -0.00023493390472140163, -6.437280717364047e-06, -8.344646857949556e-07, -5.1377883210079744e-05, -4.8993817472364753e-05, -1.311301275563892e-06, -0.0003129946126136929, -0.0002849888114724308, -0.00042215018766000867, -4.0531076592742465e-06, -1.6689286894688848e-06, -3.576278118089249e-07, -1.6689286894688848e-06, -1.1205610462639015e-05, -0.16797031462192535, -0.002070070942863822, -0.0013618728844448924, -0.0003587556129787117, -0.0013510395074263215, -4.172316494077677e-06, 0.0, -0.0005671561229974031, -0.0028695380315184593, -3.4570634852570947e-06, -2.0265558760002023e-06, -0.39786508679389954, -0.04404022917151451, -1.1920922133867862e-06, -3.576278118089249e-07, -0.00020919041708111763, -0.12175481766462326, -0.004488987382501364, -0.009412318468093872, -0.0021093280520290136], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", "\n"], "logprobs": [-0.0247364342212677, -0.0003580405900720507, -0.0017749997787177563, -3.099436753473128e-06, 0.0, -0.00022909401741344482, -0.0033865978475660086, -3.814689989667386e-06, -1.9073468138230965e-06, -0.0048152911476790905, -0.049105577170848846, -1.311301275563892e-06, -3.576278118089249e-07, -9.691245941212401e-05, -0.11308928579092026, -0.003953617997467518, -0.4096866846084595], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.00020394629973452538, -2.3841830625315197e-06, 0.0, -3.3378044463461265e-05, -1.1920928244535389e-07, -2.658331868587993e-05, -0.04171545431017876, -7.152555099310121e-07, -0.0004629017203114927, -8.344646857949556e-07, -0.004226799122989178, -0.003053647233173251, -5.8412379075889476e-06, -0.00013374387344811112, -4.768370445162873e-07, -1.267256498336792, -0.018319223076105118], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-1.0967194612021558e-05, -3.814689989667386e-06, -0.0001392267586197704, -0.001997025217860937, -1.3947389561508317e-05, -0.0015956539427861571, -0.00010918975021922961, -2.1576648578047752e-05, -5.960462772236497e-07, -0.000596107158344239, -0.00019167017308063805], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00011002412065863609, -8.344646857949556e-07, -4.887569048150908e-06, -8.702239938429557e-06, -0.0002598424907773733, -0.00011228884250158444, -5.030505417380482e-05, -0.00025042734341695905, -0.00010287232726113871, -0.00021002470748499036], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.007797044236212969, -6.318072337307967e-06, -2.264974000354414e-06, -1.537788011773955e-05, -0.013005903922021389, -3.111314072157256e-05, -0.0019528857665136456, -0.0003131137927994132, -0.00022063204960431904, -2.861018856492592e-06, -3.576278118089249e-07, -0.8744882345199585, -0.007084724493324757], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.07917966693639755, -0.0001037067049765028, -0.13799305260181427, -0.038956549018621445, -0.00021669900161214173, -0.001029557315632701, -1.168244216387393e-05, -0.0007566926069557667, -0.09692959487438202, -0.049434322863817215], "finish_reason": "stop"}, {"text": " [", "tokens": [" [", "\n"], "logprobs": [-0.7422789931297302, -1.4882843494415283], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.006224294658750296, -0.0002743821241892874, -0.05747681111097336, -0.00016783259343355894], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.21542023122310638, -0.00013004888023715466, -0.10830879211425781, -0.0640699714422226, -0.008198062889277935], "finish_reason": "stop"}, {"text": " len(parts) == 0:  # Ignore empty lines", "tokens": [" len", "(", "parts", ")", " ==", " ", "0", ":", "  ", "#", " Ign", "ore", " empty", " lines", "\n"], "logprobs": [-0.574492335319519, -2.3007127310847864e-05, -0.00041130665340460837, -0.0004661188868340105, -0.5270499587059021, -0.000773250067140907, -1.8717267513275146, -0.014665070921182632, -2.7074668407440186, -3.731181277544238e-05, -3.2209744453430176, -0.005405571311712265, -0.038280315697193146, -0.008352821692824364, -0.007877946831285954], "finish_reason": "stop"}, {"text": " \"{:<12s}{:<12s}{:<12s}{:<12s}{:<12s}\".format(*parts)", "tokens": [" \"", "{:", "<", "1", "2", "s", "}{", ":<", "1", "2", "s", "}{", ":<", "1", "2", "s", "}{", ":<", "1", "2", "s", "}{", ":<", "1", "2", "s", "}\"", ".", "format", "(*", "parts", ")", "\n"], "logprobs": [-0.761005699634552, -1.233722448348999, -0.2357039600610733, -0.6622185707092285, -1.9176013469696045, -0.6081857681274414, -0.45734527707099915, -0.436241090297699, -0.18168650567531586, -0.2924153506755829, -0.09918133914470673, -0.001348301419056952, -0.0005143749876879156, -0.02150060050189495, -0.02639414742588997, -0.00033098942367359996, -0.0033182818442583084, -0.0006933192489668727, -0.009850817732512951, -0.03403114527463913, -0.0002269487304147333, -0.16018164157867432, -0.013845589943230152, -0.07105306535959244, -0.03631037473678589, -0.0014417502097785473, -0.036010172218084335, -0.0017600059509277344, -4.1483970562694594e-05, -0.25743821263313293, -0.0002494739310350269, -0.0029403807129710913, -0.0029616563115268946], "finish_reason": "stop"}, {"text": " len(parts) == 4:  # Average metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "4", ":", "  ", "#", " Average", " metrics", "\n"], "logprobs": [-0.05905723571777344, -5.602820692729438e-06, -0.0004102342063561082, -3.45700973412022e-05, -0.06809187680482864, -2.7417760065873154e-05, -0.9180446267127991, -0.051265131682157516, -0.048760030418634415, -1.311301275563892e-06, -2.002105712890625, -0.3581983745098114, -0.13680624961853027], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<25}{parts[1]:>15}{parts[2]:>15}{parts[3]:>15}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "2", "5", "}{", "parts", "[", "1", "]:", ">", "1", "5", "}{", "parts", "[", "2", "]:", ">", "1", "5", "}{", "parts", "[", "3", "]:", ">", "1", "5", "}\"", "\n"], "logprobs": [-0.020078036934137344, -0.0004076126788277179, -0.018982183188199997, -0.003143728245049715, -7.64102369430475e-05, -0.011284810490906239, -0.009179295040667057, -0.042528185993433, -1.9357722997665405, -0.8372974991798401, -0.0018578189192339778, -0.0002416080387774855, -1.823885577323381e-05, -0.0005171154043637216, -0.0003817544784396887, -0.0022781153675168753, -0.06898049265146255, -1.270920991897583, -0.0029103087726980448, -9.894321920000948e-06, -3.123234637314454e-05, -9.7508447652217e-05, -2.1219027985353023e-05, -7.748303323751315e-05, -0.0038607600145041943, -0.024551505222916603, -0.0014156806282699108, -3.3378546504536644e-06, -2.50339189733495e-06, -7.557583012385294e-05, -0.00011062010162277147, -8.05822346592322e-05, -0.0035289174411445856, -0.004603502340614796, -0.00658129807561636, -0.0004773192631546408], "finish_reason": "stop"}, {"text": " line  # No formatting required", "tokens": [" line", "  ", "#", " No", " formatting", " required", "\n"], "logprobs": [-0.027028918266296387, -1.1735689640045166, -4.768370445162873e-07, -1.1402044296264648, -0.4592745304107666, -2.9722630977630615, -0.5788587927818298], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00013302871957421303, -0.000164018536452204, -0.0010713557712733746, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.311301275563892e-06, -0.010597382672131062, -0.0008017186191864312], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.0021771318279206753, -0.0008518642862327397, -0.00022837892174720764, -5.4596363042946905e-05, -0.00013672371278516948, -4.410734163684538e-06, -0.0003215749457012862, -0.00172371044754982, -5.960462772236497e-07, -5.960462772236497e-07, -1.5497195136049413e-06, -0.0014387742849066854, -0.00942873302847147], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.01973014511168003, -2.0265558760002023e-06, -2.1815061700181104e-05, -0.2696394622325897], "finish_reason": "stop"}], "metrics": {"energy": 1672.965123624801, "energy_per_token": 5.195543862188823, "time": 58.433537, "time_per_token": 0.18147061180124224}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' not found in the CSV file.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " the", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -0.9469004273414612, -0.01680643856525421, -0.21682710945606232, -9.822363062994555e-05, -5.4834770708112046e-05, -2.1815061700181104e-05, -3.6954811548639555e-06, -0.0008597253472544253, -0.023940183222293854, -0.003165118396282196, -0.007373500149697065, -0.13815172016620636, -0.1354019194841385, -2.861018856492592e-06, -0.009457901120185852, -0.19991479814052582, -0.004037206526845694, -0.00022825974156148732, -0.00020346954988781363], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column])", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "])", "\n"], "logprobs": [-0.0010284854797646403, -0.02465013787150383, -0.022223014384508133, -0.08470829576253891, -0.8441824316978455, -0.33156949281692505, -0.0037955641746520996, -0.00016330339713022113, -3.3854863431770355e-05, -0.11351387202739716, -0.022316398099064827], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0004129749140702188, -0.001774761825799942, -0.00018809456378221512, -1.490105023549404e-05, -2.3841855067985307e-07, -6.592056161025539e-05, -0.003301885211840272], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0003911683743353933, -4.529942543740617e-06, -0.0027296210173517466, -4.875540980719961e-05, -0.00017510310863144696, -8.34461570775602e-06, -4.768370445162873e-07, -4.815939246327616e-05, -4.5298504119273275e-05, -1.0728830375228426e-06, -0.00035696811391972005, -0.00025102324434556067, -0.0005092516075819731, -4.887569048150908e-06, -2.3841830625315197e-06, -3.576278118089249e-07, -1.7881377516459906e-06, -1.2278481335670222e-05, -0.09399934113025665, -0.00297722639515996, -0.0011544713051989675, -0.000439428084064275, -0.0012504386249929667, -3.933898824470816e-06, 0.0, -0.0006279165390878916, -0.003785825800150633, -3.576272320060525e-06, -2.264974000354414e-06, -0.38291504979133606, -0.045538030564785004, -1.0728830375228426e-06, -3.576278118089249e-07, -0.00019822540343739092, -0.1411273330450058, -0.004348228219896555, -0.008605184964835644, -0.0022380324080586433], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42)", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.021085506305098534, -0.00032669928623363376, -0.0021393049973994493, -2.0265558760002023e-06, 0.0, -0.00023529145983047783, -0.0026764783542603254, -3.933898824470816e-06, -2.7418097943154862e-06, -0.00571450823917985, -0.05151810497045517, -1.6689286894688848e-06, -2.3841855067985307e-07, -9.953480184776708e-05, -0.13742735981941223, -0.004667102824896574, -1.338280439376831, -0.007357051596045494], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.00020013237372040749, -2.3841830625315197e-06, 0.0, -2.7417760065873154e-05, -1.1920928244535389e-07, -3.325883881188929e-05, -0.04460769519209862, -7.152555099310121e-07, -0.00023779425828251988, -1.1920922133867862e-06, -0.004900112748146057, -0.005323401652276516, -5.8412379075889476e-06, -0.00013398226292338222, -5.960462772236497e-07, -1.385321021080017, -0.01976754702627659], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-1.0967194612021558e-05, -3.814689989667386e-06, -0.00011205045302631333, -0.0017746428493410349, -1.1205610462639015e-05, -0.0017141900025308132, -9.202533692587167e-05, -1.8358061424805783e-05, -5.960462772236497e-07, -0.0007627676823176444, -0.00018940561858471483], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00011801023356383666, -8.344646857949556e-07, -5.483612312673358e-06, -6.9141146923357155e-06, -0.00024256148026324809, -0.00011562632425921038, -5.173549288883805e-05, -0.00024732868769206107, -0.0001003691868390888, -0.0002119316632160917], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred, zero_division=0)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ",", " zero", "_", "division", "=", "0", ")", "\n"], "logprobs": [-0.007643027231097221, -6.079655122448457e-06, -2.264974000354414e-06, -1.5258672647178173e-05, -0.013949869200587273, -2.8132995794294402e-05, -0.0025913489516824484, -0.00029225845355540514, -0.00016985881666187197, -2.9802276912960224e-06, -7.152555099310121e-07, -0.4854186177253723, -2.9330873489379883, -0.00011538793478393927, -0.0019516960019245744, -0.0009884715545922518, -0.1194583997130394, -0.08528172224760056, -0.010930425487458706], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.08880660682916641, -8.535020606359467e-05, -0.1330540031194687, -0.039671391248703, -0.0001699779968475923, -0.001105888863094151, -7.510157047363464e-06, -0.0007388246012851596, -0.07706935703754425, -0.05102444067597389], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.7102745175361633, -0.0026945495046675205], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.004813274368643761, -0.0002574589161667973, -0.056749019771814346, -0.00020001317898277193], "finish_reason": "stop"}, {"text": " [word.strip() for word in line.split()]", "tokens": [" [", "word", ".", "strip", "()", " for", " word", " in", " line", ".", "split", "()", "]", "\n"], "logprobs": [-1.8855509757995605, -0.2070448100566864, -0.13497912883758545, -0.898320198059082, -0.0007109498255886137, -0.07517509907484055, -0.0015731590101495385, -2.539125671319198e-05, -0.004207093268632889, -4.7444173105759546e-05, -0.03430383279919624, -0.18258699774742126, -0.08782736212015152, -0.006481222342699766], "finish_reason": "stop"}, {"text": " parts:  # exclude empty lines", "tokens": [" parts", ":", "  ", "#", " exclude", " empty", " lines", "\n"], "logprobs": [-1.0737128257751465, -0.05205328017473221, -2.1132609844207764, -8.34461570775602e-06, -3.7936365604400635, -0.07688590884208679, -0.1988435536623001, -0.0381057932972908], "finish_reason": "stop"}, {"text": " (", "tokens": [" (", "\n"], "logprobs": [-2.110309600830078, -0.043114326894283295], "finish_reason": "stop"}, {"text": " len(parts) == 3:  # Class labels", "tokens": [" len", "(", "parts", ")", " ==", " ", "3", ":", "  ", "#", " Class", " labels", "\n"], "logprobs": [-0.06221386417746544, -4.887569048150908e-06, -0.00041368984966538846, -3.45700973412022e-05, -0.07249778509140015, -2.52720492426306e-05, -1.1771340370178223, -0.04558359086513519, -0.036141831427812576, -7.152555099310121e-07, -3.738093852996826, -1.4415096044540405, -0.30216506123542786], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.02251269668340683, -0.0003978414461016655, -0.01736648939549923, -0.0022155519109219313, -9.190614218823612e-05, -0.008743691258132458, -0.01009985338896513, -0.04572048410773277, -0.23485392332077026, -0.056325092911720276, -0.002152984729036689, -0.00042965717148035765, -2.2411095415009186e-05, -0.0021787970326840878, -0.0006152882124297321, -0.0031294680666178465, -0.0450684130191803, -0.09895601123571396, -0.003981640096753836, -7.629365427419543e-06, -1.1801649634435307e-05, -0.0001991788885788992, -2.825220326485578e-05, -7.235741941258311e-05, -0.003451345022767782, -0.011002350598573685, -0.0008771148277446628, -1.8596476365928538e-05, -2.7418097943154862e-06, -0.00010001159535022452, -6.01988795096986e-05, -0.0001494772732257843, -0.007150653284043074, -0.007381665054708719, -0.01183735765516758, -0.0009835887467488647], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.021182263270020485, -0.4304422438144684], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00016127715934999287, -0.00013386306818574667, -0.002252305392175913, -1.1920928244535389e-07, -1.1920928244535389e-07, -9.536738616588991e-07, -0.013805733062326908, -0.0006753309280611575], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.0016024379292503, -0.0006025406182743609, -0.00015960850578267127, -5.245071224635467e-05, -0.00016151554882526398, -5.006777428206988e-06, -0.0004999579978175461, -0.0015428080223500729, -7.152555099310121e-07, -5.960462772236497e-07, -1.1920922133867862e-06, -0.0013718727277591825, -0.009037068113684654], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.02263239212334156, -2.264974000354414e-06, -2.5629668016335927e-05, -0.3027082681655884], "finish_reason": "stop"}], "metrics": {"energy": 1886.3898450679783, "energy_per_token": 6.416291990027137, "time": 53.285126, "time_per_token": 0.181241925170068}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' not found in the CSV file.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " the", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -0.9469004273414612, -0.01680643856525421, -0.21682710945606232, -9.822363062994555e-05, -5.4834770708112046e-05, -2.1815061700181104e-05, -3.6954811548639555e-06, -0.0008597253472544253, -0.023940183222293854, -0.003165118396282196, -0.007373500149697065, -0.13815172016620636, -0.1354019194841385, -2.861018856492592e-06, -0.009457901120185852, -0.19991479814052582, -0.004037206526845694, -0.00022825974156148732, -0.00020346954988781363], "finish_reason": "stop"}, {"text": " df.drop([target_column], axis=1)", "tokens": [" df", ".", "drop", "([", "target", "_", "column", "]", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0010284854797646403, -0.02465013787150383, -0.022223014384508133, -2.525385856628418, -0.011767260730266571, -0.00020692592079285532, -4.792098479811102e-05, -0.007369949948042631, -0.0006385194719769061, -0.00907333567738533, -0.007145445328205824, -0.004668764304369688, -0.005578900687396526, -0.04485791549086571], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0003885467885993421, -0.0015747062861919403, -0.00014780859055463225, -1.0371154530730564e-05, -2.3841855067985307e-07, -5.3881147323409095e-05, -0.003637247486039996], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00028165188268758357, -4.768360213347478e-06, -0.0033401434775441885, -5.07818695041351e-05, -0.00023493390472140163, -6.437280717364047e-06, -8.344646857949556e-07, -5.1377883210079744e-05, -4.8993817472364753e-05, -1.311301275563892e-06, -0.0003129946126136929, -0.0002849888114724308, -0.00042215018766000867, -4.0531076592742465e-06, -1.6689286894688848e-06, -3.576278118089249e-07, -1.6689286894688848e-06, -1.1205610462639015e-05, -0.16797031462192535, -0.002070070942863822, -0.0013618728844448924, -0.0003587556129787117, -0.0013510395074263215, -4.172316494077677e-06, 0.0, -0.0005671561229974031, -0.0028695380315184593, -3.4570634852570947e-06, -2.0265558760002023e-06, -0.39786508679389954, -0.04404022917151451, -1.1920922133867862e-06, -3.576278118089249e-07, -0.00020919041708111763, -0.12175481766462326, -0.004488987382501364, -0.009412318468093872, -0.0021093280520290136], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42)", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0247364342212677, -0.0003580405900720507, -0.0017749997787177563, -3.099436753473128e-06, 0.0, -0.00022909401741344482, -0.0033865978475660086, -3.814689989667386e-06, -1.9073468138230965e-06, -0.0048152911476790905, -0.049105577170848846, -1.311301275563892e-06, -3.576278118089249e-07, -9.691245941212401e-05, -0.11308928579092026, -0.003953617997467518, -1.1792865991592407, -0.00618330342695117], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators, random_state=42)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00020394629973452538, -2.3841830625315197e-06, 0.0, -3.3378044463461265e-05, -1.1920928244535389e-07, -2.658331868587993e-05, -0.04171545431017876, -7.152555099310121e-07, -0.0004629017203114927, -8.344646857949556e-07, -0.004226799122989178, -0.003053647233173251, -5.8412379075889476e-06, -0.00013374387344811112, -4.768370445162873e-07, -0.330832302570343, -0.09125211089849472, -7.152555099310121e-07, -4.0531076592742465e-06, -1.4662635294371285e-05, -0.04812834411859512, -0.0008981961291283369, -0.006188990082591772, -0.010183047503232956], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-1.1801649634435307e-05, -3.576272320060525e-06, -0.00015424491721205413, -0.0014871024759486318, -9.059865078597795e-06, -0.0015021003782749176, -9.691245941212401e-05, -3.659658250398934e-05, -5.960462772236497e-07, -0.0007499027997255325, -0.00014494798961095512], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00012706902634818107, -7.152555099310121e-07, -4.6491513785440475e-06, -8.4638240878121e-06, -0.0003471963864285499, -0.00013863079948350787, -5.185469490243122e-05, -0.00018880968855228275, -9.870042413240299e-05, -0.0002044230350293219], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred, digits=3)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ",", " digits", "=", "3", ")", "\n"], "logprobs": [-0.006833753548562527, -5.8412379075889476e-06, -2.264974000354414e-06, -1.4543427823809907e-05, -0.010954244062304497, -2.3007127310847864e-05, -0.0027063193265348673, -0.0002628219372127205, -0.00018094333063345402, -2.861018856492592e-06, -3.576278118089249e-07, -0.5478267073631287, -2.4628968238830566, -8.713819261174649e-05, -1.1216051578521729, -0.18943646550178528, -0.018567094579339027], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.06496216356754303, -7.354942499659956e-05, -0.11531484872102737, -0.03827090561389923, -0.00023731753753963858, -0.0009425011812709272, -9.775113539944869e-06, -0.0005628670332953334, -0.08772799372673035, -0.04680734872817993], "finish_reason": "stop"}, {"text": " [", "tokens": [" [", "\n"], "logprobs": [-0.7636345624923706, -1.3835933208465576], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.004553663078695536, -0.00029940891545265913, -0.05555113032460213, -0.0001691436773398891], "finish_reason": "stop"}, {"text": " [part.strip() for part in line.split(\"  \") if part.strip()]", "tokens": [" [", "part", ".", "strip", "()", " for", " part", " in", " line", ".", "split", "(", "\"", "  ", "\"", ")", " if", " part", ".", "strip", "()", "]", "\n"], "logprobs": [-1.889284610748291, -2.2045106887817383, -0.11893070489168167, -0.19420678913593292, -0.0007740838918834925, -0.061245888471603394, -0.00011431517486926168, -1.3351351299206726e-05, -0.008419021964073181, -8.487341256113723e-05, -0.022653719410300255, -1.6506410837173462, -0.14140534400939941, -0.634766697883606, -9.42901024245657e-05, -0.22119462490081787, -0.0003406421164982021, -0.0014511541230604053, -0.02759011648595333, -0.000821014866232872, -6.437280717364047e-06, -0.046653538942337036, -0.02103543095290661], "finish_reason": "stop"}, {"text": " len(parts) > 0:", "tokens": [" len", "(", "parts", ")", " >", " ", "0", ":", "\n"], "logprobs": [-0.5259441137313843, -2.6464111215318553e-05, -0.00033384948619641364, -0.0005043664714321494, -1.9187920093536377, -0.00037901371251791716, -0.721383810043335, -0.25250449776649475, -0.008421030826866627], "finish_reason": "stop"}, {"text": " (", "tokens": [" (", "\n"], "logprobs": [-2.203415870666504, -0.04661804065108299], "finish_reason": "stop"}, {"text": " len(parts) == 2:  # Accuracy or Average", "tokens": [" len", "(", "parts", ")", " ==", " ", "2", ":", "  ", "#", " Accuracy", " or", " Average", "\n"], "logprobs": [-0.05610387399792671, -5.245195097813848e-06, -0.0009319015080109239, -3.099393507000059e-05, -0.05875861644744873, -2.396077979938127e-05, -1.90932297706604, -0.06300719827413559, -0.02992015704512596, -8.344646857949556e-07, -1.0785492658615112, -1.535758137702942, -2.1714048385620117, -0.786464512348175], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<20}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "2", "0", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.022221848368644714, -0.0005281960475258529, -0.01592254266142845, -0.003522265236824751, -6.031808152329177e-05, -0.010684546083211899, -0.009024427272379398, -0.05577990785241127, -1.7609505653381348, -0.8245537877082825, -0.0048017664812505245, -0.0002649671514518559, -1.4305012882687151e-05, -0.0005864569102413952, -0.00035529976594261825, -0.002102666301652789, -0.07044175267219543, -0.4975719451904297, -0.008868827484548092, -6.556489552167477e-06, -1.168244216387393e-05, -8.606540359323844e-05, -1.1444026313256472e-05, -8.642300235806033e-05, -0.0026260672602802515, -0.005487853195518255, -0.0012993711279705167, -5.245195097813848e-06, -1.1920922133867862e-06, -5.674201020156033e-05, -5.4238757002167404e-05, -0.00011121608258690685, -0.001758220954798162, -0.00364176114089787, -0.006025956943631172, -0.0005782362422905862], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.024847956374287605, -0.4673811197280884], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00012027494085486978, -0.00015662873920518905, -0.001880188356153667, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.0728830375228426e-06, -0.012857983820140362, -0.000771939754486084], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.0019809638615697622, -0.0008987916517071426, -0.00020585325546562672, -5.400034933700226e-05, -0.00022003613412380219, -6.794906312279636e-06, -0.0004059444472659379, -0.0015942256432026625, -5.960462772236497e-07, -4.768370445162873e-07, -1.6689286894688848e-06, -0.0017515569925308228, -0.008993593044579029], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.01947087049484253, -1.9073468138230965e-06, -2.8609820219571702e-05, -0.28425464034080505], "finish_reason": "stop"}], "metrics": {"energy": 1826.7243786430363, "energy_per_token": 5.83618012346018, "time": 68.78328, "time_per_token": 0.21975488817891375}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' not found in the dataset.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " the", " dataset", ".", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -0.9469004273414612, -0.01680643856525421, -0.21682710945606232, -9.822363062994555e-05, -5.4834770708112046e-05, -2.1815061700181104e-05, -3.6954811548639555e-06, -0.0008597253472544253, -0.023940183222293854, -0.003165118396282196, -0.007373500149697065, -0.13815172016620636, -2.817675828933716, -0.3318442106246948, -0.004806274548172951, -0.00020668754586949944, -0.0001932195882545784], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0010284854797646403, -0.02465013787150383, -0.022223014384508133, -0.08470829576253891, -0.5664648413658142, -5.173549288883805e-05, -5.8053239627042785e-05, -0.00026556302327662706, -0.002214600332081318, -0.0013159195659682155, -0.001189835020340979, -0.005670177284628153, -0.03244064003229141], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0004717191040981561, -0.0017579830018803477, -0.00017248096992261708, -1.3351351299206726e-05, -7.152555099310121e-07, -5.185469490243122e-05, -0.004135509487241507], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00033849707688204944, -5.125986263010418e-06, -0.0025027638766914606, -5.471556869451888e-05, -0.00018082413589581847, -7.033323527139146e-06, -8.344646857949556e-07, -4.95898348162882e-05, -5.566918844124302e-05, -1.1920922133867862e-06, -0.0003446938644628972, -0.00023529145983047783, -0.0004766043566633016, -5.006777428206988e-06, -1.9073468138230965e-06, -4.768370445162873e-07, -2.264974000354414e-06, -1.1086402082582936e-05, -0.11307033151388168, -0.002468160120770335, -0.0011597104603424668, -0.000440262199845165, -0.0012190061388537288, -3.2186455882765586e-06, 0.0, -0.000577402301132679, -0.0031351721845567226, -4.529942543740617e-06, -2.3841830625315197e-06, -0.3980180323123932, -0.053000230342149734, -1.1920922133867862e-06, -3.576278118089249e-07, -0.0001714082609396428, -0.14189183712005615, -0.004507975187152624, -0.009544101543724537, -0.002530351048335433], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42)", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.025995133444666862, -0.0002806984703056514, -0.0023746881633996964, -2.264974000354414e-06, 0.0, -0.0002330270071979612, -0.0028832077514380217, -4.172316494077677e-06, -2.50339189733495e-06, -0.005052061751484871, -0.05606510490179062, -1.5497195136049413e-06, -3.576278118089249e-07, -0.00010442188795423135, -0.13698017597198486, -0.005204224959015846, -1.2661221027374268, -0.006424132734537125], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators, random_state=42)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00017450717859901488, -2.50339189733495e-06, 0.0, -3.242440288886428e-05, -1.1920928244535389e-07, -2.8013790142722428e-05, -0.050777461379766464, -7.152555099310121e-07, -0.0003890234511345625, -9.536738616588991e-07, -0.004108679015189409, -0.004223356489092112, -6.556489552167477e-06, -0.0001284993631998077, -3.576278118089249e-07, -0.327829509973526, -0.10683886706829071, -8.344646857949556e-07, -3.3378546504536644e-06, -1.4781842764932662e-05, -0.05019976943731308, -0.0008505540899932384, -0.00603282917290926, -0.009456838481128216], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-1.0251946150674485e-05, -3.576272320060525e-06, -0.00012694983161054552, -0.002477792324498296, -1.0609570381348021e-05, -0.0016279076226055622, -0.00011336160969221964, -2.4318398573086597e-05, -4.768370445162873e-07, -0.0008394769974984229, -0.0002026352594839409], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00011717586312443018, -5.960462772236497e-07, -4.291525328881107e-06, -8.106198947643861e-06, -0.00029309268575161695, -0.00011908298620255664, -5.9602869441732764e-05, -0.00030751267331652343, -0.00010001159535022452, -0.0002094287920044735], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred, output_dict=True)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ",", " output", "_", "dict", "=", "True", ")", "\n"], "logprobs": [-0.0068888068199157715, -5.006777428206988e-06, -2.264974000354414e-06, -1.4662635294371285e-05, -0.012845155782997608, -3.242440288886428e-05, -0.0028720342088490725, -0.0002397011558059603, -0.00019095504831057042, -3.099436753473128e-06, -4.768370445162873e-07, -0.6044704914093018, -0.29373955726623535, -5.602820692729438e-06, -0.0026090650353580713, -9.131014667218551e-05, -0.27009934186935425, -0.050297945737838745, -0.0017308506648987532], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.07792345434427261, -0.00010442188795423135, -0.1235988661646843, -0.041769422590732574, -0.00025340684805996716, -0.0011262509506195784, -9.894321920000948e-06, -0.0006618693005293608, -0.08032495528459549, -0.04819945991039276], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.6648120284080505, -0.002186171943321824], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.005913144908845425, -0.00031275625224225223, -0.05083683505654335, -0.0001811817055568099], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.2325771003961563, -0.00014757021563127637, -0.11067745834589005, -0.04860129579901695, -0.007708800956606865], "finish_reason": "stop"}, {"text": " parts:", "tokens": [" parts", ":", "\n"], "logprobs": [-1.184664011001587, -0.0503619909286499, -0.11689095199108124], "finish_reason": "stop"}, {"text": " f\"{' '.join(parts[:3]):<8} {' '.join(parts[3:]):>10}\"", "tokens": [" f", "\"", "{'", " '", ".", "join", "(", "parts", "[:", "3", "]", "):", "<", "8", "}", " {'", " '", ".", "join", "(", "parts", "[", "3", ":]", "):", ">", "1", "0", "}\"", "\n"], "logprobs": [-1.1725002527236938, -0.01542612910270691, -2.246145725250244, -0.21803484857082367, -0.16106922924518585, -0.006647141650319099, -0.004923718981444836, -0.00020454221521504223, -0.03889979049563408, -1.6709911823272705, -0.07581491023302078, -0.20539569854736328, -0.2830362021923065, -2.864751100540161, -1.0274440050125122, -0.1157013326883316, -0.03751717135310173, -0.0011845960980281234, -1.1920922133867862e-06, -0.000846027978695929, -0.0029530986212193966, -0.00649910606443882, -0.0220640916377306, -0.11774425208568573, -0.010061617009341717, -0.39359769225120544, -0.43700718879699707, -1.8132271766662598, -0.0960175096988678, -0.00779361417517066], "finish_reason": "stop"}, {"text": " len(parts) == 6:  # Total/macro/weighted avg metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "6", ":", "  ", "#", " Total", "/", "macro", "/", "weighted", " av", "g", " metrics", "\n"], "logprobs": [-0.0548882856965065, -4.410734163684538e-06, -0.0005544078885577619, -2.9682672902708873e-05, -0.05792725086212158, -2.5152843591058627e-05, -2.9567112922668457, -0.03298093006014824, -0.01670140214264393, -2.264974000354414e-06, -3.5069074630737305, -1.9902253150939941, -0.43344321846961975, -0.0499887578189373, -0.0019050560658797622, -1.9822673797607422, -0.00045599075383506715, -0.11338286101818085, -0.014860058203339577], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.01794765144586563, -0.0004640932602342218, -0.016924124211072922, -0.00234352913685143, -7.903263758635148e-05, -0.010460902936756611, -0.0093770083039999, -0.05160947144031525, -0.22973313927650452, -0.05526917055249214, -0.0019813207909464836, -0.00040999590419232845, -2.1576648578047752e-05, -0.002209128811955452, -0.0007540719816461205, -0.0035276107955724, -0.05284985527396202, -0.10721685737371445, -0.0032083725091069937, -9.179073458653875e-06, -8.22540732769994e-06, -0.00020656836568377912, -2.5987286790041253e-05, -7.509902934543788e-05, -0.0034465931821614504, -0.013477057218551636, -0.000780754373408854, -1.5616295058862306e-05, -2.861018856492592e-06, -9.154854342341423e-05, -5.113947918289341e-05, -0.00015484087634831667, -0.007112185470759869, -0.007498215883970261, -0.011344334110617638, -0.0012525817146524787], "finish_reason": "stop"}, {"text": " line  # No changes for other lines", "tokens": [" line", "  ", "#", " No", " changes", " for", " other", " lines", "\n"], "logprobs": [-0.02218453958630562, -1.0568920373916626, -3.576278118089249e-07, -1.0977236032485962, -2.052743434906006, -0.06551642715930939, -0.13867777585983276, -0.027413833886384964, -0.01848178543150425], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-8.749579137656838e-05, -0.00016032364510465413, -0.0013765154872089624, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.0728830375228426e-06, -0.011280449107289314, -0.0007771808886900544], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.0019491974962875247, -0.0006696127820760012, -0.00016604475968051702, -5.495397272170521e-05, -0.0001833270798670128, -3.933898824470816e-06, -0.00037174468161538243, -0.0014266322832554579, -5.960462772236497e-07, -5.960462772236497e-07, -1.6689286894688848e-06, -0.0015524489572271705, -0.008618894964456558], "finish_reason": "stop"}, {"text": " formatted_report<|endoftext|>def add_numbers(a, b):", "tokens": [" formatted", "_", "report", "<", "|", "end", "of", "text", "|>", "def", " add", "_", "numbers", "(", "a", ",", " b", "):", "\n"], "logprobs": [-0.02009299211204052, -2.0265558760002023e-06, -2.1576648578047752e-05, -1.7385940551757812, -4.0531076592742465e-06, -3.099436753473128e-06, -4.887569048150908e-06, -7.223821739898995e-05, -0.12841017544269562, -2.030730962753296, -3.622330665588379, -0.3356289565563202, -1.675192952156067, -0.1854121834039688, -0.4173656404018402, -0.05218273028731346, -0.013106859289109707, -0.08106602728366852, -0.0033173311967402697], "finish_reason": "stop"}], "metrics": {"energy": 1908.669434758186, "energy_per_token": 5.564633920577802, "time": 76.89963, "time_per_token": 0.2241971720116618}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(f\"'{target_column}' column not found in CSV file\")", "tokens": [" Value", "Error", "(", "f", "\"", "'{", "target", "_", "column", "}'", " column", " not", " found", " in", " CS", "V", " file", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -3.12766170501709, -0.000348268891684711, -1.9907753085135482e-05, -9.536697689327411e-06, -0.002009160118177533, -0.1626402586698532, -0.04092998430132866, -0.002848260570317507, -0.013530099764466286, -2.3288049697875977, -5.960446742392378e-06, -0.021688077598810196, -0.7901279926300049, -0.00021371940965764225, -0.00045134371612221], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0011182728921994567, -0.020971111953258514, -0.013744474388659, -0.09205657243728638, -0.5897294282913208, -3.659658250398934e-05, -5.781483559985645e-05, -0.00030787018476985395, -0.0019910766277462244, -0.0014382981462404132, -0.0012844892917200923, -0.006111979018896818, -0.03444758057594299], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0004557524516712874, -0.0018901830771937966, -0.00020930961181875318, -1.6093124941107817e-05, -7.152555099310121e-07, -5.364274329622276e-05, -0.0042977831326425076], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0003079893649555743, -4.887569048150908e-06, -0.0023861052468419075, -4.732496745418757e-05, -0.0001932195882545784, -9.65590606938349e-06, -8.344646857949556e-07, -5.221230458118953e-05, -5.9602869441732764e-05, -1.311301275563892e-06, -0.00029380773776210845, -0.0002592465898487717, -0.0005812147865071893, -4.172316494077677e-06, -2.264974000354414e-06, -3.576278118089249e-07, -2.0265558760002023e-06, -1.0609570381348021e-05, -0.11553407460451126, -0.0029025827534496784, -0.0012450808426365256, -0.0004481264913920313, -0.0012727025896310806, -3.933898824470816e-06, 0.0, -0.0006530536338686943, -0.003427822608500719, -4.291525328881107e-06, -2.622600959512056e-06, -0.48645591735839844, -0.046259112656116486, -8.344646857949556e-07, 0.0, -0.00020859450160060078, -0.14053502678871155, -0.0045639872550964355, -0.00877370685338974, -0.0022505212109535933], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", "\n"], "logprobs": [-0.02284540794789791, -0.0002728328399825841, -0.001767264911904931, -2.861018856492592e-06, 0.0, -0.0002325502864550799, -0.003757798345759511, -3.814689989667386e-06, -2.264974000354414e-06, -0.005702062509953976, -0.06342382729053497, -1.1920922133867862e-06, -3.576278118089249e-07, -0.00010191874753218144, -0.1529846042394638, -0.00508764386177063, -0.3121902048587799], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators, random_state=42)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00016675988445058465, -2.622600959512056e-06, 0.0, -3.361645576660521e-05, -1.1920928244535389e-07, -3.242440288886428e-05, -0.04120800644159317, -7.152555099310121e-07, -0.0006144542712718248, -1.6689286894688848e-06, -0.003653994994238019, -0.004542271140962839, -6.198863957251888e-06, -0.00015221867943182588, -7.152555099310121e-07, -0.330083966255188, -0.09030630439519882, -7.152555099310121e-07, -4.291525328881107e-06, -1.7046782886609435e-05, -0.040530432015657425, -0.0007297713309526443, -0.0069611407816410065, -0.009219218976795673], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-1.156323378381785e-05, -4.768360213347478e-06, -0.00013136000779923052, -0.0022465961519628763, -1.0490362910786644e-05, -0.0016389759257435799, -0.00011693747364915907, -2.884823152271565e-05, -5.960462772236497e-07, -0.0006531727267429233, -0.0001691436773398891], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00011634149996098131, -5.960462772236497e-07, -5.364403477869928e-06, -8.22540732769994e-06, -0.00029523781267926097, -0.00013779645087197423, -5.519237674889155e-05, -0.00018046658078674227, -9.440929716220126e-05, -0.00021324267436284572], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred, output_dict=False)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ",", " output", "_", "dict", "=", "False", ")", "\n"], "logprobs": [-0.007065312005579472, -5.722029527532868e-06, -3.099436753473128e-06, -1.5139465176616795e-05, -0.010275674052536488, -2.9444261599564925e-05, -0.0026965707074850798, -0.0002661589242052287, -0.0001627074379939586, -2.7418097943154862e-06, -5.960462772236497e-07, -0.525100588798523, -0.25344520807266235, -6.437280717364047e-06, -0.0016499252524226904, -9.846202738117427e-05, -1.397371530532837, -0.021685276180505753, -0.015827268362045288], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.09587790817022324, -8.976056415122002e-05, -0.11923781037330627, -0.042730383574962616, -0.0002553137019276619, -0.0011169631034135818, -9.894321920000948e-06, -0.0008879532688297331, -0.10839607566595078, -0.04175478592514992], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.7422873377799988, -0.002256468404084444], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.00552982185035944, -0.0003219324571546167, -0.05065644159913063, -0.000228140561375767], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.18771791458129883, -0.00016306500765495002, -0.06226370856165886, -0.05035439506173134, -0.01036026980727911], "finish_reason": "stop"}, {"text": " not parts:", "tokens": [" not", " parts", ":", "\n"], "logprobs": [-2.823077440261841, -0.0037349958438426256, -0.00970644410699606, -0.16868256032466888], "finish_reason": "stop"}, {"text": " f\"class {parts[0]} {' '*30}\" + \"\".join(", "tokens": [" f", "\"", "class", " {", "parts", "[", "0", "]}", " {'", " '", "*", "3", "0", "}\"", " +", " \"", "\"", ".", "join", "(", "\n"], "logprobs": [-1.156775951385498, -0.012532763183116913, -0.5203877091407776, -0.08046234399080276, -0.0022055604495108128, -0.002060672966763377, -0.0118543216958642, -0.30866917967796326, -0.8688404560089111, -0.07208503037691116, -1.827510118484497, -2.459810972213745, -1.7057459354400635, -2.5537967681884766, -0.8694003224372864, -0.07709717005491257, -1.405061960220337, -4.076874756719917e-05, -1.3112935448589269e-05, -0.11051373183727264, -0.11123853176832199], "finish_reason": "stop"}, {"text": " len(parts) == 4:  # Accuracy and avg. metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "4", ":", "  ", "#", " Accuracy", " and", " av", "g", ".", " metrics", "\n"], "logprobs": [-0.055540189146995544, -4.768360213347478e-06, -0.0006317288498394191, -2.8371408916427754e-05, -0.05218329653143883, -2.2053474822314456e-05, -0.8113603591918945, -0.0673074722290039, -0.05169754847884178, -1.311301275563892e-06, -2.609318971633911, -2.4796972274780273, -2.321194887161255, -0.003155255224555731, -1.5934698581695557, -0.2866576015949249, -0.04362012445926666], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<20}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "2", "0", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.014887424185872078, -0.000302745756926015, -0.013864871114492416, -0.0025859985034912825, -5.8053239627042785e-05, -0.010761087760329247, -0.007856184616684914, -0.0670340433716774, -1.6584889888763428, -0.7836127281188965, -0.004180620890110731, -0.00032014489988796413, -1.9192511899746023e-05, -0.0004981707315891981, -0.00027771908207796514, -0.0025190545711666346, -0.08194911479949951, -0.43802061676979065, -0.009890714660286903, -5.602820692729438e-06, -7.510157047363464e-06, -8.737658936297521e-05, -1.2516897186287679e-05, -6.747018051100895e-05, -0.0023283057380467653, -0.004994891118258238, -0.0010508735431358218, -4.0531076592742465e-06, -1.4305104514278355e-06, -7.068861305015162e-05, -5.07818695041351e-05, -0.00011336160969221964, -0.0014756753807887435, -0.0026856327895075083, -0.006349390838295221, -0.00046206763363443315], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.024327684193849564, -0.3965080976486206], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00015579440514557064, -0.00014757021563127637, -0.0016120783984661102, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.0728830375228426e-06, -0.012233109213411808, -0.0008105330052785575], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.0017877324717119336, -0.000608854868914932, -0.0002224197960458696, -6.317892984952778e-05, -0.00017295771976932883, -4.887569048150908e-06, -0.0004913791781291366, -0.0015109085943549871, -7.152555099310121e-07, -7.152555099310121e-07, -1.5497195136049413e-06, -0.001578157884068787, -0.009261857718229294], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.019673572853207588, -2.3841830625315197e-06, -3.0040289857424796e-05, -0.23770640790462494], "finish_reason": "stop"}], "metrics": {"energy": 2285.829557746887, "energy_per_token": 7.421524538139244, "time": 59.371647, "time_per_token": 0.19276508766233766}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column {target_column} not found in the CSV file\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " {", "target", "_", "column", "}", " not", " found", " in", " the", " CS", "V", " file", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -0.9469004273414612, -0.01680643856525421, -1.759143590927124, -0.00015198028995655477, -6.246371776796877e-05, -1.1205610462639015e-05, -0.006898988038301468, -0.021807869896292686, -0.0067117963917553425, -0.010807552374899387, -0.2498372495174408, -0.17108571529388428, -2.7418097943154862e-06, -0.011694212444126606, -1.5197558403015137, -0.0002138386043952778, -0.00028796817059628665], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column])", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "])", "\n"], "logprobs": [-0.0010284854797646403, -0.02465013787150383, -0.022223014384508133, -0.08470829576253891, -0.8441824316978455, -0.33156949281692505, -0.0037955641746520996, -0.00016330339713022113, -3.3854863431770355e-05, -0.11351387202739716, -0.022316398099064827], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0004129749140702188, -0.001774761825799942, -0.00018809456378221512, -1.490105023549404e-05, -2.3841855067985307e-07, -6.592056161025539e-05, -0.003301885211840272], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0003911683743353933, -4.529942543740617e-06, -0.0027296210173517466, -4.875540980719961e-05, -0.00017510310863144696, -8.34461570775602e-06, -4.768370445162873e-07, -4.815939246327616e-05, -4.5298504119273275e-05, -1.0728830375228426e-06, -0.00035696811391972005, -0.00025102324434556067, -0.0005092516075819731, -4.887569048150908e-06, -2.3841830625315197e-06, -3.576278118089249e-07, -1.7881377516459906e-06, -1.2278481335670222e-05, -0.09399934113025665, -0.00297722639515996, -0.0011544713051989675, -0.000439428084064275, -0.0012504386249929667, -3.933898824470816e-06, 0.0, -0.0006279165390878916, -0.003785825800150633, -3.576272320060525e-06, -2.264974000354414e-06, -0.38291504979133606, -0.045538030564785004, -1.0728830375228426e-06, -3.576278118089249e-07, -0.00019822540343739092, -0.1411273330450058, -0.004348228219896555, -0.008605184964835644, -0.0022380324080586433], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", "\n"], "logprobs": [-0.021085506305098534, -0.00032669928623363376, -0.0021393049973994493, -2.0265558760002023e-06, 0.0, -0.00023529145983047783, -0.0026764783542603254, -3.933898824470816e-06, -2.7418097943154862e-06, -0.00571450823917985, -0.05151810497045517, -1.6689286894688848e-06, -2.3841855067985307e-07, -9.953480184776708e-05, -0.13742735981941223, -0.004667102824896574, -0.34028321504592896], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators, random_state=42)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00020013237372040749, -2.3841830625315197e-06, 0.0, -2.7417760065873154e-05, -1.1920928244535389e-07, -3.325883881188929e-05, -0.04460769519209862, -7.152555099310121e-07, -0.00023779425828251988, -1.1920922133867862e-06, -0.004900112748146057, -0.005323401652276516, -5.8412379075889476e-06, -0.00013398226292338222, -5.960462772236497e-07, -0.28809866309165955, -0.08364488184452057, -7.152555099310121e-07, -2.7418097943154862e-06, -1.6212332411669195e-05, -0.040545087307691574, -0.0009582218481227756, -0.007375630084425211, -0.010246648453176022], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-9.059865078597795e-06, -3.933898824470816e-06, -0.00017951308109331876, -0.0021655934397131205, -1.0490362910786644e-05, -0.0016527815023437142, -0.00011896379146492109, -2.539125671319198e-05, -5.960462772236497e-07, -0.0006939148879610002, -0.00017712931730784476], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00011300401820335537, -5.960462772236497e-07, -5.125986263010418e-06, -6.794906312279636e-06, -0.00029094755882397294, -0.00011777184408856556, -5.817244164063595e-05, -0.00022539935889653862, -8.40390202938579e-05, -0.00020776021119672805], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred, target_names=y_test.unique())", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ",", " target", "_", "names", "=", "y", "_", "test", ".", "unique", "())", "\n"], "logprobs": [-0.00750637985765934, -5.483612312673358e-06, -2.0265558760002023e-06, -1.4066597032069694e-05, -0.01374000683426857, -2.407998726994265e-05, -0.0025506841484457254, -0.0002416080387774855, -0.00015555603022221476, -3.2186455882765586e-06, -4.768370445162873e-07, -0.45991626381874084, -2.309696912765503, -3.6954811548639555e-06, -1.7046782886609435e-05, -0.03533424809575081, -1.4168705940246582, -1.9663535356521606, -0.34484684467315674, -0.012590564787387848, -0.08514488488435745, -0.017243115231394768, -0.0023419829085469246], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.07754481583833694, -8.83301836438477e-05, -0.12186647951602936, -0.05138607695698738, -0.00022110878489911556, -0.0010709986090660095, -8.22540732769994e-06, -0.0010085977846756577, -0.07945243269205093, -0.04830385372042656], "finish_reason": "stop"}, {"text": " [", "tokens": [" [", "\n"], "logprobs": [-0.8193041682243347, -1.442565679550171], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.005416835192590952, -0.00020597243565134704, -0.05467510595917702, -0.00020704510097857565], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.16588468849658966, -0.00012146688823122531, -0.13090339303016663, -0.06245164945721626, -0.00798675324767828], "finish_reason": "stop"}, {"text": " len(parts) == 3:", "tokens": [" len", "(", "parts", ")", " ==", " ", "3", ":", "\n"], "logprobs": [-0.5281517505645752, -2.753696753643453e-05, -0.0003426679759286344, -0.0004634975048247725, -0.5321354866027832, -0.0009265420376323164, -2.2622008323669434, -0.03766297921538353, -0.1336670219898224], "finish_reason": "stop"}, {"text": " \" \".join([parts[0], parts[1], parts[2], parts[3]])", "tokens": [" \"", " \"", ".", "join", "([", "parts", "[", "0", "]", ",", " parts", "[", "1", "]", ",", " parts", "[", "2", "]", ",", " parts", "[", "3", "]]", ")", "\n"], "logprobs": [-0.6130402684211731, -0.7627198696136475, -0.06073613837361336, -1.4305012882687151e-05, -2.0234951972961426, -0.056888896971940994, -0.001735967700369656, -0.1492527574300766, -0.343088299036026, -0.13340219855308533, -0.16998182237148285, -0.010466093197464943, -0.3104921579360962, -0.007047201041132212, -0.4492764174938202, -0.07429773360490799, -0.009056205861270428, -0.1691008061170578, -0.010710611008107662, -0.004371847957372665, -0.023004092276096344, -0.006705875974148512, -0.06754527240991592, -0.9297008514404297, -0.022853098809719086, -0.052132830023765564], "finish_reason": "stop"}, {"text": " len(parts) == 3:  # Avg. metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "3", ":", "  ", "#", " Av", "g", ".", " metrics", "\n"], "logprobs": [-0.05894429609179497, -5.245195097813848e-06, -0.0005690624238923192, -3.3378044463461265e-05, -0.06348670274019241, -2.407998726994265e-05, -1.3029546737670898, -0.04717415198683739, -0.029070476070046425, -8.344646857949556e-07, -3.538590669631958, -0.01185950543731451, -1.4128868579864502, -1.200324296951294, -0.2782306373119354], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<20}{parts[1]:>20}{parts[2]:>20}{parts[3]:>20}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "2", "0", "}{", "parts", "[", "1", "]:", ">", "2", "0", "}{", "parts", "[", "2", "]:", ">", "2", "0", "}{", "parts", "[", "3", "]:", ">", "2", "0", "}\"", "\n"], "logprobs": [-0.017496991902589798, -0.00037448544753715396, -0.018147502094507217, -0.0029230271466076374, -0.00010024998482549563, -0.012517224065959454, -0.010143752209842205, -0.05068488419055939, -1.8628545999526978, -0.8137127161026001, -0.004551171325147152, -0.0003289635351393372, -2.002696055569686e-05, -0.000635183765552938, -0.0002734287118073553, -0.002529756398871541, -2.740457534790039, -0.0298262070864439, -0.03477484732866287, -1.9550132492440753e-05, -2.253030106658116e-05, -0.00018857131362892687, -3.731181277544238e-05, -0.0002779574424494058, -0.0807744562625885, -0.0004960260121151805, -0.007351253181695938, -1.1324817933200393e-05, -5.722029527532868e-06, -0.00013791563105769455, -0.0001958416833076626, -0.0002698534226510674, -0.010074126534163952, -0.0004674295778386295, -0.007175271399319172, -0.0005448763840831816], "finish_reason": "stop"}, {"text": " line  # Keep the line as it is", "tokens": [" line", "  ", "#", " Keep", " the", " line", " as", " it", " is", "\n"], "logprobs": [-0.02567787654697895, -0.9353631734848022, -2.3841855067985307e-07, -1.6584222316741943, -0.4318018853664398, -1.2447991371154785, -0.43352001905441284, -1.4343087673187256, -0.009698297828435898, -0.15704986453056335], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-9.738924563862383e-05, -0.00015555603022221476, -0.0017786887474358082, -1.1920928244535389e-07, -2.3841855067985307e-07, -1.5497195136049413e-06, -0.01389214675873518, -0.0006809299811720848], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.0019229032332077622, -0.0009509570081718266, -0.00023469554434996098, -6.05564855504781e-05, -0.00016819016309455037, -4.887569048150908e-06, -0.0003181189822498709, -0.0022625343408435583, -4.768370445162873e-07, -4.768370445162873e-07, -1.6689286894688848e-06, -0.0015623279614374042, -0.007951391860842705], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.018634961917996407, -1.9073468138230965e-06, -2.5748875486897305e-05, -0.24896356463432312], "finish_reason": "stop"}], "metrics": {"energy": 1358.856558195114, "energy_per_token": 4.142855360350958, "time": 65.79895, "time_per_token": 0.2006065548780488}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' not found in the CSV file\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " the", " CS", "V", " file", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -0.9469004273414612, -0.01680643856525421, -0.21682710945606232, -9.822363062994555e-05, -5.4834770708112046e-05, -2.1815061700181104e-05, -3.6954811548639555e-06, -0.0008597253472544253, -0.023940183222293854, -0.003165118396282196, -0.007373500149697065, -0.13815172016620636, -0.1354019194841385, -2.861018856492592e-06, -0.009457901120185852, -1.7921160459518433, -0.00022968991834204644, -0.0003592322755139321], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0010284854797646403, -0.02465013787150383, -0.022223014384508133, -0.08470829576253891, -0.5664648413658142, -5.173549288883805e-05, -5.8053239627042785e-05, -0.00026556302327662706, -0.002214600332081318, -0.0013159195659682155, -0.001189835020340979, -0.005670177284628153, -0.03244064003229141], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0004717191040981561, -0.0017579830018803477, -0.00017248096992261708, -1.3351351299206726e-05, -7.152555099310121e-07, -5.185469490243122e-05, -0.004135509487241507], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00033849707688204944, -5.125986263010418e-06, -0.0025027638766914606, -5.471556869451888e-05, -0.00018082413589581847, -7.033323527139146e-06, -8.344646857949556e-07, -4.95898348162882e-05, -5.566918844124302e-05, -1.1920922133867862e-06, -0.0003446938644628972, -0.00023529145983047783, -0.0004766043566633016, -5.006777428206988e-06, -1.9073468138230965e-06, -4.768370445162873e-07, -2.264974000354414e-06, -1.1086402082582936e-05, -0.11307033151388168, -0.002468160120770335, -0.0011597104603424668, -0.000440262199845165, -0.0012190061388537288, -3.2186455882765586e-06, 0.0, -0.000577402301132679, -0.0031351721845567226, -4.529942543740617e-06, -2.3841830625315197e-06, -0.3980180323123932, -0.053000230342149734, -1.1920922133867862e-06, -3.576278118089249e-07, -0.0001714082609396428, -0.14189183712005615, -0.004507975187152624, -0.009544101543724537, -0.002530351048335433], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=0)", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.025995133444666862, -0.0002806984703056514, -0.0023746881633996964, -2.264974000354414e-06, 0.0, -0.0002330270071979612, -0.0028832077514380217, -4.172316494077677e-06, -2.50339189733495e-06, -0.005052061751484871, -0.05606510490179062, -1.5497195136049413e-06, -3.576278118089249e-07, -0.00010442188795423135, -2.7624378204345703, -1.568172574043274, -0.004121263511478901], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0001991788885788992, -2.264974000354414e-06, 0.0, -2.407998726994265e-05, -1.1920928244535389e-07, -3.075552376685664e-05, -0.04232572391629219, -8.344646857949556e-07, -0.0005137792322784662, -1.0728830375228426e-06, -0.0037155181635171175, -0.0050214603543281555, -5.245195097813848e-06, -0.00015198028995655477, -5.960462772236497e-07, -1.317610740661621, -0.015368608757853508], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-1.1324817933200393e-05, -3.933898824470816e-06, -0.00016032364510465413, -0.0017422748496755958, -8.583032467868179e-06, -0.0014865073608234525, -0.00010466027742950246, -2.372236667724792e-05, -5.960462772236497e-07, -0.0009121309849433601, -0.0002115741081070155], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-9.7508447652217e-05, -8.344646857949556e-07, -5.364403477869928e-06, -6.198863957251888e-06, -0.00028153270250186324, -0.00011503035057103261, -5.543078441405669e-05, -0.00030429501202888787, -0.00010048838157672435, -0.0002493547508493066], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred, output_dict=True)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ",", " output", "_", "dict", "=", "True", ")", "\n"], "logprobs": [-0.007924545556306839, -5.8412379075889476e-06, -2.622600959512056e-06, -1.6569954823353328e-05, -0.009881271980702877, -3.0278701160568744e-05, -0.0029214818496257067, -0.00031382881570607424, -0.00019596086349338293, -3.2186455882765586e-06, -9.536738616588991e-07, -0.4705858826637268, -0.2555650472640991, -4.6491513785440475e-06, -0.0019491974962875247, -6.210611172718927e-05, -0.25543707609176636, -0.0354745090007782, -0.0016736084362491965], "finish_reason": "stop"}, {"text": " report.strip().split(\"\\n\")", "tokens": [" report", ".", "strip", "()", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.08795072883367538, -0.00010990492592100054, -2.1669020652770996, -0.005883162375539541, -0.0001932195882545784, -0.004938784521073103, -0.024850165471434593, -0.0004003438516519964, -0.003485677298158407, -1.311301275563892e-06, -0.0031301809940487146, -0.0673673152923584, -0.030736053362488747], "finish_reason": "stop"}, {"text": " [lines[0].strip()]", "tokens": [" [", "lines", "[", "0", "]", ".", "strip", "()", "]", "\n"], "logprobs": [-0.7137036919593811, -2.6987013816833496, -0.007312319707125425, -0.20790059864521027, -1.4462999105453491, -1.195359468460083, -0.768068790435791, -0.007042229641228914, -0.0859128087759018, -0.41034117341041565], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.005358024965971708, -0.0002321927313460037, -0.05328599363565445, -0.00017248096992261708], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.2638050615787506, -0.00018702188390307128, -0.09557989984750748, -0.04776916652917862, -0.009755200706422329], "finish_reason": "stop"}, {"text": " not parts:", "tokens": [" not", " parts", ":", "\n"], "logprobs": [-2.762939691543579, -0.0036215689033269882, -0.011910160072147846, -0.20446111261844635], "finish_reason": "stop"}, {"text": " \" \".join(parts[:3]).rjust(20) + \" \".join(parts[3:])", "tokens": [" \"", " \"", ".", "join", "(", "parts", "[:", "3", "])", ".", "r", "just", "(", "2", "0", ")", " +", " \"", " \"", ".", "join", "(", "parts", "[", "3", ":", "])", "\n"], "logprobs": [-0.6484496593475342, -0.8010179400444031, -0.07913902401924133, -1.4543427823809907e-05, -0.15726114809513092, -0.1778942048549652, -0.1198526993393898, -1.5081673860549927, -0.28286293148994446, -1.098038673400879, -0.6573867201805115, -0.004048604518175125, -2.8371408916427754e-05, -1.4988573789596558, -0.2955798804759979, -0.009943357668817043, -0.21034175157546997, -0.13268858194351196, -0.2966512143611908, -1.3436083793640137, -0.050974711775779724, -0.0025850471574813128, -0.016953425481915474, -0.006091955117881298, -0.015534116886556149, -0.01082359068095684, -0.003577382303774357, -0.6485742330551147], "finish_reason": "stop"}, {"text": " len(parts) == 4:  # Overall and average metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "4", ":", "  ", "#", " Overall", " and", " average", " metrics", "\n"], "logprobs": [-0.05876446142792702, -4.768360213347478e-06, -0.0007371568935923278, -3.4689302992774174e-05, -0.06107207387685776, -2.1576648578047752e-05, -0.8698967099189758, -0.06531309336423874, -0.04224812984466553, -9.536738616588991e-07, -0.8691785335540771, -3.4024133682250977, -0.531112790107727, -0.05154425650835037, -0.006135438568890095], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<20}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "2", "0", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.0182341281324625, -0.0002817710628733039, -0.012697446160018444, -0.003675255225971341, -8.284702198579907e-05, -0.011214910075068474, -0.007453371770679951, -0.05814896151423454, -1.7949254512786865, -0.7779465913772583, -0.004651677794754505, -0.00024971229140646756, -1.7523612768854946e-05, -0.0005353448214009404, -0.00027021096320822835, -0.0029377657920122147, -0.0782063752412796, -0.42881742119789124, -0.01038363017141819, -5.960446742392378e-06, -8.702239938429557e-06, -0.00010382589971413836, -1.3470558769768104e-05, -6.389413465512916e-05, -0.0021221754141151905, -0.003647818695753813, -0.0011825718684121966, -4.0531076592742465e-06, -1.4305104514278355e-06, -6.651657167822123e-05, -5.709961988031864e-05, -0.00012635385792236775, -0.0017488199518993497, -0.0032170468475669622, -0.006943028420209885, -0.0005191409145481884], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.022630760446190834, -0.4720316529273987], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00011765264935093, -0.00015293381875380874, -0.001778450678102672, -1.1920928244535389e-07, -2.3841855067985307e-07, -1.5497195136049413e-06, -0.01275335531681776, -0.0006711614551022649], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.0018005840247496963, -0.000806602300144732, -0.00022659118985757232, -5.900685573578812e-05, -0.00018892886873800308, -5.125986263010418e-06, -0.0003301552205812186, -0.0015694693429395556, -7.152555099310121e-07, -4.768370445162873e-07, -1.7881377516459906e-06, -0.0013225865550339222, -0.00822998583316803], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.018414843827486038, -2.50339189733495e-06, -2.52720492426306e-05, -0.28562453389167786], "finish_reason": "stop"}], "metrics": {"energy": 1956.29224486351, "energy_per_token": 6.113413265198469, "time": 54.48311, "time_per_token": 0.17025971875}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' not found in the CSV file.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " the", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -0.9469004273414612, -0.01680643856525421, -0.21682710945606232, -9.822363062994555e-05, -5.4834770708112046e-05, -2.1815061700181104e-05, -3.6954811548639555e-06, -0.0008597253472544253, -0.023940183222293854, -0.003165118396282196, -0.007373500149697065, -0.13815172016620636, -0.1354019194841385, -2.861018856492592e-06, -0.009457901120185852, -0.19991479814052582, -0.004037206526845694, -0.00022825974156148732, -0.00020346954988781363], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column])", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "])", "\n"], "logprobs": [-0.0010284854797646403, -0.02465013787150383, -0.022223014384508133, -0.08470829576253891, -0.8441824316978455, -0.33156949281692505, -0.0037955641746520996, -0.00016330339713022113, -3.3854863431770355e-05, -0.11351387202739716, -0.022316398099064827], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0004129749140702188, -0.001774761825799942, -0.00018809456378221512, -1.490105023549404e-05, -2.3841855067985307e-07, -6.592056161025539e-05, -0.003301885211840272], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0003911683743353933, -4.529942543740617e-06, -0.0027296210173517466, -4.875540980719961e-05, -0.00017510310863144696, -8.34461570775602e-06, -4.768370445162873e-07, -4.815939246327616e-05, -4.5298504119273275e-05, -1.0728830375228426e-06, -0.00035696811391972005, -0.00025102324434556067, -0.0005092516075819731, -4.887569048150908e-06, -2.3841830625315197e-06, -3.576278118089249e-07, -1.7881377516459906e-06, -1.2278481335670222e-05, -0.09399934113025665, -0.00297722639515996, -0.0011544713051989675, -0.000439428084064275, -0.0012504386249929667, -3.933898824470816e-06, 0.0, -0.0006279165390878916, -0.003785825800150633, -3.576272320060525e-06, -2.264974000354414e-06, -0.38291504979133606, -0.045538030564785004, -1.0728830375228426e-06, -3.576278118089249e-07, -0.00019822540343739092, -0.1411273330450058, -0.004348228219896555, -0.008605184964835644, -0.0022380324080586433], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=0", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "0", "\n"], "logprobs": [-0.021085506305098534, -0.00032669928623363376, -0.0021393049973994493, -2.0265558760002023e-06, 0.0, -0.00023529145983047783, -0.0026764783542603254, -3.933898824470816e-06, -2.7418097943154862e-06, -0.00571450823917985, -0.05151810497045517, -1.6689286894688848e-06, -2.3841855067985307e-07, -9.953480184776708e-05, -2.715975761413574, -0.2699945271015167], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0002057340752799064, -2.0265558760002023e-06, 0.0, -2.706014311115723e-05, -1.1920928244535389e-07, -3.2066785934148356e-05, -0.039779771119356155, -7.152555099310121e-07, -0.0005779979983344674, -1.311301275563892e-06, -0.00427238130941987, -0.0042384322732687, -6.6756979322235566e-06, -0.00012885693286079913, -5.960462772236497e-07, -1.247394323348999, -0.017742842435836792], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-1.2159273865108844e-05, -3.6954811548639555e-06, -0.0001299296854995191, -0.0020548435859382153, -1.0490362910786644e-05, -0.0019282572902739048, -9.97731985989958e-05, -1.7881233361549675e-05, -5.960462772236497e-07, -0.0008441222598776221, -0.00017867876158561558], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0001110968878492713, -2.3841855067985307e-07, -5.125986263010418e-06, -8.34461570775602e-06, -0.0002824861148837954, -9.405170567333698e-05, -6.294052582234144e-05, -0.00024196557933464646, -9.202533692587167e-05, -0.00021562635083682835], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.007276106625795364, -5.006777428206988e-06, -2.861018856492592e-06, -1.823885577323381e-05, -0.007803313434123993, -3.075552376685664e-05, -0.002512038918212056, -0.0002603192115202546, -0.00018726025882642716, -2.50339189733495e-06, -7.152555099310121e-07, -0.8353113532066345, -0.006340269464999437], "finish_reason": "stop"}, {"text": " report.strip().split(\"\\n\")", "tokens": [" report", ".", "strip", "()", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.09248029440641403, -9.226373367710039e-05, -2.1499876976013184, -0.0046789683401584625, -0.00027259447961114347, -0.004482934717088938, -0.023190820589661598, -0.00034445550409145653, -0.0038015018217265606, -1.6689286894688848e-06, -0.003944712691009045, -0.08555512875318527, -0.03147031366825104], "finish_reason": "stop"}, {"text": " [f\"{line}\" for line in lines if line.strip()]", "tokens": [" [", "f", "\"", "{", "line", "}\"", " for", " line", " in", " lines", " if", " line", ".", "strip", "()", "]", "\n"], "logprobs": [-0.7516530752182007, -0.8892657160758972, -0.010972402058541775, -0.24516165256500244, -0.1550663709640503, -2.813877582550049, -0.09162146598100662, -0.0009597701136954129, -0.0002623452164698392, -0.00033825874561443925, -2.283463954925537, -0.11429562419652939, -0.08129289001226425, -0.010194611735641956, -0.0013677061069756746, -0.1938241571187973, -0.03645705059170723], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.005280950106680393, -0.00031799983116798103, -0.06264873594045639, -0.0002044230350293219], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.16629672050476074, -0.00016366096679121256, -0.08746151626110077, -0.0478220097720623, -0.00784305576235056], "finish_reason": "stop"}, {"text": " len(parts) > 1:  # skip the first line", "tokens": [" len", "(", "parts", ")", " >", " ", "1", ":", "  ", "#", " skip", " the", " first", " line", "\n"], "logprobs": [-0.5353488922119141, -2.5748875486897305e-05, -0.00033849707688204944, -0.00046957432641647756, -2.0413074493408203, -0.00040642108069732785, -2.234870672225952, -0.12316051870584488, -2.6155402660369873, -2.729855441430118e-05, -3.25516939163208, -1.093376874923706, -0.7998244762420654, -0.33102846145629883, -0.9699954986572266], "finish_reason": "stop"}, {"text": " f\"{' ' * 16}{parts[0]:<16}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}{parts[4]:>10}\"", "tokens": [" f", "\"", "{'", " '", " *", " ", "1", "6", "}{", "parts", "[", "0", "]:", "<", "1", "6", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}{", "parts", "[", "4", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-1.230562686920166, -0.013112506829202175, -2.509348154067993, -0.23279568552970886, -2.2049500942230225, -0.004206974990665913, -1.3418066501617432, -2.3458878993988037, -0.024733293801546097, -0.03244352340698242, -0.008624331094324589, -0.04870019853115082, -1.1157206296920776, -0.17136909067630768, -0.44935253262519836, -1.138725757598877, -0.09853696823120117, -0.013244626112282276, -0.0029432333540171385, -0.003453958546742797, -0.0033776871860027313, -0.28434091806411743, -1.3442881107330322, -0.72220778465271, -0.5406173467636108, -0.0014256800059229136, -8.415821503149346e-05, -0.0077669997699558735, -0.00028725311858579516, -0.0009324969723820686, -0.09081295877695084, -0.08341208100318909, -0.004962034057825804, -8.821098163025454e-05, -7.629365427419543e-06, -0.002150129759684205, -0.00011240804451517761, -0.00030894274823367596, -0.007492417935281992, -0.01858956180512905, -0.19028043746948242, -0.01671922206878662, -0.01558528933674097, -0.0005204515182413161, -0.0008386432309634984, -0.0013567537534981966, -0.047307759523391724, -0.09146079421043396, -0.0888359472155571, -0.0019867937080562115], "finish_reason": "stop"}, {"text": " len(parts) == 2:  # Class labels and line separator", "tokens": [" len", "(", "parts", ")", " ==", " ", "2", ":", "  ", "#", " Class", " labels", " and", " line", " separ", "ator", "\n"], "logprobs": [-0.06264650076627731, -5.006777428206988e-06, -0.0006655623437836766, -3.111314072157256e-05, -0.06306909769773483, -2.396077979938127e-05, -1.7846312522888184, -0.06553998589515686, -0.02266700565814972, -1.311301275563892e-06, -2.5753681659698486, -1.716635823249817, -2.5713441371917725, -2.8177413940429688, -2.033752679824829, -1.3384966850280762, -0.015837594866752625], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.022011615335941315, -0.00039545822073705494, -0.020737729966640472, -0.0035683547612279654, -7.903263758635148e-05, -0.01084328442811966, -0.00994489248842001, -0.060111187398433685, -0.2365225851535797, -0.05512184277176857, -0.0018436592072248459, -0.00033158526639454067, -2.372236667724792e-05, -0.0022106750402599573, -0.0006248190766200423, -0.00248968368396163, -0.0479603037238121, -0.11630640178918839, -0.0037971078418195248, -8.821448318485636e-06, -9.775113539944869e-06, -0.00019262365822214633, -2.3483953555114567e-05, -6.294052582234144e-05, -0.0031918552704155445, -0.011044323444366455, -0.0007773000397719443, -1.537788011773955e-05, -2.145764938177308e-06, -9.452849917579442e-05, -5.6980417866725475e-05, -0.00015317220822907984, -0.007797280792146921, -0.008114821277558804, -0.012569492682814598, -0.0010517071932554245], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.018648182973265648, -0.45403122901916504], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00014006110723130405, -0.0001919085334520787, -0.0013660395052284002, -1.1920928244535389e-07, -1.1920928244535389e-07, -5.960462772236497e-07, -0.01240643672645092, -0.0007220283732749522], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.001642784452997148, -0.0007870675181038678, -0.00017808281700126827, -5.8410845667822286e-05, -0.00016318420239258558, -4.172316494077677e-06, -0.0004104725376237184, -0.001867694896645844, -4.768370445162873e-07, -4.768370445162873e-07, -1.9073468138230965e-06, -0.0014462736435234547, -0.009389526210725307], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.01974008046090603, -2.3841830625315197e-06, -3.0397906812140718e-05, -0.2940414845943451], "finish_reason": "stop"}], "metrics": {"energy": 1694.7259687032704, "energy_per_token": 4.787361493512063, "time": 52.14946, "time_per_token": 0.14731485875706213}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(f\"No column with name '{target_column}' found in the CSV file\")", "tokens": [" Value", "Error", "(", "f", "\"", "No", " column", " with", " name", " '", "{", "target", "_", "column", "}'", " found", " in", " the", " CS", "V", " file", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -3.81253719329834, -0.4859205186367035, -1.6270869970321655, -0.28980836272239685, -0.6626036763191223, -0.0003797286772169173, -9.238292841473594e-05, -6.460934673668817e-05, -1.1801649634435307e-05, -0.002701088320463896, -0.10074403136968613, -0.09210582077503204, -0.17582419514656067, -0.10845618695020676, -6.198863957251888e-06, -0.024381201714277267, -1.7344369888305664, -0.0002740246127359569, -0.0005088941543363035], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0010284854797646403, -0.02465013787150383, -0.022223014384508133, -0.08470829576253891, -0.5664648413658142, -5.173549288883805e-05, -5.8053239627042785e-05, -0.00026556302327662706, -0.002214600332081318, -0.0013159195659682155, -0.001189835020340979, -0.005670177284628153, -0.03244064003229141], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0004717191040981561, -0.0017579830018803477, -0.00017248096992261708, -1.3351351299206726e-05, -7.152555099310121e-07, -5.185469490243122e-05, -0.004135509487241507], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00033849707688204944, -5.125986263010418e-06, -0.0025027638766914606, -5.471556869451888e-05, -0.00018082413589581847, -7.033323527139146e-06, -8.344646857949556e-07, -4.95898348162882e-05, -5.566918844124302e-05, -1.1920922133867862e-06, -0.0003446938644628972, -0.00023529145983047783, -0.0004766043566633016, -5.006777428206988e-06, -1.9073468138230965e-06, -4.768370445162873e-07, -2.264974000354414e-06, -1.1086402082582936e-05, -0.11307033151388168, -0.002468160120770335, -0.0011597104603424668, -0.000440262199845165, -0.0012190061388537288, -3.2186455882765586e-06, 0.0, -0.000577402301132679, -0.0031351721845567226, -4.529942543740617e-06, -2.3841830625315197e-06, -0.3980180323123932, -0.053000230342149734, -1.1920922133867862e-06, -3.576278118089249e-07, -0.0001714082609396428, -0.14189183712005615, -0.004507975187152624, -0.009544101543724537, -0.002530351048335433], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42)", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.025995133444666862, -0.0002806984703056514, -0.0023746881633996964, -2.264974000354414e-06, 0.0, -0.0002330270071979612, -0.0028832077514380217, -4.172316494077677e-06, -2.50339189733495e-06, -0.005052061751484871, -0.05606510490179062, -1.5497195136049413e-06, -3.576278118089249e-07, -0.00010442188795423135, -0.13698017597198486, -0.005204224959015846, -1.2661221027374268, -0.006424132734537125], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.00017450717859901488, -2.50339189733495e-06, 0.0, -3.242440288886428e-05, -1.1920928244535389e-07, -2.8013790142722428e-05, -0.050777461379766464, -7.152555099310121e-07, -0.0003890234511345625, -9.536738616588991e-07, -0.004108679015189409, -0.004223356489092112, -6.556489552167477e-06, -0.0001284993631998077, -3.576278118089249e-07, -1.2749348878860474, -0.020525433123111725], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-1.0251946150674485e-05, -3.576272320060525e-06, -0.00012778419477399439, -0.0020154656376689672, -7.271740287251305e-06, -0.00167598866391927, -0.00010024998482549563, -2.4437606043647975e-05, -5.960462772236497e-07, -0.0007017772295512259, -0.00018690270371735096], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-9.917721035890281e-05, -4.768370445162873e-07, -5.602820692729438e-06, -7.152531907195225e-06, -0.0002885640424210578, -0.0001250427303602919, -5.340433563105762e-05, -0.00027891082572750747, -9.369411418447271e-05, -0.0002252801787108183], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred, output_dict=True)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ",", " output", "_", "dict", "=", "True", ")", "\n"], "logprobs": [-0.0074220155365765095, -6.6756979322235566e-06, -3.099436753473128e-06, -1.7881233361549675e-05, -0.009413971565663815, -2.95634672511369e-05, -0.0018218838376924396, -0.0002805792901199311, -0.00019894051365554333, -3.576272320060525e-06, -4.768370445162873e-07, -0.5585324168205261, -0.34746989607810974, -5.006777428206988e-06, -0.003392062848433852, -7.283422019099817e-05, -0.3816561996936798, -0.04438535496592522, -0.0017297795275226235], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.08453226834535599, -9.548207890475169e-05, -0.1184152290225029, -0.04490293562412262, -0.00021026308240834624, -0.00101383775472641, -1.0013530300057027e-05, -0.0008434075862169266, -0.07542674243450165, -0.04784110188484192], "finish_reason": "stop"}, {"text": " [f\"{' '.join(line.split())}\" for line in lines]", "tokens": [" [", "f", "\"", "{'", " '", ".", "join", "(", "line", ".", "split", "()", ")}", "\"", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.774789035320282, -0.8761950731277466, -0.012443995103240013, -3.109158515930176, -0.5981492400169373, -0.36423346400260925, -0.07464175671339035, -0.014606214128434658, -0.32883957028388977, -0.00490367179736495, -0.1184186190366745, -0.09530738741159439, -0.13498401641845703, -0.21194608509540558, -0.026474952697753906, -0.00017653337272349745, -3.683499380713329e-05, -5.793403761344962e-05, -0.8553596138954163, -0.007846604101359844], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.004982199054211378, -0.00029476112104021013, -0.04305335134267807, -0.0002184867626056075], "finish_reason": "stop"}, {"text": " [part.rjust(7) for part in line.split()]", "tokens": [" [", "part", ".", "r", "just", "(", "7", ")", " for", " part", " in", " line", ".", "split", "()", "]", "\n"], "logprobs": [-1.6210756301879883, -1.8592733144760132, -0.12208617478609085, -2.489217758178711, -0.3506515622138977, -0.013016847893595695, -2.518930673599243, -0.0566362664103508, -0.18699528276920319, -2.5629668016335927e-05, -4.291525328881107e-06, -0.002891052979975939, -6.437094270950183e-05, -0.054319851100444794, -0.01186386402696371, -0.021274227648973465, -0.02796832285821438], "finish_reason": "stop"}, {"text": " parts:", "tokens": [" parts", ":", "\n"], "logprobs": [-1.1617052555084229, -0.0562870055437088, -0.12644483149051666], "finish_reason": "stop"}, {"text": " \" \".join(parts[:-3]) + \"  \" + \" \".join(parts[-3:])", "tokens": [" \"", " \"", ".", "join", "(", "parts", "[:", "-", "3", "])", " +", " \"", "  ", "\"", " +", " \"", " \"", ".", "join", "(", "parts", "[-", "3", ":", "])", "\n"], "logprobs": [-0.5227433443069458, -0.7537549734115601, -0.04447555169463158, -1.1801649634435307e-05, -0.14284923672676086, -0.14433912932872772, -0.11268443614244461, -1.0231016874313354, -1.6807655096054077, -0.35657650232315063, -0.27652865648269653, -0.17579668760299683, -2.7648556232452393, -0.03114473633468151, -0.0635421946644783, -0.04816719889640808, -0.7138714790344238, -0.0009263038518838584, -1.4424220353248529e-05, -0.0004909025738015771, -0.0002531684876885265, -0.0009733468177728355, -0.003750078845769167, -0.0028627626597881317, -7.784063927829266e-05, -0.01965954713523388], "finish_reason": "stop"}, {"text": " len(parts) == 4:  # Macro and weighted average", "tokens": [" len", "(", "parts", ")", " ==", " ", "4", ":", "  ", "#", " Mac", "ro", " and", " weighted", " average", "\n"], "logprobs": [-0.060885220766067505, -5.8412379075889476e-06, -0.0003817544784396887, -2.932505594799295e-05, -0.05152218043804169, -2.8967437174287625e-05, -0.84159255027771, -0.05717085301876068, -0.04072639346122742, -1.1920922133867862e-06, -2.2425377368927, -0.00028451209072954953, -0.6145606637001038, -0.11538304388523102, -0.4594442546367645, -0.9951798319816589], "finish_reason": "stop"}, {"text": " f\"{parts[0]:>15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", ">", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.025882577523589134, -0.0003238391946069896, -0.020984768867492676, -0.0031261404510587454, -6.437094270950183e-05, -0.012420330196619034, -0.007562106009572744, -2.9368696212768555, -0.7088119387626648, -0.2319876104593277, -0.008213551715016365, -0.00022206225548870862, -1.5616295058862306e-05, -0.0014518683310598135, -0.00030322244856506586, -0.0009036748087964952, -0.028465155512094498, -0.167314350605011, -0.015731751918792725, -6.794906312279636e-06, -1.0251946150674485e-05, -0.00012051333033014089, -3.9219088648678735e-05, -4.339123915997334e-05, -0.0022833484690636396, -0.009664768353104591, -0.0009586982196196914, -5.8412379075889476e-06, -2.7418097943154862e-06, -0.0001431601122021675, -6.603976362384856e-05, -9.560128091834486e-05, -0.004741377662867308, -0.00837232731282711, -0.016239624470472336, -0.0009557208395563066], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.02422727458178997, -0.46839308738708496], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-7.354942499659956e-05, -0.0001726001501083374, -0.001511027687229216, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.1920922133867862e-06, -0.012266670353710651, -0.0008075552177615464], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.0018642442300915718, -0.0006828360492363572, -0.0002540027489885688, -6.174850568640977e-05, -0.00017438798386137933, -5.006777428206988e-06, -0.0004465774691198021, -0.0017484629061073065, -3.576278118089249e-07, -7.152555099310121e-07, -1.5497195136049413e-06, -0.0011472079204395413, -0.009129446931183338], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.019129667431116104, -2.0265558760002023e-06, -2.4914430468925275e-05, -0.23330247402191162], "finish_reason": "stop"}], "metrics": {"energy": 1926.9459904975897, "energy_per_token": 5.684206461644807, "time": 56.855877, "time_per_token": 0.16771645132743362}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(", "tokens": [" Value", "Error", "(", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -2.614309549331665], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.001100054127164185, -0.02119556814432144, -0.01420799270272255, -0.060847196727991104, -0.6216115355491638, -4.9232225137529895e-05, -5.6265202147187665e-05, -0.00026913834153674543, -0.0018505605403333902, -0.0013473490253090858, -0.0015381659613922238, -0.004096213262528181, -0.03914777189493179], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0005413020844571292, -0.0019212374463677406, -0.00021753329201601446, -1.4424220353248529e-05, -1.311301275563892e-06, -5.0424259825376794e-05, -0.003946493845432997], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0004051103023812175, -4.6491513785440475e-06, -0.0028166405390948057, -4.279521817807108e-05, -0.00020251607929822057, -8.106198947643861e-06, -5.960462772236497e-07, -5.23315102327615e-05, -5.125868119648658e-05, -1.311301275563892e-06, -0.00042989550274796784, -0.00022349244682118297, -0.0004974558250978589, -5.960446742392378e-06, -2.0265558760002023e-06, -4.768370445162873e-07, -1.7881377516459906e-06, -1.0371154530730564e-05, -0.09967024624347687, -0.0031948259565979242, -0.0012190061388537288, -0.0004781533498317003, -0.0013060382334515452, -3.2186455882765586e-06, 0.0, -0.0005831210291944444, -0.0032576846424490213, -4.0531076592742465e-06, -2.3841830625315197e-06, -0.4169337749481201, -0.06162727251648903, -1.1920922133867862e-06, -3.576278118089249e-07, -0.00017689094238448888, -0.13449665904045105, -0.004523877054452896, -0.011827697977423668, -0.0019785843323916197], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", "\n"], "logprobs": [-0.026446625590324402, -0.0003036991402041167, -0.0019257587846368551, -3.099436753473128e-06, 0.0, -0.00023946279543451965, -0.0029459670186042786, -3.576272320060525e-06, -2.50339189733495e-06, -0.004044923931360245, -0.050978563725948334, -1.311301275563892e-06, -3.576278118089249e-07, -0.00010513706365600228, -0.1327793002128601, -0.0041139028035104275, -0.3515877425670624], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators, random_state=42)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00016556799528189003, -2.3841830625315197e-06, 0.0, -3.45700973412022e-05, -1.1920928244535389e-07, -2.753696753643453e-05, -0.03626864403486252, -5.960462772236497e-07, -0.00030870441696606576, -1.1920922133867862e-06, -0.004155453760176897, -0.0037677744403481483, -6.198863957251888e-06, -0.00011705666838679463, -7.152555099310121e-07, -0.34086546301841736, -0.08042439818382263, -8.344646857949556e-07, -3.3378546504536644e-06, -1.4662635294371285e-05, -0.04280896484851837, -0.0008254220010712743, -0.0064363325946033, -0.01083479356020689], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-7.867782187531702e-06, -4.291525328881107e-06, -0.00013052565918769687, -0.0017740478506311774, -1.5139465176616795e-05, -0.0021489402279257774, -0.00010144196130568162, -2.2053474822314456e-05, -5.960462772236497e-07, -0.0007795632118359208, -0.00019643761334009469], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00011562632425921038, -3.576278118089249e-07, -4.529942543740617e-06, -8.583032467868179e-06, -0.00025149996508844197, -0.00010311071673640981, -4.827859811484814e-05, -0.00019739109848160297, -0.00010024998482549563, -0.00022194306075107306], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred, digits=4)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ",", " digits", "=", "4", ")", "\n"], "logprobs": [-0.007074426393955946, -5.483612312673358e-06, -2.622600959512056e-06, -1.4185804502631072e-05, -0.01261811051517725, -3.576214658096433e-05, -0.0025219083763659, -0.0003469580551609397, -0.00015960850578267127, -3.3378546504536644e-06, -4.768370445162873e-07, -0.5219106674194336, -2.3078689575195312, -8.487341256113723e-05, -1.2452861070632935, -0.11246298253536224, -0.02426113374531269], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.0796440988779068, -8.237022848334163e-05, -0.12582190334796906, -0.041655197739601135, -0.00017307691450696439, -0.0009126074146479368, -8.22540732769994e-06, -0.0008303055074065924, -0.105190709233284, -0.050274819135665894], "finish_reason": "stop"}, {"text": " [\"{:10}{:10}{:10}{:10}{:10}\".format(*line.split()) for line in lines if line.strip()]", "tokens": [" [", "\"", "{:", "1", "0", "}{", ":", "1", "0", "}{", ":", "1", "0", "}{", ":", "1", "0", "}{", ":", "1", "0", "}\"", ".", "format", "(*", "line", ".", "split", "())", " for", " line", " in", " lines", " if", " line", ".", "strip", "()", "]", "\n"], "logprobs": [-0.7300080060958862, -1.7259352207183838, -3.2797675132751465, -2.337301731109619, -1.214145541191101, -1.4169608354568481, -0.031249191612005234, -1.1522319316864014, -0.10484491288661957, -0.00845212023705244, -0.003975822124630213, -0.009126139804720879, -0.002959873527288437, -0.0008141063735820353, -0.00835293997079134, -0.007158228196203709, -0.018200181424617767, -0.10506729781627655, -0.2410678118467331, -0.035850897431373596, -0.010161571204662323, -0.09744913130998611, -0.00857540126889944, -0.0003500564198475331, -0.11246713995933533, -0.024922840297222137, -0.004169343505054712, -0.05490871146321297, -0.2077789604663849, -0.029738035053014755, -0.00025507534155622125, -0.001536499592475593, -0.0014142522122710943, -0.7929016947746277, -0.1984274983406067, -0.11665229499340057, -0.0032766959629952908, -0.0001805857609724626, -0.04549838975071907, -0.009985965676605701], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.004414337687194347, -0.0002169373765354976, -0.052551865577697754, -0.0001998939987970516], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.20153933763504028, -0.0001411338453181088, -0.08288245648145676, -0.05202159285545349, -0.008394788019359112], "finish_reason": "stop"}, {"text": " len(parts) == 4:", "tokens": [" len", "(", "parts", ")", " ==", " ", "4", ":", "\n"], "logprobs": [-0.5733702778816223, -2.4437606043647975e-05, -0.00022349244682118297, -0.0004245333548169583, -0.5463854670524597, -0.0008249455713666975, -1.1836967468261719, -0.02908402308821678, -0.23537570238113403], "finish_reason": "stop"}, {"text": " f\"class {parts[0]}{' ' * 12}{parts[1]}{' ' * 9}{parts[2]}{' ' * 8}{parts[3]}{' ' * 9}{parts[4]}\"", "tokens": [" f", "\"", "class", " {", "parts", "[", "0", "]", "}{", "'", " '", " *", " ", "1", "2", "}{", "parts", "[", "1", "]", "}{", "'", " '", " *", " ", "9", "}{", "parts", "[", "2", "]", "}{", "'", " '", " *", " ", "8", "}{", "parts", "[", "3", "]", "}{", "'", " '", " *", " ", "9", "}{", "parts", "[", "4", "]}", "\"", "\n"], "logprobs": [-1.0677502155303955, -0.0134271876886487, -0.5992388129234314, -0.09013420343399048, -0.0025420039892196655, -0.0017630999209359288, -0.014512812718749046, -2.602839469909668, -0.18768452107906342, -2.328251838684082, -0.020476382225751877, -0.13796178996562958, -0.13142146170139313, -0.7408767938613892, -1.5492998361587524, -0.03320755437016487, -0.024224597960710526, -0.01197812706232071, -0.008057943545281887, -0.02464420720934868, -0.0026907450519502163, -0.002614772180095315, -0.00037102968781255186, -0.0015244778478518128, -0.005923455115407705, -1.5526609420776367, -0.09124373644590378, -6.460934673668817e-05, -0.00011753345461329445, -0.0020549625623971224, -0.0005224770284257829, -3.564294092939235e-05, -6.389413465512916e-05, -1.847726889536716e-05, -0.0003200257197022438, -6.460934673668817e-05, -2.1398181915283203, -0.013824309222400188, -5.340433563105762e-05, -5.900685573578812e-05, -0.0007563352701254189, -0.004946020431816578, -0.00021443451987579465, -0.0003968881501350552, -6.270212179515511e-05, -0.0015200738562271, -0.0008891443139873445, -1.6056509017944336, -0.011976595968008041, -0.0005782362422905862, -0.011150309816002846, -0.00017629499780014157, -0.04415612295269966, -0.001117201172746718, -0.0030095544643700123], "finish_reason": "stop"}, {"text": " len(parts) == 2:  # Class names", "tokens": [" len", "(", "parts", ")", " ==", " ", "2", ":", "  ", "#", " Class", " names", "\n"], "logprobs": [-0.05838434398174286, -4.768360213347478e-06, -0.0005980133428238332, -3.40932747349143e-05, -0.05664336308836937, -2.4437606043647975e-05, -1.9006013870239258, -0.06161976233124733, -0.023798061534762383, -9.536738616588991e-07, -2.961057662963867, -2.012443780899048, -0.2340671420097351], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.024461470544338226, -0.00039772229501977563, -0.014977619983255863, -0.0027388939633965492, -8.95221673999913e-05, -0.01135246641933918, -0.008762598969042301, -0.06436231732368469, -0.2769964337348938, -0.05801364779472351, -0.0020334296859800816, -0.000526289688423276, -1.6569954823353328e-05, -0.0019328974885866046, -0.0005448763840831816, -0.0030108618084341288, -0.05099498853087425, -0.11046164482831955, -0.004181570839136839, -1.0013530300057027e-05, -1.1324817933200393e-05, -0.00020144341397099197, -2.276871418871451e-05, -6.675497570540756e-05, -0.003668128978461027, -0.011238839477300644, -0.0006970121758058667, -1.4543427823809907e-05, -3.099436753473128e-06, -0.0001113352773245424, -5.519237674889155e-05, -0.00015853578224778175, -0.007440592627972364, -0.007134911138564348, -0.013686269521713257, -0.0010119322687387466], "finish_reason": "stop"}, {"text": " line  # Leave other lines unchanged", "tokens": [" line", "  ", "#", " Leave", " other", " lines", " unchanged", "\n"], "logprobs": [-0.019880909472703934, -1.2495808601379395, -3.576278118089249e-07, -2.67181396484375, -0.5305598974227905, -0.005358499474823475, -0.15722620487213135, -0.0009739422821439803], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-9.60780744208023e-05, -0.00014888131408952177, -0.001874001114629209, -1.1920928244535389e-07, -2.3841855067985307e-07, -8.344646857949556e-07, -0.011316635645925999, -0.0006329201860353351], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.0020818482153117657, -0.0007462101057171822, -0.00020704510097857565, -6.69933797325939e-05, -0.00016830935783218592, -4.529942543740617e-06, -0.0004435985756572336, -0.001852583372965455, -5.960462772236497e-07, -4.768370445162873e-07, -1.4305104514278355e-06, -0.0012767505832016468, -0.009633244946599007], "finish_reason": "stop"}, {"text": " formatted_report<|endoftext|>from .task import Task", "tokens": [" formatted", "_", "report", "<", "|", "end", "of", "text", "|>", "from", " ", ".", "task", " import", " Task", "\n"], "logprobs": [-0.026121845468878746, -2.0265558760002023e-06, -2.7656173188006505e-05, -1.9761204719543457, -3.933898824470816e-06, -3.6954811548639555e-06, -2.9802276912960224e-06, -2.932505594799295e-05, -0.13480807840824127, -1.5871951580047607, -2.5032145977020264, -0.013022025115787983, -2.5057013034820557, -0.9051992893218994, -1.1043791770935059, -0.20964205265045166], "finish_reason": "stop"}], "metrics": {"energy": 1654.8117747058868, "energy_per_token": 4.3433379913540335, "time": 57.423126, "time_per_token": 0.1507168661417323}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column {target_column} not found in the CSV file.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " {", "target", "_", "column", "}", " not", " found", " in", " the", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -0.9469004273414612, -0.01680643856525421, -1.759143590927124, -0.00015198028995655477, -6.246371776796877e-05, -1.1205610462639015e-05, -0.006898988038301468, -0.021807869896292686, -0.0067117963917553425, -0.010807552374899387, -0.2498372495174408, -0.17108571529388428, -2.7418097943154862e-06, -0.011694212444126606, -0.26859620213508606, -0.004111765883862972, -0.0002544794406276196, -0.00016640232934150845], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column])", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "])", "\n"], "logprobs": [-0.0010284854797646403, -0.02465013787150383, -0.022223014384508133, -0.08470829576253891, -0.8441824316978455, -0.33156949281692505, -0.0037955641746520996, -0.00016330339713022113, -3.3854863431770355e-05, -0.11351387202739716, -0.022316398099064827], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0004129749140702188, -0.001774761825799942, -0.00018809456378221512, -1.490105023549404e-05, -2.3841855067985307e-07, -6.592056161025539e-05, -0.003301885211840272], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0003911683743353933, -4.529942543740617e-06, -0.0027296210173517466, -4.875540980719961e-05, -0.00017510310863144696, -8.34461570775602e-06, -4.768370445162873e-07, -4.815939246327616e-05, -4.5298504119273275e-05, -1.0728830375228426e-06, -0.00035696811391972005, -0.00025102324434556067, -0.0005092516075819731, -4.887569048150908e-06, -2.3841830625315197e-06, -3.576278118089249e-07, -1.7881377516459906e-06, -1.2278481335670222e-05, -0.09399934113025665, -0.00297722639515996, -0.0011544713051989675, -0.000439428084064275, -0.0012504386249929667, -3.933898824470816e-06, 0.0, -0.0006279165390878916, -0.003785825800150633, -3.576272320060525e-06, -2.264974000354414e-06, -0.38291504979133606, -0.045538030564785004, -1.0728830375228426e-06, -3.576278118089249e-07, -0.00019822540343739092, -0.1411273330450058, -0.004348228219896555, -0.008605184964835644, -0.0022380324080586433], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", "\n"], "logprobs": [-0.021085506305098534, -0.00032669928623363376, -0.0021393049973994493, -2.0265558760002023e-06, 0.0, -0.00023529145983047783, -0.0026764783542603254, -3.933898824470816e-06, -2.7418097943154862e-06, -0.00571450823917985, -0.05151810497045517, -1.6689286894688848e-06, -2.3841855067985307e-07, -9.953480184776708e-05, -0.13742735981941223, -0.004667102824896574, -0.34028321504592896], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators, random_state=42)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00020013237372040749, -2.3841830625315197e-06, 0.0, -2.7417760065873154e-05, -1.1920928244535389e-07, -3.325883881188929e-05, -0.04460769519209862, -7.152555099310121e-07, -0.00023779425828251988, -1.1920922133867862e-06, -0.004900112748146057, -0.005323401652276516, -5.8412379075889476e-06, -0.00013398226292338222, -5.960462772236497e-07, -0.28809866309165955, -0.08364488184452057, -7.152555099310121e-07, -2.7418097943154862e-06, -1.6212332411669195e-05, -0.040545087307691574, -0.0009582218481227756, -0.007375630084425211, -0.010246648453176022], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-9.059865078597795e-06, -3.933898824470816e-06, -0.00017951308109331876, -0.0021655934397131205, -1.0490362910786644e-05, -0.0016527815023437142, -0.00011896379146492109, -2.539125671319198e-05, -5.960462772236497e-07, -0.0006939148879610002, -0.00017712931730784476], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00011300401820335537, -5.960462772236497e-07, -5.125986263010418e-06, -6.794906312279636e-06, -0.00029094755882397294, -0.00011777184408856556, -5.817244164063595e-05, -0.00022539935889653862, -8.40390202938579e-05, -0.00020776021119672805], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred, output_dict=True)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ",", " output", "_", "dict", "=", "True", ")", "\n"], "logprobs": [-0.00750637985765934, -5.483612312673358e-06, -2.0265558760002023e-06, -1.4066597032069694e-05, -0.01374000683426857, -2.407998726994265e-05, -0.0025506841484457254, -0.0002416080387774855, -0.00015555603022221476, -3.2186455882765586e-06, -4.768370445162873e-07, -0.45991626381874084, -0.2602508068084717, -5.125986263010418e-06, -0.0019839382730424404, -8.964136941358447e-05, -0.2726047933101654, -0.042181506752967834, -0.0012962757609784603], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.07754481583833694, -8.83301836438477e-05, -0.12186647951602936, -0.05138607695698738, -0.00022110878489911556, -0.0010709986090660095, -8.22540732769994e-06, -0.0010085977846756577, -0.07945243269205093, -0.04830385372042656], "finish_reason": "stop"}, {"text": " [f\"{line}\\n\" for line in lines if not line.startswith(\"precision\")]", "tokens": [" [", "f", "\"", "{", "line", "}\\", "n", "\"", " for", " line", " in", " lines", " if", " not", " line", ".", "start", "sw", "ith", "(", "\"", "precision", "\"", ")]", "\n"], "logprobs": [-0.8193041682243347, -0.8282468914985657, -0.014179903082549572, -0.23259297013282776, -0.1400178223848343, -0.6859214305877686, -0.1535986214876175, -0.018368029966950417, -0.17948895692825317, -0.00285075674764812, -0.00036352223833091557, -0.0005347490659914911, -1.7727336883544922, -2.2495322227478027, -0.02899242751300335, -0.007316343020647764, -0.396480917930603, 0.0, 0.0, -0.015377413481473923, -0.0016644446877762675, -0.9016750454902649, -0.011922056786715984, -0.05700499936938286, -0.005629756022244692], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.005416835192590952, -0.00020597243565134704, -0.05467510595917702, -0.00020704510097857565], "finish_reason": "stop"}, {"text": " [part.strip() for part in line.split()]", "tokens": [" [", "part", ".", "strip", "()", " for", " part", " in", " line", ".", "split", "()", "]", "\n"], "logprobs": [-2.0992343425750732, -2.013716697692871, -0.128962442278862, -0.11775368452072144, -0.0007039214833639562, -0.05694182589650154, -0.0001230164198204875, -1.3589766240329482e-05, -0.008346792310476303, -8.630380034446716e-05, -0.021450895816087723, -0.27403268218040466, -0.05287348851561546, -0.0076004378497600555], "finish_reason": "stop"}, {"text": " len(parts) > 0 and parts[0] in [\"class\", \"accuracy\", \"macro\", \"weighted\"]:", "tokens": [" len", "(", "parts", ")", " >", " ", "0", " and", " parts", "[", "0", "]", " in", " [", "\"", "class", "\"", ",", " \"", "accuracy", "\"", ",", " \"", "macro", "\"", ",", " \"", "weighted", "\"", "]:", "\n"], "logprobs": [-0.5281517505645752, -2.753696753643453e-05, -0.0003426679759286344, -0.0004634975048247725, -1.9028973579406738, -0.0003909300430677831, -0.6843754053115845, -1.6520158052444458, -0.2881525456905365, -0.018081827089190483, -0.007752923760563135, -0.001479841535910964, -1.8578310012817383, -0.27538061141967773, -0.1274546980857849, -0.10009700804948807, -0.006984106730669737, -0.009731353260576725, -0.00027164106722921133, -0.9147258400917053, -0.00025102324434556067, -0.16791489720344543, -0.00018821375851985067, -0.009946308098733425, -0.0020736397709697485, -0.011521587148308754, -3.45700973412022e-05, -0.0017807116964831948, -9.417489309271332e-06, -0.007525901775807142, -0.008218635804951191], "finish_reason": "stop"}, {"text": " \"{:<5s} {:<8s} {:<8s} {:<8s} {:<8s}\".format(*parts)", "tokens": [" \"", "{:", "<", "5", "s", "}", " {", ":<", "8", "s", "}", " {", ":<", "8", "s", "}", " {", ":<", "8", "s", "}", " {", ":<", "8", "s", "}\"", ".", "format", "(*", "parts", ")", "\n"], "logprobs": [-0.49765855073928833, -1.1195945739746094, -0.21367119252681732, -2.31839656829834, -0.7160903215408325, -0.7928426265716553, -0.2563760578632355, -0.00013565097469836473, -1.401047945022583, -0.1713586449623108, -0.013033674098551273, -0.02012617513537407, -6.9141146923357155e-06, -0.17812886834144592, -0.002947036875411868, -0.00041309406515210867, -0.0032557835802435875, -2.3841830625315197e-06, -0.06432978808879852, -0.0004258441040292382, -0.041138794273138046, -0.17474953830242157, -0.003354281885549426, -0.5668619871139526, -0.00669900793582201, -0.050168249756097794, -0.0018170052208006382, -8.391981828026474e-05, -0.8156047463417053, -0.0001811817055568099, -0.006464877165853977, -0.0032913105096668005], "finish_reason": "stop"}, {"text": " len(parts) == 3:  # Average metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "3", ":", "  ", "#", " Average", " metrics", "\n"], "logprobs": [-0.05658861622214317, -5.960446742392378e-06, -0.00041500062798149884, -2.95634672511369e-05, -0.05533289909362793, -2.8729025871143676e-05, -1.260798692703247, -0.057273972779512405, -0.03202948719263077, -7.152555099310121e-07, -1.3678429126739502, -0.23186500370502472, -0.06810390949249268], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.01700979843735695, -0.0003326578007545322, -0.011344569735229015, -0.0024856405798345804, -8.737658936297521e-05, -0.013120153918862343, -0.00947478786110878, -0.07380201667547226, -0.22822239995002747, -0.05925094708800316, -0.0018116504652425647, -0.0003632839070633054, -1.537788011773955e-05, -0.0021715410985052586, -0.0005322470096871257, -0.002688723849132657, -0.05009784176945686, -0.11380530893802643, -0.002873817225918174, -9.775113539944869e-06, -1.0132738680113107e-05, -0.00017212340026162565, -1.9192511899746023e-05, -7.450303382938728e-05, -0.0026529375463724136, -0.012099560350179672, -0.00068926892708987, -1.1324817933200393e-05, -2.0265558760002023e-06, -9.16677454370074e-05, -5.9960475482512265e-05, -0.00018094333063345402, -0.006974517833441496, -0.007227584253996611, -0.012167750857770443, -0.001212576637044549], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.023576166480779648, -0.5232970714569092], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-9.536288416711614e-05, -0.00017832119192462415, -0.001727756578475237, -1.1920928244535389e-07, -1.1920928244535389e-07, -8.344646857949556e-07, -0.01245306059718132, -0.0008420973899774253], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.0016673009376972914, -0.0006000387365929782, -0.00018130090029444546, -6.0437283536884934e-05, -0.00020013237372040749, -6.318072337307967e-06, -0.0004138090298511088, -0.0019500303314998746, -5.960462772236497e-07, -7.152555099310121e-07, -1.4305104514278355e-06, -0.001443654764443636, -0.008869299665093422], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.01631738431751728, -1.7881377516459906e-06, -3.266281055402942e-05, -0.22571763396263123], "finish_reason": "stop"}], "metrics": {"energy": 1488.5556162309654, "energy_per_token": 3.9694816432825744, "time": 57.10992, "time_per_token": 0.15229312}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(f\"Specified target_column '{target_column}' not found in CSV file.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Spec", "ified", " target", "_", "column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -2.869359016418457, -0.0007294139941222966, -0.04161231592297554, -0.8246917128562927, -0.0008627030183561146, -0.24722060561180115, -0.00023862851958256215, -4.458328112377785e-05, -4.2437604861333966e-05, -3.099436753473128e-06, -0.00103586888872087, -0.07912856340408325, -0.011636595241725445, -0.006643589120358229, -1.5022095441818237, -5.960446742392378e-06, -0.04238240048289299, -0.3799411952495575, -0.008035357110202312, -0.00030870441696606576, -0.00020787939138244838], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0010284854797646403, -0.02465013787150383, -0.022223014384508133, -0.08470829576253891, -0.5664648413658142, -5.173549288883805e-05, -5.8053239627042785e-05, -0.00026556302327662706, -0.002214600332081318, -0.0013159195659682155, -0.001189835020340979, -0.005670177284628153, -0.03244064003229141], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0004717191040981561, -0.0017579830018803477, -0.00017248096992261708, -1.3351351299206726e-05, -7.152555099310121e-07, -5.185469490243122e-05, -0.004135509487241507], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00033849707688204944, -5.125986263010418e-06, -0.0025027638766914606, -5.471556869451888e-05, -0.00018082413589581847, -7.033323527139146e-06, -8.344646857949556e-07, -4.95898348162882e-05, -5.566918844124302e-05, -1.1920922133867862e-06, -0.0003446938644628972, -0.00023529145983047783, -0.0004766043566633016, -5.006777428206988e-06, -1.9073468138230965e-06, -4.768370445162873e-07, -2.264974000354414e-06, -1.1086402082582936e-05, -0.11307033151388168, -0.002468160120770335, -0.0011597104603424668, -0.000440262199845165, -0.0012190061388537288, -3.2186455882765586e-06, 0.0, -0.000577402301132679, -0.0031351721845567226, -4.529942543740617e-06, -2.3841830625315197e-06, -0.3980180323123932, -0.053000230342149734, -1.1920922133867862e-06, -3.576278118089249e-07, -0.0001714082609396428, -0.14189183712005615, -0.004507975187152624, -0.009544101543724537, -0.002530351048335433], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", "\n"], "logprobs": [-0.025995133444666862, -0.0002806984703056514, -0.0023746881633996964, -2.264974000354414e-06, 0.0, -0.0002330270071979612, -0.0028832077514380217, -4.172316494077677e-06, -2.50339189733495e-06, -0.005052061751484871, -0.05606510490179062, -1.5497195136049413e-06, -3.576278118089249e-07, -0.00010442188795423135, -0.13698017597198486, -0.005204224959015846, -0.3790714144706726], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators, random_state=42)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00017450717859901488, -2.50339189733495e-06, 0.0, -3.242440288886428e-05, -1.1920928244535389e-07, -2.8013790142722428e-05, -0.050777461379766464, -7.152555099310121e-07, -0.0003890234511345625, -9.536738616588991e-07, -0.004108679015189409, -0.004223356489092112, -6.556489552167477e-06, -0.0001284993631998077, -3.576278118089249e-07, -0.327829509973526, -0.10683886706829071, -8.344646857949556e-07, -3.3378546504536644e-06, -1.4781842764932662e-05, -0.05019976943731308, -0.0008505540899932384, -0.00603282917290926, -0.009456838481128216], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-1.0251946150674485e-05, -3.576272320060525e-06, -0.00012694983161054552, -0.002477792324498296, -1.0609570381348021e-05, -0.0016279076226055622, -0.00011336160969221964, -2.4318398573086597e-05, -4.768370445162873e-07, -0.0008394769974984229, -0.0002026352594839409], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00011717586312443018, -5.960462772236497e-07, -4.291525328881107e-06, -8.106198947643861e-06, -0.00029309268575161695, -0.00011908298620255664, -5.9602869441732764e-05, -0.00030751267331652343, -0.00010001159535022452, -0.0002094287920044735], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred, output_dict=True)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ",", " output", "_", "dict", "=", "True", ")", "\n"], "logprobs": [-0.0068888068199157715, -5.006777428206988e-06, -2.264974000354414e-06, -1.4662635294371285e-05, -0.012845155782997608, -3.242440288886428e-05, -0.0028720342088490725, -0.0002397011558059603, -0.00019095504831057042, -3.099436753473128e-06, -4.768370445162873e-07, -0.6044704914093018, -0.29373955726623535, -5.602820692729438e-06, -0.0026090650353580713, -9.131014667218551e-05, -0.27009934186935425, -0.050297945737838745, -0.0017308506648987532], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.07792345434427261, -0.00010442188795423135, -0.1235988661646843, -0.041769422590732574, -0.00025340684805996716, -0.0011262509506195784, -9.894321920000948e-06, -0.0006618693005293608, -0.08032495528459549, -0.04819945991039276], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.6648120284080505, -0.002186171943321824], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.005913144908845425, -0.00031275625224225223, -0.05083683505654335, -0.0001811817055568099], "finish_reason": "stop"}, {"text": " [word.ljust(12) if i < 4 else word for i, word in enumerate(line.split())]", "tokens": [" [", "word", ".", "l", "just", "(", "1", "2", ")", " if", " i", " <", " ", "4", " else", " word", " for", " i", ",", " word", " in", " enumerate", "(", "line", ".", "split", "()", ")]", "\n"], "logprobs": [-1.7621715068817139, -0.23538605868816376, -0.13679948449134827, -0.9718913435935974, -1.311301275563892e-06, -0.0004533693427219987, -0.3434036672115326, -1.2493748664855957, -0.03955050930380821, -1.0920206308364868, -0.3539346754550934, -0.44350123405456543, -0.028172440826892853, -0.7531719207763672, -0.0020214139949530363, -0.06230112165212631, -0.7463420629501343, -0.0009064141195267439, -1.4066597032069694e-05, -0.01578584685921669, -8.713819261174649e-05, -0.00012599628826137632, -1.3589766240329482e-05, -0.0014699617167934775, -0.00026663561584427953, -0.001775832730345428, -0.004325913731008768, -0.00010764019680209458, -0.0007608617888763547], "finish_reason": "stop"}, {"text": " len(parts) > 0:", "tokens": [" len", "(", "parts", ")", " >", " ", "0", ":", "\n"], "logprobs": [-0.49349039793014526, -2.276871418871451e-05, -0.00037329382030293345, -0.0005222387262620032, -2.0120036602020264, -0.0003095386200584471, -0.7969040274620056, -0.23346908390522003, -0.010185171850025654], "finish_reason": "stop"}, {"text": " (", "tokens": [" (", "\n"], "logprobs": [-2.0922441482543945, -0.04308281093835831], "finish_reason": "stop"}, {"text": " len(parts) == 1:  # Line break", "tokens": [" len", "(", "parts", ")", " ==", " ", "1", ":", "  ", "#", " Line", " break", "\n"], "logprobs": [-0.057905200868844986, -5.602820692729438e-06, -0.0006596058374270797, -3.111314072157256e-05, -0.06479021906852722, -2.5510462364763953e-05, -3.631512403488159, -0.33225953578948975, -0.036542680114507675, -2.3841855067985307e-07, -2.8367726802825928, -0.9723896980285645, -0.37174057960510254], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.018367677927017212, -0.00036125810584053397, -0.017979968339204788, -0.002942995633929968, -7.343022298300639e-05, -0.01068065408617258, -0.009760159067809582, -0.06763886660337448, -0.24024708569049835, -0.0537874661386013, -0.001921713468618691, -0.0003358753747306764, -2.1576648578047752e-05, -0.0025058556348085403, -0.0005970602505840361, -0.003656132845208049, -0.04618968069553375, -0.10796994715929031, -0.0035710867960006, -7.748573807475623e-06, -9.894321920000948e-06, -0.0001984637783607468, -2.1934269170742482e-05, -6.270212179515511e-05, -0.0031522843055427074, -0.011053401976823807, -0.0008468617452308536, -1.4066597032069694e-05, -2.145764938177308e-06, -8.654219709569588e-05, -4.8636207793606445e-05, -0.00018142008048016578, -0.006579521577805281, -0.008206339552998543, -0.01246907189488411, -0.0009239218779839575], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.019655104726552963, -0.3986451327800751], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.0001232548092957586, -0.00015567521040793508, -0.00134151556994766, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.311301275563892e-06, -0.01353821437805891, -0.0006268443539738655], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.0018829250475391746, -0.0007974305190145969, -0.00022480344341602176, -5.304672595229931e-05, -0.000192504478036426, -4.887569048150908e-06, -0.00038187362952157855, -0.001684914343059063, -7.152555099310121e-07, -8.344646857949556e-07, -1.5497195136049413e-06, -0.0014265133067965508, -0.009139605797827244], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.01927374117076397, -2.264974000354414e-06, -2.884823152271565e-05, -0.2678346037864685], "finish_reason": "stop"}], "metrics": {"energy": 2130.7679450902947, "energy_per_token": 6.658649828407171, "time": 58.24771, "time_per_token": 0.18202409375}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(\"Target column not found in CSV file\")", "tokens": [" Value", "Error", "(", "\"", "Target", " column", " not", " found", " in", " CS", "V", " file", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -2.1669256687164307, -1.0294450521469116, -0.018398577347397804, -0.6269004940986633, -0.00964068342000246, -0.05387907847762108, -1.7183297872543335, -9.417489309271332e-06, -0.01947905495762825, -0.8146460652351379, -0.0017201402224600315, -0.0006565084331668913], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.001100054127164185, -0.02119556814432144, -0.01420799270272255, -0.060847196727991104, -0.6216115355491638, -4.9232225137529895e-05, -5.6265202147187665e-05, -0.00026913834153674543, -0.0018505605403333902, -0.0013473490253090858, -0.0015381659613922238, -0.004096213262528181, -0.03914777189493179], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0005413020844571292, -0.0019212374463677406, -0.00021753329201601446, -1.4424220353248529e-05, -1.311301275563892e-06, -5.0424259825376794e-05, -0.003946493845432997], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=0)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.0004051103023812175, -4.6491513785440475e-06, -0.0028166405390948057, -4.279521817807108e-05, -0.00020251607929822057, -8.106198947643861e-06, -5.960462772236497e-07, -5.23315102327615e-05, -5.125868119648658e-05, -1.311301275563892e-06, -0.00042989550274796784, -0.00022349244682118297, -0.0004974558250978589, -5.960446742392378e-06, -2.0265558760002023e-06, -4.768370445162873e-07, -1.7881377516459906e-06, -1.0371154530730564e-05, -0.09967024624347687, -0.0031948259565979242, -0.0012190061388537288, -0.0004781533498317003, -0.0013060382334515452, -3.2186455882765586e-06, 0.0, -0.0005831210291944444, -0.0032576846424490213, -4.0531076592742465e-06, -2.3841830625315197e-06, -0.4169337749481201, -0.06162727251648903, -1.1920922133867862e-06, -3.576278118089249e-07, -0.00017689094238448888, -2.8394298553466797, -0.021887997165322304, -0.0018562719924375415], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", "\n"], "logprobs": [-0.026446625590324402, -0.0003036991402041167, -0.0019257587846368551, -3.099436753473128e-06, 0.0, -0.00023946279543451965, -0.0029459670186042786, -3.576272320060525e-06, -2.50339189733495e-06, -0.004044923931360245, -0.050978563725948334, -1.311301275563892e-06, -3.576278118089249e-07, -0.00010513706365600228, -0.1327793002128601, -0.0041139028035104275, -0.3515877425670624], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.00016556799528189003, -2.3841830625315197e-06, 0.0, -3.45700973412022e-05, -1.1920928244535389e-07, -2.753696753643453e-05, -0.03626864403486252, -5.960462772236497e-07, -0.00030870441696606576, -1.1920922133867862e-06, -0.004155453760176897, -0.0037677744403481483, -6.198863957251888e-06, -0.00011705666838679463, -7.152555099310121e-07, -1.242108702659607, -0.01613851636648178], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-1.1801649634435307e-05, -3.814689989667386e-06, -0.00014578233822248876, -0.002345907734706998, -1.3947389561508317e-05, -0.0015042430022731423, -0.00010656742961145937, -2.5033637939486653e-05, -4.768370445162873e-07, -0.0008220868767239153, -0.00018606838420964777], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00010895135346800089, -2.3841855067985307e-07, -5.125986263010418e-06, -6.9141146923357155e-06, -0.00031442465842701495, -0.00011264643399044871, -4.4225667807040736e-05, -0.00018189683032687753, -9.762764238985255e-05, -0.00019441144831944257], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred, output_dict=True)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ",", " output", "_", "dict", "=", "True", ")", "\n"], "logprobs": [-0.006073234602808952, -5.602820692729438e-06, -2.145764938177308e-06, -1.5139465176616795e-05, -0.014904570765793324, -3.683499380713329e-05, -0.0017006233101710677, -0.00028534632292576134, -0.00016890530241653323, -2.7418097943154862e-06, -1.1920922133867862e-06, -0.45345714688301086, -0.2642543911933899, -4.6491513785440475e-06, -0.0041675628162920475, -9.142934868577868e-05, -0.3103887438774109, -0.05179636925458908, -0.0016141016967594624], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.08277272433042526, -0.00010775939153973013, -0.12217817455530167, -0.04233738034963608, -0.0003152588615193963, -0.0011544713051989675, -7.510157047363464e-06, -0.0007184546557255089, -0.09386260062456131, -0.04950489103794098], "finish_reason": "stop"}, {"text": " [f\"{line.strip():<25}{value}\" for line, value in zip(lines, lines[1:])]", "tokens": [" [", "f", "\"", "{", "line", ".", "strip", "():", "<", "2", "5", "}{", "value", "}\"", " for", " line", ",", " value", " in", " zip", "(", "lines", ",", " lines", "[", "1", ":]", ")]", "\n"], "logprobs": [-0.8688706755638123, -0.8923513293266296, -0.012977310456335545, -0.2550213634967804, -0.19739165902137756, -2.935988664627075, -0.5196022987365723, -1.3722186088562012, -0.22629448771476746, -1.6998016834259033, -1.673032283782959, -1.8581916093826294, -1.7842764854431152, -0.8471193313598633, -0.0276130773127079, -0.007730330340564251, -0.0516963005065918, -0.004252676852047443, -0.0013136576162651181, -0.014001828618347645, -0.004144413396716118, -0.001960857305675745, -0.934593915939331, -0.5042616724967957, -0.1182093396782875, -0.10846955329179764, -0.064972884953022, -0.009715179912745953, -0.00584618654102087], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.005514291115105152, -0.0002760506176855415, -0.046152230352163315, -0.0001934579631779343], "finish_reason": "stop"}, {"text": " [word.strip() for word in line.split()]", "tokens": [" [", "word", ".", "strip", "()", " for", " word", " in", " line", ".", "split", "()", "]", "\n"], "logprobs": [-2.190415620803833, -0.17787624895572662, -0.1507442146539688, -0.5691026449203491, -0.0006332775810733438, -0.0669725090265274, -0.0012912754900753498, -1.680836794548668e-05, -0.0037184874527156353, -3.564294092939235e-05, -0.03193388879299164, -0.13329994678497314, -0.057191114872694016, -0.004253745079040527], "finish_reason": "stop"}, {"text": " parts:", "tokens": [" parts", ":", "\n"], "logprobs": [-0.9500536918640137, -0.04848932474851608, -0.15682967007160187], "finish_reason": "stop"}, {"text": " \" \".join(parts[:-2]) + \" \" * 4 + \" \".join(parts[-2:])", "tokens": [" \"", " \"", ".", "join", "(", "parts", "[:", "-", "2", "])", " +", " \"", " \"", " *", " ", "4", " +", " \"", " \"", ".", "join", "(", "parts", "[-", "2", ":", "])", "\n"], "logprobs": [-0.5456340312957764, -0.7910833358764648, -0.05734691768884659, -1.7762025890988298e-05, -0.1603294163942337, -0.19535164535045624, -0.09859303385019302, -1.0218416452407837, -1.5497839450836182, -0.42515987157821655, -0.3751007914543152, -0.1857997328042984, -0.36466872692108154, -0.18564756214618683, -0.02497202344238758, -1.1767463684082031, -0.044290702790021896, -0.555461049079895, -0.1317872405052185, -0.0019340872531756759, -7.510157047363464e-06, -0.0005026984144933522, -0.00022468426323030144, -0.0006394725642167032, -0.004096094518899918, -0.002372309798374772, -2.002696055569686e-05, -0.009610693901777267], "finish_reason": "stop"}, {"text": " len(parts) == 4:  # Macro and weighted averages", "tokens": [" len", "(", "parts", ")", " ==", " ", "4", ":", "  ", "#", " Mac", "ro", " and", " weighted", " averages", "\n"], "logprobs": [-0.05888630077242851, -5.483612312673358e-06, -0.0004611144249793142, -3.302042750874534e-05, -0.05247664451599121, -2.7894584491150454e-05, -0.824678897857666, -0.0537722148001194, -0.04301486909389496, -7.152555099310121e-07, -2.247217893600464, -0.0003073934931308031, -0.737079381942749, -0.1300869882106781, -1.130750060081482, -0.012423980049788952], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.01990404911339283, -0.0005227153305895627, -0.01343283336609602, -0.00320504535920918, -8.11782301752828e-05, -0.010708488523960114, -0.01008651778101921, -0.05532150715589523, -0.26357200741767883, -0.05324067175388336, -0.0021771318279206753, -0.00036745471879839897, -2.2649508537142538e-05, -0.0021113501861691475, -0.0007085673278197646, -0.0026675614062696695, -0.0548303946852684, -0.10781627148389816, -0.0031635735649615526, -1.2278481335670222e-05, -1.168244216387393e-05, -0.00021038226259406656, -2.1815061700181104e-05, -7.70062324590981e-05, -0.0036421173717826605, -0.01057733129709959, -0.0007666985620744526, -1.823885577323381e-05, -2.264974000354414e-06, -9.798523387871683e-05, -5.829164365422912e-05, -0.0001731960946926847, -0.007440356072038412, -0.007370541803538799, -0.010200747288763523, -0.0013237770181149244], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.020848065614700317, -0.523461103439331], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00014733182615600526, -0.0001971527235582471, -0.0015939876902848482, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.6689286894688848e-06, -0.010839392431080341, -0.000860320869833231], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.001657184911891818, -0.000604565953835845, -0.0002047805901383981, -5.8053239627042785e-05, -0.0001728385395836085, -6.079655122448457e-06, -0.0003721021639648825, -0.0018036778783425689, -7.152555099310121e-07, -4.768370445162873e-07, -1.1920922133867862e-06, -0.001443654764443636, -0.008299386128783226], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.020244520157575607, -2.145764938177308e-06, -2.8609820219571702e-05, -0.3031606078147888], "finish_reason": "stop"}], "metrics": {"energy": 2486.9100704908374, "energy_per_token": 7.401518066937016, "time": 69.71003, "time_per_token": 0.2074703273809524}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(f\"The specified target_column '{target_column}' is not found in the CSV file.\")", "tokens": [" Value", "Error", "(", "f", "\"", "The", " specified", " target", "_", "column", " '", "{", "target", "_", "column", "}'", " is", " not", " found", " in", " the", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -1.5078020095825195, -0.49452662467956543, -0.036111246794462204, -0.5588955283164978, -0.0005536930402740836, -0.22762511670589447, -0.00011550712952157483, -4.172238186583854e-05, -4.6967357775429264e-05, -2.264974000354414e-06, -0.0009155849111266434, -0.9057443141937256, -0.002709767082706094, -0.4203405976295471, -0.006286844611167908, -0.0019268295727670193, -0.07184065133333206, -2.145764938177308e-06, -0.017966970801353455, -0.08980026096105576, -0.00498587591573596, -0.0004934046883136034, -0.00019500737835187465], "finish_reason": "stop"}, {"text": " df.drop([target_column], axis=1)", "tokens": [" df", ".", "drop", "([", "target", "_", "column", "]", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0010284854797646403, -0.02465013787150383, -0.022223014384508133, -2.525385856628418, -0.011767260730266571, -0.00020692592079285532, -4.792098479811102e-05, -0.007369949948042631, -0.0006385194719769061, -0.00907333567738533, -0.007145445328205824, -0.004668764304369688, -0.005578900687396526, -0.04485791549086571], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0003885467885993421, -0.0015747062861919403, -0.00014780859055463225, -1.0371154530730564e-05, -2.3841855067985307e-07, -5.3881147323409095e-05, -0.003637247486039996], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.00028165188268758357, -4.768360213347478e-06, -0.0033401434775441885, -5.07818695041351e-05, -0.00023493390472140163, -6.437280717364047e-06, -8.344646857949556e-07, -5.1377883210079744e-05, -4.8993817472364753e-05, -1.311301275563892e-06, -0.0003129946126136929, -0.0002849888114724308, -0.00042215018766000867, -4.0531076592742465e-06, -1.6689286894688848e-06, -3.576278118089249e-07, -1.6689286894688848e-06, -1.1205610462639015e-05, -1.8703094720840454], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", "\n"], "logprobs": [-0.0247364342212677, -0.0003580405900720507, -0.0017749997787177563, -3.099436753473128e-06, 0.0, -0.00022909401741344482, -0.0033865978475660086, -3.814689989667386e-06, -1.9073468138230965e-06, -0.0048152911476790905, -0.049105577170848846, -1.311301275563892e-06, -3.576278118089249e-07, -9.691245941212401e-05, -0.11308928579092026, -0.003953617997467518, -0.4096866846084595], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.00020394629973452538, -2.3841830625315197e-06, 0.0, -3.3378044463461265e-05, -1.1920928244535389e-07, -2.658331868587993e-05, -0.04171545431017876, -7.152555099310121e-07, -0.0004629017203114927, -8.344646857949556e-07, -0.004226799122989178, -0.003053647233173251, -5.8412379075889476e-06, -0.00013374387344811112, -4.768370445162873e-07, -1.267256498336792, -0.018319223076105118], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-1.0967194612021558e-05, -3.814689989667386e-06, -0.0001392267586197704, -0.001997025217860937, -1.3947389561508317e-05, -0.0015956539427861571, -0.00010918975021922961, -2.1576648578047752e-05, -5.960462772236497e-07, -0.000596107158344239, -0.00019167017308063805], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00011002412065863609, -8.344646857949556e-07, -4.887569048150908e-06, -8.702239938429557e-06, -0.0002598424907773733, -0.00011228884250158444, -5.030505417380482e-05, -0.00025042734341695905, -0.00010287232726113871, -0.00021002470748499036], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred, output_dict=True)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ",", " output", "_", "dict", "=", "True", ")", "\n"], "logprobs": [-0.007797044236212969, -6.318072337307967e-06, -2.264974000354414e-06, -1.537788011773955e-05, -0.013005903922021389, -3.111314072157256e-05, -0.0019528857665136456, -0.0003131137927994132, -0.00022063204960431904, -2.861018856492592e-06, -3.576278118089249e-07, -0.5398911237716675, -0.3195762634277344, -3.576272320060525e-06, -0.0028827323112636805, -9.369411418447271e-05, -0.34191638231277466, -0.04763800650835037, -0.0014188947388902307], "finish_reason": "stop"}, {"text": " report.strip().split(\"\\n\")", "tokens": [" report", ".", "strip", "()", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.08176887035369873, -0.00010501786891836673, -1.991939663887024, -0.006027497351169586, -0.00021526881027966738, -0.0035403212532401085, -0.019240180030465126, -0.0005224770284257829, -0.0046315062791109085, -1.5497195136049413e-06, -0.002964152256026864, -0.0913727805018425, -0.03847545385360718], "finish_reason": "stop"}, {"text": " [lines[0]] + lines[2:-3]", "tokens": [" [", "lines", "[", "0", "]]", " +", " lines", "[", "2", ":-", "3", "]", "\n"], "logprobs": [-0.8590666651725769, -2.542710781097412, -0.006548256613314152, -0.1607269048690796, -0.2588306665420532, -1.8667100667953491, -0.7407016158103943, -0.008829480037093163, -0.1711219847202301, -0.36755481362342834, -1.574955940246582, -0.31161999702453613, -0.7869629859924316], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.003948393743485212, -0.00029094755882397294, -0.05283922702074051, -0.00021288513380568475], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.15400932729244232, -0.00011395759065635502, -0.10213758051395416, -0.05002470687031746, -0.008223365060985088], "finish_reason": "stop"}, {"text": " parts:", "tokens": [" parts", ":", "\n"], "logprobs": [-1.2615525722503662, -0.04608313366770744, -0.12548568844795227], "finish_reason": "stop"}, {"text": " \"{:<10} {:>10} {:>10} {:>10} {:>10}\".format(*parts)", "tokens": [" \"", "{:", "<", "1", "0", "}", " {:", ">", "1", "0", "}", " {:", ">", "1", "0", "}", " {:", ">", "1", "0", "}", " {:", ">", "1", "0", "}\"", ".", "format", "(*", "parts", ")", "\n"], "logprobs": [-0.728028416633606, -1.2099448442459106, -0.2185402661561966, -0.6942797303199768, -0.6701722741127014, -1.0890793800354004, -1.1204869747161865, -0.016905955970287323, -1.0364216566085815, -0.0759490579366684, -0.015559585765004158, -0.0013802058529108763, -0.0007666985620744526, -0.05888090655207634, -0.0410209484398365, -0.002282991772517562, -0.00026603974401950836, -0.000105375460407231, -0.007474906742572784, -0.01784203201532364, -0.08252248167991638, -0.014602572657167912, -0.0010387268848717213, -0.027631979435682297, -0.053262826055288315, -0.03306259214878082, -0.00048792376765049994, -5.5549986427649856e-05, -1.0003968477249146, -0.0003405229654163122, -0.005291148088872433, -0.002442117314785719], "finish_reason": "stop"}, {"text": " len(parts) == 4:", "tokens": [" len", "(", "parts", ")", " ==", " ", "4", ":", "\n"], "logprobs": [-0.057731032371520996, -5.364403477869928e-06, -0.0006926044588908553, -2.9801878554280847e-05, -0.06093805283308029, -2.5033637939486653e-05, -0.911401629447937, -0.05580933392047882, -2.9946401119232178], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.02252388745546341, -0.0003672163875307888, -0.01911095529794693, -0.0031123552471399307, -6.341733387671411e-05, -0.010533805005252361, -0.009594046510756016, -0.07340885698795319, -0.2307671755552292, -0.05387648195028305, -0.0019778707064688206, -0.00029905137489549816, -1.8954096958623268e-05, -0.001900772680528462, -0.0005687049706466496, -0.0028055852744728327, -0.040986623615026474, -0.10357465595006943, -0.0027451948262751102, -5.960446742392378e-06, -1.1444026313256472e-05, -0.00020037073409184813, -1.7165990357170813e-05, -6.913899414939806e-05, -0.0027813343331217766, -0.009979356080293655, -0.0007151191821321845, -1.0967194612021558e-05, -2.3841830625315197e-06, -9.321732068201527e-05, -5.113947918289341e-05, -0.00017998983094003052, -0.006762238685041666, -0.006958181504160166, -0.011738159693777561, -0.0011398254428058863], "finish_reason": "stop"}, {"text": " line  # For other lines", "tokens": [" line", "  ", "#", " For", " other", " lines", "\n"], "logprobs": [-0.028997523710131645, -1.222457766532898, -2.3841855067985307e-07, -2.5692806243896484, -0.9674150347709656, -0.09017428755760193, -1.050599455833435], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00010215714428341016, -0.00016151554882526398, -0.0020737587474286556, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.311301275563892e-06, -0.013749530538916588, -0.0007316772826015949], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.0019576449412852526, -0.0007447806419804692, -0.00024732868769206107, -6.270212179515511e-05, -0.00019238528329879045, -5.364403477869928e-06, -0.0003381395654287189, -0.002280374988913536, -5.960462772236497e-07, -5.960462772236497e-07, -1.6689286894688848e-06, -0.0013675870141014457, -0.009191815741360188], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.018031718209385872, -2.145764938177308e-06, -2.3483953555114567e-05, -0.24134822189807892], "finish_reason": "stop"}], "metrics": {"energy": 1953.6172545061106, "energy_per_token": 6.2615937644426625, "time": 54.25219, "time_per_token": 0.17388522435897436}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(f\"The specified target_column {target_column} was not found in the CSV file\")", "tokens": [" Value", "Error", "(", "f", "\"", "The", " specified", " target", "_", "column", " {", "target", "_", "column", "}", " was", " not", " found", " in", " the", " CS", "V", " file", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -1.5078020095825195, -0.49452662467956543, -0.036111246794462204, -0.5588955283164978, -0.0005536930402740836, -2.2445356845855713, -0.00014697425649501383, -3.194758028257638e-05, -5.483612312673358e-06, -0.00394661258906126, -0.939460277557373, -0.0007510940195061266, -0.0013915151357650757, -0.011343508958816528, -0.007811001501977444, -0.11535606533288956, -2.861018856492592e-06, -0.018665382638573647, -1.8795812129974365, -0.0003143055073451251, -0.00029762129997834563], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column])", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "])", "\n"], "logprobs": [-0.0010284854797646403, -0.02465013787150383, -0.022223014384508133, -0.08470829576253891, -0.8441824316978455, -0.33156949281692505, -0.0037955641746520996, -0.00016330339713022113, -3.3854863431770355e-05, -0.11351387202739716, -0.022316398099064827], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0004129749140702188, -0.001774761825799942, -0.00018809456378221512, -1.490105023549404e-05, -2.3841855067985307e-07, -6.592056161025539e-05, -0.003301885211840272], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ")", "\n"], "logprobs": [-0.0003911683743353933, -4.529942543740617e-06, -0.0027296210173517466, -4.875540980719961e-05, -0.00017510310863144696, -8.34461570775602e-06, -4.768370445162873e-07, -4.815939246327616e-05, -4.5298504119273275e-05, -1.0728830375228426e-06, -0.00035696811391972005, -0.00025102324434556067, -0.0005092516075819731, -4.887569048150908e-06, -2.3841830625315197e-06, -3.576278118089249e-07, -1.7881377516459906e-06, -1.2278481335670222e-05, -0.09399934113025665, -0.00297722639515996, -0.0011544713051989675, -0.000439428084064275, -0.0012504386249929667, -3.933898824470816e-06, 0.0, -0.0006279165390878916, -0.003785825800150633, -3.576272320060525e-06, -2.264974000354414e-06, -1.1456589698791504, -0.0011869773734360933], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42)", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.021085506305098534, -0.00032669928623363376, -0.0021393049973994493, -2.0265558760002023e-06, 0.0, -0.00023529145983047783, -0.0026764783542603254, -3.933898824470816e-06, -2.7418097943154862e-06, -0.00571450823917985, -0.05151810497045517, -1.6689286894688848e-06, -2.3841855067985307e-07, -9.953480184776708e-05, -0.13742735981941223, -0.004667102824896574, -1.338280439376831, -0.007357051596045494], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators, random_state=42)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00020013237372040749, -2.3841830625315197e-06, 0.0, -2.7417760065873154e-05, -1.1920928244535389e-07, -3.325883881188929e-05, -0.04460769519209862, -7.152555099310121e-07, -0.00023779425828251988, -1.1920922133867862e-06, -0.004900112748146057, -0.005323401652276516, -5.8412379075889476e-06, -0.00013398226292338222, -5.960462772236497e-07, -0.28809866309165955, -0.08364488184452057, -7.152555099310121e-07, -2.7418097943154862e-06, -1.6212332411669195e-05, -0.040545087307691574, -0.0009582218481227756, -0.007375630084425211, -0.010246648453176022], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-9.059865078597795e-06, -3.933898824470816e-06, -0.00017951308109331876, -0.0021655934397131205, -1.0490362910786644e-05, -0.0016527815023437142, -0.00011896379146492109, -2.539125671319198e-05, -5.960462772236497e-07, -0.0006939148879610002, -0.00017712931730784476], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00011300401820335537, -5.960462772236497e-07, -5.125986263010418e-06, -6.794906312279636e-06, -0.00029094755882397294, -0.00011777184408856556, -5.817244164063595e-05, -0.00022539935889653862, -8.40390202938579e-05, -0.00020776021119672805], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred, zero_division=0)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ",", " zero", "_", "division", "=", "0", ")", "\n"], "logprobs": [-0.00750637985765934, -5.483612312673358e-06, -2.0265558760002023e-06, -1.4066597032069694e-05, -0.01374000683426857, -2.407998726994265e-05, -0.0025506841484457254, -0.0002416080387774855, -0.00015555603022221476, -3.2186455882765586e-06, -4.768370445162873e-07, -0.45991626381874084, -3.0118682384490967, -0.00010239553375868127, -0.0022161465603858232, -0.0008856903295964003, -0.169040709733963, -0.06009502336382866, -0.01216574851423502], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.07754481583833694, -8.83301836438477e-05, -0.12186647951602936, -0.05138607695698738, -0.00022110878489911556, -0.0010709986090660095, -8.22540732769994e-06, -0.0010085977846756577, -0.07945243269205093, -0.04830385372042656], "finish_reason": "stop"}, {"text": " [\"\", \"\"]", "tokens": [" [", "\"", "\"", ",", " \"", "\"", "]", "\n"], "logprobs": [-0.8193041682243347, -1.7018506526947021, -2.8199636936187744, -1.3048890829086304, -0.045640990138053894, -0.9412193894386292, -1.0585452318191528, -0.29467061161994934], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.005416835192590952, -0.00020597243565134704, -0.05467510595917702, -0.00020704510097857565], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.16588468849658966, -0.00012146688823122531, -0.13090339303016663, -0.06245164945721626, -0.00798675324767828], "finish_reason": "stop"}, {"text": " len(parts) == 0:", "tokens": [" len", "(", "parts", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-0.5281517505645752, -2.753696753643453e-05, -0.0003426679759286344, -0.0004634975048247725, -0.5321354866027832, -0.0009265420376323164, -1.8357099294662476, -0.014698080718517303, -0.06926361471414566], "finish_reason": "stop"}, {"text": " f\"class {parts[0]}   {' '.join(parts[1:3])}  {' '.join(parts[3:])}\"", "tokens": [" f", "\"", "class", " {", "parts", "[", "0", "]}", "   ", "{'", " '", ".", "join", "(", "parts", "[", "1", ":", "3", "]", ")}", "  ", "{'", " '", ".", "join", "(", "parts", "[", "3", ":]", ")}", "\"", "\n"], "logprobs": [-1.156184434890747, -0.013813492842018604, -0.44270434975624084, -0.07118386030197144, -0.002064360771328211, -0.002395500196143985, -0.01478664856404066, -0.27872204780578613, -3.2884910106658936, -0.6148059964179993, -0.18498149514198303, -0.06975924968719482, -9.059865078597795e-06, -0.0027782435063272715, -0.008029444143176079, -0.01750015653669834, -0.011790823191404343, -0.5508064031600952, -3.1505448818206787, -0.0384657047688961, -0.21442049741744995, -2.2530674934387207, -0.2576500475406647, -0.010979005135595798, -0.0021554825361818075, -5.125986263010418e-06, -0.0024900403805077076, -0.0052700405940413475, -0.014671062119305134, -0.06603803485631943, -0.16832681000232697, -0.048391878604888916, -0.08342249691486359, -0.012573731131851673], "finish_reason": "stop"}, {"text": " len(parts) == 4:  # Accuracy or average metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "4", ":", "  ", "#", " Accuracy", " or", " average", " metrics", "\n"], "logprobs": [-0.059188030660152435, -5.006777428206988e-06, -0.00032074074260890484, -3.075552376685664e-05, -0.04921259731054306, -2.5987286790041253e-05, -0.8145568370819092, -0.06642194092273712, -0.04544040933251381, -9.536738616588991e-07, -2.69130802154541, -1.6862117052078247, -0.7035507559776306, -0.3441578447818756, -0.009230676107108593], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.014598578214645386, -0.0005075835506431758, -0.020261459052562714, -0.003676918102428317, -7.188061863416806e-05, -0.011799659579992294, -0.007820227183401585, -0.05110282823443413, -0.2487378865480423, -0.04964998736977577, -0.0018436592072248459, -0.00024148885859176517, -1.7404405298293568e-05, -0.0017283515771850944, -0.000504723924677819, -0.0027147603686898947, -0.04875129088759422, -0.10494988411664963, -0.0032373659778386354, -7.748573807475623e-06, -1.1205610462639015e-05, -0.00019941726350225508, -2.109982233378105e-05, -7.73638384998776e-05, -0.0037349958438426256, -0.011438385583460331, -0.0005949157639406621, -1.9430925021879375e-05, -2.3841830625315197e-06, -9.953480184776708e-05, -6.246371776796877e-05, -0.00016664070426486433, -0.007862807251513004, -0.007343324366956949, -0.012173285707831383, -0.0012311505852267146], "finish_reason": "stop"}, {"text": " line  # No formatting needed for other lines", "tokens": [" line", "  ", "#", " No", " formatting", " needed", " for", " other", " lines", "\n"], "logprobs": [-0.018184026703238487, -0.92902672290802, -2.3841855067985307e-07, -1.0556050539016724, -0.44593676924705505, -1.9707002639770508, -0.7746827006340027, -0.5080540180206299, -0.016163969412446022, -0.008706584572792053], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-9.047575440490618e-05, -0.00016223068814724684, -0.0013393727131187916, -1.1920928244535389e-07, -1.1920928244535389e-07, -4.768370445162873e-07, -0.012925886549055576, -0.0007895689341239631], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.0019063648069277406, -0.0007053509471006691, -0.00024720950750634074, -5.23315102327615e-05, -0.00014768941036891192, -5.125986263010418e-06, -0.00035363141796551645, -0.0016742035513743758, -5.960462772236497e-07, -4.768370445162873e-07, -1.5497195136049413e-06, -0.0012347224401310086, -0.009412318468093872], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.024739690124988556, -2.145764938177308e-06, -2.7179348762729205e-05, -0.24052248895168304], "finish_reason": "stop"}], "metrics": {"energy": 1692.1244500589378, "energy_per_token": 5.036084672794457, "time": 59.9583, "time_per_token": 0.17844732142857142}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(f\"{target_column} not found in CSV file\")", "tokens": [" Value", "Error", "(", "f", "\"", "{", "target", "_", "column", "}", " not", " found", " in", " CS", "V", " file", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -2.9130983352661133, -0.0012301980750635266, -4.625213477993384e-05, -1.0251946150674485e-05, -0.007588725537061691, -0.9250315427780151, -0.03132105618715286, -0.006257346831262112, -1.1322405338287354, -9.894321920000948e-06, -0.06405901163816452, -0.41672444343566895, -0.0002673506969586015, -0.0010437285527586937], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0010284854797646403, -0.02465013787150383, -0.022223014384508133, -0.08470829576253891, -0.5664648413658142, -5.173549288883805e-05, -5.8053239627042785e-05, -0.00026556302327662706, -0.002214600332081318, -0.0013159195659682155, -0.001189835020340979, -0.005670177284628153, -0.03244064003229141], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0004717191040981561, -0.0017579830018803477, -0.00017248096992261708, -1.3351351299206726e-05, -7.152555099310121e-07, -5.185469490243122e-05, -0.004135509487241507], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ")", "\n"], "logprobs": [-0.00033849707688204944, -5.125986263010418e-06, -0.0025027638766914606, -5.471556869451888e-05, -0.00018082413589581847, -7.033323527139146e-06, -8.344646857949556e-07, -4.95898348162882e-05, -5.566918844124302e-05, -1.1920922133867862e-06, -0.0003446938644628972, -0.00023529145983047783, -0.0004766043566633016, -5.006777428206988e-06, -1.9073468138230965e-06, -4.768370445162873e-07, -2.264974000354414e-06, -1.1086402082582936e-05, -0.11307033151388168, -0.002468160120770335, -0.0011597104603424668, -0.000440262199845165, -0.0012190061388537288, -3.2186455882765586e-06, 0.0, -0.000577402301132679, -0.0031351721845567226, -4.529942543740617e-06, -2.3841830625315197e-06, -1.114050030708313, -0.0010437285527586937], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", "\n"], "logprobs": [-0.025995133444666862, -0.0002806984703056514, -0.0023746881633996964, -2.264974000354414e-06, 0.0, -0.0002330270071979612, -0.0028832077514380217, -4.172316494077677e-06, -2.50339189733495e-06, -0.005052061751484871, -0.05606510490179062, -1.5497195136049413e-06, -3.576278118089249e-07, -0.00010442188795423135, -0.13698017597198486, -0.005204224959015846, -0.3790714144706726], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.00017450717859901488, -2.50339189733495e-06, 0.0, -3.242440288886428e-05, -1.1920928244535389e-07, -2.8013790142722428e-05, -0.050777461379766464, -7.152555099310121e-07, -0.0003890234511345625, -9.536738616588991e-07, -0.004108679015189409, -0.004223356489092112, -6.556489552167477e-06, -0.0001284993631998077, -3.576278118089249e-07, -1.2749348878860474, -0.020525433123111725], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-1.0251946150674485e-05, -3.576272320060525e-06, -0.00012778419477399439, -0.0020154656376689672, -7.271740287251305e-06, -0.00167598866391927, -0.00010024998482549563, -2.4437606043647975e-05, -5.960462772236497e-07, -0.0007017772295512259, -0.00018690270371735096], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-9.917721035890281e-05, -4.768370445162873e-07, -5.602820692729438e-06, -7.152531907195225e-06, -0.0002885640424210578, -0.0001250427303602919, -5.340433563105762e-05, -0.00027891082572750747, -9.369411418447271e-05, -0.0002252801787108183], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred, output_dict=False)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ",", " output", "_", "dict", "=", "False", ")", "\n"], "logprobs": [-0.0074220155365765095, -6.6756979322235566e-06, -3.099436753473128e-06, -1.7881233361549675e-05, -0.009413971565663815, -2.95634672511369e-05, -0.0018218838376924396, -0.0002805792901199311, -0.00019894051365554333, -3.576272320060525e-06, -4.768370445162873e-07, -0.5585324168205261, -0.34746989607810974, -5.006777428206988e-06, -0.003392062848433852, -7.283422019099817e-05, -1.1498560905456543, -0.01879279315471649, -0.013218744657933712], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.08453226834535599, -9.548207890475169e-05, -0.1184152290225029, -0.04490293562412262, -0.00021026308240834624, -0.00101383775472641, -1.0013530300057027e-05, -0.0008434075862169266, -0.07542674243450165, -0.04784110188484192], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.6701099276542664, -0.0020329540129750967], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.004982199054211378, -0.00029476112104021013, -0.04305335134267807, -0.0002184867626056075], "finish_reason": "stop"}, {"text": " line.strip().split()", "tokens": [" line", ".", "strip", "()", ".", "split", "()", "\n"], "logprobs": [-0.2694445252418518, -0.0001691436773398891, -2.591395139694214, -0.0020199865102767944, -9.870042413240299e-05, -0.0018421123968437314, -0.06847634166479111, -0.007517264690250158], "finish_reason": "stop"}, {"text": " parts:", "tokens": [" parts", ":", "\n"], "logprobs": [-1.1617052555084229, -0.0562870055437088, -0.12644483149051666], "finish_reason": "stop"}, {"text": " \"{0:<6} {1:<8} {2:<8} {3:<8} {4:<8}\".format(*parts)", "tokens": [" \"", "{", "0", ":<", "6", "}", " {", "1", ":<", "8", "}", " {", "2", ":<", "8", "}", " {", "3", ":<", "8", "}", " {", "4", ":<", "8", "}\"", ".", "format", "(*", "parts", ")", "\n"], "logprobs": [-0.5227433443069458, -3.713893413543701, -0.24695709347724915, -0.6830191612243652, -2.7355737686157227, -0.618269681930542, -0.02459128573536873, -0.0009922825265675783, -0.19786565005779266, -1.3470895290374756, -0.008796394802629948, -0.0025076393503695726, -0.00032395837479270995, -0.0025232164189219475, -0.11056304723024368, -0.00040737437666393816, -0.0004543225804809481, -4.017272294731811e-05, -0.00020883286197204143, -0.03751096874475479, -0.0029609431512653828, -0.0026680370792746544, -8.892617915989831e-05, -0.006364789791405201, -0.20588600635528564, -0.24220015108585358, -0.0022750229109078646, -6.12716976320371e-05, -0.16853290796279907, -0.0001802282058633864, -0.0063161044381558895, -0.0045617325231432915], "finish_reason": "stop"}, {"text": " len(parts) == 3:  # Overall accuracy, macro avg, and weighted avg", "tokens": [" len", "(", "parts", ")", " ==", " ", "3", ":", "  ", "#", " Overall", " accuracy", ",", " macro", " av", "g", ",", " and", " weighted", " av", "g", "\n"], "logprobs": [-0.060885220766067505, -5.8412379075889476e-06, -0.0003817544784396887, -2.932505594799295e-05, -0.05152218043804169, -2.8967437174287625e-05, -1.2252252101898193, -0.05558304116129875, -0.032531458884477615, -1.0728830375228426e-06, -1.3816767930984497, -0.3143896758556366, -2.2228596210479736, -0.0502430759370327, -0.5958206057548523, -5.6622808187967166e-05, -0.009741388261318207, -2.1585376262664795, -0.013936937786638737, -0.0014353221049532294, -0.00021073981770314276, -0.09550102800130844], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.01969589851796627, -0.00042715485324151814, -0.016874659806489944, -0.002172730630263686, -9.285972191719338e-05, -0.011860683560371399, -0.008158452808856964, -0.04917469248175621, -0.22696153819561005, -0.048525892198085785, -0.0016317160334438086, -0.00039307496626861393, -1.7046782886609435e-05, -0.002050679875537753, -0.000593962671700865, -0.002512395614758134, -0.04303508251905441, -0.10194586962461472, -0.002763026859611273, -8.583032467868179e-06, -1.156323378381785e-05, -0.00019643761334009469, -2.7894584491150454e-05, -6.758938252460212e-05, -0.002936696168035269, -0.0099950535222888, -0.0007946909172460437, -1.537788011773955e-05, -2.145764938177308e-06, -0.00010382589971413836, -5.566918844124302e-05, -0.00019238528329879045, -0.006845119409263134, -0.005979506298899651, -0.011914283037185669, -0.0008950994815677404], "finish_reason": "stop"}, {"text": " line  # Leave other lines unchanged", "tokens": [" line", "  ", "#", " Leave", " other", " lines", " unchanged", "\n"], "logprobs": [-0.02616284228861332, -1.1427165269851685, -3.576278118089249e-07, -2.7562499046325684, -0.5650174021720886, -0.0042596799321472645, -0.09995214641094208, -0.000976919662207365], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00011228884250158444, -0.00014995403762441128, -0.0017826156690716743, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.1920922133867862e-06, -0.012105096131563187, -0.0009553635609336197], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.0015756584471091628, -0.0007784912013448775, -0.00024303820100612938, -4.875540980719961e-05, -0.00016592556494288146, -4.529942543740617e-06, -0.0004219118563923985, -0.0024205928202718496, -4.768370445162873e-07, -4.768370445162873e-07, -1.311301275563892e-06, -0.0014756753807887435, -0.009965547360479832], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.0174506027251482, -2.264974000354414e-06, -2.3483953555114567e-05, -0.23049494624137878], "finish_reason": "stop"}], "metrics": {"energy": 1782.2880887136457, "energy_per_token": 5.622359901304876, "time": 63.217026, "time_per_token": 0.1994227949526814}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(f\"Column {target_column} not found in the CSV file.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Column", " {", "target", "_", "column", "}", " not", " found", " in", " the", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -2.112910270690918, -1.279512643814087, -0.0002012050390476361, -7.867782187531702e-06, -1.2874520507466514e-05, -0.0028530152048915625, -0.035293854773044586, -0.0086720772087574, -0.014030275866389275, -0.2674892544746399, -0.14815860986709595, -4.529942543740617e-06, -0.011078160256147385, -0.5072659254074097, -0.008718520402908325, -0.00024780540843494236, -0.0002848696312867105], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column])", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "])", "\n"], "logprobs": [-0.0010284854797646403, -0.02465013787150383, -0.022223014384508133, -0.08470829576253891, -0.8441824316978455, -0.33156949281692505, -0.0037955641746520996, -0.00016330339713022113, -3.3854863431770355e-05, -0.11351387202739716, -0.022316398099064827], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0004129749140702188, -0.001774761825799942, -0.00018809456378221512, -1.490105023549404e-05, -2.3841855067985307e-07, -6.592056161025539e-05, -0.003301885211840272], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0003911683743353933, -4.529942543740617e-06, -0.0027296210173517466, -4.875540980719961e-05, -0.00017510310863144696, -8.34461570775602e-06, -4.768370445162873e-07, -4.815939246327616e-05, -4.5298504119273275e-05, -1.0728830375228426e-06, -0.00035696811391972005, -0.00025102324434556067, -0.0005092516075819731, -4.887569048150908e-06, -2.3841830625315197e-06, -3.576278118089249e-07, -1.7881377516459906e-06, -1.2278481335670222e-05, -0.09399934113025665, -0.00297722639515996, -0.0011544713051989675, -0.000439428084064275, -0.0012504386249929667, -3.933898824470816e-06, 0.0, -0.0006279165390878916, -0.003785825800150633, -3.576272320060525e-06, -2.264974000354414e-06, -0.38291504979133606, -0.045538030564785004, -1.0728830375228426e-06, -3.576278118089249e-07, -0.00019822540343739092, -0.1411273330450058, -0.004348228219896555, -0.008605184964835644, -0.0022380324080586433], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", "\n"], "logprobs": [-0.021085506305098534, -0.00032669928623363376, -0.0021393049973994493, -2.0265558760002023e-06, 0.0, -0.00023529145983047783, -0.0026764783542603254, -3.933898824470816e-06, -2.7418097943154862e-06, -0.00571450823917985, -0.05151810497045517, -1.6689286894688848e-06, -2.3841855067985307e-07, -9.953480184776708e-05, -0.13742735981941223, -0.004667102824896574, -0.34028321504592896], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators, random_state=42)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00020013237372040749, -2.3841830625315197e-06, 0.0, -2.7417760065873154e-05, -1.1920928244535389e-07, -3.325883881188929e-05, -0.04460769519209862, -7.152555099310121e-07, -0.00023779425828251988, -1.1920922133867862e-06, -0.004900112748146057, -0.005323401652276516, -5.8412379075889476e-06, -0.00013398226292338222, -5.960462772236497e-07, -0.28809866309165955, -0.08364488184452057, -7.152555099310121e-07, -2.7418097943154862e-06, -1.6212332411669195e-05, -0.040545087307691574, -0.0009582218481227756, -0.007375630084425211, -0.010246648453176022], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-9.059865078597795e-06, -3.933898824470816e-06, -0.00017951308109331876, -0.0021655934397131205, -1.0490362910786644e-05, -0.0016527815023437142, -0.00011896379146492109, -2.539125671319198e-05, -5.960462772236497e-07, -0.0006939148879610002, -0.00017712931730784476], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00011300401820335537, -5.960462772236497e-07, -5.125986263010418e-06, -6.794906312279636e-06, -0.00029094755882397294, -0.00011777184408856556, -5.817244164063595e-05, -0.00022539935889653862, -8.40390202938579e-05, -0.00020776021119672805], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred, target_names=df[target_column].unique())", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ",", " target", "_", "names", "=", "df", "[", "target", "_", "column", "]", ".", "unique", "())", "\n"], "logprobs": [-0.00750637985765934, -5.483612312673358e-06, -2.0265558760002023e-06, -1.4066597032069694e-05, -0.01374000683426857, -2.407998726994265e-05, -0.0025506841484457254, -0.0002416080387774855, -0.00015555603022221476, -3.2186455882765586e-06, -4.768370445162873e-07, -0.45991626381874084, -2.309696912765503, -3.6954811548639555e-06, -1.7046782886609435e-05, -0.03533424809575081, -0.8404279351234436, -0.08974544703960419, -0.015333742834627628, -0.0001389883691444993, -7.080780778778717e-05, -0.039139747619628906, -0.0017174031818285584, -0.030375545844435692, -0.02851833403110504, -0.008219818584620953], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.07754481583833694, -8.83301836438477e-05, -0.12186647951602936, -0.05138607695698738, -0.00022110878489911556, -0.0010709986090660095, -8.22540732769994e-06, -0.0010085977846756577, -0.07945243269205093, -0.04830385372042656], "finish_reason": "stop"}, {"text": " [f\"{line}\" for line in lines]", "tokens": [" [", "f", "\"", "{", "line", "}\"", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.8193041682243347, -0.8282468914985657, -0.014179903082549572, -0.23259297013282776, -0.1400178223848343, -2.768873929977417, -0.10577911138534546, -0.000925112864933908, -0.0002205128694185987, -0.000433112756581977, -0.9516151547431946, -0.01910475641489029], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.005416835192590952, -0.00020597243565134704, -0.05467510595917702, -0.00020704510097857565], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.16588468849658966, -0.00012146688823122531, -0.13090339303016663, -0.06245164945721626, -0.00798675324767828], "finish_reason": "stop"}, {"text": " parts:", "tokens": [" parts", ":", "\n"], "logprobs": [-1.108863115310669, -0.05916859209537506, -0.14335155487060547], "finish_reason": "stop"}, {"text": " \"{0:<10}{1:<10}{2:<10}{3:<10}{4:<10}\".format(*parts)", "tokens": [" \"", "{", "0", ":<", "1", "0", "}{", "1", ":<", "1", "0", "}{", "2", ":<", "1", "0", "}{", "3", ":<", "1", "0", "}{", "4", ":<", "1", "0", "}\"", ".", "format", "(*", "parts", ")", "\n"], "logprobs": [-0.5183874368667603, -3.4414985179901123, -0.1930406540632248, -0.7271217107772827, -0.7745684385299683, -0.43352165818214417, -0.9102222323417664, -0.002237556502223015, -0.17192092537879944, -0.11398646235466003, -0.14465998113155365, -0.030440418049693108, -0.00019059749320149422, -0.00189268181566149, -0.025821125134825706, -0.004426680505275726, -0.0014510351466014981, -7.343022298300639e-05, -0.00035851728171110153, -0.005609485320746899, -0.013890265487134457, -0.04196159541606903, -0.0001436368766007945, -0.028254956007003784, -0.04729945957660675, -0.01690560393035412, -0.05821588262915611, -0.0016200524987652898, -0.00010966652916977182, -0.16069015860557556, -0.00017021637177094817, -0.0032184727024286985, -0.005291622597724199], "finish_reason": "stop"}, {"text": " len(parts) == 4:  # Average metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "4", ":", "  ", "#", " Average", " metrics", "\n"], "logprobs": [-0.05742289870977402, -5.006777428206988e-06, -0.0006942722829990089, -3.397406908334233e-05, -0.05702740699052811, -2.4914430468925275e-05, -0.8687269687652588, -0.07320113480091095, -0.04605444520711899, -8.344646857949556e-07, -1.796767234802246, -0.29664847254753113, -0.1579919457435608], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.017018355429172516, -0.00044550508027896285, -0.018239745870232582, -0.0037808381021022797, -6.806619057897478e-05, -0.012047620490193367, -0.0074273403733968735, -0.05999735742807388, -0.22878120839595795, -0.052413977682590485, -0.0019307559123262763, -0.0003526780928950757, -1.8596476365928538e-05, -0.0017665509367361665, -0.0006064721383154392, -0.002666015876457095, -0.04466823488473892, -0.10201627016067505, -0.0024585279170423746, -9.65590606938349e-06, -1.156323378381785e-05, -0.00017677174764685333, -2.002696055569686e-05, -7.962863310240209e-05, -0.002978177275508642, -0.009546934626996517, -0.001022650278173387, -1.2993727978027891e-05, -2.50339189733495e-06, -9.226373367710039e-05, -6.305972783593461e-05, -0.00016151554882526398, -0.006417499855160713, -0.006646312773227692, -0.011173651553690434, -0.0011982887517660856], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.022261839359998703, -0.4867499768733978], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00010096516780322418, -0.00014161060971673578, -0.0017916593933477998, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.311301275563892e-06, -0.013110270723700523, -0.0008500776602886617], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.0020880342926830053, -0.0007968349382281303, -0.00020430385484360158, -8.618460560683161e-05, -0.00015937011630740017, -5.006777428206988e-06, -0.00040975757292471826, -0.0011270844843238592, -7.152555099310121e-07, -7.152555099310121e-07, -1.6689286894688848e-06, -0.0013671108754351735, -0.010108349844813347], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.02565382607281208, -1.9073468138230965e-06, -2.884823152271565e-05, -0.2345781922340393], "finish_reason": "stop"}], "metrics": {"energy": 1761.9755474720007, "energy_per_token": 5.307155263469881, "time": 52.72227, "time_per_token": 0.15880201807228916}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(f\"'{target_column}' is not a valid target column\")", "tokens": [" Value", "Error", "(", "f", "\"", "'{", "target", "_", "column", "}'", " is", " not", " a", " valid", " target", " column", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -3.12766170501709, -0.000348268891684711, -1.9907753085135482e-05, -9.536697689327411e-06, -0.002009160118177533, -2.6266181468963623, -0.006389901507645845, -0.6755099892616272, -0.3796640634536743, -2.279531478881836, -0.09271197021007538, -1.559784173965454, -0.00011753345461329445, -0.0005858612130396068], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0011511372867971659, -0.023887457326054573, -0.019425274804234505, -0.07514336705207825, -0.6790964603424072, -4.8397800128441304e-05, -5.674201020156033e-05, -0.0003164505760651082, -0.0020248640794306993, -0.0014277036534622312, -0.0010377742582932115, -0.0041167521849274635, -0.03199692815542221], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.00040522945346310735, -0.0018083186587318778, -0.00014077626110520214, -1.6927575416048057e-05, -7.152555099310121e-07, -4.172238186583854e-05, -0.003791644936427474], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=0)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.00035124807618558407, -4.6491513785440475e-06, -0.002976988675072789, -4.827859811484814e-05, -0.000196556793525815, -8.702239938429557e-06, -7.152555099310121e-07, -4.362964682513848e-05, -4.3987260141875595e-05, -1.311301275563892e-06, -0.0002641328901518136, -0.0002714027068577707, -0.00042358008795417845, -4.529942543740617e-06, -1.5497195136049413e-06, -3.576278118089249e-07, -2.264974000354414e-06, -1.0371154530730564e-05, -0.11135371774435043, -0.0029252853710204363, -0.0014113951474428177, -0.00039009589818306267, -0.0016631354810670018, -3.933898824470816e-06, 0.0, -0.0007363230688497424, -0.003764805383980274, -5.245195097813848e-06, -2.264974000354414e-06, -0.46838974952697754, -0.044924475252628326, -9.536738616588991e-07, -1.1920928244535389e-07, -0.00014709345123264939, -2.7850592136383057, -0.022908208891749382, -0.0023788507096469402], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=101", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "1", "0", "1", "\n"], "logprobs": [-0.02284098044037819, -0.00035482310340739787, -0.001971802907064557, -2.0265558760002023e-06, 0.0, -0.00019476900342851877, -0.003216690383851528, -3.576272320060525e-06, -1.6689286894688848e-06, -0.0048315441235899925, -0.052168361842632294, -1.1920922133867862e-06, -2.3841855067985307e-07, -0.00011455356434453279, -3.064161777496338, -1.931490421295166, -1.072594165802002, -0.47626253962516785], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.00018857131362892687, -2.861018856492592e-06, 0.0, -2.288792165927589e-05, -1.1920928244535389e-07, -3.40932747349143e-05, -0.03652267903089523, -9.536738616588991e-07, -0.0003446938644628972, -1.5497195136049413e-06, -0.004041837062686682, -0.004327456932514906, -5.960446742392378e-06, -0.00012337400403339416, -9.536738616588991e-07, -1.2399336099624634, -0.019581111147999763], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-1.2755313036905136e-05, -4.529942543740617e-06, -0.00010239553375868127, -0.0017340637277811766, -1.2755313036905136e-05, -0.0015814905054867268, -0.00010835537250386551, -2.2649508537142538e-05, -5.960462772236497e-07, -0.0006985607906244695, -0.00015341058315243572], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00010168035078095272, -7.152555099310121e-07, -4.410734163684538e-06, -7.510157047363464e-06, -0.0002337421028641984, -0.00011300401820335537, -5.0424259825376794e-05, -0.00017510310863144696, -9.63164638960734e-05, -0.00022098960471339524], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.006797049660235643, -7.867782187531702e-06, -2.264974000354414e-06, -1.847726889536716e-05, -0.012130535207688808, -2.4199192921514623e-05, -0.0018091516103595495, -0.00025185750564560294, -0.00013815402053296566, -2.9802276912960224e-06, -7.152555099310121e-07, -0.7720996737480164, -0.007107095792889595], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.09012973308563232, -8.415821503149346e-05, -0.13847684860229492, -0.04805836081504822, -0.00023266946664080024, -0.0011363723315298557, -8.4638240878121e-06, -0.0010112178279086947, -0.08508674800395966, -0.056479450315237045], "finish_reason": "stop"}, {"text": " [lines[0]]", "tokens": [" [", "lines", "[", "0", "]]", "\n"], "logprobs": [-0.7014586329460144, -2.440523624420166, -0.007519867736846209, -0.1716362088918686, -0.25506746768951416, -0.5827758312225342], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.004301699809730053, -0.00032026408007368445, -0.0515434667468071, -0.00020895205670967698], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.18532027304172516, -0.0001397035230183974, -0.09016557037830353, -0.04510373994708061, -0.009960471652448177], "finish_reason": "stop"}, {"text": " len(parts) > 0:", "tokens": [" len", "(", "parts", ")", " >", " ", "0", ":", "\n"], "logprobs": [-0.513141930103302, -2.586808113846928e-05, -0.00039081089198589325, -0.0005452338373288512, -1.9083266258239746, -0.0003002431185450405, -0.6616300344467163, -0.2999815046787262, -0.008742745965719223], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15} {' '.join(parts[1:]):<35}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}", " {'", " '", ".", "join", "(", "parts", "[", "1", ":]", "):", "<", "3", "5", "}\"", "\n"], "logprobs": [-1.2219377756118774, -0.012670020572841167, -1.1238211393356323, -0.0009891861118376255, -0.0009273757459595799, -0.02006039395928383, -0.14961084723472595, -0.1510687619447708, -0.7051462531089783, -1.4111087322235107, -1.3860812187194824, -0.7258604764938354, -0.32350823283195496, -0.038031887263059616, -3.659658250398934e-05, -0.011577678844332695, -0.06473010778427124, -0.005327788647264242, -0.017412647604942322, -0.9341273903846741, -0.004619165789335966, -0.17479747533798218, -1.7230985164642334, -1.3988456726074219, -0.05804424360394478, -0.024815279990434647], "finish_reason": "stop"}, {"text": " len(parts) == 3:  # Average metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "3", ":", "  ", "#", " Average", " metrics", "\n"], "logprobs": [-0.05893249437212944, -4.172316494077677e-06, -0.000550357042811811, -3.5523738915799186e-05, -0.06135038658976555, -2.4437606043647975e-05, -1.256976842880249, -0.05780574306845665, -0.030399251729249954, -7.152555099310121e-07, -1.3476102352142334, -0.21835917234420776, -0.06613433361053467], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<25}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "2", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.02256806008517742, -0.0004107108688913286, -0.02433222159743309, -0.002740082796663046, -7.462222856702283e-05, -0.009620257653295994, -0.010083921253681183, -0.06214418634772301, -1.672833800315857, -0.8427930474281311, -0.0018324741395190358, -0.00024423000286333263, -2.407998726994265e-05, -0.00043930893298238516, -0.0003367095487192273, -0.001945747178979218, -0.08191067725419998, -0.4853777289390564, -0.007933178916573524, -3.4570634852570947e-06, -8.583032467868179e-06, -7.021180499577895e-05, -1.07287787614041e-05, -5.07818695041351e-05, -0.0017797596519812942, -0.006406721193343401, -0.0012149580288678408, -3.814689989667386e-06, -1.4305104514278355e-06, -7.10462118149735e-05, -7.414542778860778e-05, -6.758938252460212e-05, -0.0010056205792352557, -0.002685514045879245, -0.006322974804788828, -0.0004987664869986475], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.02496504783630371, -0.46675243973731995], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-9.381330892210826e-05, -0.00018142008048016578, -0.0014105618465691805, -1.1920928244535389e-07, -1.1920928244535389e-07, -7.152555099310121e-07, -0.010211367160081863, -0.000800408364739269], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.00199690624140203, -0.0006220789509825408, -0.00022218143567442894, -5.221230458118953e-05, -0.0001919085334520787, -4.291525328881107e-06, -0.0003277718205936253, -0.0016813441179692745, -4.768370445162873e-07, -4.768370445162873e-07, -1.7881377516459906e-06, -0.0013567537534981966, -0.008983314968645573], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.02160373330116272, -1.9073468138230965e-06, -2.47952248173533e-05, -0.24120746552944183], "finish_reason": "stop"}], "metrics": {"energy": 1666.3626068210604, "energy_per_token": 5.48145594349033, "time": 57.49127, "time_per_token": 0.1891160197368421}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(f\"The target column '{target_column}' was not found in the dataset.\")", "tokens": [" Value", "Error", "(", "f", "\"", "The", " target", " column", " '", "{", "target", "_", "column", "}'", " was", " not", " found", " in", " the", " dataset", ".", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -1.5078020095825195, -1.5340182781219482, -0.17481230199337006, -0.19378221035003662, -0.00015245705435518175, -8.010543388081715e-05, -4.076874756719917e-05, -5.364403477869928e-06, -0.0009837078396230936, -0.6980708837509155, -0.0014616292901337147, -0.000536655425094068, -0.012381005100905895, -0.0029056731145828962, -2.7632389068603516, -0.17627084255218506, -0.019453803077340126, -0.00044371772673912346, -0.0002273062855238095], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0010284854797646403, -0.02465013787150383, -0.022223014384508133, -0.08470829576253891, -0.5664648413658142, -5.173549288883805e-05, -5.8053239627042785e-05, -0.00026556302327662706, -0.002214600332081318, -0.0013159195659682155, -0.001189835020340979, -0.005670177284628153, -0.03244064003229141], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0004717191040981561, -0.0017579830018803477, -0.00017248096992261708, -1.3351351299206726e-05, -7.152555099310121e-07, -5.185469490243122e-05, -0.004135509487241507], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ")", "\n"], "logprobs": [-0.00033849707688204944, -5.125986263010418e-06, -0.0025027638766914606, -5.471556869451888e-05, -0.00018082413589581847, -7.033323527139146e-06, -8.344646857949556e-07, -4.95898348162882e-05, -5.566918844124302e-05, -1.1920922133867862e-06, -0.0003446938644628972, -0.00023529145983047783, -0.0004766043566633016, -5.006777428206988e-06, -1.9073468138230965e-06, -4.768370445162873e-07, -2.264974000354414e-06, -1.1086402082582936e-05, -0.11307033151388168, -0.002468160120770335, -0.0011597104603424668, -0.000440262199845165, -0.0012190061388537288, -3.2186455882765586e-06, 0.0, -0.000577402301132679, -0.0031351721845567226, -4.529942543740617e-06, -2.3841830625315197e-06, -1.114050030708313, -0.0010437285527586937], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", "\n"], "logprobs": [-0.025995133444666862, -0.0002806984703056514, -0.0023746881633996964, -2.264974000354414e-06, 0.0, -0.0002330270071979612, -0.0028832077514380217, -4.172316494077677e-06, -2.50339189733495e-06, -0.005052061751484871, -0.05606510490179062, -1.5497195136049413e-06, -3.576278118089249e-07, -0.00010442188795423135, -0.13698017597198486, -0.005204224959015846, -0.3790714144706726], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.00017450717859901488, -2.50339189733495e-06, 0.0, -3.242440288886428e-05, -1.1920928244535389e-07, -2.8013790142722428e-05, -0.050777461379766464, -7.152555099310121e-07, -0.0003890234511345625, -9.536738616588991e-07, -0.004108679015189409, -0.004223356489092112, -6.556489552167477e-06, -0.0001284993631998077, -3.576278118089249e-07, -1.2749348878860474, -0.020525433123111725], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-1.0251946150674485e-05, -3.576272320060525e-06, -0.00012778419477399439, -0.0020154656376689672, -7.271740287251305e-06, -0.00167598866391927, -0.00010024998482549563, -2.4437606043647975e-05, -5.960462772236497e-07, -0.0007017772295512259, -0.00018690270371735096], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-9.917721035890281e-05, -4.768370445162873e-07, -5.602820692729438e-06, -7.152531907195225e-06, -0.0002885640424210578, -0.0001250427303602919, -5.340433563105762e-05, -0.00027891082572750747, -9.369411418447271e-05, -0.0002252801787108183], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.0074220155365765095, -6.6756979322235566e-06, -3.099436753473128e-06, -1.7881233361549675e-05, -0.009413971565663815, -2.95634672511369e-05, -0.0018218838376924396, -0.0002805792901199311, -0.00019894051365554333, -3.576272320060525e-06, -4.768370445162873e-07, -0.8490244746208191, -0.006214105989784002], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.08506178855895996, -8.606540359323844e-05, -0.1406143754720688, -0.04766721650958061, -0.00021300431399140507, -0.0010851691477000713, -9.894321920000948e-06, -0.0008694920688867569, -0.09179918467998505, -0.04393276572227478], "finish_reason": "stop"}, {"text": " [\"class\", \"precision\", \"recall\", \"f1-score\", \"support\"]", "tokens": [" [", "\"", "class", "\"", ",", " \"", "precision", "\"", ",", " \"", "re", "call", "\"", ",", " \"", "f", "1", "-", "score", "\"", ",", " \"", "support", "\"", "]", "\n"], "logprobs": [-0.7590474486351013, -1.6323248147964478, -0.8021324276924133, -1.3671404123306274, -1.4333027601242065, -0.02244555950164795, -0.06980539113283157, -0.012029599398374557, -0.0001501924270996824, -0.000631848000921309, -0.0028990167193114758, -7.092700980138034e-05, -0.000192504478036426, -0.0008511496125720441, -0.0007869484252296388, -0.009664650075137615, -0.0038130213506519794, -0.008041624911129475, -0.0005000770906917751, -0.0019401551689952612, -0.12426445633172989, -0.0024273712188005447, -0.02615784853696823, -0.003820146666839719, -0.01740878075361252, -0.018224645406007767], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.005482636857777834, -0.0002686616498976946, -0.05430607497692108, -0.0001728385395836085], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.20201614499092102, -0.00011884459672728553, -0.10277920216321945, -0.049751166254282, -0.00834005419164896], "finish_reason": "stop"}, {"text": " len(parts) > 0:", "tokens": [" len", "(", "parts", ")", " >", " ", "0", ":", "\n"], "logprobs": [-0.478669673204422, -2.1219027985353023e-05, -0.0003323002893012017, -0.0004191712068859488, -1.9628397226333618, -0.0003289635351393372, -0.7195096015930176, -0.291771799325943, -0.005843223538249731], "finish_reason": "stop"}, {"text": " \" \".join(parts[:3]) + \" \" * 8 + \" \".join(parts[3:])", "tokens": [" \"", " \"", ".", "join", "(", "parts", "[:", "3", "])", " +", " \"", " \"", " *", " ", "8", " +", " \"", " \"", ".", "join", "(", "parts", "[", "3", ":", "])", "\n"], "logprobs": [-0.6330455541610718, -0.7319522500038147, -0.0641910582780838, -1.1801649634435307e-05, -0.1177929937839508, -0.20378898084163666, -0.1432759314775467, -1.5002100467681885, -0.3708016872406006, -0.3782109320163727, -0.2272804081439972, -0.5120038390159607, -0.15336744487285614, -0.016425862908363342, -1.8887238502502441, -0.010558693669736385, -0.08161638677120209, -0.13083592057228088, -0.0006289887824095786, -5.245195097813848e-06, -0.00040570611599832773, -0.0004898302140645683, -0.007769365329295397, -0.015049253590404987, -0.0021451336797326803, -0.002023793524131179, -0.010229420848190784], "finish_reason": "stop"}, {"text": " len(parts) == 4:  # Overall metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "4", ":", "  ", "#", " Overall", " metrics", "\n"], "logprobs": [-0.06096294894814491, -5.602820692729438e-06, -0.0007782529573887587, -3.325883881188929e-05, -0.0654439702630043, -2.3007127310847864e-05, -0.8871729969978333, -0.07669249176979065, -0.04823535680770874, -9.536738616588991e-07, -0.8584616184234619, -0.9920175671577454, -0.08341120183467865], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.020967725664377213, -0.0004942387458868325, -0.019747326150536537, -0.004952069837599993, -9.214453893946484e-05, -0.010655177757143974, -0.01028688345104456, -0.0459236279129982, -0.2585502564907074, -0.05399733781814575, -0.002093268558382988, -0.00042441420373506844, -1.9073304429184645e-05, -0.0018938715802505612, -0.0005397531786002219, -0.0028267446905374527, -0.04834769666194916, -0.11294842511415482, -0.003589498344808817, -9.536697689327411e-06, -1.3828182090946939e-05, -0.0002157455455744639, -2.4914430468925275e-05, -7.83174327807501e-05, -0.0029925585258752108, -0.012027244083583355, -0.000824230897706002, -1.6927575416048057e-05, -2.622600959512056e-06, -8.666139910928905e-05, -5.07818695041351e-05, -0.00017188502533826977, -0.007941575720906258, -0.007140000816434622, -0.009943357668817043, -0.0012247211998328567], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.026130905374884605, -0.4125179648399353], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00013934595335740596, -0.00016675988445058465, -0.0015173362335190177, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.0728830375228426e-06, -0.011910631321370602, -0.0007711059297434986], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.002078160410746932, -0.0009753713966347277, -0.0001931004080688581, -5.829164365422912e-05, -0.0001433984871255234, -4.410734163684538e-06, -0.0004223884898237884, -0.0012241258518770337, -4.768370445162873e-07, -5.960462772236497e-07, -1.5497195136049413e-06, -0.001441036001779139, -0.0095902681350708], "finish_reason": "stop"}, {"text": " formatted_report<|endoftext|>#!/usr/bin/env python", "tokens": [" formatted", "_", "report", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "\n"], "logprobs": [-0.018303539603948593, -2.0265558760002023e-06, -3.0278701160568744e-05, -1.773200273513794, -3.6954811548639555e-06, -2.50339189733495e-06, -3.099436753473128e-06, -4.053033626405522e-05, -0.15008330345153809, -1.3552335500717163, -1.79796302318573, -0.05183066427707672, -0.051123667508363724, -6.580135959666222e-05, -0.009650836698710918, -0.0011604249011725187, -0.03399116173386574, -0.004814460873603821, -0.9291019439697266], "finish_reason": "stop"}], "metrics": {"energy": 3320.222030580521, "energy_per_token": 9.823142102309234, "time": 100.832306, "time_per_token": 0.2983204319526627}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df:", "tokens": [" target", "_", "column", " not", " in", " df", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -2.167153835296631, -0.000987637904472649], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' not found in CSV file.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -0.9469004273414612, -0.01680643856525421, -0.21682710945606232, -9.822363062994555e-05, -5.4834770708112046e-05, -2.1815061700181104e-05, -3.6954811548639555e-06, -0.0008597253472544253, -0.023940183222293854, -0.003165118396282196, -0.007373500149697065, -2.128389835357666, -9.894321920000948e-06, -0.018597519025206566, -0.24978980422019958, -0.005318777170032263, -0.00022182388056535274, -0.0002574589161667973], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0010284854797646403, -0.02465013787150383, -0.022223014384508133, -0.08470829576253891, -0.5664648413658142, -5.173549288883805e-05, -5.8053239627042785e-05, -0.00026556302327662706, -0.002214600332081318, -0.0013159195659682155, -0.001189835020340979, -0.005670177284628153, -0.03244064003229141], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0004717191040981561, -0.0017579830018803477, -0.00017248096992261708, -1.3351351299206726e-05, -7.152555099310121e-07, -5.185469490243122e-05, -0.004135509487241507], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00033849707688204944, -5.125986263010418e-06, -0.0025027638766914606, -5.471556869451888e-05, -0.00018082413589581847, -7.033323527139146e-06, -8.344646857949556e-07, -4.95898348162882e-05, -5.566918844124302e-05, -1.1920922133867862e-06, -0.0003446938644628972, -0.00023529145983047783, -0.0004766043566633016, -5.006777428206988e-06, -1.9073468138230965e-06, -4.768370445162873e-07, -2.264974000354414e-06, -1.1086402082582936e-05, -0.11307033151388168, -0.002468160120770335, -0.0011597104603424668, -0.000440262199845165, -0.0012190061388537288, -3.2186455882765586e-06, 0.0, -0.000577402301132679, -0.0031351721845567226, -4.529942543740617e-06, -2.3841830625315197e-06, -0.3980180323123932, -0.053000230342149734, -1.1920922133867862e-06, -3.576278118089249e-07, -0.0001714082609396428, -0.14189183712005615, -0.004507975187152624, -0.009544101543724537, -0.002530351048335433], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", "\n"], "logprobs": [-0.025995133444666862, -0.0002806984703056514, -0.0023746881633996964, -2.264974000354414e-06, 0.0, -0.0002330270071979612, -0.0028832077514380217, -4.172316494077677e-06, -2.50339189733495e-06, -0.005052061751484871, -0.05606510490179062, -1.5497195136049413e-06, -3.576278118089249e-07, -0.00010442188795423135, -0.13698017597198486, -0.005204224959015846, -0.3790714144706726], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators, random_state=42)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00017450717859901488, -2.50339189733495e-06, 0.0, -3.242440288886428e-05, -1.1920928244535389e-07, -2.8013790142722428e-05, -0.050777461379766464, -7.152555099310121e-07, -0.0003890234511345625, -9.536738616588991e-07, -0.004108679015189409, -0.004223356489092112, -6.556489552167477e-06, -0.0001284993631998077, -3.576278118089249e-07, -0.327829509973526, -0.10683886706829071, -8.344646857949556e-07, -3.3378546504536644e-06, -1.4781842764932662e-05, -0.05019976943731308, -0.0008505540899932384, -0.00603282917290926, -0.009456838481128216], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-1.0251946150674485e-05, -3.576272320060525e-06, -0.00012694983161054552, -0.002477792324498296, -1.0609570381348021e-05, -0.0016279076226055622, -0.00011336160969221964, -2.4318398573086597e-05, -4.768370445162873e-07, -0.0008394769974984229, -0.0002026352594839409], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00011717586312443018, -5.960462772236497e-07, -4.291525328881107e-06, -8.106198947643861e-06, -0.00029309268575161695, -0.00011908298620255664, -5.9602869441732764e-05, -0.00030751267331652343, -0.00010001159535022452, -0.0002094287920044735], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred, output_dict=False)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ",", " output", "_", "dict", "=", "False", ")", "\n"], "logprobs": [-0.0068888068199157715, -5.006777428206988e-06, -2.264974000354414e-06, -1.4662635294371285e-05, -0.012845155782997608, -3.242440288886428e-05, -0.0028720342088490725, -0.0002397011558059603, -0.00019095504831057042, -3.099436753473128e-06, -4.768370445162873e-07, -0.6044704914093018, -0.29373955726623535, -5.602820692729438e-06, -0.0026090650353580713, -9.131014667218551e-05, -1.4434010982513428, -0.022090910002589226, -0.014410472474992275], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.07792345434427261, -0.00010442188795423135, -0.1235988661646843, -0.041769422590732574, -0.00025340684805996716, -0.0011262509506195784, -9.894321920000948e-06, -0.0006618693005293608, -0.08032495528459549, -0.04819945991039276], "finish_reason": "stop"}, {"text": " [f\"{line} | {line.count('    ')}\" for line in lines]", "tokens": [" [", "f", "\"", "{", "line", "}", " |", " {", "line", ".", "count", "('", "    ", "')}", "\"", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-0.7753543257713318, -0.8444058299064636, -0.010937382467091084, -0.20500683784484863, -0.12660039961338043, -2.8852012157440186, -3.483098030090332, -1.7761825323104858, -0.2159271538257599, -0.13057933747768402, -0.07763714343309402, -0.05490148812532425, -2.683709144592285, -0.16180141270160675, -0.045870114117860794, -0.030296558514237404, -6.246371776796877e-05, -5.519237674889155e-05, -9.83428253675811e-05, -0.1275191307067871, -0.012282567098736763], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.005913144908845425, -0.00031275625224225223, -0.05083683505654335, -0.0001811817055568099], "finish_reason": "stop"}, {"text": " [word.ljust(12) for word in line.split()]", "tokens": [" [", "word", ".", "l", "just", "(", "1", "2", ")", " for", " word", " in", " line", ".", "split", "()", "]", "\n"], "logprobs": [-1.7621715068817139, -0.23538605868816376, -0.13679948449134827, -0.9718913435935974, -1.311301275563892e-06, -0.0004533693427219987, -0.3434036672115326, -1.2493748664855957, -0.03955050930380821, -0.4132142961025238, -0.00011550712952157483, -6.794906312279636e-06, -0.0006455483380705118, -2.253030106658116e-05, -0.06454963982105255, -0.006156883202493191, -0.01106307003647089, -0.00786600075662136], "finish_reason": "stop"}, {"text": " len(parts) >= 2 and parts[1].isdigit():", "tokens": [" len", "(", "parts", ")", " >=", " ", "2", " and", " parts", "[", "1", "]", ".", "is", "digit", "():", "\n"], "logprobs": [-0.49349039793014526, -2.276871418871451e-05, -0.00037329382030293345, -0.0005222387262620032, -1.5664469003677368, -0.00030763185350224376, -1.85971200466156, -2.0858311653137207, -0.24858076870441437, -0.16198280453681946, -1.031545639038086, -0.0069641005247831345, -0.43773025274276733, -0.2664945423603058, -0.37808963656425476, -0.05239859223365784, -0.585176408290863], "finish_reason": "stop"}, {"text": " f\"class {parts[0]}  {' '.join(parts[1:])}\"", "tokens": [" f", "\"", "class", " {", "parts", "[", "0", "]}", "  ", "{'", " '", ".", "join", "(", "parts", "[", "1", ":]", ")}", "\"", "\n"], "logprobs": [-1.1670007705688477, -0.013912602327764034, -0.5233019590377808, -0.09566733241081238, -0.00214406312443316, -0.0021685673855245113, -0.015354404225945473, -0.3169017732143402, -2.259498119354248, -0.39104533195495605, -0.1791461855173111, -0.038515832275152206, -7.748573807475623e-06, -0.005144335329532623, -0.006239577196538448, -0.01228998601436615, -0.00977255403995514, -1.25655198097229, -0.45984265208244324, -0.060761939734220505, -0.051002126187086105], "finish_reason": "stop"}, {"text": " len(parts) == 3:  # Overall accuracy", "tokens": [" len", "(", "parts", ")", " ==", " ", "3", ":", "  ", "#", " Overall", " accuracy", "\n"], "logprobs": [-0.057637181133031845, -5.364403477869928e-06, -0.0006136203301139176, -3.194758028257638e-05, -0.07065093517303467, -2.5629668016335927e-05, -1.2354793548583984, -0.05429275333881378, -0.029852356761693954, -8.344646857949556e-07, -1.3680843114852905, -0.24845553934574127, -0.3696337342262268], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.020439356565475464, -0.0003067976504098624, -0.015597143210470676, -0.003647818695753813, -8.83301836438477e-05, -0.012078478932380676, -0.010533332824707031, -0.059053417295217514, -0.2481604516506195, -0.05771404132246971, -0.0019230222096666694, -0.00029976642690598965, -1.6689160474925302e-05, -0.00195526541210711, -0.0007045170641504228, -0.003324578981846571, -0.04776632413268089, -0.10456395149230957, -0.0032396235037595034, -9.536697689327411e-06, -1.1205610462639015e-05, -0.00025769727653823793, -2.3007127310847864e-05, -7.366862701019272e-05, -0.003020013216882944, -0.011165281757712364, -0.0008830699953250587, -1.2397689715726301e-05, -1.7881377516459906e-06, -9.285972191719338e-05, -5.61460001335945e-05, -0.00015507926582358778, -0.00704885832965374, -0.007515608333051205, -0.01369708776473999, -0.0010811204556375742], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.018893985077738762, -0.37806078791618347], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00010227633902104571, -0.00015484087634831667, -0.0018156962469220161, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.1920922133867862e-06, -0.011402557604014874, -0.0007033258443698287], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.0017740478506311774, -0.0008449559682048857, -0.000176652567461133, -5.411955135059543e-05, -0.00014745102089364082, -3.099436753473128e-06, -0.00032264748006127775, -0.0021130156237632036, -7.152555099310121e-07, -5.960462772236497e-07, -1.5497195136049413e-06, -0.0014365125680342317, -0.00882534496486187], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.018422452732920647, -2.622600959512056e-06, -2.729855441430118e-05, -0.23267818987369537], "finish_reason": "stop"}], "metrics": {"energy": 1910.685703153611, "energy_per_token": 5.4591020090103175, "time": 51.635433, "time_per_token": 0.14752980857142856}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(f\"'{target_column}' column not found in the CSV file.\")", "tokens": [" Value", "Error", "(", "f", "\"", "'{", "target", "_", "column", "}'", " column", " not", " found", " in", " the", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -0.20842567086219788, -0.004603146575391293, -3.12766170501709, -0.000348268891684711, -1.9907753085135482e-05, -9.536697689327411e-06, -0.002009160118177533, -0.1626402586698532, -0.04092998430132866, -0.002848260570317507, -0.013530099764466286, -0.1169595718383789, -0.13627691566944122, -2.9802276912960224e-06, -0.010369472205638885, -0.40240445733070374, -0.009836888872087002, -0.00017510310863144696, -0.00027497802511788905], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0009111781837418675, -0.020198959857225418, -0.021697409451007843, -0.09771057963371277, -0.6389607787132263, -5.495397272170521e-05, -6.139089964563027e-05, -0.00026842328952625394, -0.002056509256362915, -0.0015544723719358444, -0.001303061842918396, -0.004663780797272921, -0.03557908907532692], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.00037317464011721313, -0.002354232594370842, -0.00022373080719262362, -9.298280929215252e-06, -1.1920928244535389e-07, -5.936446541454643e-05, -0.004201039206236601], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ")", "\n"], "logprobs": [-0.00036197309964336455, -5.602820692729438e-06, -0.0023807534016668797, -4.756337511935271e-05, -0.00020072828920092434, -8.22540732769994e-06, -9.536738616588991e-07, -5.411955135059543e-05, -5.686121585313231e-05, -1.311301275563892e-06, -0.00016699827392585576, -0.00025769727653823793, -0.000485183292767033, -5.364403477869928e-06, -2.0265558760002023e-06, -3.576278118089249e-07, -2.264974000354414e-06, -1.0251946150674485e-05, -0.12253543734550476, -0.0023054706398397684, -0.0012711548479273915, -0.0003756771038752049, -0.0016218378441408277, -3.814689989667386e-06, 0.0, -0.0007337023853324354, -0.0037414091639220715, -4.529942543740617e-06, -1.6689286894688848e-06, -1.077479600906372, -0.0011594723910093307], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42)", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.025611067190766335, -0.00029952809563837945, -0.0019901248160749674, -2.622600959512056e-06, 0.0, -0.0002195594133809209, -0.0031280419789254665, -3.933898824470816e-06, -1.6689286894688848e-06, -0.0061400593258440495, -0.05094650387763977, -1.4305104514278355e-06, -2.3841855067985307e-07, -9.97731985989958e-05, -0.15264379978179932, -0.004819562193006277, -1.2554744482040405, -0.007722168229520321], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators, random_state=42)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0001919085334520787, -2.50339189733495e-06, 0.0, -3.1470757676288486e-05, -1.1920928244535389e-07, -2.9444261599564925e-05, -0.04408266395330429, -7.152555099310121e-07, -0.0005812147865071893, -9.536738616588991e-07, -0.004399976693093777, -0.004004080779850483, -5.602820692729438e-06, -9.333651541965082e-05, -5.960462772236497e-07, -0.33352136611938477, -0.09774614870548248, -8.344646857949556e-07, -4.0531076592742465e-06, -1.5020257706055418e-05, -0.052843183279037476, -0.0007839705212973058, -0.007848733104765415, -0.00896228477358818], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-9.775113539944869e-06, -4.410734163684538e-06, -0.00015925093612167984, -0.0019576449412852526, -1.6093124941107817e-05, -0.0013258008984848857, -0.00011550712952157483, -2.0861407392658293e-05, -5.960462772236497e-07, -0.0007195267826318741, -0.00017212340026162565], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00010680581908673048, -4.768370445162873e-07, -4.6491513785440475e-06, -7.033323527139146e-06, -0.00032550760079175234, -0.0001045410826918669, -6.007967749610543e-05, -0.0003046525234822184, -8.582700684200972e-05, -0.0002516191452741623], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.006787103600800037, -6.556489552167477e-06, -2.861018856492592e-06, -1.4424220353248529e-05, -0.011024398729205132, -3.2782016205601394e-05, -0.0020803017541766167, -0.00026055757189169526, -0.00016234986833296716, -2.7418097943154862e-06, -7.152555099310121e-07, -0.91841721534729, -0.007140829227864742], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.07481688261032104, -9.786603914108127e-05, -0.10247819125652313, -0.041144970804452896, -0.00023362292267847806, -0.0012362702982500196, -7.867782187531702e-06, -0.0007011815905570984, -0.11294735968112946, -0.044941116124391556], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.6696074604988098, -0.0025250001344829798], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.0049429358914494514, -0.00035446559195406735, -0.051493871957063675, -0.00017593742813915014], "finish_reason": "stop"}, {"text": " line.strip().split()", "tokens": [" line", ".", "strip", "()", ".", "split", "()", "\n"], "logprobs": [-0.21344520151615143, -0.00010275312524754554, -2.4755256175994873, -0.001591607229784131, -0.00010239553375868127, -0.0016174342017620802, -0.05768005549907684, -0.00662073353305459], "finish_reason": "stop"}, {"text": " len(parts) > 0:", "tokens": [" len", "(", "parts", ")", " >", " ", "0", ":", "\n"], "logprobs": [-0.5544830560684204, -2.3245540432981215e-05, -0.000447530735982582, -0.0004391897819004953, -1.9811985492706299, -0.0003771070914808661, -0.6877197623252869, -0.26494094729423523, -0.008894466795027256], "finish_reason": "stop"}, {"text": " f\"class {parts[0]} {parts[1]:>9} {parts[2]:>9} {parts[3]:>9}\"", "tokens": [" f", "\"", "class", " {", "parts", "[", "0", "]}", " {", "parts", "[", "1", "]:", ">", "9", "}", " {", "parts", "[", "2", "]:", ">", "9", "}", " {", "parts", "[", "3", "]:", ">", "9", "}\"", "\n"], "logprobs": [-1.3114476203918457, -0.011109166778624058, -0.5245985984802246, -0.077129065990448, -0.0023706448264420033, -0.0016337393317371607, -0.016240211203694344, -0.3586680293083191, -1.4897708892822266, -0.0020576987881213427, -0.0074785747565329075, -0.02427591010928154, -0.1761813908815384, -0.4236576557159424, -2.508357048034668, -0.3139297664165497, -0.012010754086077213, -3.6000557884108275e-05, -0.00010740180005086586, -0.006272036582231522, -0.0013103241799399257, -0.002734257373958826, -1.9214130640029907, -0.01130708772689104, -0.003977484069764614, -2.8609820219571702e-05, -0.0007091629668138921, -0.0014321081107482314, -0.0006145734223537147, -0.0012334127677604556, -0.18431219458580017, -2.0315799713134766, -0.011143354699015617], "finish_reason": "stop"}, {"text": " len(parts) == 3:  # Macro average metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "3", ":", "  ", "#", " Mac", "ro", " average", " metrics", "\n"], "logprobs": [-0.06506459414958954, -5.602820692729438e-06, -0.0005554801900871098, -3.123234637314454e-05, -0.06220904737710953, -3.0874729418428615e-05, -1.221529483795166, -0.03740865737199783, -0.027375441044569016, -5.960462772236497e-07, -2.0692832469940186, -0.00021395778458099812, -1.859970211982727, -1.7475656270980835, -0.06710026413202286], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.018810225650668144, -0.0003682888636831194, -0.020651789382100105, -0.0033629550598561764, -6.854299135738984e-05, -0.010047572664916515, -0.012030424550175667, -0.053339455276727676, -0.2714424133300781, -0.05906881019473076, -0.001615291927009821, -0.00038961926475167274, -2.2291887944447808e-05, -0.0022469530813395977, -0.0004992430913262069, -0.0030108618084341288, -0.04179457575082779, -0.10785993933677673, -0.00316226645372808, -8.22540732769994e-06, -1.0013530300057027e-05, -0.0002383901592111215, -2.407998726994265e-05, -8.332382276421413e-05, -0.003358440240845084, -0.015027881599962711, -0.0007874249131418765, -1.2397689715726301e-05, -2.9802276912960224e-06, -0.00010489867418073118, -7.30726242181845e-05, -0.0001541257370263338, -0.006110083311796188, -0.006352589000016451, -0.012393838725984097, -0.0010126468259841204], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.016530342400074005, -0.4280003309249878], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-9.333651541965082e-05, -0.0001436368766007945, -0.0014554394874721766, -1.1920928244535389e-07, -2.3841855067985307e-07, -9.536738616588991e-07, -0.011604310013353825, -0.0009633429581299424], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.001493054092861712, -0.0006512666586786509, -0.00019667598826345056, -5.1973900554003194e-05, -0.00016616393986623734, -4.291525328881107e-06, -0.000494715350214392, -0.002161906100809574, -7.152555099310121e-07, -5.960462772236497e-07, -2.0265558760002023e-06, -0.0011460172245278955, -0.00968625582754612], "finish_reason": "stop"}, {"text": " formatted_report<|endoftext|>\"\"\"", "tokens": [" formatted", "_", "report", "<", "|", "end", "of", "text", "|", ">\"", "\"", "\"", "\n"], "logprobs": [-0.016843246296048164, -1.9073468138230965e-06, -3.3854863431770355e-05, -1.8658571243286133, -3.3378546504536644e-06, -3.099436753473128e-06, -3.3378546504536644e-06, -5.2569914259947836e-05, -2.035982131958008, -0.0022809698712080717, -0.005240157246589661, -0.0003293210465926677, -0.373941570520401], "finish_reason": "stop"}], "metrics": {"energy": 1587.2739144420623, "energy_per_token": 4.883919736744807, "time": 52.23901, "time_per_token": 0.1607354153846154}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.009785185568034649, -0.00027450130437500775, -0.00024232311989180744, -3.2186455882765586e-06, -0.00012313561455812305, -0.0004505096294451505, -0.011833234690129757, -4.970903682988137e-05, -7.748303323751315e-05, -0.00013362467871047556, -3.3378546504536644e-06, -0.03603213652968407, -0.038286853581666946], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.005150146316736937, -0.00011252723925281316, -3.6238969187252223e-05, -0.005223199259489775, -1.6689286894688848e-06, -0.013449770398437977, -0.12174363434314728, -9.905801562126726e-05, -0.003321252064779401, -0.001328420010395348], "finish_reason": "stop"}, {"text": " ValueError(\"Specified target_column not found in the CSV file.\")", "tokens": [" Value", "Error", "(", "\"", "Spec", "ified", " target", "_", "column", " not", " found", " in", " the", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.0007880204357206821, -1.7881377516459906e-06, -0.005471373908221722, -2.1669256687164307, -1.761597990989685, -0.001166973845101893, -0.02011367306113243, -0.9542683959007263, -0.0005526207387447357, -0.22929136455059052, -0.011707409285008907, -0.011497074738144875, -0.24451465904712677, -0.158196821808815, -4.172316494077677e-06, -0.01112001296132803, -0.28610023856163025, -0.006203799042850733, -0.0003197873884346336, -0.00023922442051116377], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column])", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "])", "\n"], "logprobs": [-0.001100054127164185, -0.02119556814432144, -0.01420799270272255, -0.060847196727991104, -0.7770490050315857, -0.3800122141838074, -0.00290971458889544, -0.00018499570433050394, -7.760223525110632e-05, -0.09570708870887756, -0.022442178800702095], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.00032085992279462516, -0.0018104605842381716, -0.00021765247220173478, -1.6093124941107817e-05, -1.0728830375228426e-06, -4.911301948595792e-05, -0.0035717994906008244], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0004663571889977902, -4.887569048150908e-06, -0.00301965675316751, -5.972207145532593e-05, -0.00021836756786797196, -7.867782187531702e-06, -8.344646857949556e-07, -4.684815212385729e-05, -5.07818695041351e-05, -1.6689286894688848e-06, -0.0003209791029803455, -0.00026842328952625394, -0.0005162813467904925, -4.6491513785440475e-06, -2.145764938177308e-06, -3.576278118089249e-07, -1.9073468138230965e-06, -8.940656698541716e-06, -0.1331973820924759, -0.002237913431599736, -0.001211386057548225, -0.00039009589818306267, -0.0014528206083923578, -4.6491513785440475e-06, 0.0, -0.0006053998949937522, -0.0038963842671364546, -4.768360213347478e-06, -2.622600959512056e-06, -0.41759979724884033, -0.045754194259643555, -9.536738616588991e-07, -3.576278118089249e-07, -0.00017998983094003052, -0.12898360192775726, -0.004271550104022026, -0.010642558336257935, -0.0023221212904900312], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42)", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.024850398302078247, -0.00034433635300956666, -0.0018117694417014718, -3.3378546504536644e-06, 0.0, -0.0002586507180240005, -0.003407150972634554, -3.4570634852570947e-06, -2.50339189733495e-06, -0.004597688093781471, -0.06015317142009735, -1.5497195136049413e-06, -3.576278118089249e-07, -0.00010334911348763853, -0.14234553277492523, -0.004616673570126295, -1.1343287229537964, -0.005914448760449886], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators, random_state=42)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.000219321038457565, -2.50339189733495e-06, 0.0, -2.2649508537142538e-05, -1.1920928244535389e-07, -2.586808113846928e-05, -0.04075511917471886, -8.344646857949556e-07, -0.0004182179400231689, -1.1920922133867862e-06, -0.003280735807493329, -0.004332679323852062, -6.437280717364047e-06, -0.00015376816736534238, -5.960462772236497e-07, -0.28301292657852173, -0.10838431119918823, -9.536738616588991e-07, -3.3378546504536644e-06, -1.4662635294371285e-05, -0.045735858380794525, -0.0008923601126298308, -0.0057531483471393585, -0.010015353560447693], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-9.298280929215252e-06, -4.0531076592742465e-06, -0.00012790338951162994, -0.0018123644404113293, -1.4185804502631072e-05, -0.0018290233565494418, -0.00011669908417388797, -3.099393507000059e-05, -5.960462772236497e-07, -0.0007051127031445503, -0.0001867835089797154], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-9.715084888739511e-05, -8.344646857949556e-07, -5.602820692729438e-06, -7.748573807475623e-06, -0.00035232058144174516, -0.00010394509445177391, -5.507317473529838e-05, -0.0002053765201708302, -0.00010108436981681734, -0.00024005869636312127], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred, output_dict=True)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ",", " output", "_", "dict", "=", "True", ")", "\n"], "logprobs": [-0.006539847701787949, -7.390948667307384e-06, -2.9802276912960224e-06, -1.6212332411669195e-05, -0.011903680860996246, -3.0397906812140718e-05, -0.0017824966926127672, -0.00032062159152701497, -0.00016962042718660086, -2.9802276912960224e-06, -4.768370445162873e-07, -0.48954352736473083, -0.36491549015045166, -5.364403477869928e-06, -0.0024504417087882757, -7.533743337262422e-05, -0.40002793073654175, -0.05681715905666351, -0.001446868758648634], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.07877638190984726, -9.405170567333698e-05, -0.1321195662021637, -0.03717391565442085, -0.0002115741081070155, -0.0011428022990003228, -9.179073458653875e-06, -0.0006774752982892096, -0.07227545976638794, -0.04333580657839775], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.6244532465934753, -0.0023363931104540825], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.005390276201069355, -0.00034350217902101576, -0.06540600210428238, -0.00018940561858471483], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.2105501890182495, -0.00012230125139467418, -0.08136410266160965, -0.04720474034547806, -0.01025207620114088], "finish_reason": "stop"}, {"text": " parts:", "tokens": [" parts", ":", "\n"], "logprobs": [-0.8868173360824585, -0.05322631821036339, -0.0976860374212265], "finish_reason": "stop"}, {"text": " (", "tokens": [" (", "\n"], "logprobs": [-2.121500253677368, -0.04552436247467995], "finish_reason": "stop"}, {"text": " len(parts) == 3:  # Macro and weighted average", "tokens": [" len", "(", "parts", ")", " ==", " ", "3", ":", "  ", "#", " Mac", "ro", " and", " weighted", " average", "\n"], "logprobs": [-0.05910802632570267, -6.198863957251888e-06, -0.00038223114097490907, -3.218599158572033e-05, -0.05914364755153656, -2.455681169521995e-05, -1.2334508895874023, -0.060982801020145416, -0.04214059188961983, -5.960462772236497e-07, -2.1507771015167236, -0.00023314618738368154, -0.5983647704124451, -0.14803194999694824, -0.5389205813407898, -0.9355666041374207], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.018631218001246452, -0.00035208225017413497, -0.017856670543551445, -0.0033945576287806034, -8.475421054754406e-05, -0.012369937263429165, -0.007981312461197376, -0.05001427233219147, -0.2172113060951233, -0.05657115578651428, -0.0020410437136888504, -0.0003446938644628972, -1.6331539882230572e-05, -0.0022808508947491646, -0.0006030171643942595, -0.003321727504953742, -0.04924902692437172, -0.10540647804737091, -0.0030042061116546392, -8.106198947643861e-06, -1.1205610462639015e-05, -0.0002184867626056075, -2.52720492426306e-05, -6.758938252460212e-05, -0.002715354785323143, -0.01118048932403326, -0.0007737264968454838, -1.2159273865108844e-05, -2.145764938177308e-06, -9.595887240720913e-05, -4.935142715112306e-05, -0.00013612773909699172, -0.005320437252521515, -0.0068191904574632645, -0.011845957487821579, -0.0010578995570540428], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.022446608170866966, -0.5018159747123718], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.0001102625101339072, -0.00012003655137959868, -0.001430560601875186, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.0728830375228426e-06, -0.014659079723060131, -0.0006151691195555031], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.0017920163227245212, -0.0007516896002925932, -0.00019643761334009469, -4.8636207793606445e-05, -0.00014065706636756659, -5.364403477869928e-06, -0.00045110538485459983, -0.0016221948899328709, -5.960462772236497e-07, -7.152555099310121e-07, -1.0728830375228426e-06, -0.0012891324004158378, -0.009773852303624153], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.019230356439948082, -2.145764938177308e-06, -2.8967437174287625e-05, -0.2549985647201538], "finish_reason": "stop"}], "metrics": {"energy": 1734.747747345925, "energy_per_token": 6.065551564146591, "time": 53.68777, "time_per_token": 0.18771947552447552}}
