{"outputs": [{"text": " pd.read_csv(csv_file_path, encoding=\"unicode_escape\")", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ",", " encoding", "=", "\"", "un", "icode", "_", "escape", "\"", ")", "\n"], "logprobs": [-0.03810407221317291, -0.00032276666024699807, -0.0018860186683014035, -4.1960789531003684e-05, -0.00014244495832826942, -0.00016819016309455037, -0.0072633251547813416, -1.1444026313256472e-05, -2.610649426060263e-05, -6.711257447022945e-05, -8.344646857949556e-07, -1.4601191282272339, -2.3787386417388916, -0.9376469850540161, -0.0084605123847723, -3.474174737930298, -0.004339326173067093, -1.2069954872131348, -0.005396797321736813, -7.223821739898995e-05, -0.14527717232704163, -0.05453920364379883], "finish_reason": "stop"}, {"text": " target_column not in df:", "tokens": [" target", "_", "column", " not", " in", " df", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -1.6560195684432983, -0.0054494403302669525], "finish_reason": "stop"}, {"text": " ValueError(f\"{target_column} is not a column in the CSV file.\")", "tokens": [" Value", "Error", "(", "f", "\"", "{", "target", "_", "column", "}", " is", " not", " a", " column", " in", " the", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -0.0667305514216423, -0.4145618677139282, -0.07176276296377182, -1.674442172050476, -0.00811493955552578, -9.476689592702314e-05, -0.0006124289939180017, -0.0488431379199028, -1.0522453784942627, -0.017976105213165283, -0.8328342437744141, -0.5660128593444824, -0.24365900456905365, -0.1937985122203827, -0.3438486158847809, -0.00012194366718176752, -0.04065680503845215, -0.5563121438026428, -0.07288720458745956, -0.0004997196956537664, -0.004051810130476952], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column])", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "])", "\n"], "logprobs": [-0.004214216023683548, -0.014537486247718334, -0.06773646175861359, -0.13236375153064728, -0.6303597688674927, -0.6138852834701538, -0.011823338456451893, -4.172316494077677e-06, -1.4781842764932662e-05, -0.12279936671257019, -0.04932471364736557], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.008703630417585373, -0.04844491928815842, -0.000686767278239131, -8.106198947643861e-06, -8.344646857949556e-07, -0.00026592056383378804, -0.0508439727127552], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ")", "\n"], "logprobs": [-0.0013858010061085224, -5.352353764465079e-05, -0.005182878579944372, -0.0012755600037053227, -0.0020247451029717922, -8.606540359323844e-05, -0.0004334702098276466, -6.5205356804654e-05, -0.0015245969407260418, -2.5629668016335927e-05, -0.00023672162205912173, -0.0012677022023126483, -0.017665429040789604, -1.4305104514278355e-06, -2.0503786799963564e-05, -1.7881377516459906e-06, -5.602820692729438e-06, -0.00010668662434909493, -0.2115253210067749, -0.00044526674901135266, -0.011432257480919361, -0.00045062878052704036, -0.025859113782644272, -1.764281842042692e-05, -3.266281055402942e-05, -0.004015597980469465, -0.007958725094795227, -2.8967437174287625e-05, -1.2278481335670222e-05, -1.2454884052276611, -0.002665064763277769], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42)", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.15055759251117706, -0.00048232366680167615, -0.021765880286693573, -1.5139465176616795e-05, -2.90866428258596e-05, -0.0017830915749073029, -0.004513077903538942, -1.490105023549404e-05, -5.125986263010418e-06, -0.04695943370461464, -0.06977871060371399, -3.576278118089249e-07, -5.8412379075889476e-06, -0.0002087136817863211, -0.3200867474079132, -0.016750873997807503, -1.005320429801941, -0.002893430180847645], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0015279296785593033, -3.4570634852570947e-06, -0.00011300401820335537, -5.2689116273541003e-05, -2.50339189733495e-06, -0.0011549476766958833, -0.06453455239534378, -1.9073468138230965e-06, -0.00016389934171456844, -5.2927523938706145e-05, -0.006610194221138954, -0.007413614075630903, -0.00011336160969221964, -2.622600959512056e-06, -0.0017321596387773752, -0.1357986032962799, -0.007642199285328388], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00013028726971242577, -4.970903682988137e-05, -0.0009083197801373899, -0.016796475276350975, -0.0003997480380348861, -0.0015382850542664528, -0.0016678959364071488, -0.0006947487709112465, -1.6212332411669195e-05, -0.0004532501916401088, -0.0018786415457725525], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0011975744273513556, -1.5497195136049413e-06, -6.556489552167477e-06, -0.0003798478574026376, -0.0008765193051658571, -0.0004651656490750611, -0.0006338732782751322, -0.0015648273983970284, -0.00021991695393808186, -0.0008106521563604474], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.03180594742298126, -4.768370445162873e-07, -2.861018856492592e-06, -0.00014578233822248876, -0.18081076443195343, -0.0003175231395289302, -0.008375637233257294, -0.007563288789242506, -0.0016355245606973767, -3.266281055402942e-05, -2.2411095415009186e-05, -0.410910040140152, -0.017259987071156502], "finish_reason": "stop"}, {"text": " report.split('\\n')[1:-1]", "tokens": [" report", ".", "split", "('", "\\", "n", "')", "[", "1", ":-", "1", "]", "\n"], "logprobs": [-0.02460477687418461, -0.0005478549865074456, -0.03630738705396652, -1.9396018981933594, -0.017466066405177116, -0.0015797051601111889, -0.0015381659613922238, -2.5277531147003174, -0.402303546667099, -0.6029284596443176, -0.1028427705168724, -0.007015240378677845, -0.1656721830368042], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.47002503275871277, -0.0032055205665528774], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.0016988381976261735, -0.0009602464851923287, -0.058978233486413956, -0.002594678197056055], "finish_reason": "stop"}, {"text": " line.split(\"  \")", "tokens": [" line", ".", "split", "(", "\"", "  ", "\"", ")", "\n"], "logprobs": [-0.2165284901857376, -0.0003499372396618128, -0.3617331087589264, -0.46619534492492676, -0.08350430428981781, -1.3537940979003906, -0.011975417844951153, -0.013270389288663864, -0.017559193074703217], "finish_reason": "stop"}, {"text": " len(parts) > 2:", "tokens": [" len", "(", "parts", ")", " >", " ", "2", ":", "\n"], "logprobs": [-0.44101113080978394, -2.7656173188006505e-05, -0.0008249455713666975, -0.005900583229959011, -1.2982308864593506, -0.000587767455726862, -1.7380515336990356, -0.12361340969800949, -0.06844250112771988], "finish_reason": "stop"}, {"text": " \" \".join([parts[0], parts[1], parts[3], parts[4]])", "tokens": [" \"", " \"", ".", "join", "([", "parts", "[", "0", "]", ",", " parts", "[", "1", "]", ",", " parts", "[", "3", "]", ",", " parts", "[", "4", "]]", ")", "\n"], "logprobs": [-1.151187777519226, -0.49128642678260803, -0.0021771318279206753, -0.000547378440387547, -0.7874783873558044, -0.19640684127807617, -0.014216454699635506, -0.1146145761013031, -0.24119623005390167, -0.06730769574642181, -0.3341268301010132, -0.023013876751065254, -0.7154505252838135, -0.14369699358940125, -0.0758785605430603, -0.1353580802679062, -0.010884084738790989, -1.446521520614624, -0.30977484583854675, -0.048615943640470505, -0.10958629101514816, -0.03195328637957573, -0.27662405371665955, -0.2693365216255188, -0.008597739040851593, -0.0781964510679245], "finish_reason": "stop"}, {"text": " len(parts) == 1:  # Overall accuracy", "tokens": [" len", "(", "parts", ")", " ==", " ", "1", ":", "  ", "#", " Overall", " accuracy", "\n"], "logprobs": [-0.04907742887735367, -7.748573807475623e-06, -0.0004262015863787383, -0.00021550717065110803, -0.15600307285785675, -0.0002919009421020746, -1.8287376165390015, -1.25337815284729, -0.07048675417900085, -7.271740287251305e-06, -0.44189053773880005, -2.28043270111084, -0.416398286819458], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.01097876951098442, -0.000621959799900651, -0.13159997761249542, -0.0019043420907109976, -0.0011370867723599076, -0.017159920185804367, -0.03411939740180969, -0.030944230034947395, -0.08393265306949615, -0.03331651911139488, -0.017266079783439636, -0.004892995115369558, -0.01426416914910078, -0.0038015018217265606, -0.011480930261313915, -0.007730212062597275, -0.056833039969205856, -0.18083037436008453, -0.012205317616462708, -0.00023648326168768108, -9.572047565598041e-05, -0.0040494357235729694, -0.0030146650969982147, -0.0008429311565123498, -0.0027254601009190083, -0.013746708631515503, -0.014651913195848465, -0.00030632095877081156, -0.00020919041708111763, -0.002840415108948946, -0.03134612739086151, -0.0032548329327255487, -0.010128647089004517, -0.020270688459277153, -0.02609443850815296, -0.002280493965372443], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.1885460615158081, -0.23896995186805725], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00017712931730784476, -0.00010001159535022452, -0.00463898153975606, -1.4305104514278355e-06, -9.894321920000948e-06, -9.179073458653875e-06, -0.0351974181830883, -0.002277758438140154], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.010680418461561203, -0.00557261798530817, -0.0010944573441520333, -0.00044800734031014144, -0.0001486429391661659, -5.2569914259947836e-05, -0.0010161004029214382, -0.001900772680528462, -1.2278481335670222e-05, -2.1457441107486375e-05, -9.536738616588991e-07, -0.002717138035222888, -0.01917574554681778], "finish_reason": "stop"}, {"text": " formatted_report<|endoftext|>import re", "tokens": [" formatted", "_", "report", "<", "|", "end", "of", "text", "|>", "import", " re", "\n"], "logprobs": [-0.015078376047313213, -2.682172998902388e-05, -9.023735765367746e-05, -1.227905035018921, -2.0265558760002023e-06, -1.5497195136049413e-06, -0.00024685196694917977, -6.19869097135961e-05, -0.16877712309360504, -1.2038627862930298, -3.049495220184326, -0.014095747843384743], "finish_reason": "stop"}], "metrics": {"energy": 507.9288051795961, "energy_per_token": 1.5972603936465286, "time": 22.24048, "time_per_token": 0.06993861635220126}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -0.2547481656074524, -0.017102263867855072], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -0.21264879405498505, -0.01142471469938755, -0.002662686863914132, -0.004421933554112911], "finish_reason": "stop"}, {"text": " ValueError(\"Target column not found in data\")", "tokens": [" Value", "Error", "(", "\"", "Target", " column", " not", " found", " in", " data", "\"", ")", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -0.0667305514216423, -1.210198998451233, -0.9710519909858704, -0.055876750499010086, -0.04388656094670296, -0.015390678308904171, -0.17895124852657318, -3.16564679145813, -1.719719648361206, -0.002643544925376773, -0.010122864507138729], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column], inplace=False)", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "]", ",", " in", "place", "=", "False", ")", "\n"], "logprobs": [-0.004148805979639292, -0.012523227371275425, -0.0718560665845871, -0.142867311835289, -0.5685609579086304, -0.608109712600708, -0.009370630607008934, -3.4570634852570947e-06, -1.2040065485052764e-05, -2.8583693504333496, -0.012356161139905453, -2.8257272243499756, -3.325883881188929e-05, -0.00047195740626193583, -0.005798898171633482, -0.041375238448381424, -0.04421554505825043], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.006428396794945002, -0.0493600033223629, -0.0004925706889480352, -6.9141146923357155e-06, -8.344646857949556e-07, -0.000251142424531281, -0.05520171299576759], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0014280608156695962, -4.303362584323622e-05, -0.004025214817374945, -0.0011882871622219682, -0.002415836090222001, -6.925819616299123e-05, -0.0007284610182978213, -5.8410845667822286e-05, -0.001608269871212542, -2.658331868587993e-05, -0.0002335037279408425, -0.0012305553536862135, -0.015484701842069626, -9.536738616588991e-07, -2.8132995794294402e-05, -1.9073468138230965e-06, -5.960446742392378e-06, -9.536288416711614e-05, -0.19673502445220947, -0.00042429505265317857, -0.011826165951788425, -0.0004681444843299687, -0.021951207891106606, -1.2397689715726301e-05, -3.325883881188929e-05, -0.00392072694376111, -0.008649858646094799, -3.886147169396281e-05, -1.4543427823809907e-05, -0.303192138671875, -0.09921339899301529, -3.576278118089249e-07, -7.748573807475623e-06, -0.00036864637513644993, -0.3346468210220337, -0.018130410462617874, -0.11424171179533005, -0.0024108411744236946], "finish_reason": "stop"}, {"text": "", "tokens": ["\n"], "logprobs": [-1.9409196376800537], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0014194899704307318, -3.933898824470816e-06, -0.00010907054820563644, -3.862306402879767e-05, -2.622600959512056e-06, -0.0014177043922245502, -0.06300719827413559, -1.4305104514278355e-06, -0.00013612773909699172, -4.9828242481453344e-05, -0.008107371628284454, -0.005512275733053684, -0.00012361239350866526, -2.264974000354414e-06, -0.0015085280174389482, -0.14865364134311676, -0.008130902424454689], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.000125281119835563, -5.090107151772827e-05, -0.0007892115972936153, -0.014373105950653553, -0.0005012686015106738, -0.001115891383960843, -0.0017879704246297479, -0.000688077649101615, -1.823885577323381e-05, -0.000519617460668087, -0.0018438971601426601], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0015543533954769373, -1.4305104514278355e-06, -6.6756979322235566e-06, -0.0004343043256085366, -0.000773369160015136, -0.0005831210291944444, -0.0004892344586551189, -0.0017469158628955483, -0.00021336186910048127, -0.0008934320067055523], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.031126132234930992, -4.768370445162873e-07, -2.9802276912960224e-06, -0.00013672371278516948, -0.17796814441680908, -0.00030501006403937936, -0.006182000041007996, -0.00851772166788578, -0.0017251383978873491, -3.015949550899677e-05, -1.7762025890988298e-05, -0.3508526086807251, -0.017504021525382996], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.021740451455116272, -0.00042715485324151814, -0.03481456637382507, -0.501020610332489, -0.0017688118387013674, -0.03443571552634239, -0.0016352864913642406, -0.0017257335130125284, -0.0597357377409935, -0.038147903978824615], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.43224596977233887, -0.0032215621322393417], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.0023310412652790546, -0.0008908117306418717, -0.05848295986652374, -0.0021665452513843775], "finish_reason": "stop"}, {"text": " line.strip().split(\" \")", "tokens": [" line", ".", "strip", "()", ".", "split", "(", "\"", " \"", ")", "\n"], "logprobs": [-0.18197950720787048, -0.0003933132975362241, -1.317914605140686, -0.011052104644477367, -0.00028939827461726964, -0.014646392315626144, -0.5886364579200745, -0.08604811877012253, -0.7104327082633972, -0.012178349308669567, -0.009312997572124004], "finish_reason": "stop"}, {"text": " parts[0] in [\"precision\", \"recall\", \"f1-score\", \"accuracy\", \"macro\", \"weighted\"]:", "tokens": [" parts", "[", "0", "]", " in", " [", "\"", "precision", "\"", ",", " \"", "re", "call", "\"", ",", " \"", "f", "1", "-", "score", "\"", ",", " \"", "accuracy", "\"", ",", " \"", "macro", "\"", ",", " \"", "weighted", "\"", "]:", "\n"], "logprobs": [-1.421334147453308, -0.330404669046402, -0.07170917093753815, -0.00943818036466837, -1.9862968921661377, -0.26657718420028687, -0.06525290012359619, -0.2521531581878662, -0.14484047889709473, -0.0009628665866330266, -0.0019382515456527472, -0.048820432275533676, -0.0002873722987715155, -0.0005235493299551308, -0.01234780065715313, -0.0012982996413484216, -0.10547138750553131, -0.07867589592933655, -0.04721815884113312, -0.0010145523119717836, -0.008805847726762295, -0.8173157572746277, -0.008034883998334408, -0.27782031893730164, -0.0018963703187182546, -0.39949744939804077, -0.03302429988980293, -0.17000454664230347, -1.052414894104004, -0.02054995857179165, -0.005537527613341808, -0.056462664157152176, -0.0004207202873658389, -0.25420084595680237, -0.004977691452950239], "finish_reason": "stop"}, {"text": " f\"{parts[0]}  {parts[1]}    {parts[2]}    {parts[3]}    {parts[4]}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]}", "  ", "{", "parts", "[", "1", "]}", "    ", "{", "parts", "[", "2", "]}", "    ", "{", "parts", "[", "3", "]}", "    ", "{", "parts", "[", "4", "]}", "\"", "\n"], "logprobs": [-0.629231870174408, -0.06622035801410675, -0.49022191762924194, -0.010730189271271229, -0.017317047342658043, -0.24466578662395477, -0.37364208698272705, -2.2971534729003906, -0.21489784121513367, -0.10955669730901718, -0.006653062533587217, -0.2919607162475586, -0.13378821313381195, -3.6652438640594482, -0.0301625095307827, -0.008405900560319424, -0.0008205384365282953, -0.12514588236808777, -0.03671104088425636, -0.3856004476547241, -0.010946343652904034, -0.005818572361022234, -0.005010192282497883, -0.02568078227341175, -0.03717115893959999, -0.8082151412963867, -0.029340239241719246, -0.03470783680677414, -0.020296387374401093, -0.019027914851903915, -0.08483391255140305, -0.05071423575282097, -0.02201196551322937], "finish_reason": "stop"}, {"text": " len(parts) == 4:  # Overall metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "4", ":", "  ", "#", " Overall", " metrics", "\n"], "logprobs": [-0.04930156469345093, -7.510157047363464e-06, -0.0004941195948049426, -0.00020847532141488045, -0.15561237931251526, -0.00036900385748595, -2.1412038803100586, -0.017318803817033768, -0.011415875516831875, -9.417489309271332e-06, -0.4914121627807617, -0.08256825804710388, -0.0453132763504982], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.010913092643022537, -0.0005458295345306396, -0.12463854998350143, -0.001629335805773735, -0.0013874676078557968, -0.019254328683018684, -0.039405547082424164, -0.027358274906873703, -0.08624881505966187, -0.03597797453403473, -0.018582189455628395, -0.004616673570126295, -0.014807908795773983, -0.004068075679242611, -0.01085719931870699, -0.009043565951287746, -0.050578586757183075, -0.1569669246673584, -0.012806200422346592, -0.0002321927313460037, -0.00011562632425921038, -0.0041219755075871944, -0.0026742194313555956, -0.0007453762227669358, -0.0031143755186349154, -0.016386108472943306, -0.01548622827976942, -0.0002818902430590242, -0.0003541081096045673, -0.0032065899576991796, -0.03902946412563324, -0.0031162770465016365, -0.01127832755446434, -0.021440627053380013, -0.028760448098182678, -0.0025156063493341208], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.21198929846286774, -0.23773545026779175], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00015770144818816334, -0.00011431517486926168, -0.005759311839938164, -1.5497195136049413e-06, -1.2993727978027891e-05, -6.9141146923357155e-06, -0.03956323117017746, -0.002385153668001294], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.00997876562178135, -0.004136578179895878, -0.0008958140970207751, -0.0003738896339200437, -0.00016926287207752466, -4.088794958079234e-05, -0.0010589712765067816, -0.0027563695330172777, -1.2636104656849056e-05, -1.9788545614574105e-05, -1.0728830375228426e-06, -0.0028555116150528193, -0.021530000492930412], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report"], "logprobs": [-0.01902347058057785, -2.276871418871451e-05, -0.00012718822108581662], "finish_reason": "stop"}], "metrics": {"energy": 443.02403500175484, "energy_per_token": 1.384450109380484, "time": 19.770912, "time_per_token": 0.061784099999999995}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -0.2547481656074524, -0.017102263867855072], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -0.21264879405498505, -0.01142471469938755, -0.002662686863914132, -0.004421933554112911], "finish_reason": "stop"}, {"text": " ValueError(f\"Column {target_column} not found in the CSV file\")", "tokens": [" Value", "Error", "(", "f", "\"", "Column", " {", "target", "_", "column", "}", " not", " found", " in", " the", " CS", "V", " file", "\"", ")", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -0.0667305514216423, -0.4145618677139282, -0.07176276296377182, -2.0525684356689453, -0.9349192976951599, -0.0012154342839494348, -2.396077979938127e-05, -0.0004752936656586826, -0.11120419204235077, -0.06882292777299881, -0.04309731349349022, -0.1480737030506134, -1.5739796161651611, -0.17604143917560577, -0.00010799778101500124, -0.025565750896930695, -1.845887541770935, -0.0006709231529384851, -0.004119126591831446], "finish_reason": "stop"}, {"text": " df.drop(columns=target_column)", "tokens": [" df", ".", "drop", "(", "columns", "=", "target", "_", "column", ")", "\n"], "logprobs": [-0.004214216023683548, -0.014537486247718334, -0.06773646175861359, -0.13236375153064728, -0.6303597688674927, -0.8047193288803101, -0.0059044938534498215, -6.270212179515511e-05, -1.8954096958623268e-05, -0.3300885856151581, -0.03770878538489342], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.008703630417585373, -0.04844491928815842, -0.000686767278239131, -8.106198947643861e-06, -8.344646857949556e-07, -0.00026592056383378804, -0.0508439727127552], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.0013858010061085224, -5.352353764465079e-05, -0.005182878579944372, -0.0012755600037053227, -0.0020247451029717922, -8.606540359323844e-05, -0.0004334702098276466, -6.5205356804654e-05, -0.0015245969407260418, -2.5629668016335927e-05, -0.00023672162205912173, -0.0012677022023126483, -0.017665429040789604, -1.4305104514278355e-06, -2.0503786799963564e-05, -1.7881377516459906e-06, -5.602820692729438e-06, -0.00010668662434909493, -1.6619495153427124], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42)", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.15055759251117706, -0.00048232366680167615, -0.021765880286693573, -1.5139465176616795e-05, -2.90866428258596e-05, -0.0017830915749073029, -0.004513077903538942, -1.490105023549404e-05, -5.125986263010418e-06, -0.04695943370461464, -0.06977871060371399, -3.576278118089249e-07, -5.8412379075889476e-06, -0.0002087136817863211, -0.3200867474079132, -0.016750873997807503, -1.005320429801941, -0.002893430180847645], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0015279296785593033, -3.4570634852570947e-06, -0.00011300401820335537, -5.2689116273541003e-05, -2.50339189733495e-06, -0.0011549476766958833, -0.06453455239534378, -1.9073468138230965e-06, -0.00016389934171456844, -5.2927523938706145e-05, -0.006610194221138954, -0.007413614075630903, -0.00011336160969221964, -2.622600959512056e-06, -0.0017321596387773752, -0.1357986032962799, -0.007642199285328388], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00013028726971242577, -4.970903682988137e-05, -0.0009083197801373899, -0.016796475276350975, -0.0003997480380348861, -0.0015382850542664528, -0.0016678959364071488, -0.0006947487709112465, -1.6212332411669195e-05, -0.0004532501916401088, -0.0018786415457725525], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0011975744273513556, -1.5497195136049413e-06, -6.556489552167477e-06, -0.0003798478574026376, -0.0008765193051658571, -0.0004651656490750611, -0.0006338732782751322, -0.0015648273983970284, -0.00021991695393808186, -0.0008106521563604474], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.03180594742298126, -4.768370445162873e-07, -2.861018856492592e-06, -0.00014578233822248876, -0.18081076443195343, -0.0003175231395289302, -0.008375637233257294, -0.007563288789242506, -0.0016355245606973767, -3.266281055402942e-05, -2.2411095415009186e-05, -0.410910040140152, -0.017259987071156502], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.02460477687418461, -0.0005478549865074456, -0.03630738705396652, -0.4638633728027344, -0.0017738097812980413, -0.030859507620334625, -0.001450082752853632, -0.0016784878680482507, -0.052583761513233185, -0.03229706734418869], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.5275808572769165, -0.0029974314384162426], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.0021339519880712032, -0.0010090741561725736, -0.05700252205133438, -0.0023748071398586035], "finish_reason": "stop"}, {"text": " line.strip().split(maxsplit=5)", "tokens": [" line", ".", "strip", "()", ".", "split", "(", "max", "split", "=", "5", ")", "\n"], "logprobs": [-0.2070612907409668, -0.00037579628406092525, -1.279462456703186, -0.012609398923814297, -0.0002919009421020746, -0.01895293965935707, -0.5470440983772278, -3.001652956008911, -0.0004926898400299251, -0.002622024854645133, -2.2586512565612793, -0.012418564409017563, -0.023933548480272293], "finish_reason": "stop"}, {"text": " len(parts) < 4:  # Skip empty lines", "tokens": [" len", "(", "parts", ")", " <", " ", "4", ":", "  ", "#", " Skip", " empty", " lines", "\n"], "logprobs": [-0.43301528692245483, -2.6464111215318553e-05, -0.0009145130170509219, -0.00483296811580658, -2.1491129398345947, -0.0008606782066635787, -1.7383264303207397, -0.10665201395750046, -2.0657565593719482, -0.0007474012672901154, -2.5985608100891113, -1.7159022092819214, -0.2151636779308319, -0.7769408226013184], "finish_reason": "stop"}, {"text": " \" \".join(parts[0:5])", "tokens": [" \"", " \"", ".", "join", "(", "parts", "[", "0", ":", "5", "])", "\n"], "logprobs": [-1.1715266704559326, -0.5446000695228577, -0.0020205811597406864, -0.0005429700831882656, -0.5923945903778076, -0.0907001718878746, -1.6997191905975342, -0.6705107092857361, -0.13082849979400635, -1.6362754106521606, -0.06139422208070755, -0.4138556718826294], "finish_reason": "stop"}, {"text": " len(parts) == 6:  # Overall metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "6", ":", "  ", "#", " Overall", " metrics", "\n"], "logprobs": [-0.054037995636463165, -6.9141146923357155e-06, -0.0004128557338844985, -0.00019834458362311125, -0.1335003525018692, -0.00032610344351269305, -1.3611911535263062, -0.02698911912739277, -0.021196501329541206, -1.168244216387393e-05, -0.33032670617103577, -0.08709587156772614, -0.04002879559993744], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.011353762820363045, -0.0007116645574569702, -0.12924301624298096, -0.0016827721847221255, -0.0012274596374481916, -0.018279777839779854, -0.027561936527490616, -0.029031451791524887, -0.06987287104129791, -0.0323072224855423, -0.01753002591431141, -0.005777564365416765, -0.01602226495742798, -0.00441350694745779, -0.010508914478123188, -0.009153308346867561, -0.05174429714679718, -0.1745552271604538, -0.012541004456579685, -0.00023934361524879932, -9.297892393078655e-05, -0.00408101687207818, -0.002800117013975978, -0.000758955895435065, -0.0026727926451712847, -0.0140503766015172, -0.015101508237421513, -0.0002790300059132278, -0.000276765669696033, -0.0032188291661441326, -0.02966270036995411, -0.0031712977215647697, -0.010785382241010666, -0.023597240447998047, -0.028315216302871704, -0.002539269160479307], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.2552078664302826, -0.19036173820495605], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.0001517419150331989, -0.00014065706636756659, -0.003822996746748686, -1.4305104514278355e-06, -1.490105023549404e-05, -7.748573807475623e-06, -0.033005960285663605, -0.0025358207058161497], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.011226816102862358, -0.006101434119045734, -0.0008431693422608078, -0.00045694399159401655, -0.00017426878912374377, -4.339123915997334e-05, -0.0008391196606680751, -0.002373380120843649, -1.1801649634435307e-05, -2.098061486321967e-05, -8.344646857949556e-07, -0.002126814564689994, -0.02080661803483963], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.016527997329831123, -1.490105023549404e-05, -6.568216485902667e-05, -0.8018084764480591], "finish_reason": "stop"}], "metrics": {"energy": 428.63891895103444, "energy_per_token": 1.5254054055196955, "time": 19.339506, "time_per_token": 0.06882386476868327}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -0.2547481656074524, -0.017102263867855072], "finish_reason": "stop"}, {"text": " target_column not in df:", "tokens": [" target", "_", "column", " not", " in", " df", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -1.6560195684432983, -0.0054494403302669525], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' not found in CSV file\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " CS", "V", " file", "\"", ")", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -0.0667305514216423, -0.4145618677139282, -0.07176276296377182, -1.0824946165084839, -0.06585410982370377, -0.6737578511238098, -0.000742398202419281, -0.0007391819381155074, -2.3007127310847864e-05, -0.00015245705435518175, -0.001574111171066761, -0.042515963315963745, -0.02672591805458069, -0.09465834498405457, -0.5186460614204407, -7.879423355916515e-05, -0.037159670144319534, -1.8155266046524048, -0.0008936702506616712, -0.004411251749843359], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column])", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "])", "\n"], "logprobs": [-0.004214216023683548, -0.014537486247718334, -0.06773646175861359, -0.13236375153064728, -0.6303597688674927, -0.6138852834701538, -0.011823338456451893, -4.172316494077677e-06, -1.4781842764932662e-05, -0.12279936671257019, -0.04932471364736557], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.008703630417585373, -0.04844491928815842, -0.000686767278239131, -8.106198947643861e-06, -8.344646857949556e-07, -0.00026592056383378804, -0.0508439727127552], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42, shuffle=True)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ",", " shuffle", "=", "True", ")", "\n"], "logprobs": [-0.0013858010061085224, -5.352353764465079e-05, -0.005182878579944372, -0.0012755600037053227, -0.0020247451029717922, -8.606540359323844e-05, -0.0004334702098276466, -6.5205356804654e-05, -0.0015245969407260418, -2.5629668016335927e-05, -0.00023672162205912173, -0.0012677022023126483, -0.017665429040789604, -1.4305104514278355e-06, -2.0503786799963564e-05, -1.7881377516459906e-06, -5.602820692729438e-06, -0.00010668662434909493, -0.2115253210067749, -0.00044526674901135266, -0.011432257480919361, -0.00045062878052704036, -0.025859113782644272, -1.764281842042692e-05, -3.266281055402942e-05, -0.004015597980469465, -0.007958725094795227, -2.8967437174287625e-05, -1.2278481335670222e-05, -0.3398812413215637, -0.09455705434083939, -3.576278118089249e-07, -7.629365427419543e-06, -0.00036113892565481365, -0.35296037793159485, -0.0186898373067379, -2.1546621322631836, -1.3191776275634766, -0.0006217215559445322, -0.04472135752439499, -0.15045392513275146, -0.0041399020701646805], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=1)", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "1", ")", "\n"], "logprobs": [-0.15055759251117706, -0.00048232366680167615, -0.021765880286693573, -1.5139465176616795e-05, -2.90866428258596e-05, -0.0017830915749073029, -0.004513077903538942, -1.490105023549404e-05, -5.125986263010418e-06, -0.04695943370461464, -0.06977871060371399, -3.576278118089249e-07, -5.8412379075889476e-06, -0.0002087136817863211, -2.0561516284942627, -2.1364951133728027, -0.004150111693888903], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0014459164813160896, -3.576272320060525e-06, -0.00011097769311163574, -4.565611743601039e-05, -2.50339189733495e-06, -0.0012329365126788616, -0.06425555795431137, -1.4305104514278355e-06, -0.00013195598148740828, -5.6622808187967166e-05, -0.007112185470759869, -0.006426975596696138, -0.00012730741582345217, -2.50339189733495e-06, -0.001517693279311061, -0.13770079612731934, -0.007317881565541029], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00013219437096267939, -4.9470632802695036e-05, -0.0007018963224254549, -0.01366510335355997, -0.00044383687782101333, -0.001359610934741795, -0.001644212519749999, -0.0008076743106357753, -2.1815061700181104e-05, -0.0004988856380805373, -0.0018461579456925392], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0016578990034759045, -1.1920922133867862e-06, -6.6756979322235566e-06, -0.00044705410255119205, -0.0006548406090587378, -0.0006906984490342438, -0.0006212450098246336, -0.0018804263090714812, -0.00020632999076042324, -0.0008379285573028028], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.027436334639787674, -4.768370445162873e-07, -2.622600959512056e-06, -0.00015162272029556334, -0.1529451161623001, -0.0003280101518612355, -0.00630473205819726, -0.006651286501437426, -0.0017736908048391342, -3.71926071238704e-05, -2.038458114839159e-05, -0.40842205286026, -0.017810063436627388], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.02578987553715706, -0.0006413786904886365, -0.035062987357378006, -0.5045933127403259, -0.0015870844945311546, -0.026508620008826256, -0.0015816095983609557, -0.0016903887735679746, -0.0661424770951271, -0.046458277851343155], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.48849722743034363, -0.00296106212772429], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.001540784491226077, -0.000746448349673301, -0.06343278288841248, -0.0021964015904814005], "finish_reason": "stop"}, {"text": " line.strip().split(\"  \")", "tokens": [" line", ".", "strip", "()", ".", "split", "(", "\"", "  ", "\"", ")", "\n"], "logprobs": [-0.2518426775932312, -0.000342191313393414, -1.3257592916488647, -0.014119725674390793, -0.0003610197745729238, -0.019655104726552963, -0.5247431397438049, -0.054866958409547806, -1.0851266384124756, -0.011182728223502636, -0.011633767746388912, -0.0143590047955513], "finish_reason": "stop"}, {"text": " len(parts) >= 5:", "tokens": [" len", "(", "parts", ")", " >=", " ", "5", ":", "\n"], "logprobs": [-0.37598901987075806, -2.8729025871143676e-05, -0.0014432977186515927, -0.005167698487639427, -1.2111401557922363, -0.0013243722496554255, -1.8649163246154785, -0.175701305270195, -0.11558058857917786], "finish_reason": "stop"}, {"text": " f\"{parts[1]} {parts[3]} {parts[5]} {parts[4]} {parts[0]}\"", "tokens": [" f", "\"", "{", "parts", "[", "1", "]}", " {", "parts", "[", "3", "]}", " {", "parts", "[", "5", "]}", " {", "parts", "[", "4", "]}", " {", "parts", "[", "0", "]}", "\"", "\n"], "logprobs": [-0.6540718674659729, -0.05686885118484497, -0.4995708167552948, -0.011960340663790703, -0.022471319884061813, -2.0567967891693115, -0.3738127052783966, -0.9125298261642456, -0.07300335168838501, -0.004805800039321184, -1.480086088180542, -0.2485121637582779, -0.13049082458019257, -0.003213244490325451, -0.001718236249871552, -0.5997107625007629, -0.05709552764892578, -0.5979174971580505, -0.06153815984725952, -0.031196964904665947, -2.0843217372894287, -0.1018640473484993, -1.179077386856079, -0.05806100368499756, -0.020475564524531364, -1.0097771883010864, -0.09242301434278488, -0.06491255760192871, -0.04958895593881607], "finish_reason": "stop"}, {"text": " len(parts) == 7:  # Overall metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "7", ":", "  ", "#", " Overall", " metrics", "\n"], "logprobs": [-0.04942331835627556, -8.22540732769994e-06, -0.00031716562807559967, -0.00018344627460464835, -0.1467505842447281, -0.000300600629998371, -2.0569987297058105, -0.0198350977152586, -0.015339847654104233, -7.390948667307384e-06, -0.38153794407844543, -0.05617814511060715, -0.0366114042699337], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.011726967059075832, -0.0006306566647253931, -0.12042777985334396, -0.0016644446877762675, -0.0012493670219555497, -0.015997862443327904, -0.030311360955238342, -0.029157433658838272, -0.08131597191095352, -0.03289280831813812, -0.016599049791693687, -0.0044588432647287846, -0.014155927114188671, -0.0040520476177334785, -0.009364726021885872, -0.007821883074939251, -0.05541297793388367, -0.17768843472003937, -0.012198134325444698, -0.00023672162205912173, -6.365573790390044e-05, -0.003885578364133835, -0.0026159610133618116, -0.0007066613179631531, -0.002598958555608988, -0.01396973617374897, -0.013280270621180534, -0.00032491172896698117, -0.00029583368450403214, -0.003272061934694648, -0.04101133719086647, -0.003491260576993227, -0.011145948432385921, -0.020505346357822418, -0.029809314757585526, -0.002460906282067299], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.2266981452703476, -0.21647435426712036], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00013755806139670312, -0.00011455356434453279, -0.004925142508000135, -1.6689286894688848e-06, -1.168244216387393e-05, -9.65590606938349e-06, -0.043351560831069946, -0.0028077249880880117], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.00937972404062748, -0.004942105617374182, -0.0008654424455016851, -0.00038485272671096027, -0.00021419614495243877, -3.40932747349143e-05, -0.001042775809764862, -0.002087915316224098, -1.2993727978027891e-05, -1.549708758830093e-05, -8.344646857949556e-07, -0.002218168694525957, -0.021148767322301865], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.01464721467345953, -1.823885577323381e-05, -8.5588610090781e-05, -0.7652288675308228], "finish_reason": "stop"}], "metrics": {"energy": 437.39353446197504, "energy_per_token": 1.3974234327858628, "time": 19.335058, "time_per_token": 0.0617733482428115}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -0.2547481656074524, -0.017102263867855072], "finish_reason": "stop"}, {"text": " target_column not in df:", "tokens": [" target", "_", "column", " not", " in", " df", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -1.6560195684432983, -0.0054494403302669525], "finish_reason": "stop"}, {"text": " ValueError(f\"Column {target_column} not found in the CSV file\")", "tokens": [" Value", "Error", "(", "f", "\"", "Column", " {", "target", "_", "column", "}", " not", " found", " in", " the", " CS", "V", " file", "\"", ")", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -0.0667305514216423, -0.4145618677139282, -0.07176276296377182, -2.0525684356689453, -0.9349192976951599, -0.0012154342839494348, -2.396077979938127e-05, -0.0004752936656586826, -0.11120419204235077, -0.06882292777299881, -0.04309731349349022, -0.1480737030506134, -1.5739796161651611, -0.17604143917560577, -0.00010799778101500124, -0.025565750896930695, -1.845887541770935, -0.0006709231529384851, -0.004119126591831446], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.004214216023683548, -0.014537486247718334, -0.06773646175861359, -0.13236375153064728, -0.7748643159866333, -1.168244216387393e-05, -2.1219027985353023e-05, -0.00043335105874575675, -0.003440653206780553, -0.006637904793024063, -0.006397719029337168, -0.012524993158876896, -0.04928375035524368], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.006380543578416109, -0.042553093284368515, -0.0006114759016782045, -5.8412379075889476e-06, -8.344646857949556e-07, -0.00025245340657420456, -0.05078426003456116], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.0014467497821897268, -4.6132929128361866e-05, -0.0035253537353128195, -0.0013853248674422503, -0.0023419829085469246, -7.211902266135439e-05, -0.0004800597671419382, -6.41325386823155e-05, -0.0014577010879293084, -3.0397906812140718e-05, -0.00022492263815365732, -0.001100649475120008, -0.014757870696485043, -1.1920922133867862e-06, -2.0503786799963564e-05, -1.6689286894688848e-06, -5.602820692729438e-06, -8.689979586051777e-05, -1.7829883098602295], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=0", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "0", "\n"], "logprobs": [-0.18287934362888336, -0.00047398300375789404, -0.024015599861741066, -1.1205610462639015e-05, -2.372236667724792e-05, -0.0015043619787320495, -0.005033439956605434, -1.4662635294371285e-05, -6.437280717364047e-06, -0.04322461411356926, -0.0653751865029335, -3.576278118089249e-07, -6.198863957251888e-06, -0.00022110878489911556, -2.3117446899414062, -1.1610729694366455], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.001420561340637505, -4.529942543740617e-06, -0.00011860620725201443, -3.731181277544238e-05, -2.0265558760002023e-06, -0.0011104138102382421, -0.06174304708838463, -1.6689286894688848e-06, -0.00013767725613433868, -5.793403761344962e-05, -0.0062727476470172405, -0.005760852713137865, -0.00010740180005086586, -2.264974000354414e-06, -0.0011840007500723004, -0.13341909646987915, -0.008879697881639004], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00013886917440686375, -4.136476854910143e-05, -0.0007550249574705958, -0.014085521921515465, -0.0004606377915479243, -0.0014882928226143122, -0.0019125519320368767, -0.0008493629866279662, -1.645074735279195e-05, -0.00043215948971919715, -0.0019587157294154167], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0010562323732301593, -1.1920922133867862e-06, -7.629365427419543e-06, -0.0004456242313608527, -0.0008173224050551653, -0.0006509092636406422, -0.00041309406515210867, -0.001712523982860148, -0.00021240839851088822, -0.0009364272118546069], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.026906847953796387, -5.960462772236497e-07, -2.861018856492592e-06, -0.00013600854435935616, -0.1540367156267166, -0.0003165697562508285, -0.006360051687806845, -0.00791106279939413, -0.0017178792040795088, -3.504691630951129e-05, -1.7165990357170813e-05, -0.3657420873641968, -0.018694868311285973], "finish_reason": "stop"}, {"text": " report.split('\\n')", "tokens": [" report", ".", "split", "('", "\\", "n", "')", "\n"], "logprobs": [-0.025867361575365067, -0.0004924515378661454, -0.035258181393146515, -1.9790420532226562, -0.016044670715928078, -0.0011972171487286687, -0.0019612142350524664, -0.09624610096216202], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.45637762546539307, -0.003150739474222064], "finish_reason": "stop"}, {"text": " in lines[1:]:", "tokens": [" in", " lines", "[", "1", ":", "]:", "\n"], "logprobs": [-0.0019012485863640904, -0.0009270184673368931, -2.8452141284942627, -0.39921149611473083, -0.8243032097816467, -0.1692134439945221, -0.16746832430362701], "finish_reason": "stop"}, {"text": " line.strip().split()", "tokens": [" line", ".", "strip", "()", ".", "split", "()", "\n"], "logprobs": [-0.20035257935523987, -0.00036090059438720345, -1.2735768556594849, -0.013170862570405006, -0.00030048147891648114, -0.016430435702204704, -0.7554470300674438, -0.010936086066067219], "finish_reason": "stop"}, {"text": " len(parts) >= 7:", "tokens": [" len", "(", "parts", ")", " >=", " ", "7", ":", "\n"], "logprobs": [-0.37852928042411804, -2.8013790142722428e-05, -0.0009534580749459565, -0.0049464949406683445, -1.2464429140090942, -0.0014402027009055018, -2.5421195030212402, -0.08197250962257385, -0.17480388283729553], "finish_reason": "stop"}, {"text": " f\"class {parts[1]}: \"", "tokens": [" f", "\"", "class", " {", "parts", "[", "1", "]", "}:", " \"", "\n"], "logprobs": [-0.6334783434867859, -0.05639190971851349, -1.6247565746307373, -0.02153315208852291, -0.011169525794684887, -0.025043874979019165, -1.5951635837554932, -0.4118900001049042, -0.9185551404953003, -1.5402919054031372, -0.69876629114151], "finish_reason": "stop"}, {"text": " len(parts) == 16:  # Overall metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "1", "6", ":", "  ", "#", " Overall", " metrics", "\n"], "logprobs": [-0.05195833370089531, -7.986990567587782e-06, -0.0003793711948674172, -0.00019131260341964662, -0.14480862021446228, -0.00034254882484674454, -1.8613260984420776, -3.856715202331543, -0.025056198239326477, -0.05564889311790466, -2.0503786799963564e-05, -0.37516912817955017, -0.05026994273066521, -0.04231772571802139], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.00998950656503439, -0.0006777135422453284, -0.1239830031991005, -0.0017487009754404426, -0.0011548285838216543, -0.017641887068748474, -0.033334046602249146, -0.025900468230247498, -0.0845048800110817, -0.03719309717416763, -0.01741030439734459, -0.004746835678815842, -0.0175042562186718, -0.00481932470574975, -0.009806551970541477, -0.008462049067020416, -0.05552699789404869, -0.1916533261537552, -0.01087335404008627, -0.0002489972102921456, -0.00012933371181134135, -0.004123281687498093, -0.0026468741707503796, -0.000809818331617862, -0.0029326549265533686, -0.016509469598531723, -0.016807962208986282, -0.00034648136352188885, -0.00039664984797127545, -0.003212174866348505, -0.03177961707115173, -0.0033267175313085318, -0.010798000730574131, -0.0217484999448061, -0.03196309879422188, -0.002380396705120802], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.2563205361366272, -0.20000791549682617], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00013398226292338222, -0.00012003655137959868, -0.005065820179879665, -1.6689286894688848e-06, -1.2874520507466514e-05, -8.22540732769994e-06, -0.035723570734262466, -0.002471251878887415], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.010501482523977757, -0.005214305128902197, -0.0011753087164834142, -0.00039307496626861393, -0.00020346954988781363, -4.2437604861333966e-05, -0.0008886678842827678, -0.002699899487197399, -1.4185804502631072e-05, -2.13382354559144e-05, -1.0728830375228426e-06, -0.0022884628269821405, -0.021301301196217537], "finish_reason": "stop"}, {"text": " formatted_report<|endoftext|>from itertools import chain", "tokens": [" formatted", "_", "report", "<", "|", "end", "of", "text", "|>", "from", " iter", "tools", " import", " chain", "\n"], "logprobs": [-0.016084320843219757, -1.6927575416048057e-05, -8.451581379631534e-05, -1.1844828128814697, -1.5497195136049413e-06, -1.4305104514278355e-06, -0.00015233787416946143, -6.09140915912576e-05, -0.14935563504695892, -1.242271065711975, -4.112154960632324, -0.0020713796839118004, -0.00017820201173890382, -2.0434820652008057, -0.242183119058609], "finish_reason": "stop"}], "metrics": {"energy": 438.0936455593108, "energy_per_token": 1.5590521194281524, "time": 19.528107, "time_per_token": 0.06949504270462632}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -0.2547481656074524, -0.017102263867855072], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -0.21264879405498505, -0.01142471469938755, -0.002662686863914132, -0.004421933554112911], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' not found in the CSV file\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " the", " CS", "V", " file", "\"", ")", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -0.0667305514216423, -0.4145618677139282, -0.07176276296377182, -1.0824946165084839, -0.06585410982370377, -0.6737578511238098, -0.000742398202419281, -0.0007391819381155074, -2.3007127310847864e-05, -0.00015245705435518175, -0.001574111171066761, -0.042515963315963745, -0.02672591805458069, -0.09465834498405457, -1.353759527206421, -0.16116157174110413, -4.625213477993384e-05, -0.018231084570288658, -2.302065849304199, -0.0007414452848024666, -0.004335765726864338], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.004214216023683548, -0.014537486247718334, -0.06773646175861359, -0.13236375153064728, -0.7748643159866333, -1.168244216387393e-05, -2.1219027985353023e-05, -0.00043335105874575675, -0.003440653206780553, -0.006637904793024063, -0.006397719029337168, -0.012524993158876896, -0.04928375035524368], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.006380543578416109, -0.042553093284368515, -0.0006114759016782045, -5.8412379075889476e-06, -8.344646857949556e-07, -0.00025245340657420456, -0.05078426003456116], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0014467497821897268, -4.6132929128361866e-05, -0.0035253537353128195, -0.0013853248674422503, -0.0023419829085469246, -7.211902266135439e-05, -0.0004800597671419382, -6.41325386823155e-05, -0.0014577010879293084, -3.0397906812140718e-05, -0.00022492263815365732, -0.001100649475120008, -0.014757870696485043, -1.1920922133867862e-06, -2.0503786799963564e-05, -1.6689286894688848e-06, -5.602820692729438e-06, -8.689979586051777e-05, -0.18525005877017975, -0.00048601735034026206, -0.01148929726332426, -0.00047350639943033457, -0.021610382944345474, -1.3828182090946939e-05, -3.93382906622719e-05, -0.0045343199744820595, -0.006883005611598492, -3.755022044060752e-05, -1.3828182090946939e-05, -0.29116353392601013, -0.10402704775333405, -3.576278118089249e-07, -7.033323527139146e-06, -0.00033504117163829505, -0.30618107318878174, -0.01826409250497818, -0.11484022438526154, -0.002492894185706973], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42)", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.18287934362888336, -0.00047398300375789404, -0.024015599861741066, -1.1205610462639015e-05, -2.372236667724792e-05, -0.0015043619787320495, -0.005033439956605434, -1.4662635294371285e-05, -6.437280717364047e-06, -0.04322461411356926, -0.0653751865029335, -3.576278118089249e-07, -6.198863957251888e-06, -0.00022110878489911556, -0.2966461479663849, -0.015329751186072826, -0.9678463339805603, -0.0030718303751200438], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0015795861836522818, -4.6491513785440475e-06, -0.00012587709352374077, -4.362964682513848e-05, -2.622600959512056e-06, -0.0011945976875722408, -0.06853366643190384, -1.6689286894688848e-06, -0.00011491115583339706, -5.757642793469131e-05, -0.0065362947061657906, -0.005637934897094965, -9.274052717955783e-05, -2.861018856492592e-06, -0.0013731822837144136, -0.12914884090423584, -0.009440896101295948], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00010942813969450071, -4.827859811484814e-05, -0.0008585343020968139, -0.01406154315918684, -0.00042775063775479794, -0.0014369887067005038, -0.0017162130679935217, -0.0008704449282959104, -2.5033637939486653e-05, -0.0004408579843584448, -0.0020722122862935066], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0010339635191485286, -1.5497195136049413e-06, -7.748573807475623e-06, -0.00040534863364882767, -0.0006998711614869535, -0.0005988473421894014, -0.0005133026279509068, -0.0015029336791485548, -0.00023946279543451965, -0.0009062950266525149], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.028079718351364136, -4.768370445162873e-07, -2.9802276912960224e-06, -0.00013159839727450162, -0.14541034400463104, -0.0002908283786382526, -0.007789000868797302, -0.007301313802599907, -0.0018386616138741374, -3.015949550899677e-05, -2.5629668016335927e-05, -0.49983134865760803, -0.01877828687429428], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.02843363955616951, -0.0005050813779234886, -0.03437363728880882, -0.4934084415435791, -0.0017513189231976867, -0.03516312316060066, -0.0015830377815291286, -0.0017106198938563466, -0.061645764857530594, -0.03849644586443901], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.462782084941864, -0.0034004980698227882], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.0019402741454541683, -0.0010758809512481093, -0.06487759202718735, -0.0023210509680211544], "finish_reason": "stop"}, {"text": " line.split(\"  \")", "tokens": [" line", ".", "split", "(", "\"", "  ", "\"", ")", "\n"], "logprobs": [-0.20839479565620422, -0.00031835734262131155, -0.34563392400741577, -0.5551834106445312, -0.0698520839214325, -1.3612287044525146, -0.012145020999014378, -0.012888111174106598, -0.014335384592413902], "finish_reason": "stop"}, {"text": " len(parts) > 0:", "tokens": [" len", "(", "parts", ")", " >", " ", "0", ":", "\n"], "logprobs": [-0.38709762692451477, -2.8490614567999728e-05, -0.0007964776013977826, -0.005528161767870188, -1.3740431070327759, -0.0005235493299551308, -1.6736819744110107, -0.1815461367368698, -0.019325774163007736], "finish_reason": "stop"}, {"text": " \" \".join([parts[0], parts[2], parts[3], parts[4]])", "tokens": [" \"", " \"", ".", "join", "([", "parts", "[", "0", "]", ",", " parts", "[", "2", "]", ",", " parts", "[", "3", "]", ",", " parts", "[", "4", "]]", ")", "\n"], "logprobs": [-1.1962335109710693, -0.5676788091659546, -0.0020165364257991314, -0.000589792791288346, -0.7858887314796448, -0.17788034677505493, -0.014248069375753403, -0.11861778795719147, -0.2390575259923935, -0.06924781948328018, -0.3186337947845459, -0.02835739590227604, -1.5679960250854492, -0.140848308801651, -0.04768256098031998, -0.04426538571715355, -0.007413495797663927, -0.7975219488143921, -0.18541020154953003, -0.022250879555940628, -0.05451188609004021, -0.015900250524282455, -0.11872471868991852, -0.11936107277870178, -0.004931311123073101, -0.06223055347800255], "finish_reason": "stop"}, {"text": " len(parts) == 4:  # Global metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "4", ":", "  ", "#", " Global", " metrics", "\n"], "logprobs": [-0.047697339206933975, -8.106198947643861e-06, -0.00043561504571698606, -0.00019643761334009469, -0.153843954205513, -0.0002817710628733039, -2.177412986755371, -0.01645377092063427, -0.016656499356031418, -1.0132738680113107e-05, -3.2852981090545654, -0.09163778275251389, -0.04450405761599541], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.011113646440207958, -0.0007008241955190897, -0.13097314536571503, -0.0016355245606973767, -0.0012166248634457588, -0.015761440619826317, -0.033788345754146576, -0.0310785211622715, -0.07609622180461884, -0.030129658058285713, -0.018532924354076385, -0.004381461534649134, -0.011967171914875507, -0.003947087563574314, -0.011005062609910965, -0.008569137193262577, -0.05384993553161621, -0.1672547459602356, -0.012011107057332993, -0.000256982195423916, -5.876845170860179e-05, -0.003999094013124704, -0.002649251837283373, -0.0008175606490112841, -0.0029038903303444386, -0.014497891068458557, -0.014425748027861118, -0.00028951745480298996, -0.00031442465842701495, -0.002994579030200839, -0.043452922254800797, -0.002991132438182831, -0.01071049366146326, -0.02236396074295044, -0.028586572036147118, -0.0023004752583801746], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.2689439654350281, -0.19883105158805847], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.0001565095444675535, -0.000105375460407231, -0.005821890663355589, -1.6689286894688848e-06, -1.0490362910786644e-05, -9.417489309271332e-06, -0.02975435182452202, -0.002920055529102683], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.01079564169049263, -0.004344192799180746, -0.0009217780898325145, -0.00044204952428117394, -0.00018273114983458072, -4.577531944960356e-05, -0.0009037939016707242, -0.0023472157772630453, -1.2278481335670222e-05, -2.2649508537142538e-05, -8.344646857949556e-07, -0.0023356794845312834, -0.017188159748911858], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.016131946817040443, -2.13382354559144e-05, -7.271502545336261e-05, -0.8894205093383789], "finish_reason": "stop"}], "metrics": {"energy": 457.4601656179426, "energy_per_token": 1.4804536104140538, "time": 20.554417, "time_per_token": 0.06651914886731392}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -0.2547481656074524, -0.017102263867855072], "finish_reason": "stop"}, {"text": " not target_column in df.columns:", "tokens": [" not", " target", "_", "column", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-2.5720248222351074, -0.2788430154323578, -3.361645576660521e-05, -0.00024387246230617166, -0.022072836756706238, -0.043172553181648254, -0.2496751993894577, -0.02162403240799904, -0.007302142214030027, -0.008677985519170761], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' not found in CSV file\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " CS", "V", " file", "\"", ")", "\n"], "logprobs": [-0.003356776898726821, -1.966933996300213e-05, -0.06692657619714737, -0.4667329490184784, -0.07706660032272339, -1.032595157623291, -0.05824051424860954, -0.6876947283744812, -0.000987637904472649, -0.0006192197324708104, -2.2291887944447808e-05, -0.00013267113536130637, -0.0019162403186783195, -0.041065916419029236, -0.025693794712424278, -0.10119350254535675, -0.4935157299041748, -9.691245941212401e-05, -0.03771291673183441, -1.8495240211486816, -0.0007626485894434154, -0.004589262884110212], "finish_reason": "stop"}, {"text": " df.drop(columns=target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "columns", "=", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.00460753683000803, -0.016604209318757057, -0.07838792353868484, -0.1214568242430687, -0.5841586589813232, -0.8822752833366394, -0.006067309994250536, -5.149708886165172e-05, -2.3245540432981215e-05, -1.3502600193023682, -0.06777812540531158, -0.0038410471752285957, -0.013117918744683266, -0.005895605776458979, -0.06112467125058174], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.006640983745455742, -0.04540600627660751, -0.0009446449112147093, -8.106198947643861e-06, -8.344646857949556e-07, -0.0002849888114724308, -0.04295206442475319], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0015015052631497383, -5.185469490243122e-05, -0.003857553703710437, -0.0010241983691230416, -0.00234650238417089, -6.592056161025539e-05, -0.0003883084573317319, -6.687417771900073e-05, -0.0018285474507138133, -4.124556289752945e-05, -0.0002019201492657885, -0.0012038849527016282, -0.01693842187523842, -1.311301275563892e-06, -2.2053474822314456e-05, -1.5497195136049413e-06, -6.9141146923357155e-06, -0.00010215714428341016, -0.2135637402534485, -0.0005150898941792548, -0.010035180486738682, -0.0005165196489542723, -0.02509991079568863, -1.5258672647178173e-05, -3.302042750874534e-05, -0.0037206250708550215, -0.00864548608660698, -3.7431014789035544e-05, -1.0371154530730564e-05, -0.29180410504341125, -0.09660159796476364, -4.768370445162873e-07, -7.867782187531702e-06, -0.0003743662964552641, -0.3442051410675049, -0.01825145073235035, -0.11525791138410568, -0.0023588708136230707], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42, stratify=y", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ",", " strat", "ify", "=", "y", "\n"], "logprobs": [-0.16129904985427856, -0.0004557524516712874, -0.024227041751146317, -7.271740287251305e-06, -2.8490614567999728e-05, -0.001620409544557333, -0.004825256764888763, -1.4305012882687151e-05, -7.390948667307384e-06, -0.04368562623858452, -0.07388406246900558, -2.3841855067985307e-07, -6.556489552167477e-06, -0.00018737945356406271, -0.35569825768470764, -0.014571204781532288, -1.2692409753799438, -0.8638907670974731, -0.021167324855923653, -0.0005639393348246813, -0.01990591734647751, -0.4613364040851593], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0015192406717687845, -5.125986263010418e-06, -0.00011121608258690685, -4.1126360883936286e-05, -2.622600959512056e-06, -0.0012850845232605934, -0.06082655489444733, -1.6689286894688848e-06, -0.00014244495832826942, -5.769562994828448e-05, -0.008035357110202312, -0.006042427383363247, -0.0001070442158379592, -2.50339189733495e-06, -0.0016751555958762765, -0.13097062706947327, -0.008711548522114754], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00011419598013162613, -5.006664650863968e-05, -0.0007244108128361404, -0.01210321206599474, -0.0004180987598374486, -0.0013163958210498095, -0.0015053142560645938, -0.0007812308613210917, -1.6569954823353328e-05, -0.0004820853646378964, -0.0018842339050024748], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0013181816320866346, -1.1920922133867862e-06, -7.152531907195225e-06, -0.0004757702990900725, -0.000967153930105269, -0.0007965967524796724, -0.0005839549703523517, -0.0015826807357370853, -0.00027843413408845663, -0.0008683010237291455], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.02879403717815876, -4.768370445162873e-07, -2.9802276912960224e-06, -0.00012218205665703863, -0.17633889615535736, -0.0002936885575763881, -0.007588607259094715, -0.008201018907129765, -0.0016813441179692745, -4.053033626405522e-05, -1.9192511899746023e-05, -0.395538330078125, -0.01641894318163395], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.023060359060764313, -0.0004153581103309989, -0.03484565392136574, -0.5157238841056824, -0.0019319456769153476, -0.02836608700454235, -0.0018908970523625612, -0.0014947204617783427, -0.055801667273044586, -0.03591334447264671], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.4765033721923828, -0.002753754146397114], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.0022878681775182486, -0.0007284610182978213, -0.0566411092877388, -0.0025581750087440014], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.1903216391801834, -0.00033909291960299015, -0.39846011996269226, -1.027915358543396, -0.01092853955924511], "finish_reason": "stop"}, {"text": " len(parts) > 3:", "tokens": [" len", "(", "parts", ")", " >", " ", "3", ":", "\n"], "logprobs": [-0.41387853026390076, -2.753696753643453e-05, -0.0009909725049510598, -0.005332294851541519, -1.381650447845459, -0.0005364171229302883, -2.5990560054779053, -0.10651881992816925, -0.09263993054628372], "finish_reason": "stop"}, {"text": " \"\\t\".join(parts) + \"\\t\\t\"", "tokens": [" \"", "\\", "t", "\"", ".", "join", "(", "parts", ")", " +", " \"", "\\", "t", "\\", "t", "\"", "\n"], "logprobs": [-1.1641693115234375, -3.422175645828247, -0.77923983335495, -0.10986968874931335, -0.026142749935388565, -0.00014482879487331957, -0.44980767369270325, -0.05646660923957825, -0.6642624139785767, -1.9899042844772339, -0.04809846729040146, -0.20857790112495422, -1.6071994304656982, -1.7950091361999512, -0.21983110904693604, -0.44800087809562683, -0.5222001075744629], "finish_reason": "stop"}, {"text": " len(parts) >= 9:  # Global metrics", "tokens": [" len", "(", "parts", ")", " >=", " ", "9", ":", "  ", "#", " Global", " metrics", "\n"], "logprobs": [-0.053746119141578674, -8.34461570775602e-06, -0.0005404680268839002, -0.0001919085334520787, -2.4966681003570557, -0.0013602061662822962, -2.8286375999450684, -0.1256936490535736, -0.04303702339529991, -3.135155202471651e-05, -3.1959352493286133, -0.09583339095115662, -0.09874510765075684], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.01015708688646555, -0.0007570500019937754, -0.13382209837436676, -0.0015688742278143764, -0.0012492479290813208, -0.017292676493525505, -0.028905456885695457, -0.03268042206764221, -0.08597953617572784, -0.03722456470131874, -0.01702374592423439, -0.0052580637857317924, -0.018666787073016167, -0.003943050280213356, -0.01016133464872837, -0.008259779773652554, -0.052724678069353104, -0.16855686902999878, -0.013298386707901955, -0.0002598424907773733, -7.092700980138034e-05, -0.004165307153016329, -0.003277052426710725, -0.0007010624394752085, -0.002704773796722293, -0.015683285892009735, -0.014161686412990093, -0.0002821285743266344, -0.00035958975786343217, -0.003157750703394413, -0.03568756580352783, -0.0031122365035116673, -0.01053463015705347, -0.022915782406926155, -0.025782905519008636, -0.0028463585767894983], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.2308366447687149, -0.2240552306175232], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00014029949670657516, -0.00010930894495686516, -0.004363420885056257, -1.5497195136049413e-06, -1.2755313036905136e-05, -7.033323527139146e-06, -0.031957902014255524, -0.0024990777019411325], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.01073926966637373, -0.004864642862230539, -0.0010244365548714995, -0.00031549722189083695, -0.00015448330668732524, -4.100715523236431e-05, -0.0007627676823176444, -0.002200802555307746, -1.3947389561508317e-05, -1.7523612768854946e-05, -1.0728830375228426e-06, -0.0027105992194265127, -0.018437080085277557], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.015858948230743408, -1.966933996300213e-05, -8.83301836438477e-05, -0.8637192249298096], "finish_reason": "stop"}], "metrics": {"energy": 410.2446938123699, "energy_per_token": 1.3629391821008967, "time": 18.893906, "time_per_token": 0.06277045182724253}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -0.2547481656074524, -0.017102263867855072], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -0.21264879405498505, -0.01142471469938755, -0.002662686863914132, -0.004421933554112911], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column {target_column} not found in CSV file.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " {", "target", "_", "column", "}", " not", " found", " in", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -0.0667305514216423, -0.4145618677139282, -0.07176276296377182, -1.0824946165084839, -0.06585410982370377, -1.4755785465240479, -0.0013823487097397447, -4.3748852476710454e-05, -0.000179036331246607, -0.09507153928279877, -0.037641625851392746, -0.03481779247522354, -0.08688092231750488, -0.5676732063293457, -9.48860906646587e-05, -0.06044711172580719, -0.572597861289978, -0.02467374876141548, -0.00027891082572750747, -0.0027853762730956078], "finish_reason": "stop"}, {"text": " df.drop([target_column], axis=1)", "tokens": [" df", ".", "drop", "([", "target", "_", "column", "]", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.004214216023683548, -0.014537486247718334, -0.06773646175861359, -2.1508212089538574, -0.022831076756119728, -0.00035339308669790626, -1.823885577323381e-05, -0.06301022320985794, -0.0016794399125501513, -0.00596398301422596, -0.006911774165928364, -0.004983622580766678, -0.009179295040667057, -0.04385427385568619], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.008048010058701038, -0.0429605133831501, -0.0005435658385977149, -7.390948667307384e-06, -8.344646857949556e-07, -0.00026913834153674543, -0.056673552840948105], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0014104428701102734, -4.0411134250462055e-05, -0.003766349283978343, -0.0017259714659303427, -0.001979893073439598, -7.211902266135439e-05, -0.0004698126285802573, -6.508615479106084e-05, -0.0015868464251980186, -2.992108420585282e-05, -0.00019524575327523053, -0.0011819765204563737, -0.014838446862995625, -1.1920922133867862e-06, -2.1934269170742482e-05, -1.4305104514278355e-06, -6.556489552167477e-06, -9.107174992095679e-05, -0.20143087208271027, -0.00045193947153165936, -0.01199709065258503, -0.0004961451631970704, -0.026210801675915718, -1.3589766240329482e-05, -3.8265450712060556e-05, -0.003395389299839735, -0.008286499418318272, -3.0874729418428615e-05, -1.1920858014491387e-05, -0.35037481784820557, -0.10157082974910736, -3.576278118089249e-07, -8.4638240878121e-06, -0.0003505330823827535, -0.3476303219795227, -0.017498046159744263, -0.10795218497514725, -0.002117892960086465], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", "\n"], "logprobs": [-0.15052160620689392, -0.00047017011092975736, -0.02105936035513878, -8.583032467868179e-06, -2.932505594799295e-05, -0.0014248467050492764, -0.004821578972041607, -1.7404405298293568e-05, -7.271740287251305e-06, -0.05024602264165878, -0.06713125109672546, -2.3841855067985307e-07, -5.722029527532868e-06, -0.00022825974156148732, -0.3684627115726471, -0.015968767926096916, -1.0482819080352783], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0014729375252500176, -4.291525328881107e-06, -0.00012289722508285195, -4.017272294731811e-05, -2.861018856492592e-06, -0.001046229270286858, -0.05881684273481369, -1.7881377516459906e-06, -0.0001641377166379243, -5.447716102935374e-05, -0.007131241727620363, -0.00702104065567255, -0.00010334911348763853, -2.264974000354414e-06, -0.0014724613865837455, -0.14999866485595703, -0.008563936688005924], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00011205045302631333, -5.2927523938706145e-05, -0.000835903687402606, -0.01677127182483673, -0.00039915222441777587, -0.0012387705501168966, -0.0018484188476577401, -0.0006490031373687088, -1.7046782886609435e-05, -0.0004599228559527546, -0.0019743014127016068], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0011256556026637554, -1.1920922133867862e-06, -8.34461570775602e-06, -0.00041083001997321844, -0.0007290565990842879, -0.0005968220066279173, -0.0006934384000487626, -0.0012828224571421742, -0.00022718709078617394, -0.0008222059695981443], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.030253881588578224, -4.768370445162873e-07, -2.861018856492592e-06, -0.0001408954558428377, -0.184517502784729, -0.00036113892565481365, -0.007669053506106138, -0.007802722044289112, -0.0017107388703152537, -3.8742269680369645e-05, -2.0861407392658293e-05, -0.42361220717430115, -0.019788233563303947], "finish_reason": "stop"}, {"text": " report.split('\\n')", "tokens": [" report", ".", "split", "('", "\\", "n", "')", "\n"], "logprobs": [-0.026311129331588745, -0.0005708495154976845, -0.03439287096261978, -1.850600004196167, -0.015119473449885845, -0.001077071763575077, -0.0014460355741903186, -0.09317353367805481], "finish_reason": "stop"}, {"text": " [f\"{lines[0]}\\n\"] + [", "tokens": [" [", "f", "\"", "{", "lines", "[", "0", "]}\\", "n", "\"", "]", " +", " [", "\n"], "logprobs": [-1.1852656602859497, -2.3925039768218994, -0.04960676655173302, -0.46321409940719604, -0.8702769875526428, -0.013942698016762733, -0.4468585252761841, -1.1118414402008057, -0.2563968002796173, -0.3010757267475128, -0.09062068909406662, -1.7426621913909912, -0.25224819779396057, -0.7411351203918457], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.0018197420286014676, -0.0009009354980662465, -0.06302399188280106, -0.0022426710929721594], "finish_reason": "stop"}, {"text": " line.split(\" \")", "tokens": [" line", ".", "split", "(", "\"", " \"", ")", "\n"], "logprobs": [-0.22133393585681915, -0.0004593271005433053, -0.4158133566379547, -0.5003143548965454, -0.062357570976018906, -0.5385248064994812, -0.015482824295759201, -0.008169449865818024], "finish_reason": "stop"}, {"text": " not parts:  # Skip empty lines", "tokens": [" not", " parts", ":", "  ", "#", " Skip", " empty", " lines", "\n"], "logprobs": [-2.967839479446411, -0.05513662099838257, -0.7465167045593262, -2.125950336456299, -0.0011628062929958105, -1.3282004594802856, -0.17338800430297852, -0.03010687045753002, -0.03423656150698662], "finish_reason": "stop"}, {"text": " f\"class {parts[2].strip()} {parts[0]} {parts[1]} {parts[3]}\"", "tokens": [" f", "\"", "class", " {", "parts", "[", "2", "]", ".", "strip", "()}", " {", "parts", "[", "0", "]}", " {", "parts", "[", "1", "]}", " {", "parts", "[", "3", "]}", "\"", "\n"], "logprobs": [-0.6434823274612427, -0.05584710091352463, -1.473138451576233, -0.01761646941304207, -0.013413543812930584, -0.018287034705281258, -3.2729806900024414, -0.42207857966423035, -0.7924399375915527, -0.11894520372152328, -1.7610828876495361, -1.3058867454528809, -0.038900937885046005, -0.005892050452530384, -1.4531655311584473, -0.1783321648836136, -0.15464016795158386, -0.0043597412295639515, -0.0008935510995797813, -0.11780624091625214, -0.023872675374150276, -0.06504984945058823, -0.002892003860324621, -0.0033778061624616385, -0.6953301429748535, -0.09227953851222992, -0.5192879438400269, -0.051007334142923355], "finish_reason": "stop"}, {"text": " len(parts) >= 9:  # All metrics", "tokens": [" len", "(", "parts", ")", " >=", " ", "9", ":", "  ", "#", " All", " metrics", "\n"], "logprobs": [-0.04874425008893013, -7.748573807475623e-06, -0.0004401430196594447, -0.00021514961554203182, -2.56084942817688, -0.0014302035560831428, -2.8987650871276855, -0.11939344555139542, -0.04507206007838249, -3.373566141817719e-05, -3.1514554023742676, -0.5937963128089905, -0.3142778277397156], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.012494384311139584, -0.0007332258974201977, -0.1296389102935791, -0.0019205235876142979, -0.001190430368296802, -0.020735979080200195, -0.0299246683716774, -0.03005053661763668, -0.08029129356145859, -0.03529834374785423, -0.018582891672849655, -0.006022283341735601, -0.014017462730407715, -0.003927851561456919, -0.010006737895309925, -0.009774561040103436, -0.052717212587594986, -0.1697479635477066, -0.013469177298247814, -0.0002449450839776546, -8.689979586051777e-05, -0.00381112121976912, -0.0031980343628674746, -0.0007064230740070343, -0.0026556721422821283, -0.015572966076433659, -0.012899290770292282, -0.00032491172896698117, -0.000387831823900342, -0.0034181997179985046, -0.04972496256232262, -0.003636416047811508, -0.011686318553984165, -0.021449029445648193, -0.033291153609752655, -0.00226788641884923], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.23521006107330322, -0.2220577746629715], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00016068121476564556, -0.00012373158824630082, -0.004278909880667925, -1.5497195136049413e-06, -1.2159273865108844e-05, -5.960446742392378e-06, -0.03807366266846657, -0.0025007424410432577], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.010413832031190395, -0.005115515552461147, -0.0008792586741037667, -0.00037889453233219683, -0.00020919041708111763, -4.410646579344757e-05, -0.000947622349485755, -0.0028822568710893393, -1.0609570381348021e-05, -1.7046782886609435e-05, -9.536738616588991e-07, -0.002414052141830325, -0.01882169023156166], "finish_reason": "stop"}, {"text": " formatted_report<|endoftext|>def task_func(csv_file_path, target_column, test_size=0.2, n_estimators=100):", "tokens": [" formatted", "_", "report", "<", "|", "end", "of", "text", "|>", "def", " task", "_", "func", "(", "csv", "_", "file", "_", "path", ",", " target", "_", "column", ",", " test", "_", "size", "=", "0", ".", "2", ",", " n", "_", "estim", "ators", "=", "1", "0", "0", "):", "\n"], "logprobs": [-0.01667642965912819, -1.5735502529423684e-05, -0.00011073929636040702, -1.1272767782211304, -1.4305104514278355e-06, -1.4305104514278355e-06, -0.00015424491721205413, -7.128461584215984e-05, -0.14279115200042725, -2.927220582962036, -0.9750315546989441, -0.03250560909509659, -0.05413082614541054, -0.08033738285303116, -0.6407641172409058, -0.0033875482622534037, -0.04047582671046257, -0.038489218801259995, -0.0044113704934716225, -0.20782922208309174, -0.3483169376850128, -0.008505310863256454, -0.0344267338514328, -2.5465455055236816, -0.942641019821167, -0.0009400001727044582, -0.04942059516906738, -0.9207387566566467, -0.03209783136844635, -0.010426809079945087, -0.05433114245533943, -0.47489672899246216, -0.44708284735679626, -0.00409490754827857, -0.020248375833034515, -0.0004539651272352785, -0.002491467399522662, -0.04943954199552536, -0.0022690759506076574, -0.017314352095127106, -0.1354324221611023, -0.003928445279598236], "finish_reason": "stop"}], "metrics": {"energy": 545.5655667781825, "energy_per_token": 1.528194864924881, "time": 22.892603, "time_per_token": 0.06412493837535015}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -0.2547481656074524, -0.017102263867855072], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -0.21264879405498505, -0.01142471469938755, -0.002662686863914132, -0.004421933554112911], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column not found in data file: {target_column}\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " not", " found", " in", " data", " file", ":", " {", "target", "_", "column", "}\"", ")", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -0.0667305514216423, -0.4145618677139282, -0.07176276296377182, -1.0824946165084839, -0.06585410982370377, -1.4966814517974854, -0.01866842620074749, -0.132486030459404, -3.6184327602386475, -2.666043281555176, -0.6861157417297363, -0.09046933799982071, -0.25739941000938416, -7.60526381782256e-05, -0.0009066523634828627, -0.2446863204240799, -0.00032217081752605736, -0.0029217195697128773], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column])", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "])", "\n"], "logprobs": [-0.004214216023683548, -0.014537486247718334, -0.06773646175861359, -0.13236375153064728, -0.6303597688674927, -0.6138852834701538, -0.011823338456451893, -4.172316494077677e-06, -1.4781842764932662e-05, -0.12279936671257019, -0.04932471364736557], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.008703630417585373, -0.04844491928815842, -0.000686767278239131, -8.106198947643861e-06, -8.344646857949556e-07, -0.00026592056383378804, -0.0508439727127552], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.0013858010061085224, -5.352353764465079e-05, -0.005182878579944372, -0.0012755600037053227, -0.0020247451029717922, -8.606540359323844e-05, -0.0004334702098276466, -6.5205356804654e-05, -0.0015245969407260418, -2.5629668016335927e-05, -0.00023672162205912173, -0.0012677022023126483, -0.017665429040789604, -1.4305104514278355e-06, -2.0503786799963564e-05, -1.7881377516459906e-06, -5.602820692729438e-06, -0.00010668662434909493, -1.6619495153427124], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42, shuffle=True", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ",", " shuffle", "=", "True", "\n"], "logprobs": [-0.15055759251117706, -0.00048232366680167615, -0.021765880286693573, -1.5139465176616795e-05, -2.90866428258596e-05, -0.0017830915749073029, -0.004513077903538942, -1.490105023549404e-05, -5.125986263010418e-06, -0.04695943370461464, -0.06977871060371399, -3.576278118089249e-07, -5.8412379075889476e-06, -0.0002087136817863211, -0.3200867474079132, -0.016750873997807503, -1.2686814069747925, -0.8265138268470764, -0.0003965306677855551, -0.025393759831786156, -0.895264744758606], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0015279296785593033, -3.4570634852570947e-06, -0.00011300401820335537, -5.2689116273541003e-05, -2.50339189733495e-06, -0.0011549476766958833, -0.06453455239534378, -1.9073468138230965e-06, -0.00016389934171456844, -5.2927523938706145e-05, -0.006610194221138954, -0.007413614075630903, -0.00011336160969221964, -2.622600959512056e-06, -0.0017321596387773752, -0.1357986032962799, -0.007642199285328388], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00013028726971242577, -4.970903682988137e-05, -0.0009083197801373899, -0.016796475276350975, -0.0003997480380348861, -0.0015382850542664528, -0.0016678959364071488, -0.0006947487709112465, -1.6212332411669195e-05, -0.0004532501916401088, -0.0018786415457725525], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0011975744273513556, -1.5497195136049413e-06, -6.556489552167477e-06, -0.0003798478574026376, -0.0008765193051658571, -0.0004651656490750611, -0.0006338732782751322, -0.0015648273983970284, -0.00021991695393808186, -0.0008106521563604474], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred, output_dict=True)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ",", " output", "_", "dict", "=", "True", ")", "\n"], "logprobs": [-0.03180594742298126, -4.768370445162873e-07, -2.861018856492592e-06, -0.00014578233822248876, -0.18081076443195343, -0.0003175231395289302, -0.008375637233257294, -0.007563288789242506, -0.0016355245606973767, -3.266281055402942e-05, -2.2411095415009186e-05, -1.0912021398544312, -0.9403297305107117, -8.702239938429557e-06, -0.08682649582624435, -0.0005398723296821117, -0.004295171704143286, -0.01586352474987507, -0.004003130830824375], "finish_reason": "stop"}, {"text": " report.split('\\n')", "tokens": [" report", ".", "split", "('", "\\", "n", "')", "\n"], "logprobs": [-0.026805998757481575, -0.00044824567157775164, -0.03595796599984169, -2.0584301948547363, -0.015069333836436272, -0.001122440560720861, -0.0012553200358524919, -0.087579146027565], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.42220184206962585, -0.002958328230306506], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.0018828060710802674, -0.0007236960809677839, -0.05625319853425026, -0.0021607165690511465], "finish_reason": "stop"}, {"text": " line.strip().split(\"  \")", "tokens": [" line", ".", "strip", "()", ".", "split", "(", "\"", "  ", "\"", ")", "\n"], "logprobs": [-0.23043444752693176, -0.00031513971043750644, -1.2241401672363281, -0.013970911502838135, -0.00034981805947609246, -0.0167214497923851, -0.6124865412712097, -0.07615399360656738, -0.9400929808616638, -0.009928368031978607, -0.014001358300447464, -0.014813781715929508], "finish_reason": "stop"}, {"text": " len(parts) >= 4:", "tokens": [" len", "(", "parts", ")", " >=", " ", "4", ":", "\n"], "logprobs": [-0.40872952342033386, -3.0040289857424796e-05, -0.0007022537174634635, -0.005205292254686356, -1.2984037399291992, -0.0012769886525347829, -1.5730068683624268, -0.12511791288852692, -0.08939873427152634], "finish_reason": "stop"}, {"text": " parts[0] + \"        \" + parts[1] + \"        \" + parts[2] + \"        \" + parts[3]", "tokens": [" parts", "[", "0", "]", " +", " \"", "        ", "\"", " +", " parts", "[", "1", "]", " +", " \"", "        ", "\"", " +", " parts", "[", "2", "]", " +", " \"", "        ", "\"", " +", " parts", "[", "3", "]", "\n"], "logprobs": [-2.646127700805664, -0.042607128620147705, -0.09021349996328354, -0.029333408921957016, -0.26024600863456726, -0.18765082955360413, -2.930316925048828, -0.015127105638384819, -0.12976205348968506, -1.5890802145004272, -0.010907432064414024, -0.11829206347465515, -0.09113622456789017, -0.1528710573911667, -0.08661531656980515, -2.1985764503479004, -0.0009588173124939203, -0.01421763002872467, -0.07248347997665405, -0.0013546108966693282, -0.055192235857248306, -0.0041090352460742, -0.07591347396373749, -0.037395913153886795, -0.08097434043884277, -0.0004260824352968484, -0.010308947414159775, -0.03709523379802704, -0.009147047996520996, -0.04964340850710869, -0.0062004816718399525, -1.38198721408844], "finish_reason": "stop"}, {"text": " len(parts) == 6:  # Overall metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "6", ":", "  ", "#", " Overall", " metrics", "\n"], "logprobs": [-0.05069179832935333, -8.702239938429557e-06, -0.00044169207103550434, -0.00018010901112575084, -0.1697555035352707, -0.0003541081096045673, -1.3307570219039917, -0.02457069791853428, -0.019595373421907425, -1.6927575416048057e-05, -0.32871824502944946, -0.09399684518575668, -0.03682399168610573], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.00984881166368723, -0.0007524043321609497, -0.14131510257720947, -0.0019359909929335117, -0.0013183006085455418, -0.01664852723479271, -0.031084761023521423, -0.026901161298155785, -0.06870374083518982, -0.03231969103217125, -0.019282745197415352, -0.005869770888239145, -0.014196240343153477, -0.0038425910752266645, -0.011154789477586746, -0.007411011029034853, -0.05070607736706734, -0.18714378774166107, -0.013981961645185947, -0.0003070359816774726, -6.8662193370983e-05, -0.0037010284140706062, -0.0027567262295633554, -0.0007722970913164318, -0.0026965707074850798, -0.014419754967093468, -0.014080467633903027, -0.0002908283786382526, -0.00033790123416110873, -0.0026685125194489956, -0.03191910684108734, -0.0034550277050584555, -0.011312274262309074, -0.021736135706305504, -0.032922450453042984, -0.002492894185706973], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.2347220480442047, -0.23069420456886292], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.0001560327800689265, -0.00013553177996072918, -0.004769021645188332, -1.311301275563892e-06, -8.34461570775602e-06, -8.106198947643861e-06, -0.037840794771909714, -0.0023272354155778885], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.010803896933794022, -0.004848864860832691, -0.0009747759322635829, -0.0003922408213838935, -0.0001728385395836085, -4.660974445869215e-05, -0.0009376181988045573, -0.0022130541037768126, -1.1205610462639015e-05, -1.8954096958623268e-05, -1.0728830375228426e-06, -0.002609897404909134, -0.018116949126124382], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.013061442412436008, -1.811964830267243e-05, -0.0001003691868390888, -0.7800278663635254], "finish_reason": "stop"}], "metrics": {"energy": 452.36407133483874, "energy_per_token": 1.5028706688865074, "time": 20.152515, "time_per_token": 0.06695187707641197}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -0.2547481656074524, -0.017102263867855072], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -0.21264879405498505, -0.01142471469938755, -0.002662686863914132, -0.004421933554112911], "finish_reason": "stop"}, {"text": " ValueError(\"Specified target column not found in the CSV file.\")", "tokens": [" Value", "Error", "(", "\"", "Spec", "ified", " target", " column", " not", " found", " in", " the", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -0.0667305514216423, -1.210198998451233, -2.2173268795013428, -0.0030820509418845177, -0.09676317125558853, -0.39052337408065796, -0.2678508460521698, -0.06576593965291977, -0.14621968567371368, -1.299365758895874, -0.1475357860326767, -0.00021336186910048127, -0.031118620187044144, -0.1728682667016983, -0.03209102153778076, -0.00048530244384892285, -0.004729869309812784], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.004148805979639292, -0.012523227371275425, -0.0718560665845871, -0.142867311835289, -0.8536008596420288, -9.179073458653875e-06, -1.7404405298293568e-05, -0.0004668337933253497, -0.0036041084676980972, -0.007015832234174013, -0.007888710126280785, -0.010072828270494938, -0.062303584069013596], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.006270259618759155, -0.058825720101594925, -0.0004681444843299687, -8.106198947643861e-06, -9.536738616588991e-07, -0.0003002431185450405, -0.040449269115924835], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.001585894264280796, -4.088794958079234e-05, -0.004371016751974821, -0.0013903246726840734, -0.0028715587686747313, -7.915183232398704e-05, -0.0006114759016782045, -7.354942499659956e-05, -0.0015776818618178368, -3.1470757676288486e-05, -0.00020597243565134704, -0.0013313962845131755, -0.015368960797786713, -1.0728830375228426e-06, -2.1457441107486375e-05, -2.9802276912960224e-06, -5.960446742392378e-06, -0.00010489867418073118, -0.2112123817205429, -0.0004776767164003104, -0.01303590927273035, -0.00039081089198589325, -0.02248961851000786, -1.3947389561508317e-05, -3.290122185717337e-05, -0.003925120458006859, -0.006645483896136284, -3.755022044060752e-05, -1.0251946150674485e-05, -0.36608967185020447, -0.12843438982963562, -5.960462772236497e-07, -8.22540732769994e-06, -0.0004015354788862169, -0.34057557582855225, -0.017767436802387238, -0.13300517201423645, -0.0024876620154827833], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42)", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.15097784996032715, -0.0005153281381353736, -0.020488644018769264, -1.1920858014491387e-05, -2.7417760065873154e-05, -0.0016482589999213815, -0.004365557339042425, -1.3351351299206726e-05, -8.583032467868179e-06, -0.05099906772375107, -0.08782725036144257, -3.576278118089249e-07, -7.510157047363464e-06, -0.00020561488054227084, -0.30595529079437256, -0.016292519867420197, -0.9288781881332397, -0.003612422849982977], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0013217531377449632, -3.814689989667386e-06, -0.00012420836719684303, -4.51792984677013e-05, -2.7418097943154862e-06, -0.0014724613865837455, -0.06397190690040588, -1.4305104514278355e-06, -0.000163541772053577, -5.757642793469131e-05, -0.0056834532879292965, -0.0066117336973547935, -0.00012694983161054552, -2.3841830625315197e-06, -0.0014188947388902307, -0.11790890991687775, -0.00827384926378727], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00011598391574807465, -5.4238757002167404e-05, -0.0008248264202848077, -0.013168509118258953, -0.0004301338049117476, -0.0014830554137006402, -0.001501148217357695, -0.0008870004676282406, -1.847726889536716e-05, -0.000458254711702466, -0.0019947646651417017], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0013565156841650605, -1.1920922133867862e-06, -8.34461570775602e-06, -0.0004096384218428284, -0.000757645582780242, -0.0006519814487546682, -0.0005539313424378633, -0.0016518294578418136, -0.00021789084712509066, -0.0008783058729022741], "finish_reason": "stop"}, {"text": " classification_report(", "tokens": [" classification", "_", "report", "(", "\n"], "logprobs": [-0.028725583106279373, -4.768370445162873e-07, -2.9802276912960224e-06, -0.00012337400403339416, -2.0839672088623047], "finish_reason": "stop"}, {"text": " report.split('\\n')", "tokens": [" report", ".", "split", "('", "\\", "n", "')", "\n"], "logprobs": [-0.02862526662647724, -0.0004320403386373073, -0.037641510367393494, -2.0269711017608643, -0.01894252933561802, -0.0013384203193709254, -0.0012354368809610605, -0.10735563933849335], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.4641197919845581, -0.0033993099350482225], "finish_reason": "stop"}, {"text": " in lines[1:]:", "tokens": [" in", " lines", "[", "1", ":", "]:", "\n"], "logprobs": [-0.0016111262375488877, -0.0007616956136189401, -2.7596518993377686, -0.38860416412353516, -0.8080646991729736, -0.1538185030221939, -0.21098439395427704], "finish_reason": "stop"}, {"text": " line.split(\"  \")", "tokens": [" line", ".", "split", "(", "\"", "  ", "\"", ")", "\n"], "logprobs": [-0.23723165690898895, -0.00043644916149787605, -0.42858409881591797, -0.5293411016464233, -0.07687531411647797, -1.2171390056610107, -0.010854722931981087, -0.013052618131041527, -0.016574662178754807], "finish_reason": "stop"}, {"text": " parts[0] in [\"precision\", \"recall\", \"f1-score\"]:", "tokens": [" parts", "[", "0", "]", " in", " [", "\"", "precision", "\"", ",", " \"", "re", "call", "\"", ",", " \"", "f", "1", "-", "score", "\"", "]:", "\n"], "logprobs": [-1.3596844673156738, -0.30953702330589294, -0.07771611958742142, -0.010023260489106178, -1.8495151996612549, -0.2256406843662262, -0.06331339478492737, -0.20865143835544586, -0.16004422307014465, -0.0008415018673986197, -0.002239816589280963, -0.0510808527469635, -0.00028165188268758357, -0.000535821367520839, -0.01200404018163681, -0.001261034864000976, -0.09810597449541092, -0.07279632240533829, -0.04690711200237274, -0.0008806879632174969, -0.008100631646811962, -0.7819872498512268, -0.008269238285720348], "finish_reason": "stop"}, {"text": " f\"class {parts[0].strip()}        {parts[1]} {parts[2]} {parts[3]} {parts[4]}\"", "tokens": [" f", "\"", "class", " {", "parts", "[", "0", "]", ".", "strip", "()}", "        ", "{", "parts", "[", "1", "]}", " {", "parts", "[", "2", "]}", " {", "parts", "[", "3", "]}", " {", "parts", "[", "4", "]}", "\"", "\n"], "logprobs": [-0.5950601100921631, -0.05732237920165062, -1.5343259572982788, -0.01940458081662655, -0.013950456865131855, -0.019847368821501732, -0.273640513420105, -0.7181212902069092, -0.9106078743934631, -0.11344438046216965, -1.638662338256836, -2.248427391052246, -0.5058255791664124, -0.06894788891077042, -0.005803639069199562, -0.10142984986305237, -0.2620672583580017, -0.7483336925506592, -0.0008025524439290166, -0.00043764073052443564, -0.0639634057879448, -0.009534655138850212, -0.03986912593245506, -0.00026425207033753395, -0.000296310376143083, -0.00424294313415885, -0.03371734917163849, -0.841365396976471, -0.15931491553783417, -0.03903978317975998, -0.00975154060870409, -0.18143607676029205, -0.014110323041677475, -0.015685515478253365], "finish_reason": "stop"}, {"text": " len(parts) == 6:  # Overall metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "6", ":", "  ", "#", " Overall", " metrics", "\n"], "logprobs": [-0.04992105811834335, -7.867782187531702e-06, -0.0003778220561798662, -0.000192504478036426, -0.15640106797218323, -0.0003104920033365488, -1.300511360168457, -0.022792741656303406, -0.017427759245038033, -1.2993727978027891e-05, -0.3477673828601837, -0.08482055366039276, -0.035741399973630905], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.01190014649182558, -0.0006404255982488394, -0.12514662742614746, -0.0017462018877267838, -0.0010550415609031916, -0.0182304996997118, -0.03540040925145149, -0.027646472677588463, -0.07961449027061462, -0.032988544553518295, -0.02028622478246689, -0.005580797791481018, -0.019880909472703934, -0.0037015036214143038, -0.011407743208110332, -0.00843226071447134, -0.05443963780999184, -0.16926175355911255, -0.012556072324514389, -0.00024589852546341717, -0.00013624693383462727, -0.004026639740914106, -0.0022046088706701994, -0.0007611000328324735, -0.00250252615660429, -0.014997114427387714, -0.014697727747261524, -0.00030620177858509123, -0.00047803416964598, -0.00323653407394886, -0.041877344250679016, -0.0032553081400692463, -0.011696215718984604, -0.022429240867495537, -0.023687005043029785, -0.0021570289973169565], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.2827064096927643, -0.2379126101732254], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00013004888023715466, -0.00010549465514486656, -0.005766778718680143, -1.5497195136049413e-06, -9.65590606938349e-06, -8.22540732769994e-06, -0.03326140344142914, -0.0030004028230905533], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.010170421563088894, -0.0057505411095917225, -0.001116367639042437, -0.0004413345886860043, -0.00018356545479036868, -3.6000557884108275e-05, -0.0010118131758645177, -0.0026442583184689283, -1.0371154530730564e-05, -2.0265373677830212e-05, -8.344646857949556e-07, -0.002478981390595436, -0.01600208505988121], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.014739076606929302, -1.883488948806189e-05, -7.223821739898995e-05, -0.891187310218811], "finish_reason": "stop"}], "metrics": {"energy": 473.1730368919373, "energy_per_token": 1.478665740287304, "time": 21.18166, "time_per_token": 0.0661926875}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -0.2547481656074524, -0.017102263867855072], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -0.21264879405498505, -0.01142471469938755, -0.002662686863914132, -0.004421933554112911], "finish_reason": "stop"}, {"text": " ValueError(f\"'{target_column}' is not a column in the CSV file.\")", "tokens": [" Value", "Error", "(", "f", "\"", "'{", "target", "_", "column", "}'", " is", " not", " a", " column", " in", " the", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -0.0667305514216423, -0.4145618677139282, -0.07176276296377182, -2.9827537536621094, -0.006045863498002291, -1.8954096958623268e-05, -0.00034290633630007505, -0.00494803674519062, -0.4554746448993683, -0.014186720363795757, -0.4850035607814789, -0.8047657608985901, -0.2044467329978943, -0.1097337156534195, -0.22397471964359283, -8.749579137656838e-05, -0.030729003250598907, -0.2878722548484802, -0.0745253637433052, -0.0005088941543363035, -0.004346566740423441], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.004741733893752098, -0.012872458435595036, -0.07475404441356659, -0.13872157037258148, -0.8060793876647949, -1.0609570381348021e-05, -1.764281842042692e-05, -0.00037901371251791716, -0.0036270327400416136, -0.006552283186465502, -0.006922074127942324, -0.008921405300498009, -0.06232184171676636], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.007619721814990044, -0.0491887666285038, -0.0006827168981544673, -7.033323527139146e-06, -8.344646857949556e-07, -0.00027938754647038877, -0.04172014445066452], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ")", "\n"], "logprobs": [-0.001388300908729434, -3.7431014789035544e-05, -0.004055965691804886, -0.0023394853342324495, -0.00216166814789176, -6.878139538457617e-05, -0.000529149197973311, -5.8887653722194955e-05, -0.0018789985915645957, -2.8490614567999728e-05, -0.00021753329201601446, -0.0011485177092254162, -0.01338790263980627, -1.311301275563892e-06, -2.2649508537142538e-05, -1.7881377516459906e-06, -5.8412379075889476e-06, -9.369411418447271e-05, -0.2225184142589569, -0.00042358008795417845, -0.009633717127144337, -0.00045134371612221, -0.02333943359553814, -1.2516897186287679e-05, -3.9219088648678735e-05, -0.0037073232233524323, -0.010679356753826141, -3.397406908334233e-05, -1.07287787614041e-05, -1.320629596710205, -0.002866922877728939], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", "\n"], "logprobs": [-0.16487814486026764, -0.0004469349514693022, -0.02244066260755062, -1.2755313036905136e-05, -2.8967437174287625e-05, -0.0015069806249812245, -0.004845780320465565, -1.4424220353248529e-05, -7.390948667307384e-06, -0.04599547013640404, -0.06834909319877625, -2.3841855067985307e-07, -6.437280717364047e-06, -0.0001932195882545784, -0.306262344121933, -0.0157754048705101, -0.972894012928009], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0014337747124955058, -4.410734163684538e-06, -0.00012587709352374077, -3.9934315282152966e-05, -2.3841830625315197e-06, -0.0012369846226647496, -0.051987532526254654, -1.9073468138230965e-06, -0.00017045476124621928, -5.173549288883805e-05, -0.006233653519302607, -0.00679219514131546, -7.152301259338856e-05, -2.50339189733495e-06, -0.001644093543291092, -0.1640283316373825, -0.00817299634218216], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.0001292145170737058, -5.304672595229931e-05, -0.0008643704932183027, -0.012837623246014118, -0.00044741155579686165, -0.0014068715972825885, -0.001798085169866681, -0.0006719953380525112, -1.9073304429184645e-05, -0.0004551566671580076, -0.0017816636245697737], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0013809201773256063, -1.1920922133867862e-06, -6.794906312279636e-06, -0.0004300146538298577, -0.0007653883076272905, -0.0005670370301231742, -0.0005942009738646448, -0.0014113951474428177, -0.00023958197562023997, -0.0009577454766258597], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.029779113829135895, -4.768370445162873e-07, -2.861018856492592e-06, -0.00012206286191940308, -0.20717844367027283, -0.0002829628065228462, -0.009172679856419563, -0.007587187457829714, -0.0018086755881085992, -3.218599158572033e-05, -1.6212332411669195e-05, -0.4536961019039154, -0.018981480970978737], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.028360292315483093, -0.000527123745996505, -0.0321989543735981, -0.48359498381614685, -0.0017860665684565902, -0.028324022889137268, -0.001513408264145255, -0.0017471539322286844, -0.04634936898946762, -0.03814997151494026], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.44906970858573914, -0.0026769537944346666], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002195806708186865, -0.0009279712685383856, -0.05212502181529999, -0.002520838286727667], "finish_reason": "stop"}, {"text": " line.split(\" \")", "tokens": [" line", ".", "split", "(", "\"", " \"", ")", "\n"], "logprobs": [-0.18557578325271606, -0.00030727434204891324, -0.4141598343849182, -0.5263645648956299, -0.07462472468614578, -0.5209899544715881, -0.016827421262860298, -0.00865198578685522], "finish_reason": "stop"}, {"text": " len(parts) >= 4:", "tokens": [" len", "(", "parts", ")", " >=", " ", "4", ":", "\n"], "logprobs": [-0.4037275016307831, -2.8609820219571702e-05, -0.0008898589294403791, -0.005927128717303276, -1.1879692077636719, -0.0013062763027846813, -1.562352180480957, -0.13839340209960938, -0.0944596603512764], "finish_reason": "stop"}, {"text": " \" \".join(parts[:-1]) + \" \" + parts[-1]", "tokens": [" \"", " \"", ".", "join", "(", "parts", "[:", "-", "1", "])", " +", " \"", " \"", " +", " parts", "[-", "1", "]", "\n"], "logprobs": [-1.233922004699707, -0.5089711546897888, -0.0016144587425515056, -0.000560245884116739, -0.6041482090950012, -0.08763004094362259, -0.3766484260559082, -1.3926033973693848, -0.2588005065917969, -0.09392467886209488, -0.5314562916755676, -0.32579997181892395, -0.5854687094688416, -0.12749026715755463, -0.6088976263999939, -0.01902756467461586, -0.04332507774233818, -0.012546772137284279, -0.3150934875011444], "finish_reason": "stop"}, {"text": " len(parts) == 3:  # Overall metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "3", ":", "  ", "#", " Overall", " metrics", "\n"], "logprobs": [-0.048082444816827774, -9.298280929215252e-06, -0.0005171154043637216, -0.00019786784832831472, -0.14310641586780548, -0.0002864189154934138, -2.148167610168457, -0.035408925265073776, -0.01981978863477707, -8.4638240878121e-06, -0.45193201303482056, -0.080939382314682, -0.037777431309223175], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.011320407502353191, -0.000717025191988796, -0.14927400648593903, -0.0020051151514053345, -0.0009765623253770173, -0.015745481476187706, -0.0329158753156662, -0.0289766788482666, -0.06768309324979782, -0.032496724277734756, -0.017899878323078156, -0.005164733622223139, -0.011827933602035046, -0.00391799584031105, -0.010380326770246029, -0.007886817678809166, -0.05205192416906357, -0.17749230563640594, -0.011415050365030766, -0.0003010773507412523, -7.879423355916515e-05, -0.003947087563574314, -0.0028322129510343075, -0.0007484733941964805, -0.0026082326658070087, -0.013881095685064793, -0.014891182072460651, -0.00032109825406223536, -0.00033766290289349854, -0.003066007047891617, -0.03000345267355442, -0.002901631873100996, -0.010552087798714638, -0.022059310227632523, -0.026258064433932304, -0.0020615055691450834], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.18897365033626556, -0.22936831414699554], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.0001551984460093081, -0.00011586471373448148, -0.004781716503202915, -1.4305104514278355e-06, -1.0371154530730564e-05, -8.940656698541716e-06, -0.034616295248270035, -0.002552586607635021], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.009448926895856857, -0.004028302151709795, -0.0009585791267454624, -0.0003859252028632909, -0.00019429226813372225, -4.303362584323622e-05, -0.0007558587822131813, -0.0019414640264585614, -1.3232143828645349e-05, -1.847726889536716e-05, -1.1920922133867862e-06, -0.001973706530407071, -0.0220925435423851], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.014749296009540558, -1.9788545614574105e-05, -7.676783570786938e-05, -0.8335684537887573], "finish_reason": "stop"}], "metrics": {"energy": 429.75466090774563, "energy_per_token": 1.4667394570230226, "time": 19.7228, "time_per_token": 0.06731331058020477}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -0.2547481656074524, -0.017102263867855072], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -0.21264879405498505, -0.01142471469938755, -0.002662686863914132, -0.004421933554112911], "finish_reason": "stop"}, {"text": " ValueError('Target column not found in dataframe. Please check your input.')", "tokens": [" Value", "Error", "('", "Target", " column", " not", " found", " in", " data", "frame", ".", " Please", " check", " your", " input", ".", "')", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -2.782428741455078, -1.0832825899124146, -0.07192207872867584, -0.07060106098651886, -0.02119031734764576, -0.3546411395072937, -3.1415748596191406, -1.9599733352661133, -0.8986207246780396, -2.974963426589966, -1.129951000213623, -2.254246234893799, -1.6659324169158936, -0.5472205877304077, -0.017519835382699966, -0.00144710682798177], "finish_reason": "stop"}, {"text": " df.drop(columns=target_column)", "tokens": [" df", ".", "drop", "(", "columns", "=", "target", "_", "column", ")", "\n"], "logprobs": [-0.004815409891307354, -0.01561944279819727, -0.06707451492547989, -0.10655311495065689, -0.6239643096923828, -0.9044222235679626, -0.004824070259928703, -7.199982064776123e-05, -2.2053474822314456e-05, -0.38780805468559265, -0.046786077320575714], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.006851868238300085, -0.049212824553251266, -0.00067473528906703, -6.556489552167477e-06, -8.344646857949556e-07, -0.0002559096028562635, -0.052554577589035034], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.001450320822186768, -4.649054244509898e-05, -0.003903271397575736, -0.001576372655108571, -0.0023737368173897266, -9.917721035890281e-05, -0.0003805628512054682, -6.282132380874828e-05, -0.002049847040325403, -3.015949550899677e-05, -0.00022349244682118297, -0.0011219641892239451, -0.012605397030711174, -1.1920922133867862e-06, -2.396077979938127e-05, -1.5497195136049413e-06, -6.198863957251888e-06, -9.035655966727063e-05, -0.17493709921836853, -0.0005110388156026602, -0.010337027721107006, -0.00040987672400660813, -0.02386382780969143, -1.2278481335670222e-05, -3.504691630951129e-05, -0.0035283234901726246, -0.008631185628473759, -3.099393507000059e-05, -1.2159273865108844e-05, -0.3527195453643799, -0.1030021607875824, -3.576278118089249e-07, -7.390948667307384e-06, -0.0003741279651876539, -0.33714553713798523, -0.01860407181084156, -0.12102820724248886, -0.002372785471379757], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=0)", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.14149227738380432, -0.0004800597671419382, -0.024472754448652267, -9.298280929215252e-06, -2.5152843591058627e-05, -0.0017958242679014802, -0.0048990449868142605, -1.7046782886609435e-05, -6.556489552167477e-06, -0.047182679176330566, -0.08315081149339676, -2.3841855067985307e-07, -5.483612312673358e-06, -0.00016532962035853416, -2.2317118644714355, -0.6627464890480042, -0.002713095862418413], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0015851801726967096, -2.622600959512056e-06, -0.00011884459672728553, -3.0874729418428615e-05, -2.622600959512056e-06, -0.0011082704877480865, -0.0736970379948616, -1.6689286894688848e-06, -0.00014375607133843005, -5.817244164063595e-05, -0.007151836529374123, -0.00733279250562191, -0.00011526874004630372, -2.50339189733495e-06, -0.0016613503685221076, -0.16102235019207, -0.00946049951016903], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00014101465058047324, -4.410646579344757e-05, -0.0006711614551022649, -0.01411067508161068, -0.00038747431244701147, -0.0013266343157738447, -0.0018685277318581939, -0.0008556757238693535, -2.1219027985353023e-05, -0.00048137042904272676, -0.0017939202953130007], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0014497257070615888, -1.311301275563892e-06, -7.748573807475623e-06, -0.0004301338049117476, -0.0007173825288191438, -0.0007975496700964868, -0.0005403488758020103, -0.0020929116290062666, -0.00028713393840007484, -0.0010432521812617779], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.028778981417417526, -5.960462772236497e-07, -2.7418097943154862e-06, -0.00011717586312443018, -0.17350587248802185, -0.0003713871701620519, -0.009327642619609833, -0.007770903408527374, -0.0016364767216145992, -4.076874756719917e-05, -1.6569954823353328e-05, -0.39827731251716614, -0.01718909665942192], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.02601383440196514, -0.0005144941387698054, -0.03975353762507439, -0.48899656534194946, -0.0016196954529732466, -0.032003048807382584, -0.0017807116964831948, -0.0019311128417029977, -0.05005747452378273, -0.0355573445558548], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.431826114654541, -0.002641286002472043], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.001804986852221191, -0.0007929041748866439, -0.04616611823439598, -0.0023771857377141714], "finish_reason": "stop"}, {"text": " line.split(\"  \")", "tokens": [" line", ".", "split", "(", "\"", "  ", "\"", ")", "\n"], "logprobs": [-0.2581603229045868, -0.00040368037298321724, -0.4325619041919708, -0.5184064507484436, -0.06546618789434433, -1.330636978149414, -0.010322515852749348, -0.011994145810604095, -0.015568740665912628], "finish_reason": "stop"}, {"text": " parts[0] == \"precision\":", "tokens": [" parts", "[", "0", "]", " ==", " \"", "precision", "\":", "\n"], "logprobs": [-1.358317255973816, -0.33575910329818726, -0.07450821250677109, -0.00975342933088541, -0.547552764415741, -0.08545838296413422, -0.4749458134174347, -0.047166191041469574, -0.03125866502523422], "finish_reason": "stop"}, {"text": " f\"{parts[0].strip()}\\t{parts[1].strip()}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]", ".", "strip", "()", "}\\", "t", "{", "parts", "[", "1", "]", ".", "strip", "()", "}\"", "\n"], "logprobs": [-0.6883472800254822, -0.058590106666088104, -0.44932401180267334, -0.01093077939003706, -0.02033061347901821, -0.23364822566509247, -1.4194600582122803, -0.9832080602645874, -0.2629185914993286, -0.7541462182998657, -1.5474385023117065, -0.0192758459597826, -0.32147032022476196, -0.10724224150180817, -0.007239537313580513, -0.2824569344520569, -0.9302890300750732, -0.1857047826051712, -0.026523826643824577, -0.2590697407722473, -2.038007974624634, -0.2672828733921051], "finish_reason": "stop"}, {"text": " len(parts) == 4:  # Overall metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "4", ":", "  ", "#", " Overall", " metrics", "\n"], "logprobs": [-0.054382625967264175, -8.34461570775602e-06, -0.0004109491710551083, -0.00019774865359067917, -0.15879380702972412, -0.0003082277253270149, -2.2166385650634766, -0.017432328313589096, -0.011968350037932396, -9.059865078597795e-06, -0.47439074516296387, -0.07029242813587189, -0.04313282296061516], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.010742336511611938, -0.0008681819308549166, -0.1314469575881958, -0.001808556611649692, -0.0013263961300253868, -0.01621006801724434, -0.03712417930364609, -0.03340933471918106, -0.08275230973958969, -0.03180490806698799, -0.018870120868086815, -0.003972972277551889, -0.020529987290501595, -0.003874890971928835, -0.011044559068977833, -0.00910416804254055, -0.0521322637796402, -0.15665152668952942, -0.014932758174836636, -0.0002543602604418993, -0.0001551984460093081, -0.003772762371227145, -0.002673862734809518, -0.0006924853660166264, -0.002538674511015415, -0.015393730252981186, -0.013906842097640038, -0.0002791491860989481, -0.0003524397616274655, -0.0030488932970911264, -0.032816093415021896, -0.003097024979069829, -0.010435067117214203, -0.020226996392011642, -0.02558271586894989, -0.0031571565195918083], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.24141883850097656, -0.20586669445037842], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00013016807497479022, -0.00011753345461329445, -0.005700758658349514, -1.4305104514278355e-06, -1.2993727978027891e-05, -7.152531907195225e-06, -0.03478831797838211, -0.002445447025820613], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.010767810046672821, -0.004908535163849592, -0.0008864049450494349, -0.000448841426987201, -0.00018451895448379219, -4.088794958079234e-05, -0.0010087168775498867, -0.0020638848654925823, -1.2993727978027891e-05, -2.109982233378105e-05, -1.0728830375228426e-06, -0.002601574407890439, -0.02031274139881134], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report"], "logprobs": [-0.017740031704306602, -1.8000440832111053e-05, -8.463501580990851e-05], "finish_reason": "stop"}], "metrics": {"energy": 466.2764785194395, "energy_per_token": 1.5752583733764847, "time": 20.163866, "time_per_token": 0.06812116891891891}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -0.2547481656074524, -0.017102263867855072], "finish_reason": "stop"}, {"text": " not target_column in df.columns:", "tokens": [" not", " target", "_", "column", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-2.5720248222351074, -0.2788430154323578, -3.361645576660521e-05, -0.00024387246230617166, -0.022072836756706238, -0.043172553181648254, -0.2496751993894577, -0.02162403240799904, -0.007302142214030027, -0.008677985519170761], "finish_reason": "stop"}, {"text": " ValueError(f\"'{target_column}' is not in the dataframe columns.\")", "tokens": [" Value", "Error", "(", "f", "\"", "'{", "target", "_", "column", "}'", " is", " not", " in", " the", " data", "frame", " columns", ".", "\"", ")", "\n"], "logprobs": [-0.003356776898726821, -1.966933996300213e-05, -0.06692657619714737, -0.4667329490184784, -0.07706660032272339, -3.0446133613586426, -0.007978001609444618, -1.7046782886609435e-05, -0.00031001531169749796, -0.0045853471383452415, -0.5042068958282471, -0.01597651094198227, -1.7903603315353394, -0.21153554320335388, -2.1326396465301514, -0.5697712898254395, -1.0697307586669922, -0.6627940535545349, -0.10392100363969803, -0.00160624657291919, -0.005766304675489664], "finish_reason": "stop"}, {"text": " df.drop(columns=target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "columns", "=", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.00430704141035676, -0.011461719870567322, -0.05949842929840088, -0.13941708207130432, -0.6673990488052368, -0.8939194083213806, -0.004938310012221336, -6.01988795096986e-05, -2.3841574147809297e-05, -1.2086431980133057, -0.055477261543273926, -0.0034601360093802214, -0.014339027926325798, -0.006365263368934393, -0.055628709495067596], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.006092784460633993, -0.04701243340969086, -0.0005534547381103039, -7.390948667307384e-06, -8.344646857949556e-07, -0.0002787916746456176, -0.039943236857652664], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0015574480639770627, -4.7444173105759546e-05, -0.005201497580856085, -0.0010808822698891163, -0.0023356794845312834, -8.439661905867979e-05, -0.0004101150552742183, -7.807903602952138e-05, -0.001939917216077447, -2.7179348762729205e-05, -0.00022766382608097047, -0.0012176964664831758, -0.014814251102507114, -1.1920922133867862e-06, -2.3483953555114567e-05, -2.3841830625315197e-06, -6.079655122448457e-06, -8.642300235806033e-05, -0.21234209835529327, -0.00039283663500100374, -0.011673122644424438, -0.000520570669323206, -0.023729728534817696, -1.0847986231965479e-05, -4.60137271147687e-05, -0.0038854596205055714, -0.009674567729234695, -3.0278701160568744e-05, -1.0132738680113107e-05, -0.32222938537597656, -0.10728025436401367, -3.576278118089249e-07, -7.271740287251305e-06, -0.0003588747640606016, -0.35391944646835327, -0.018755123019218445, -0.12352480739355087, -0.002416192786768079], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", "\n"], "logprobs": [-0.14391638338565826, -0.0005013877525925636, -0.02244742400944233, -8.940656698541716e-06, -3.075552376685664e-05, -0.0016933638835325837, -0.0059927781112492085, -1.7165990357170813e-05, -5.722029527532868e-06, -0.04498305544257164, -0.08045585453510284, -3.576278118089249e-07, -6.318072337307967e-06, -0.00021455370006151497, -0.34563419222831726, -0.016552502289414406, -1.0938918590545654], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0014873405452817678, -4.291525328881107e-06, -0.00011693747364915907, -3.6954195820726454e-05, -2.622600959512056e-06, -0.0011242267210036516, -0.0628167912364006, -1.6689286894688848e-06, -0.00015424491721205413, -5.793403761344962e-05, -0.006722098216414452, -0.006514266133308411, -7.56950321374461e-05, -2.622600959512056e-06, -0.0019120759097859263, -0.14355728030204773, -0.007946779951453209], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00011050090688513592, -4.7444173105759546e-05, -0.0008904544520191848, -0.015212936326861382, -0.00045718232286162674, -0.001547330990433693, -0.0018617454916238785, -0.0006780709372833371, -1.9907753085135482e-05, -0.0004886387032456696, -0.002040686784312129], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0014834124594926834, -1.1920922133867862e-06, -5.960446742392378e-06, -0.0004378790326882154, -0.0008672290714457631, -0.0007332258974201977, -0.0004916174802929163, -0.0015355474315583706, -0.0002479245886206627, -0.0008948612376116216], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.02674994245171547, -4.768370445162873e-07, -2.7418097943154862e-06, -0.0001248043408850208, -0.15412408113479614, -0.00027843413408845663, -0.0073085324838757515, -0.00896854605525732, -0.0016014858847483993, -3.6238969187252223e-05, -2.4437606043647975e-05, -0.4361744225025177, -0.01809505559504032], "finish_reason": "stop"}, {"text": " report.splitlines()", "tokens": [" report", ".", "split", "lines", "()", "\n"], "logprobs": [-0.022120993584394455, -0.00048160876031033695, -0.03696795180439949, -1.3704198598861694, -0.05859033018350601, -0.03558472543954849], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.44683048129081726, -0.002726292237639427], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.0019293281948193908, -0.001001690630801022, -0.055997252464294434, -0.002005472080782056], "finish_reason": "stop"}, {"text": " line.split(\" \")", "tokens": [" line", ".", "split", "(", "\"", " \"", ")", "\n"], "logprobs": [-0.257433146238327, -0.00033420699764974415, -0.4279819130897522, -0.43318605422973633, -0.07671689242124557, -0.46822038292884827, -0.01387086696922779, -0.008488763123750687], "finish_reason": "stop"}, {"text": " parts[0].lower() != \"accuracy\":", "tokens": [" parts", "[", "0", "]", ".", "lower", "()", " ", "!", "=", " \"", "accuracy", "\":", "\n"], "logprobs": [-1.496029257774353, -0.3612801134586334, -0.07587425410747528, -0.00920350942760706, -1.5927441120147705, -1.449062705039978, -0.0004262015863787383, -3.030975341796875, -4.136476854910143e-05, -9.65590606938349e-06, -0.06403016299009323, -0.4843570291996002, -0.12017780542373657, -0.04181298241019249], "finish_reason": "stop"}, {"text": " \" \".join([parts[0], parts[1], \" \".join(parts[2:]), parts[4]])", "tokens": [" \"", " \"", ".", "join", "([", "parts", "[", "0", "]", ",", " parts", "[", "1", "]", ",", " \"", " \"", ".", "join", "(", "parts", "[", "2", ":", "])", ",", " parts", "[", "4", "]]", ")", "\n"], "logprobs": [-1.1786346435546875, -0.5990308523178101, -0.0026793316937983036, -0.0006494796834886074, -0.7241275310516357, -0.22836707532405853, -0.013526689261198044, -0.12453761696815491, -0.23831039667129517, -0.06566234678030014, -0.3409942388534546, -0.028632448986172676, -0.6069872379302979, -0.14959123730659485, -0.06827527284622192, -2.359710931777954, -0.4625628590583801, -0.07164669781923294, -0.0006912940880283713, -0.14714980125427246, -0.024402258917689323, -0.0025628122966736555, -0.06011298671364784, -0.4719364643096924, -0.5384504199028015, -0.0216217003762722, -0.44035547971725464, -0.13532736897468567, -0.9985190629959106, -0.06453332304954529, -0.0008844992844387889, -0.029578102752566338], "finish_reason": "stop"}, {"text": " len(parts) == 3:  # Overall metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "3", ":", "  ", "#", " Overall", " metrics", "\n"], "logprobs": [-0.053285203874111176, -8.34461570775602e-06, -0.00044371772673912346, -0.00017188502533826977, -0.15574470162391663, -0.0003164505760651082, -2.2267398834228516, -0.032775603234767914, -0.018261635676026344, -8.34461570775602e-06, -0.4768606126308441, -0.10315614938735962, -0.04294681176543236], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.011064602062106133, -0.0007842087652534246, -0.12425550818443298, -0.0016051754355430603, -0.0012015035608783364, -0.017979733645915985, -0.03544240817427635, -0.033299338072538376, -0.07670485973358154, -0.03381727263331413, -0.016385873779654503, -0.005689616780728102, -0.016111770644783974, -0.004369355272501707, -0.010484496131539345, -0.009512219578027725, -0.05671781674027443, -0.18014605343341827, -0.01270462665706873, -0.00018940561858471483, -5.972207145532593e-05, -0.004123044200241566, -0.0035274920519441366, -0.0008207766804844141, -0.002814976265653968, -0.015299580059945583, -0.011868222616612911, -0.0002733095607254654, -0.0003960540343541652, -0.002952028764411807, -0.03774161636829376, -0.003339549293741584, -0.011149013414978981, -0.021501298993825912, -0.034194860607385635, -0.002101714489981532], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.19178126752376556, -0.23722460865974426], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00014804698002990335, -0.00013815402053296566, -0.0039245267398655415, -1.7881377516459906e-06, -1.0609570381348021e-05, -7.271740287251305e-06, -0.03366905450820923, -0.002512514591217041], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.010626517236232758, -0.00462343730032444, -0.0011335145682096481, -0.00037925204378552735, -0.00019774865359067917, -4.2914423829643056e-05, -0.0008100565755739808, -0.0019225463038310409, -1.2397689715726301e-05, -1.8596476365928538e-05, -8.344646857949556e-07, -0.0021830792538821697, -0.020640812814235687], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.014561218209564686, -1.8954096958623268e-05, -7.974783511599526e-05, -0.8332692384719849], "finish_reason": "stop"}], "metrics": {"energy": 493.48246718406654, "energy_per_token": 1.5716002139619953, "time": 20.993408, "time_per_token": 0.06685798726114649}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -0.2547481656074524, -0.017102263867855072], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -0.21264879405498505, -0.01142471469938755, -0.002662686863914132, -0.004421933554112911], "finish_reason": "stop"}, {"text": " ValueError(f\"The specified target_column '{target_column}' is not found in the CSV file.\")", "tokens": [" Value", "Error", "(", "f", "\"", "The", " specified", " target", "_", "column", " '", "{", "target", "_", "column", "}'", " is", " not", " found", " in", " the", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -0.0667305514216423, -0.4145618677139282, -0.07176276296377182, -2.240663528442383, -0.5226381421089172, -0.11755741387605667, -0.7940462827682495, -0.002004520269110799, -0.7401371002197266, -0.0009076051646843553, -0.0007122601964510977, -2.407998726994265e-05, -0.00014685506175737828, -0.0022716925013810396, -0.4549340605735779, -0.019563693553209305, -0.19820889830589294, -0.08980266004800797, -0.06480150669813156, -0.08554746955633163, -8.5588610090781e-05, -0.021726803854107857, -0.11214525997638702, -0.022181741893291473, -0.0011380392825230956, -0.004985757637768984], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.004214216023683548, -0.014537486247718334, -0.06773646175861359, -0.13236375153064728, -0.7748643159866333, -1.168244216387393e-05, -2.1219027985353023e-05, -0.00043335105874575675, -0.003440653206780553, -0.006637904793024063, -0.006397719029337168, -0.012524993158876896, -0.04928375035524368], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.006380543578416109, -0.042553093284368515, -0.0006114759016782045, -5.8412379075889476e-06, -8.344646857949556e-07, -0.00025245340657420456, -0.05078426003456116], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=0)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.0014467497821897268, -4.6132929128361866e-05, -0.0035253537353128195, -0.0013853248674422503, -0.0023419829085469246, -7.211902266135439e-05, -0.0004800597671419382, -6.41325386823155e-05, -0.0014577010879293084, -3.0397906812140718e-05, -0.00022492263815365732, -0.001100649475120008, -0.014757870696485043, -1.1920922133867862e-06, -2.0503786799963564e-05, -1.6689286894688848e-06, -5.602820692729438e-06, -8.689979586051777e-05, -0.18525005877017975, -0.00048601735034026206, -0.01148929726332426, -0.00047350639943033457, -0.021610382944345474, -1.3828182090946939e-05, -3.93382906622719e-05, -0.0045343199744820595, -0.006883005611598492, -3.755022044060752e-05, -1.3828182090946939e-05, -0.29116353392601013, -0.10402704775333405, -3.576278118089249e-07, -7.033323527139146e-06, -0.00033504117163829505, -2.1885242462158203, -0.1359487771987915, -0.0022878681775182486], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42, shuffle=True, stratify=y", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ",", " shuffle", "=", "True", ",", " strat", "ify", "=", "y", "\n"], "logprobs": [-0.18287934362888336, -0.00047398300375789404, -0.024015599861741066, -1.1205610462639015e-05, -2.372236667724792e-05, -0.0015043619787320495, -0.005033439956605434, -1.4662635294371285e-05, -6.437280717364047e-06, -0.04322461411356926, -0.0653751865029335, -3.576278118089249e-07, -6.198863957251888e-06, -0.00022110878489911556, -0.2966461479663849, -0.015329751186072826, -1.2877411842346191, -0.7197244167327881, -0.00040725519647821784, -0.03975193202495575, -1.5406136512756348, -0.08657563477754593, -0.004361758939921856, -0.00047886825632303953, -0.03746182471513748, -0.3297645151615143], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0015795861836522818, -4.6491513785440475e-06, -0.00012587709352374077, -4.362964682513848e-05, -2.622600959512056e-06, -0.0011945976875722408, -0.06853366643190384, -1.6689286894688848e-06, -0.00011491115583339706, -5.757642793469131e-05, -0.0065362947061657906, -0.005637934897094965, -9.274052717955783e-05, -2.861018856492592e-06, -0.0013731822837144136, -0.12914884090423584, -0.009440896101295948], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00010942813969450071, -4.827859811484814e-05, -0.0008585343020968139, -0.01406154315918684, -0.00042775063775479794, -0.0014369887067005038, -0.0017162130679935217, -0.0008704449282959104, -2.5033637939486653e-05, -0.0004408579843584448, -0.0020722122862935066], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0010339635191485286, -1.5497195136049413e-06, -7.748573807475623e-06, -0.00040534863364882767, -0.0006998711614869535, -0.0005988473421894014, -0.0005133026279509068, -0.0015029336791485548, -0.00023946279543451965, -0.0009062950266525149], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.028079718351364136, -4.768370445162873e-07, -2.9802276912960224e-06, -0.00013159839727450162, -0.14541034400463104, -0.0002908283786382526, -0.007789000868797302, -0.007301313802599907, -0.0018386616138741374, -3.015949550899677e-05, -2.5629668016335927e-05, -0.49983134865760803, -0.01877828687429428], "finish_reason": "stop"}, {"text": " report.split('\\n')", "tokens": [" report", ".", "split", "('", "\\", "n", "')", "\n"], "logprobs": [-0.02843363955616951, -0.0005050813779234886, -0.03437363728880882, -1.882519006729126, -0.015164562501013279, -0.0013786583440378308, -0.0013338964199647307, -0.10551311820745468], "finish_reason": "stop"}, {"text": " [lines[0], f\"\\nclass {lines[1]}\"]", "tokens": [" [", "lines", "[", "0", "]", ",", " f", "\"", "\\", "nclass", " {", "lines", "[", "1", "]}", "\"", "]", "\n"], "logprobs": [-1.2026219367980957, -1.6544268131256104, -0.01494121365249157, -0.10351371020078659, -1.9388267993927002, -0.9338080286979675, -2.6468286514282227, -0.05391883850097656, -2.9676291942596436, -1.7584203481674194, -0.22288945317268372, -0.7599676251411438, -0.031026864424347878, -0.40203776955604553, -0.7937999963760376, -0.45608559250831604, -0.32684940099716187, -0.21868789196014404], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.0019365858752280474, -0.0007312007946893573, -0.054270170629024506, -0.002012848388403654], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.19114123284816742, -0.0002843929105438292, -0.41276484727859497, -1.0530235767364502, -0.012233580462634563], "finish_reason": "stop"}, {"text": " len(parts) == 7:", "tokens": [" len", "(", "parts", ")", " ==", " ", "7", ":", "\n"], "logprobs": [-0.3878847360610962, -2.8967437174287625e-05, -0.0008403107640333474, -0.005629400257021189, -1.1764209270477295, -0.000522357877343893, -2.3142223358154297, -0.08744677156209946, -0.14624883234500885], "finish_reason": "stop"}, {"text": " f\"class {parts[0].strip('0123456789')}\"", "tokens": [" f", "\"", "class", " {", "parts", "[", "0", "]", ".", "strip", "('", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "')}", "\"", "\n"], "logprobs": [-0.5966703295707703, -0.057757023721933365, -1.4781956672668457, -0.020668255165219307, -0.014559573493897915, -0.02107231691479683, -0.28010761737823486, -0.7040205597877502, -0.8101628422737122, -0.09585830569267273, -0.9210781455039978, -3.632780075073242, -0.18341682851314545, -0.35281020402908325, -0.007319183554500341, -0.0038419971242547035, -0.0053011090494692326, -0.0023977598175406456, -0.0009945451747626066, -0.0008247073274105787, -0.000426439888542518, -0.3050324022769928, -1.2855653762817383, -0.33472153544425964], "finish_reason": "stop"}, {"text": " len(parts) == 9:  # Overall metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "9", ":", "  ", "#", " Overall", " metrics", "\n"], "logprobs": [-0.05121326074004173, -7.510157047363464e-06, -0.0004926898400299251, -0.00018761781393550336, -0.1637030988931656, -0.00030417583184316754, -3.2393875122070312, -0.017952803522348404, -0.02577454037964344, -1.680836794548668e-05, -0.3072645962238312, -0.05334533005952835, -0.03771555796265602], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.010869698598980904, -0.0006822404102422297, -0.12797224521636963, -0.0014873405452817678, -0.0011175584513694048, -0.02046668715775013, -0.033140551298856735, -0.027589768171310425, -0.07749329507350922, -0.03282163292169571, -0.01940797083079815, -0.004655000288039446, -0.019309287890791893, -0.004216115456074476, -0.010193785652518272, -0.007567193359136581, -0.055216941982507706, -0.16234375536441803, -0.013248507864773273, -0.0003588747640606016, -9.691245941212401e-05, -0.003980690147727728, -0.003612422849982977, -0.0007637205999344587, -0.0026717225555330515, -0.0158547256141901, -0.01624279096722603, -0.0003797286772169173, -0.0004325169720686972, -0.0033764992840588093, -0.04379665479063988, -0.0034436231944710016, -0.012252068147063255, -0.024299180135130882, -0.030742065981030464, -0.002745907986536622], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.20307329297065735, -0.21703237295150757], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.0001658063702052459, -0.00010132275929208845, -0.0063954684883356094, -1.5497195136049413e-06, -1.1205610462639015e-05, -8.702239938429557e-06, -0.036851223558187485, -0.002656385535374284], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.010310598649084568, -0.005287472158670425, -0.0011069605825468898, -0.00039617318543605506, -0.0001720042055239901, -4.446407547220588e-05, -0.0007811117684468627, -0.0019850090611726046, -1.5020257706055418e-05, -2.2172682292875834e-05, -8.344646857949556e-07, -0.0024480633437633514, -0.020119749009609222], "finish_reason": "stop"}, {"text": " formatted_report<|endoftext|>#!/usr/bin/env python3", "tokens": [" formatted", "_", "report", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "3", "\n"], "logprobs": [-0.01581541821360588, -1.5020257706055418e-05, -0.00010168035078095272, -1.2076373100280762, -1.6689286894688848e-06, -1.4305104514278355e-06, -0.00019786784832831472, -6.401333666872233e-05, -0.17169393599033356, -1.215456247329712, -1.2477917671203613, -0.03891997039318085, -0.09503272920846939, -3.075552376685664e-05, -0.002512395614758134, -0.00035720644518733025, -0.06112197786569595, -0.0036153923720121384, -0.6599924564361572, -0.012409616261720657], "finish_reason": "stop"}], "metrics": {"energy": 478.21580195426895, "energy_per_token": 1.3861327592877362, "time": 20.812323, "time_per_token": 0.060325573913043475}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -0.2547481656074524, -0.017102263867855072], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -0.21264879405498505, -0.01142471469938755, -0.002662686863914132, -0.004421933554112911], "finish_reason": "stop"}, {"text": " ValueError(f\"Column {target_column} not found in CSV file\")", "tokens": [" Value", "Error", "(", "f", "\"", "Column", " {", "target", "_", "column", "}", " not", " found", " in", " CS", "V", " file", "\"", ")", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -0.0667305514216423, -0.4145618677139282, -0.07176276296377182, -2.0525684356689453, -0.9349192976951599, -0.0012154342839494348, -2.396077979938127e-05, -0.0004752936656586826, -0.11120419204235077, -0.06882292777299881, -0.04309731349349022, -0.1480737030506134, -0.6164886951446533, -9.965400386136025e-05, -0.07068359106779099, -1.3064656257629395, -0.000860320869833231, -0.005326840095221996], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column])", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "])", "\n"], "logprobs": [-0.004214216023683548, -0.014537486247718334, -0.06773646175861359, -0.13236375153064728, -0.6303597688674927, -0.6138852834701538, -0.011823338456451893, -4.172316494077677e-06, -1.4781842764932662e-05, -0.12279936671257019, -0.04932471364736557], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.008703630417585373, -0.04844491928815842, -0.000686767278239131, -8.106198947643861e-06, -8.344646857949556e-07, -0.00026592056383378804, -0.0508439727127552], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=1)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "1", ")", "\n"], "logprobs": [-0.0013858010061085224, -5.352353764465079e-05, -0.005182878579944372, -0.0012755600037053227, -0.0020247451029717922, -8.606540359323844e-05, -0.0004334702098276466, -6.5205356804654e-05, -0.0015245969407260418, -2.5629668016335927e-05, -0.00023672162205912173, -0.0012677022023126483, -0.017665429040789604, -1.4305104514278355e-06, -2.0503786799963564e-05, -1.7881377516459906e-06, -5.602820692729438e-06, -0.00010668662434909493, -0.2115253210067749, -0.00044526674901135266, -0.011432257480919361, -0.00045062878052704036, -0.025859113782644272, -1.764281842042692e-05, -3.266281055402942e-05, -0.004015597980469465, -0.007958725094795227, -2.8967437174287625e-05, -1.2278481335670222e-05, -0.3398812413215637, -0.09455705434083939, -3.576278118089249e-07, -7.629365427419543e-06, -0.00036113892565481365, -2.106462240219116, -0.9937718510627747, -0.002999451942741871], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42, stratify=y)", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ",", " strat", "ify", "=", "y", ")", "\n"], "logprobs": [-0.15055759251117706, -0.00048232366680167615, -0.021765880286693573, -1.5139465176616795e-05, -2.90866428258596e-05, -0.0017830915749073029, -0.004513077903538942, -1.490105023549404e-05, -5.125986263010418e-06, -0.04695943370461464, -0.06977871060371399, -3.576278118089249e-07, -5.8412379075889476e-06, -0.0002087136817863211, -0.3200867474079132, -0.016750873997807503, -1.2686814069747925, -0.8625360131263733, -0.01843251660466194, -0.0005754960584454238, -0.015520736575126648, -1.2555627822875977, -0.0042924415320158005], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0015279296785593033, -3.4570634852570947e-06, -0.00011300401820335537, -5.2689116273541003e-05, -2.50339189733495e-06, -0.0011549476766958833, -0.06453455239534378, -1.9073468138230965e-06, -0.00016389934171456844, -5.2927523938706145e-05, -0.006610194221138954, -0.007413614075630903, -0.00011336160969221964, -2.622600959512056e-06, -0.0017321596387773752, -0.1357986032962799, -0.007642199285328388], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00013028726971242577, -4.970903682988137e-05, -0.0009083197801373899, -0.016796475276350975, -0.0003997480380348861, -0.0015382850542664528, -0.0016678959364071488, -0.0006947487709112465, -1.6212332411669195e-05, -0.0004532501916401088, -0.0018786415457725525], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0011975744273513556, -1.5497195136049413e-06, -6.556489552167477e-06, -0.0003798478574026376, -0.0008765193051658571, -0.0004651656490750611, -0.0006338732782751322, -0.0015648273983970284, -0.00021991695393808186, -0.0008106521563604474], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred, target_names=y_test.unique())", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ",", " target", "_", "names", "=", "y", "_", "test", ".", "unique", "())", "\n"], "logprobs": [-0.03180594742298126, -4.768370445162873e-07, -2.861018856492592e-06, -0.00014578233822248876, -0.18081076443195343, -0.0003175231395289302, -0.008375637233257294, -0.007563288789242506, -0.0016355245606973767, -3.266281055402942e-05, -2.2411095415009186e-05, -1.0912021398544312, -1.0245659351348877, -0.000812915270216763, -0.3187180459499359, -1.8590731620788574, -2.3502166271209717, -2.0084407329559326, -0.3587169051170349, -0.002895094221457839, -0.04785894602537155, -0.07879742234945297, -0.021731004118919373], "finish_reason": "stop"}, {"text": " report.splitlines()", "tokens": [" report", ".", "split", "lines", "()", "\n"], "logprobs": [-0.026805998757481575, -0.00044824567157775164, -0.03595796599984169, -1.1132892370224, -0.08253708481788635, -0.03257923200726509], "finish_reason": "stop"}, {"text": " [lines[0]] + [", "tokens": [" [", "lines", "[", "0", "]]", " +", " [", "\n"], "logprobs": [-1.2844817638397217, -1.208556890487671, -0.013404839672148228, -0.1019320860505104, -0.2046484351158142, -1.3000948429107666, -0.20528891682624817, -1.0701342821121216], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.0018828060710802674, -0.0007236960809677839, -0.05625319853425026, -0.0021607165690511465], "finish_reason": "stop"}, {"text": " line.replace(\"-\", \" --\").split(\" \")", "tokens": [" line", ".", "replace", "(", "\"", "-", "\"", ",", " \"", " --", "\"", ")", ".", "split", "(", "\"", " \"", ")", "\n"], "logprobs": [-0.23043444752693176, -0.00031513971043750644, -3.1097850799560547, -0.04268457740545273, -0.11438026279211044, -2.8310961723327637, -0.5595127940177917, -0.0003819928097072989, -0.01951342634856701, -3.799013614654541, -1.2017886638641357, -0.006561757531017065, -0.011082051321864128, -0.45074212551116943, -0.9506729245185852, -0.02587038092315197, -0.4486839771270752, -0.01710660010576248, -0.013259449042379856], "finish_reason": "stop"}, {"text": " len(parts) < 5:", "tokens": [" len", "(", "parts", ")", " <", " ", "5", ":", "\n"], "logprobs": [-0.40872952342033386, -3.0040289857424796e-05, -0.0007022537174634635, -0.005205292254686356, -2.1797895431518555, -0.000902126485016197, -1.7469958066940308, -0.12592385709285736, -0.09699537605047226], "finish_reason": "stop"}, {"text": " \"    {:<8} {:>8} {:>8} {:>8} {:>8}\".format(parts[0], parts[1], parts[2], parts[3], parts[4])", "tokens": [" \"", "    ", "{:", "<", "8", "}", " {:", ">", "8", "}", " {:", ">", "8", "}", " {:", ">", "8", "}", " {:", ">", "8", "}\"", ".", "format", "(", "parts", "[", "0", "]", ",", " parts", "[", "1", "]", ",", " parts", "[", "2", "]", ",", " parts", "[", "3", "]", ",", " parts", "[", "4", "])", "\n"], "logprobs": [-1.030679702758789, -2.77168869972229, -3.031453847885132, -0.9120694398880005, -2.563918352127075, -0.29716429114341736, -0.9243561625480652, -0.46533510088920593, -2.0437512397766113, -0.18517833948135376, -0.021310871466994286, -0.0036754929460585117, -0.026223808526992798, -0.010078846476972103, -0.04362833872437477, -0.0025537756737321615, -0.05827740207314491, -0.07685521990060806, -0.336995929479599, -0.01987261325120926, -0.1633133739233017, -0.28340891003608704, -0.02055930159986019, -0.000854961050208658, -0.2969737946987152, -0.7238345146179199, -0.009476794861257076, -0.214710995554924, -0.06613299250602722, -0.054798346012830734, -0.17690937221050262, -0.0033545196056365967, -0.33040851354599, -0.03983968496322632, -0.012251833453774452, -0.028227025642991066, -0.0007931424188427627, -0.07118696719408035, -0.0013242532731965184, -0.00119066855404526, -0.03251541778445244, -0.0012168630491942167, -0.014191068708896637, -0.0024529388174414635, -0.0026838495396077633, -0.03639613091945648, -0.005336681846529245, -0.005083136726170778, -0.006856604013592005, -0.01458401046693325], "finish_reason": "stop"}, {"text": " len(parts) > 10:  # Overall metrics", "tokens": [" len", "(", "parts", ")", " >", " ", "1", "0", ":", "  ", "#", " Overall", " metrics", "\n"], "logprobs": [-0.05069179832935333, -8.702239938429557e-06, -0.00044169207103550434, -0.00018010901112575084, -2.999019145965576, -0.0012467476772144437, -2.1138553619384766, -2.0718348026275635, -0.053875576704740524, -0.060364965349435806, -1.168244216387393e-05, -0.7974020838737488, -0.06607630848884583, -0.08453380316495895], "finish_reason": "stop"}, {"text": " f\"{'accuracy':<15}{parts[1]}{parts[2]}{parts[3]}{parts[4]}\"", "tokens": [" f", "\"", "{'", "accuracy", "':", "<", "1", "5", "}{", "parts", "[", "1", "]", "}{", "parts", "[", "2", "]", "}{", "parts", "[", "3", "]", "}{", "parts", "[", "4", "]}", "\"", "\n"], "logprobs": [-0.011261118575930595, -0.0005968220066279173, -2.7161130905151367, -0.6394466757774353, -0.038904838263988495, -0.0825793445110321, -0.010560935363173485, -0.01281479187309742, -0.042748771607875824, -0.021477265283465385, -0.0009779914980754256, -1.227184534072876, -2.2977099418640137, -0.16600818932056427, -0.012105096131563187, -0.0004213160718791187, -0.027915114536881447, -0.10360486060380936, -0.003481163177639246, -0.0022763311862945557, -0.00015209948469419032, -0.010161099024116993, -0.6938128471374512, -0.007855120114982128, -0.08834345638751984, -0.013874276541173458, -0.02784740924835205, -0.17860330641269684, -0.0015666127437725663, -0.007423908915370703], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.24058303236961365, -0.2289433479309082], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.0001387499796692282, -0.0001113352773245424, -0.004187862388789654, -1.4305104514278355e-06, -1.0013530300057027e-05, -7.629365427419543e-06, -0.034478560090065, -0.0023994247894734144], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.010699288919568062, -0.0042199138551950455, -0.001049801823683083, -0.0003711488388944417, -0.00015078838623594493, -4.362964682513848e-05, -0.00076908094342798, -0.002319623716175556, -1.168244216387393e-05, -1.7762025890988298e-05, -9.536738616588991e-07, -0.0021290748845785856, -0.018147854134440422], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.016316914930939674, -1.4305012882687151e-05, -0.00010144196130568162, -0.8365097641944885], "finish_reason": "stop"}], "metrics": {"energy": 518.7466411447525, "energy_per_token": 1.4863800605866835, "time": 22.872179, "time_per_token": 0.06553632951289398}}
{"outputs": [{"text": " pd.read_csv(csv_file_path, sep=\",\", header=0)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ",", " sep", "=", "\"", ",", "\"", ",", " header", "=", "0", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -1.5074431896209717, -1.699655532836914, -0.19914476573467255, -0.14161458611488342, -0.2935349643230438, -0.0035835590679198503, -0.8962592482566833, -1.2183905839920044, -0.010906489565968513, -0.41129419207572937, -0.6843954920768738, -0.031703975051641464], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -0.21264879405498505, -0.01142471469938755, -0.002662686863914132, -0.004421933554112911], "finish_reason": "stop"}, {"text": " ValueError(f\"'{target_column}' is not found in the CSV file.\")", "tokens": [" Value", "Error", "(", "f", "\"", "'{", "target", "_", "column", "}'", " is", " not", " found", " in", " the", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -0.0667305514216423, -0.4145618677139282, -0.07176276296377182, -2.9827537536621094, -0.006045863498002291, -1.8954096958623268e-05, -0.00034290633630007505, -0.00494803674519062, -0.4554746448993683, -0.014186720363795757, -1.7884761095046997, -0.042387425899505615, -0.17546266317367554, -0.26634731888771057, -0.00010001159535022452, -0.020094512030482292, -0.2445860654115677, -0.06581426411867142, -0.000387831823900342, -0.004187031649053097], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.004741733893752098, -0.012872458435595036, -0.07475404441356659, -0.13872157037258148, -0.8060793876647949, -1.0609570381348021e-05, -1.764281842042692e-05, -0.00037901371251791716, -0.0036270327400416136, -0.006552283186465502, -0.006922074127942324, -0.008921405300498009, -0.06232184171676636], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.007619721814990044, -0.0491887666285038, -0.0006827168981544673, -7.033323527139146e-06, -8.344646857949556e-07, -0.00027938754647038877, -0.04172014445066452], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=0)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.001388300908729434, -3.7431014789035544e-05, -0.004055965691804886, -0.0023394853342324495, -0.00216166814789176, -6.878139538457617e-05, -0.000529149197973311, -5.8887653722194955e-05, -0.0018789985915645957, -2.8490614567999728e-05, -0.00021753329201601446, -0.0011485177092254162, -0.01338790263980627, -1.311301275563892e-06, -2.2649508537142538e-05, -1.7881377516459906e-06, -5.8412379075889476e-06, -9.369411418447271e-05, -0.2225184142589569, -0.00042358008795417845, -0.009633717127144337, -0.00045134371612221, -0.02333943359553814, -1.2516897186287679e-05, -3.9219088648678735e-05, -0.0037073232233524323, -0.010679356753826141, -3.397406908334233e-05, -1.07287787614041e-05, -0.3110584616661072, -0.10166139900684357, -5.960462772236497e-07, -7.748573807475623e-06, -0.00037746457383036613, -1.9256792068481445, -0.15669198334217072, -0.0022659834939986467], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", "\n"], "logprobs": [-0.16487814486026764, -0.0004469349514693022, -0.02244066260755062, -1.2755313036905136e-05, -2.8967437174287625e-05, -0.0015069806249812245, -0.004845780320465565, -1.4424220353248529e-05, -7.390948667307384e-06, -0.04599547013640404, -0.06834909319877625, -2.3841855067985307e-07, -6.437280717364047e-06, -0.0001932195882545784, -0.306262344121933, -0.0157754048705101, -0.972894012928009], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0014337747124955058, -4.410734163684538e-06, -0.00012587709352374077, -3.9934315282152966e-05, -2.3841830625315197e-06, -0.0012369846226647496, -0.051987532526254654, -1.9073468138230965e-06, -0.00017045476124621928, -5.173549288883805e-05, -0.006233653519302607, -0.00679219514131546, -7.152301259338856e-05, -2.50339189733495e-06, -0.001644093543291092, -0.1640283316373825, -0.00817299634218216], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.0001292145170737058, -5.304672595229931e-05, -0.0008643704932183027, -0.012837623246014118, -0.00044741155579686165, -0.0014068715972825885, -0.001798085169866681, -0.0006719953380525112, -1.9073304429184645e-05, -0.0004551566671580076, -0.0017816636245697737], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0013809201773256063, -1.1920922133867862e-06, -6.794906312279636e-06, -0.0004300146538298577, -0.0007653883076272905, -0.0005670370301231742, -0.0005942009738646448, -0.0014113951474428177, -0.00023958197562023997, -0.0009577454766258597], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.029779113829135895, -4.768370445162873e-07, -2.861018856492592e-06, -0.00012206286191940308, -0.20717844367027283, -0.0002829628065228462, -0.009172679856419563, -0.007587187457829714, -0.0018086755881085992, -3.218599158572033e-05, -1.6212332411669195e-05, -0.4536961019039154, -0.018981480970978737], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.028360292315483093, -0.000527123745996505, -0.0321989543735981, -0.48359498381614685, -0.0017860665684565902, -0.028324022889137268, -0.001513408264145255, -0.0017471539322286844, -0.04634936898946762, -0.03814997151494026], "finish_reason": "stop"}, {"text": " [", "tokens": [" [", "\n"], "logprobs": [-1.21555495262146, -0.7433284521102905], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002195806708186865, -0.0009279712685383856, -0.05212502181529999, -0.002520838286727667], "finish_reason": "stop"}, {"text": " line.replace(\" \", \"-\").split(\"-\")", "tokens": [" line", ".", "replace", "(", "\"", " \"", ",", " \"", "-", "\"", ")", ".", "split", "(", "\"", "-", "\"", ")", "\n"], "logprobs": [-0.18557578325271606, -0.00030727434204891324, -3.0411376953125, -0.039448752999305725, -0.11731307953596115, -1.223280429840088, -0.004850881639868021, -0.03662944957613945, -4.096940040588379, -0.17504237592220306, -0.018933523446321487, -0.016326062381267548, -0.2879725396633148, -0.00814651045948267, -0.011398314498364925, -0.07124147564172745, -0.002069951966404915, -0.012848097831010818, -0.016825076192617416], "finish_reason": "stop"}, {"text": " parts[0].strip().isdigit():", "tokens": [" parts", "[", "0", "]", ".", "strip", "()", ".", "is", "digit", "():", "\n"], "logprobs": [-1.3808507919311523, -0.3311033844947815, -0.08065591752529144, -0.008833497762680054, -1.5807114839553833, -2.3230435848236084, -0.2414826899766922, -1.7448937892913818, -1.440821647644043, -0.6160812377929688, -0.0808209702372551, -0.15258648991584778], "finish_reason": "stop"}, {"text": " parts[0]", "tokens": [" parts", "[", "0", "]", "\n"], "logprobs": [-2.86708402633667, -0.03928922116756439, -0.10448234528303146, -0.026854857802391052, -2.2359981536865234], "finish_reason": "stop"}, {"text": " len(parts) == 14:  # Overall metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "1", "4", ":", "  ", "#", " Overall", " metrics", "\n"], "logprobs": [-0.04886095970869064, -9.179073458653875e-06, -0.00044526674901135266, -0.00022659118985757232, -0.15356610715389252, -0.0002932118659373373, -1.8634417057037354, -3.3602681159973145, -0.02030818536877632, -0.05922802910208702, -1.4185804502631072e-05, -0.4016658663749695, -0.045888446271419525, -0.047732457518577576], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.01196222472935915, -0.0007146426942199469, -0.12930670380592346, -0.0015672078588977456, -0.0010583758121356368, -0.01722296141088009, -0.0320904441177845, -0.03044770285487175, -0.08298526704311371, -0.033045750111341476, -0.017694005742669106, -0.0060376874171197414, -0.01498161256313324, -0.004341818857938051, -0.009852943010628223, -0.008479188196361065, -0.05453333258628845, -0.18203286826610565, -0.011061654426157475, -0.00026663561584427953, -7.4741430580616e-05, -0.004041718319058418, -0.003185438457876444, -0.0007588367443531752, -0.002352448645979166, -0.014224094338715076, -0.015045848675072193, -0.0003446938644628972, -0.00030429501202888787, -0.003098094603046775, -0.04887401685118675, -0.003036057809367776, -0.011606547981500626, -0.02350188046693802, -0.032409366220235825, -0.0025496138259768486], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.22134970128536224, -0.2377178817987442], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00015186110977083445, -0.00013016807497479022, -0.004581787157803774, -1.5497195136049413e-06, -8.583032467868179e-06, -7.867782187531702e-06, -0.033491190522909164, -0.0029444219544529915], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.010210305452346802, -0.004377663601189852, -0.0009517907164990902, -0.00037543877260759473, -0.0001854724541772157, -4.1483970562694594e-05, -0.0009548871894367039, -0.0022460015024989843, -1.3232143828645349e-05, -2.002696055569686e-05, -8.344646857949556e-07, -0.002495985943824053, -0.02068985626101494], "finish_reason": "stop"}, {"text": " formatted_report<|endoftext|>\"\"\"", "tokens": [" formatted", "_", "report", "<", "|", "end", "of", "text", "|", ">\"", "\"", "\"", "\n"], "logprobs": [-0.013264977373182774, -2.0146166207268834e-05, -0.00011753345461329445, -1.0763373374938965, -1.9073468138230965e-06, -1.311301275563892e-06, -0.00022146634000819176, -7.271502545336261e-05, -1.8299459218978882, -0.0031742684077471495, -0.001313062384724617, -0.0003182381624355912, -0.1874689906835556], "finish_reason": "stop"}], "metrics": {"energy": 437.7599754238132, "energy_per_token": 1.3766036963012995, "time": 19.960121, "time_per_token": 0.06276767610062893}}
{"outputs": [{"text": " pd.read_csv(csv_file_path, sep=\",\", header=None, index_col=None)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ",", " sep", "=", "\"", ",", "\"", ",", " header", "=", "None", ",", " index", "_", "col", "=", "None", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -1.5074431896209717, -1.699655532836914, -0.19914476573467255, -0.14161458611488342, -0.2935349643230438, -0.0035835590679198503, -0.8962592482566833, -1.2183905839920044, -0.010906489565968513, -1.323798418045044, -0.7098506093025208, -2.4308905601501465, -3.099436753473128e-06, -0.0002992897352669388, -0.02660473808646202, -0.6716474294662476, -0.279684841632843, -0.042727068066596985], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -0.21264879405498505, -0.01142471469938755, -0.002662686863914132, -0.004421933554112911], "finish_reason": "stop"}, {"text": " ValueError(\"Invalid target column name.\")", "tokens": [" Value", "Error", "(", "\"", "Invalid", " target", " column", " name", ".", "\"", ")", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -0.0667305514216423, -1.210198998451233, -2.5629308223724365, -0.17309528589248657, -0.2676079571247101, -0.8378168344497681, -0.4615907073020935, -0.3716832995414734, -0.0010661162668839097, -0.0069722686894237995], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.004148805979639292, -0.012523227371275425, -0.0718560665845871, -0.142867311835289, -0.8536008596420288, -9.179073458653875e-06, -1.7404405298293568e-05, -0.0004668337933253497, -0.0036041084676980972, -0.007015832234174013, -0.007888710126280785, -0.010072828270494938, -0.062303584069013596], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.006270259618759155, -0.058825720101594925, -0.0004681444843299687, -8.106198947643861e-06, -9.536738616588991e-07, -0.0003002431185450405, -0.040449269115924835], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=101)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "1", "0", "1", ")", "\n"], "logprobs": [-0.001585894264280796, -4.088794958079234e-05, -0.004371016751974821, -0.0013903246726840734, -0.0028715587686747313, -7.915183232398704e-05, -0.0006114759016782045, -7.354942499659956e-05, -0.0015776818618178368, -3.1470757676288486e-05, -0.00020597243565134704, -0.0013313962845131755, -0.015368960797786713, -1.0728830375228426e-06, -2.1457441107486375e-05, -2.9802276912960224e-06, -5.960446742392378e-06, -0.00010489867418073118, -0.2112123817205429, -0.0004776767164003104, -0.01303590927273035, -0.00039081089198589325, -0.02248961851000786, -1.3947389561508317e-05, -3.290122185717337e-05, -0.003925120458006859, -0.006645483896136284, -3.755022044060752e-05, -1.0251946150674485e-05, -0.36608967185020447, -0.12843438982963562, -5.960462772236497e-07, -8.22540732769994e-06, -0.0004015354788862169, -2.1454272270202637, -1.6152570247650146, -1.9422694444656372, -0.13506557047367096, -0.004643134772777557], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=0)", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.15097784996032715, -0.0005153281381353736, -0.020488644018769264, -1.1920858014491387e-05, -2.7417760065873154e-05, -0.0016482589999213815, -0.004365557339042425, -1.3351351299206726e-05, -8.583032467868179e-06, -0.05099906772375107, -0.08782725036144257, -3.576278118089249e-07, -7.510157047363464e-06, -0.00020561488054227084, -2.263101100921631, -0.7144703269004822, -0.002337463665753603], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0015593523858115077, -4.291525328881107e-06, -0.00012385078298393637, -3.659658250398934e-05, -2.3841830625315197e-06, -0.0010631391778588295, -0.06586237251758575, -1.9073468138230965e-06, -0.00017236177518498152, -5.471556869451888e-05, -0.007307704538106918, -0.006210196763277054, -9.011816291604191e-05, -2.264974000354414e-06, -0.0016678959364071488, -0.14362378418445587, -0.009313942864537239], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00011038171214750037, -4.9828242481453344e-05, -0.0008592489175498486, -0.013891676440834999, -0.00047183825518004596, -0.0012869894271716475, -0.002016298472881317, -0.0007307243067771196, -2.288792165927589e-05, -0.0004861365014221519, -0.0017308506648987532], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0013768726494163275, -1.4305104514278355e-06, -7.033323527139146e-06, -0.0004768426588270813, -0.0008219677838496864, -0.0006291079334914684, -0.0007085673278197646, -0.0015241208020597696, -0.0002616301644593477, -0.0008378094644285738], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.02910567633807659, -4.768370445162873e-07, -2.861018856492592e-06, -0.00012861855793744326, -0.14381417632102966, -0.000284154579276219, -0.005976899527013302, -0.008338280953466892, -0.0017101438716053963, -3.576214658096433e-05, -2.658331868587993e-05, -0.4640637934207916, -0.019162530079483986], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.024981789290905, -0.0004326361231505871, -0.029475903138518333, -0.5126224756240845, -0.0016349294455721974, -0.032502610236406326, -0.0020353333093225956, -0.0016615884378552437, -0.06778191030025482, -0.03375653550028801], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.47919249534606934, -0.0029302777256816626], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.002054605633020401, -0.0012006701435893774, -0.0637677013874054, -0.0026718415319919586], "finish_reason": "stop"}, {"text": " line.strip().split(\"  \")", "tokens": [" line", ".", "strip", "()", ".", "split", "(", "\"", "  ", "\"", ")", "\n"], "logprobs": [-0.21112369000911713, -0.00039915222441777587, -1.2927978038787842, -0.012696387246251106, -0.0003095386200584471, -0.01857622154057026, -0.6155861616134644, -0.07119707018136978, -0.9297776818275452, -0.008453656919300556, -0.01464098785072565, -0.015642914921045303], "finish_reason": "stop"}, {"text": " parts[0] == \"precision\":", "tokens": [" parts", "[", "0", "]", " ==", " \"", "precision", "\":", "\n"], "logprobs": [-1.2463150024414062, -0.3308430016040802, -0.07478413730859756, -0.01068195141851902, -0.6301581263542175, -0.09656685590744019, -0.551618754863739, -0.04754195734858513, -0.03584318980574608], "finish_reason": "stop"}, {"text": " \" \".join([parts[0], \" \".join(parts[1:3]), f\"{parts[2]}\", parts[3]])", "tokens": [" \"", " \"", ".", "join", "([", "parts", "[", "0", "]", ",", " \"", " \"", ".", "join", "(", "parts", "[", "1", ":", "3", "])", ",", " f", "\"", "{", "parts", "[", "2", "]}", "\"", ",", " parts", "[", "3", "]]", ")", "\n"], "logprobs": [-1.1437122821807861, -0.5723019242286682, -0.0025835013948380947, -0.0005565524916164577, -0.7684922814369202, -0.20843710005283356, -0.014009939506649971, -0.13641691207885742, -0.25722837448120117, -0.06592465192079544, -1.6086618900299072, -0.33478841185569763, -0.06095375493168831, -0.0007148809381760657, -0.12014324218034744, -0.013660400174558163, -0.005279408767819405, -0.14506591856479645, -0.5303319096565247, -1.5573536157608032, -0.09074883908033371, -0.012380769476294518, -3.387420177459717, -0.02835797518491745, -0.15947642922401428, -0.19206276535987854, -0.06031075865030289, -2.4119772911071777, -0.22871975600719452, -0.4459119737148285, -0.28486108779907227, -0.662930428981781, -0.1682959794998169, -0.04452184587717056, -0.47757354378700256, -0.0027233201544731855, -0.037362609058618546], "finish_reason": "stop"}, {"text": " len(parts) == 8:  # Overall metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "8", ":", "  ", "#", " Overall", " metrics", "\n"], "logprobs": [-0.04882917180657387, -8.702239938429557e-06, -0.00040082051418721676, -0.00018892886873800308, -0.1472434252500534, -0.0002836778585333377, -2.446333408355713, -0.019753171131014824, -0.02216588519513607, -1.1920858014491387e-05, -0.3951875865459442, -0.05248942971229553, -0.03360358253121376], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.010551970452070236, -0.0005619138828478754, -0.10968788713216782, -0.001555662602186203, -0.0012362702982500196, -0.018426664173603058, -0.032931793481111526, -0.034921977669000626, -0.08567976951599121, -0.0364852100610733, -0.019433224573731422, -0.004210773389786482, -0.017227062955498695, -0.004550577607005835, -0.010706247761845589, -0.009040257893502712, -0.05807405337691307, -0.18041810393333435, -0.01154444832354784, -0.0002706876548472792, -4.851700214203447e-05, -0.0036473434884101152, -0.0031634545885026455, -0.0008972433279268444, -0.0025213139597326517, -0.015404647216200829, -0.01689247600734234, -0.0003054867556784302, -0.00038246947224251926, -0.0029079315718263388, -0.033588021993637085, -0.0027651668060570955, -0.010695396922528744, -0.022251112386584282, -0.03522319719195366, -0.0024166684597730637], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.24767445027828217, -0.21704800426959991], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.0001445904199499637, -0.00012313561455812305, -0.004271313082426786, -1.4305104514278355e-06, -1.2278481335670222e-05, -7.033323527139146e-06, -0.04118604212999344, -0.0023935975041240454], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.009586135856807232, -0.004000043962150812, -0.0009802542626857758, -0.00038628268521279097, -0.0002138386043952778, -4.339123915997334e-05, -0.0010033579310402274, -0.0020034497138112783, -1.2397689715726301e-05, -1.9788545614574105e-05, -1.0728830375228426e-06, -0.002456625225022435, -0.020162275061011314], "finish_reason": "stop"}, {"text": " formatted_report<|endoftext|>from typing import Dict", "tokens": [" formatted", "_", "report", "<", "|", "end", "of", "text", "|>", "from", " typing", " import", " D", "ict", "\n"], "logprobs": [-0.017069686204195023, -1.6569954823353328e-05, -6.48477507638745e-05, -1.156935214996338, -1.4305104514278355e-06, -1.311301275563892e-06, -0.0002153879904653877, -5.2927523938706145e-05, -0.14466555416584015, -1.2686517238616943, -2.3569109439849854, -0.0023953812196850777, -2.5813426971435547, -0.0005552418879233301, -1.2446898221969604], "finish_reason": "stop"}], "metrics": {"energy": 446.84535327148456, "energy_per_token": 1.3181278857565917, "time": 20.394732, "time_per_token": 0.060161451327433633}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -0.2547481656074524, -0.017102263867855072], "finish_reason": "stop"}, {"text": " target_column not in df:", "tokens": [" target", "_", "column", " not", " in", " df", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -1.6560195684432983, -0.0054494403302669525], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column not found in data file: {target_column}.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " not", " found", " in", " data", " file", ":", " {", "target", "_", "column", "}", ".", "\"", ")", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -0.0667305514216423, -0.4145618677139282, -0.07176276296377182, -1.0824946165084839, -0.06585410982370377, -1.4966814517974854, -0.01866842620074749, -0.132486030459404, -3.6184327602386475, -2.666043281555176, -0.6861157417297363, -0.09046933799982071, -0.25739941000938416, -7.60526381782256e-05, -0.0009066523634828627, -1.6429712772369385, -0.09066936373710632, -0.10476214438676834, -0.0019526478135958314, -0.0033147174399346113], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.004214216023683548, -0.014537486247718334, -0.06773646175861359, -0.13236375153064728, -0.7748643159866333, -1.168244216387393e-05, -2.1219027985353023e-05, -0.00043335105874575675, -0.003440653206780553, -0.006637904793024063, -0.006397719029337168, -0.012524993158876896, -0.04928375035524368], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.006380543578416109, -0.042553093284368515, -0.0006114759016782045, -5.8412379075889476e-06, -8.344646857949556e-07, -0.00025245340657420456, -0.05078426003456116], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ")", "\n"], "logprobs": [-0.0014467497821897268, -4.6132929128361866e-05, -0.0035253537353128195, -0.0013853248674422503, -0.0023419829085469246, -7.211902266135439e-05, -0.0004800597671419382, -6.41325386823155e-05, -0.0014577010879293084, -3.0397906812140718e-05, -0.00022492263815365732, -0.001100649475120008, -0.014757870696485043, -1.1920922133867862e-06, -2.0503786799963564e-05, -1.6689286894688848e-06, -5.602820692729438e-06, -8.689979586051777e-05, -0.18525005877017975, -0.00048601735034026206, -0.01148929726332426, -0.00047350639943033457, -0.021610382944345474, -1.3828182090946939e-05, -3.93382906622719e-05, -0.0045343199744820595, -0.006883005611598492, -3.755022044060752e-05, -1.3828182090946939e-05, -1.3772708177566528, -0.0028174726758152246], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=0", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "0", "\n"], "logprobs": [-0.18287934362888336, -0.00047398300375789404, -0.024015599861741066, -1.1205610462639015e-05, -2.372236667724792e-05, -0.0015043619787320495, -0.005033439956605434, -1.4662635294371285e-05, -6.437280717364047e-06, -0.04322461411356926, -0.0653751865029335, -3.576278118089249e-07, -6.198863957251888e-06, -0.00022110878489911556, -2.3117446899414062, -1.1610729694366455], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.001420561340637505, -4.529942543740617e-06, -0.00011860620725201443, -3.731181277544238e-05, -2.0265558760002023e-06, -0.0011104138102382421, -0.06174304708838463, -1.6689286894688848e-06, -0.00013767725613433868, -5.793403761344962e-05, -0.0062727476470172405, -0.005760852713137865, -0.00010740180005086586, -2.264974000354414e-06, -0.0011840007500723004, -0.13341909646987915, -0.008879697881639004], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00013886917440686375, -4.136476854910143e-05, -0.0007550249574705958, -0.014085521921515465, -0.0004606377915479243, -0.0014882928226143122, -0.0019125519320368767, -0.0008493629866279662, -1.645074735279195e-05, -0.00043215948971919715, -0.0019587157294154167], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0010562323732301593, -1.1920922133867862e-06, -7.629365427419543e-06, -0.0004456242313608527, -0.0008173224050551653, -0.0006509092636406422, -0.00041309406515210867, -0.001712523982860148, -0.00021240839851088822, -0.0009364272118546069], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.026906847953796387, -5.960462772236497e-07, -2.861018856492592e-06, -0.00013600854435935616, -0.1540367156267166, -0.0003165697562508285, -0.006360051687806845, -0.00791106279939413, -0.0017178792040795088, -3.504691630951129e-05, -1.7165990357170813e-05, -0.3657420873641968, -0.018694868311285973], "finish_reason": "stop"}, {"text": " report.split('\\n')", "tokens": [" report", ".", "split", "('", "\\", "n", "')", "\n"], "logprobs": [-0.025867361575365067, -0.0004924515378661454, -0.035258181393146515, -1.9790420532226562, -0.016044670715928078, -0.0011972171487286687, -0.0019612142350524664, -0.09624610096216202], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.45637762546539307, -0.003150739474222064], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.0019012485863640904, -0.0009270184673368931, -0.06236966699361801, -0.0024674467276781797], "finish_reason": "stop"}, {"text": " line.split(\" \")", "tokens": [" line", ".", "split", "(", "\"", " \"", ")", "\n"], "logprobs": [-0.2020045667886734, -0.000402250443585217, -0.4304783046245575, -0.5312283635139465, -0.06502058357000351, -0.5735880136489868, -0.015390326268970966, -0.008280470035970211], "finish_reason": "stop"}, {"text": " parts:", "tokens": [" parts", ":", "\n"], "logprobs": [-1.3893026113510132, -1.5704689025878906, -0.03894588351249695], "finish_reason": "stop"}, {"text": " (", "tokens": [" (", "\n"], "logprobs": [-2.649655818939209, -0.03173654153943062], "finish_reason": "stop"}, {"text": " len(parts) == 4:  # Overall metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "4", ":", "  ", "#", " Overall", " metrics", "\n"], "logprobs": [-0.04994918406009674, -8.940656698541716e-06, -0.0004266782198101282, -0.00018571082910057157, -0.1584421545267105, -0.0003418338019400835, -2.178405523300171, -0.016466083005070686, -0.014003238640725613, -9.775113539944869e-06, -0.4820164144039154, -0.07297420501708984, -0.04236822947859764], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.010836562141776085, -0.0007525234250351787, -0.12680917978286743, -0.001940988120622933, -0.0012419852428138256, -0.019923564046621323, -0.03673804551362991, -0.036157239228487015, -0.08071661740541458, -0.03348381072282791, -0.016810424625873566, -0.00454500038176775, -0.022633790969848633, -0.0041859629563987255, -0.009950085543096066, -0.008717220276594162, -0.05657205730676651, -0.17643582820892334, -0.011486704461276531, -0.0002454218047205359, -0.00010179955279454589, -0.003316855989396572, -0.0032317813020199537, -0.0007549058645963669, -0.0030234598089009523, -0.015526370145380497, -0.015519444830715656, -0.00025781645672395825, -0.0003289635351393372, -0.0029967185109853745, -0.032362163066864014, -0.003222394036129117, -0.011975299566984177, -0.02186373807489872, -0.031056564301252365, -0.0029198178090155125], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.23172828555107117, -0.2028280645608902], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00013541258522309363, -0.00012087091454304755, -0.003942694049328566, -1.5497195136049413e-06, -9.059865078597795e-06, -6.556489552167477e-06, -0.03688029199838638, -0.0023247378412634134], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.010004141367971897, -0.0043707797303795815, -0.0011639971053227782, -0.00038699767901562154, -0.00017033556650858372, -4.756337511935271e-05, -0.0010245556477457285, -0.001971921883523464, -1.2993727978027891e-05, -2.1934269170742482e-05, -8.344646857949556e-07, -0.0018670998979359865, -0.019449710845947266], "finish_reason": "stop"}, {"text": " formatted_report<|endoftext|>#!/usr/bin/env python3", "tokens": [" formatted", "_", "report", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "usr", "/", "bin", "/", "env", " python", "3", "\n"], "logprobs": [-0.015224089846014977, -1.8358061424805783e-05, -7.986703712958843e-05, -1.0851795673370361, -1.6689286894688848e-06, -1.4305104514278355e-06, -0.00023326536756940186, -7.664863369427621e-05, -0.13656418025493622, -1.2895139455795288, -1.2444219589233398, -0.03806677460670471, -0.1053565964102745, -2.586808113846928e-05, -0.002176061272621155, -0.00033885458833537996, -0.06517818570137024, -0.004053710028529167, -0.648270308971405, -0.013643818907439709], "finish_reason": "stop"}], "metrics": {"energy": 448.5045170993803, "energy_per_token": 1.601801846783501, "time": 19.327112, "time_per_token": 0.0690254}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -0.2547481656074524, -0.017102263867855072], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -0.21264879405498505, -0.01142471469938755, -0.002662686863914132, -0.004421933554112911], "finish_reason": "stop"}, {"text": " ValueError(\"target_column not found in CSV file\")", "tokens": [" Value", "Error", "(", "\"", "target", "_", "column", " not", " found", " in", " CS", "V", " file", "\"", ")", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -0.0667305514216423, -1.210198998451233, -2.782644033432007, -0.09949921071529388, -0.006552164442837238, -0.8530900478363037, -0.09072412550449371, -0.12889139354228973, -0.5447560548782349, -0.00016890530241653323, -0.07261563837528229, -0.42229318618774414, -0.0009829933987930417, -0.00472381804138422], "finish_reason": "stop"}, {"text": " df.drop([target_column], axis=1)", "tokens": [" df", ".", "drop", "([", "target", "_", "column", "]", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.004148805979639292, -0.012523227371275425, -0.0718560665845871, -2.0819408893585205, -0.02090608887374401, -0.0003518439189065248, -1.7404405298293568e-05, -0.07310596108436584, -0.0020779224578291178, -0.006200363393872976, -0.006163399200886488, -0.005687957163900137, -0.010372539982199669, -0.05542876943945885], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.006978069432079792, -0.05034464970231056, -0.000801837770268321, -6.437280717364047e-06, -7.152555099310121e-07, -0.000271521887043491, -0.04678675904870033], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0014854359906166792, -5.1973900554003194e-05, -0.0036759679205715656, -0.0010237219976261258, -0.0021972341928631067, -7.390703103737906e-05, -0.0005641775787808001, -6.186770770000294e-05, -0.001679201959632337, -2.90866428258596e-05, -0.00020323118951637298, -0.0012029323261231184, -0.013643584214150906, -1.1920922133867862e-06, -2.372236667724792e-05, -2.264974000354414e-06, -6.437280717364047e-06, -8.749579137656838e-05, -0.23209159076213837, -0.00040570611599832773, -0.01246565766632557, -0.00040356122190132737, -0.023090645670890808, -1.6093124941107817e-05, -3.58813522325363e-05, -0.004661882296204567, -0.008355541154742241, -3.957670196541585e-05, -1.2874520507466514e-05, -0.30024421215057373, -0.110832080245018, -3.576278118089249e-07, -8.106198947643861e-06, -0.00036554806865751743, -0.3233390748500824, -0.01784062758088112, -0.14161768555641174, -0.002357443794608116], "finish_reason": "stop"}, {"text": "", "tokens": ["\n"], "logprobs": [-1.9789581298828125], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0014287750236690044, -4.172316494077677e-06, -0.00011991735664196312, -4.029192859889008e-05, -2.861018856492592e-06, -0.0010381315369158983, -0.06659427285194397, -1.4305104514278355e-06, -0.00015436411194968969, -5.447716102935374e-05, -0.0062343645840883255, -0.00607240479439497, -9.7508447652217e-05, -2.50339189733495e-06, -0.0017578639090061188, -0.14522211253643036, -0.008132676593959332], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00013636612857226282, -4.7801782784517854e-05, -0.0008348317351192236, -0.014525972306728363, -0.0004109491710551083, -0.0013897294411435723, -0.0019050560658797622, -0.0007322729215957224, -2.1457441107486375e-05, -0.0004047528200317174, -0.002371001522988081], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.001468414207920432, -1.311301275563892e-06, -5.602820692729438e-06, -0.00044610086479224265, -0.0007221474661491811, -0.0005175919504836202, -0.00047064671525731683, -0.001573873101733625, -0.00024291902082040906, -0.0009646529797464609], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred, target_key=target_column)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ",", " target", "_", "key", "=", "target", "_", "column", ")", "\n"], "logprobs": [-0.03170512989163399, -4.768370445162873e-07, -2.861018856492592e-06, -0.0001287377526750788, -0.1414676457643509, -0.00030429501202888787, -0.008379420265555382, -0.009645052254199982, -0.0018845908343791962, -3.93382906622719e-05, -2.3007127310847864e-05, -1.125129222869873, -1.1101796627044678, -0.0005704921204596758, -2.5239598751068115, -0.025754906237125397, -0.10637456923723221, -0.00013731967192143202, -0.0006404255982488394, -0.13401520252227783, -0.01519051007926464], "finish_reason": "stop"}, {"text": " report.split('\\n')", "tokens": [" report", ".", "split", "('", "\\", "n", "')", "\n"], "logprobs": [-0.026033811271190643, -0.00046754872892051935, -0.03575796261429787, -1.9627478122711182, -0.01565793715417385, -0.001260439632460475, -0.00160089076962322, -0.09768030792474747], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.4650143086910248, -0.0025284483563154936], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.0018242637161165476, -0.0009783487766981125, -0.06482373923063278, -0.002862405963242054], "finish_reason": "stop"}, {"text": " line.split(\"  \")", "tokens": [" line", ".", "split", "(", "\"", "  ", "\"", ")", "\n"], "logprobs": [-0.22050593793392181, -0.0003231241717003286, -0.384300172328949, -0.4935106337070465, -0.07746417075395584, -1.493436574935913, -0.009061876684427261, -0.010543123818933964, -0.018072811886668205], "finish_reason": "stop"}, {"text": " parts[0] == \"precision\":", "tokens": [" parts", "[", "0", "]", " ==", " \"", "precision", "\":", "\n"], "logprobs": [-1.301625370979309, -0.3237442970275879, -0.08222947269678116, -0.009777984581887722, -0.559246301651001, -0.09701301157474518, -0.5889153480529785, -0.04825148731470108, -0.041529521346092224], "finish_reason": "stop"}, {"text": " \" \".join(parts[:2])", "tokens": [" \"", " \"", ".", "join", "(", "parts", "[:", "2", "])", "\n"], "logprobs": [-1.1805195808410645, -0.5584343075752258, -0.002281683497130871, -0.0005615564878098667, -0.6896840929985046, -0.10210023075342178, -0.42691534757614136, -1.725332260131836, -0.1384272277355194, -1.3050920963287354], "finish_reason": "stop"}, {"text": " len(parts) == 6:  # Overall metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "6", ":", "  ", "#", " Overall", " metrics", "\n"], "logprobs": [-0.05018162727355957, -9.059865078597795e-06, -0.0003859252028632909, -0.00018880968855228275, -0.15394462645053864, -0.00035398892941884696, -1.3696190118789673, -0.023379378020763397, -0.021968934684991837, -1.549708758830093e-05, -0.3776209354400635, -0.08313808590173721, -0.03511570394039154], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.011317696422338486, -0.0007017772295512259, -0.11291062831878662, -0.0018005840247496963, -0.001007287879474461, -0.01945742592215538, -0.03154505044221878, -0.03130915388464928, -0.08016113936901093, -0.03336425498127937, -0.018515722826123238, -0.004137765150517225, -0.016125496476888657, -0.0040732999332249165, -0.011174947954714298, -0.008835860528051853, -0.052224256098270416, -0.18155060708522797, -0.011424360796809196, -0.00023993951617740095, -7.760223525110632e-05, -0.003768486902117729, -0.0032943999394774437, -0.0007048744591884315, -0.00250252615660429, -0.013559147715568542, -0.012845508754253387, -0.00032729512895457447, -0.0004138090298511088, -0.003235227195546031, -0.038188181817531586, -0.0031557304318994284, -0.010578864254057407, -0.02247108705341816, -0.028368519619107246, -0.0026655402034521103], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.24555209279060364, -0.24708113074302673], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00014029949670657516, -0.00012182447244413197, -0.006609720177948475, -1.5497195136049413e-06, -1.07287787614041e-05, -7.152531907195225e-06, -0.03645027056336403, -0.0022332745138555765], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.009606089442968369, -0.005224859807640314, -0.0010114560136571527, -0.00037531962152570486, -0.00017033556650858372, -3.981510963058099e-05, -0.0010189585154876113, -0.0020673349499702454, -1.0371154530730564e-05, -1.6689160474925302e-05, -8.344646857949556e-07, -0.0020224847830832005, -0.018114255741238594], "finish_reason": "stop"}, {"text": " formatted_report<|endoftext|># -------------------------------------------------------------------------", "tokens": [" formatted", "_", "report", "<", "|", "end", "of", "text", "|>", "#", " ", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "-", "\n"], "logprobs": [-0.015551839955151081, -1.823885577323381e-05, -9.154854342341423e-05, -1.082679271697998, -1.5497195136049413e-06, -1.4305104514278355e-06, -0.00016211149340961128, -5.8530047681415454e-05, -0.15374593436717987, -1.2939071655273438, -3.3621482849121094, -1.741919994354248, -0.18786808848381042, -0.014384739100933075, -0.024489156901836395, -0.02055591531097889, -0.018047289922833443, -0.01955738104879856, -0.008113638497889042, -0.013901552185416222, -0.012642241083085537, -0.017553336918354034, -0.01361841894686222, -0.021920770406723022, -0.008881470188498497, -0.014933462254703045, -0.012525700032711029, -0.020465869456529617, -0.018969548866152763, -0.017431626096367836, -0.03527694195508957, -0.027911752462387085, -0.03283432126045227, -0.029949773102998734, -0.11354409158229828, -2.31961727142334, -0.004944715183228254], "finish_reason": "stop"}], "metrics": {"energy": 488.9697298898699, "energy_per_token": 1.5824263103232035, "time": 20.78263, "time_per_token": 0.06725770226537217}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -0.2547481656074524, -0.017102263867855072], "finish_reason": "stop"}, {"text": " target_column not in df:", "tokens": [" target", "_", "column", " not", " in", " df", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -1.6560195684432983, -0.0054494403302669525], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' not found in CSV file.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -0.0667305514216423, -0.4145618677139282, -0.07176276296377182, -1.0824946165084839, -0.06585410982370377, -0.6737578511238098, -0.000742398202419281, -0.0007391819381155074, -2.3007127310847864e-05, -0.00015245705435518175, -0.001574111171066761, -0.042515963315963745, -0.02672591805458069, -0.09465834498405457, -0.5186460614204407, -7.879423355916515e-05, -0.037159670144319534, -0.3074966371059418, -0.016862468793988228, -0.0002917817619163543, -0.0026200036518275738], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.004214216023683548, -0.014537486247718334, -0.06773646175861359, -0.13236375153064728, -0.7748643159866333, -1.168244216387393e-05, -2.1219027985353023e-05, -0.00043335105874575675, -0.003440653206780553, -0.006637904793024063, -0.006397719029337168, -0.012524993158876896, -0.04928375035524368], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.006380543578416109, -0.042553093284368515, -0.0006114759016782045, -5.8412379075889476e-06, -8.344646857949556e-07, -0.00025245340657420456, -0.05078426003456116], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0014467497821897268, -4.6132929128361866e-05, -0.0035253537353128195, -0.0013853248674422503, -0.0023419829085469246, -7.211902266135439e-05, -0.0004800597671419382, -6.41325386823155e-05, -0.0014577010879293084, -3.0397906812140718e-05, -0.00022492263815365732, -0.001100649475120008, -0.014757870696485043, -1.1920922133867862e-06, -2.0503786799963564e-05, -1.6689286894688848e-06, -5.602820692729438e-06, -8.689979586051777e-05, -0.18525005877017975, -0.00048601735034026206, -0.01148929726332426, -0.00047350639943033457, -0.021610382944345474, -1.3828182090946939e-05, -3.93382906622719e-05, -0.0045343199744820595, -0.006883005611598492, -3.755022044060752e-05, -1.3828182090946939e-05, -0.29116353392601013, -0.10402704775333405, -3.576278118089249e-07, -7.033323527139146e-06, -0.00033504117163829505, -0.30618107318878174, -0.01826409250497818, -0.11484022438526154, -0.002492894185706973], "finish_reason": "stop"}, {"text": "", "tokens": ["\n"], "logprobs": [-1.804167628288269], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0015354283386841416, -4.0531076592742465e-06, -0.00010406429646536708, -5.340433563105762e-05, -2.264974000354414e-06, -0.001302228425629437, -0.05813029035925865, -1.6689286894688848e-06, -0.00014983485743869096, -5.94836674281396e-05, -0.006549203768372536, -0.005978202912956476, -9.83428253675811e-05, -2.50339189733495e-06, -0.0016661108238622546, -0.15769438445568085, -0.007584111299365759], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00011884459672728553, -5.1973900554003194e-05, -0.0006679449579678476, -0.013766227290034294, -0.0003695997002068907, -0.001396872103214264, -0.001663373550400138, -0.0007627676823176444, -1.823885577323381e-05, -0.0004294188693165779, -0.001869717612862587], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.001167926355265081, -1.1920922133867862e-06, -6.318072337307967e-06, -0.0004114258335903287, -0.0007752750534564257, -0.0006059955921955407, -0.0004766043566633016, -0.0015503065660595894, -0.00021181246847845614, -0.0009161804337054491], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred, output_dict=True)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ",", " output", "_", "dict", "=", "True", ")", "\n"], "logprobs": [-0.0248855147510767, -4.768370445162873e-07, -2.7418097943154862e-06, -0.00010227633902104571, -0.20209747552871704, -0.00029094755882397294, -0.008577764965593815, -0.008485453203320503, -0.0016844383208081126, -4.279521817807108e-05, -1.7165990357170813e-05, -1.0668007135391235, -0.9556196928024292, -1.0013530300057027e-05, -0.09967121481895447, -0.0005807381821796298, -0.003939369227737188, -0.016140276566147804, -0.0040609524585306644], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.028926881030201912, -0.0005360596696846187, -0.03665277734398842, -0.47709959745407104, -0.0019612142350524664, -0.030948275700211525, -0.001582085620611906, -0.0018939905567094684, -0.059759095311164856, -0.04460974782705307], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.4320359528064728, -0.0029302777256816626], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.0017767847748473287, -0.0009233264136128128, -0.07540009915828705, -0.0024278471246361732], "finish_reason": "stop"}, {"text": " \"   \".join(line.split())", "tokens": [" \"", "   ", "\"", ".", "join", "(", "line", ".", "split", "())", "\n"], "logprobs": [-3.129667043685913, -3.4378771781921387, -0.022567477077245712, -0.0020944580901414156, -0.001046705641783774, -0.03726912662386894, -0.060512080788612366, -0.000393432448618114, -0.07764475792646408, -0.1809520423412323, -0.5638260841369629], "finish_reason": "stop"}, {"text": " len(parts) >= 4:", "tokens": [" len", "(", "parts", ")", " >=", " ", "4", ":", "\n"], "logprobs": [-0.4552745223045349, -2.7179348762729205e-05, -0.0011024356354027987, -0.005433434154838324, -1.2478817701339722, -0.0012949660886079073, -1.6508482694625854, -0.13774628937244415, -0.08826913684606552], "finish_reason": "stop"}, {"text": " f\"{parts[1]} {parts[2]} {parts[3]} {parts[4]}\"", "tokens": [" f", "\"", "{", "parts", "[", "1", "]}", " {", "parts", "[", "2", "]}", " {", "parts", "[", "3", "]}", " {", "parts", "[", "4", "]}", "\"", "\n"], "logprobs": [-0.714662492275238, -0.05457363277673721, -0.5648407936096191, -0.009935331530869007, -0.01965159922838211, -2.05281662940979, -0.364343523979187, -0.9540101885795593, -0.0806080773472786, -0.005519270431250334, -0.4591701328754425, -0.14892525970935822, -0.09899488091468811, -0.003159057814627886, -0.000532008707523346, -0.0526372566819191, -0.04722611978650093, -0.17967064678668976, -0.02461606077849865, -0.018979843705892563, -0.041084907948970795, -0.1060905009508133, -0.21211011707782745, -0.0766049325466156], "finish_reason": "stop"}, {"text": " len(parts) == 10:  # Overall metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "1", "0", ":", "  ", "#", " Overall", " metrics", "\n"], "logprobs": [-0.04957455024123192, -9.417489309271332e-06, -0.00034278715611435473, -0.0001991788885788992, -0.15190692245960236, -0.00030787018476985395, -1.9361134767532349, -1.1852761507034302, -0.02556598372757435, -0.05123206228017807, -1.1801649634435307e-05, -0.3023526668548584, -0.04721815884113312, -0.03583582863211632], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.010652465745806694, -0.0006623458466492593, -0.11657007783651352, -0.0015116228023543954, -0.0011616155970841646, -0.018168926239013672, -0.030055394396185875, -0.025795219466090202, -0.08322299271821976, -0.03323361277580261, -0.01661171391606331, -0.003971903584897518, -0.013557030819356441, -0.004203057382255793, -0.010692448355257511, -0.007928093895316124, -0.05566287413239479, -0.16656772792339325, -0.0122089684009552, -0.00019226610311307013, -0.00014554394874721766, -0.004161745775490999, -0.0021212236024439335, -0.0006409021443687379, -0.0027132148388773203, -0.013732010498642921, -0.0130152003839612, -0.00030763185350224376, -0.00033206192892976105, -0.0031083147041499615, -0.02585562877357006, -0.003021201817318797, -0.010470929555594921, -0.018684571608901024, -0.03190756216645241, -0.002063527936115861], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.2531834542751312, -0.22263282537460327], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00012051333033014089, -0.00012289722508285195, -0.004317605402320623, -1.6689286894688848e-06, -1.5139465176616795e-05, -8.22540732769994e-06, -0.0327262245118618, -0.0021089711226522923], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.009671851992607117, -0.0037563731893897057, -0.000788258679676801, -0.0004316828562878072, -0.00017832119192462415, -3.707340147229843e-05, -0.0010557560017332435, -0.0021151569671928883, -1.2397689715726301e-05, -1.7046782886609435e-05, -9.536738616588991e-07, -0.0020354522857815027, -0.020186107605695724], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.017482349649071693, -1.9311717551317997e-05, -0.00011288482346571982, -0.8294031023979187], "finish_reason": "stop"}], "metrics": {"energy": 449.6299414806368, "energy_per_token": 1.5139055268708308, "time": 20.134167, "time_per_token": 0.06779180808080809}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -0.2547481656074524, -0.017102263867855072], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -0.21264879405498505, -0.01142471469938755, -0.002662686863914132, -0.004421933554112911], "finish_reason": "stop"}, {"text": " ValueError(f\"Invalid column name '{target_column}'.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Invalid", " column", " name", " '", "{", "target", "_", "column", "}'", ".", "\"", ")", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -0.0667305514216423, -0.4145618677139282, -0.07176276296377182, -3.5107479095458984, -2.502228021621704, -0.09309490025043488, -2.0155653953552246, -0.005747577641159296, -0.0012467476772144437, -1.645074735279195e-05, -0.00019798702851403505, -0.012364520691335201, -0.5003736615180969, -0.6946614384651184, -0.003970716148614883, -0.005569417029619217], "finish_reason": "stop"}, {"text": " df.drop(columns=target_column)", "tokens": [" df", ".", "drop", "(", "columns", "=", "target", "_", "column", ")", "\n"], "logprobs": [-0.004214216023683548, -0.014537486247718334, -0.06773646175861359, -0.13236375153064728, -0.6303597688674927, -0.8047193288803101, -0.0059044938534498215, -6.270212179515511e-05, -1.8954096958623268e-05, -0.3300885856151581, -0.03770878538489342], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.008703630417585373, -0.04844491928815842, -0.000686767278239131, -8.106198947643861e-06, -8.344646857949556e-07, -0.00026592056383378804, -0.0508439727127552], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.0013858010061085224, -5.352353764465079e-05, -0.005182878579944372, -0.0012755600037053227, -0.0020247451029717922, -8.606540359323844e-05, -0.0004334702098276466, -6.5205356804654e-05, -0.0015245969407260418, -2.5629668016335927e-05, -0.00023672162205912173, -0.0012677022023126483, -0.017665429040789604, -1.4305104514278355e-06, -2.0503786799963564e-05, -1.7881377516459906e-06, -5.602820692729438e-06, -0.00010668662434909493, -1.6619495153427124], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=0)", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.15055759251117706, -0.00048232366680167615, -0.021765880286693573, -1.5139465176616795e-05, -2.90866428258596e-05, -0.0017830915749073029, -0.004513077903538942, -1.490105023549404e-05, -5.125986263010418e-06, -0.04695943370461464, -0.06977871060371399, -3.576278118089249e-07, -5.8412379075889476e-06, -0.0002087136817863211, -2.2295734882354736, -0.7031955718994141, -0.002586236223578453], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0014459164813160896, -3.576272320060525e-06, -0.00011097769311163574, -4.565611743601039e-05, -2.50339189733495e-06, -0.0012329365126788616, -0.06425555795431137, -1.4305104514278355e-06, -0.00013195598148740828, -5.6622808187967166e-05, -0.007112185470759869, -0.006426975596696138, -0.00012730741582345217, -2.50339189733495e-06, -0.001517693279311061, -0.13770079612731934, -0.007317881565541029], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00013219437096267939, -4.9470632802695036e-05, -0.0007018963224254549, -0.01366510335355997, -0.00044383687782101333, -0.001359610934741795, -0.001644212519749999, -0.0008076743106357753, -2.1815061700181104e-05, -0.0004988856380805373, -0.0018461579456925392], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0016578990034759045, -1.1920922133867862e-06, -6.6756979322235566e-06, -0.00044705410255119205, -0.0006548406090587378, -0.0006906984490342438, -0.0006212450098246336, -0.0018804263090714812, -0.00020632999076042324, -0.0008379285573028028], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.027436334639787674, -4.768370445162873e-07, -2.622600959512056e-06, -0.00015162272029556334, -0.1529451161623001, -0.0003280101518612355, -0.00630473205819726, -0.006651286501437426, -0.0017736908048391342, -3.71926071238704e-05, -2.038458114839159e-05, -0.40842205286026, -0.017810063436627388], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.02578987553715706, -0.0006413786904886365, -0.035062987357378006, -0.5045933127403259, -0.0015870844945311546, -0.026508620008826256, -0.0015816095983609557, -0.0016903887735679746, -0.0661424770951271, -0.046458277851343155], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.48849722743034363, -0.00296106212772429], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.001540784491226077, -0.000746448349673301, -0.06343278288841248, -0.0021964015904814005], "finish_reason": "stop"}, {"text": " line.split(\"  \")", "tokens": [" line", ".", "split", "(", "\"", "  ", "\"", ")", "\n"], "logprobs": [-0.2518426775932312, -0.000342191313393414, -0.3923391103744507, -0.5044703483581543, -0.07710875570774078, -1.4241554737091064, -0.011279860511422157, -0.012854806147515774, -0.014223506674170494], "finish_reason": "stop"}, {"text": " len(parts) == 0:", "tokens": [" len", "(", "parts", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-0.37598901987075806, -2.8729025871143676e-05, -0.0014432977186515927, -0.005167698487639427, -1.1928372383117676, -0.0006113567505963147, -1.5650871992111206, -0.06984485685825348, -0.0867803692817688], "finish_reason": "stop"}, {"text": " (", "tokens": [" (", "\n"], "logprobs": [-2.790419578552246, -0.03325794264674187], "finish_reason": "stop"}, {"text": " len(parts) == 6:  # Overall metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "6", ":", "  ", "#", " Overall", " metrics", "\n"], "logprobs": [-0.04939960315823555, -9.298280929215252e-06, -0.0004024887748528272, -0.00018046658078674227, -0.1582133173942566, -0.0002669931564014405, -1.325075387954712, -0.020773926749825478, -0.020960021764039993, -1.0251946150674485e-05, -0.35916033387184143, -0.08658918738365173, -0.04148858040571213], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.012217682786285877, -0.0006876011611893773, -0.1367829591035843, -0.0016095790779218078, -0.0010920758359134197, -0.018493955954909325, -0.030681950971484184, -0.026202905923128128, -0.08350057899951935, -0.028967414051294327, -0.017639661207795143, -0.00472322478890419, -0.014942740090191364, -0.0039056462701410055, -0.012026065960526466, -0.008574101142585278, -0.0523749515414238, -0.1992301344871521, -0.01354068424552679, -0.0002779574424494058, -7.92710343375802e-05, -0.004646694287657738, -0.0033545196056365967, -0.0007982643437571824, -0.002484808210283518, -0.017219094559550285, -0.017651256173849106, -0.0002964295563288033, -0.00044645831803791225, -0.0030840712133795023, -0.03361810743808746, -0.003379231784492731, -0.010662962682545185, -0.02295236475765705, -0.03454478085041046, -0.0022741903085261583], "finish_reason": "stop"}, {"text": " \" \".join(parts)  # All other lines", "tokens": [" \"", " \"", ".", "join", "(", "parts", ")", "  ", "#", " All", " other", " lines", "\n"], "logprobs": [-2.3228278160095215, -0.721700131893158, -0.00867538619786501, -0.00013064485392533243, -0.005094760097563267, -0.02529636211693287, -0.018874332308769226, -1.277608871459961, -0.0001234931987710297, -4.152884483337402, -0.07404547929763794, -0.10665919631719589, -0.8543466925621033], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00012694983161054552, -0.00011824862303910777, -0.004897621460258961, -1.6689286894688848e-06, -9.059865078597795e-06, -7.271740287251305e-06, -0.037049975246191025, -0.0028423171024769545], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.008569137193262577, -0.004364132881164551, -0.0008275659638457, -0.0004318020073696971, -0.0002108589978888631, -3.9219088648678735e-05, -0.001057304092682898, -0.0020411626901477575, -1.4185804502631072e-05, -1.9073304429184645e-05, -9.536738616588991e-07, -0.0023271164391189814, -0.022015348076820374], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.014874622225761414, -1.2874520507466514e-05, -7.652943895664066e-05, -0.9117268919944763], "finish_reason": "stop"}], "metrics": {"energy": 384.30813649845106, "energy_per_token": 1.428654782522123, "time": 17.436628, "time_per_token": 0.06482017843866171}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -0.2547481656074524, -0.017102263867855072], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -0.21264879405498505, -0.01142471469938755, -0.002662686863914132, -0.004421933554112911], "finish_reason": "stop"}, {"text": " ValueError(\"The specified target column is not found in the CSV file.\")", "tokens": [" Value", "Error", "(", "\"", "The", " specified", " target", " column", " is", " not", " found", " in", " the", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -0.0667305514216423, -1.210198998451233, -1.529895544052124, -0.16234983503818512, -0.06320720165967941, -0.6496051549911499, -0.5888094902038574, -0.013379080221056938, -0.15827354788780212, -0.08118297904729843, -0.024018974974751472, -0.09843780100345612, -0.0003131137927994132, -0.02260640449821949, -0.10289472341537476, -0.03209783136844635, -0.0006861716392450035, -0.0039724973030388355], "finish_reason": "stop"}, {"text": " df.drop(columns=target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "columns", "=", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.004148805979639292, -0.012523227371275425, -0.0718560665845871, -0.142867311835289, -0.5685609579086304, -0.8137447834014893, -0.004832611884921789, -5.400034933700226e-05, -2.0861407392658293e-05, -1.4922611713409424, -0.05683517828583717, -0.003260892815887928, -0.012681791558861732, -0.005836231168359518, -0.057248082011938095], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.006428396794945002, -0.0493600033223629, -0.0004925706889480352, -6.9141146923357155e-06, -8.344646857949556e-07, -0.000251142424531281, -0.05520171299576759], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0014280608156695962, -4.303362584323622e-05, -0.004025214817374945, -0.0011882871622219682, -0.002415836090222001, -6.925819616299123e-05, -0.0007284610182978213, -5.8410845667822286e-05, -0.001608269871212542, -2.658331868587993e-05, -0.0002335037279408425, -0.0012305553536862135, -0.015484701842069626, -9.536738616588991e-07, -2.8132995794294402e-05, -1.9073468138230965e-06, -5.960446742392378e-06, -9.536288416711614e-05, -0.19673502445220947, -0.00042429505265317857, -0.011826165951788425, -0.0004681444843299687, -0.021951207891106606, -1.2397689715726301e-05, -3.325883881188929e-05, -0.00392072694376111, -0.008649858646094799, -3.886147169396281e-05, -1.4543427823809907e-05, -0.303192138671875, -0.09921339899301529, -3.576278118089249e-07, -7.748573807475623e-06, -0.00036864637513644993, -0.3346468210220337, -0.018130410462617874, -0.11424171179533005, -0.0024108411744236946], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=123, shuffle=True)", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "1", "2", "3", ",", " shuffle", "=", "True", ")", "\n"], "logprobs": [-0.1577775627374649, -0.0004832768754567951, -0.02401816099882126, -1.0609570381348021e-05, -2.706014311115723e-05, -0.0017957051750272512, -0.0039177583530545235, -1.3470558769768104e-05, -5.125986263010418e-06, -0.0473032109439373, -0.08015938103199005, -2.3841855067985307e-07, -5.364403477869928e-06, -0.00020895205670967698, -2.0942182540893555, -1.071030855178833, -0.03489423543214798, -2.2567191123962402, -0.6795492768287659, -0.0004129749140702188, -0.03290007263422012, -0.9477063417434692, -0.0033621233887970448], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.001500910148024559, -3.6954811548639555e-06, -9.226373367710039e-05, -4.541770613286644e-05, -2.622600959512056e-06, -0.0013806821079924703, -0.06252925843000412, -1.311301275563892e-06, -0.00013851160474587232, -5.304672595229931e-05, -0.005774957127869129, -0.006163636222481728, -0.0001110968878492713, -2.3841830625315197e-06, -0.0018008219776675105, -0.1533818542957306, -0.009406532160937786], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00011669908417388797, -4.875540980719961e-05, -0.000898077036254108, -0.012984959408640862, -0.0003302744007669389, -0.001359610934741795, -0.0019913145806640387, -0.0009319015080109239, -1.6689160474925302e-05, -0.0004332319076638669, -0.0019633558113127947], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0013737775152549148, -1.5497195136049413e-06, -5.960446742392378e-06, -0.0004161922261118889, -0.0008456706418655813, -0.0007362039177678525, -0.0005407063290476799, -0.0015595904551446438, -0.000248043768806383, -0.0008515069494023919], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.030219299718737602, -4.768370445162873e-07, -2.9802276912960224e-06, -0.00013314791431184858, -0.18466557562351227, -0.00025376438861712813, -0.007845776155591011, -0.006176905706524849, -0.0016233850037679076, -3.611976353568025e-05, -2.1576648578047752e-05, -0.4740465581417084, -0.01785350777208805], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.028530731797218323, -0.0005831210291944444, -0.03343515843153, -0.4663574695587158, -0.002163333585485816, -0.02949361316859722, -0.0017028844449669123, -0.001583870965987444, -0.04846945032477379, -0.03924669697880745], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.4768999218940735, -0.0028606229461729527], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.0019025574438273907, -0.0011081513948738575, -0.0653063952922821, -0.0024704195093363523], "finish_reason": "stop"}, {"text": " line.strip().split(\" \")", "tokens": [" line", ".", "strip", "()", ".", "split", "(", "\"", " \"", ")", "\n"], "logprobs": [-0.1828213632106781, -0.00038842763751745224, -1.3893612623214722, -0.011307441629469395, -0.0003415954706724733, -0.015132507309317589, -0.5485503673553467, -0.06691820919513702, -0.7134222984313965, -0.012413619086146355, -0.009521784260869026], "finish_reason": "stop"}, {"text": " len(parts) >= 2:", "tokens": [" len", "(", "parts", ")", " >=", " ", "2", ":", "\n"], "logprobs": [-0.4114905893802643, -3.1709168979432434e-05, -0.0009216589969582856, -0.005418495275080204, -1.1167681217193604, -0.0012840130366384983, -1.70047926902771, -0.22877247631549835, -0.05200326070189476], "finish_reason": "stop"}, {"text": " \"\"", "tokens": [" \"", "\"", "\n"], "logprobs": [-1.0373730659484863, -3.077548027038574, -0.5752074718475342], "finish_reason": "stop"}, {"text": " len(parts) == 3:  # Overall metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "3", ":", "  ", "#", " Overall", " metrics", "\n"], "logprobs": [-0.05193479359149933, -7.748573807475623e-06, -0.00039962888695299625, -0.00018654513405635953, -0.1760396510362625, -0.00028880240279249847, -2.1049633026123047, -0.028526561334729195, -0.02415594458580017, -9.536697689327411e-06, -0.5014634728431702, -0.09574446082115173, -0.041877344250679016], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.010763446800410748, -0.0008010039455257356, -0.12177054584026337, -0.001334848813712597, -0.001053493469953537, -0.017503201961517334, -0.031020045280456543, -0.03611883521080017, -0.08398230373859406, -0.035822026431560516, -0.019616298377513885, -0.0065450589172542095, -0.01441517286002636, -0.003819909179583192, -0.0101618068292737, -0.008572682738304138, -0.052756793797016144, -0.153734490275383, -0.01056187879294157, -0.0002162222663173452, -7.748303323751315e-05, -0.0034667886793613434, -0.003012050176039338, -0.0006970121758058667, -0.003349886042997241, -0.015725063160061836, -0.014672941528260708, -0.0003110878460574895, -0.00027176024741493165, -0.003123525995761156, -0.030291469767689705, -0.0030666012316942215, -0.010965798981487751, -0.02325557917356491, -0.035152994096279144, -0.002534037223085761], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.22949890792369843, -0.2154799997806549], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00013100242358632386, -0.00010406429646536708, -0.0054294029250741005, -1.7881377516459906e-06, -1.07287787614041e-05, -6.9141146923357155e-06, -0.03970370069146156, -0.002553894417360425], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.010355786420404911, -0.0051302220672369, -0.0010473009897395968, -0.00036566724884323776, -0.00018606838420964777, -3.909988299710676e-05, -0.0009086770587600768, -0.0020586505997925997, -1.156323378381785e-05, -1.9311717551317997e-05, -1.0728830375228426e-06, -0.0019748962949961424, -0.022199230268597603], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.015283261425793171, -1.9430925021879375e-05, -8.570780482841656e-05, -0.8335204124450684], "finish_reason": "stop"}], "metrics": {"energy": 540.2388912887571, "energy_per_token": 1.8501331893450588, "time": 21.605877, "time_per_token": 0.07399272945205479}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -0.2547481656074524, -0.017102263867855072], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -0.21264879405498505, -0.01142471469938755, -0.002662686863914132, -0.004421933554112911], "finish_reason": "stop"}, {"text": " ValueError(f\"{target_column} is not a valid column name in the CSV file.\")", "tokens": [" Value", "Error", "(", "f", "\"", "{", "target", "_", "column", "}", " is", " not", " a", " valid", " column", " name", " in", " the", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -0.0667305514216423, -0.4145618677139282, -0.07176276296377182, -1.674442172050476, -0.00811493955552578, -9.476689592702314e-05, -0.0006124289939180017, -0.0488431379199028, -1.0522453784942627, -0.017976105213165283, -0.8328342437744141, -0.868680477142334, -0.13397756218910217, -0.415133535861969, -2.533083915710449, -0.24188411235809326, -0.26976278424263, -0.00010239553375868127, -0.034931302070617676, -0.3522656261920929, -0.06123781576752663, -0.000691770575940609, -0.004612045828253031], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column, 'Date'])", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", ",", " '", "Date", "'])", "\n"], "logprobs": [-0.004214216023683548, -0.014537486247718334, -0.06773646175861359, -0.13236375153064728, -0.6303597688674927, -0.6138852834701538, -0.011823338456451893, -4.172316494077677e-06, -1.4781842764932662e-05, -2.8995213508605957, -0.9036796689033508, -4.672101020812988, -0.24936729669570923, -0.10294322669506073], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.008703630417585373, -0.04844491928815842, -0.000686767278239131, -8.106198947643861e-06, -8.344646857949556e-07, -0.00026592056383378804, -0.0508439727127552], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0013858010061085224, -5.352353764465079e-05, -0.005182878579944372, -0.0012755600037053227, -0.0020247451029717922, -8.606540359323844e-05, -0.0004334702098276466, -6.5205356804654e-05, -0.0015245969407260418, -2.5629668016335927e-05, -0.00023672162205912173, -0.0012677022023126483, -0.017665429040789604, -1.4305104514278355e-06, -2.0503786799963564e-05, -1.7881377516459906e-06, -5.602820692729438e-06, -0.00010668662434909493, -0.2115253210067749, -0.00044526674901135266, -0.011432257480919361, -0.00045062878052704036, -0.025859113782644272, -1.764281842042692e-05, -3.266281055402942e-05, -0.004015597980469465, -0.007958725094795227, -2.8967437174287625e-05, -1.2278481335670222e-05, -0.3398812413215637, -0.09455705434083939, -3.576278118089249e-07, -7.629365427419543e-06, -0.00036113892565481365, -0.35296037793159485, -0.0186898373067379, -0.12401870638132095, -0.0023570870980620384], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=0, stratify=y", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "0", ",", " strat", "ify", "=", "y", "\n"], "logprobs": [-0.15055759251117706, -0.00048232366680167615, -0.021765880286693573, -1.5139465176616795e-05, -2.90866428258596e-05, -0.0017830915749073029, -0.004513077903538942, -1.490105023549404e-05, -5.125986263010418e-06, -0.04695943370461464, -0.06977871060371399, -3.576278118089249e-07, -5.8412379075889476e-06, -0.0002087136817863211, -2.2295734882354736, -1.4919662475585938, -0.7306817770004272, -0.015798168256878853, -0.0005894353962503374, -0.017022691667079926, -0.4518272280693054], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0014459164813160896, -3.576272320060525e-06, -0.00011097769311163574, -4.565611743601039e-05, -2.50339189733495e-06, -0.0012329365126788616, -0.06425555795431137, -1.4305104514278355e-06, -0.00013195598148740828, -5.6622808187967166e-05, -0.007112185470759869, -0.006426975596696138, -0.00012730741582345217, -2.50339189733495e-06, -0.001517693279311061, -0.13770079612731934, -0.007317881565541029], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00013219437096267939, -4.9470632802695036e-05, -0.0007018963224254549, -0.01366510335355997, -0.00044383687782101333, -0.001359610934741795, -0.001644212519749999, -0.0008076743106357753, -2.1815061700181104e-05, -0.0004988856380805373, -0.0018461579456925392], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0016578990034759045, -1.1920922133867862e-06, -6.6756979322235566e-06, -0.00044705410255119205, -0.0006548406090587378, -0.0006906984490342438, -0.0006212450098246336, -0.0018804263090714812, -0.00020632999076042324, -0.0008379285573028028], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.027436334639787674, -4.768370445162873e-07, -2.622600959512056e-06, -0.00015162272029556334, -0.1529451161623001, -0.0003280101518612355, -0.00630473205819726, -0.006651286501437426, -0.0017736908048391342, -3.71926071238704e-05, -2.038458114839159e-05, -0.40842205286026, -0.017810063436627388], "finish_reason": "stop"}, {"text": " report.split('\\n')", "tokens": [" report", ".", "split", "('", "\\", "n", "')", "\n"], "logprobs": [-0.02578987553715706, -0.0006413786904886365, -0.035062987357378006, -1.7389302253723145, -0.01720503345131874, -0.0011719746980816126, -0.0017063356935977936, -0.08703391999006271], "finish_reason": "stop"}, {"text": " [\"class %s %s %s %s %s\" % line.strip().split() for line in lines[1:-1]]", "tokens": [" [", "\"", "class", " %", "s", " %", "s", " %", "s", " %", "s", " %", "s", "\"", " %", " line", ".", "strip", "()", ".", "split", "()", " for", " line", " in", " lines", "[", "1", ":-", "1", "]]", "\n"], "logprobs": [-1.22636878490448, -1.8793351650238037, -1.4816803932189941, -3.4096686840057373, -0.28479069471359253, -0.9030866026878357, -0.07344341278076172, -0.6032330989837646, -0.006061859428882599, -0.06364678591489792, -0.007322852034121752, -0.09715873003005981, -0.06575912982225418, -0.45931103825569153, -0.016978038474917412, -1.9842079877853394, -0.010643855668604374, -2.2569022178649902, -0.03272218629717827, -0.014447955414652824, -0.015499960631132126, -0.8920411467552185, -0.19031837582588196, -0.007583401631563902, -0.0005554801900871098, -0.0007375142886303365, -0.9621227979660034, -0.40937143564224243, -0.4725739061832428, -0.26201552152633667, -0.030414631590247154, -0.03654739260673523], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.0019321836298331618, -0.0008791395812295377, -0.06238008663058281, -0.0024579332675784826], "finish_reason": "stop"}, {"text": " line.strip().split()", "tokens": [" line", ".", "strip", "()", ".", "split", "()", "\n"], "logprobs": [-0.21916913986206055, -0.00042274597217328846, -1.2579782009124756, -0.012556190602481365, -0.00033122775494121015, -0.016721097752451897, -0.8189337253570557, -0.010543476790189743], "finish_reason": "stop"}, {"text": " len(parts) >= 8:", "tokens": [" len", "(", "parts", ")", " >=", " ", "8", ":", "\n"], "logprobs": [-0.46716198325157166, -2.8729025871143676e-05, -0.0008490057080052793, -0.005466038826853037, -1.190311312675476, -0.0013743727467954159, -2.9701311588287354, -0.0885840579867363, -0.1447441577911377], "finish_reason": "stop"}, {"text": " (", "tokens": [" (", "\n"], "logprobs": [-2.667961597442627, -0.030974626541137695], "finish_reason": "stop"}, {"text": " len(parts) == 4:  # Class-independent metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "4", ":", "  ", "#", " Class", "-", "independent", " metrics", "\n"], "logprobs": [-0.0516773946583271, -7.986990567587782e-06, -0.000506511190906167, -0.00019536493346095085, -0.15555422008037567, -0.0003022690652869642, -2.1662774085998535, -0.016586387529969215, -0.012936947867274284, -9.417489309271332e-06, -2.307121753692627, -0.038817692548036575, -3.2560129165649414, -0.061426956206560135, -0.024675609543919563], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.009726159274578094, -0.0007389436941593885, -0.12553152441978455, -0.0019361099693924189, -0.0010824303608387709, -0.017640363425016403, -0.03219745308160782, -0.028101740404963493, -0.08021879196166992, -0.037595588713884354, -0.017820017412304878, -0.004083866253495216, -0.023227160796523094, -0.004399264696985483, -0.010348590090870857, -0.00891774334013462, -0.056608330458402634, -0.17163389921188354, -0.012337792664766312, -0.0002683041093405336, -7.1403817855753e-05, -0.004276298452168703, -0.00306018372066319, -0.000834117061458528, -0.002680045086890459, -0.014834923669695854, -0.014346901327371597, -0.0003129946126136929, -0.0005192600074224174, -0.0030434264335781336, -0.03872881829738617, -0.002948106499388814, -0.011256521567702293, -0.02148963324725628, -0.03434852510690689, -0.0026745761279016733], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.19347476959228516, -0.27284446358680725], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.0001433984871255234, -0.00011753345461329445, -0.004876031540334225, -1.7881377516459906e-06, -1.2040065485052764e-05, -7.748573807475623e-06, -0.03078657016158104, -0.00288011715747416], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.011730030179023743, -0.005454894155263901, -0.0009859706042334437, -0.00040558696491643786, -0.00018726025882642716, -4.458328112377785e-05, -0.0011462554102763534, -0.0022312526125460863, -1.4424220353248529e-05, -2.1219027985353023e-05, -8.344646857949556e-07, -0.0022658645175397396, -0.018784135580062866], "finish_reason": "stop"}, {"text": " formatted_report<|endoftext|>from ._base_api_impl import BaseApiImpl", "tokens": [" formatted", "_", "report", "<", "|", "end", "of", "text", "|>", "from", " ", ".", "_", "base", "_", "api", "_", "impl", " import", " Base", "Api", "Impl", "\n"], "logprobs": [-0.01477643009275198, -1.7762025890988298e-05, -8.40390202938579e-05, -1.0418624877929688, -1.311301275563892e-06, -1.4305104514278355e-06, -0.00016985881666187197, -4.589452510117553e-05, -0.14885909855365753, -1.2694088220596313, -3.0208957195281982, -0.019914915785193443, -3.961717367172241, -2.420626401901245, -2.324122667312622, -4.987334251403809, -2.255486488342285, -3.59013295173645, -0.03928394615650177, -0.6526321172714233, -0.998822033405304, -0.11256513744592667, -0.142721489071846], "finish_reason": "stop"}], "metrics": {"energy": 487.8708373222355, "energy_per_token": 1.4391470127499573, "time": 21.852549, "time_per_token": 0.064461796460177}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -0.2547481656074524, -0.017102263867855072], "finish_reason": "stop"}, {"text": " target_column not in df:", "tokens": [" target", "_", "column", " not", " in", " df", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -1.6560195684432983, -0.0054494403302669525], "finish_reason": "stop"}, {"text": " ValueError(f\"The column {target_column} not found in the CSV file\")", "tokens": [" Value", "Error", "(", "f", "\"", "The", " column", " {", "target", "_", "column", "}", " not", " found", " in", " the", " CS", "V", " file", "\"", ")", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -0.0667305514216423, -0.4145618677139282, -0.07176276296377182, -2.240663528442383, -2.4921929836273193, -1.200904369354248, -0.0011129144113510847, -2.1457441107486375e-05, -0.0002965487365145236, -0.09592978656291962, -1.0393222570419312, -0.07119695842266083, -0.1552722454071045, -0.32296016812324524, -0.38456523418426514, -0.00023767507809679955, -0.03440174087882042, -1.7049790620803833, -0.0024969372898340225, -0.00601742509752512], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.004214216023683548, -0.014537486247718334, -0.06773646175861359, -0.13236375153064728, -0.7748643159866333, -1.168244216387393e-05, -2.1219027985353023e-05, -0.00043335105874575675, -0.003440653206780553, -0.006637904793024063, -0.006397719029337168, -0.012524993158876896, -0.04928375035524368], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.006380543578416109, -0.042553093284368515, -0.0006114759016782045, -5.8412379075889476e-06, -8.344646857949556e-07, -0.00025245340657420456, -0.05078426003456116], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0014467497821897268, -4.6132929128361866e-05, -0.0035253537353128195, -0.0013853248674422503, -0.0023419829085469246, -7.211902266135439e-05, -0.0004800597671419382, -6.41325386823155e-05, -0.0014577010879293084, -3.0397906812140718e-05, -0.00022492263815365732, -0.001100649475120008, -0.014757870696485043, -1.1920922133867862e-06, -2.0503786799963564e-05, -1.6689286894688848e-06, -5.602820692729438e-06, -8.689979586051777e-05, -0.18525005877017975, -0.00048601735034026206, -0.01148929726332426, -0.00047350639943033457, -0.021610382944345474, -1.3828182090946939e-05, -3.93382906622719e-05, -0.0045343199744820595, -0.006883005611598492, -3.755022044060752e-05, -1.3828182090946939e-05, -0.29116353392601013, -0.10402704775333405, -3.576278118089249e-07, -7.033323527139146e-06, -0.00033504117163829505, -0.30618107318878174, -0.01826409250497818, -0.11484022438526154, -0.002492894185706973], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42)", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.18287934362888336, -0.00047398300375789404, -0.024015599861741066, -1.1205610462639015e-05, -2.372236667724792e-05, -0.0015043619787320495, -0.005033439956605434, -1.4662635294371285e-05, -6.437280717364047e-06, -0.04322461411356926, -0.0653751865029335, -3.576278118089249e-07, -6.198863957251888e-06, -0.00022110878489911556, -0.2966461479663849, -0.015329751186072826, -0.9678463339805603, -0.0030718303751200438], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0015795861836522818, -4.6491513785440475e-06, -0.00012587709352374077, -4.362964682513848e-05, -2.622600959512056e-06, -0.0011945976875722408, -0.06853366643190384, -1.6689286894688848e-06, -0.00011491115583339706, -5.757642793469131e-05, -0.0065362947061657906, -0.005637934897094965, -9.274052717955783e-05, -2.861018856492592e-06, -0.0013731822837144136, -0.12914884090423584, -0.009440896101295948], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00010942813969450071, -4.827859811484814e-05, -0.0008585343020968139, -0.01406154315918684, -0.00042775063775479794, -0.0014369887067005038, -0.0017162130679935217, -0.0008704449282959104, -2.5033637939486653e-05, -0.0004408579843584448, -0.0020722122862935066], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0010339635191485286, -1.5497195136049413e-06, -7.748573807475623e-06, -0.00040534863364882767, -0.0006998711614869535, -0.0005988473421894014, -0.0005133026279509068, -0.0015029336791485548, -0.00023946279543451965, -0.0009062950266525149], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.028079718351364136, -4.768370445162873e-07, -2.9802276912960224e-06, -0.00013159839727450162, -0.14541034400463104, -0.0002908283786382526, -0.007789000868797302, -0.007301313802599907, -0.0018386616138741374, -3.015949550899677e-05, -2.5629668016335927e-05, -0.49983134865760803, -0.01877828687429428], "finish_reason": "stop"}, {"text": " report.splitlines()", "tokens": [" report", ".", "split", "lines", "()", "\n"], "logprobs": [-0.02843363955616951, -0.0005050813779234886, -0.03437363728880882, -1.4518415927886963, -0.06326539069414139, -0.0355803519487381], "finish_reason": "stop"}, {"text": " [", "tokens": [" [", "\n"], "logprobs": [-1.2026219367980957, -0.7289546132087708], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.0019365858752280474, -0.0007312007946893573, -0.054270170629024506, -0.002012848388403654], "finish_reason": "stop"}, {"text": " line.split(\" \")", "tokens": [" line", ".", "split", "(", "\"", " \"", ")", "\n"], "logprobs": [-0.19114123284816742, -0.0002843929105438292, -0.41276484727859497, -0.45899510383605957, -0.060473255813121796, -0.5705439448356628, -0.01650560088455677, -0.008395734243094921], "finish_reason": "stop"}, {"text": " parts:", "tokens": [" parts", ":", "\n"], "logprobs": [-1.4807897806167603, -1.7229204177856445, -0.04329916462302208], "finish_reason": "stop"}, {"text": " \" \".join(parts)", "tokens": [" \"", " \"", ".", "join", "(", "parts", ")", "\n"], "logprobs": [-1.2095658779144287, -0.5505162477493286, -0.0024900403805077076, -0.0006046851049177349, -0.6266820430755615, -0.10850699245929718, -1.812756061553955, -0.5007198452949524], "finish_reason": "stop"}, {"text": " len(parts) >= 16:  # Overall metrics", "tokens": [" len", "(", "parts", ")", " >=", " ", "1", "6", ":", "  ", "#", " Overall", " metrics", "\n"], "logprobs": [-0.05450274050235748, -7.629365427419543e-06, -0.00036435641231946647, -0.0002004899288294837, -2.4598357677459717, -0.0014397265622392297, -2.0916953086853027, -3.5363309383392334, -0.14317284524440765, -0.053598228842020035, -3.802703940891661e-05, -0.5558685064315796, -0.058463845402002335, -0.08832981437444687], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.009750005789101124, -0.0006972504197619855, -0.15466181933879852, -0.001734539750032127, -0.0012332937913015485, -0.018475700169801712, -0.03060264140367508, -0.026372088119387627, -0.08080250024795532, -0.029767774045467377, -0.018739445134997368, -0.0057001663371920586, -0.015004747547209263, -0.0036916458047926426, -0.011964933946728706, -0.008663685992360115, -0.052831538021564484, -0.16809718310832977, -0.012075652368366718, -0.00024136967840604484, -9.07141511561349e-05, -0.003894246881827712, -0.002898422535508871, -0.0009415484382770956, -0.0029622504953294992, -0.015310381539165974, -0.013812552206218243, -0.00037269797758199275, -0.0003449321957305074, -0.003243782324716449, -0.03396857529878616, -0.0031453920528292656, -0.011459716595709324, -0.021840061992406845, -0.03161954879760742, -0.002646517474204302], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.22007086873054504, -0.2237628698348999], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00016902448260225356, -0.00012814177898690104, -0.005904612597078085, -1.311301275563892e-06, -1.0132738680113107e-05, -6.6756979322235566e-06, -0.0349416621029377, -0.002678142860531807], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.011275970377027988, -0.0057104784063994884, -0.0010936238104477525, -0.00047672350774519145, -0.00020454221521504223, -3.8742269680369645e-05, -0.0009062950266525149, -0.0025100174825638533, -1.3470558769768104e-05, -1.8715683836489916e-05, -9.536738616588991e-07, -0.0023237864952534437, -0.020489228889346123], "finish_reason": "stop"}, {"text": " formatted_report<|endoftext|>#!/bin/python3", "tokens": [" formatted", "_", "report", "<", "|", "end", "of", "text", "|>", "#", "!", "/", "bin", "/", "python", "3", "\n"], "logprobs": [-0.015364970080554485, -2.062299427052494e-05, -9.297892393078655e-05, -1.170411467552185, -1.7881377516459906e-06, -1.4305104514278355e-06, -0.00016902448260225356, -6.007967749610543e-05, -0.1446835994720459, -1.3186765909194946, -1.2458621263504028, -0.04360391944646835, -2.3785386085510254, -9.703165414975956e-05, -0.39192458987236023, -0.07896201312541962, -0.0009276139317080379], "finish_reason": "stop"}], "metrics": {"energy": 439.6721435079574, "energy_per_token": 1.5109008367971044, "time": 18.906988, "time_per_token": 0.06497246735395189}}
{"outputs": [{"text": " pd.read_csv(csv_file_path, header=0, index_col=0)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ",", " header", "=", "0", ",", " index", "_", "col", "=", "0", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -1.5074431896209717, -2.4413414001464844, -0.01639971137046814, -0.4553142189979553, -0.8257656097412109, -0.5194277167320251, -1.0490362910786644e-05, -0.000271521887043491, -0.01720292493700981, -0.5971699357032776, -0.2790527045726776, -0.03298162296414375], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -0.21264879405498505, -0.01142471469938755, -0.002662686863914132, -0.004421933554112911], "finish_reason": "stop"}, {"text": " ValueError(\"Please specify a column name in the CSV file.\")", "tokens": [" Value", "Error", "(", "\"", "Please", " specify", " a", " column", " name", " in", " the", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -0.0667305514216423, -1.210198998451233, -3.8613812923431396, -0.47422611713409424, -0.24763499200344086, -2.9296233654022217, -0.6031812429428101, -2.486927032470703, -0.3742102384567261, -0.39098620414733887, -0.0004999579978175461, -0.06369231641292572, -1.266803503036499, -0.07395502924919128, -0.0009204680100083351, -0.006597996223717928], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column], axis=1)", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "]", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.004148805979639292, -0.012523227371275425, -0.0718560665845871, -0.142867311835289, -0.5685609579086304, -0.608109712600708, -0.009370630607008934, -3.4570634852570947e-06, -1.2040065485052764e-05, -2.8583693504333496, -0.012356161139905453, -0.09009149670600891, -0.003945306409150362, -0.008335916325449944, -0.006376990117132664, -0.04864444583654404], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.006428396794945002, -0.0493600033223629, -0.0004925706889480352, -6.9141146923357155e-06, -8.344646857949556e-07, -0.000251142424531281, -0.05520171299576759], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0014280608156695962, -4.303362584323622e-05, -0.004025214817374945, -0.0011882871622219682, -0.002415836090222001, -6.925819616299123e-05, -0.0007284610182978213, -5.8410845667822286e-05, -0.001608269871212542, -2.658331868587993e-05, -0.0002335037279408425, -0.0012305553536862135, -0.015484701842069626, -9.536738616588991e-07, -2.8132995794294402e-05, -1.9073468138230965e-06, -5.960446742392378e-06, -9.536288416711614e-05, -0.19673502445220947, -0.00042429505265317857, -0.011826165951788425, -0.0004681444843299687, -0.021951207891106606, -1.2397689715726301e-05, -3.325883881188929e-05, -0.00392072694376111, -0.008649858646094799, -3.886147169396281e-05, -1.4543427823809907e-05, -0.303192138671875, -0.09921339899301529, -3.576278118089249e-07, -7.748573807475623e-06, -0.00036864637513644993, -0.3346468210220337, -0.018130410462617874, -0.11424171179533005, -0.0024108411744236946], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42, stratify=y", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ",", " strat", "ify", "=", "y", "\n"], "logprobs": [-0.1577775627374649, -0.0004832768754567951, -0.02401816099882126, -1.0609570381348021e-05, -2.706014311115723e-05, -0.0017957051750272512, -0.0039177583530545235, -1.3470558769768104e-05, -5.125986263010418e-06, -0.0473032109439373, -0.08015938103199005, -2.3841855067985307e-07, -5.364403477869928e-06, -0.00020895205670967698, -0.29418280720710754, -0.016334740445017815, -1.2693452835083008, -0.8504064083099365, -0.018075739964842796, -0.0005156855913810432, -0.021233148872852325, -0.49561017751693726], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.001444130903109908, -3.576272320060525e-06, -0.00012230125139467418, -4.3987260141875595e-05, -2.861018856492592e-06, -0.0011491130571812391, -0.08081558346748352, -1.7881377516459906e-06, -0.00013350549852475524, -5.8053239627042785e-05, -0.0068207294680178165, -0.006992393173277378, -8.618460560683161e-05, -2.622600959512056e-06, -0.001857937895692885, -0.15864022076129913, -0.008441717363893986], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00011264643399044871, -5.090107151772827e-05, -0.0007768235518597066, -0.015004630200564861, -0.0004067785630468279, -0.0012163867941126227, -0.001706692622974515, -0.0008026715368032455, -1.8358061424805783e-05, -0.0004533693427219987, -0.0017575069796293974], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0011631635716184974, -1.1920922133867862e-06, -5.483612312673358e-06, -0.0004245333548169583, -0.0008896207436919212, -0.0006137394811958075, -0.0006211258587427437, -0.0018059387803077698, -0.0002101439022226259, -0.0008268513483926654], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.03335076570510864, -5.960462772236497e-07, -2.9802276912960224e-06, -0.00014161060971673578, -0.17219191789627075, -0.000302745756926015, -0.008301632478833199, -0.008411574177443981, -0.0016323111485689878, -4.136476854910143e-05, -2.539125671319198e-05, -0.46174201369285583, -0.018769394606351852], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.02571110613644123, -0.00048315772437490523, -0.03899461030960083, -0.5203141570091248, -0.0018651961581781507, -0.029825396835803986, -0.0019509821431711316, -0.0017058596713468432, -0.05400806665420532, -0.04038069024682045], "finish_reason": "stop"}, {"text": " [lines[0]]  # Keep first line", "tokens": [" [", "lines", "[", "0", "]]", "  ", "#", " Keep", " first", " line", "\n"], "logprobs": [-1.214632272720337, -1.309272050857544, -0.01231589075177908, -0.10932771861553192, -0.20657339692115784, -2.150580883026123, -0.0010194348869845271, -3.5259060859680176, -2.265942096710205, -0.03322012349963188, -0.6992025375366211], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.0024507984053343534, -0.0008920027757994831, -0.06107936426997185, -0.0021969962399452925], "finish_reason": "stop"}, {"text": " line.split(\"  \")", "tokens": [" line", ".", "split", "(", "\"", "  ", "\"", ")", "\n"], "logprobs": [-0.19630643725395203, -0.0003634030872490257, -0.3842260539531708, -0.5084085464477539, -0.06730267405509949, -1.202323079109192, -0.011081697419285774, -0.014104093424975872, -0.019585788249969482], "finish_reason": "stop"}, {"text": " len(parts) < 2:", "tokens": [" len", "(", "parts", ")", " <", " ", "2", ":", "\n"], "logprobs": [-0.47877854108810425, -3.075552376685664e-05, -0.0006937957368791103, -0.00485859252512455, -2.0964903831481934, -0.0008808070560917258, -1.6552790403366089, -0.07986127585172653, -0.1312566101551056], "finish_reason": "stop"}, {"text": " f\"class {parts[0]} {' '.join(parts[1:])}\"", "tokens": [" f", "\"", "class", " {", "parts", "[", "0", "]}", " {'", " '", ".", "join", "(", "parts", "[", "1", ":]", ")}", "\"", "\n"], "logprobs": [-0.683307945728302, -0.06117760017514229, -1.6855937242507935, -0.020976247265934944, -0.010101505555212498, -0.01964680664241314, -0.2737570106983185, -0.7035237550735474, -3.3338112831115723, -0.05947978049516678, -0.003235464682802558, -0.00012134769349358976, -0.026104193180799484, -0.010123219341039658, -0.006857314147055149, -0.05665136128664017, -0.49795281887054443, -0.008348802104592323, -0.2771960198879242, -0.03650084137916565], "finish_reason": "stop"}, {"text": " len(parts) == 12:  # Overall metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "1", "2", ":", "  ", "#", " Overall", " metrics", "\n"], "logprobs": [-0.0530143640935421, -9.417489309271332e-06, -0.0003995097358711064, -0.00022754464589525014, -0.16853582859039307, -0.0003002431185450405, -1.778892159461975, -2.5945515632629395, -0.0338156558573246, -0.04439447820186615, -2.002696055569686e-05, -0.3240296244621277, -0.051200348883867264, -0.040039218962192535], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>15}{parts[2]:>15}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "5", "}{", "parts", "[", "2", "]:", ">", "1", "5", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.010773707181215286, -0.0006236277404241264, -0.1351778358221054, -0.0019491974962875247, -0.0012080521555617452, -0.018565572798252106, -0.030462967231869698, -0.029482269659638405, -0.07270753383636475, -0.035550788044929504, -0.017805730924010277, -0.00472559779882431, -0.015041151084005833, -0.003590923734009266, -0.010354135185480118, -0.007299893535673618, -0.05463740602135658, -2.652977466583252, -0.16186489164829254, -0.00043358939001336694, -0.00039033422945067286, -0.006628667935729027, -0.003738558851182461, -0.0027430548798292875, -0.009535599499940872, -0.25954002141952515, -0.0510948970913887, -0.0002603192115202546, -0.00011920218821614981, -0.0026443772949278355, -0.03814641386270523, -0.0031342213042080402, -0.01632700115442276, -2.4952917098999023, -0.0178427342325449, -0.004861321300268173], "finish_reason": "stop"}, {"text": " \" \".join(parts)", "tokens": [" \"", " \"", ".", "join", "(", "parts", ")", "\n"], "logprobs": [-2.5438082218170166, -0.6807648539543152, -0.008525405079126358, -0.00013612773909699172, -0.006265284027904272, -0.024142097681760788, -0.019441409036517143, -0.2762773931026459], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00015817821258679032, -9.059495641849935e-05, -0.004232259467244148, -1.4305104514278355e-06, -1.3232143828645349e-05, -9.298280929215252e-06, -0.03323914855718613, -0.0025725625455379486], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.010155080817639828, -0.004243773873895407, -0.0008238735608756542, -0.0003725788265001029, -0.0001915509783430025, -3.981510963058099e-05, -0.000952267087996006, -0.0023544705472886562, -1.1920858014491387e-05, -1.764281842042692e-05, -1.0728830375228426e-06, -0.002385153668001294, -0.019101599231362343], "finish_reason": "stop"}, {"text": " formatted_report<|endoftext|>\"\"\"", "tokens": [" formatted", "_", "report", "<", "|", "end", "of", "text", "|", ">\"", "\"", "\"", "\n"], "logprobs": [-0.01474788598716259, -2.169585604860913e-05, -0.00010942813969450071, -1.1512260437011719, -1.7881377516459906e-06, -1.311301275563892e-06, -0.0001431601122021675, -8.725739462533966e-05, -1.9523839950561523, -0.0024188091047108173, -0.001292108790948987, -0.0002953569928649813, -0.17039288580417633], "finish_reason": "stop"}], "metrics": {"energy": 460.77581860160797, "energy_per_token": 1.3552229958870823, "time": 20.59175, "time_per_token": 0.060563970588235296}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -0.2547481656074524, -0.017102263867855072], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -0.21264879405498505, -0.01142471469938755, -0.002662686863914132, -0.004421933554112911], "finish_reason": "stop"}, {"text": " ValueError(\"The specified target column is not found in the CSV file.\")", "tokens": [" Value", "Error", "(", "\"", "The", " specified", " target", " column", " is", " not", " found", " in", " the", " CS", "V", " file", ".", "\"", ")", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -0.0667305514216423, -1.210198998451233, -1.529895544052124, -0.16234983503818512, -0.06320720165967941, -0.6496051549911499, -0.5888094902038574, -0.013379080221056938, -0.15827354788780212, -0.08118297904729843, -0.024018974974751472, -0.09843780100345612, -0.0003131137927994132, -0.02260640449821949, -0.10289472341537476, -0.03209783136844635, -0.0006861716392450035, -0.0039724973030388355], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.004148805979639292, -0.012523227371275425, -0.0718560665845871, -0.142867311835289, -0.8536008596420288, -9.179073458653875e-06, -1.7404405298293568e-05, -0.0004668337933253497, -0.0036041084676980972, -0.007015832234174013, -0.007888710126280785, -0.010072828270494938, -0.062303584069013596], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.006270259618759155, -0.058825720101594925, -0.0004681444843299687, -8.106198947643861e-06, -9.536738616588991e-07, -0.0003002431185450405, -0.040449269115924835], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.001585894264280796, -4.088794958079234e-05, -0.004371016751974821, -0.0013903246726840734, -0.0028715587686747313, -7.915183232398704e-05, -0.0006114759016782045, -7.354942499659956e-05, -0.0015776818618178368, -3.1470757676288486e-05, -0.00020597243565134704, -0.0013313962845131755, -0.015368960797786713, -1.0728830375228426e-06, -2.1457441107486375e-05, -2.9802276912960224e-06, -5.960446742392378e-06, -0.00010489867418073118, -0.2112123817205429, -0.0004776767164003104, -0.01303590927273035, -0.00039081089198589325, -0.02248961851000786, -1.3947389561508317e-05, -3.290122185717337e-05, -0.003925120458006859, -0.006645483896136284, -3.755022044060752e-05, -1.0251946150674485e-05, -0.36608967185020447, -0.12843438982963562, -5.960462772236497e-07, -8.22540732769994e-06, -0.0004015354788862169, -0.34057557582855225, -0.017767436802387238, -0.13300517201423645, -0.0024876620154827833], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42, stratify=y", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ",", " strat", "ify", "=", "y", "\n"], "logprobs": [-0.15097784996032715, -0.0005153281381353736, -0.020488644018769264, -1.1920858014491387e-05, -2.7417760065873154e-05, -0.0016482589999213815, -0.004365557339042425, -1.3351351299206726e-05, -8.583032467868179e-06, -0.05099906772375107, -0.08782725036144257, -3.576278118089249e-07, -7.510157047363464e-06, -0.00020561488054227084, -0.30595529079437256, -0.016292519867420197, -1.3130735158920288, -0.9163978099822998, -0.021142814308404922, -0.0005245024804025888, -0.017375392839312553, -0.5536139011383057], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0013217531377449632, -3.814689989667386e-06, -0.00012420836719684303, -4.51792984677013e-05, -2.7418097943154862e-06, -0.0014724613865837455, -0.06397190690040588, -1.4305104514278355e-06, -0.000163541772053577, -5.757642793469131e-05, -0.0056834532879292965, -0.0066117336973547935, -0.00012694983161054552, -2.3841830625315197e-06, -0.0014188947388902307, -0.11790890991687775, -0.00827384926378727], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00011598391574807465, -5.4238757002167404e-05, -0.0008248264202848077, -0.013168509118258953, -0.0004301338049117476, -0.0014830554137006402, -0.001501148217357695, -0.0008870004676282406, -1.847726889536716e-05, -0.000458254711702466, -0.0019947646651417017], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0013565156841650605, -1.1920922133867862e-06, -8.34461570775602e-06, -0.0004096384218428284, -0.000757645582780242, -0.0006519814487546682, -0.0005539313424378633, -0.0016518294578418136, -0.00021789084712509066, -0.0008783058729022741], "finish_reason": "stop"}, {"text": " classification_report(", "tokens": [" classification", "_", "report", "(", "\n"], "logprobs": [-0.028725583106279373, -4.768370445162873e-07, -2.9802276912960224e-06, -0.00012337400403339416, -2.0839672088623047], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")[1:-1]", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")[", "1", ":-", "1", "]", "\n"], "logprobs": [-0.02862526662647724, -0.0004320403386373073, -0.037641510367393494, -0.47553372383117676, -0.0022182876709848642, -0.029965044930577278, -0.0018421123968437314, -0.001850322587415576, -2.7987313270568848, -0.33958137035369873, -0.4682792127132416, -0.10516839474439621, -0.0036670600529760122, -0.21705788373947144], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.4735353887081146, -0.002547235693782568], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.001865553087554872, -0.0008357845945283771, -0.06357944756746292, -0.0019982149824500084], "finish_reason": "stop"}, {"text": " line.split()", "tokens": [" line", ".", "split", "()", "\n"], "logprobs": [-0.24402137100696564, -0.00042024365393444896, -0.37872105836868286, -0.8575072884559631, -0.011755832470953465], "finish_reason": "stop"}, {"text": " len(parts) >= 4:", "tokens": [" len", "(", "parts", ")", " >=", " ", "4", ":", "\n"], "logprobs": [-0.461638867855072, -2.8013790142722428e-05, -0.000985375139862299, -0.005666976794600487, -1.1353130340576172, -0.001302228425629437, -1.6153175830841064, -0.15337102115154266, -0.09082025289535522], "finish_reason": "stop"}, {"text": " \"  \".join([parts[0], parts[2], parts[4], parts[1]])", "tokens": [" \"", "  ", "\"", ".", "join", "([", "parts", "[", "0", "]", ",", " parts", "[", "2", "]", ",", " parts", "[", "4", "]", ",", " parts", "[", "1", "]]", ")", "\n"], "logprobs": [-1.2349426746368408, -2.589205026626587, -0.0818626806139946, -0.03330764174461365, -0.0001438752660760656, -0.8432508111000061, -0.20318499207496643, -0.04264334216713905, -0.1471743881702423, -0.21732968091964722, -0.10165774077177048, -0.3616276681423187, -0.035761758685112, -1.483614444732666, -0.17318812012672424, -0.04219270497560501, -0.054641243070364, -0.011847960762679577, -0.6657246351242065, -1.4832043647766113, -0.10263893008232117, -0.20732572674751282, -0.034001875668764114, -1.1627540588378906, -0.911316990852356, -0.007056315895169973, -0.06221677362918854], "finish_reason": "stop"}, {"text": " len(parts) == 12:  # Overall metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "1", "2", ":", "  ", "#", " Overall", " metrics", "\n"], "logprobs": [-0.04849239066243172, -7.510157047363464e-06, -0.0004234609368722886, -0.00019524575327523053, -0.14675448834896088, -0.0002849888114724308, -1.8876692056655884, -2.6420578956604004, -0.029841016978025436, -0.044679634273052216, -1.3708974620385561e-05, -0.3174855411052704, -0.04435433819890022, -0.04013163968920708], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.01291200052946806, -0.0006935574929229915, -0.13714158535003662, -0.0018400895642116666, -0.0010745710460469127, -0.0184366125613451, -0.030034109950065613, -0.02616620995104313, -0.07653338462114334, -0.032737068831920624, -0.018350942060351372, -0.006171574350446463, -0.02093515731394291, -0.0034103586804121733, -0.01129871979355812, -0.00819959957152605, -0.05239395424723625, -0.1494247317314148, -0.011922999285161495, -0.00024875884992070496, -7.581423415103927e-05, -0.003714330494403839, -0.002978771459311247, -0.000863774970639497, -0.0029000865761190653, -0.014118550345301628, -0.01362806186079979, -0.000337305391440168, -0.0003070359816774726, -0.0028937868773937225, -0.03557540476322174, -0.0029471556190401316, -0.012587033212184906, -0.024635599926114082, -0.0327138788998127, -0.0024391443002969027], "finish_reason": "stop"}, {"text": " \"\"", "tokens": [" \"", "\"", "\n"], "logprobs": [-2.3829286098480225, -0.8405913710594177, -0.301175594329834], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.0001652104256208986, -0.00011646069469861686, -0.004787055309861898, -1.5497195136049413e-06, -1.07287787614041e-05, -6.794906312279636e-06, -0.03120008483529091, -0.0029210064094513655], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.009947724640369415, -0.0048117320984601974, -0.0009604846709407866, -0.00037019551382400095, -0.00022587609419133514, -3.71926071238704e-05, -0.001007526065222919, -0.002044612541794777, -1.2874520507466514e-05, -1.823885577323381e-05, -1.1920922133867862e-06, -0.002626899629831314, -0.021571068093180656], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.015706520527601242, -1.883488948806189e-05, -7.593343616463244e-05, -0.8794893622398376], "finish_reason": "stop"}], "metrics": {"energy": 469.37694845390325, "energy_per_token": 1.5389408146029615, "time": 20.362028, "time_per_token": 0.0667607475409836}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -0.2547481656074524, -0.017102263867855072], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -0.21264879405498505, -0.01142471469938755, -0.002662686863914132, -0.004421933554112911], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' not found in CSV file\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " CS", "V", " file", "\"", ")", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -0.0667305514216423, -0.4145618677139282, -0.07176276296377182, -1.0824946165084839, -0.06585410982370377, -0.6737578511238098, -0.000742398202419281, -0.0007391819381155074, -2.3007127310847864e-05, -0.00015245705435518175, -0.001574111171066761, -0.042515963315963745, -0.02672591805458069, -0.09465834498405457, -0.5186460614204407, -7.879423355916515e-05, -0.037159670144319534, -1.8155266046524048, -0.0008936702506616712, -0.004411251749843359], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.004214216023683548, -0.014537486247718334, -0.06773646175861359, -0.13236375153064728, -0.7748643159866333, -1.168244216387393e-05, -2.1219027985353023e-05, -0.00043335105874575675, -0.003440653206780553, -0.006637904793024063, -0.006397719029337168, -0.012524993158876896, -0.04928375035524368], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.006380543578416109, -0.042553093284368515, -0.0006114759016782045, -5.8412379075889476e-06, -8.344646857949556e-07, -0.00025245340657420456, -0.05078426003456116], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0014467497821897268, -4.6132929128361866e-05, -0.0035253537353128195, -0.0013853248674422503, -0.0023419829085469246, -7.211902266135439e-05, -0.0004800597671419382, -6.41325386823155e-05, -0.0014577010879293084, -3.0397906812140718e-05, -0.00022492263815365732, -0.001100649475120008, -0.014757870696485043, -1.1920922133867862e-06, -2.0503786799963564e-05, -1.6689286894688848e-06, -5.602820692729438e-06, -8.689979586051777e-05, -0.18525005877017975, -0.00048601735034026206, -0.01148929726332426, -0.00047350639943033457, -0.021610382944345474, -1.3828182090946939e-05, -3.93382906622719e-05, -0.0045343199744820595, -0.006883005611598492, -3.755022044060752e-05, -1.3828182090946939e-05, -0.29116353392601013, -0.10402704775333405, -3.576278118089249e-07, -7.033323527139146e-06, -0.00033504117163829505, -0.30618107318878174, -0.01826409250497818, -0.11484022438526154, -0.002492894185706973], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", "\n"], "logprobs": [-0.18287934362888336, -0.00047398300375789404, -0.024015599861741066, -1.1205610462639015e-05, -2.372236667724792e-05, -0.0015043619787320495, -0.005033439956605434, -1.4662635294371285e-05, -6.437280717364047e-06, -0.04322461411356926, -0.0653751865029335, -3.576278118089249e-07, -6.198863957251888e-06, -0.00022110878489911556, -0.2966461479663849, -0.015329751186072826, -1.0691914558410645], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0015795861836522818, -4.6491513785440475e-06, -0.00012587709352374077, -4.362964682513848e-05, -2.622600959512056e-06, -0.0011945976875722408, -0.06853366643190384, -1.6689286894688848e-06, -0.00011491115583339706, -5.757642793469131e-05, -0.0065362947061657906, -0.005637934897094965, -9.274052717955783e-05, -2.861018856492592e-06, -0.0013731822837144136, -0.12914884090423584, -0.009440896101295948], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00010942813969450071, -4.827859811484814e-05, -0.0008585343020968139, -0.01406154315918684, -0.00042775063775479794, -0.0014369887067005038, -0.0017162130679935217, -0.0008704449282959104, -2.5033637939486653e-05, -0.0004408579843584448, -0.0020722122862935066], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0010339635191485286, -1.5497195136049413e-06, -7.748573807475623e-06, -0.00040534863364882767, -0.0006998711614869535, -0.0005988473421894014, -0.0005133026279509068, -0.0015029336791485548, -0.00023946279543451965, -0.0009062950266525149], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.028079718351364136, -4.768370445162873e-07, -2.9802276912960224e-06, -0.00013159839727450162, -0.14541034400463104, -0.0002908283786382526, -0.007789000868797302, -0.007301313802599907, -0.0018386616138741374, -3.015949550899677e-05, -2.5629668016335927e-05, -0.49983134865760803, -0.01877828687429428], "finish_reason": "stop"}, {"text": " report.splitlines()", "tokens": [" report", ".", "split", "lines", "()", "\n"], "logprobs": [-0.02843363955616951, -0.0005050813779234886, -0.03437363728880882, -1.4518415927886963, -0.06326539069414139, -0.0355803519487381], "finish_reason": "stop"}, {"text": " [f\"{line}\\n\" for line in lines]", "tokens": [" [", "f", "\"", "{", "line", "}\\", "n", "\"", " for", " line", " in", " lines", "]", "\n"], "logprobs": [-1.2026219367980957, -2.4994585514068604, -0.049830105155706406, -0.4480789303779602, -1.005173921585083, -2.0070817470550537, -0.18754509091377258, -0.0927661880850792, -0.41695696115493774, -0.013301092199981213, -0.00018404220463708043, -0.005968960002064705, -0.28827354311943054, -0.016756149008870125], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.0019365858752280474, -0.0007312007946893573, -0.054270170629024506, -0.002012848388403654], "finish_reason": "stop"}, {"text": " line.split(\" \")", "tokens": [" line", ".", "split", "(", "\"", " \"", ")", "\n"], "logprobs": [-0.19114123284816742, -0.0002843929105438292, -0.41276484727859497, -0.45899510383605957, -0.060473255813121796, -0.5705439448356628, -0.01650560088455677, -0.008395734243094921], "finish_reason": "stop"}, {"text": " len(parts) == 0:  # Empty line", "tokens": [" len", "(", "parts", ")", " ==", " ", "0", ":", "  ", "#", " Em", "pty", " line", "\n"], "logprobs": [-0.3878847360610962, -2.8967437174287625e-05, -0.0008403107640333474, -0.005629400257021189, -1.1764209270477295, -0.000522357877343893, -1.527471661567688, -0.07333607226610184, -2.5202419757843018, -0.0007479969062842429, -2.193101167678833, -0.0006126672378741205, -0.03898463770747185, -0.2441822737455368], "finish_reason": "stop"}, {"text": " \" \".join(parts[:-1]) + \" \" + str(int(parts[-1]))", "tokens": [" \"", " \"", ".", "join", "(", "parts", "[:", "-", "1", "])", " +", " \"", " \"", " +", " str", "(", "int", "(", "parts", "[-", "1", "]))", "\n"], "logprobs": [-1.3252413272857666, -0.6469715237617493, -0.0022066310048103333, -0.0006417360855266452, -0.6560623645782471, -0.1116502657532692, -0.37464866042137146, -1.5479919910430908, -0.26580390334129333, -0.08282671123743057, -0.5564895272254944, -0.2870286703109741, -0.6172040104866028, -0.13146211206912994, -2.358612298965454, -0.004690952133387327, -2.587996482849121, -0.0008883106056600809, -0.10355294495820999, -0.013468354009091854, -0.05542222782969475, -0.11866448074579239, -0.12472168356180191], "finish_reason": "stop"}, {"text": " len(parts) > 5:", "tokens": [" len", "(", "parts", ")", " >", " ", "5", ":", "\n"], "logprobs": [-0.0513814352452755, -8.702239938429557e-06, -0.00040951924165710807, -0.00020561488054227084, -3.0984790325164795, -0.001313776709139347, -0.524046003818512, -0.12349962443113327, -2.8370707035064697], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.011290940456092358, -0.0007283418672159314, -0.14933480322360992, -0.0016237420495599508, -0.0012698451755568385, -0.02091122418642044, -0.03143542632460594, -0.029053686186671257, -0.08377019315958023, -0.03519592434167862, -0.020100703462958336, -0.003934025764465332, -0.014202939346432686, -0.004816003143787384, -0.011477983556687832, -0.00885204877704382, -0.04970534145832062, -0.18545129895210266, -0.012701330706477165, -0.0002798642381094396, -5.6622808187967166e-05, -0.00422620540484786, -0.0026655402034521103, -0.0008386432309634984, -0.0025900411419570446, -0.012991078197956085, -0.01670808345079422, -0.0002834395272657275, -0.0003939091111533344, -0.0028029698878526688, -0.03349949046969414, -0.0032326129730790854, -0.010800712741911411, -0.020267417654395103, -0.035230446606874466, -0.0025210760068148375], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.2076316475868225, -0.2112889140844345], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00014506718434859067, -0.00013159839727450162, -0.0053327688947319984, -1.6689286894688848e-06, -1.2040065485052764e-05, -9.298280929215252e-06, -0.038818493485450745, -0.003311390522867441], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.010439432226121426, -0.004625454545021057, -0.0012707976857200265, -0.00037281715776771307, -0.0001932195882545784, -3.7431014789035544e-05, -0.0009922825265675783, -0.0027091726660728455, -1.2278481335670222e-05, -2.098061486321967e-05, -9.536738616588991e-07, -0.0028016623109579086, -0.01983182691037655], "finish_reason": "stop"}, {"text": " formatted_report<|endoftext|># Copyright (c) 2023 PaddlePaddle Authors. All Rights Reserved.", "tokens": [" formatted", "_", "report", "<", "|", "end", "of", "text", "|>", "#", " Copyright", " (", "c", ")", " ", "2", "0", "2", "3", " P", "addle", "P", "addle", " Authors", ".", " All", " Rights", " Reserved", ".", "\n"], "logprobs": [-0.015743838623166084, -2.396077979938127e-05, -0.00010013079008786008, -1.2514079809188843, -1.7881377516459906e-06, -1.4305104514278355e-06, -0.00017498392844572663, -8.809178689261898e-05, -0.16956786811351776, -1.2541213035583496, -3.3023343086242676, -0.7543491721153259, -0.5341115593910217, -2.1576648578047752e-05, -0.3263285160064697, -0.001794158248230815, -3.099393507000059e-05, -0.12247574329376221, -0.8398534059524536, -2.5822806358337402, -0.005227468442171812, -0.0014602008741348982, -0.0002119316632160917, -0.0014123475411906838, -0.000687958556227386, -0.0002752163854893297, -0.00016604475968051702, -0.0003023882454726845, -0.03846203535795212, -0.00024911639047786593], "finish_reason": "stop"}], "metrics": {"energy": 490.1025690412522, "energy_per_token": 1.4500076007137639, "time": 22.030848, "time_per_token": 0.06518002366863905}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -0.2547481656074524, -0.017102263867855072], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -0.21264879405498505, -0.01142471469938755, -0.002662686863914132, -0.004421933554112911], "finish_reason": "stop"}, {"text": " ValueError(f\"Invalid target_column: {target_column}\")", "tokens": [" Value", "Error", "(", "f", "\"", "Invalid", " target", "_", "column", ":", " {", "target", "_", "column", "}\"", ")", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -0.0667305514216423, -0.4145618677139282, -0.07176276296377182, -3.5107479095458984, -0.1987573653459549, -1.2517949342727661, -0.006244197487831116, -0.8978551626205444, -0.330613911151886, -0.0027501878794282675, -8.892617915989831e-05, -0.0003197873884346336, -0.7877765893936157, -0.0004857790481764823, -0.0049789962358772755], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.004214216023683548, -0.014537486247718334, -0.06773646175861359, -0.13236375153064728, -0.7748643159866333, -1.168244216387393e-05, -2.1219027985353023e-05, -0.00043335105874575675, -0.003440653206780553, -0.006637904793024063, -0.006397719029337168, -0.012524993158876896, -0.04928375035524368], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.006380543578416109, -0.042553093284368515, -0.0006114759016782045, -5.8412379075889476e-06, -8.344646857949556e-07, -0.00025245340657420456, -0.05078426003456116], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ")", "\n"], "logprobs": [-0.0014467497821897268, -4.6132929128361866e-05, -0.0035253537353128195, -0.0013853248674422503, -0.0023419829085469246, -7.211902266135439e-05, -0.0004800597671419382, -6.41325386823155e-05, -0.0014577010879293084, -3.0397906812140718e-05, -0.00022492263815365732, -0.001100649475120008, -0.014757870696485043, -1.1920922133867862e-06, -2.0503786799963564e-05, -1.6689286894688848e-06, -5.602820692729438e-06, -8.689979586051777e-05, -0.18525005877017975, -0.00048601735034026206, -0.01148929726332426, -0.00047350639943033457, -0.021610382944345474, -1.3828182090946939e-05, -3.93382906622719e-05, -0.0045343199744820595, -0.006883005611598492, -3.755022044060752e-05, -1.3828182090946939e-05, -1.3772708177566528, -0.0028174726758152246], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42, shuffle=True", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ",", " shuffle", "=", "True", "\n"], "logprobs": [-0.18287934362888336, -0.00047398300375789404, -0.024015599861741066, -1.1205610462639015e-05, -2.372236667724792e-05, -0.0015043619787320495, -0.005033439956605434, -1.4662635294371285e-05, -6.437280717364047e-06, -0.04322461411356926, -0.0653751865029335, -3.576278118089249e-07, -6.198863957251888e-06, -0.00022110878489911556, -0.2966461479663849, -0.015329751186072826, -1.2877411842346191, -0.7197244167327881, -0.00040725519647821784, -0.03975193202495575, -0.9116025567054749], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0015795861836522818, -4.6491513785440475e-06, -0.00012587709352374077, -4.362964682513848e-05, -2.622600959512056e-06, -0.0011945976875722408, -0.06853366643190384, -1.6689286894688848e-06, -0.00011491115583339706, -5.757642793469131e-05, -0.0065362947061657906, -0.005637934897094965, -9.274052717955783e-05, -2.861018856492592e-06, -0.0013731822837144136, -0.12914884090423584, -0.009440896101295948], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00010942813969450071, -4.827859811484814e-05, -0.0008585343020968139, -0.01406154315918684, -0.00042775063775479794, -0.0014369887067005038, -0.0017162130679935217, -0.0008704449282959104, -2.5033637939486653e-05, -0.0004408579843584448, -0.0020722122862935066], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0010339635191485286, -1.5497195136049413e-06, -7.748573807475623e-06, -0.00040534863364882767, -0.0006998711614869535, -0.0005988473421894014, -0.0005133026279509068, -0.0015029336791485548, -0.00023946279543451965, -0.0009062950266525149], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.028079718351364136, -4.768370445162873e-07, -2.9802276912960224e-06, -0.00013159839727450162, -0.14541034400463104, -0.0002908283786382526, -0.007789000868797302, -0.007301313802599907, -0.0018386616138741374, -3.015949550899677e-05, -2.5629668016335927e-05, -0.49983134865760803, -0.01877828687429428], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.02843363955616951, -0.0005050813779234886, -0.03437363728880882, -0.4934084415435791, -0.0017513189231976867, -0.03516312316060066, -0.0015830377815291286, -0.0017106198938563466, -0.061645764857530594, -0.03849644586443901], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.462782084941864, -0.0034004980698227882], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.0019402741454541683, -0.0010758809512481093, -0.06487759202718735, -0.0023210509680211544], "finish_reason": "stop"}, {"text": " line.strip().split()", "tokens": [" line", ".", "strip", "()", ".", "split", "()", "\n"], "logprobs": [-0.20839479565620422, -0.00031835734262131155, -1.4521517753601074, -0.012418799102306366, -0.00031668893643654883, -0.017979968339204788, -0.7601369619369507, -0.011000817641615868], "finish_reason": "stop"}, {"text": " len(parts) >= 3:", "tokens": [" len", "(", "parts", ")", " >=", " ", "3", ":", "\n"], "logprobs": [-0.38709762692451477, -2.8490614567999728e-05, -0.0007964776013977826, -0.005528161767870188, -1.1852022409439087, -0.001100768567994237, -2.0413565635681152, -0.11541937291622162, -0.07726921141147614], "finish_reason": "stop"}, {"text": " \" \".join(parts[1:5])", "tokens": [" \"", " \"", ".", "join", "(", "parts", "[", "1", ":", "5", "])", "\n"], "logprobs": [-1.1962335109710693, -0.5676788091659546, -0.0020165364257991314, -0.000589792791288346, -0.6262379288673401, -0.1285502314567566, -1.7810112237930298, -1.1519193649291992, -0.24940305948257446, -1.6000417470932007, -0.03231622651219368, -0.40780895948410034], "finish_reason": "stop"}, {"text": " len(parts) == 3:  # Overall metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "3", ":", "  ", "#", " Overall", " metrics", "\n"], "logprobs": [-0.047697339206933975, -8.106198947643861e-06, -0.00043561504571698606, -0.00019643761334009469, -0.153843954205513, -0.0002817710628733039, -2.1577577590942383, -0.03246349096298218, -0.019920526072382927, -7.152531907195225e-06, -0.45070528984069824, -0.09014062583446503, -0.03832551836967468], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.011185793206095695, -0.0006967739318497479, -0.1299496591091156, -0.0014703187625855207, -0.0010688550537452102, -0.01795526221394539, -0.03371515870094299, -0.0290822871029377, -0.07682376354932785, -0.03175513446331024, -0.017158279195427895, -0.005306089296936989, -0.011312863789498806, -0.0039288015104830265, -0.011098791845142841, -0.008430015295743942, -0.056196290999650955, -0.17834283411502838, -0.011963402852416039, -0.00026842328952625394, -6.997340824455023e-05, -0.004138833377510309, -0.003784044412896037, -0.0009402383584529161, -0.002717970171943307, -0.015075087547302246, -0.014003708958625793, -0.00026520551182329655, -0.0002227773511549458, -0.003140282118692994, -0.03669414669275284, -0.0029685499612241983, -0.010513750836253166, -0.02451125904917717, -0.031330183148384094, -0.0026590011548250914], "finish_reason": "stop"}, {"text": " line", "tokens": [" line", "\n"], "logprobs": [-0.20476752519607544, -0.24300356209278107], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00013362467871047556, -0.00010847456724150106, -0.004701630678027868, -1.4305104514278355e-06, -1.2874520507466514e-05, -1.0847986231965479e-05, -0.03457668051123619, -0.0026599522680044174], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.01128940749913454, -0.004458368290215731, -0.0010624246206134558, -0.0003895000845659524, -0.00018916724366135895, -4.1126360883936286e-05, -0.0010918376501649618, -0.0018786415457725525, -1.3828182090946939e-05, -1.9073304429184645e-05, -8.344646857949556e-07, -0.0025279729161411524, -0.021712107583880424], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.016337087377905846, -1.7165990357170813e-05, -0.00010573305189609528, -0.8296478390693665], "finish_reason": "stop"}], "metrics": {"energy": 455.7931469039919, "energy_per_token": 1.6049054468450419, "time": 19.530268, "time_per_token": 0.06876854929577465}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -0.2547481656074524, -0.017102263867855072], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -0.21264879405498505, -0.01142471469938755, -0.002662686863914132, -0.004421933554112911], "finish_reason": "stop"}, {"text": " ValueError('The specified target column is not found in the CSV file.')", "tokens": [" Value", "Error", "('", "The", " specified", " target", " column", " is", " not", " found", " in", " the", " CS", "V", " file", ".", "')", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -2.782428741455078, -1.4353848695755005, -0.27163994312286377, -0.05550455302000046, -0.6723815202713013, -0.5351746082305908, -0.025844475254416466, -0.20738734304904938, -0.1370934695005417, -0.036639101803302765, -0.12720489501953125, -0.0004800597671419382, -0.028332829475402832, -0.19511598348617554, -0.05537113547325134, -0.0015401893761008978], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column])", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "])", "\n"], "logprobs": [-0.004815409891307354, -0.01561944279819727, -0.06707451492547989, -0.10655311495065689, -0.6239643096923828, -0.5402998328208923, -0.010498061776161194, -3.576272320060525e-06, -1.3589766240329482e-05, -0.12296362221240997, -0.04950931668281555], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.006851868238300085, -0.049212824553251266, -0.00067473528906703, -6.556489552167477e-06, -8.344646857949556e-07, -0.0002559096028562635, -0.052554577589035034], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.001450320822186768, -4.649054244509898e-05, -0.003903271397575736, -0.001576372655108571, -0.0023737368173897266, -9.917721035890281e-05, -0.0003805628512054682, -6.282132380874828e-05, -0.002049847040325403, -3.015949550899677e-05, -0.00022349244682118297, -0.0011219641892239451, -0.012605397030711174, -1.1920922133867862e-06, -2.396077979938127e-05, -1.5497195136049413e-06, -6.198863957251888e-06, -9.035655966727063e-05, -0.17493709921836853, -0.0005110388156026602, -0.010337027721107006, -0.00040987672400660813, -0.02386382780969143, -1.2278481335670222e-05, -3.504691630951129e-05, -0.0035283234901726246, -0.008631185628473759, -3.099393507000059e-05, -1.2159273865108844e-05, -0.3527195453643799, -0.1030021607875824, -3.576278118089249e-07, -7.390948667307384e-06, -0.0003741279651876539, -0.33714553713798523, -0.01860407181084156, -0.12102820724248886, -0.002372785471379757], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", "\n"], "logprobs": [-0.14149227738380432, -0.0004800597671419382, -0.024472754448652267, -9.298280929215252e-06, -2.5152843591058627e-05, -0.0017958242679014802, -0.0048990449868142605, -1.7046782886609435e-05, -6.556489552167477e-06, -0.047182679176330566, -0.08315081149339676, -2.3841855067985307e-07, -5.483612312673358e-06, -0.00016532962035853416, -0.3177199959754944, -0.015872091054916382, -1.0417985916137695], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0015503065660595894, -4.0531076592742465e-06, -0.00012396997772157192, -4.2914423829643056e-05, -2.50339189733495e-06, -0.0009785869624465704, -0.04948481172323227, -1.7881377516459906e-06, -0.00014554394874721766, -5.2569914259947836e-05, -0.007804496213793755, -0.00517493300139904, -9.190614218823612e-05, -2.3841830625315197e-06, -0.0022332745138555765, -0.14110487699508667, -0.0089932382106781], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00011622230522334576, -4.911301948595792e-05, -0.000876757490914315, -0.014456532895565033, -0.0004520586517173797, -0.0010883843060582876, -0.001924568903632462, -0.0006561510381288826, -1.7404405298293568e-05, -0.0004530118894763291, -0.0021319296211004257], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0017627429915592074, -1.0728830375228426e-06, -6.198863957251888e-06, -0.0004640932602342218, -0.000806721393018961, -0.0007266741595230997, -0.0005073452484793961, -0.00231581786647439, -0.00022480344341602176, -0.0010683787986636162], "finish_reason": "stop"}, {"text": " classification_report(", "tokens": [" classification", "_", "report", "(", "\n"], "logprobs": [-0.03029378317296505, -4.768370445162873e-07, -3.099436753473128e-06, -0.00011836781777674332, -1.7115063667297363], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.027019288390874863, -0.0004941195948049426, -0.035616934299468994, -0.49430981278419495, -0.0020680485758930445, -0.034085411578416824, -0.001946580014191568, -0.0018468719208613038, -0.04612024500966072, -0.03324076160788536], "finish_reason": "stop"}, {"text": " [", "tokens": [" [", "\n"], "logprobs": [-1.1495696306228638, -0.7144626975059509], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.0018491327064111829, -0.0007510940195061266, -0.06017404794692993, -0.002806655131280422], "finish_reason": "stop"}, {"text": " line.strip().split(\" \")", "tokens": [" line", ".", "strip", "()", ".", "split", "(", "\"", " \"", ")", "\n"], "logprobs": [-0.18794336915016174, -0.0002978596603497863, -1.2690165042877197, -0.012674611061811447, -0.00042083943844772875, -0.017019174993038177, -0.5794366002082825, -0.06880178302526474, -0.7385696768760681, -0.014783007092773914, -0.009768067859113216], "finish_reason": "stop"}, {"text": " len(parts) > 1 and parts[0] == \"precision\":", "tokens": [" len", "(", "parts", ")", " >", " ", "1", " and", " parts", "[", "0", "]", " ==", " \"", "precision", "\":", "\n"], "logprobs": [-0.4292088747024536, -3.075552376685664e-05, -0.0009453595266677439, -0.00503723556175828, -1.385087013244629, -0.000647692708298564, -0.8079807162284851, -2.4423487186431885, -0.12505899369716644, -0.09450163692235947, -0.33635213971138, -0.020670006051659584, -1.124578833580017, -0.0992216020822525, -0.9099346399307251, -0.054997511208057404, -0.02268425188958645], "finish_reason": "stop"}, {"text": " \" \".join(parts[:-2]) + \" \" + \" \".join(parts[-2:])", "tokens": [" \"", " \"", ".", "join", "(", "parts", "[:", "-", "2", "])", " +", " \"", " \"", " +", " \"", " \"", ".", "join", "(", "parts", "[-", "2", ":", "])", "\n"], "logprobs": [-1.243983507156372, -0.5681744813919067, -0.002609540708363056, -0.0005436849314719439, -0.6491797566413879, -0.09170477837324142, -0.442559152841568, -1.5001472234725952, -1.770209550857544, -0.1178937628865242, -0.7315167784690857, -0.2563686668872833, -0.5906137824058533, -0.15489301085472107, -0.8349113464355469, -0.17390286922454834, -0.001279965159483254, -0.00033849707688204944, -0.026810524985194206, -0.040145955979824066, -0.05903554707765579, -0.08627921342849731, -0.03614148870110512, -0.00038747431244701147, -0.19642378389835358], "finish_reason": "stop"}, {"text": " len(parts) == 6:  # Overall metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "6", ":", "  ", "#", " Overall", " metrics", "\n"], "logprobs": [-0.04819366708397865, -8.34461570775602e-06, -0.0006926044588908553, -0.00020597243565134704, -0.15368245542049408, -0.0003259842633269727, -1.3081488609313965, -0.023794103413820267, -0.023005489259958267, -1.1444026313256472e-05, -0.32431143522262573, -0.0832773968577385, -0.03755655139684677], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.011122842319309711, -0.0007033258443698287, -0.14193414151668549, -0.001829380402341485, -0.0010162194957956672, -0.017353132367134094, -0.03524230048060417, -0.028547994792461395, -0.07948458194732666, -0.034864649176597595, -0.01712605357170105, -0.005307749379426241, -0.016628362238407135, -0.004036732017993927, -0.009952091611921787, -0.008201373741030693, -0.047353923320770264, -0.17691867053508759, -0.010800477117300034, -0.00027176024741493165, -5.435795901576057e-05, -0.004175397567451, -0.0027948864735662937, -0.0007641970878466964, -0.002224829513579607, -0.013279211707413197, -0.01497386209666729, -0.0002899941464420408, -0.00022754464589525014, -0.0031495511066168547, -0.04209178686141968, -0.0028237728402018547, -0.011754064820706844, -0.022894693538546562, -0.03199531137943268, -0.0025056179147213697], "finish_reason": "stop"}, {"text": " line  # Do not modify the line", "tokens": [" line", "  ", "#", " Do", " not", " modify", " the", " line", "\n"], "logprobs": [-0.19780725240707397, -1.9524929523468018, -3.2305197237292305e-05, -3.454216718673706, -0.6451616883277893, -1.1922916173934937, -2.2197000980377197, -0.22850777208805084, -0.27504175901412964], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.00016807096835691482, -0.00011753345461329445, -0.005890865344554186, -1.4305104514278355e-06, -1.0967194612021558e-05, -7.271740287251305e-06, -0.037225715816020966, -0.002519411500543356], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.009650719352066517, -0.004038750194013119, -0.0009891861118376255, -0.0004240567213855684, -0.0001896439935080707, -4.1960789531003684e-05, -0.0008741371566429734, -0.0019392033573240042, -1.1801649634435307e-05, -2.2411095415009186e-05, -8.344646857949556e-07, -0.0024963426403701305, -0.01776966080069542], "finish_reason": "stop"}, {"text": " formatted_report", "tokens": [" formatted", "_", "report", "\n"], "logprobs": [-0.015107848681509495, -1.2636104656849056e-05, -8.284702198579907e-05, -0.8436012268066406], "finish_reason": "stop"}], "metrics": {"energy": 484.01250339889526, "energy_per_token": 1.5663835061452922, "time": 20.96824, "time_per_token": 0.06785838187702266}}
{"outputs": [{"text": " pd.read_csv(csv_file_path)", "tokens": [" pd", ".", "read", "_", "csv", "(", "csv", "_", "file", "_", "path", ")", "\n"], "logprobs": [-0.037249717861413956, -0.0003401654539629817, -0.0015420938143506646, -4.7444173105759546e-05, -0.00013886917440686375, -0.00019739109848160297, -0.00768940057605505, -1.1086402082582936e-05, -2.0265373677830212e-05, -5.721882189391181e-05, -1.0728830375228426e-06, -0.2547481656074524, -0.017102263867855072], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.09323445707559586, -5.173549288883805e-05, -0.0001401803019689396, -0.04481266438961029, -3.182837463100441e-05, -0.0135597363114357, -0.21264879405498505, -0.01142471469938755, -0.002662686863914132, -0.004421933554112911], "finish_reason": "stop"}, {"text": " ValueError(f'Target column {target_column} not found.')", "tokens": [" Value", "Error", "(", "f", "'", "Target", " column", " {", "target", "_", "column", "}", " not", " found", ".", "')", "\n"], "logprobs": [-0.003286676714196801, -1.811964830267243e-05, -0.0667305514216423, -0.4145618677139282, -2.7295100688934326, -1.069422960281372, -0.0690472424030304, -0.8474448323249817, -0.0012425805907696486, -4.446407547220588e-05, -0.00017891713650897145, -0.10932910442352295, -0.058605846017599106, -0.037725891917943954, -2.6129345893859863, -0.09320785105228424, -0.0015605426160618663], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0042522018775343895, -0.01576249673962593, -0.07766912877559662, -0.1499473601579666, -0.9038794040679932, -7.152531907195225e-06, -2.1219027985353023e-05, -0.0005694198189303279, -0.00323796016164124, -0.006735478527843952, -0.006106765940785408, -0.009741624817252159, -0.06719645857810974], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.006555125582963228, -0.04951067641377449, -0.0006229128921404481, -7.510157047363464e-06, -8.344646857949556e-07, -0.0002932118659373373, -0.051479268819093704], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=test_size, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0014860312221571803, -4.51792984677013e-05, -0.004640643019229174, -0.002001070184633136, -0.0031216247007250786, -9.572047565598041e-05, -0.0006081400788389146, -6.83045873302035e-05, -0.0016612313920632005, -2.6940935640595853e-05, -0.00020776021119672805, -0.0012841321295127273, -0.013250037096440792, -1.1920922133867862e-06, -1.9430925021879375e-05, -2.145764938177308e-06, -6.437280717364047e-06, -9.858122211880982e-05, -0.18849799036979675, -0.0003718638326972723, -0.01168855745345354, -0.000448841426987201, -0.021424058824777603, -1.5139465176616795e-05, -2.8013790142722428e-05, -0.004055015742778778, -0.006460021249949932, -3.349725011503324e-05, -1.1086402082582936e-05, -0.3100908696651459, -0.09607426077127457, -4.768370445162873e-07, -8.106198947643861e-06, -0.0003909300430677831, -0.31886911392211914, -0.017392262816429138, -0.14084169268608093, -0.0020449694711714983], "finish_reason": "stop"}, {"text": " y, test_size=test_size, random_state=42)", "tokens": [" y", ",", " test", "_", "size", "=", "test", "_", "size", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.1912812441587448, -0.0004992430913262069, -0.024307208135724068, -1.0013530300057027e-05, -3.266281055402942e-05, -0.0015817285748198628, -0.005369645077735186, -1.6212332411669195e-05, -8.821448318485636e-06, -0.04493313655257225, -0.08031901717185974, -2.3841855067985307e-07, -6.198863957251888e-06, -0.00022837892174720764, -0.3048648238182068, -0.01423149835318327, -0.9030117392539978, -0.0033684202935546637], "finish_reason": "stop"}, {"text": " RandomForestClassifier(n_estimators=n_estimators)", "tokens": [" Random", "Fore", "st", "Class", "ifier", "(", "n", "_", "estim", "ators", "=", "n", "_", "estim", "ators", ")", "\n"], "logprobs": [-0.0016380238812416792, -3.576272320060525e-06, -0.00011336160969221964, -3.3378044463461265e-05, -2.3841830625315197e-06, -0.0011863820254802704, -0.06145486980676651, -1.5497195136049413e-06, -0.00017820201173890382, -5.6622808187967166e-05, -0.006818835157901049, -0.007857603952288628, -0.00010048838157672435, -2.145764938177308e-06, -0.0018020119750872254, -0.14086291193962097, -0.008105598390102386], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00012385078298393637, -4.875540980719961e-05, -0.0008263748604804277, -0.014028982259333134, -0.0005590544897131622, -0.0011875727213919163, -0.0016285026213154197, -0.0007901645149104297, -1.7523612768854946e-05, -0.0005489272880367935, -0.0018262865487486124], "finish_reason": "stop"}, {"text": " clf.predict(X_test)", "tokens": [" cl", "f", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0014382981462404132, -1.1920922133867862e-06, -7.390948667307384e-06, -0.0004477690381463617, -0.000819466426037252, -0.0006286313873715699, -0.0005340342177078128, -0.0016515913885086775, -0.00024279984063468874, -0.0009130837861448526], "finish_reason": "stop"}, {"text": " classification_report(y_test, y_pred)", "tokens": [" classification", "_", "report", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.028178002685308456, -4.768370445162873e-07, -2.9802276912960224e-06, -0.00013469743134919554, -0.138752281665802, -0.0003649522550404072, -0.008456375449895859, -0.007062826305627823, -0.0016950300196185708, -3.3854863431770355e-05, -2.5629668016335927e-05, -0.4121565520763397, -0.01714562252163887], "finish_reason": "stop"}, {"text": " report.split(\"\\n\")", "tokens": [" report", ".", "split", "(", "\"", "\\", "n", "\"", ")", "\n"], "logprobs": [-0.02444169484078884, -0.0005517867393791676, -0.03406893461942673, -0.5586086511611938, -0.0019936938770115376, -0.034465890377759933, -0.0018556771101430058, -0.00199333718046546, -0.04845093935728073, -0.033956706523895264], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.4583321213722229, -0.0031553739681839943], "finish_reason": "stop"}, {"text": " in lines:", "tokens": [" in", " lines", ":", "\n"], "logprobs": [-0.0018730491865426302, -0.0009542917250655591, -0.05133262649178505, -0.0019384894985705614], "finish_reason": "stop"}, {"text": " [word.strip() for word in line.split(\" \")]", "tokens": [" [", "word", ".", "strip", "()", " for", " word", " in", " line", ".", "split", "(", "\"", " \"", ")]", "\n"], "logprobs": [-2.5185153484344482, -1.6342920064926147, -0.206336110830307, -0.22274015843868256, -0.011577324941754341, -0.06881491839885712, -0.0006715188501402736, -0.00018165845540352166, -0.009179413318634033, -0.00024303820100612938, -0.09457018226385117, -0.291652113199234, -0.04018305614590645, -0.5210633277893066, -0.2177886664867401, -0.007345809601247311], "finish_reason": "stop"}, {"text": " len(parts) == 3:", "tokens": [" len", "(", "parts", ")", " ==", " ", "3", ":", "\n"], "logprobs": [-0.45374199748039246, -2.992108420585282e-05, -0.0009872806258499622, -0.005930920597165823, -1.189946174621582, -0.0006227937992662191, -2.8593502044677734, -0.1451895385980606, -0.1687854826450348], "finish_reason": "stop"}, {"text": " \" \".join([f\"class {i} {parts[1]}\" for i in range(10)])", "tokens": [" \"", " \"", ".", "join", "([", "f", "\"", "class", " {", "i", "}", " {", "parts", "[", "1", "]}", "\"", " for", " i", " in", " range", "(", "1", "0", ")]", ")", "\n"], "logprobs": [-1.2155253887176514, -0.5562600493431091, -0.002006423892453313, -0.0005793085438199341, -0.6521801352500916, -2.737429618835449, -0.030939491465687752, -2.225360870361328, -0.013573495671153069, -1.017460584640503, -0.5727102160453796, -0.5624369978904724, -0.9360135197639465, -0.01433362253010273, -0.8913521766662598, -0.29215699434280396, -0.7131294012069702, -0.053806331008672714, -0.00021860594279132783, -0.045238420367240906, -0.05553613230586052, -0.00022230061586014926, -2.2588095664978027, -0.1905674785375595, -0.07035820186138153, -0.014698667451739311, -0.16611339151859283], "finish_reason": "stop"}, {"text": " len(parts) == 2:  # Overall metrics", "tokens": [" len", "(", "parts", ")", " ==", " ", "2", ":", "  ", "#", " Overall", " metrics", "\n"], "logprobs": [-0.0497727133333683, -7.986990567587782e-06, -0.0006076634745113552, -0.00021646064124070108, -0.1545199602842331, -0.0002735478919930756, -2.4696521759033203, -0.07104485481977463, -0.03280363604426384, -7.152531907195225e-06, -0.29895442724227905, -0.1212872564792633, -0.037847910076379776], "finish_reason": "stop"}, {"text": " f\"{parts[0]:<15}{parts[1]:>10}{parts[2]:>10}{parts[3]:>10}\"", "tokens": [" f", "\"", "{", "parts", "[", "0", "]:", "<", "1", "5", "}{", "parts", "[", "1", "]:", ">", "1", "0", "}{", "parts", "[", "2", "]:", ">", "1", "0", "}{", "parts", "[", "3", "]:", ">", "1", "0", "}\"", "\n"], "logprobs": [-0.012282567098736763, -0.0008644896443001926, -0.12261885404586792, -0.0017896364443004131, -0.00120698066893965, -0.016651576384902, -0.035164617002010345, -0.030950818210840225, -0.08389867097139359, -0.03125334903597832, -0.01984187588095665, -0.004736750852316618, -0.01720925234258175, -0.003660883754491806, -0.010153546929359436, -0.009407004341483116, -0.053918611258268356, -0.1903018206357956, -0.012422095984220505, -0.00029571453342214227, -8.356221951544285e-05, -0.004002418369054794, -0.0030448525212705135, -0.0008007657015696168, -0.0029419257771223783, -0.014235024340450764, -0.01575416512787342, -0.0002658013836480677, -0.00026222606538794935, -0.002858245512470603, -0.03129991143941879, -0.0033563016913831234, -0.011387825012207031, -0.02573736384510994, -0.03795717656612396, -0.0026935983914881945], "finish_reason": "stop"}, {"text": " f\"{line}\"", "tokens": [" f", "\"", "{", "line", "}\"", "\n"], "logprobs": [-2.550800085067749, -0.002448182087391615, -0.0431404709815979, -0.7134458422660828, -0.23764249682426453, -0.3362397253513336], "finish_reason": "stop"}, {"text": "append(formatted_line)", "tokens": ["append", "(", "form", "atted", "_", "line", ")", "\n"], "logprobs": [-0.0001501924270996824, -0.00010382589971413836, -0.0046514407731592655, -1.4305104514278355e-06, -9.65590606938349e-06, -9.059865078597795e-06, -0.042475633323192596, -0.002363865962252021], "finish_reason": "stop"}, {"text": " \"\\n\".join(formatted_lines)", "tokens": [" \"", "\\", "n", "\"", ".", "join", "(", "form", "atted", "_", "lines", ")", "\n"], "logprobs": [-0.009100978262722492, -0.004173261113464832, -0.000996331567876041, -0.000392598332837224, -0.00022027450904715806, -4.100715523236431e-05, -0.0009707267745397985, -0.0016906267264857888, -1.1444026313256472e-05, -2.0861407392658293e-05, -8.344646857949556e-07, -0.002300237538293004, -0.019201472401618958], "finish_reason": "stop"}, {"text": " formatted_report<|endoftext|>import logging", "tokens": [" formatted", "_", "report", "<", "|", "end", "of", "text", "|>", "import", " logging", "\n"], "logprobs": [-0.015193680301308632, -1.883488948806189e-05, -9.881961887003854e-05, -1.0726206302642822, -2.0265558760002023e-06, -1.311301275563892e-06, -0.00015746307326480746, -5.8410845667822286e-05, -0.1523839384317398, -1.1421537399291992, -3.8388447761535645, -0.01504291221499443], "finish_reason": "stop"}], "metrics": {"energy": 448.163517757416, "energy_per_token": 1.3875031509517524, "time": 19.758247, "time_per_token": 0.06117104334365325}}
