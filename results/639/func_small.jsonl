{"outputs": [{"text": "X = np.random.randn(num_samples, num_features)\n    df = pd.DataFrame(X, columns=list('ABCD'))\n    df['label'] = df.apply(\n        lambda x: np.mean(x) > np.mean(df[x.name]), axis=1\n    ).astype(int)\n    ax = sns.heatmap(df.corr(), annot=True, cmap='RdBu')\n    return df, ax", "tokens": ["X", " =", " np", ".", "random", ".", "rand", "n", "(", "num", "_", "samples", ",", " num", "_", "features", ")", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "X", ",", " columns", "=", "list", "('", "ABC", "D", "'))", "\n", "    ", "df", "['", "label", "']", " =", " df", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " np", ".", "mean", "(", "x", ")", " >", " np", ".", "mean", "(", "df", "[", "x", ".", "name", "])", ",", " axis", "=", "1", "\n", "    ", ")", ".", "ast", "ype", "(", "int", ")", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "df", ".", "corr", "()", ",", " annot", "=", "True", ",", " c", "map", "='", "R", "dB", "u", "')", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "if"], "logprobs": [-2.9523863792419434, -0.019686080515384674, -0.2759719491004944, -1.5735502529423684e-05, -0.0034541962668299675, -9.452849917579442e-05, -0.4999910891056061, -1.0537376403808594, -0.001095529063604772, -0.017819315195083618, -3.576272320060525e-06, -0.00214406312443316, -0.0008099374244920909, -0.00921650230884552, -2.396077979938127e-05, -0.00012373158824630082, -0.0031072453130036592, -0.029801445081830025, -0.08998734503984451, -0.4098553955554962, -0.01097193080931902, -0.0024562685284763575, -8.4638240878121e-06, -0.0015135272406041622, -0.00406012125313282, -0.0812821164727211, -0.44169843196868896, -0.03809695690870285, -0.8973144888877869, -0.22286103665828705, -0.7986007928848267, -0.37115713953971863, -0.5924158096313477, -0.04309457167983055, -0.007075846660882235, -0.14145563542842865, -1.753588318824768, -0.4259258806705475, -3.9532289505004883, -0.005491291638463736, -0.004078998696058989, -2.824911594390869, -0.44491586089134216, -0.5629464387893677, -0.003961217124015093, -2.822266101837158, -0.03052147664129734, -0.002253732644021511, -0.5135900974273682, -0.0012356749502941966, -2.642415761947632, -0.0005265279905870557, -3.021777391433716, -0.04460461810231209, -0.19520924985408783, -0.34725433588027954, -1.2046029567718506, -2.8658218383789062, -0.0003713871701620519, -1.8397715091705322, -0.02130340225994587, -0.7913859486579895, -1.2289565801620483, -0.6892575025558472, -0.012998373247683048, -0.010944339446723461, -0.04313796013593674, -0.11404358595609665, -0.09044134616851807, -0.039045628160238266, -0.018514785915613174, -0.8224261403083801, -0.012789487838745117, -0.004909009672701359, -1.3697638511657715, -0.04865511879324913, -6.437280717364047e-06, -0.28614965081214905, -0.39235973358154297, -0.0016628975281491876, -0.11911411583423615, -0.23085054755210876, -1.167379379272461, -0.019436731934547424, -0.04279148951172829, -1.7881377516459906e-06, -3.886147169396281e-05, -0.021876685321331024, -1.966933996300213e-05, -0.0005756151513196528, -0.5122995376586914, -0.08150222897529602, -0.01522749476134777, -0.11566989868879318, -0.034955479204654694, -0.812751054763794, -0.00091856240760535, -0.05718931555747986, -0.2796109616756439, -0.5623534321784973, -0.07550566643476486, -0.22459189593791962, -1.2361209392547607, -1.332945466041565, -1.680836794548668e-05, -0.8571710586547852, -0.031683649867773056, -0.07592408359050751, -0.07877858728170395, -0.04826000705361366, -0.005779935047030449, -0.001953480765223503, -0.9591786861419678, -0.01879209093749523, -1.0082249641418457], "finish_reason": "stop"}], "metrics": {"energy": 153.60273115539556, "energy_per_token": 1.335675923090396, "time": 5.88898, "time_per_token": 0.05120852173913044}}
{"outputs": [{"text": "random_values = np.random.rand(num_samples, num_features)\n    df = pd.DataFrame(random_values)\n    return df, sns.heatmap(df.corr(), cmap=\"RdBu\", annot=True)", "tokens": ["random", "_", "values", " =", " np", ".", "random", ".", "rand", "(", "num", "_", "samples", ",", " num", "_", "features", ")", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "random", "_", "values", ")", "\n", "    ", "return", " df", ",", " s", "ns", ".", "heat", "map", "(", "df", ".", "corr", "()", ",", " c", "map", "=", "\"", "R", "dB", "u", "\"", ",", " annot", "=", "True", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-3.148451328277588, -0.5202203392982483, -1.281310796737671, -0.012929298914968967, -0.37346896529197693, -1.4781842764932662e-05, -0.0014105618465691805, -0.00029476112104021013, -0.5647623538970947, -0.42050179839134216, -0.021195335313677788, -1.3947389561508317e-05, -0.0087355375289917, -0.0025144172832369804, -0.00784459337592125, -3.0517112463712692e-05, -0.00010406429646536708, -0.003203262807801366, -0.03916049748659134, -0.08442863076925278, -0.2011018842458725, -0.012019234709441662, -0.004575260449200869, -2.586808113846928e-05, -0.0008798541966825724, -0.002580291125923395, -0.058642495423555374, -9.65590606938349e-06, -0.00011598391574807465, -0.41882482171058655, -0.00540023623034358, -0.39818447828292847, -3.5735740661621094, -0.04055275395512581, -0.08005782216787338, -0.1502063125371933, -8.34461570775602e-06, -0.00028939827461726964, -0.00878635048866272, -2.8490614567999728e-05, -0.002144776750355959, -0.0758761316537857, -0.03292429819703102, -0.006302244495600462, -0.4453592300415039, -0.016252877190709114, -0.7029526829719543, -0.0924287736415863, -1.2844141721725464, -0.010105517692863941, -0.9485725164413452, -0.9173256754875183, -1.4424220353248529e-05, -0.096514031291008, -0.39217886328697205, -0.5270667672157288, -0.000587767455726862, -0.09669012576341629, -1.9070243835449219, -1.1920928244535389e-07, -7.152555099310121e-07, -6.0794889577664435e-05, -0.000395815703086555, -0.06717205047607422], "finish_reason": "stop"}], "metrics": {"energy": 89.94517321395874, "energy_per_token": 1.4053933314681053, "time": 2.751738, "time_per_token": 0.04299590625}}
{"outputs": [{"text": "np.random.seed(42)\n    X = np.random.normal(size=(num_samples, num_features))\n    df = pd.DataFrame(X, columns=list('ABCD'))\n    corr = df.corr(method='pearson')\n    ax = sns.heatmap(corr,\n                    vmin=-1, vmax=1,\n                    center=0,\n                    annot=True,\n                    fmt='.2f',\n                    linewidths=.25,\n                    linecolor='white',\n                    square=True)\n    ax.figure.set_size_inches(8, 8)\n    return df, ax", "tokens": ["np", ".", "random", ".", "seed", "(", "4", "2", ")", "\n", "    ", "X", " =", " np", ".", "random", ".", "normal", "(", "size", "=(", "num", "_", "samples", ",", " num", "_", "features", "))", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "X", ",", " columns", "=", "list", "('", "ABC", "D", "'))", "\n", "    ", "corr", " =", " df", ".", "corr", "(", "method", "='", "pe", "ar", "son", "')", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "corr", ",", "\n", "                ", "    ", "v", "min", "=-", "1", ",", " v", "max", "=", "1", ",", "\n", "                ", "    ", "center", "=", "0", ",", "\n", "                ", "    ", "annot", "=", "True", ",", "\n", "                ", "    ", "fmt", "='", ".", "2", "f", "'", ",", "\n", "                ", "    ", "linewidth", "s", "=", ".", "2", "5", ",", "\n", "                ", "    ", "line", "color", "='", "white", "'", ",", "\n", "                ", "    ", "square", "=", "True", ")", "\n", "    ", "ax", ".", "figure", ".", "set", "_", "size", "_", "in", "ches", "(", "8", ",", " ", "8", ")", "\n", "    ", "return", " df", ",", " ax", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-1.9699119329452515, -0.005270396359264851, -0.003356539411470294, -0.0007768235518597066, -0.01756739243865013, -0.007781785447150469, -0.6827191710472107, -0.15135376155376434, -0.0076249269768595695, -0.1397482454776764, -0.2004983276128769, -2.168736219406128, -0.01563798449933529, -0.2345411330461502, -0.00032455421751365066, -0.004860846791416407, -7.64102369430475e-05, -1.6326310634613037, -0.0017767847748473287, -0.32680854201316833, -0.06957279145717621, -0.005597156938165426, -5.125986263010418e-06, -0.002239816589280963, -0.0009858515113592148, -0.011350463144481182, -1.847726889536716e-05, -0.000144709600135684, -0.005869059823453426, -0.010168061591684818, -0.1809280663728714, -0.2763962149620056, -0.01007625088095665, -0.0034054878633469343, -9.858122211880982e-05, -0.0015787529991939664, -0.0024018031544983387, -0.06946692615747452, -0.5800676345825195, -0.04925855994224548, -1.0426095724105835, -0.2664432227611542, -0.6671288013458252, -0.27892446517944336, -0.5300784111022949, -0.037659306079149246, -0.006493184249848127, -0.1936914622783661, -1.315780520439148, -0.17644652724266052, -0.10931756347417831, -0.006039346568286419, -0.006195861380547285, -2.484987735748291, -0.024056915193796158, -0.06578613817691803, -0.21108169853687286, -3.2305197237292305e-05, -0.001935277134180069, -0.0463845357298851, -0.07974977791309357, -0.10447052866220474, -0.5332506895065308, -0.014878733083605766, -0.013603601604700089, -2.861018856492592e-06, -1.4781842764932662e-05, -0.0030270253773778677, -9.417489309271332e-06, -0.0002227773511549458, -0.06560374051332474, -0.03770476579666138, -3.778238534927368, -0.07483535259962082, -2.2476940155029297, -2.132312536239624, -0.09388669580221176, -0.04863286390900612, -0.0027487610932439566, -0.004650135524570942, -0.1912386119365692, -0.00011324241495458409, -6.222531374078244e-05, -0.001383420079946518, -0.008651040494441986, -1.2829315662384033, -0.0008181562297977507, -0.0021076626144349575, -0.4605867564678192, -0.0006057572900317609, -0.004878285340964794, -0.004068194422870874, -0.07610395550727844, -0.0015628041001036763, -0.0006379238329827785, -1.4032994508743286, -0.0011120808776468039, -0.3231610655784607, -0.030553733929991722, -0.12427014112472534, -0.0006663962849415839, -0.0008083889842964709, -0.8530384302139282, -0.30170056223869324, -0.012823971919715405, -0.03111041523516178, -0.013618770986795425, -0.004058340098708868, -0.0009833505610004067, -0.011380399577319622, -0.0004385939973872155, -0.0004379982128739357, -0.5768766403198242, -0.013791035860776901, -0.0001110968878492713, -0.032508380711078644, -1.3320180177688599, -1.1432626247406006, -0.009173388592898846, -0.0034471871331334114, -0.0003691230376716703, -0.0004800597671419382, -1.305588722229004, -0.06770136952400208, -0.08726172149181366, -0.274784117937088, -0.07304456830024719, -0.012327548116445541, -0.001639452064409852, -0.00040737437666393816, -0.0019321836298331618, -0.3621707260608673, -0.0010288427583873272, -0.03384089469909668, -0.7510374188423157, -0.008869181387126446, -0.13823747634887695, -2.2918896675109863, -0.04256702959537506, -0.25967592000961304, -0.00384935992769897, -1.5866494178771973, -0.05778796598315239, -0.11762015521526337, -0.008234596811234951, -0.0002401778765488416, -0.005780646111816168, -0.04646977409720421, -1.8301117420196533, -0.028435492888092995, -0.07208003848791122, -0.6584332585334778, -0.02582252025604248, -0.024105675518512726, -0.10236681997776031, -0.17758314311504364, -0.048886388540267944, -0.0028741739224642515, -0.006427330896258354, -1.0578242540359497, -9.536738616588991e-07, -1.4305104514278355e-06, -5.340433563105762e-05, -0.0002525725867599249, -2.4236576557159424, -0.011948207393288612], "finish_reason": "stop"}], "metrics": {"energy": 176.05386046409595, "energy_per_token": 1.0605654244825058, "time": 7.156417, "time_per_token": 0.04311094578313253}}
{"outputs": [{"text": "df = pd.DataFrame(np.random.randn(num_samples, num_features))\n    corrs = np.corrcoef(df.values.T)\n    ax = sns.heatmap(corrs, square=True, cbar=False, cbar_kws={'size': 1.25}, ax=None)\n    return df, ax", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "n", "(", "num", "_", "samples", ",", " num", "_", "features", "))", "\n", "    ", "cor", "rs", " =", " np", ".", "corr", "co", "ef", "(", "df", ".", "values", ".", "T", ")", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "cor", "rs", ",", " square", "=", "True", ",", " c", "bar", "=", "False", ",", " c", "bar", "_", "k", "ws", "={", "'", "size", "':", " ", "1", ".", "2", "5", "}", ",", " ax", "=", "None", ")", "\n", "    ", "return", " df", ",", " ax", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.7157119512557983, -0.024374570697546005, -0.014669300056993961, -0.002247666707262397, -0.012723930180072784, -0.0696202740073204, -0.25324469804763794, -2.169585604860913e-05, -0.002617269055917859, -9.047575440490618e-05, -0.4684266149997711, -0.6608330607414246, -0.0006912940880283713, -0.020631587132811546, -5.722029527532868e-06, -0.0013071097200736403, -0.0010673070792108774, -0.013262154534459114, -3.6954811548639555e-06, -0.00010477947944309562, -0.6872215270996094, -0.020204801112413406, -0.12309854477643967, -2.8179397583007812, -1.9905412197113037, -0.010785382241010666, -1.5570037364959717, -6.90197994117625e-05, -0.12487456947565079, -0.0020772088319063187, -0.0008002892718650401, -0.0046999696642160416, -0.029439905658364296, -0.05038851499557495, -0.522885262966156, -0.22760014235973358, -0.0043553500436246395, -0.004707563202828169, -0.07624512910842896, -0.1025991216301918, -0.6812770366668701, -0.010593962855637074, -0.015118299052119255, -3.3378546504536644e-06, -1.811964830267243e-05, -0.010228477418422699, -2.539125671319198e-05, -0.0001839230244513601, -0.085667185485363, -0.0007362039177678525, -0.06754928827285767, -3.225518226623535, -0.0012774649076163769, -0.0933353379368782, -0.039168864488601685, -0.4598933756351471, -0.7510283589363098, -0.030745534226298332, -0.022928131744265556, -1.033685564994812, -1.8310458660125732, -0.9995771050453186, -0.00018654513405635953, -0.10264182835817337, -0.004353331867605448, -1.361596703529358, -0.01273028552532196, -1.942038893699646, -0.0008686583023518324, -0.11106263846158981, -2.2504208087921143, -0.34566429257392883, -1.6551101207733154, -0.8187657594680786, -0.9139559268951416, -0.0037117176689207554, -1.90980863571167, -0.009299888275563717, -0.7116824388504028, -0.6300477981567383, -0.030306851491332054, -0.08007509261369705, -0.42829400300979614, -0.028146246448159218, -0.008852167055010796, -0.005845475476235151, -0.9781268835067749, -7.152555099310121e-07, -1.0728830375228426e-06, -6.985420623095706e-05, -0.00015090756642166525, -0.07381652295589447], "finish_reason": "stop"}], "metrics": {"energy": 102.15733573341375, "energy_per_token": 1.11040582318928, "time": 4.012058, "time_per_token": 0.043609326086956515}}
{"outputs": [{"text": "rng = np.random.RandomState(100)\n    X = rng.randn(num_samples, num_features)\n    df = pd.DataFrame(X, columns=['f' + str(i) for i in range(num_features)])\n    df['TOTAL'] = df.sum(axis=1)\n    df.plot.scatter(x='TOTAL', y='f0')\n    ax = df.plot.scatter(x='TOTAL', y='f0')\n    return df, ax", "tokens": ["r", "ng", " =", " np", ".", "random", ".", "Random", "State", "(", "1", "0", "0", ")", "\n", "    ", "X", " =", " r", "ng", ".", "rand", "n", "(", "num", "_", "samples", ",", " num", "_", "features", ")", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "X", ",", " columns", "=['", "f", "'", " +", " str", "(", "i", ")", " for", " i", " in", " range", "(", "num", "_", "features", ")]", ")", "\n", "    ", "df", "['", "T", "OTAL", "']", " =", " df", ".", "sum", "(", "axis", "=", "1", ")", "\n", "    ", "df", ".", "plot", ".", "scatter", "(", "x", "='", "T", "OTAL", "'", ",", " y", "='", "f", "0", "')", "\n", "    ", "ax", " =", " df", ".", "plot", ".", "scatter", "(", "x", "='", "T", "OTAL", "'", ",", " y", "='", "f", "0", "')", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "if"], "logprobs": [-3.9795727729797363, -0.07335413247346878, -0.005684282630681992, -0.030566800385713577, -2.098061486321967e-05, -0.0006587718962691724, -0.031221691519021988, -0.43788036704063416, -3.576214658096433e-05, -0.04302982985973358, -1.6316676139831543, -1.4588295221328735, -0.2822222411632538, -0.009219454601407051, -0.10077852755784988, -0.07519577443599701, -0.5498573780059814, -0.021330825984477997, -0.2823612093925476, -4.95898348162882e-05, -5.602820692729438e-06, -0.02016870118677616, -0.5578927993774414, -0.00026639728457666934, -0.015516511164605618, -2.861018856492592e-06, -0.001627312507480383, -0.0006547214579768479, -0.006627365481108427, -1.4305012882687151e-05, -0.000248043768806383, -0.0033566581550985575, -0.014202469028532505, -0.08702561259269714, -0.32389453053474426, -0.01921655796468258, -0.003854228649288416, -0.000129691296024248, -0.0009425011812709272, -0.0027254601009190083, -0.1382790058851242, -0.4712139368057251, -0.017774110659956932, -0.988899290561676, -1.3784432411193848, -2.1536121368408203, -0.0003816353273577988, -0.00029416524921543896, -0.00014208737411536276, -0.007229714188724756, -0.07563554495573044, -0.019063355401158333, -3.814624506048858e-05, -0.00021181246847845614, -0.0012280549854040146, -0.0003334919747430831, -0.032346002757549286, -1.168244216387393e-05, -0.00024077377747744322, -0.0010631391778588295, -0.007573108654469252, -0.014421164989471436, -0.16889874637126923, -1.6138118505477905, -0.3336373269557953, -0.5892552733421326, -0.31522291898727417, -0.0012511529494076967, -0.0022820401936769485, -0.14860792458057404, -0.006446163635700941, -0.2014452964067459, -0.0003406421164982021, -0.002071736380457878, -0.00302940234541893, -0.00011920218821614981, -0.01091828104108572, -0.024320470169186592, -0.1659247726202011, -1.012009859085083, -1.3190503120422363, -0.7205535769462585, -0.07687730342149734, -0.6342158913612366, -0.0757305920124054, -0.011952684260904789, -0.015324116684496403, -0.8431813716888428, -7.510157047363464e-06, -0.001409133430570364, -9.011816291604191e-05, -0.01669776812195778, -0.041849564760923386, -0.013868633657693863, -0.34313929080963135, -1.3896642923355103, -0.04464919492602348, -0.08082064241170883, -1.2177337408065796, -0.03554997965693474, -1.7569782733917236, -0.09628648310899734, -0.18256117403507233, -0.3044767379760742, -0.004370186012238264, -0.03360658138990402, -0.01295565813779831, -0.009967435151338577, -0.043809548020362854, -9.536738616588991e-07, -0.001157448161393404, -1.2397689715726301e-05, -0.004715631250292063, -0.0005776405450887978, -0.0003486264031380415, -0.9303427338600159, -1.014683485031128, -0.0450318343937397, -0.1383136659860611, -0.3065977096557617, -0.04575464874505997, -0.017235498875379562, -0.015364735387265682, -0.8014472126960754, -0.025300314649939537, -0.7855405211448669], "finish_reason": "stop"}], "metrics": {"energy": 118.02145318412778, "energy_per_token": 0.93667819987403, "time": 5.271233, "time_per_token": 0.04183518253968253}}
{"outputs": [{"text": "# generate a DataFrame with random values\n    df = pd.DataFrame(np.random.rand(num_samples, num_features), columns=range(num_features))\n\n    # calculate the correlation matrix\n    corr = df.corr()\n\n    # visualize the correlation matrix using a heatmap\n    ax = sns.heatmap(corr, annot=True, fmt='.2f', cmap='RdBu')\n\n    return df, ax", "tokens": ["#", " generate", " a", " Data", "Frame", " with", " random", " values", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "(", "num", "_", "samples", ",", " num", "_", "features", ")", ",", " columns", "=", "range", "(", "num", "_", "features", "))", "\n", "\n", "    ", "#", " calculate", " the", " correlation", " matrix", "\n", "    ", "corr", " =", " df", ".", "corr", "()", "\n", "\n", "    ", "#", " visualize", " the", " correlation", " matrix", " using", " a", " heat", "map", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "corr", ",", " annot", "=", "True", ",", " fmt", "='", ".", "2", "f", "'", ",", " c", "map", "='", "R", "dB", "u", "')", "\n", "\n", "    ", "return", " df", ",", " ax"], "logprobs": [-1.5227664709091187, -2.760735034942627, -1.3610979318618774, -1.764934778213501, -0.002229825360700488, -0.06316445022821426, -0.10568999499082565, -0.029693135991692543, -0.09821295738220215, -0.003102491609752178, -0.45559757947921753, -0.012009811587631702, -0.010249244049191475, -0.001746558933518827, -0.006090178154408932, -0.042491741478443146, -0.16423560678958893, -2.3483953555114567e-05, -0.00126008247025311, -9.619726915843785e-05, -0.4462859630584717, -0.8214293122291565, -0.0211606714874506, -2.9802276912960224e-06, -0.0016356435371562839, -0.0010711177019402385, -0.007445207331329584, -4.768360213347478e-06, -0.00010168035078095272, -1.120289921760559, -0.021675478667020798, -0.4838235378265381, -0.2302304059267044, -2.402186393737793, -0.0019449143437668681, -0.02741858921945095, -1.3470558769768104e-05, -0.0009608419495634735, -0.008082539774477482, -0.003338717622682452, -0.2196047008037567, -0.000679500459227711, -0.007053593173623085, -0.06789018213748932, -0.12052955478429794, -0.04141046851873398, -1.4497191905975342, -0.3835759162902832, -0.00040665941196493804, -0.5487443804740906, -0.3203963041305542, -0.029489444568753242, -0.0024737492203712463, -0.0058158463798463345, -0.062263373285532, -0.04258302226662636, -0.04112929850816727, -0.0004731489170808345, -0.008383558131754398, -0.4137986898422241, -0.02900945022702217, -0.03796371817588806, -0.09835957735776901, -0.3234173059463501, -0.1570408046245575, -0.002336750039830804, -0.0016439745668321848, -0.012823736295104027, -0.0008237544680014253, -0.37858691811561584, -0.0058730891905725, -0.01185773778706789, -1.9073468138230965e-06, -1.0013530300057027e-05, -0.0027977393474429846, -1.8358061424805783e-05, -0.00020144341397099197, -0.020558133721351624, -0.028312550857663155, -1.1782124042510986, -0.0007952864980325103, -0.022546730935573578, -0.0768737643957138, -1.8117388486862183, -0.37398412823677063, -0.02619907446205616, -0.10859596729278564, -0.07946585863828659, -0.05160528048872948, -0.00021371940965764225, -0.8489992022514343, -0.054676007479429245, -0.02525254152715206, -0.7024566531181335, -0.33719131350517273, -2.5987286790041253e-05, -0.9642311930656433, -0.008542188443243504, -0.19768713414669037, -0.001462343498133123, -0.3061555325984955, -0.018096694722771645, -0.0015919642755761743, -0.0031805664766579866], "finish_reason": "stop"}], "metrics": {"energy": 147.83280177974703, "energy_per_token": 1.4214692478821829, "time": 4.625133, "time_per_token": 0.04447243269230769}}
{"outputs": [{"text": "np.random.seed(0)  # to make the function reproducible\n    df = pd.DataFrame(np.random.rand(num_samples, num_features), columns=list(\"ABCDE\"))\n    corr = df.corr()\n    sns.heatmap(corr, annot=True)\n    return df, ax", "tokens": ["np", ".", "random", ".", "seed", "(", "0", ")", "  ", "#", " to", " make", " the", " function", " reprodu", "cible", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "(", "num", "_", "samples", ",", " num", "_", "features", ")", ",", " columns", "=", "list", "(", "\"", "ABC", "DE", "\"", "))", "\n", "    ", "corr", " =", " df", ".", "corr", "()", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "corr", ",", " annot", "=", "True", ")", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "if"], "logprobs": [-1.9699119329452515, -0.005270396359264851, -0.003356539411470294, -0.0007768235518597066, -0.01756739243865013, -0.007781785447150469, -1.3875322341918945, -0.0013547299895435572, -2.5066356658935547, -0.0009447640040889382, -3.3557822704315186, -1.301673173904419, -0.4533737599849701, -3.560634136199951, -1.4594836235046387, -0.0024748193100094795, -0.09763381630182266, -0.37617456912994385, -0.8524144291877747, -0.014445018023252487, -0.009230085648596287, -0.00015031162183731794, -0.0070882756263017654, -0.09904886782169342, -0.29355016350746155, -0.00012468514614738524, -0.0019074357114732265, -8.451581379631534e-05, -0.3188292384147644, -1.1390308141708374, -0.024937840178608894, -2.145764938177308e-06, -0.0014419882791116834, -0.00066985102603212, -0.005074597429484129, -3.3378546504536644e-06, -4.577531944960356e-05, -0.8396806716918945, -0.01530697662383318, -0.2971123158931732, -0.3452152609825134, -0.11063893139362335, -0.8636527061462402, -0.4010953903198242, -0.18445684015750885, -1.2511922121047974, -0.36835047602653503, -0.07216067612171173, -0.019892945885658264, -0.1602996587753296, -1.3893458843231201, -0.12420886754989624, -0.03409693390130997, -0.005525672342628241, -0.00435629952698946, -0.08738265186548233, -0.13065758347511292, -0.11538856476545334, -1.57942533493042, -0.0005869334563612938, -0.002946917898952961, -0.05484630912542343, -9.536697689327411e-06, -0.00013624693383462727, -0.05375685170292854, -0.0826365277171135, -0.632453978061676, -0.000398198957554996, -0.04752672463655472, -1.76408052444458, -0.1803007423877716, -0.10698562860488892, -0.30293935537338257, -0.02673206850886345, -0.017208313569426537, -0.7417519688606262, -1.2811927795410156, -0.023351894691586494, -0.7966156601905823], "finish_reason": "stop"}], "metrics": {"energy": 71.39731231212615, "energy_per_token": 0.9037634469889385, "time": 3.167773, "time_per_token": 0.04009839240506329}}
{"outputs": [{"text": "n_samples = num_samples\n    n_features = num_features\n    data = np.random.randn(n_samples, n_features)\n    df = pd.DataFrame(data, index=np.random.randint(0, 100, n_samples))\n    corr = df.corr()\n    ax = sns.heatmap(corr, cmap='RdBu', vmin=-1, vmax=1, square=True, annot=True)\n    return df, ax", "tokens": ["n", "_", "samples", " =", " num", "_", "samples", "\n", "    ", "n", "_", "features", " =", " num", "_", "features", "\n", "    ", "data", " =", " np", ".", "random", ".", "rand", "n", "(", "n", "_", "samples", ",", " n", "_", "features", ")", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "data", ",", " index", "=", "np", ".", "random", ".", "rand", "int", "(", "0", ",", " ", "1", "0", "0", ",", " n", "_", "samples", "))", "\n", "    ", "corr", " =", " df", ".", "corr", "()", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "corr", ",", " c", "map", "='", "R", "dB", "u", "'", ",", " v", "min", "=-", "1", ",", " v", "max", "=", "1", ",", " square", "=", "True", ",", " annot", "=", "True", ")", "\n", "    ", "return", " df", ",", " ax", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-3.8157029151916504, -0.8310928344726562, -0.415527880191803, -0.10180062800645828, -0.16442565619945526, -4.434487345861271e-05, -0.001016457681544125, -0.026687731966376305, -0.01318603940308094, -0.10240179300308228, -0.003486508736386895, -0.01524322759360075, -0.0014505588915199041, -0.0024536524433642626, -2.002696055569686e-05, -8.308542601298541e-05, -0.0031097407918423414, -0.797971248626709, -2.708547592163086, -0.07956946641206741, -0.6342514753341675, -1.1086402082582936e-05, -0.005131763871759176, -0.00018690270371735096, -0.5167136788368225, -0.7255839109420776, -0.0003960540343541652, -0.013033202849328518, -3.218599158572033e-05, -0.0030422378331422806, -0.0011815002653747797, -0.005032372660934925, -1.9073468138230965e-06, -0.0006242233794182539, -0.004148093517869711, -0.03975846245884895, -0.3660675883293152, -0.24447348713874817, -0.016673030331730843, -0.004481273237615824, -1.0609570381348021e-05, -0.0018935146508738399, -0.0029998086392879486, -0.014438202604651451, -0.7866071462631226, -2.703071117401123, -0.23716282844543457, -2.4567837715148926, -0.0005389191792346537, -2.7985620498657227, -2.1934269170742482e-05, -0.6674651503562927, -0.21896997094154358, -0.009576335549354553, -0.587078332901001, -0.00018153927521780133, -0.8107851147651672, -0.15416239202022552, -0.0268046073615551, -0.22452199459075928, -0.27048125863075256, -0.8543642163276672, -0.00033825874561443925, -0.007021395489573479, -1.3352630138397217, -0.0077341157011687756, -0.20297326147556305, -1.4852360486984253, -0.17759262025356293, -0.12483837455511093, -0.0033280246425420046, -0.009721673093736172, -0.10760262608528137, -0.050281621515750885, -0.11273672431707382, -0.6056773066520691, -0.015908697620034218, -0.010878306813538074, -3.099436753473128e-06, -2.3603161025675945e-05, -0.002419522497802973, -1.4781842764932662e-05, -0.0002325502864550799, -0.07101764529943466, -0.06809511035680771, -1.0305373668670654, -0.12522876262664795, -0.3047224283218384, -0.5786471962928772, -0.458206444978714, -1.3470558769768104e-05, -0.34390828013420105, -0.006222517695277929, -2.0137853622436523, -0.08941999077796936, -0.00962037593126297, -0.010280512273311615, -0.0029158953111618757, -0.0011630444787442684, -0.000316212244797498, -9.7508447652217e-05, -0.007544832304120064, -0.1516820192337036, -1.2749686241149902, -0.0005184260080568492, -0.018469147384166718, -0.7108508348464966, -0.22332358360290527, -0.0011393491877242923, -0.09802578389644623, -0.47000178694725037, -0.01306826714426279, -0.07002492994070053, -0.10643501579761505, -0.05166686698794365, -0.003560396144166589, -0.0069545116275548935, -1.1148648262023926, -4.768370445162873e-07, -1.311301275563892e-06, -6.401333666872233e-05, -0.00021824838768225163, -2.573202133178711, -0.01409198623150587], "finish_reason": "stop"}], "metrics": {"energy": 135.03662019538882, "energy_per_token": 1.0890050015757162, "time": 5.271629, "time_per_token": 0.04251313709677419}}
{"outputs": [{"text": "np.random.seed(0)\n    df = pd.DataFrame(np.random.random((num_samples, num_features)), columns=list(\"ABCD\"))\n    ax = sns.heatmap(df.corr(), annot=True)\n    return df, ax", "tokens": ["np", ".", "random", ".", "seed", "(", "0", ")", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "random", "((", "num", "_", "samples", ",", " num", "_", "features", "))", ",", " columns", "=", "list", "(", "\"", "ABC", "D", "\"", "))", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "df", ".", "corr", "()", ",", " annot", "=", "True", ")", "\n", "    ", "return", " df", ",", " ax"], "logprobs": [-1.9699119329452515, -0.005270396359264851, -0.003356539411470294, -0.0007768235518597066, -0.01756739243865013, -0.007781785447150469, -1.3875322341918945, -0.0013547299895435572, -0.1070900559425354, -0.19373773038387299, -0.8225063681602478, -0.022465724498033524, -0.009869231842458248, -0.0002485204895492643, -0.008643713779747486, -0.16748617589473724, -0.3159385025501251, -0.00025567124248482287, -0.004212910309433937, -0.00013302871957421303, -1.9061002731323242, -0.22583234310150146, -0.012218625284731388, -4.0531076592742465e-06, -0.004601841326802969, -0.0010252702049911022, -0.0192419346421957, -7.390948667307384e-06, -0.00010775939153973013, -0.38975533843040466, -0.016686512157320976, -0.4651247560977936, -0.4852963089942932, -0.14435851573944092, -0.9252133965492249, -0.508455753326416, -0.2709236741065979, -0.8712444305419922, -0.00904191192239523, -0.07641057670116425, -0.010805075988173485, -0.18039251863956451, -1.9572350978851318, -0.01816658489406109, -0.04794928431510925, -2.861018856492592e-06, -2.4199192921514623e-05, -0.01252911426126957, -1.7404405298293568e-05, -0.001016814960166812, -0.06486663967370987, -0.00761984009295702, -0.006588877644389868, -0.22164860367774963, -0.03467030078172684, -0.7838553190231323, -0.0013504442758858204, -0.04052722826600075, -1.2274508476257324, -0.04719166457653046, -0.11033952236175537, -0.058262329548597336, -0.02631879225373268, -0.004202344920486212, -0.0037180122453719378], "finish_reason": "stop"}], "metrics": {"energy": 62.991009607315064, "energy_per_token": 0.9690924554971548, "time": 2.7525086, "time_per_token": 0.042346286153846155}}
{"outputs": [{"text": "df = pd.DataFrame(np.random.randn(num_samples, num_features))\n\n    ax = sns.heatmap(\n        df.corr(),\n        vmin=-1,\n        vmax=1,\n        cmap=\"coolwarm\",\n        linewidths=0.5,\n        linecolor=\"white\",\n        annot=True,\n        cbar_kws={'shrink': 0.75},\n    )\n    return df, ax", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "n", "(", "num", "_", "samples", ",", " num", "_", "features", "))", "\n", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "\n", "        ", "df", ".", "corr", "()", ",", "\n", "        ", "v", "min", "=-", "1", ",", "\n", "        ", "v", "max", "=", "1", ",", "\n", "        ", "cm", "ap", "=", "\"", "cool", "warm", "\"", ",", "\n", "        ", "linewidth", "s", "=", "0", ".", "5", ",", "\n", "        ", "line", "color", "=", "\"", "white", "\"", ",", "\n", "        ", "annot", "=", "True", ",", "\n", "        ", "c", "bar", "_", "k", "ws", "={", "'", "sh", "rink", "':", " ", "0", ".", "7", "5", "}", ",", "\n", "    ", ")", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "if"], "logprobs": [-1.7157119512557983, -0.024374570697546005, -0.014669300056993961, -0.002247666707262397, -0.012723930180072784, -0.0696202740073204, -0.25324469804763794, -2.169585604860913e-05, -0.002617269055917859, -9.047575440490618e-05, -0.4684266149997711, -0.6608330607414246, -0.0006912940880283713, -0.020631587132811546, -5.722029527532868e-06, -0.0013071097200736403, -0.0010673070792108774, -0.013262154534459114, -3.6954811548639555e-06, -0.00010477947944309562, -0.6872215270996094, -0.020204801112413406, -2.1569693088531494, -0.0017926113214343786, -2.495265245437622, -0.017598198726773262, -0.04095950350165367, -3.2186455882765586e-06, -6.007967749610543e-05, -0.013727777637541294, -1.549708758830093e-05, -0.00037079135654494166, -2.346545934677124, -0.02519686333835125, -0.2095317542552948, -0.016853326931595802, -0.03497286140918732, -0.337200403213501, -0.06666865944862366, -0.17075252532958984, -0.003281686222180724, -1.148434042930603, -0.04978938773274422, -0.030235029757022858, -0.005221657920628786, -0.005493662785738707, -0.2712886333465576, -0.00024279984063468874, -0.002773250686004758, -0.00015889335190877318, -7.211902266135439e-05, -0.0012756790965795517, -0.004886707756668329, -0.0018399705877527595, -0.0054007102735340595, -2.035214424133301, -0.00034457468427717686, -0.23824858665466309, -0.008405309170484543, -1.971463918685913, -0.02451358549296856, -0.00035553809721022844, -0.02245989628136158, -0.0031711787451058626, -0.0454094260931015, -2.8016839027404785, -0.36203786730766296, -0.00014888131408952177, -0.42747002840042114, -0.04282815009355545, -0.029026705771684647, -0.005857090000063181, -0.002040567807853222, -0.00692302081733942, -1.0023621320724487, -0.027932386845350266, -0.8606616854667664, -0.005168410018086433, -0.4461566209793091, -5.245071224635467e-05, -0.10900087654590607, -0.0024378362577408552, -0.15721480548381805, -0.569312334060669, -0.0011089849285781384, -0.4305424690246582, -0.04790383204817772, -0.005944667384028435, -0.11478506773710251, -1.7020471096038818, -0.000993711524643004, -0.3986014723777771, -0.021358715370297432, -0.0028248426970094442, -1.2399219274520874, -0.49214664101600647, -0.21730607748031616, -0.002357443794608116, -0.0004687402688432485, -0.023225413635373116, -0.17714247107505798, -0.000339569611242041, -0.902527928352356, -1.042710781097412, -0.6193056106567383, -0.26559707522392273, -0.011460895650088787, -0.6600348949432373, -0.0031608403660357, -0.01590893231332302, -1.2854676246643066, -0.25155386328697205, -0.031426068395376205, -0.00318971648812294, -0.002906386274844408, -1.1452327966690063, -0.022368041798472404, -0.8767898082733154], "finish_reason": "stop"}], "metrics": {"energy": 117.01018064022063, "energy_per_token": 0.9916117003408528, "time": 5.057751, "time_per_token": 0.042862296610169486}}
{"outputs": [{"text": "df = pd.DataFrame(\n        data=np.random.rand(num_samples, num_features),\n        columns=[str(i) for i in range(num_features)]\n    )\n    df[\"sum\"] = df.sum(axis=1)\n    corr_matrix = df.corr()\n    sns.heatmap(corr_matrix, ax=ax)\n    return df, ax", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "\n", "        ", "data", "=", "np", ".", "random", ".", "rand", "(", "num", "_", "samples", ",", " num", "_", "features", ")", ",", "\n", "        ", "columns", "=[", "str", "(", "i", ")", " for", " i", " in", " range", "(", "num", "_", "features", ")]", "\n", "    ", ")", "\n", "    ", "df", "[", "\"", "sum", "\"", "]", " =", " df", ".", "sum", "(", "axis", "=", "1", ")", "\n", "    ", "corr", "_", "matrix", " =", " df", ".", "corr", "()", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "corr", "_", "matrix", ",", " ax", "=", "ax", ")", "\n", "    ", "return", " df", ",", " ax", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.7157119512557983, -0.024374570697546005, -0.014669300056993961, -0.002247666707262397, -0.012723930180072784, -0.0696202740073204, -1.7815535068511963, -0.017057614400982857, -3.0299625396728516, -0.22892846167087555, -0.03865312412381172, -3.421248038648628e-05, -0.009206698276102543, -0.00012766500003635883, -0.511781632900238, -0.7933118343353271, -0.07087462395429611, -3.814689989667386e-06, -0.0032943999394774437, -0.0010649253381416202, -0.0067506348714232445, -2.50339189733495e-06, -0.00016234986833296716, -0.010204169899225235, -0.0389179065823555, -0.09105688333511353, -0.010694335214793682, -0.3486648201942444, -0.5618273615837097, -3.085491895675659, -0.027402929961681366, -0.5286740660667419, -0.0988842025399208, -0.00803358294069767, -0.00016759421851020306, -0.0002892790944315493, -0.008450228720903397, -0.0006075443816371262, -0.11933811753988266, -1.8000440832111053e-05, -0.002473630243912339, -0.003961335867643356, -1.2068103551864624, -0.02819921262562275, -0.0012836558744311333, -0.014529379084706306, -0.38987860083580017, -1.7426459789276123, -1.7222353219985962, -0.1116441860795021, -2.2058422565460205, -0.0630786120891571, -0.001404966926202178, -0.0019614521879702806, -0.07401525974273682, -0.0015113847330212593, -0.11762068420648575, -0.008624449372291565, -0.017388278618454933, -0.004340988118201494, -0.022473067045211792, -0.047061000019311905, -0.03956804424524307, -0.12861794233322144, -1.9515514373779297, -1.884994626045227, -0.39308857917785645, -0.009001036174595356, -0.09236541390419006, -0.012772304005920887, -0.02042545937001705, -0.11103489995002747, -0.116612508893013, -0.14630012214183807, -1.646531581878662, -0.0017150230705738068, -0.0029667671769857407, -0.08367513865232468, -1.2755313036905136e-05, -0.00019608005823101848, -0.26751288771629333, -8.77341881277971e-05, -8.713819261174649e-05, -0.12118968367576599, -3.659465789794922, -0.006476602982729673, -0.056822001934051514, -1.25557279586792, -0.03702286258339882, -0.169085294008255, -0.2559936046600342, -0.04234926402568817, -0.017695527523756027, -0.019586605951189995, -1.316176414489746, -4.768370445162873e-07, -1.311301275563892e-06, -8.582700684200972e-05, -0.00023779425828251988, -0.06415271013975143], "finish_reason": "stop"}], "metrics": {"energy": 103.27890597057339, "energy_per_token": 1.0327890597057339, "time": 4.2127433, "time_per_token": 0.042127433}}
{"outputs": [{"text": "# Generate a random dataset with the specified number of samples and features.\n    df = pd.DataFrame(np.random.randn(num_samples, num_features),\n                      columns=[f\"Feature{i}\" for i in range(num_features)])\n\n    # Calculate the correlation matrix between the features.\n    correlation_matrix = df.corr()\n\n    # Visualize the correlation matrix using a heatmap.\n    ax = sns.heatmap(correlation_matrix, cmap=\"coolwarm\", annot=True)\n\n    # Return the generated DataFrame and the Axes object.\n    return df, ax", "tokens": ["#", " Generate", " a", " random", " dataset", " with", " the", " specified", " number", " of", " samples", " and", " features", ".", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "n", "(", "num", "_", "samples", ",", " num", "_", "features", ")", ",", "\n", "                ", "      ", "columns", "=[", "f", "\"", "Feature", "{", "i", "}\"", " for", " i", " in", " range", "(", "num", "_", "features", ")]", ")", "\n", "\n", "    ", "#", " Calculate", " the", " correlation", " matrix", " between", " the", " features", ".", "\n", "    ", "correlation", "_", "matrix", " =", " df", ".", "corr", "()", "\n", "\n", "    ", "#", " Visual", "ize", " the", " correlation", " matrix", " using", " a", " heat", "map", ".", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "correlation", "_", "matrix", ",", " c", "map", "=", "\"", "cool", "warm", "\"", ",", " annot", "=", "True", ")", "\n", "\n", "    ", "#", " Return", " the", " generated", " Data", "Frame", " and", " the", " Ax", "es", " object", ".", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "if"], "logprobs": [-1.5227664709091187, -0.9799351096153259, -1.0154297351837158, -0.7418856620788574, -0.9718162417411804, -0.20840728282928467, -1.7760810852050781, -0.44982483983039856, -0.039183422923088074, -0.001291751628741622, -0.273223340511322, -0.028323328122496605, -0.11364177614450455, -1.2887026071548462, -0.00893700122833252, -0.005398931913077831, -1.6280789375305176, -0.014518099837005138, -0.014873565174639225, -0.0014016337227076292, -0.0063252258114516735, -0.03740888833999634, -0.14847496151924133, -1.8000440832111053e-05, -0.000990496133454144, -6.8662193370983e-05, -0.4507449269294739, -0.7264547944068909, -0.0005627478822134435, -0.010275084525346756, -5.602820692729438e-06, -0.0005463061388581991, -0.0006526962388306856, -0.0031481252517551184, -2.145764938177308e-06, -3.981510963058099e-05, -0.8209414482116699, -0.008003072813153267, -1.362290382385254, -0.020419735461473465, -0.20641669631004333, -0.10832718759775162, -1.1446242332458496, -0.10988250374794006, -0.6947487592697144, -0.4504607319831848, -0.7877081632614136, -0.09041444957256317, -0.32325124740600586, -0.0029646276962012053, -4.625213477993384e-05, -0.00018690270371735096, -0.001176618505269289, -0.0001938155182870105, -0.42462027072906494, -1.5139465176616795e-05, -0.00011062010162277147, -0.0010035961167886853, -0.026223808526992798, -0.006420698016881943, -0.18385563790798187, -0.0006281548412516713, -0.012253599241375923, -0.11571014672517776, -0.03260161727666855, -0.29888907074928284, -1.0335774421691895, -0.82846999168396, -0.3246147930622101, -0.09915617853403091, -0.28444936871528625, -0.003082169685512781, -0.00039152585668489337, -2.242579221725464, -0.6130712032318115, -0.02244252897799015, -0.0014068715972825885, -0.037690646946430206, -0.002230538986623287, -0.0069404239766299725, -0.04894394427537918, -0.05915353447198868, -0.024737713858485222, -0.0004124982515349984, -0.009672914631664753, -1.1431951522827148, -0.003572631161659956, -0.0032660020515322685, -0.04112769663333893, -0.07030186802148819, -0.21103999018669128, -0.09900254756212234, -0.003851853543892503, -0.0029859028290957212, -0.051893483847379684, -0.002516319742426276, -0.0005964645533822477, -0.44002607464790344, -0.00668669305741787, -0.01438309345394373, -1.6689286894688848e-06, -9.417489309271332e-06, -0.0033471533097326756, -1.2516897186287679e-05, -0.00017450717859901488, -0.0690801739692688, -0.00010692501382436603, -3.576214658096433e-05, -0.03072148747742176, -0.8603713512420654, -0.045667070895433426, -0.6203258037567139, -0.0036104037426412106, -1.1583964824676514, -0.016106022521853447, -0.00037543877260759473, -0.1276351809501648, -0.47554439306259155, -4.815939246327616e-05, -0.05772382766008377, -1.553511381149292, -0.016465850174427032, -0.29288989305496216, -0.0011462554102763534, -1.0024340152740479, -0.19078795611858368, -0.02616295777261257, -1.426054835319519, -0.3455022871494293, -0.0008042200352065265, -0.07333840429782867, -0.5070871114730835, -0.1887201964855194, -0.0013456823071464896, -0.6843373775482178, -0.4704412817955017, -0.006215409375727177, -0.000560245884116739, -0.005234465003013611, -0.021473180502653122, -0.0007915939204394817, -0.0011116046225652099, -1.263730764389038, -0.013025554828345776, -0.9801347851753235], "finish_reason": "stop"}], "metrics": {"energy": 151.9493560047149, "energy_per_token": 1.047926593135965, "time": 6.111031, "time_per_token": 0.04214504137931034}}
{"outputs": [{"text": "np.random.seed(0)\n    X = np.random.rand(num_samples, num_features)\n\n    df = pd.DataFrame(X)\n    ax = sns.heatmap(df.corr(), cmap='coolwarm', square=True, annot=True, fmt='.2f',\n                     linewidths=.5, cbar=True)\n\n    return df, ax", "tokens": ["np", ".", "random", ".", "seed", "(", "0", ")", "\n", "    ", "X", " =", " np", ".", "random", ".", "rand", "(", "num", "_", "samples", ",", " num", "_", "features", ")", "\n", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "X", ")", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "df", ".", "corr", "()", ",", " c", "map", "='", "cool", "warm", "'", ",", " square", "=", "True", ",", " annot", "=", "True", ",", " fmt", "='", ".", "2", "f", "'", ",", "\n", "                ", "     ", "linewidth", "s", "=", ".", "5", ",", " c", "bar", "=", "True", ")", "\n", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "if"], "logprobs": [-1.9699119329452515, -0.005270396359264851, -0.003356539411470294, -0.0007768235518597066, -0.01756739243865013, -0.007781785447150469, -1.3875322341918945, -0.0013547299895435572, -0.1070900559425354, -0.19373773038387299, -1.9528985023498535, -0.01432492583990097, -0.26642897725105286, -0.00037865620106458664, -0.008616766892373562, -8.95221673999913e-05, -0.34395232796669006, -0.6847342848777771, -0.02053816244006157, -3.4570634852570947e-06, -0.003388855140656233, -0.0009335688664577901, -0.008944444358348846, -1.4781842764932662e-05, -0.00024816294899210334, -0.005328381434082985, -0.02030070871114731, -1.8916354179382324, -0.0006748544401489198, -0.9034239053726196, -0.014275921508669853, -0.0036379601806402206, -0.00011848701251437888, -0.002209842437878251, -0.006774671375751495, -0.07240375876426697, -0.4519989788532257, -0.010652583092451096, -0.5597252249717712, -1.8660447597503662, -0.009210478514432907, -0.05405380576848984, -2.3841830625315197e-06, -3.480850500636734e-05, -0.007133372128009796, -2.109982233378105e-05, -0.0004002247005701065, -0.13677619397640228, -0.00860081147402525, -0.0058702449314296246, -0.2115233987569809, -0.015598551370203495, -1.0340971946716309, -0.046554092317819595, -0.32895103096961975, -1.68381929397583, -0.01958228088915348, -0.360617458820343, -0.0017959432443603873, -2.3650436401367188, -0.0013049667468294501, -0.034140944480895996, -0.48152321577072144, -0.10858773440122604, -0.000316212244797498, -0.034890782088041306, -0.569440484046936, -0.6795807480812073, -0.1842692643404007, -0.0770007073879242, -0.2071267068386078, -0.15511618554592133, -0.2322424203157425, -0.0006733057671226561, -1.4256324768066406, -0.03230699151754379, -0.12733042240142822, -0.23990783095359802, -0.17008671164512634, -0.004369592759758234, -0.5972954034805298, -0.09182147681713104, -0.03992777317762375, -0.48755934834480286, -0.0002698534226510674, -2.70340633392334, -0.26658540964126587, -1.3668491840362549, -0.018207088112831116, -0.5108294486999512, -0.005084916017949581, -0.05819586291909218, -0.038583848625421524, -0.0020718553569167852, -0.0024159548338502645, -1.0096325874328613, -0.013171215541660786, -0.9304097890853882], "finish_reason": "stop"}], "metrics": {"energy": 121.21335441970822, "energy_per_token": 1.2368709634664103, "time": 4.009417, "time_per_token": 0.04091241836734694}}
{"outputs": [{"text": "n = num_samples\n    p = num_features\n\n    X = np.random.randn(n, p)\n    df = pd.DataFrame(X)\n    df[\"y\"] = np.sin(df.sum(axis=1))\n    corr = df.corr()\n    ax = sns.heatmap(corr, annot=True)\n\n    return df, ax", "tokens": ["n", " =", " num", "_", "samples", "\n", "    ", "p", " =", " num", "_", "features", "\n", "\n", "    ", "X", " =", " np", ".", "random", ".", "rand", "n", "(", "n", ",", " p", ")", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "X", ")", "\n", "    ", "df", "[", "\"", "y", "\"", "]", " =", " np", ".", "sin", "(", "df", ".", "sum", "(", "axis", "=", "1", "))", "\n", "    ", "corr", " =", " df", ".", "corr", "()", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "corr", ",", " annot", "=", "True", ")", "\n", "\n", "    ", "return", " df", ",", " ax"], "logprobs": [-3.8157029151916504, -0.7938518524169922, -0.33531060814857483, -0.00011753345461329445, -0.07594993710517883, -0.03933621197938919, -0.015584350563585758, -1.21407151222229, -0.013233097270131111, -0.023871393874287605, -1.5020257706055418e-05, -0.00031704644788987935, -0.005832320544868708, -0.6824913024902344, -0.0009577454766258597, -2.483872890472412, -0.03193354234099388, -0.18322211503982544, -1.3470558769768104e-05, -0.010839156806468964, -7.414542778860778e-05, -0.5132802128791809, -0.7773898839950562, -0.0006704466650262475, -0.020217066630721092, -0.004997381940484047, -0.01612209342420101, -0.00463838828727603, -0.0746212899684906, -0.5399313569068909, -0.7719371318817139, -0.015319420956075191, -0.004013460595160723, -8.940656698541716e-06, -0.002625829540193081, -0.006196216680109501, -0.07091104984283447, -0.9435838460922241, -0.015351939015090466, -0.46287402510643005, -1.1961864233016968, -2.2490930557250977, -0.20671407878398895, -2.032940149307251, -0.07175566256046295, -0.0014602008741348982, -0.0026811149436980486, -0.6535401344299316, -0.0005640584276989102, -3.1078145503997803, -0.024373872205615044, -0.8677772879600525, -0.9246764779090881, -1.9063160419464111, -0.0499674417078495, -0.09416274726390839, -0.012574790045619011, -0.011104687117040157, -0.6620747447013855, -0.20667298138141632, -0.7104165554046631, -1.7122341394424438, -0.21978747844696045, -0.20186632871627808, -0.018750207498669624, -0.006861458066850901, -0.16863451898097992, -0.04910920932888985, -0.4249918758869171, -0.5299630165100098, -0.017217805609107018, -0.015490101650357246, -3.6954811548639555e-06, -2.253030106658116e-05, -0.0038479347713291645, -1.9073304429184645e-05, -0.00024589852546341717, -0.12178415805101395, -0.1019601821899414, -1.0306954383850098, -0.0026793316937983036, -0.0374206006526947, -1.4934797286987305, -0.051888953894376755, -1.3257139921188354, -0.028480447828769684, -0.06680693477392197, -0.04876343905925751, -0.005548315588384867, -0.008197471499443054], "finish_reason": "stop"}], "metrics": {"energy": 94.95604981803893, "energy_per_token": 1.0550672202004325, "time": 3.7721388, "time_per_token": 0.041912653333333334}}
{"outputs": [{"text": "# Generate random data\n    np.random.seed(42)\n    data = np.random.normal(size=(num_samples, num_features))\n\n    # Calculate the correlation matrix\n    corr = pd.DataFrame(np.corrcoef(data.T))\n\n    # Create a heatmap visualization\n    ax = sns.heatmap(corr, vmin=-1, vmax=1, cmap=\"RdBu\")\n\n    return data, ax", "tokens": ["#", " Generate", " random", " data", "\n", "    ", "np", ".", "random", ".", "seed", "(", "4", "2", ")", "\n", "    ", "data", " =", " np", ".", "random", ".", "normal", "(", "size", "=(", "num", "_", "samples", ",", " num", "_", "features", "))", "\n", "\n", "    ", "#", " Calculate", " the", " correlation", " matrix", "\n", "    ", "corr", " =", " pd", ".", "DataFrame", "(", "np", ".", "corr", "co", "ef", "(", "data", ".", "T", "))", "\n", "\n", "    ", "#", " Create", " a", " heat", "map", " visualization", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "corr", ",", " v", "min", "=-", "1", ",", " v", "max", "=", "1", ",", " c", "map", "=", "\"", "R", "dB", "u", "\"", ")", "\n", "\n", "    ", "return", " data", ",", " ax"], "logprobs": [-1.5227664709091187, -0.9799351096153259, -0.6526024341583252, -1.0134785175323486, -0.6535807847976685, -0.0014543681172654033, -1.8729650974273682, -0.00953300204128027, -0.0019857229199260473, -0.0002444683632347733, -0.01163577102124691, -0.0027201101183891296, -0.5990912914276123, -0.11319180577993393, -0.00451426487416029, -0.10013561695814133, -0.012127001769840717, -0.9152823686599731, -0.011999446898698807, -0.46497440338134766, -0.00046850196667946875, -0.0020007132552564144, -6.985420623095706e-05, -1.7831628322601318, -0.0017170461360365152, -0.23489294946193695, -0.035364970564842224, -0.002172730630263686, -1.0728830375228426e-06, -0.0023736178409308195, -0.0006319671520031989, -0.005810987204313278, -1.7046782886609435e-05, -4.5060096454108134e-05, -0.003969647455960512, -0.007003402337431908, -0.4950396418571472, -0.0004273931554052979, -0.02095068246126175, -0.34817269444465637, -1.1041080951690674, -0.12293737381696701, -0.5699141621589661, -0.16144847869873047, -0.00038532938924618065, -0.732275128364563, -0.6796525120735168, -0.9120801091194153, -4.410734163684538e-06, -0.08315464854240417, -0.008618185296654701, -0.41306382417678833, -0.00044467096449807286, -0.12333725392818451, -0.0009298768127337098, -0.0019022003980353475, -0.0005175919504836202, -0.020830785855650902, -0.05278359353542328, -0.03064599633216858, -0.5710241794586182, -0.020403966307640076, -0.03359055891633034, -0.0004266782198101282, -0.010817104950547218, -1.3328264951705933, -0.2056351602077484, -0.0896008238196373, -0.0028092702850699425, -1.030061960220337, -0.8039044737815857, -0.0006596058374270797, -0.8184733390808105, -0.013322265818715096, -0.024606755003333092, -1.6689286894688848e-06, -1.1205610462639015e-05, -0.003218353958800435, -4.95898348162882e-05, -0.0002644904307089746, -0.042558349668979645, -0.030278978869318962, -2.320620059967041, -0.05823444202542305, -0.004305379465222359, -0.001001690630801022, -0.00451485812664032, -0.0003641180810518563, -5.4834770708112046e-05, -2.1934269170742482e-05, -0.0010140759404748678, -0.03798047453165054, -1.0673418045043945, -0.0361836813390255, -1.2507072687149048, -0.004569801967591047, -0.6126304864883423, -0.25287169218063354, -3.0040289857424796e-05, -0.06499478220939636, -1.6298962831497192, -0.009047582745552063, -0.24739663302898407, -0.002380040008574724, -0.4032808840274811, -0.3517608344554901, -0.0053927660919725895, -0.008546916767954826], "finish_reason": "stop"}], "metrics": {"energy": 122.49953412151338, "energy_per_token": 1.1342549455695683, "time": 4.636465, "time_per_token": 0.042930231481481486}}
{"outputs": [{"text": "np.random.seed(42)\n    X = np.random.normal(size=(num_samples, num_features))\n\n    # calculate the correlation between the features\n    corr = X.T @ X / (X.T @ X)\n\n    # create a Pandas DataFrame from the correlation matrix\n    df = pd.DataFrame(corr, columns=range(num_features), index=range(num_features))\n\n    # visualize the correlation matrix using a heatmap\n    ax = sns.heatmap(df, cmap='YlOrBr')\n\n    return df, ax", "tokens": ["np", ".", "random", ".", "seed", "(", "4", "2", ")", "\n", "    ", "X", " =", " np", ".", "random", ".", "normal", "(", "size", "=(", "num", "_", "samples", ",", " num", "_", "features", "))", "\n", "\n", "    ", "#", " calculate", " the", " correlation", " between", " the", " features", "\n", "    ", "corr", " =", " X", ".", "T", " @", " X", " /", " (", "X", ".", "T", " @", " X", ")", "\n", "\n", "    ", "#", " create", " a", " Pand", "as", " Data", "Frame", " from", " the", " correlation", " matrix", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "corr", ",", " columns", "=", "range", "(", "num", "_", "features", ")", ",", " index", "=", "range", "(", "num", "_", "features", "))", "\n", "\n", "    ", "#", " visualize", " the", " correlation", " matrix", " using", " a", " heat", "map", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "df", ",", " c", "map", "='", "Y", "l", "Or", "Br", "')", "\n", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "def"], "logprobs": [-1.9699119329452515, -0.005270396359264851, -0.003356539411470294, -0.0007768235518597066, -0.01756739243865013, -0.007781785447150469, -0.6827191710472107, -0.15135376155376434, -0.0076249269768595695, -0.1397482454776764, -0.2004983276128769, -2.168736219406128, -0.01563798449933529, -0.2345411330461502, -0.00032455421751365066, -0.004860846791416407, -7.64102369430475e-05, -1.6326310634613037, -0.0017767847748473287, -0.32680854201316833, -0.06957279145717621, -0.005597156938165426, -5.125986263010418e-06, -0.002239816589280963, -0.0009858515113592148, -0.011350463144481182, -1.847726889536716e-05, -0.000144709600135684, -0.005869059823453426, -0.010168061591684818, -1.799446940422058, -0.000865561596583575, -1.4375346899032593, -2.5969491004943848, -0.6702550053596497, -0.1555643230676651, -1.0759942531585693, -0.1757168024778366, -0.05841875448822975, -0.12830762565135956, -0.0014217516873031855, -0.5571561455726624, -0.3275330662727356, -1.4774057865142822, -0.009951029904186726, -0.6294479966163635, -0.5476719737052917, -0.012423508800566196, -0.1350804716348648, -1.591047763824463, -1.213968276977539, -0.029859645292162895, -1.2186408042907715, -0.026466013863682747, -0.0010546842822805047, -0.027659691870212555, -0.24612049758434296, -0.13543647527694702, -0.00040642108069732785, -0.08162330836057663, -1.5544803142547607, -0.24742139875888824, -3.4634828567504883, -2.8490614567999728e-05, -0.03807733207941055, -0.002445447025820613, -1.3735852241516113, -0.04446608945727348, -0.13102783262729645, -0.06108306720852852, -0.05145220458507538, -0.00043299360550008714, -0.10880811512470245, -0.01232483983039856, -0.003913721069693565, -0.0002848696312867105, -0.00042834642226807773, -0.004477119538933039, -0.03315738961100578, -0.4123710095882416, -0.9042134881019592, -0.05377752706408501, -1.123476505279541, -0.00016735584358684719, -0.23001477122306824, -1.168244216387393e-05, -0.004003130830824375, -0.17307302355766296, -0.00010966652916977182, -0.01119899656623602, -0.0005732323625124991, -0.0016657537780702114, -2.7894584491150454e-05, -0.0008465044084005058, -1.6927575416048057e-05, -0.0005695389700122178, -0.0010879080509766936, -0.003995888400822878, -0.051793310791254044, -0.0005600076401606202, -0.05602779611945152, -1.5046498775482178, -0.013799501582980156, -0.16129063069820404, -0.8026453256607056, -0.22680315375328064, -0.16662465035915375, -0.006402457132935524, -0.001634215353988111, -0.0218181349337101, -0.0009569118265062571, -0.3902738094329834, -0.0077388472855091095, -0.03591874986886978, -1.6689286894688848e-06, -8.821448318485636e-06, -0.003903271397575736, -1.847726889536716e-05, -0.0003840185818262398, -0.15745069086551666, -0.06890783458948135, -0.6041315197944641, -0.04531122371554375, -0.2659662067890167, -2.6828956604003906, -0.00040368037298321724, -1.6851716041564941, -2.0060548782348633, -1.1485044956207275, -0.013151214458048344, -0.2632067799568176, -0.0021948551293462515, -0.180886372923851, -0.05707841366529465, -0.0029295645654201508, -0.003392062848433852, -0.9534125924110413, -0.01257055252790451, -1.8075119256973267], "finish_reason": "stop"}], "metrics": {"energy": 139.71787485122684, "energy_per_token": 1.0051645672750131, "time": 5.902092, "time_per_token": 0.042461093525179856}}
{"outputs": [{"text": "df = pd.DataFrame(np.random.random((num_samples, num_features)))\n    cor = df.corr()\n    # ax = sns.heatmap(cor, cmap=\"RdYlGn\", annot=True, square=True, fmt='.2f', linewidths=.5, cbar_kws={\"shrink\": .5})\n    ax = sns.heatmap(cor, cmap=\"RdYlGn\", annot=True, square=True, fmt='.2f')\n    return df, ax", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "random", "((", "num", "_", "samples", ",", " num", "_", "features", ")))", "\n", "    ", "cor", " =", " df", ".", "corr", "()", "\n", "    ", "#", " ax", " =", " s", "ns", ".", "heat", "map", "(", "cor", ",", " c", "map", "=", "\"", "R", "d", "Y", "l", "G", "n", "\"", ",", " annot", "=", "True", ",", " square", "=", "True", ",", " fmt", "='", ".", "2", "f", "'", ",", " linewidth", "s", "=", ".", "5", ",", " c", "bar", "_", "k", "ws", "=", "{\"", "sh", "rink", "\":", " ", ".", "5", "})", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "cor", ",", " c", "map", "=", "\"", "R", "d", "Y", "l", "G", "n", "\"", ",", " annot", "=", "True", ",", " square", "=", "True", ",", " fmt", "='", ".", "2", "f", "')", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "if"], "logprobs": [-1.7157119512557983, -0.024374570697546005, -0.014669300056993961, -0.002247666707262397, -0.012723930180072784, -0.0696202740073204, -0.25324469804763794, -2.169585604860913e-05, -0.002617269055917859, -9.047575440490618e-05, -1.8151005506515503, -0.16207900643348694, -0.011296126060187817, -5.364403477869928e-06, -0.004211960360407829, -0.0010795724811032414, -0.020661598071455956, -5.245195097813848e-06, -0.00013839241000823677, -1.0278786420822144, -0.014630180783569813, -0.12696720659732819, -3.0575127601623535, -0.6129191517829895, -0.5839993357658386, -0.004162576515227556, -0.010804722085595131, -0.1030597984790802, -0.049983203411102295, -0.14046429097652435, -3.476127862930298, -1.9035139083862305, -0.32613083720207214, -0.11192017793655396, -2.586808113846928e-05, -0.0003334919747430831, -0.006818125024437904, -2.47952248173533e-05, -0.0014717471785843372, -0.05357709899544716, -0.22635798156261444, -1.260061502456665, -0.09861873835325241, -1.1692519187927246, -0.042898960411548615, -0.9575320482254028, -0.7383323907852173, -0.017855264246463776, -4.851700214203447e-05, -0.07038287073373795, -0.005855075083673, -0.06970822066068649, -0.34084969758987427, -0.7984766364097595, -0.004209942650049925, -0.04867635294795036, -0.48737701773643494, -1.9609602689743042, -0.002680045086890459, -0.025188028812408447, -0.48402589559555054, -0.7602338194847107, -1.011680006980896, -0.18039490282535553, -0.2081332504749298, -0.24786826968193054, -0.23158635199069977, -0.0016940779751166701, -0.6994605660438538, -0.001879355520941317, -0.0009760859538801014, -0.45384347438812256, -0.0682593509554863, -0.19693103432655334, -0.45012205839157104, -0.00022837892174720764, -0.14776472747325897, -0.032028909772634506, -0.002895807381719351, -0.6156455874443054, -0.030213400721549988, -0.2817012667655945, -0.01612713746726513, -0.004358198493719101, -0.04571296647191048, -0.049330614507198334, -1.8397953510284424, -0.303532212972641, -0.022189786657691002, -0.06470921635627747, -0.7140340209007263, -0.04076221585273743, -0.0456719696521759, -0.00016556799528189003, -2.396077979938127e-05, -0.002968787681311369, -1.7881377516459906e-06, -0.0003828269545920193, -0.039464451372623444, -0.04293013736605644, -0.3466329872608185, -0.014625833369791508, -0.10623447597026825, -0.004865828901529312, -0.11137782037258148, -0.011429782025516033, -0.012522874400019646, -0.00025245340657420456, -0.0024207117967307568, -0.009091882035136223, -0.0073784696869552135, -0.051876503974199295, -0.365421861410141, -0.0008051729528233409, -0.07287179678678513, -0.08151684701442719, -0.9283957481384277, -0.00039915222441777587, -0.027458718046545982, -0.12529787421226501, -0.15862110257148743, -0.09393683820962906, -0.03117547184228897, -0.07627848535776138, -0.019386224448680878, -1.74935781955719, -0.03075050376355648, -0.16006240248680115, -0.2056945562362671, -0.06659416109323502, -0.005782186985015869, -0.01977093517780304, -0.8260390162467957, -0.05741366744041443, -0.8219987750053406], "finish_reason": "stop"}], "metrics": {"energy": 155.72352665901187, "energy_per_token": 1.1535076048815693, "time": 5.6854157, "time_per_token": 0.04211419037037037}}
{"outputs": [{"text": "# Generate random values and create the DataFrame with column names\n    df = pd.DataFrame(np.random.rand(num_samples, num_features), columns=range(num_features))\n    # Create correlation heatmap\n    df = df.corr()\n    ax = sns.heatmap(df, annot=True, fmt='.3f', linewidths=.5, square=True, cmap=\"Blues\")\n\n    return df, ax", "tokens": ["#", " Generate", " random", " values", " and", " create", " the", " Data", "Frame", " with", " column", " names", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "(", "num", "_", "samples", ",", " num", "_", "features", ")", ",", " columns", "=", "range", "(", "num", "_", "features", "))", "\n", "    ", "#", " Create", " correlation", " heat", "map", "\n", "    ", "df", " =", " df", ".", "corr", "()", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "df", ",", " annot", "=", "True", ",", " fmt", "='", ".", "3", "f", "'", ",", " linewidth", "s", "=", ".", "5", ",", " square", "=", "True", ",", " c", "map", "=", "\"", "Bl", "ues", "\"", ")", "\n", "\n", "    ", "return", " df", ",", " ax", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.5227664709091187, -0.9799351096153259, -0.6526024341583252, -0.7800381779670715, -3.0445919036865234, -1.0533580780029297, -2.9744021892547607, -0.14593198895454407, -0.001969780307263136, -3.030259370803833, -3.4707107543945312, -0.05477498471736908, -0.6724019050598145, -0.004456113558262587, -0.8319715857505798, -0.039246924221515656, -0.018208375200629234, -0.0017801166977733374, -0.004974963143467903, -0.10635795444250107, -0.22913959622383118, -1.680836794548668e-05, -0.00328465667553246, -0.00014780859055463225, -0.4745502769947052, -0.8307303786277771, -0.027919866144657135, -4.291525328881107e-06, -0.0017728578532114625, -0.0012007892364636064, -0.013955394737422466, -3.933898824470816e-06, -5.972207145532593e-05, -0.08942216634750366, -0.009242487139999866, -0.1444738805294037, -0.387162446975708, -1.7614049911499023, -0.004107966553419828, -0.09481232613325119, -1.8000440832111053e-05, -0.0012038849527016282, -0.011883419007062912, -0.0032285728957504034, -1.3833810091018677, -0.5167874097824097, -1.9384510517120361, -3.5523571968078613, -1.7470612525939941, -0.006059726700186729, -0.7994438409805298, -0.0018979170126840472, -3.183539628982544, -1.5151340961456299, -1.2429070472717285, -0.020891377702355385, -0.0742233619093895, -0.12161338329315186, -0.08319205790758133, -0.10412909835577011, -0.6534234881401062, -0.017745302990078926, -0.011378750205039978, -2.622600959512056e-06, -1.6212332411669195e-05, -0.002547711366787553, -2.062299427052494e-05, -0.00035637227119877934, -0.12280063331127167, -0.08930180966854095, -0.6871220469474792, -0.003226077649742365, -0.03594151884317398, -0.2053174525499344, -1.9371213912963867, -0.595156192779541, -0.10029415041208267, -3.0296549797058105, -0.5949627757072449, -0.14968064427375793, -0.0005894353962503374, -0.5181549787521362, -0.003864441066980362, -0.00030310326837934554, -0.22653287649154663, -0.018511978909373283, -0.052540212869644165, -1.9971085786819458, -0.0016229089815169573, -0.019694145768880844, -0.9908795952796936, -0.12498535960912704, -0.3984832465648651, -0.8416045904159546, -0.06221184507012367, -0.4543665647506714, -0.0008855711785145104, -0.0038486472330987453, -0.16494040191173553, -0.011351523920893669, -1.733582854270935, -0.00650751544162631, -0.15904805064201355, -0.03328400477766991, -0.005293756723403931, -0.006119206547737122, -1.2306097745895386, -3.576278118089249e-07, -8.344646857949556e-07, -6.735097849741578e-05, -0.00021395778458099812, -0.0706678181886673], "finish_reason": "stop"}], "metrics": {"energy": 106.71747678756711, "energy_per_token": 0.9528346141747063, "time": 4.6391096, "time_per_token": 0.04142062142857143}}
{"outputs": [{"text": "np.random.seed(42)\n\n    df = pd.DataFrame(np.random.randn(num_samples, num_features), columns=list(range(num_features)))\n    cor = sns.heatmap(df.corr(), square=True, annot=True, cmap='Greens', fmt='.2f')\n    return df, cor\n\ntask_func(100, 5)", "tokens": ["np", ".", "random", ".", "seed", "(", "4", "2", ")", "\n", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "n", "(", "num", "_", "samples", ",", " num", "_", "features", ")", ",", " columns", "=", "list", "(", "range", "(", "num", "_", "features", ")))", "\n", "    ", "cor", " =", " s", "ns", ".", "heat", "map", "(", "df", ".", "corr", "()", ",", " square", "=", "True", ",", " annot", "=", "True", ",", " c", "map", "='", "G", "reens", "'", ",", " fmt", "='", ".", "2", "f", "')", "\n", "    ", "return", " df", ",", " cor", "\n", "\n", "task", "_", "func", "(", "1", "0", "0", ",", " ", "5", ")", "\n", "\n", "#"], "logprobs": [-1.9699119329452515, -0.005270396359264851, -0.003356539411470294, -0.0007768235518597066, -0.01756739243865013, -0.007781785447150469, -0.6827191710472107, -0.15135376155376434, -0.0076249269768595695, -0.1397482454776764, -1.7066800594329834, -0.0008394769974984229, -0.9960260391235352, -0.01678135246038437, -0.009614590555429459, -0.000226472009671852, -0.006544111296534538, -0.1647547036409378, -0.440514475107193, -0.00020072828920092434, -0.00364176114089787, -0.0001113352773245424, -0.39566296339035034, -0.6782670021057129, -0.0005017452058382332, -0.01867333985865116, -2.264974000354414e-06, -0.0012276978231966496, -0.0007811117684468627, -0.005119547713547945, -2.7418097943154862e-06, -6.115249561844394e-05, -0.45829465985298157, -0.026579316705465317, -0.4086819887161255, -0.4024761915206909, -0.2003336399793625, -0.8973995447158813, -2.174250602722168, -0.00025996167096309364, -0.033486925065517426, -1.811964830267243e-05, -0.0012401993153616786, -0.0212058387696743, -0.008521622978150845, -0.589191198348999, -2.812188148498535, -0.8034448623657227, -2.2852962017059326, -3.707340147229843e-05, -8.487341256113723e-05, -0.25084301829338074, -1.8000440832111053e-05, -0.0018341400427743793, -0.07152395695447922, -0.005063803866505623, -0.006471628323197365, -0.20441825687885284, -0.04086887463927269, -3.107469081878662, -0.0012991330586373806, -0.02964719384908676, -0.11530932784080505, -0.37963607907295227, -0.000542612629942596, -0.021905258297920227, -0.2781176269054413, -0.7024592161178589, -0.5168497562408447, -0.6608333587646484, -2.960141897201538, -0.8206981420516968, -1.0614303350448608, -0.0007945717661641538, -0.38135072588920593, -0.29673662781715393, -0.15984347462654114, -0.21189622581005096, -0.16032300889492035, -1.5030133724212646, -0.060382697731256485, -0.6687691807746887, -0.20118942856788635, -0.04608666151762009, -0.008521031588315964, -0.07652509957551956, -0.8063777089118958, -0.022815929725766182, -3.423308849334717, -0.047210197895765305, -0.13219685852527618, -1.2648028135299683, -0.23457913100719452, -0.022077500820159912, -2.6013498306274414, -0.061231985688209534, -0.055027976632118225, -1.6747678518295288, -0.47621411085128784, -0.7846960425376892, -0.2773997485637665, -0.8424428701400757], "finish_reason": "stop"}], "metrics": {"energy": 117.46348310470579, "energy_per_token": 1.1516027755363312, "time": 4.219865, "time_per_token": 0.04137122549019608}}
{"outputs": [{"text": "df = pd.DataFrame(np.random.randint(-10, 10, size=(num_samples, num_features)), columns=list('abcde'))\n\n    df.corr().iloc[0:2, 0:2].style.background_gradient().set_properties(color='lightgrey').set_caption(\n        'Correlation', color='#000000').set_frame_style(linewidth=0, color='#FFFFFF').set_option(\"font.size\", 10).apply(\n        lambda x: x.set_text_color('black')).set_dtype('unicode')\n    ax = sns.heatmap(df.corr().iloc[0:2, 0:2], cmap='seismic', annot=True, center=0, square=True)\n    return df, ax", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(-", "1", "0", ",", " ", "1", "0", ",", " size", "=(", "num", "_", "samples", ",", " num", "_", "features", "))", ",", " columns", "=", "list", "('", "abc", "de", "'))", "\n", "\n", "    ", "df", ".", "corr", "()", ".", "il", "oc", "[", "0", ":", "2", ",", " ", "0", ":", "2", "]", ".", "style", ".", "background", "_", "gradient", "()", ".", "set", "_", "properties", "(", "color", "='", "light", "grey", "')", ".", "set", "_", "caption", "(", "\n", "        ", "'", "Cor", "relation", "'", ",", " color", "='", "#", "0", "0", "0", "0", "0", "0", "')", ".", "set", "_", "frame", "_", "style", "(", "linewidth", "=", "0", ",", " color", "='", "#", "FFFF", "FF", "')", ".", "set", "_", "option", "(", "\"", "font", ".", "size", "\"", ",", " ", "1", "0", ")", ".", "apply", "(", "\n", "        ", "lambda", " x", ":", " x", ".", "set", "_", "text", "_", "color", "('", "black", "'))", ".", "set", "_", "d", "type", "('", "un", "icode", "')", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "df", ".", "corr", "()", ".", "il", "oc", "[", "0", ":", "2", ",", " ", "0", ":", "2", "]", ",", " c", "map", "='", "se", "ismic", "'", ",", " annot", "=", "True", ",", " center", "=", "0", ",", " square", "=", "True", ")", "\n", "    ", "return", " df", ",", " ax", "\n", "\n", "print"], "logprobs": [-1.7157119512557983, -0.024374570697546005, -0.014669300056993961, -0.002247666707262397, -0.012723930180072784, -0.0696202740073204, -0.25324469804763794, -2.169585604860913e-05, -0.002617269055917859, -9.047575440490618e-05, -0.4684266149997711, -2.2955758571624756, -2.0672051906585693, -0.2932075262069702, -0.02253134548664093, -0.5841526389122009, -0.05309496819972992, -0.017686627805233, -0.03748157620429993, -0.0033062815200537443, -0.5345454812049866, -0.07776233553886414, -0.008706348948180676, -3.2186455882765586e-06, -0.003421644913032651, -0.0007952864980325103, -0.011786581948399544, -1.1444026313256472e-05, -5.6980417866725475e-05, -0.37614354491233826, -0.01405789889395237, -0.8573197722434998, -0.38160809874534607, -0.1381450742483139, -0.6191362738609314, -1.5557094812393188, -1.3795504570007324, -0.03860874101519585, -0.008932157419621944, -2.5144453048706055, -0.0031354096718132496, -2.69447660446167, -1.2703909873962402, -1.219407558441162, -0.8570238947868347, -0.2918691039085388, -3.37963604927063, -0.000398198957554996, -0.4102637469768524, -0.35718294978141785, -0.5003436207771301, -3.3259849548339844, -0.40477919578552246, -0.17390426993370056, -0.02813940867781639, -0.01909925974905491, -0.0709664598107338, -0.003990070428699255, -0.14140276610851288, -0.8766473531723022, -0.002983050188049674, -0.032197222113609314, -0.0005392765742726624, -0.005749829579144716, -1.147296667098999, -0.1788819581270218, -0.5879276990890503, -0.011701988987624645, -0.28152909874916077, -0.035851817578077316, -2.3098347187042236, -0.231226846575737, -3.6712567806243896, -0.9709964990615845, -0.2327299416065216, -0.33317363262176514, -0.7501264214515686, -0.029794156551361084, -0.5037803053855896, -1.7441534996032715, -1.6195261478424072, -0.03893613815307617, -0.24419711530208588, -0.58222895860672, -0.07751955091953278, -3.4289350509643555, -0.6446821689605713, -2.831049919128418, -0.026609497144818306, -2.264072895050049, -1.5164073705673218, -0.1366831362247467, -0.2055269330739975, -0.1368800550699234, -0.12875494360923767, -0.005671955179423094, -0.23921604454517365, -0.267936646938324, -0.48028141260147095, -0.024076232686638832, -2.579289436340332, -0.0065098837949335575, -1.450114369392395, -0.061601269990205765, -3.086071252822876, -0.006942081265151501, -0.5811617970466614, -1.2525086402893066, -0.19904814660549164, -0.02529519982635975, -0.8097304105758667, -1.8750293254852295, -0.012712277472019196, -0.19178205728530884, -0.46469369530677795, -0.43791496753692627, -0.016889194026589394, -4.508707523345947, -0.5937284827232361, -3.1253180503845215, -2.04852294921875, -0.020978815853595734, -0.3457261323928833, -0.0037499601021409035, -0.0021472747903317213, -0.10470728576183319, -0.40029436349868774, -1.5076621770858765, -0.03330187499523163, -0.5317818522453308, -2.785261631011963, -0.6746784448623657, -0.30847522616386414, -1.2318695783615112, -0.08102051913738251, -0.19525514543056488, -0.0019656161312013865, -0.07649506628513336, -0.010070585645735264, -1.7970013618469238, -0.016079042106866837, -2.1128108501434326, -0.011375096626579762, -0.12807638943195343, -0.6581054329872131, -1.0461596250534058, -0.5496976375579834, -0.5308691263198853, -0.3096303641796112, -0.037197232246398926, -3.8506345748901367, -0.06397503614425659, -1.6905314922332764, -2.3973355293273926, -0.001680630026385188, -0.022913102060556412, -0.9641557335853577, -0.9603910446166992, -1.0437748432159424, -0.05807236582040787, -0.09800060093402863, -3.933898824470816e-06, -5.221230458118953e-05, -0.019144872203469276, -1.728519782773219e-05, -0.0006015875260345638, -0.17525769770145416, -0.04232412204146385, -0.013347908854484558, -0.08703872561454773, -0.2488042563199997, -0.013234390877187252, -8.082063141046092e-05, -0.0042596799321472645, -0.003439465072005987, -0.001334848813712597, -0.02854880504310131, -0.0010986251290887594, -0.003979502711445093, -0.0006521005416288972, -0.00023469554434996098, -0.0015147175872698426, -0.03792194277048111, -0.18883775174617767, -1.4863002300262451, -0.12747777998447418, -0.17173320055007935, -3.2813119888305664, -0.0831819623708725, -0.21719998121261597, -0.0032420000061392784, -1.1819621324539185, -0.002430344233289361, -0.07840544730424881, -0.15664856135845184, -2.84829044342041, -0.005773416254669428, -0.03498149290680885, -0.1322973370552063, -2.4710588455200195, -0.001958239823579788, -0.08430691063404083, -1.769586443901062, -0.038038890808820724, -0.28949594497680664, -0.4569217264652252, -0.04394565895199776, -0.009502182714641094, -0.005261977203190327, -1.044480800628662, -0.03528200462460518, -2.7430615425109863], "finish_reason": "stop"}], "metrics": {"energy": 241.0359187736511, "energy_per_token": 1.1369618810077882, "time": 9.263305, "time_per_token": 0.04369483490566038}}
{"outputs": [{"text": "# Create a DataFrame with random values\n    df = pd.DataFrame(np.random.randn(num_samples, num_features))\n\n    # Calculate correlation between features\n    corr_matrix = df.corr()\n\n    # Visualize correlation using heatmap\n    ax = sns.heatmap(corr_matrix, cmap='RdBu', annot=True, square=True, xticklabels=df.columns, yticklabels=df.columns, annot_kws={\"size\": 20})\n\n    return df, ax", "tokens": ["#", " Create", " a", " Data", "Frame", " with", " random", " values", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "n", "(", "num", "_", "samples", ",", " num", "_", "features", "))", "\n", "\n", "    ", "#", " Calculate", " correlation", " between", " features", "\n", "    ", "corr", "_", "matrix", " =", " df", ".", "corr", "()", "\n", "\n", "    ", "#", " Visual", "ize", " correlation", " using", " heat", "map", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "corr", "_", "matrix", ",", " c", "map", "='", "R", "dB", "u", "'", ",", " annot", "=", "True", ",", " square", "=", "True", ",", " ", "xt", "ick", "labels", "=", "df", ".", "columns", ",", " y", "tick", "labels", "=", "df", ".", "columns", ",", " annot", "_", "k", "ws", "=", "{\"", "size", "\":", " ", "2", "0", "})", "\n", "\n", "    ", "return", " df", ",", " ax", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.5227664709091187, -3.0420098304748535, -0.24950216710567474, -1.4991397857666016, -0.002885347232222557, -0.10309840738773346, -0.276935338973999, -0.07364809513092041, -0.4423994719982147, -0.0023669579531997442, -0.34478798508644104, -0.011034656316041946, -0.008896475657820702, -0.00126079679466784, -0.004747310187667608, -0.033242493867874146, -0.16414254903793335, -2.074220174108632e-05, -0.0014004433760419488, -9.297892393078655e-05, -0.5361509919166565, -0.7510706186294556, -0.0004987664869986475, -0.01811671443283558, -1.6689286894688848e-06, -0.0013821106404066086, -0.0009432157967239618, -0.003920608200132847, -3.6954811548639555e-06, -4.029192859889008e-05, -0.6420889496803284, -0.011153846979141235, -0.2169661521911621, -0.00042632073746062815, -0.007105675060302019, -0.14660203456878662, -2.5476529598236084, -0.8925043940544128, -0.3934790790081024, -0.30439576506614685, -0.0006074252305552363, -0.5471920967102051, -1.585832118988037, -0.486721396446228, -0.001335444045253098, -0.08858820796012878, -0.0005052005290053785, -0.004564343020319939, -0.045832309871912, -0.04140738025307655, -0.04040198400616646, -0.0003334919747430831, -0.011629996821284294, -0.9055198431015015, -0.004596857354044914, -0.48029112815856934, -0.44676968455314636, -0.5404903292655945, -0.0019516960019245744, -0.012175758369266987, -0.0013074668822810054, -0.38809072971343994, -0.00879273097962141, -0.016015108674764633, -2.0265558760002023e-06, -1.7762025890988298e-05, -0.003992682322859764, -1.3112935448589269e-05, -0.00017987063620239496, -0.0622619166970253, -0.00011574551899684593, -5.876845170860179e-05, -0.051084816455841064, -0.7950969338417053, -0.0663335919380188, -0.18254578113555908, -0.953222930431366, -0.4358314871788025, -3.397406908334233e-05, -0.2681924104690552, -0.0345701165497303, -0.6436536312103271, -0.00026472879108041525, -0.2089577317237854, -0.2374355047941208, -2.191685676574707, -0.0013003236381337047, -0.029425783082842827, -0.41631463170051575, -3.3441214561462402, -0.0015482831513509154, -0.009669491089880466, -4.911301948595792e-05, -0.003884865902364254, -0.7086930274963379, -0.0009775151265785098, -0.012291045859456062, -0.07859291881322861, -0.22177962958812714, -0.0008716359734535217, -6.9141146923357155e-06, -0.000834236154332757, -0.002438906580209732, -6.401333666872233e-05, -0.0014968630857765675, -1.4625965356826782, -2.8615739345550537, -0.004691426642239094, -0.02370178885757923, -0.0006235085893422365, -0.5280321836471558, -0.15540564060211182, -0.1722908616065979, -0.0053426106460392475, -0.11429966986179352, -2.3665597438812256, -0.6723443865776062, -0.3402385115623474, -0.007280958816409111, -0.46225348114967346, -0.0034012107644230127, -0.19577495753765106, -0.024534057825803757, -0.0030485368333756924, -0.006881584879010916, -1.0388298034667969, -5.960462772236497e-07, -7.152555099310121e-07, -5.435795901576057e-05, -0.0001778444420779124, -0.0686577707529068], "finish_reason": "stop"}], "metrics": {"energy": 124.61951154899596, "energy_per_token": 0.9512939812900455, "time": 5.4788103, "time_per_token": 0.04182297938931298}}
{"outputs": [{"text": "# Generate a random dataset of `num_samples` samples, each with `num_features` features.\n    X = np.random.randn(num_samples, num_features)\n    df = pd.DataFrame(X, columns=list('ABCD'))\n\n    # Calculate the correlation matrix for each feature.\n    corrs = df.corr(method='spearman')\n\n    # Plot the heatmap using seaborn.\n    ax = sns.heatmap(corrs, cmap='RdYlGn', vmin=-1, vmax=1, center=0, square=True, annot=True)\n    return df, ax", "tokens": ["#", " Generate", " a", " random", " dataset", " of", " `", "num", "_", "samples", "`", " samples", ",", " each", " with", " `", "num", "_", "features", "`", " features", ".", "\n", "    ", "X", " =", " np", ".", "random", ".", "rand", "n", "(", "num", "_", "samples", ",", " num", "_", "features", ")", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "X", ",", " columns", "=", "list", "('", "ABC", "D", "'))", "\n", "\n", "    ", "#", " Calculate", " the", " correlation", " matrix", " for", " each", " feature", ".", "\n", "    ", "cor", "rs", " =", " df", ".", "corr", "(", "method", "='", "spe", "ar", "man", "')", "\n", "\n", "    ", "#", " Plot", " the", " heat", "map", " using", " se", "ab", "orn", ".", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "cor", "rs", ",", " c", "map", "='", "R", "d", "Y", "l", "G", "n", "'", ",", " v", "min", "=-", "1", ",", " v", "max", "=", "1", ",", " center", "=", "0", ",", " square", "=", "True", ",", " annot", "=", "True", ")", "\n", "    ", "return", " df", ",", " ax"], "logprobs": [-1.5227664709091187, -0.9799351096153259, -1.0154297351837158, -0.7418856620788574, -0.9718162417411804, -3.201920509338379, -3.2784571647644043, -0.010864628478884697, -0.0010542079107835889, -0.11084882915019989, -0.011170940473675728, -1.3767889738082886, -1.461960792541504, -0.3466040790081024, -0.3494671583175659, -0.04191289842128754, -0.00271428469568491, -9.464769391342998e-05, -0.0010337253334000707, -0.00042572495294734836, -0.38419124484062195, -0.9609520435333252, -0.0065736002288758755, -0.004902959801256657, -1.614115834236145, -0.008560036309063435, -0.21306918561458588, -1.1920858014491387e-05, -0.0010723085142672062, -4.410646579344757e-05, -0.5451952219009399, -1.2039151191711426, -0.0003203832311555743, -0.009365906938910484, -1.597391747054644e-05, -0.00025233422638848424, -0.0003352795320097357, -0.0023625576868653297, -6.556489552167477e-06, -0.00011955977242905647, -0.0017064546700567007, -0.012364049442112446, -1.1347997188568115, -1.5744435787200928, -0.008839169517159462, -0.0020286710932850838, -1.311301275563892e-06, -0.0017539369873702526, -0.0027380618266761303, -0.06938929855823517, -0.4376983940601349, -0.04272021725773811, -0.8015362024307251, -0.2548763155937195, -0.9701340198516846, -0.38591331243515015, -1.4654078483581543, -0.03509533032774925, -0.024397488683462143, -0.3368961811065674, -0.0010213402565568686, -0.017319507896900177, -0.21029847860336304, -0.04128327593207359, -0.38462382555007935, -0.7268761992454529, -2.5300519466400146, -2.476372241973877, -1.0180511474609375, -0.873555600643158, -0.009104758501052856, -0.0008572241058573127, -1.3819915056228638, -0.38418352603912354, -0.011483286507427692, -0.6792157888412476, -0.007132070604711771, -0.10093361139297485, -1.168013095855713, -0.08330251276493073, -0.05713550001382828, -2.366001605987549, -0.0005548844928853214, -7.629365427419543e-06, -0.03933196887373924, -0.16158327460289001, -0.1411202996969223, -0.0006939148879610002, -0.011415992863476276, -1.77205228805542, -0.40734177827835083, -1.1854190826416016, -0.003401567228138447, -0.9661239385604858, -1.1239659786224365, -0.0005590544897131622, -2.8609820219571702e-05, -0.18807366490364075, -0.021454863250255585, -0.000802075956016779, -0.4977955222129822, -0.008034410886466503, -0.006768514402210712, -1.4305104514278355e-06, -1.0490362910786644e-05, -0.004554612562060356, -2.1457441107486375e-05, -0.0002611534437164664, -0.08929232507944107, -7.962863310240209e-05, -0.05031880363821983, -0.8559053540229797, -0.12421718239784241, -0.0492861345410347, -0.7413188219070435, -0.637717604637146, -0.020374765619635582, -3.075552376685664e-05, -0.15028652548789978, -0.0108872689306736, -0.39423999190330505, -0.0025684009306132793, -1.902747392654419, -0.06922490894794464, -0.006686574779450893, -0.003393844934180379, -0.0016265984158962965, -0.0008364992681890726, -0.00017987063620239496, -5.829164365422912e-05, -0.008888441137969494, -0.16243283450603485, -1.973271131515503, -0.0006171943969093263, -0.004442228004336357, -0.10140270739793777, -1.343178629875183, -0.00037889453233219683, -0.011309917084872723, -0.5334351658821106, -0.2290503978729248, -0.0005368936690501869, -0.09942236542701721, -0.8544648289680481, -0.007046490907669067, -0.9069198966026306, -0.20196890830993652, -0.058520738035440445, -0.0033541631419211626, -0.003627151483669877], "finish_reason": "stop"}], "metrics": {"energy": 164.6899964809417, "energy_per_token": 1.0979333098729447, "time": 6.5340104, "time_per_token": 0.04356006933333333}}
{"outputs": [{"text": "X = pd.DataFrame(np.random.randn(num_samples, num_features), columns=[f'col{i}' for i in range(num_features)])\n    corr = X.corr()\n\n    return (X, sns.heatmap(corr, xticklabels=corr.columns, yticklabels=corr.columns))", "tokens": ["X", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "n", "(", "num", "_", "samples", ",", " num", "_", "features", ")", ",", " columns", "=[", "f", "'", "col", "{", "i", "}'", " for", " i", " in", " range", "(", "num", "_", "features", ")]", ")", "\n", "    ", "corr", " =", " X", ".", "corr", "()", "\n", "\n", "    ", "return", " (", "X", ",", " s", "ns", ".", "heat", "map", "(", "corr", ",", " ", "xt", "ick", "labels", "=", "corr", ".", "columns", ",", " y", "tick", "labels", "=", "corr", ".", "columns", "))", "\n", "\n", "#"], "logprobs": [-3.0815281867980957, -0.022917645052075386, -1.5190173387527466, -3.1470757676288486e-05, -0.05597786232829094, -0.05072726681828499, -0.14737212657928467, -2.90866428258596e-05, -0.0018618644680827856, -0.0001174142598756589, -0.44034048914909363, -0.5914410948753357, -0.0006666345288977027, -0.02465316280722618, -3.099436753473128e-06, -0.0020216519478708506, -0.001257820287719369, -0.013710727915167809, -1.7881233361549675e-05, -0.00018404220463708043, -0.8831684589385986, -0.01506498921662569, -0.4796120822429657, -1.4346864223480225, -0.21990296244621277, -0.758940577507019, -2.1459968090057373, -0.758265495300293, -0.09370598196983337, -0.11331527680158615, -0.009273195639252663, -0.00015639036428183317, -0.00047183825518004596, -0.0013496108585968614, -0.0004295380203984678, -0.0855194553732872, -1.4781842764932662e-05, -0.0010127659188583493, -0.0014231802197173238, -0.01228268537670374, -0.021039515733718872, -0.1529284417629242, -0.8341330885887146, -0.17498423159122467, -0.12079644948244095, -0.003847578540444374, -0.01331603154540062, -0.1398107409477234, -0.04492573067545891, -2.109778881072998, -0.0009455977124162018, -2.0789427757263184, -2.2451858520507812, -0.1678490787744522, -0.004906281363219023, -0.18285620212554932, -1.168244216387393e-05, -0.00015841660206206143, -0.002978414995595813, -2.002696055569686e-05, -0.0022807319182902575, -0.046611666679382324, -0.11128941178321838, -2.422630786895752, -0.004496107809245586, -0.0037186061963438988, -2.1934269170742482e-05, -0.005979625042527914, -0.6440800428390503, -0.001095171901397407, -0.16143833100795746, -0.0996413305401802, -0.008709775283932686, -0.0004415729199536145, -1.2993727978027891e-05, -0.005013513378798962, -0.008166966028511524, -0.0005228344234637916, -0.268876850605011, -0.9047500491142273, -0.8750648498535156, -0.022141749039292336, -1.9444475173950195], "finish_reason": "stop"}], "metrics": {"energy": 71.2430262107849, "energy_per_token": 0.8583497133829506, "time": 3.3794901, "time_per_token": 0.04071674819277108}}
{"outputs": [{"text": "if not pd.Series(range(num_samples)).apply(lambda x: isinstance(x, int)).all():\n        raise TypeError(\"num_samples must be an integer.\")\n    if not pd.Series(range(num_features)).apply(lambda x: isinstance(x, int)).all():\n        raise TypeError(\"num_features must be an integer.\")\n    df = pd.DataFrame(\n        np.random.multivariate_normal(\n            mean=np.zeros(num_features), cov=np.identity(num_features), size=num_samples\n        ),\n        columns=list(\"ABCDEF\"[:num_features]),\n    )\n\n    ax = sns.heatmap(df.corr(), annot=True, cmap=\"Blues\")\n    return df, ax", "tokens": ["if", " not", " pd", ".", "Series", "(", "range", "(", "num", "_", "samples", "))", ".", "apply", "(", "lambda", " x", ":", " isinstance", "(", "x", ",", " int", "))", ".", "all", "():", "\n", "        ", "raise", " Type", "Error", "(", "\"", "num", "_", "samples", " must", " be", " an", " integer", ".", "\"", ")", "\n", "    ", "if", " not", " pd", ".", "Series", "(", "range", "(", "num", "_", "features", "))", ".", "apply", "(", "lambda", " x", ":", " isinstance", "(", "x", ",", " int", "))", ".", "all", "():", "\n", "        ", "raise", " Type", "Error", "(", "\"", "num", "_", "features", " must", " be", " an", " integer", ".", "\"", ")", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "\n", "        ", "np", ".", "random", ".", "mult", "ivariate", "_", "normal", "(", "\n", "            ", "mean", "=", "np", ".", "zeros", "(", "num", "_", "features", ")", ",", " co", "v", "=", "np", ".", "identity", "(", "num", "_", "features", ")", ",", " size", "=", "num", "_", "samples", "\n", "        ", ")", ",", "\n", "        ", "columns", "=", "list", "(", "\"", "ABC", "DEF", "\"", "[:", "num", "_", "features", "])", ",", "\n", "    ", ")", "\n", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "df", ".", "corr", "()", ",", " annot", "=", "True", ",", " c", "map", "=", "\"", "Bl", "ues", "\"", ")", "\n", "    ", "return", " df", ",", " ax", "<", "|", "end", "of", "text", "|>"], "logprobs": [-4.489834308624268, -1.3437107801437378, -3.4277095794677734, -0.0730368122458458, -1.4247050285339355, -0.5348149538040161, -2.0568370819091797, -0.03880805894732475, -0.6892303228378296, -4.875540980719961e-05, -0.5113805532455444, -0.053479135036468506, -0.09917140752077103, -1.288468360900879, -0.006243841722607613, -0.178357794880867, -0.2853073179721832, -0.010458542965352535, -1.446031928062439, -0.0010039533954113722, -0.01774202287197113, -0.010208889842033386, -0.16485661268234253, -0.06585679203271866, -0.16581721603870392, -0.07359327375888824, -0.03160453587770462, -0.011918405070900917, -0.006027023307979107, -0.09585527330636978, -0.6599494218826294, -0.0009459549910388887, -0.241477832198143, -0.2588880956172943, -0.9862068295478821, -0.0034749857150018215, -0.016406044363975525, -0.2786273956298828, -0.0075080362148582935, -0.3117537200450897, -0.23824961483478546, -1.7468256950378418, -0.016772912815213203, -0.0015753014013171196, -0.004484239965677261, -0.297139048576355, -0.09778539091348648, -0.10583466291427612, -0.17228955030441284, -0.002665896899998188, -0.000860320869833231, -0.0020898187067359686, -0.0014743659412488341, -0.0005723983631469309, -0.021890796720981598, -1.6331539882230572e-05, -0.08170174807310104, -0.005360159557312727, -0.00015090756642166525, -0.0012846082681789994, -7.211902266135439e-05, -0.0021138484589755535, -0.008855593390762806, -0.00010251473577227443, -0.00126151111908257, -3.2543604902457446e-05, -0.0002802217786666006, -0.00014888131408952177, -0.004509636666625738, -0.003573700087144971, -0.00013636612857226282, -0.00025829317746683955, -0.0033939636778086424, -0.00026425207033753395, -0.0008332832949236035, -0.00048232366680167615, -0.001211862312629819, -6.318072337307967e-06, -0.000631848000921309, -0.0008690156391821802, -0.00664051016792655, -5.1973900554003194e-05, -0.027351662516593933, -0.002914112526923418, -0.0010979106882587075, -0.008037840016186237, -0.0011694743297994137, -0.01626448892056942, -0.00035089056473225355, -0.0012280549854040146, -0.0024830244947224855, -0.6790105700492859, -1.74965238571167, -0.03196529299020767, -0.016246426850557327, -0.000645429186988622, -0.023932384327054024, -0.11638376116752625, -2.327862501144409, -0.016993625089526176, -0.4371073842048645, -1.6093124941107817e-05, -0.007694132160395384, -0.00021920185827184469, -3.5041255950927734, -0.013884857296943665, -2.3841855067985307e-07, -0.001615410903468728, -0.16862717270851135, -0.39922285079956055, -0.014709005132317543, -0.44441157579421997, -0.5128909349441528, -0.2475581169128418, -0.00014673586701974273, -0.1575668901205063, -0.16318285465240479, -0.029702162370085716, -0.00033087024348787963, -0.005425846204161644, -0.05121065676212311, -0.0025176277849823236, -1.3701825141906738, -0.0012471048394218087, -0.010440257377922535, -0.03703802824020386, -0.00013410145766101778, -1.311149001121521, -0.00017557987303007394, -0.004700562916696072, -5.2927523938706145e-05, -0.003142658853903413, -0.005365850869566202, -0.011914988979697227, -0.013038733042776585, -0.08906617760658264, -0.006660996470600367, -6.437280717364047e-06, -0.0017214493127539754, -0.09702231734991074, -0.0029137558303773403, -0.0011276798322796822, -0.5446787476539612, -0.0038887844420969486, -0.05791420117020607, -0.36385613679885864, -0.6113232970237732, -0.49149200320243835, -0.009562166407704353, -1.1336818933486938, -0.46060293912887573, -0.779823362827301, -2.4224190711975098, -0.565322756767273, -0.12421570718288422, -2.372236667724792e-05, -0.0009439303539693356, -0.02757144533097744, -0.019842343404889107, -0.0035987631417810917, -0.028786510229110718, -0.001611840445548296, -0.052173905074596405, -2.133760690689087, -0.0006930810050107539, -1.7656586170196533, -0.021937446668744087, -0.07233002036809921, -2.861018856492592e-06, -3.123234637314454e-05, -0.037713147699832916, -1.966933996300213e-05, -0.0005204515182413161, -0.658265233039856, -0.03325379267334938, -0.02077614516019821, -0.23542694747447968, -0.04767562821507454, -0.6940935850143433, -0.0006358985556289554, -0.05642402172088623, -0.20703861117362976, -0.8769485354423523, -0.05693822354078293, -0.016173353418707848, -0.008502474054694176, -1.1234745979309082, -0.0011298231547698379, -0.004202344920486212, -0.7126659154891968, -0.014425277709960938, -0.4489937126636505, -0.24967807531356812, -0.02925734966993332, -0.0036086218897253275, -0.0022381513845175505, -0.8147215843200684, -2.3841855067985307e-07, -1.5497195136049413e-06, -4.327203714638017e-05, -0.00023672162205912173, -0.06154421344399452], "finish_reason": "stop"}], "metrics": {"energy": 202.96394772720336, "energy_per_token": 1.0047720184515019, "time": 8.626039, "time_per_token": 0.04270316336633664}}
{"outputs": [{"text": "df = pd.DataFrame(np.random.randn(num_samples, num_features))\n    sns.set()\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap='Blues')\n\n    return df, heatmap", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "n", "(", "num", "_", "samples", ",", " num", "_", "features", "))", "\n", "    ", "s", "ns", ".", "set", "()", "\n", "    ", "heat", "map", " =", " s", "ns", ".", "heat", "map", "(", "df", ".", "corr", "()", ",", " annot", "=", "True", ",", " c", "map", "='", "Bl", "ues", "')", "\n", "\n", "    ", "return", " df", ",", " heat", "map", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.7157119512557983, -0.024374570697546005, -0.014669300056993961, -0.002247666707262397, -0.012723930180072784, -0.0696202740073204, -0.25324469804763794, -2.169585604860913e-05, -0.002617269055917859, -9.047575440490618e-05, -0.4684266149997711, -0.6608330607414246, -0.0006912940880283713, -0.020631587132811546, -5.722029527532868e-06, -0.0013071097200736403, -0.0010673070792108774, -0.013262154534459114, -3.6954811548639555e-06, -0.00010477947944309562, -0.6872215270996094, -0.020204801112413406, -0.12309854477643967, -2.6207962036132812, -0.0037724061403423548, -0.012151027098298073, -2.6181387901306152, -0.5843729972839355, -0.05059320852160454, -0.07699088007211685, -3.443880081176758, -0.0522959865629673, -0.06260406225919724, -0.022398699074983597, -0.00014828535495325923, -3.611976353568025e-05, -0.008549398742616177, -2.5987286790041253e-05, -0.0010141950333490968, -0.1022968664765358, -0.06043701246380806, -0.016205376014113426, -0.12836173176765442, -0.02573445811867714, -0.8106963038444519, -0.0038733473047614098, -0.07968219369649887, -0.30147862434387207, -0.8052499294281006, -0.06148603558540344, -0.7918673157691956, -1.6321324110031128, -0.0015391181223094463, -0.6777385473251343, -0.017990272492170334, -2.141472816467285, -0.052366580814123154, -0.08835840970277786, -0.02988382801413536, -0.005330634769052267, -0.2703840136528015, -4.482168878894299e-05, -1.6314010620117188, -3.576278118089249e-07, -5.960462772236497e-07, -0.000176652567461133, -0.00016366096679121256, -0.08248845487833023], "finish_reason": "stop"}], "metrics": {"energy": 75.03411709594727, "energy_per_token": 1.1034428984698128, "time": 2.750067, "time_per_token": 0.040442161764705886}}
{"outputs": [{"text": "random_matrix = np.random.random((num_samples, num_features))\n    df = pd.DataFrame(random_matrix, index=np.arange(num_samples), columns=np.arange(num_features))\n    heatmap = sns.heatmap(df.corr(), annot=True, cmap=\"coolwarm\", vmin=-1, vmax=1)\n    return df, heatmap", "tokens": ["random", "_", "matrix", " =", " np", ".", "random", ".", "random", "((", "num", "_", "samples", ",", " num", "_", "features", "))", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "random", "_", "matrix", ",", " index", "=", "np", ".", "ar", "ange", "(", "num", "_", "samples", ")", ",", " columns", "=", "np", ".", "ar", "ange", "(", "num", "_", "features", "))", "\n", "    ", "heat", "map", " =", " s", "ns", ".", "heat", "map", "(", "df", ".", "corr", "()", ",", " annot", "=", "True", ",", " c", "map", "=", "\"", "cool", "warm", "\"", ",", " v", "min", "=-", "1", ",", " v", "max", "=", "1", ")", "\n", "    ", "return", " df", ",", " heat", "map", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.148451328277588, -0.5202203392982483, -2.074847936630249, -0.01716730184853077, -0.5163878202438354, -2.3603161025675945e-05, -0.003510267473757267, -0.0002796259068418294, -1.8608168363571167, -0.12708836793899536, -0.006308167707175016, -6.794906312279636e-06, -0.017147615551948547, -0.0016689670737832785, -0.0214174073189497, -1.0847986231965479e-05, -0.0004969792207702994, -0.005498879123479128, -0.047814399003982544, -0.09026622027158737, -0.34394901990890503, -0.025805674493312836, -0.005155008751899004, -3.433168603805825e-05, -0.0011797142215073109, -0.004810783080756664, -0.13418638706207275, -1.2755313036905136e-05, -0.00015376816736534238, -0.9117376208305359, -2.1560137271881104, -0.2539229691028595, -2.8399014472961426, -0.00036197309964336455, -0.05666893348097801, -3.480850500636734e-05, -0.00033706706017255783, -0.20582535862922668, -8.22540732769994e-06, -0.017756076529622078, -0.14134356379508972, -0.0010151476599276066, -0.03535058721899986, -0.04130798205733299, -0.14296641945838928, -5.471556869451888e-05, -0.0033654500730335712, -1.847726889536716e-05, -0.0002821285743266344, -0.008354713208973408, -1.5616295058862306e-05, -0.0023460264783352613, -0.018130997195839882, -0.0037111237179487944, -0.24286678433418274, -3.7804036140441895, -0.0478791706264019, -0.09803151339292526, -0.026406453922390938, -3.2186455882765586e-06, -2.6225699912174605e-05, -0.006523148622363806, -2.8013790142722428e-05, -0.0006281548412516713, -0.051329683512449265, -0.3174702823162079, -0.011317696422338486, -0.22259598970413208, -0.025534028187394142, -0.6911066174507141, -0.002033667638897896, -0.07056662440299988, -0.2868925929069519, -0.5039832592010498, -0.05663784220814705, -0.9822849631309509, -0.00911468081176281, -1.3624910116195679, -0.053200770169496536, -0.0006439996068365872, -0.5053120255470276, -1.5332868099212646, -0.0654236450791359, -0.003858622396364808, -0.0060423086397349834, -0.004445550963282585, -0.0017271614633500576, -0.00024673278676345944, -6.0437283536884934e-05, -0.0023975218646228313, -1.0097471475601196, -0.012022885493934155, -0.12283141911029816, -0.11498485505580902, -0.02325732633471489, -0.0030950047075748444, -0.211950421333313, -2.109982233378105e-05, -1.3219962120056152, -3.576278118089249e-07, -7.152555099310121e-07, -5.781483559985645e-05, -0.00018487652414478362, -0.07656916230916977], "finish_reason": "stop"}], "metrics": {"energy": 97.83476750850676, "energy_per_token": 0.9407189183510265, "time": 4.2141495, "time_per_token": 0.04052066826923077}}
{"outputs": [{"text": "random_array = np.random.randn(num_samples, num_features)\n    dataframe = pd.DataFrame(random_array)\n    correlation_matrix = dataframe.corr()\n    ax = sns.heatmap(correlation_matrix, cmap='Greys', center=0,\n                     vmin=-1, vmax=1, square=True, xticklabels=dataframe.columns,\n                     yticklabels=dataframe.columns)\n\n    return dataframe, ax", "tokens": ["random", "_", "array", " =", " np", ".", "random", ".", "rand", "n", "(", "num", "_", "samples", ",", " num", "_", "features", ")", "\n", "    ", "data", "frame", " =", " pd", ".", "DataFrame", "(", "random", "_", "array", ")", "\n", "    ", "correlation", "_", "matrix", " =", " data", "frame", ".", "corr", "()", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "correlation", "_", "matrix", ",", " c", "map", "='", "G", "re", "ys", "'", ",", " center", "=", "0", ",", "\n", "                ", "     ", "v", "min", "=-", "1", ",", " v", "max", "=", "1", ",", " square", "=", "True", ",", " ", "xt", "ick", "labels", "=", "data", "frame", ".", "columns", ",", "\n", "                ", "     ", "yt", "ick", "labels", "=", "data", "frame", ".", "columns", ")", "\n", "\n", "    ", "return", " data", "frame", ",", " ax", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-3.148451328277588, -0.5202203392982483, -2.680732488632202, -0.02555052749812603, -0.14978522062301636, -2.4318398573086597e-05, -0.003936994355171919, -0.00029202012228779495, -0.4591881334781647, -1.1349314451217651, -0.0010918376501649618, -0.02281453087925911, -8.106198947643861e-06, -0.009003044106066227, -0.002256944077089429, -0.013013670220971107, -1.1801649634435307e-05, -0.00023898606013972312, -0.002877977676689625, -0.03359147906303406, -0.07240919768810272, -2.4635064601898193, -1.210903286933899, -0.018629111349582672, -0.0066371941938996315, -2.6702524337451905e-05, -0.0016250512562692165, -0.0029805542435497046, -0.04112860932946205, -1.6093124941107817e-05, -0.0008168459753505886, -0.2679516077041626, -0.006619786377996206, -0.1783776432275772, -1.320947527885437, -0.4121930003166199, -0.09501896053552628, -0.007030273787677288, -0.19204968214035034, -3.0636318115284666e-05, -0.0007739647408016026, -0.010047808289527893, -0.049805719405412674, -0.05565802752971649, -0.17549186944961548, -0.8487860560417175, -0.028451599180698395, -0.01064987014979124, -2.861018856492592e-06, -2.5987286790041253e-05, -0.0025038341991603374, -1.2755313036905136e-05, -0.00017617580306250602, -0.17467105388641357, -4.8636207793606445e-05, -4.1960789531003684e-05, -0.054461877793073654, -1.010870337486267, -0.052954670041799545, -0.29679155349731445, -3.8042986392974854, -0.23125088214874268, -0.0005479741375893354, -0.4528128504753113, -0.01804003119468689, -1.8900967836380005, -0.004868083167821169, -0.013877098448574543, -0.15630389750003815, -2.655590772628784, -0.04896415024995804, -0.2533542811870575, -2.898393154144287, -0.17954283952713013, -0.018999025225639343, -0.019236788153648376, -0.013666749931871891, -0.0037480599712580442, -0.0005113962688483298, -0.00022480344341602176, -0.007316461764276028, -0.03036987967789173, -0.6108900308609009, -0.0005446380819194019, -0.018103016540408134, -0.3844262957572937, -2.636723518371582, -0.0006376855308189988, -0.016247600317001343, -5.2927523938706145e-05, -0.002761362586170435, -1.0191318988800049, -0.0014990055933594704, -0.0076030404306948185, -0.03451656550168991, -0.07554535567760468, -0.32555508613586426, -0.0002536452084314078, -0.00157803890760988, -0.0037680119276046753, -6.8662193370983e-05, -1.1801649634435307e-05, -0.003532005939632654, -0.017048943787813187, -4.815939246327616e-05, -8.689979586051777e-05, -0.042671896517276764, -0.42410650849342346, -0.009637259878218174, -2.232114791870117, -0.021408073604106903, -0.05329763516783714, -0.07990749925374985, -0.0001431601122021675, -0.004338020924478769, -0.0033229156397283077, -0.9885873794555664, -3.576278118089249e-07, -8.344646857949556e-07, -0.00012790338951162994, -0.00018046658078674227, -2.620086431503296, -0.012610694393515587], "finish_reason": "stop"}], "metrics": {"energy": 133.9300595378876, "energy_per_token": 1.0888622726657526, "time": 5.2673993, "time_per_token": 0.042824384552845526}}
{"outputs": [{"text": "data = np.random.rand(num_samples, num_features)\n    df = pd.DataFrame(data, columns=range(num_features))\n    ax = sns.heatmap(df.corr())\n    return df, ax", "tokens": ["data", " =", " np", ".", "random", ".", "rand", "(", "num", "_", "samples", ",", " num", "_", "features", ")", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "range", "(", "num", "_", "features", "))", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "df", ".", "corr", "())", "\n", "    ", "return", " df", ",", " ax", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.7768406867980957, -0.0461915023624897, -0.9262552857398987, -1.5258672647178173e-05, -0.0031808041967451572, -0.00020489977032411844, -0.5061691403388977, -0.7760677337646484, -0.016243377700448036, -3.015949550899677e-05, -0.005883281119167805, -0.0012709167785942554, -0.013438361696898937, -6.341733387671411e-05, -0.00011812942830147222, -0.004007405135780573, -0.0461004339158535, -0.05703776702284813, -0.1512291580438614, -0.01167536061257124, -0.005293519701808691, -9.536697689327411e-06, -0.0012410327326506376, -0.004078879952430725, -0.012784897349774837, -0.5775525569915771, -0.06429122388362885, -0.820882260799408, -1.8309091329574585, -0.003376380307599902, -0.035922084003686905, -3.802703940891661e-05, -0.0017977281240746379, -0.00976369995623827, -0.0039747534319758415, -0.21746760606765747, -1.392151951789856, -0.014877323061227798, -0.02656318061053753, -2.3841830625315197e-06, -2.9444261599564925e-05, -0.008736482821404934, -1.3947389561508317e-05, -0.00045789722935296595, -0.08782080560922623, -0.010771937668323517, -0.007148404140025377, -1.5929503440856934, -0.04347267001867294, -0.12208670377731323, -0.05522585287690163, -0.05858684331178665, -0.004573480691760778, -0.004943647887557745, -1.0687576532363892, -4.768370445162873e-07, -1.1920922133867862e-06, -5.6265202147187665e-05, -0.00020525732543319464, -0.06298671662807465], "finish_reason": "stop"}], "metrics": {"energy": 56.64918987751008, "energy_per_token": 0.9441531646251681, "time": 2.5404115, "time_per_token": 0.042340191666666666}}
{"outputs": [{"text": "df = pd.DataFrame(np.random.randn(num_samples, num_features))\n\n    # Create a correlation heatmap using seaborn\n    sns.heatmap(df.corr(), annot=True, cmap='coolwarm')\n\n    return df, sns.axes.Axes(None, None)", "tokens": ["df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "n", "(", "num", "_", "samples", ",", " num", "_", "features", "))", "\n", "\n", "    ", "#", " Create", " a", " correlation", " heat", "map", " using", " se", "ab", "orn", "\n", "    ", "s", "ns", ".", "heat", "map", "(", "df", ".", "corr", "()", ",", " annot", "=", "True", ",", " c", "map", "='", "cool", "warm", "')", "\n", "\n", "    ", "return", " df", ",", " s", "ns", ".", "axes", ".", "Ax", "es", "(", "None", ",", " None", ")"], "logprobs": [-1.7157119512557983, -0.024374570697546005, -0.014669300056993961, -0.002247666707262397, -0.012723930180072784, -0.0696202740073204, -0.25324469804763794, -2.169585604860913e-05, -0.002617269055917859, -9.047575440490618e-05, -0.4684266149997711, -0.6608330607414246, -0.0006912940880283713, -0.020631587132811546, -5.722029527532868e-06, -0.0013071097200736403, -0.0010673070792108774, -0.013262154534459114, -3.6954811548639555e-06, -0.00010477947944309562, -0.6872215270996094, -0.020204801112413406, -2.1569693088531494, -0.0017926113214343786, -1.0972893238067627, -3.497138023376465, -0.3876781463623047, -0.7446345090866089, -1.6611840724945068, -0.005056213121861219, -1.211712121963501, -0.6735316514968872, -0.0005209281225688756, -5.185469490243122e-05, -0.2655848264694214, -0.000943096645642072, -2.5045204162597656, -0.0012861560098826885, -0.027357811108231544, -0.2381729632616043, -9.775113539944869e-06, -0.00033778208307921886, -0.11091455817222595, -0.005462007597088814, -0.007875462993979454, -0.07897259294986725, -0.010518351569771767, -0.801444411277771, -0.0011331572895869613, -0.04920998960733414, -0.1718054860830307, -0.4399077594280243, -0.07242216914892197, -0.40030092000961304, -1.3148910999298096, -0.013512693345546722, -1.0917999744415283, -0.02649584971368313, -0.37421703338623047, -0.01162740495055914, -0.2765176296234131, -0.015566393733024597, -0.017661329358816147, -2.397808074951172, -0.0003860443539451808, -0.007199297659099102, -0.14505013823509216, -1.6841058731079102, -0.09643782675266266, -0.00013600854435935616, -1.533491611480713, -1.5006814002990723, -0.25362110137939453, -0.19772450625896454, -1.0207505226135254], "finish_reason": "stop"}], "metrics": {"energy": 71.24607792663573, "energy_per_token": 0.9499477056884764, "time": 3.1659575, "time_per_token": 0.04221276666666667}}
{"outputs": [{"text": "np.random.seed(42)\n    df = pd.DataFrame(np.random.normal(size=(num_samples, num_features)))\n    corr = df.corr()\n    ax = sns.heatmap(corr, annot=True, cmap=\"RdBu\", square=True, fmt=\".2f\")\n    return df, ax", "tokens": ["np", ".", "random", ".", "seed", "(", "4", "2", ")", "\n", "    ", "df", " =", " pd", ".", "DataFrame", "(", "np", ".", "random", ".", "normal", "(", "size", "=(", "num", "_", "samples", ",", " num", "_", "features", ")))", "\n", "    ", "corr", " =", " df", ".", "corr", "()", "\n", "    ", "ax", " =", " s", "ns", ".", "heat", "map", "(", "corr", ",", " annot", "=", "True", ",", " c", "map", "=", "\"", "R", "dB", "u", "\"", ",", " square", "=", "True", ",", " fmt", "=", "\"", ".", "2", "f", "\"", ")", "\n", "    ", "return", " df", ",", " ax"], "logprobs": [-1.9699119329452515, -0.005270396359264851, -0.003356539411470294, -0.0007768235518597066, -0.01756739243865013, -0.007781785447150469, -0.6827191710472107, -0.15135376155376434, -0.0076249269768595695, -0.1397482454776764, -0.2004983276128769, -0.7431856989860535, -0.016984015703201294, -0.008846613578498363, -0.00020692592079285532, -0.007697917986661196, -0.13366036117076874, -0.34977245330810547, -0.0002857038634829223, -0.0033933697268366814, -0.00013374387344811112, -2.0948805809020996, -0.0009592937421984971, -0.3380028009414673, -0.053615402430295944, -0.004561613779515028, -2.861018856492592e-06, -0.0019382515456527472, -0.0006238659843802452, -0.013648523017764091, -4.887569048150908e-06, -9.154854342341423e-05, -0.9483053088188171, -0.019495422020554543, -0.19891557097434998, -1.3675694465637207, -0.15285877883434296, -0.07926908880472183, -0.0012772268382832408, -0.005624184384942055, -0.061521124094724655, -0.060142844915390015, -0.12525106966495514, -0.5202008485794067, -0.011310506612062454, -0.00948045589029789, -3.3378546504536644e-06, -1.4662635294371285e-05, -0.0025699466932564974, -1.7046782886609435e-05, -0.0001731960946926847, -0.07991211861371994, -0.046094972640275955, -0.757788896560669, -0.0011747133685275912, -0.03554791212081909, -0.17670629918575287, -0.47386667132377625, -0.13492611050605774, -1.0814350843429565, -0.008045527152717113, -1.456934928894043, -0.5564915537834167, -2.6464111215318553e-05, -0.13308489322662354, -0.5017310380935669, -1.3533269166946411, -0.0009653675369918346, -0.034201886504888535, -0.5134360790252686, -0.9650658369064331, -0.18006600439548492, -0.017603585496544838, -0.22055813670158386, -0.22311903536319733, -0.1374760866165161, -8.4638240878121e-06, -0.9858250617980957, -0.011967643164098263, -0.07499152421951294, -0.08902430534362793, -0.03238709270954132, -0.0048237144947052, -0.006061978172510862], "finish_reason": "stop"}], "metrics": {"energy": 104.10985960769652, "energy_per_token": 1.2394030905678157, "time": 3.3710587, "time_per_token": 0.04013165119047619}}
