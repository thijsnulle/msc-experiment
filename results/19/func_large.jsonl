{"outputs": [{"text": "# Check if the directory exists\n    if not os.path.exists(directory):\n        raise FileNotFoundError(\"Directory does not exist.\")\n    files = glob.glob(os.path.join(directory, '*'))\n    if not files:\n        return None  # Return None if the directory does not contain any files\n    zip_filename = 'files.zip'\n    zip_file = zipfile.ZipFile(zip_filename, 'w')\n    for file in files:\n        zip_file.write(file, arcname=os.path.basename(file))\n    zip_file.close()\n    return zip_filename", "tokens": ["#", " Check", " if", " the", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Directory", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "*", "'))", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "return", " None", "  ", "#", " Return", " None", " if", " the", " directory", " does", " not", " contain", " any", " files", "\n", "    ", "zip", "_", "filename", " =", " '", "files", ".", "zip", "'", "\n", "    ", "zip", "_", "file", " =", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "filename", ",", " '", "w", "')", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "zip", "_", "file", ".", "write", "(", "file", ",", " arc", "name", "=", "os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "    ", "zip", "_", "file", ".", "close", "()", "\n", "    ", "return", " zip", "_", "filename", "\n", "\n", "#"], "logprobs": [-1.6321871280670166, -0.5885640978813171, -0.10048089921474457, -0.31419867277145386, -0.2430867701768875, -0.07337561994791031, -0.10936426371335983, -0.0013943722005933523, -0.006595746148377657, -0.014820946380496025, -0.004891334567219019, -1.3828182090946939e-05, -0.00030870441696606576, -1.1444026313256472e-05, -0.15867868065834045, -0.00011145447206217796, -0.0006310140597634017, -0.008484389632940292, -0.0008179179858416319, -0.00248540285974741, -0.006939831655472517, -0.0013771107187494636, -9.285972191719338e-05, -7.867782187531702e-06, -0.024280447512865067, -1.3900059461593628, -0.45026516914367676, -0.4597601592540741, -0.000321336614433676, -0.0019074357114732265, -1.429943561553955, -0.005237548612058163, -0.0007602662080898881, -0.0005581013392657042, -1.4729235172271729, -3.1877081394195557, -0.0911959633231163, -0.11657994240522385, -7.271502545336261e-05, -0.027685318142175674, -0.0066416943445801735, -0.24054104089736938, -4.0531076592742465e-06, -1.811964830267243e-05, -4.529942543740617e-06, -0.0013468727702274919, -7.86750388215296e-05, -0.00040439533768221736, -0.0005833592731505632, -1.206633448600769, -0.001490316353738308, -0.04281079024076462, -0.08494626730680466, -0.0666162446141243, -0.5849834084510803, -0.1263001710176468, -0.04344424605369568, -0.004318554885685444, -0.01814902387559414, -0.0036266762763261795, -0.1117786169052124, -0.01567061059176922, -2.5848228931427, -8.070142939686775e-05, -0.26571014523506165, -0.004869862459599972, -0.0064048259519040585, -0.8925014734268188, -0.0068867942318320274, -0.5042797327041626, -0.0002208704245276749, -0.010026447474956512, -0.006048351526260376, -0.0032436635810881853, -0.017040738835930824, -0.1578453630208969, -1.0175613164901733, -0.14682747423648834, -2.691934823989868, -0.0007879013428464532, -1.043445348739624, -0.013713196851313114, -0.0030878742691129446, -5.090107151772827e-05, -3.790783375734463e-05, -0.1288372129201889, -0.008900374174118042, -2.001176357269287, -0.06759396940469742, -1.790416955947876, -0.450718492269516, -0.01619306020438671, -3.111314072157256e-05, -3.933898824470816e-06, -5.6622808187967166e-05, -1.0728830375228426e-06, -4.768370445162873e-07, -0.0024990777019411325, -0.007391723338514566, -0.00013064485392533243, -0.00021741411183029413, -0.0004596845537889749, -0.04064352810382843, -0.001259844284504652, -0.2046782523393631, -0.029743127524852753, -0.012145845219492912, -0.08452383428812027, -0.04335418716073036, -0.10724716633558273, -0.03827480971813202, -9.583967766957358e-05, -0.0009622710640542209, -0.0018092705868184566, -0.7128400206565857, -0.0019249258330091834, -0.00039081089198589325, -1.07287787614041e-05, -1.0132738680113107e-05, -4.911301948595792e-05, -0.005122275557368994, -0.030647384002804756, -0.8636370301246643, -3.576278118089249e-07, -0.0021686863619834185, -0.0030891813803464174, -1.1920922133867862e-06, -0.00010299152199877426, -4.768370445162873e-07, -0.0015116228023543954, 0.0, -4.8993817472364753e-05, -0.0007373951375484467, -0.06739027053117752, -0.0407089963555336, -0.016682058572769165, -0.0024473497178405523, -3.45700973412022e-05, -4.470248313737102e-05, -1.4543427823809907e-05, -0.00022146634000819176, -0.00019333878299221396, -0.0008622265886515379, -0.008820618502795696, -0.03051997348666191, -0.3714778423309326, -0.00024005869636312127, -0.03814652934670448, -0.5149531364440918, -0.04880828410387039, -1.9302897453308105], "finish_reason": "stop"}], "metrics": {"energy": 602.7885904140471, "energy_per_token": 3.991977419960577, "time": 16.323801, "time_per_token": 0.10810464238410596}}
{"outputs": [{"text": "# Check if the directory exists\n    if not os.path.exists(directory):\n        raise FileNotFoundError(f\"Directory '{directory}' does not exist.\")\n\n    # Change to the directory\n    os.chdir(directory)\n\n    # Create a zip file\n    zip_file = zipfile.ZipFile('files.zip', 'w')\n\n    # Add all files in the directory to the zip file\n    for file_path in glob.iglob(\"*.*\"):\n        zip_file.write(file_path)\n\n    # Close the zip file\n    zip_file.close()\n\n    return os.path.join(directory, 'files.zip')", "tokens": ["#", " Check", " if", " the", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " '", "{", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Change", " to", " the", " directory", "\n", "    ", "os", ".", "ch", "dir", "(", "directory", ")", "\n", "\n", "    ", "#", " Create", " a", " zip", " file", "\n", "    ", "zip", "_", "file", " =", " zip", "file", ".", "Z", "ip", "File", "('", "files", ".", "zip", "'", ",", " '", "w", "')", "\n", "\n", "    ", "#", " Add", " all", " files", " in", " the", " directory", " to", " the", " zip", " file", "\n", "    ", "for", " file", "_", "path", " in", " glob", ".", "ig", "lob", "(", "\"", "*", ".", "*", "\"", "):", "\n", "        ", "zip", "_", "file", ".", "write", "(", "file", "_", "path", ")", "\n", "\n", "    ", "#", " Close", " the", " zip", " file", "\n", "    ", "zip", "_", "file", ".", "close", "()", "\n", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", "\n", "\n", "if"], "logprobs": [-1.671107292175293, -0.5433729887008667, -0.10233151912689209, -0.3212577700614929, -0.21297478675842285, -0.04973970726132393, -0.11669843643903732, -0.0013859200989827514, -0.007415625732392073, -0.013077208772301674, -0.0034641751553863287, -1.0490362910786644e-05, -0.00030119650182314217, -1.0847986231965479e-05, -0.1812993586063385, -0.0001370812824461609, -0.0005698964232578874, -0.0064112222753465176, -0.0008569859201088548, -0.0021871235221624374, -0.0075441221706569195, -0.0012438902631402016, -8.201262971851975e-05, -7.748573807475623e-06, -0.026583146303892136, -0.1964251548051834, -0.03514689579606056, -0.26343682408332825, -0.35302695631980896, -6.568216485902667e-05, -0.0004182179400231689, -0.0007753941463306546, -0.32382020354270935, -0.0001234931987710297, -0.0012740122620016336, -0.4737145006656647, -0.002380040008574724, -0.0002791491860989481, -0.0004303721070755273, -0.23372012376785278, -0.0009351171320304275, -0.06455735117197037, -3.3971943855285645, -0.9983346462249756, -0.01854357309639454, -2.3435399532318115, -0.2773990333080292, -0.0003231241717003286, -0.02515803650021553, -2.169585604860913e-05, -5.185469490243122e-05, -6.01988795096986e-05, -0.0001287377526750788, -0.0013960388023406267, -9.953480184776708e-05, -0.00043752157944254577, -0.01912113092839718, -0.000286657246761024, -0.01248131599277258, -1.50584876537323, -0.8517000079154968, -0.6925998330116272, -0.061354756355285645, -1.062292218208313, -0.0004337085410952568, -0.6273859739303589, -0.0997481495141983, -1.109144926071167, -0.22091548144817352, -0.264921098947525, -3.504691630951129e-05, -3.933898824470816e-06, -5.6980417866725475e-05, -1.0728830375228426e-06, -8.344646857949556e-07, -0.23352175951004028, -0.010457363910973072, -0.000834355247206986, -1.764281842042692e-05, -0.00019929806876461953, -2.0503786799963564e-05, -0.06111794337630272, -0.00454381387680769, -0.0917852595448494, -0.0013047285610809922, -0.013585255481302738, -0.00012575789878610522, -0.014845024794340134, -0.4540133774280548, -0.9837300777435303, -0.10776554048061371, -0.9987112879753113, -0.002137520583346486, -0.07264013588428497, -0.04169087111949921, -0.0013806821079924703, -0.001121726119890809, -0.02272690273821354, -0.03277583420276642, -0.00033682872890494764, -0.34627699851989746, -0.04458318650722504, -1.6844643354415894, -1.9111545085906982, -0.00023266946664080024, -0.001444607158191502, -5.483612312673358e-06, -2.0390634536743164, -1.1920928244535389e-07, -0.4293806254863739, -1.1047825813293457, -0.265737920999527, -1.931394100189209, -0.05266564339399338, -0.0001287377526750788, -0.07663065940141678, -0.015416150912642479, -0.0035957936197519302, -0.275912344455719, -0.00013195598148740828, -0.000163541772053577, -3.2186455882765586e-06, -5.006777428206988e-06, -0.00013839241000823677, -0.0024878999684005976, -1.7762025890988298e-05, -9.536738616588991e-07, -0.22884264588356018, -0.0008958140970207751, -0.017895663157105446, -0.002093387534841895, -0.023921793326735497, -0.041115567088127136, -0.006524096243083477, -0.0015925593907013535, -0.0010617101797834039, -0.013080621138215065, -0.00017772526189219207, -0.000270091783022508, -1.966933996300213e-05, -7.271740287251305e-06, -8.4638240878121e-06, -0.00023982033599168062, -0.0001512651506345719, -0.0037822630256414413, -0.009682241827249527, -0.0024335552006959915, -2.1328718662261963, -0.3552704155445099, -1.9311717551317997e-05, -0.012111809104681015, -2.2411095415009186e-05, -0.5357617735862732, -0.0030178739689290524, -0.07473037391901016, -0.000427274004323408, -0.08217479288578033, -0.00043132537393830717, -0.0002329078270122409, -1.168244216387393e-05, -0.00019786784832831472, -0.7763880491256714, -0.027076954022049904, -0.5635698437690735], "finish_reason": "stop"}], "metrics": {"energy": 577.0031155757905, "energy_per_token": 3.518311680340186, "time": 13.455094, "time_per_token": 0.08204325609756098}}
{"outputs": [{"text": "if not os.path.isdir(directory):\n        raise FileNotFoundError(f\"Directory not found: {directory}\")\n\n    files = glob.glob(os.path.join(directory, '*'))\n    zip_path = os.path.join(directory, 'files.zip')\n\n    with zipfile.ZipFile(zip_path, 'w') as zip_file:\n        for file in files:\n            if os.path.isfile(file):\n                zip_file.write(file, os.path.basename(file))\n\n    return zip_path", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " not", " found", ":", " {", "directory", "}\"", ")", "\n", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "*", "'))", "\n", "    ", "zip", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", "\n", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "path", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "                ", "zip", "_", "file", ".", "write", "(", "file", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "\n", "    ", "return", " zip", "_", "path", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.4745236039161682, -0.0755167230963707, -0.016357962042093277, -3.242440288886428e-05, -0.0011792379664257169, -2.5510462364763953e-05, -1.0163153409957886, -0.0017677409341558814, -0.001073142047971487, -0.0019792981911450624, -0.0029235025867819786, -0.012098971754312515, -0.009320556186139584, -0.011804135516285896, -0.004146075341850519, -0.00020597243565134704, -2.932505594799295e-05, -0.1692999005317688, -0.33665764331817627, -0.13827484846115112, -0.4889826774597168, -1.8170900344848633, -0.03260853886604309, -0.02152230031788349, -0.022264869883656502, -0.0010215784423053265, -0.006359577644616365, -0.0002108589978888631, -0.0021045696921646595, -0.24270714819431305, -0.0004945961991325021, -1.101096510887146, -0.07892224937677383, -0.054078537970781326, -2.7179348762729205e-05, -0.04442150518298149, -0.0008625839254818857, -0.2865890562534332, -1.7881377516459906e-06, -4.410734163684538e-06, -1.6689286894688848e-06, -0.0003649522550404072, -8.105902816168964e-05, -0.0002989322238136083, -0.0002584123576525599, -1.0750908851623535, -0.001076952670700848, -0.042592961341142654, -0.016735047101974487, -0.2887069880962372, -2.555025815963745, -0.12949585914611816, -0.5926806330680847, -0.0004991239402443171, -0.052644722163677216, -1.0728830375228426e-06, -7.629103492945433e-05, -3.099436753473128e-06, -0.021755732595920563, -0.009959882125258446, -0.03221003711223602, -0.000814582861494273, -0.02414035238325596, -0.007624099031090736, -0.0017360866768285632, -2.0861407392658293e-05, -3.325883881188929e-05, -0.005765711888670921, -0.332450270652771, -0.00034028460504487157, -1.3051961660385132, -0.0005931286723352969, -1.4543427823809907e-05, -3.4570634852570947e-06, -1.680836794548668e-05, 0.0, -3.099436753473128e-06, -0.0002586507180240005, -0.0002796259068418294, -1.9550132492440753e-05, -1.3351351299206726e-05, -0.000770510348957032, -0.024800395593047142, -0.001976205036044121, -0.344836950302124, -3.290122185717337e-05, -0.15231995284557343, -0.5118058919906616, -0.1268584281206131, -0.00012027494085486978, -0.0018308082362636924, -0.001824858714826405, -0.009951619431376457, -0.026575949043035507, -0.23985306918621063, -0.006234482862055302, -9.476689592702314e-05, -0.0002361257211305201, -0.0010459910845384002, -0.34240788221359253, -0.018940189853310585, -2.0265558760002023e-06, -1.4781842764932662e-05, -8.344646857949556e-07, -0.0007246490567922592, -0.0012132910778746009, -4.172238186583854e-05, -9.42901024245657e-05, -0.016829414293169975, -0.00129413278773427, -0.0005073452484793961, -0.02750905230641365, -0.0007712250226177275, -0.0013725870521739125, -4.5060096454108134e-05, -3.099436753473128e-06, -1.3232143828645349e-05, -0.0010676642414182425, -0.03831140697002411, -0.4383971691131592, -1.0013530300057027e-05, -4.887569048150908e-06, -1.1920922133867862e-06, -0.0028953319415450096, -1.1920928244535389e-07, -3.671578815556131e-05, -0.0007890925044193864, -0.04625501483678818, -0.0038497161585837603, -0.02889236994087696, -0.0032789534889161587, -0.18105946481227875, -0.02198806032538414, -8.797258487902582e-05, -0.00037889453233219683, -2.495865821838379, -5.245195097813848e-06, -1.0728830375228426e-06, -1.6689286894688848e-06, -1.3112935448589269e-05, -0.16854095458984375], "finish_reason": "stop"}], "metrics": {"energy": 498.31404652881633, "energy_per_token": 3.5341421739632364, "time": 11.5683, "time_per_token": 0.08204468085106384}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise FileNotFoundError(f\"Directory '{directory}' does not exist\")\n\n    zipname = 'files.zip'\n    files = glob.glob(os.path.join(directory, '*'))\n    if not files:\n        return None\n\n    with zipfile.ZipFile(zipname, 'w') as zipf:\n        for file in files:\n            zipf.write(file, arcname=os.path.basename(file))\n\n    return os.path.abspath(zipname)", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " '", "{", "directory", "}'", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "zip", "name", " =", " '", "files", ".", "zip", "'", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "*", "'))", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "name", ",", " '", "w", "')", " as", " zip", "f", ":", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "zip", "f", ".", "write", "(", "file", ",", " arc", "name", "=", "os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "\n", "    ", "return", " os", ".", "path", ".", "ab", "sp", "ath", "(", "zip", "name", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-0.4745236039161682, -0.0755167230963707, -0.016357962042093277, -3.242440288886428e-05, -0.0011792379664257169, -2.5510462364763953e-05, -0.4496077597141266, -0.00038914260221645236, -0.0010921949287876487, -0.014048730954527855, -0.006929650902748108, -0.008318774402141571, -0.009232919663190842, -0.0017828536219894886, -0.00016830935783218592, -2.8609820219571702e-05, -0.08112692087888718, -0.3290020525455475, -0.09696367383003235, -0.2933553159236908, -0.4777083396911621, -0.00018046658078674227, -0.0009005781612358987, -0.0013936578761786222, -0.28840041160583496, -0.0003159739135298878, -0.0028904585633426905, -0.8767254948616028, -0.0003564914222806692, -0.0010578995570540428, -0.2947850525379181, -0.0005980133428238332, -1.4214227199554443, -2.885969400405884, -0.004792394116520882, -0.6846026182174683, -0.016149893403053284, -0.006585916969925165, -5.2927523938706145e-05, -0.00016044282529037446, -0.027397016063332558, -0.1676950603723526, -1.49717378616333, -0.11188074201345444, -0.08512353897094727, -5.781483559985645e-05, -0.03894679993391037, -0.0017974901711568236, -0.3110795021057129, -7.033323527139146e-06, -2.038458114839159e-05, -4.887569048150908e-06, -0.0011237503495067358, -0.0001699779968475923, -0.0006320862448774278, -0.000436925794929266, -0.22036689519882202, -0.0015605426160618663, -0.027062218636274338, -0.02423902601003647, -0.6286895871162415, -0.5142379999160767, -0.1364518702030182, -0.03804302215576172, -0.006632457487285137, -0.010876419954001904, -0.0013296105898916721, -0.05747996270656586, -0.041663773357868195, -0.021843912079930305, -0.2139163762331009, -0.0001958416833076626, -0.046685051172971725, -0.0009728704462759197, -1.2159273865108844e-05, -3.814689989667386e-06, -2.2172682292875834e-05, -1.1920928244535389e-07, -4.172316494077677e-06, -0.0006057572900317609, -0.0022760932333767414, -0.0006075443816371262, -0.0011712603736668825, -0.037852730602025986, -0.0013375869020819664, -0.1807701736688614, -4.136476854910143e-05, -0.5138499736785889, -0.36994990706443787, -0.00028236693469807506, -0.0009802542626857758, -0.001369253732264042, -0.010798236355185509, -0.11356942355632782, -0.027905376628041267, -0.00919252447783947, -4.672895011026412e-05, -0.00021205084340181202, -0.0010236029047518969, -0.5793596506118774, -0.000603493710514158, -1.7046782886609435e-05, -7.748573807475623e-06, -4.2676016164477915e-05, -0.002477316651493311, -0.07737436145544052, -0.4432961940765381, -7.152555099310121e-07, -0.0032283354084938765, -0.00436757504940033, -4.172316494077677e-06, -0.00022754464589525014, -1.4305104514278355e-06, -0.0032742007169872522, -1.1086402082582936e-05, -6.4490144723095e-05, -0.00042060110718011856, -0.01893586292862892, -0.004059052560478449, -0.13456521928310394, -0.0024040627758949995, -0.012297757901251316, -1.2968981266021729, -4.279521817807108e-05, -0.004232021979987621, -2.1219027985353023e-05, -0.273579478263855, -5.602820692729438e-06, -1.4305012882687151e-05, -0.004615487065166235, -0.0041822828352451324, -0.000987637904472649, -1.3828229904174805, -1.4662635294371285e-05, -1.4305104514278355e-06, -2.9802276912960224e-06, -8.106198947643861e-06, -0.18022628128528595], "finish_reason": "stop"}], "metrics": {"energy": 491.58576402854914, "energy_per_token": 3.562215681366298, "time": 11.356533, "time_per_token": 0.08229371739130435}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise FileNotFoundError(f\"Directory '{directory}' does not exist.\")\n\n    files = glob.glob(os.path.join(directory, '*'))\n    if not files:\n        return None\n\n    zip_name = 'files.zip'\n    with zipfile.ZipFile(zip_name, 'w') as zip_file:\n        for file in files:\n            if os.path.isfile(file):\n                zip_file.write(file, arcname=os.path.basename(file))\n\n    return zip_name", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " '", "{", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "*", "'))", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "zip", "_", "name", " =", " '", "files", ".", "zip", "'", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "name", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "                ", "zip", "_", "file", ".", "write", "(", "file", ",", " arc", "name", "=", "os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "\n", "    ", "return", " zip", "_", "name"], "logprobs": [-0.4745236039161682, -0.0755167230963707, -0.016357962042093277, -3.242440288886428e-05, -0.0011792379664257169, -2.5510462364763953e-05, -0.4496077597141266, -0.00038914260221645236, -0.0010921949287876487, -0.014048730954527855, -0.006929650902748108, -0.008318774402141571, -0.009232919663190842, -0.0017828536219894886, -0.00016830935783218592, -2.8609820219571702e-05, -0.08112692087888718, -0.3290020525455475, -0.09696367383003235, -0.2933553159236908, -0.4777083396911621, -0.00018046658078674227, -0.0009005781612358987, -0.0013936578761786222, -0.28840041160583496, -0.0003159739135298878, -0.0028904585633426905, -0.5990384221076965, -0.0037481787148863077, -0.00037555795279331505, -0.0013875867007300258, -0.2502036690711975, -0.0006344689172692597, -1.2494844198226929, -0.06901865452528, -0.06430888175964355, -2.312633478140924e-05, -0.04548005014657974, -0.0007937379996292293, -0.13500536978244781, -8.344646857949556e-07, -4.172316494077677e-06, -1.311301275563892e-06, -0.00039760314393788576, -8.856858039507642e-05, -0.00031585473334416747, -0.0002693767019081861, -0.5832615494728088, -0.0009832315845414996, -0.03210533410310745, -0.01968923583626747, -0.380187064409256, -0.18424329161643982, -0.03392386808991432, -0.01427086815237999, -0.0031974404118955135, -0.005695306230336428, -0.0006529344827868044, -0.06908651441335678, -0.00878008734434843, -0.0359836108982563, -0.025878047570586205, -0.00037901371251791716, -0.2897697985172272, -0.07932095229625702, -1.3955118656158447, -0.0009301149984821677, -0.3920915424823761, -0.011030529625713825, -0.0028059417381882668, -3.373566141817719e-05, -3.707340147229843e-05, -0.01161350030452013, -0.04021981731057167, -0.10687196999788284, -0.0008877150830812752, -9.417489309271332e-06, -2.50339189733495e-06, -1.1801649634435307e-05, -2.3841855067985307e-07, -1.311301275563892e-06, -0.00033122775494121015, -0.0005225961795076728, -4.541770613286644e-05, -3.3854863431770355e-05, -0.00054058717796579, -0.041553422808647156, -0.0004700509598478675, -0.1316361427307129, -5.6622808187967166e-05, -0.186632439494133, -0.5664510726928711, -0.16101321578025818, -9.047575440490618e-05, -0.00105408881790936, -0.0012340081157162786, -0.007324745412915945, -0.026478666812181473, -0.12575241923332214, -0.003777275327593088, -3.111314072157256e-05, -9.238292841473594e-05, -0.0010587330907583237, -0.9717584848403931, -0.034663159400224686, -3.6954811548639555e-06, -3.158996332786046e-05, -1.0728830375228426e-06, -0.001320800743997097, -0.0016499252524226904, -3.71926071238704e-05, -7.855583680793643e-05, -0.011060004122555256, -0.001110771088860929, -0.00046826363541185856, -0.00910936575382948, -0.00021991695393808186, -0.0005783553933724761, -2.396077979938127e-05, -2.0265558760002023e-06, -1.1920858014491387e-05, -0.0011050553293898702, -0.03100328892469406, -0.9514032006263733, -4.768370445162873e-07, -0.0009051040397025645, -0.0022518294863402843, -1.4305104514278355e-06, -5.590759246842936e-05, -9.536738616588991e-07, -0.0010315817780792713, -1.1920928244535389e-07, -3.45700973412022e-05, -0.00030989613151177764, -0.00991703663021326, -0.00301276333630085, -0.06925271451473236, -0.0013855629367753863, -0.021166624501347542, -0.3310030400753021, -0.00032443503732793033, -0.00044431351125240326], "finish_reason": "stop"}], "metrics": {"energy": 468.5550245246886, "energy_per_token": 3.2996832713006237, "time": 11.782483, "time_per_token": 0.08297523239436619}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise FileNotFoundError(f\"Directory does not exist: {directory}\")\n\n    # List all files (not including subdirectories) in the directory\n    files = glob.glob(os.path.join(directory, \"*\"), recursive=False)\n\n    if not files:\n        return None\n\n    # Create the zip file in the same directory as the input directory\n    zip_path = os.path.join(directory, \"files.zip\")\n\n    # Open the zip file for writing\n    with zipfile.ZipFile(zip_path, 'w', zipfile.ZIP_DEFLATED) as zip_file:\n        for file in files:\n            if os.path.isfile(file):\n                zip_file.write(file, arcname=os.path.basename(file))\n\n    return zip_path", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " does", " not", " exist", ":", " {", "directory", "}\"", ")", "\n", "\n", "    ", "#", " List", " all", " files", " (", "not", " including", " sub", "direct", "ories", ")", " in", " the", " directory", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " \"", "*", "\"", ")", ",", " recursive", "=", "False", ")", "\n", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "#", " Create", " the", " zip", " file", " in", " the", " same", " directory", " as", " the", " input", " directory", "\n", "    ", "zip", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " \"", "files", ".", "zip", "\"", ")", "\n", "\n", "    ", "#", " Open", " the", " zip", " file", " for", " writing", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "path", ",", " '", "w", "'", ",", " zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", " as", " zip", "_", "file", ":", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "                ", "zip", "_", "file", ".", "write", "(", "file", ",", " arc", "name", "=", "os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "\n", "    ", "return", " zip", "_", "path", "\n", "\n", "if"], "logprobs": [-0.4745236039161682, -0.0755167230963707, -0.016357962042093277, -3.242440288886428e-05, -0.0011792379664257169, -2.5510462364763953e-05, -0.4496077597141266, -0.00038914260221645236, -0.0010921949287876487, -0.014048730954527855, -0.006929650902748108, -0.008318774402141571, -0.009232919663190842, -0.0017828536219894886, -0.00016830935783218592, -2.8609820219571702e-05, -0.08112692087888718, -0.3290020525455475, -0.09696367383003235, -0.2933553159236908, -3.109473705291748, -0.002200207905843854, -0.017266899347305298, -0.04913247376680374, -0.021907707676291466, -0.0014612721279263496, -0.006793615873903036, -0.00024029705673456192, -0.001353420433588326, -0.2267414778470993, -0.0005983707960695028, -1.4959237575531006, -3.4875125885009766, -0.2854686975479126, -0.09865416586399078, -2.2086055278778076, -0.21600313484668732, -0.31005412340164185, -0.03076980821788311, -0.01655730977654457, -2.7894584491150454e-05, -0.0017377528129145503, -0.10118628293275833, -0.018404312431812286, -0.3063858151435852, -0.053732000291347504, -0.0003375437227077782, -0.31638792157173157, -0.1862168163061142, -0.18776603043079376, -3.504691630951129e-05, -0.013063560239970684, -0.00070296844933182, -0.06947638094425201, -7.152555099310121e-07, -2.50339189733495e-06, -1.0609570381348021e-05, -9.97731985989958e-05, -4.339123915997334e-05, -0.0003251500893384218, -0.00015496007108595222, -0.21165305376052856, -0.003179615829139948, -0.04098318889737129, -0.8601759672164917, -0.00048101297579705715, -0.00040284625720232725, -0.0008429311565123498, -0.007173022720962763, -0.0002668739762157202, -0.0065269386395812035, -0.36458802223205566, -0.00026043839170597494, -0.7606696486473083, -0.03566674515604973, -0.011257817968726158, -0.0030140706803649664, -0.010793990455567837, -0.0004419303731992841, -0.10805319994688034, -0.006341809406876564, -0.29342785477638245, -0.011381932534277439, -0.0006105228094384074, -0.3626055121421814, -0.35242602229118347, -0.9628758430480957, -0.1853516697883606, -0.0479840524494648, -2.1652262210845947, -0.3214121460914612, -1.526096224784851, -0.013490935787558556, -0.1995929330587387, -0.0045533073134720325, -0.7378809452056885, -0.18741413950920105, -0.08309333026409149, -0.0003800861886702478, -0.029571620747447014, -0.05992033705115318, -0.4513581395149231, -0.00012432756193447858, -0.0051009273156523705, -4.768370445162873e-07, -1.1801649634435307e-05, -2.0265558760002023e-06, -0.0015015052631497383, -0.0002889215829782188, -0.05428033322095871, -0.00025042734341695905, -0.1307336390018463, -0.006687877234071493, -0.0015403084689751267, -7.271740287251305e-06, -1.6331539882230572e-05, -4.100715523236431e-05, -0.0011244647903367877, -0.4492220878601074, -0.0002522150462027639, -0.42303234338760376, -1.2302157878875732, -0.05076465755701065, -0.007649770472198725, -0.01391189731657505, -1.516794204711914, -0.01236781757324934, -0.29072508215904236, -0.00012003655137959868, -0.004513077903538942, -0.000408327643526718, -5.602820692729438e-06, -2.3841830625315197e-06, -1.1801649634435307e-05, -1.1920928244535389e-07, -1.0728830375228426e-06, -1.3112935448589269e-05, -0.0002864189154934138, -1.156323378381785e-05, -2.861018856492592e-06, -0.00013290952483657748, -2.5499448776245117, -0.0006202919175848365, -1.3983758687973022, -3.313963316031732e-05, -0.050770778208971024, -1.2636104656849056e-05, -8.4638240878121e-06, -4.1126360883936286e-05, -2.276871418871451e-05, -3.576278118089249e-07, -0.010294316336512566, -2.3841830625315197e-06, -3.790783375734463e-05, -0.002957971766591072, -1.4305104514278355e-06, -0.05797821283340454, -0.3683023750782013, -0.030859392136335373, -6.496695277746767e-05, -0.00015853578224778175, -0.022779107093811035, -1.0211498737335205, -0.027641603723168373, -0.22343628108501434, -0.0015353093622252345, -2.3483953555114567e-05, -0.0003641180810518563, -0.002027838258072734, -1.7402982711791992, -0.021698225289583206, -4.529942543740617e-06, -1.823885577323381e-05, -2.50339189733495e-06, -0.004956102930009365, -0.0056884316727519035, -7.378782902378589e-05, -0.00017307691450696439, -0.0053903949446976185, -0.022680407389998436, -0.0014034194173291326, -0.5431385636329651, -0.0006635371246375144, -0.0033135293051600456, -3.886147169396281e-05, -3.2186455882765586e-06, -8.34461570775602e-06, -0.0015804193681105971, -0.014277801848948002, -0.7995176315307617, -3.576278118089249e-07, -0.000590865034610033, -0.0022776394616812468, -1.5497195136049413e-06, -4.7444173105759546e-05, -3.576278118089249e-07, -0.001135181519202888, 0.0, -1.5735502529423684e-05, -0.00018845213344320655, -0.007863043807446957, -0.0064779059030115604, -0.02638300135731697, -0.002526308177039027, -0.04607732594013214, -0.0077794198878109455, -3.8980677345534787e-05, -0.0002719986077863723, -0.6808083057403564, -0.028466660529375076, -0.5195342302322388], "finish_reason": "stop"}], "metrics": {"energy": 715.5130102787016, "energy_per_token": 3.39105692075214, "time": 17.663933, "time_per_token": 0.08371532227488152}}
{"outputs": [{"text": "# Check if the directory exists\n    if not os.path.exists(directory):\n        raise FileNotFoundError(f\"Directory '{directory}' does not exist.\")\n\n    # Find all files in the directory (excluding subdirectories)\n    files = glob.glob(os.path.join(directory, '*'))\n\n    # Create the zip file and add the files\n    if not files:\n        return None\n    with zipfile.ZipFile(os.path.join(directory, 'files.zip'), 'w') as zip_file:\n        for file in files:\n            if os.path.isfile(file):\n                zip_file.write(file, arcname=os.path.basename(file))\n\n    # Return the path to the generated zip file\n    return os.path.join(directory, 'files.zip')", "tokens": ["#", " Check", " if", " the", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " '", "{", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Find", " all", " files", " in", " the", " directory", " (", "ex", "cluding", " sub", "direct", "ories", ")", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "*", "'))", "\n", "\n", "    ", "#", " Create", " the", " zip", " file", " and", " add", " the", " files", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "return", " None", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "                ", "zip", "_", "file", ".", "write", "(", "file", ",", " arc", "name", "=", "os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "\n", "    ", "#", " Return", " the", " path", " to", " the", " generated", " zip", " file", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", "\n", "\n", "def"], "logprobs": [-1.671107292175293, -0.5433729887008667, -0.10233151912689209, -0.3212577700614929, -0.21297478675842285, -0.04973970726132393, -0.11669843643903732, -0.0013859200989827514, -0.007415625732392073, -0.013077208772301674, -0.0034641751553863287, -1.0490362910786644e-05, -0.00030119650182314217, -1.0847986231965479e-05, -0.1812993586063385, -0.0001370812824461609, -0.0005698964232578874, -0.0064112222753465176, -0.0008569859201088548, -0.0021871235221624374, -0.0075441221706569195, -0.0012438902631402016, -8.201262971851975e-05, -7.748573807475623e-06, -0.026583146303892136, -0.1964251548051834, -0.03514689579606056, -0.26343682408332825, -0.35302695631980896, -6.568216485902667e-05, -0.0004182179400231689, -0.0007753941463306546, -0.32382020354270935, -0.0001234931987710297, -0.0012740122620016336, -0.4737145006656647, -0.002380040008574724, -0.0002791491860989481, -0.0004303721070755273, -0.23372012376785278, -0.0009351171320304275, -0.06455735117197037, -2.209425449371338, -0.05893901363015175, -0.09168313443660736, -0.1124410405755043, -0.001858056872151792, -0.21984679996967316, -0.7256141304969788, -0.5578315854072571, -0.07173246890306473, -0.03024347312748432, -0.014641692861914635, -4.60137271147687e-05, -0.002882137894630432, -0.024365728721022606, -0.0002557904226705432, -0.32640954852104187, -0.12705457210540771, -0.0405670627951622, -1.9311717551317997e-05, -0.018784955143928528, -0.0002153879904653877, -0.05185103788971901, -8.344646857949556e-07, -1.5497195136049413e-06, -4.7444173105759546e-05, -8.189342770492658e-05, -2.7179348762729205e-05, -9.297892393078655e-05, -0.00010263393050990999, -0.9954472780227661, -0.001747867907397449, -0.04033122956752777, -0.004478069022297859, -0.24906960129737854, -0.0004950728034600616, -0.03165131062269211, -1.9257256984710693, -0.6951783299446106, -0.1925424486398697, -0.04856507107615471, -1.7106008529663086, -0.0974598303437233, -0.11725445091724396, -0.03200200945138931, -0.476005882024765, -0.0007323920144699514, -2.9586410522460938, -1.5728782415390015, -0.12469379603862762, -0.005396679043769836, -0.024887260049581528, -0.005335852038115263, -0.11995938420295715, -0.01851513795554638, -0.12797045707702637, -0.6512761116027832, -1.0644934177398682, -0.0019647832959890366, -2.253030106658116e-05, -2.7418097943154862e-06, -1.0013530300057027e-05, -1.1920928244535389e-07, -5.960462772236497e-07, -0.3635534644126892, -0.7487226724624634, -1.7881233361549675e-05, -0.00021491125517059118, -2.729855441430118e-05, -0.006946816574782133, -0.026094553992152214, -0.020627150312066078, -0.0013562776148319244, -0.04114359989762306, -0.010840100236237049, -0.0015836328966543078, -1.6927575416048057e-05, -0.0001299296854995191, -0.00014578233822248876, -0.05795605108141899, -0.001652424456551671, -0.06766916811466217, -2.396077979938127e-05, -0.10956481844186783, -1.1046020984649658, -0.038454923778772354, -7.366862701019272e-05, -0.0007858763565309346, -0.002293814904987812, -0.009423773735761642, -0.04790757969021797, -0.08432213962078094, -0.0037287012673914433, -7.414542778860778e-05, -0.00018189683032687753, -0.001401157584041357, -0.8214213252067566, -0.021708957850933075, -2.7418097943154862e-06, -1.4543427823809907e-05, -1.4305104514278355e-06, -0.0019177870126441121, -0.0028546794783324003, -2.586808113846928e-05, -0.00025555206229910254, -0.018061572685837746, -0.007390657905489206, -0.0009965697536244988, -0.022507453337311745, -0.00029774048016406596, -0.0005165196489542723, -2.47952248173533e-05, -3.2186455882765586e-06, -1.8358061424805783e-05, -0.00505597610026598, -0.047436121851205826, -1.171854853630066, -3.576278118089249e-07, -0.0016046992968767881, -0.0025752971414476633, -2.264974000354414e-06, -6.544376083184034e-05, -8.344646857949556e-07, -0.0014718662714585662, 0.0, -3.2066785934148356e-05, -0.0004076126788277179, -0.009616715833544731, -0.004244248848408461, -0.11640338599681854, -0.00805877149105072, -0.34592971205711365, -0.033346038311719894, -0.006486551836133003, -0.037016429007053375, -0.03072853945195675, -0.0006298227235674858, -0.6574947834014893, -0.0020996923558413982, -0.0007471630233339965, -0.005349606275558472, -0.0006842655711807311, -0.02195097506046295, -0.031007910147309303, -1.156323378381785e-05, -2.884823152271565e-05, -1.3708974620385561e-05, -0.005266720429062843, -0.0005463061388581991, -0.0010962436208501458, -0.00011359999916749075, -0.0013236580416560173, -0.00033396866638213396, -0.00021979777375236154, -1.823885577323381e-05, -6.69933797325939e-05, -0.5575183033943176, -0.023545894771814346, -1.916166067123413], "finish_reason": "stop"}], "metrics": {"energy": 678.6752459373473, "energy_per_token": 3.3933762296867367, "time": 16.595499, "time_per_token": 0.082977495}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise FileNotFoundError(f\"The directory {directory} does not exist.\")\n\n    # Set the zip file name\n    zip_name = 'files.zip'\n\n    # Get a list of all files in the specified directory\n    files = glob.glob(os.path.join(directory, '*'))\n\n    # If the directory does not contain any files, return None\n    if not files:\n        return None\n\n    # Create a zip file\n    with zipfile.ZipFile(zip_name, 'w') as zipf:\n        # Add files to the zip file\n        for file in files:\n            zipf.write(file, arcname=os.path.basename(file))\n\n    # Return the path to the generated zip file\n    return zip_name", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " directory", " {", "directory", "}", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Set", " the", " zip", " file", " name", "\n", "    ", "zip", "_", "name", " =", " '", "files", ".", "zip", "'", "\n", "\n", "    ", "#", " Get", " a", " list", " of", " all", " files", " in", " the", " specified", " directory", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "*", "'))", "\n", "\n", "    ", "#", " If", " the", " directory", " does", " not", " contain", " any", " files", ",", " return", " None", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "#", " Create", " a", " zip", " file", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "name", ",", " '", "w", "')", " as", " zip", "f", ":", "\n", "        ", "#", " Add", " files", " to", " the", " zip", " file", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "zip", "f", ".", "write", "(", "file", ",", " arc", "name", "=", "os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "\n", "    ", "#", " Return", " the", " path", " to", " the", " generated", " zip", " file", "\n", "    ", "return", " zip", "_", "name"], "logprobs": [-0.4745236039161682, -0.0755167230963707, -0.016357962042093277, -3.242440288886428e-05, -0.0011792379664257169, -2.5510462364763953e-05, -0.4496077597141266, -0.00038914260221645236, -0.0010921949287876487, -0.014048730954527855, -0.006929650902748108, -0.008318774402141571, -0.009232919663190842, -0.0017828536219894886, -0.00016830935783218592, -2.8609820219571702e-05, -0.08112692087888718, -0.3290020525455475, -0.09696367383003235, -1.8271535634994507, -0.4185413122177124, -1.2491739988327026, -0.0014774608425796032, -0.007364506367594004, -0.015857776626944542, -0.00043084874050691724, -0.008106071501970291, -0.4577934443950653, -0.009981008246541023, -0.0004797023138962686, -0.0011606630869209766, -0.29692143201828003, -0.0005781171494163573, -1.5656144618988037, -3.2581725120544434, -0.18266406655311584, -1.198045015335083, -0.3484332859516144, -0.4142245948314667, -0.681105375289917, -0.0006780709372833371, -0.02042067050933838, -0.05890507251024246, -0.7641372680664062, -0.0012815127847716212, -0.5005291104316711, -0.011279388330876827, -0.011099499650299549, -3.302042750874534e-05, -0.00011574551899684593, -0.0042104171589016914, -0.07563333213329315, -0.0003634030872490257, -0.062430258840322495, -1.8751111030578613, -0.6233186721801758, -0.004713733214884996, -0.00038235029205679893, -0.15559034049510956, -0.22684182226657867, -0.030012130737304688, -0.0031222188845276833, -1.4935359954833984, -0.002120034070685506, -0.2085535079240799, -0.0002802217786666006, -0.42435818910598755, -0.13460326194763184, -0.07829919457435608, -4.0411134250462055e-05, -0.008602702990174294, -0.0011486368020996451, -0.1609257459640503, -3.814689989667386e-06, -3.814689989667386e-06, -2.2172682292875834e-05, -0.00047017011092975736, -7.784063927829266e-05, -0.0004522969538811594, -0.00023409964342135936, -0.22243033349514008, -0.0011618537828326225, -0.0277603380382061, -0.003058400936424732, -0.06284254044294357, -0.00033098942367359996, -0.08489710092544556, -1.4376158714294434, -1.46347177028656, -0.027463706210255623, -1.0186762809753418, -0.0006943913758732378, -0.01803640089929104, -0.004173498135060072, -0.008430487476289272, -0.019629623740911484, -0.09232323616743088, -0.009672914631664753, -0.008691104128956795, -0.00014137222024146467, -0.001490554423071444, -0.06505387276411057, -0.03594071418046951, -0.003314004512503743, -0.0006579380133189261, -0.0012724645202979445, -0.04537468031048775, -0.006349390838295221, -0.00022349244682118297, -0.007049331907182932, -0.000532008707523346, -0.01048001367598772, -0.31398358941078186, -0.23508644104003906, -0.8081464767456055, -0.12874151766300201, -2.126995086669922, -0.00038938093348406255, -0.02317696064710617, -0.0006650857976637781, -2.3603161025675945e-05, -2.145764938177308e-06, -1.1920858014491387e-05, -1.1920928244535389e-07, -1.1920922133867862e-06, -0.0006786665762774646, -0.007516436744481325, -0.00010907054820563644, -0.00010418349120300263, -0.00039176418795250356, -0.057958073914051056, -0.0013604442356154323, -0.0769723430275917, -0.00025388356880284846, -0.2086673080921173, -0.9391530752182007, -0.00020096666412428021, -0.0004217927053105086, -0.011263357475399971, -0.16993263363838196, -0.6054825186729431, -2.301703929901123, -0.01913960836827755, -0.015172898769378662, -0.004000043962150812, -0.051681358367204666, -0.020591532811522484, -0.0002195594133809209, -0.003062798175960779, -0.053016286343336105, -0.02909351885318756, -0.00420816196128726, -6.115249561844394e-05, -6.365573790390044e-05, -0.0015306673012673855, -0.6340411305427551, -0.00021586472576018423, -3.3378546504536644e-06, -7.152531907195225e-06, -3.790783375734463e-05, -0.0028572946321219206, -0.10346061736345291, -0.31079456210136414, -4.768370445162873e-07, -0.003785825800150633, -0.002628445392474532, -2.145764938177308e-06, -0.00011729506513802335, -5.960462772236497e-07, -0.0015519729349762201, -5.960462772236497e-07, -5.400034933700226e-05, -0.0003543464408721775, -0.00895495992153883, -0.002674813847988844, -0.02023342251777649, -0.003428773023188114, -0.2202046811580658, -0.03516818583011627, -0.006754660978913307, -0.09982355684041977, -0.014156632125377655, -0.0012685356196016073, -0.5065287947654724, -0.0010588521836325526, -0.0006943913758732378, -0.0030997584108263254, -0.0003262225945945829, -0.00983629934489727, -0.9132155179977417, -0.001508409040980041, -3.9219088648678735e-05], "finish_reason": "stop"}], "metrics": {"energy": 636.7705645656587, "energy_per_token": 3.3165133571128056, "time": 15.980129, "time_per_token": 0.08322983854166667}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise FileNotFoundError(\"The directory does not exist\")\n    file_list = glob.glob(os.path.join(directory, \"*\"))\n    if not file_list:\n        return None\n    zip_name = os.path.join(directory, 'files.zip')\n    with zipfile.ZipFile(zip_name, 'w') as zipped_file:\n        for file in file_list:\n            zipped_file.write(file, os.path.basename(file))\n    return zip_name", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "The", " directory", " does", " not", " exist", "\"", ")", "\n", "    ", "file", "_", "list", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " \"", "*", "\"", "))", "\n", "    ", "if", " not", " file", "_", "list", ":", "\n", "        ", "return", " None", "\n", "    ", "zip", "_", "name", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "name", ",", " '", "w", "')", " as", " z", "ipped", "_", "file", ":", "\n", "        ", "for", " file", " in", " file", "_", "list", ":", "\n", "            ", "z", "ipped", "_", "file", ".", "write", "(", "file", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "    ", "return", " zip", "_", "name", "\n", "\n", "if"], "logprobs": [-0.4745236039161682, -0.0755167230963707, -0.016357962042093277, -3.242440288886428e-05, -0.0011792379664257169, -2.5510462364763953e-05, -0.4496077597141266, -0.00038914260221645236, -0.0010921949287876487, -0.014048730954527855, -0.006929650902748108, -0.008318774402141571, -0.009232919663190842, -0.0017828536219894886, -0.00016830935783218592, -2.8609820219571702e-05, -0.08112692087888718, -1.3278728723526, -1.108968734741211, -1.5439064502716064, -0.09293826669454575, -0.0007666985620744526, -0.01097063347697258, -0.3954487442970276, -0.0011963837314397097, -0.0014138950500637293, -1.1608738899230957, -2.1983208656311035, -0.08100952208042145, -0.7596985101699829, -0.0030674331355839968, -0.10969600826501846, -8.368142152903602e-05, -0.03237670287489891, -0.010372304357588291, -0.27209028601646423, -3.4570634852570947e-06, -7.366862701019272e-05, -2.50339189733495e-06, -0.00436377665027976, -0.0001554368354845792, -0.0009276139317080379, -0.0013909199042245746, -0.5626011490821838, -0.0030448525212705135, -0.0407068207859993, -0.024036897346377373, -0.029881861060857773, -0.031870611011981964, -0.2687954902648926, -0.14083868265151978, -0.030141573399305344, -5.8412379075889476e-06, -3.4570634852570947e-06, -0.01567823812365532, -0.010821114294230938, -0.001189477858133614, -0.037937551736831665, -0.020997142419219017, -0.017154529690742493, -0.1043539047241211, -0.5092229247093201, -0.12823212146759033, -0.9563283920288086, -0.0024213064461946487, -0.788099467754364, -6.794906312279636e-06, -0.00017176583060063422, -8.4638240878121e-06, -0.04316296428442001, -0.025597356259822845, -0.06187349185347557, -0.0014250847743824124, -1.0936390161514282, -0.008404127322137356, -0.003020726377144456, -2.7179348762729205e-05, -5.400034933700226e-05, -0.0036918832920491695, -0.0033102023880928755, -0.15643522143363953, -0.0008492438937537372, -1.9192511899746023e-05, -4.768360213347478e-06, -4.029192859889008e-05, -1.1920928244535389e-07, -5.8412379075889476e-06, -0.0003321811091154814, -0.0007906410028226674, -6.937739817658439e-05, -0.0002628219372127205, -0.0027386562433093786, -0.09374810010194778, -0.0019731116481125355, -0.20958319306373596, -6.41325386823155e-05, -2.454464912414551, -1.2897071838378906, -0.7178632616996765, -0.2318902462720871, -0.0005889588501304388, -0.0013193720951676369, -0.0034797375556081533, -0.012678142637014389, -0.17055341601371765, -0.35268479585647583, -0.014501298777759075, -1.8000440832111053e-05, -3.933898824470816e-06, -0.00021228920377325267, -0.000459565402707085, -0.0027417470701038837, -0.322806179523468, -2.90866428258596e-05, -6.9141146923357155e-06, -8.654219709569588e-05, -4.732496745418757e-05, -1.07287787614041e-05, -2.407998726994265e-05, -0.006021928042173386, -0.06622995436191559, -0.45915883779525757, -7.152531907195225e-06, -3.0636318115284666e-05, -1.6689286894688848e-06, -0.009467230178415775, -2.3841855067985307e-07, -8.129743218887597e-05, -0.0006289887824095786, -0.04756878316402435, -0.0028263882268220186, -0.037348486483097076, -0.018504254519939423, -0.09071214497089386, -0.0002498314715921879, -7.676783570786938e-05, -0.6112254858016968, -0.034574493765830994, -0.41316744685173035], "finish_reason": "stop"}], "metrics": {"energy": 499.42224467086766, "energy_per_token": 3.592965788999048, "time": 11.358534, "time_per_token": 0.08171607194244605}}
{"outputs": [{"text": "# Validate directory\n    if not os.path.isdir(directory):\n        raise FileNotFoundError(f\"Invalid directory: {directory}\")\n\n    # Get all files in the directory\n    file_paths = [os.path.join(directory, file) for file in os.listdir(directory) if os.path.isfile(os.path.join(directory, file))]\n\n    # Check if there are any files in the directory\n    if not file_paths:\n        return None\n\n    # Create a zip file with all the files in the directory\n    zip_name = os.path.join(directory, 'files.zip')\n    with zipfile.ZipFile(zip_name, 'w') as zip:\n        for file_path in file_paths:\n            zip.write(file_path, os.path.basename(file_path))\n\n    return zip_name", "tokens": ["#", " Valid", "ate", " directory", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Invalid", " directory", ":", " {", "directory", "}\"", ")", "\n", "\n", "    ", "#", " Get", " all", " files", " in", " the", " directory", "\n", "    ", "file", "_", "paths", " =", " [", "os", ".", "path", ".", "join", "(", "directory", ",", " file", ")", " for", " file", " in", " os", ".", "list", "dir", "(", "directory", ")", " if", " os", ".", "path", ".", "is", "file", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " file", "))", "]", "\n", "\n", "    ", "#", " Check", " if", " there", " are", " any", " files", " in", " the", " directory", "\n", "    ", "if", " not", " file", "_", "paths", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "#", " Create", " a", " zip", " file", " with", " all", " the", " files", " in", " the", " directory", "\n", "    ", "zip", "_", "name", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "name", ",", " '", "w", "')", " as", " zip", ":", "\n", "        ", "for", " file", "_", "path", " in", " file", "_", "paths", ":", "\n", "            ", "zip", ".", "write", "(", "file", "_", "path", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", "))", "\n", "\n", "    ", "return", " zip", "_", "name", "\n", "\n", "#"], "logprobs": [-1.671107292175293, -3.128805160522461, -0.07323514670133591, -1.1844298839569092, -0.7899620532989502, -0.0035701366141438484, -0.045494746416807175, -0.01709406077861786, -0.018117884173989296, -2.3007127310847864e-05, -0.0012460333527997136, -1.8596476365928538e-05, -0.9310782551765442, -0.0020368797704577446, -0.00041762212640605867, -0.0015320956008508801, -0.0018594847060739994, -0.0027970261871814728, -0.004166494123637676, -0.008159872144460678, -0.005567757412791252, -0.00013314791431184858, -3.1470757676288486e-05, -0.0546828918159008, -0.18339747190475464, -0.0865793451666832, -3.228512763977051, -0.03311702609062195, -0.4041769802570343, -0.0915728434920311, -0.0020872014574706554, -0.06623207032680511, -0.00031001531169749796, -0.000874851830303669, -0.2080840766429901, -0.001106127048842609, -0.09176710247993469, -1.4379345178604126, -0.9512088894844055, -0.28333204984664917, -0.11908639222383499, -0.19185763597488403, -0.07674106955528259, -0.33064502477645874, -0.0002060916303889826, -2.404907703399658, -0.025530308485031128, -0.9333135485649109, -0.0005617947317659855, -2.8186404705047607, -0.7184293866157532, -1.597391747054644e-05, -0.00012242044613230973, -9.894321920000948e-06, -0.014206935651600361, -0.0002169373765354976, -0.01621170900762081, -0.00014757021563127637, -0.8451165556907654, -0.09034039080142975, -0.01831102930009365, -0.00018857131362892687, -0.0001323135511483997, -0.04866431653499603, -3.933898824470816e-06, -2.109982233378105e-05, -1.1920928244535389e-07, -0.00022206225548870862, -0.0015213831793516874, -0.155290424823761, -0.04654897376894951, -0.0074072242714464664, -1.1920922133867862e-06, -7.152531907195225e-06, -4.768370445162873e-07, -0.00013243274588603526, -0.00024387246230617166, -0.00016378014697693288, -0.003984251990914345, -1.3351351299206726e-05, -1.728519782773219e-05, -2.9802276912960224e-06, -3.516612196108326e-05, -1.156323378381785e-05, -0.0001212284987559542, -6.651657167822123e-05, -0.0008605591137893498, -4.9828242481453344e-05, -0.006233416497707367, -0.001459129503928125, -0.059946946799755096, -0.00046171018038876355, -0.10877583175897598, -0.8359525203704834, -0.017672806978225708, -0.46010711789131165, -0.008428005501627922, -0.2314017415046692, -0.007991483435034752, -0.7174169421195984, -0.004145125392824411, -0.00960290152579546, -0.007850507274270058, -0.00011824862303910777, -0.0016224328428506851, -0.05742638558149338, -0.010269302874803543, -1.1920928244535389e-07, -2.0265558760002023e-06, -0.002150129759684205, -0.000854961050208658, -0.0010788579238578677, -0.11296396702528, -0.008519021794199944, -0.009421765804290771, -0.009799586609005928, -0.0006905793561600149, -0.029025662690401077, -0.49945521354675293, -1.2717431783676147, -0.25558358430862427, -0.09280040860176086, -1.3673865795135498, -0.5647196769714355, -0.5169588327407837, -0.06231512129306793, -1.6812182664871216, -0.0341978557407856, -0.033644504845142365, -0.01931454986333847, -0.0007737264968454838, -0.6420401930809021, -0.05809418484568596, -1.570730209350586, -0.0012326984433457255, -0.9348466992378235, -2.7418097943154862e-06, -0.00018916724366135895, -1.1801649634435307e-05, -0.04803847894072533, -0.02891680598258972, -0.024781206622719765, -0.0008561521535739303, -0.20054104924201965, -0.00893511064350605, -0.002516676438972354, -1.6569954823353328e-05, -4.23184028477408e-05, -0.01021844707429409, -0.02608189545571804, -0.04277310147881508, -0.0007023728103376925, -2.6464111215318553e-05, -4.768360213347478e-06, -2.6464111215318553e-05, -1.1920928244535389e-07, -1.0728830375228426e-06, -0.00018785618885885924, -0.00042274597217328846, -3.373566141817719e-05, -0.0005529781919904053, -0.0007759897271171212, -0.05531778559088707, -0.0008684201166033745, -0.18555963039398193, -7.009260298218578e-05, -0.05733318626880646, -3.2180135250091553, -0.0007560970261693001, -0.0016437364974990487, -0.016830118373036385, -0.011343744583427906, -0.4941723048686981, -0.002099335426464677, -6.353653589030728e-05, -0.00214406312443316, -1.0728830375228426e-06, -2.3841830625315197e-06, -9.393251093570143e-05, -0.00011598391574807465, -0.0012374608777463436, -0.10778726637363434, -0.0026003853417932987, -7.867782187531702e-06, -3.0636318115284666e-05, -0.0013506823452189565, -0.00015054999676067382, -1.966933996300213e-05, -0.06637565046548843, -0.312285453081131, -4.410734163684538e-06, -3.325883881188929e-05, -4.768370445162873e-07, -0.027607973664999008, 0.0, -1.966933996300213e-05, -0.00013791563105769455, -2.706014311115723e-05, -1.2755313036905136e-05, -0.007823065854609013, -0.004202463664114475, -0.03920084610581398, -0.0019954785238951445, -0.5275649428367615, -0.03414866328239441, -0.0005962263094261289, -0.00016437610611319542, -0.5954813361167908, -0.018267838284373283, -1.691407322883606], "finish_reason": "stop"}], "metrics": {"energy": 709.8413469047547, "energy_per_token": 3.3801968900226416, "time": 17.45208, "time_per_token": 0.08310514285714285}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise FileNotFoundError(f\"Directory does not exist: {directory}\")\n\n    # get all file paths in the directory\n    file_paths = glob.glob(os.path.join(directory, \"*\"))\n\n    # check if there are any files in the directory\n    if not any(os.path.isfile(path) for path in file_paths):\n        return None\n\n    # zip all files and return the zip file path\n    with zipfile.ZipFile(\"files.zip\", \"w\") as zipf:\n        for path in file_paths:\n            if os.path.isfile(path):\n                zipf.write(path, os.path.basename(path))\n    return \"files.zip\"", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " does", " not", " exist", ":", " {", "directory", "}\"", ")", "\n", "\n", "    ", "#", " get", " all", " file", " paths", " in", " the", " directory", "\n", "    ", "file", "_", "paths", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " \"", "*", "\"", "))", "\n", "\n", "    ", "#", " check", " if", " there", " are", " any", " files", " in", " the", " directory", "\n", "    ", "if", " not", " any", "(", "os", ".", "path", ".", "is", "file", "(", "path", ")", " for", " path", " in", " file", "_", "paths", "):", "\n", "        ", "return", " None", "\n", "\n", "    ", "#", " zip", " all", " files", " and", " return", " the", " zip", " file", " path", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "\"", "files", ".", "zip", "\"", ",", " \"", "w", "\"", ")", " as", " zip", "f", ":", "\n", "        ", "for", " path", " in", " file", "_", "paths", ":", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "path", "):", "\n", "                ", "zip", "f", ".", "write", "(", "path", ",", " os", ".", "path", ".", "bas", "ename", "(", "path", "))", "\n", "    ", "return", " \"", "files", ".", "zip", "\"", "\n", "\n", "def"], "logprobs": [-0.4745236039161682, -0.0755167230963707, -0.016357962042093277, -3.242440288886428e-05, -0.0011792379664257169, -2.5510462364763953e-05, -0.4496077597141266, -0.00038914260221645236, -0.0010921949287876487, -0.014048730954527855, -0.006929650902748108, -0.008318774402141571, -0.009232919663190842, -0.0017828536219894886, -0.00016830935783218592, -2.8609820219571702e-05, -0.08112692087888718, -0.3290020525455475, -0.09696367383003235, -0.2933553159236908, -3.109473705291748, -0.002200207905843854, -0.017266899347305298, -0.04913247376680374, -0.021907707676291466, -0.0014612721279263496, -0.006793615873903036, -0.00024029705673456192, -0.001353420433588326, -0.2267414778470993, -0.0005983707960695028, -1.4959237575531006, -4.072025299072266, -0.6385484933853149, -1.490431308746338, -0.13114389777183533, -0.1731911301612854, -0.14161519706249237, -0.08185487985610962, -0.22909219563007355, -0.0006003961316309869, -0.22810111939907074, -0.007192433346062899, -0.036079395562410355, -0.0005005536950193346, -0.10966524481773376, -5.8530047681415454e-05, -0.027943747118115425, -0.0016424274072051048, -0.08273409307003021, -1.0728830375228426e-06, -2.9802276912960224e-06, -0.00011014331539627165, -0.0003203832311555743, -5.507317473529838e-05, -0.0002640137099660933, -0.00024482590379193425, -0.344853013753891, -0.0016594461631029844, -0.02790607139468193, -0.010346702300012112, -0.007691056467592716, -0.22459807991981506, -0.00043764073052443564, -0.3228764533996582, -1.1842576265335083, -0.012786191888153553, -0.4812266528606415, -0.010639962740242481, -0.11690081655979156, -0.02603299915790558, -0.49589645862579346, -0.0014743659412488341, -0.006132239475846291, -0.012959777377545834, -0.00014852374442853034, -0.003045090241357684, -0.05983702465891838, -1.6821860074996948, -0.10729813575744629, -0.0840676873922348, -3.4570634852570947e-06, -8.344646857949556e-07, -1.1444026313256472e-05, -0.0001003691868390888, -8.523101132595912e-05, -0.00017152745567727834, -0.4323938190937042, -9.214453893946484e-05, -0.0009598892065696418, -2.539125671319198e-05, -8.940656698541716e-06, -8.022463589441031e-05, -1.1920928244535389e-07, -3.576278118089249e-07, -0.0002530493075028062, -0.0005750194541178644, -0.0008172033121809363, -0.146713525056839, -0.00860388483852148, -0.019011540338397026, -0.012268672697246075, -0.0010034770239144564, -0.11246766895055771, -2.206540584564209, -1.0868871212005615, -0.24214503169059753, -1.8901180028915405, -0.8339486718177795, -0.0716601237654686, -1.3969244956970215, -0.15993623435497284, -0.06275992095470428, -0.0033443018328398466, -0.0006998711614869535, -0.8993860483169556, -0.003989001736044884, -2.1219027985353023e-05, -3.814689989667386e-06, -2.2053474822314456e-05, -1.1920928244535389e-07, -2.50339189733495e-06, -0.18570676445960999, -0.3384398818016052, -0.023407211527228355, -0.0010650444310158491, -2.1457441107486375e-05, -2.2291887944447808e-05, -7.688703772146255e-05, -0.04317118600010872, -0.0005709686665795743, -2.50339189733495e-06, -0.16638070344924927, -1.6689160474925302e-05, -0.09386499226093292, -1.4957274198532104, -0.0001472126314183697, -0.00112791801802814, -0.0007921895012259483, -0.012023592367768288, -1.079016923904419, -0.00019500737835187465, -0.007898526266217232, -3.933898824470816e-06, -8.34461570775602e-06, -2.9444261599564925e-05, -0.0001774868869688362, -0.0006144542712718248, -0.14901502430438995, -0.009655441157519817, -1.311301275563892e-06, -2.50339189733495e-06, -5.960462772236497e-07, -0.0004441943601705134, -0.002045564353466034, -2.5152843591058627e-05, -6.23445157543756e-05, -0.0016621834365651011, -0.001134109916165471, -0.0005031750188209116, -0.019063355401158333, -7.462222856702283e-05, -5.006777428206988e-06, -5.364403477869928e-06, -3.015949550899677e-05, -0.002590516582131386, -0.06599172204732895, -0.4789104461669922, -4.172316494077677e-06, -1.7046782886609435e-05, 0.0, -0.0136369988322258, -1.1920928244535389e-07, -1.2397689715726301e-05, -0.00019393471302464604, -0.013658047653734684, -0.003889140672981739, -0.9862697124481201, -0.017082812264561653, -0.5645555257797241, -0.0037049478851258755, -8.177422569133341e-05, -2.1576648578047752e-05, -4.2437604861333966e-05, -0.7089110612869263, -0.024445999413728714, -1.3269699811935425], "finish_reason": "stop"}], "metrics": {"energy": 614.3469400777815, "energy_per_token": 3.285277754426639, "time": 15.561695, "time_per_token": 0.08321762032085561}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise FileNotFoundError(\"The specified directory does not exist\")\n    if os.path.isfile(directory):\n        raise FileNotFoundError(\"The specified path is not a directory\")\n    files = glob.glob(os.path.join(directory, \"*\"))\n    if not files:\n        return None\n    zip_path = os.path.join(directory, \"files.zip\")\n    with zipfile.ZipFile(zip_path, \"w\") as zip_file:\n        for file in files:\n            if os.path.isfile(file):\n                zip_file.write(file, arcname=os.path.basename(file))\n    return zip_path", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "The", " specified", " directory", " does", " not", " exist", "\"", ")", "\n", "    ", "if", " os", ".", "path", ".", "is", "file", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "The", " specified", " path", " is", " not", " a", " directory", "\"", ")", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " \"", "*", "\"", "))", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "return", " None", "\n", "    ", "zip", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " \"", "files", ".", "zip", "\"", ")", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "path", ",", " \"", "w", "\"", ")", " as", " zip", "_", "file", ":", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "                ", "zip", "_", "file", ".", "write", "(", "file", ",", " arc", "name", "=", "os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "    ", "return", " zip", "_", "path", "\n", "\n", "if"], "logprobs": [-0.4745236039161682, -0.0755167230963707, -0.016357962042093277, -3.242440288886428e-05, -0.0011792379664257169, -2.5510462364763953e-05, -0.4496077597141266, -0.00038914260221645236, -0.0010921949287876487, -0.014048730954527855, -0.006929650902748108, -0.008318774402141571, -0.009232919663190842, -0.0017828536219894886, -0.00016830935783218592, -2.8609820219571702e-05, -0.08112692087888718, -1.3278728723526, -1.108968734741211, -0.2590782046318054, -0.003341212635859847, -0.005902123637497425, -0.00026901919045485556, -0.0019064837833866477, -0.8054772019386292, -0.0009124883217737079, -0.0010010951664298773, -1.4293889999389648, -2.0944466590881348, -2.1062090396881104, -0.00012385078298393637, -0.24686862528324127, -2.4437606043647975e-05, -0.38415950536727905, -0.3419894874095917, -0.002467090031132102, -0.03303641080856323, -0.04217887669801712, -0.008332369849085808, -0.002414408838376403, -0.32699915766716003, -0.730810821056366, -0.03100617788732052, -3.4570634852570947e-06, -0.003919658251106739, -0.03805093839764595, -0.10498498380184174, -0.1910145878791809, -0.46026143431663513, -0.06227457523345947, -0.2865368723869324, -0.005177185870707035, -0.002119558397680521, -0.026555519551038742, -0.00016842853801790625, -0.0006246999255381525, -0.5203901529312134, -1.307900071144104, -0.09730637073516846, -0.10883688181638718, -4.935142715112306e-05, -0.042373258620500565, -0.008198062889277935, -0.21183748543262482, -2.145764938177308e-06, -1.728519782773219e-05, -2.145764938177308e-06, -0.0013158005895093083, -0.0001037067049765028, -0.0007951673469506204, -0.0006648475537076592, -0.4588242173194885, -0.002370525849983096, -0.030209584161639214, -0.028764501214027405, -0.02013353444635868, -0.011359774507582188, -0.1343337595462799, -0.08147135376930237, -0.02338927797973156, -0.0043470412492752075, -0.0035707305651158094, -0.0007697956170886755, -0.05531710758805275, -0.013992424122989178, -0.015946123749017715, -0.0529446043074131, -0.4669269621372223, -0.13451312482357025, -0.6326525211334229, -0.0005445189890451729, -0.03689798340201378, -3.099436753473128e-06, -7.164221460698172e-05, -4.529942543740617e-06, -0.022426676005125046, -0.006886083632707596, -0.05091897398233414, -0.0012029323261231184, -0.2573535144329071, -0.007756235543638468, -0.002659357851371169, -1.8596476365928538e-05, -1.7046782886609435e-05, -0.00010346830822527409, -0.0037390338256955147, -0.002418452175334096, -0.03981390967965126, -0.0008041008841246367, -1.4066597032069694e-05, -4.172316494077677e-06, -2.169585604860913e-05, -1.1920928244535389e-07, -3.099436753473128e-06, -3.683499380713329e-05, -0.0007331067463383079, -2.372236667724792e-05, -1.811964830267243e-05, -0.0007653883076272905, -0.2283671796321869, -0.0017020514933392406, -3.814689989667386e-06, -0.4878046214580536, -3.302042750874534e-05, -0.1383778303861618, -0.4106222987174988, -0.1986413598060608, -0.00019691436318680644, -0.0010014524450525641, -0.0012494861148297787, -0.009276621043682098, -0.044636085629463196, -0.24152511358261108, -0.007283680606633425, -7.462222856702283e-05, -0.00011514954530866817, -0.00146793806925416, -1.0357449054718018, -0.023762790486216545, -4.768360213347478e-06, -3.755022044060752e-05, -1.6689286894688848e-06, -0.0010619483655318618, -0.004476526286453009, -8.010543388081715e-05, -0.0007425173535011709, -0.02477911487221718, -0.0009764432325027883, -0.0008250646642409265, -0.021199887618422508, -0.0004957877099514008, -0.0007129749283194542, -5.2689116273541003e-05, -5.006777428206988e-06, -1.2040065485052764e-05, -0.0028263882268220186, -0.028937535360455513, -1.1922814846038818, -4.768370445162873e-07, -0.0006619884516112506, -0.0021151569671928883, -2.264974000354414e-06, -8.046303264563903e-05, -9.536738616588991e-07, -0.0020165364257991314, -3.576278118089249e-07, -2.8967437174287625e-05, -0.00033885458833537996, -0.015519562177360058, -0.002090056659653783, -0.033355146646499634, -0.010361331515014172, -0.01339884102344513, -0.00010549465514486656, -0.00037091050762683153, -0.6151265501976013, -0.03654152899980545, -0.6472972631454468], "finish_reason": "stop"}], "metrics": {"energy": 593.7291997680668, "energy_per_token": 3.335557302067791, "time": 14.723067, "time_per_token": 0.0827138595505618}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise FileNotFoundError(f\"Directory {directory} not found.\")\n    files = glob.glob(os.path.join(directory, \"*\"))\n    if not files:\n        return None\n    with zipfile.ZipFile(os.path.join(directory, 'files.zip'), 'w') as zipf:\n        for file in files:\n            zipf.write(file, os.path.basename(file))\n    return os.path.join(directory, 'files.zip')", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " {", "directory", "}", " not", " found", ".", "\"", ")", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " \"", "*", "\"", "))", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "return", " None", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", ",", " '", "w", "')", " as", " zip", "f", ":", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "zip", "f", ".", "write", "(", "file", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", "\n", "\n", "if"], "logprobs": [-0.4745236039161682, -0.0755167230963707, -0.016357962042093277, -3.242440288886428e-05, -0.0011792379664257169, -2.5510462364763953e-05, -0.4496077597141266, -0.00038914260221645236, -0.0010921949287876487, -0.014048730954527855, -0.006929650902748108, -0.008318774402141571, -0.009232919663190842, -0.0017828536219894886, -0.00016830935783218592, -2.8609820219571702e-05, -0.08112692087888718, -0.3290020525455475, -0.09696367383003235, -0.2933553159236908, -1.5707831382751465, -0.0009679876384325325, -0.004049910698086023, -1.347729206085205, -0.0014041336253285408, -0.8742262125015259, -0.007970432750880718, -0.0003418338019400835, -0.0009978797752410173, -1.3568626642227173, -0.9724996089935303, -0.052335694432258606, -0.07961349934339523, -3.862306402879767e-05, -0.04436414688825607, -0.0011453027836978436, -0.21846160292625427, -2.264974000354414e-06, -9.894321920000948e-06, -1.6689286894688848e-06, -0.0006500753224827349, -8.248942322097719e-05, -0.0003103728231508285, -0.00033087024348787963, -0.3834303617477417, -0.0016693241195753217, -0.0286044143140316, -0.01896931603550911, -0.035094525665044785, -0.023606207221746445, -0.1496255248785019, -0.050069041550159454, -0.01535874791443348, -0.002498126355931163, -0.007073006127029657, -0.0006144542712718248, -0.04964487999677658, -0.01244835089892149, -0.02212577499449253, -0.07842297106981277, -1.0025770664215088, -0.0016423083143308759, -1.1920858014491387e-05, -2.50339189733495e-06, -1.8954096958623268e-05, -1.1920928244535389e-07, -4.768360213347478e-06, -0.10949740558862686, -1.1925466060638428, -1.6569954823353328e-05, -0.00012694983161054552, -7.510157047363464e-06, -0.0034052501432597637, -0.00997652392834425, -0.014492369256913662, -0.0006084974738769233, -0.8284076452255249, -0.005329923238605261, -0.0006771179032512009, -1.0251946150674485e-05, -0.00013386306818574667, -9.548207890475169e-05, -0.06932045519351959, -0.0011837625643238425, -0.16286706924438477, -4.494089080253616e-05, -0.25365152955055237, -0.784437358379364, -0.00012265883560758084, -0.0010266992030665278, -0.0010835020802915096, -0.004873065743595362, -0.09203775972127914, -0.02143794484436512, -0.005312610883265734, -6.139089964563027e-05, -0.0001308832288486883, -0.0014969820622354746, -0.1989360898733139, -0.00046433156239800155, -1.0609570381348021e-05, -4.529942543740617e-06, -6.472854875028133e-05, -0.004870811477303505, -0.04170573502779007, -0.8575448989868164, -2.264974000354414e-06, -2.276871418871451e-05, -5.960462772236497e-07, -0.009175160899758339, -1.6569954823353328e-05, -3.135155202471651e-05, -0.00027366707217879593, -0.016990110278129578, -0.003651144215837121, -0.022410355508327484, -0.018654033541679382, -0.039438437670469284, -1.3470558769768104e-05, -2.8371408916427754e-05, -2.2172682292875834e-05, -0.004557579290121794, -0.0006420934805646539, -0.0005676327273249626, -8.380061626667157e-05, -0.005274428054690361, -0.00019059749320149422, -7.438383181579411e-05, -2.3007127310847864e-05, -5.876845170860179e-05, -0.4948512017726898, -0.03081350401043892, -0.6299229860305786], "finish_reason": "stop"}], "metrics": {"energy": 465.9976532325746, "energy_per_token": 3.5037417536283804, "time": 10.941594, "time_per_token": 0.08226762406015038}}
{"outputs": [{"text": "# Check if directory exists\n    if not os.path.exists(directory):\n        raise FileNotFoundError(f\"Directory not found: {directory}\")\n    \n    # Create a zip file object\n    zip_path = os.path.join(directory, 'files.zip')\n    zip = zipfile.ZipFile(zip_path, 'w')\n    \n    # Add files to the zip file\n    for file_path in glob.glob(os.path.join(directory, '*')):\n        if os.path.isfile(file_path):\n            zip.write(file_path, os.path.basename(file_path))\n    \n    # Close the zip file object\n    zip.close()\n    \n    return zip_path if zip.namelist() else None", "tokens": ["#", " Check", " if", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " not", " found", ":", " {", "directory", "}\"", ")", "\n", "    ", "\n", "    ", "#", " Create", " a", " zip", " file", " object", "\n", "    ", "zip", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", "\n", "    ", "zip", " =", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "path", ",", " '", "w", "')", "\n", "    ", "\n", "    ", "#", " Add", " files", " to", " the", " zip", " file", "\n", "    ", "for", " file", "_", "path", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "*", "'))", ":", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "            ", "zip", ".", "write", "(", "file", "_", "path", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", "))", "\n", "    ", "\n", "    ", "#", " Close", " the", " zip", " file", " object", "\n", "    ", "zip", ".", "close", "()", "\n", "    ", "\n", "    ", "return", " zip", "_", "path", " if", " zip", ".", "nam", "elist", "()", " else", " None", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.671107292175293, -0.5433729887008667, -0.10233151912689209, -1.366400957107544, -0.20827312767505646, -0.1033715009689331, -0.00150079105515033, -0.010317088104784489, -0.015430237166583538, -0.004738648887723684, -1.3828182090946939e-05, -0.0002775999018922448, -1.0490362910786644e-05, -0.22196945548057556, -0.00011002412065863609, -0.0005389191792346537, -0.007459051441401243, -0.0010749283246695995, -0.002825674833729863, -0.00757961580529809, -0.001510551548562944, -9.214453893946484e-05, -8.34461570775602e-06, -0.03202694654464722, -0.2517929971218109, -0.04118100926280022, -0.13908551633358002, -2.4839673042297363, -0.002744481433182955, -0.010104219429194927, -0.012972250580787659, -0.0005249790847301483, -0.002647468587383628, -0.00012778419477399439, -0.00038842763751745224, -1.4059739112854004, -2.4238944053649902, -0.000993830617517233, -0.06210273504257202, -1.7344529628753662, -1.168288230895996, -0.552654504776001, -0.07655513286590576, -1.2418519258499146, -1.0225542783737183, -0.00033122775494121015, -0.3633253574371338, -0.09754093736410141, -1.1036920547485352, -0.0005021026590839028, -0.06609003245830536, -5.364403477869928e-06, -0.0001567479339428246, -5.722029527532868e-06, -0.02121284231543541, -0.005629756022244692, -0.014861115254461765, -0.000356253091013059, -0.18943943083286285, -0.006113400682806969, -0.0013766345800831914, -1.1801649634435307e-05, -2.1934269170742482e-05, -0.018239863216876984, -0.006348087452352047, -0.8045269846916199, -2.7191622257232666, -0.00044204952428117394, -1.9788545614574105e-05, -9.65590606938349e-06, -3.683499380713329e-05, -7.152555099310121e-07, -2.3841855067985307e-07, -0.00029797881143167615, -0.000416907190810889, -5.602679812000133e-05, -1.2993727978027891e-05, -0.000547378440387547, -0.058711741119623184, -0.005447898991405964, -0.57452392578125, -0.004201039206236601, -0.18015360832214355, -0.019606010988354683, -0.00032062159152701497, -0.007972916588187218, -0.7409165501594543, -0.41420978307724, -0.08916868269443512, -0.26249635219573975, -0.00157423026394099, -0.19171513617038727, -0.023212602362036705, -0.0001532914029667154, -1.1344765424728394, -0.06880223006010056, -1.783394694328308, -0.1273428201675415, -0.00014852374442853034, -0.004215640481561422, -1.2993727978027891e-05, -0.5339149236679077, -0.0002563863235991448, -0.059176232665777206, -2.0265558760002023e-06, -1.5497195136049413e-06, -1.7881377516459906e-06, -0.00010108436981681734, -4.95898348162882e-05, -0.000144709600135684, -0.00016306500765495002, -0.05931565910577774, -0.0017101438716053963, -0.030214210972189903, -2.825220326485578e-05, -0.006236733868718147, -0.004330542869865894, -0.19647814333438873, -0.02813071571290493, -1.1920922133867862e-06, -3.2186455882765586e-06, -3.576278118089249e-07, -0.00022373080719262362, -0.0015528061194345355, -3.707340147229843e-05, -2.539125671319198e-05, -8.106198947643861e-06, -1.1920928244535389e-07, -0.03561164438724518, -0.004488393664360046, -0.0011380392825230956, -0.06416768580675125, -0.0020325970835983753, -3.099436753473128e-06, -6.627816765103489e-05, -0.0016800350276753306, -4.458328112377785e-05, -5.960462772236497e-07, -0.01945532113313675, -0.22189489006996155, -4.172316494077677e-06, -1.7404405298293568e-05, -3.576278118089249e-07, -0.002001427114009857, 0.0, -1.0490362910786644e-05, -9.42901024245657e-05, -1.2993727978027891e-05, -5.960462772236497e-07, -0.013176157139241695, -0.005720316432416439, -0.2850869297981262, -0.035226304084062576, -0.0006027788622304797, -0.08048489689826965, -0.04824978485703468, -0.033853571861982346, -0.0010689741466194391, -0.0033902807626873255, -1.7072480916976929, -0.020874682813882828, -0.00014888131408952177, -0.0005501187406480312, -4.660974445869215e-05, -0.00010108436981681734, -9.297892393078655e-05, -0.003037959337234497, -0.12570028007030487, -0.06866122037172318, -0.0007543102256022394, -1.3620580434799194, -0.035353463143110275, -0.0013273486401885748, -1.645074735279195e-05, -1.0430271625518799, -1.2414603233337402, -0.00667899614199996, -0.010107995942234993, -1.7881377516459906e-06, -0.002342815510928631, -0.006083542946726084, -0.0014399646315723658, -1.9665040969848633, -8.4638240878121e-06, -9.536738616588991e-07, -2.622600959512056e-06, -6.556489552167477e-06, -0.16427303850650787], "finish_reason": "stop"}], "metrics": {"energy": 686.5256779708861, "energy_per_token": 3.651732329632373, "time": 15.973488, "time_per_token": 0.08496536170212766}}
{"outputs": [{"text": "# Check if the specified directory exists\n    if not os.path.exists(directory):\n        raise FileNotFoundError(\"The specified directory does not exist\")\n\n    # Get a list of all files in the specified directory\n    files = glob.glob(f\"{directory}/*\")\n\n    # If there are no files, return None\n    if not files:\n        return None\n\n    # Generate a path for the zip file\n    zip_path = os.path.join(directory, \"files.zip\")\n\n    # Create a new ZipFile object for the zip file\n    with zipfile.ZipFile(zip_path, \"w\") as zip_file:\n        # Add each file to the zip file\n        for file in files:\n            zip_file.write(file, os.path.basename(file))\n\n    # Return the path to the generated zip file\n    return zip_path", "tokens": ["#", " Check", " if", " the", " specified", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "The", " specified", " directory", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "#", " Get", " a", " list", " of", " all", " files", " in", " the", " specified", " directory", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "f", "\"", "{", "directory", "}", "/*", "\"", ")", "\n", "\n", "    ", "#", " If", " there", " are", " no", " files", ",", " return", " None", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "#", " Generate", " a", " path", " for", " the", " zip", " file", "\n", "    ", "zip", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " \"", "files", ".", "zip", "\"", ")", "\n", "\n", "    ", "#", " Create", " a", " new", " Zip", "File", " object", " for", " the", " zip", " file", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "path", ",", " \"", "w", "\"", ")", " as", " zip", "_", "file", ":", "\n", "        ", "#", " Add", " each", " file", " to", " the", " zip", " file", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "zip", "_", "file", ".", "write", "(", "file", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "\n", "    ", "#", " Return", " the", " path", " to", " the", " generated", " zip", " file", "\n", "    ", "return", " zip", "_", "path", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-1.671107292175293, -0.5433729887008667, -0.10233151912689209, -0.3212577700614929, -2.05452561378479, -0.00569613603875041, -0.04276019334793091, -0.08335976302623749, -0.001735848723910749, -0.00776285957545042, -0.013371552340686321, -0.004556986037641764, -7.867782187531702e-06, -0.0002848696312867105, -1.07287787614041e-05, -0.26944872736930847, -0.00014435203047469258, -0.0007213136414065957, -0.008601166307926178, -0.0009120118920691311, -0.002320218365639448, -0.010678648948669434, -0.0012567488010972738, -6.627816765103489e-05, -8.22540732769994e-06, -0.026437221094965935, -1.7035012245178223, -0.8122686147689819, -0.10507889091968536, -0.001042775809764862, -0.0030441395938396454, -0.00012087091454304755, -0.0008686583023518324, -0.7988400459289551, -0.0007115454645827413, -0.0004465774691198021, -0.3137190043926239, -0.0012963948538526893, -0.0372963473200798, -1.6395381689071655, -0.6424983739852905, -0.006800364702939987, -0.00024828212917782366, -0.11007793992757797, -0.2607525885105133, -0.14464285969734192, -0.0009910915978252888, -1.381115436553955, -0.0004654039512388408, -0.927965521812439, -0.000276765669696033, -0.3011777997016907, -0.07892808318138123, -0.0609610453248024, -5.054346183896996e-05, -0.008140125311911106, -0.0037762064021080732, -2.618253469467163, -0.19557704031467438, -0.00032074074260890484, -0.0008512687054462731, -0.059628378599882126, -0.007832410745322704, -0.04351010546088219, -0.007948790676891804, -0.0026586444582790136, -0.061762213706970215, -0.00047874910524114966, -0.009921521879732609, -1.5075671672821045, -0.3063546419143677, -0.0012197205796837807, -0.004597213119268417, -0.0012755600037053227, -0.8838210701942444, -0.053441163152456284, -0.004667102824896574, -0.00668775849044323, -0.00010072677832795307, -0.0009800160769373178, -0.15601031482219696, -0.008382376283407211, -0.0031880526803433895, -0.00034505134681239724, -0.0005603650351986289, -0.014849487692117691, -0.006069679744541645, -0.00023898606013972312, -0.008930385112762451, -0.0006598440813831985, -0.0035598021931946278, -2.403634786605835, -1.3336727619171143, -2.5791096687316895, -0.14194634556770325, -0.0029049599543213844, -0.07612881064414978, -0.004068906884640455, -0.29548072814941406, -0.00047350639943033457, -0.049422748386859894, -0.028709713369607925, -0.09356866031885147, -0.00030989613151177764, -0.124871626496315, -9.775113539944869e-06, -0.00029202012228779495, -2.4199192921514623e-05, -0.015035280026495457, -0.006522319745272398, -0.048471834510564804, -0.001121726119890809, -0.35724541544914246, -0.01315839122980833, -0.0020650746300816536, -1.1205610462639015e-05, -1.6927575416048057e-05, -0.00014780859055463225, -0.0007048744591884315, -0.009917862713336945, -0.00018463814922142774, -0.009359411895275116, -0.7141634821891785, -0.39592495560646057, -0.8489271402359009, -1.0644469261169434, -0.004490648861974478, -0.22111092507839203, -2.2824807167053223, -0.3274252414703369, -0.10513211786746979, -0.004588076379150152, -0.07890483736991882, -0.00011538793478393927, -0.04335886612534523, -0.0024012085050344467, -8.821448318485636e-06, -2.9802276912960224e-06, -4.51792984677013e-05, -3.576278118089249e-07, -1.1920928244535389e-07, -3.802703940891661e-05, -0.00035470392322167754, -1.537788011773955e-05, -1.3112935448589269e-05, -0.0005346299149096012, -0.2413252890110016, -0.0038948405999690294, -2.50339189733495e-06, -0.1627999097108841, -8.821448318485636e-06, -0.1532483994960785, -0.24380148947238922, -0.03892363980412483, -0.00011550712952157483, -0.00013243274588603526, -0.020537812262773514, -0.035992465913295746, -0.7989189028739929, -0.152182474732399, -0.002273952355608344, -0.04877456650137901, -0.0001591317413840443, -0.012176700867712498, -0.02969255857169628, -0.03348242864012718, -0.0001280225842492655, -0.0015545914648100734, -0.02224656566977501, -0.21874432265758514, -0.002429274143651128, -6.425174069590867e-05, -4.207999518257566e-05, -0.0016318351263180375, -0.19375362992286682, -3.373566141817719e-05, -0.00035315475543029606, -2.5510462364763953e-05, -1.8000440832111053e-05, -2.4199192921514623e-05, -0.002495629247277975, -0.1756172925233841, -0.5500983595848083, -3.099436753473128e-06, -9.417489309271332e-06, -8.344646857949556e-07, -0.0049100774340331554, 0.0, -1.728519782773219e-05, -0.0002848696312867105, -0.015597847290337086, -0.0018335450440645218, -0.008340290747582912, -0.0017470349557697773, -0.0808580219745636, -0.006758686620742083, -0.0013016331940889359, -0.028433870524168015, -0.01540018618106842, -0.00012730741582345217, -0.6029925346374512, -0.0004960260121151805, -0.00027176024741493165, -0.0012397230602800846, -0.00030048147891648114, -0.0014724613865837455, -0.005792024079710245, -0.0001234931987710297, -0.0002526917669456452, -1.4855117797851562, -6.794906312279636e-06, -1.5497195136049413e-06, -3.3378546504536644e-06, -1.0847986231965479e-05, -1.7714999914169312, -0.0021778454538434744], "finish_reason": "stop"}], "metrics": {"energy": 729.9663464145665, "energy_per_token": 3.3794738259933634, "time": 18.083958, "time_per_token": 0.08372202777777778}}
{"outputs": [{"text": "# Validate input argument\n    if not os.path.exists(directory):\n        raise FileNotFoundError(f'The directory {directory} does not exist.')\n\n    # Create zip file with files in the directory\n    zip_path = os.path.join(directory, 'files.zip')\n    with zipfile.ZipFile(zip_path, 'w') as zip_file:\n        file_paths = glob.glob(os.path.join(directory, '*'))\n        if file_paths:\n            for file_path in file_paths:\n                if os.path.isfile(file_path):\n                    zip_file.write(file_path, os.path.basename(file_path))\n        else:\n            print(f'No files found in directory: {directory}')\n            return None\n\n    # Return path to the generated zip file\n    return zip_path", "tokens": ["#", " Valid", "ate", " input", " argument", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "'", "The", " directory", " {", "directory", "}", " does", " not", " exist", ".", "')", "\n", "\n", "    ", "#", " Create", " zip", " file", " with", " files", " in", " the", " directory", "\n", "    ", "zip", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "path", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "        ", "file", "_", "paths", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "*", "'))", "\n", "        ", "if", " file", "_", "paths", ":", "\n", "            ", "for", " file", "_", "path", " in", " file", "_", "paths", ":", "\n", "                ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "                ", "    ", "zip", "_", "file", ".", "write", "(", "file", "_", "path", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", "))", "\n", "        ", "else", ":", "\n", "            ", "print", "(", "f", "'", "No", " files", " found", " in", " directory", ":", " {", "directory", "}", "')", "\n", "            ", "return", " None", "\n", "\n", "    ", "#", " Return", " path", " to", " the", " generated", " zip", " file", "\n", "    ", "return", " zip", "_", "path", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.671107292175293, -3.128805160522461, -0.07323514670133591, -1.8863894939422607, -3.208059310913086, -0.09344489872455597, -0.004397958982735872, -0.044166501611471176, -0.011102800257503986, -0.03233157843351364, -8.999896090244874e-05, -0.0006238659843802452, -2.9205850296420977e-05, -0.7297136187553406, -0.00018308870494365692, -0.0009415484382770956, -0.01947975717484951, -0.0028928357642143965, -0.003327786922454834, -0.0051688845269382, -0.003098094603046775, -7.497983460780233e-05, -2.2172682292875834e-05, -0.029586203396320343, -0.1429871767759323, -2.8388559818267822, -1.0285589694976807, -0.6996117234230042, -1.0114561319351196, -0.0011312521528452635, -0.013608423061668873, -0.0064962636679410934, -0.000285584683297202, -0.006670706905424595, -0.7929031848907471, -0.012189654633402824, -0.0006870055221952498, -0.27468448877334595, -0.0012494861148297787, -0.0489446260035038, -1.4882533550262451, -1.333631157875061, -0.08870941400527954, -3.350717067718506, -1.725234031677246, -1.4533195495605469, -0.5230119824409485, -0.4377017617225647, -0.09763748943805695, -0.0011501847766339779, -0.44680675864219666, -0.09234801679849625, -0.803905189037323, -0.0011641160817816854, -0.06926795095205307, -3.6954811548639555e-06, -0.000296310376143083, -4.410734163684538e-06, -0.026475882157683372, -0.005659983027726412, -0.03726143389940262, -0.0006719953380525112, -0.037250638008117676, -0.006748977117240429, -0.0026754082646220922, -1.2278481335670222e-05, -4.076874756719917e-05, -0.030007386580109596, -0.03454466536641121, -0.22017991542816162, -0.0007210753974504769, -1.537788011773955e-05, -5.8412379075889476e-06, -2.038458114839159e-05, -1.1920928244535389e-07, -4.172316494077677e-06, -0.00012337400403339416, -0.00027926836628466845, -1.2993727978027891e-05, -1.5735502529423684e-05, -0.0007951673469506204, -0.039859503507614136, -0.0019207615405321121, -0.24911540746688843, -0.0001802282058633864, -0.057826220989227295, -0.782771110534668, -0.15650852024555206, -0.00027259447961114347, -0.0023254514671862125, -0.00403043907135725, -2.1673762798309326, -0.031850751489400864, -0.8020793199539185, -0.0006610354175791144, -0.03099658526480198, -2.0265373677830212e-05, -0.09281615912914276, -0.00033742457162588835, -0.036987364292144775, -1.311301275563892e-06, -4.172316494077677e-06, -4.887569048150908e-06, -7.724463648628443e-05, -5.972207145532593e-05, -0.0005024601123295724, -0.00031990656862035394, -0.02466839738190174, -0.0061727589927613735, -0.03439667075872421, -0.029468726366758347, -0.026074577122926712, -2.8148348331451416, -1.9632823467254639, -6.794906312279636e-06, -5.507317473529838e-05, -0.04490293562412262, -0.08684376627206802, -0.001963593764230609, -0.06261671334505081, -0.021098461002111435, -0.0664820671081543, -0.0031351721845567226, -0.00013553177996072918, -0.006497684866189957, -1.4305104514278355e-06, -5.602820692729438e-06, -8.082063141046092e-05, -0.0008208957733586431, -0.0011036264477297664, -0.5131487250328064, -0.05259077250957489, -2.3841830625315197e-06, -1.9311717551317997e-05, -7.152555099310121e-07, -0.002773250686004758, -0.0032007675617933273, -8.523101132595912e-05, -0.0001734344696160406, -5.006777428206988e-06, -9.536738616588991e-07, -0.03144501522183418, -0.0036786997225135565, -0.0001722425949992612, -0.000872946111485362, -0.07805147022008896, -0.0002549561613705009, -0.001214600750245154, -0.00010644822759786621, -3.576272320060525e-06, -2.4199192921514623e-05, -0.0022958368062973022, -3.015949550899677e-05, -2.145764938177308e-06, -0.035705167800188065, -0.21572253108024597, -2.622600959512056e-06, -8.940656698541716e-06, -2.3841855067985307e-07, -0.002186052966862917, 0.0, -2.5033637939486653e-05, -0.0007161913090385497, -4.768360213347478e-06, -1.2278481335670222e-05, -0.018949782475829124, -0.004276654217392206, -0.6616373658180237, -0.006132831797003746, -3.71926071238704e-05, -0.004416829906404018, -0.0010871936101466417, -1.7264671325683594, -0.12483637779951096, -0.06533777713775635, -0.07110292464494705, -0.795329213142395, -0.012350980192422867, -0.05245436355471611, -0.004850288387387991, -0.6996962428092957, -0.48980915546417236, -0.001591369160450995, -0.001042656716890633, -0.0027312852907925844, -0.07214803248643875, -0.004420865327119827, -0.3095664381980896, -0.11078886687755585, -0.028500260785222054, -0.005677052307873964, -0.10395882278680801, -0.0038938906509429216, -0.8690596222877502, -0.11352472752332687, -0.639620840549469, -0.01991141028702259, -0.9079545140266418, -0.5570051074028015, -0.002762194722890854, -0.0024668520782142878, -0.011656390503048897, -0.00041571559268049896, -0.024989929050207138, -0.03746744990348816, -5.686121585313231e-05, -0.00039939055568538606, -1.1273698806762695, -9.298280929215252e-06, -1.311301275563892e-06, -2.3841830625315197e-06, -1.585470999998506e-05, -0.21445052325725555], "finish_reason": "stop"}], "metrics": {"energy": 724.2460283927918, "energy_per_token": 3.4002160957408067, "time": 17.656878, "time_per_token": 0.08289614084507042}}
{"outputs": [{"text": "if not os.path.isdir(directory):\n        raise FileNotFoundError(f'{directory} is not a directory')\n\n    file_list = [os.path.join(directory, filename) for filename in os.listdir(directory) if os.path.isfile(os.path.join(directory, filename))]\n    if not file_list:\n        return None\n\n    zip_filename = os.path.join(directory, 'files.zip')\n    with zipfile.ZipFile(zip_filename, 'w') as zip_file:\n        for filename in file_list:\n            zip_file.write(filename, os.path.basename(filename))\n\n    return zip_filename", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "'{", "directory", "}", " is", " not", " a", " directory", "')", "\n", "\n", "    ", "file", "_", "list", " =", " [", "os", ".", "path", ".", "join", "(", "directory", ",", " filename", ")", " for", " filename", " in", " os", ".", "list", "dir", "(", "directory", ")", " if", " os", ".", "path", ".", "is", "file", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " filename", "))", "]", "\n", "    ", "if", " not", " file", "_", "list", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "zip", "_", "filename", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "filename", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "        ", "for", " filename", " in", " file", "_", "list", ":", "\n", "            ", "zip", "_", "file", ".", "write", "(", "filename", ",", " os", ".", "path", ".", "bas", "ename", "(", "filename", "))", "\n", "\n", "    ", "return", " zip", "_", "filename", "\n", "\n", "#"], "logprobs": [-0.4745236039161682, -0.0755167230963707, -0.016357962042093277, -3.242440288886428e-05, -0.0011792379664257169, -2.5510462364763953e-05, -1.0163153409957886, -0.0017677409341558814, -0.001073142047971487, -0.0019792981911450624, -0.0029235025867819786, -0.012098971754312515, -0.009320556186139584, -0.011804135516285896, -0.004146075341850519, -0.00020597243565134704, -2.932505594799295e-05, -0.1692999005317688, -0.33665764331817627, -2.999641180038452, -0.0018868515035137534, -0.03605271875858307, -1.1412808895111084, -0.03135155513882637, -0.05641523376107216, -0.421049028635025, -0.13942424952983856, -0.002088390989229083, -0.4328778088092804, -0.0004611144249793142, -2.5708811283111572, -0.08921241015195847, -0.56581711769104, -0.0023737368173897266, -2.611302614212036, -1.9439618587493896, -0.00019441144831944257, -0.0005653690313920379, -6.437280717364047e-06, -0.2449483722448349, -0.0008579387213103473, -0.019242050126194954, -0.0004389514506328851, -2.1011962890625, -0.0006971312686800957, -0.03361176699399948, -0.00020561488054227084, -0.00276445341296494, -0.05211065337061882, -4.291525328881107e-06, -1.8715683836489916e-05, -1.1920928244535389e-07, -0.000735608336981386, -0.0032228692434728146, -0.18110552430152893, -0.12663495540618896, -0.018645726144313812, -1.7881377516459906e-06, -1.6212332411669195e-05, -1.311301275563892e-06, -0.0005420169327408075, -0.0010277710389345884, -0.0005380851216614246, -0.003954805433750153, -2.622600959512056e-06, -4.1126360883936286e-05, -2.7418097943154862e-06, -0.0001262346631847322, -3.0397906812140718e-05, -0.00016175392374861985, -7.402622577501461e-05, -0.002531777834519744, -0.00010406429646536708, -0.01086132600903511, -0.008188249543309212, -0.6227444410324097, -0.13372689485549927, -0.13397474586963654, -0.007392433006316423, -1.1205610462639015e-05, -7.152531907195225e-06, -0.0015455455286428332, -0.010162869468331337, -0.001872930210083723, -0.02890082448720932, -0.025730740278959274, -0.009554491378366947, -0.09636335074901581, -0.0003259842633269727, -0.5895273089408875, -0.19551165401935577, -2.5978012084960938, -0.0012409137561917305, -0.27965834736824036, -2.861018856492592e-06, -9.381330892210826e-05, -6.556489552167477e-06, -0.016382941976189613, -0.021501416340470314, -0.04537604749202728, -0.0007256020326167345, -0.040497347712516785, -0.007317645009607077, -0.0022238779347389936, -1.9550132492440753e-05, -7.521823135903105e-05, -0.001892800792120397, -0.06733856350183487, -0.144366055727005, -0.0009710840531624854, -2.098061486321967e-05, -5.8412379075889476e-06, -2.8609820219571702e-05, -3.576278118089249e-07, -1.4305104514278355e-06, -0.00028832571115344763, -0.0005901502445340157, -4.589452510117553e-05, -3.933898824470816e-06, -0.0012817509705200791, -0.06569025665521622, -0.001292346976697445, -0.4211445450782776, -3.85038583772257e-05, -0.14275674521923065, -0.36043599247932434, -0.23321108520030975, -0.0009142747730948031, -0.001946698990650475, -0.0018412794452160597, -0.013440008275210857, -1.1728265285491943, -0.0018717404454946518, -0.010258919559419155, -1.6569954823353328e-05, -2.50339189733495e-06, -0.00016604475968051702, -0.0002548369811847806, -0.0014132998185232282, -0.052804965525865555, -0.0008884296985343099, -0.002028790069743991, -0.00013505500101018697, -7.629365427419543e-06, -2.2172682292875834e-05, -0.002241124864667654, -0.12065212428569794, -0.4517955183982849, -2.264974000354414e-06, -1.549708758830093e-05, -8.344646857949556e-07, -0.056599318981170654, -4.768370445162873e-07, -2.253030106658116e-05, -0.00030310326837934554, -0.042617067694664, -0.004426324740052223, -0.16812409460544586, -0.0031072453130036592, -0.017930908128619194, -0.03546668589115143, -0.0001037067049765028, -0.0006105228094384074, -0.6293594241142273, -0.017850112169981003, -2.6468029022216797], "finish_reason": "stop"}], "metrics": {"energy": 586.8590262956615, "energy_per_token": 3.535295339130491, "time": 13.657416, "time_per_token": 0.08227359036144578}}
{"outputs": [{"text": "# Raise an exception if the directory does not exist\n    if not os.path.isdir(directory):\n        raise FileNotFoundError(f\"Directory '{directory}' does not exist.\")\n    # Find all files in the directory (not including subdirectories)\n    files = glob.glob(os.path.join(directory, '*'))\n    # If there are no files, return None\n    if not files:\n        return None\n    # Create a zip file\n    zip_name = 'files.zip'\n    with zipfile.ZipFile(zip_name, 'w') as zip:\n        # Add each file to the zip file\n        for file in files:\n            zip.write(file)\n    # Return the path to the generated zip file\n    return zip_name", "tokens": ["#", " Ra", "ise", " an", " exception", " if", " the", " directory", " does", " not", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " '", "{", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "#", " Find", " all", " files", " in", " the", " directory", " (", "not", " including", " sub", "direct", "ories", ")", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "*", "'))", "\n", "    ", "#", " If", " there", " are", " no", " files", ",", " return", " None", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "return", " None", "\n", "    ", "#", " Create", " a", " zip", " file", "\n", "    ", "zip", "_", "name", " =", " '", "files", ".", "zip", "'", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "name", ",", " '", "w", "')", " as", " zip", ":", "\n", "        ", "#", " Add", " each", " file", " to", " the", " zip", " file", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "zip", ".", "write", "(", "file", ")", "\n", "    ", "#", " Return", " the", " path", " to", " the", " generated", " zip", " file", "\n", "    ", "return", " zip", "_", "name", "\n", "\n", "if"], "logprobs": [-1.671107292175293, -3.3286685943603516, -0.06871397793292999, -0.7756634950637817, -1.6116406917572021, -0.016727661713957787, -0.1056748703122139, -0.27599093317985535, -0.1566975861787796, -0.0006388768670149148, -0.005574870388954878, -0.0832972452044487, -0.0018787605222314596, -0.02061021700501442, -0.013193333521485329, -0.005487734917551279, -1.2874520507466514e-05, -0.000530936405993998, -2.539125671319198e-05, -1.4340380430221558, -0.00036125810584053397, -0.0006121906917542219, -0.0008311392739415169, -0.0010375360725447536, -0.0023228349164128304, -0.004654288291931152, -0.004358554258942604, -0.002068524481728673, -0.00014768941036891192, -1.645074735279195e-05, -0.0746225118637085, -0.29539385437965393, -0.08944103121757507, -0.4303174316883087, -0.5458647608757019, -0.0002493547508493066, -0.001359730027616024, -0.001320086419582367, -0.28610050678253174, -0.00022015532886143774, -0.0016518294578418136, -0.6784040927886963, -0.00284207914955914, -0.00042834642226807773, -0.0005231918767094612, -1.6445094347000122, -0.12089743465185165, -2.303812026977539, -0.1149333193898201, -0.19674931466579437, -0.15826205909252167, -0.006452914793044329, -0.2758939564228058, -1.132377028465271, -0.6632070541381836, -0.09303885698318481, -0.003692002035677433, -0.018389448523521423, -7.748303323751315e-05, -0.0024154791608452797, -0.08468759804964066, -0.0005373702733777463, -0.3991978168487549, -0.05965735390782356, -0.03078553080558777, -4.7205765440594405e-05, -0.013619947247207165, -0.000520570669323206, -0.09289101511240005, -2.7418097943154862e-06, -6.079655122448457e-06, -0.00011336160969221964, -0.00031382881570607424, -6.139089964563027e-05, -0.0002109781780745834, -0.00020930961181875318, -0.8700996041297913, -0.0023462644312530756, -0.08485297113656998, -0.002138234442099929, -0.00958129484206438, -0.17846988141536713, -1.6070594787597656, -0.24392226338386536, -0.001754413009621203, -0.010387169197201729, -0.0023044003173708916, -0.2238231897354126, -0.05936497822403908, -0.005453826859593391, -0.010542887263000011, -0.0001691436773398891, -0.0012579393805935979, -0.07024208456277847, -0.036315202713012695, -0.00471088569611311, -0.001007645158097148, -0.0010937429033219814, -0.012067525647580624, -0.010179507546126842, -0.00045718232286162674, -0.014071769081056118, -0.008826525881886482, -0.4129227101802826, -0.36644449830055237, -0.2605815529823303, -0.08938957005739212, -2.276035785675049, -0.0004745787591673434, -0.6238167881965637, -0.1346207559108734, -1.5097415447235107, -0.001029200037010014, -0.6002429723739624, -0.009885403327643871, -0.0028335205279290676, -3.266281055402942e-05, -0.0001532914029667154, -0.014353951439261436, -0.0005551227368414402, -0.22931762039661407, -0.0006298227235674858, -1.2278481335670222e-05, -2.50339189733495e-06, -1.3112935448589269e-05, -8.344646857949556e-07, -9.536738616588991e-07, -0.0004674295778386295, -0.0013160386588424444, -6.258291978156194e-05, -5.4596363042946905e-05, -0.0008492438937537372, -0.08033870905637741, -0.0006681832019239664, -0.06230515241622925, -0.00020752183627337217, -0.1311810165643692, -2.619593620300293, -0.0011342290090397, -0.007909880019724369, -0.19306011497974396, -0.26131537556648254, -1.0062421560287476, -0.0037788189947605133, -0.010996101424098015, -0.003580589545890689, -0.008621258661150932, -0.417001336812973, -0.020502425730228424, -0.0002101439022226259, -0.002029860857874155, -0.0401473268866539, -0.0369795523583889, -0.003973091021180153, -5.090107151772827e-05, -7.295342220459133e-05, -0.0015966061037033796, -0.20976819097995758, -0.0005093707586638629, -8.702239938429557e-06, -3.194758028257638e-05, -0.0016093410085886717, -1.2345243692398071, -0.001158043509349227, -0.022240735590457916, -0.15037761628627777, -0.017132850363850594, -0.006039701867848635, -0.088067427277565, -0.010463851504027843, -0.001053374377079308, -0.9499809741973877, -0.0019488405669108033, -0.0009712031460367143, -0.003460611216723919, -0.00029738296871073544, -0.009335909970104694, -1.1580119132995605, -0.0033173311967402697, -0.0003013156820088625, -0.5832082033157349, -0.03667886555194855, -0.6677441596984863], "finish_reason": "stop"}], "metrics": {"energy": 612.9611167259216, "energy_per_token": 3.3495142990487516, "time": 15.1433115, "time_per_token": 0.08275033606557376}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise FileNotFoundError(f\"Directory '{directory}' does not exist.\")\n    if not any(os.path.isfile(os.path.join(directory, file)) for file in os.listdir(directory)):\n        return None\n\n    with zipfile.ZipFile(f\"{directory}/files.zip\", 'w') as zip_file:\n        for file in glob.glob(f\"{directory}/*\"):\n            if os.path.isfile(file):\n                zip_file.write(file, os.path.basename(file))\n\n    return f\"{directory}/files.zip\"", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " '", "{", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "    ", "if", " not", " any", "(", "os", ".", "path", ".", "is", "file", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " file", "))", " for", " file", " in", " os", ".", "list", "dir", "(", "directory", "))", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "f", "\"", "{", "directory", "}/", "files", ".", "zip", "\"", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "        ", "for", " file", " in", " glob", ".", "glob", "(", "f", "\"", "{", "directory", "}", "/*", "\"", "):", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "                ", "zip", "_", "file", ".", "write", "(", "file", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "\n", "    ", "return", " f", "\"", "{", "directory", "}/", "files", ".", "zip", "\"", "\n", "\n", "if"], "logprobs": [-0.4745236039161682, -0.0755167230963707, -0.016357962042093277, -3.242440288886428e-05, -0.0011792379664257169, -2.5510462364763953e-05, -0.4496077597141266, -0.00038914260221645236, -0.0010921949287876487, -0.014048730954527855, -0.006929650902748108, -0.008318774402141571, -0.009232919663190842, -0.0017828536219894886, -0.00016830935783218592, -2.8609820219571702e-05, -0.08112692087888718, -0.3290020525455475, -0.09696367383003235, -0.2933553159236908, -0.4777083396911621, -0.00018046658078674227, -0.0009005781612358987, -0.0013936578761786222, -0.28840041160583496, -0.0003159739135298878, -0.0028904585633426905, -0.5990384221076965, -0.0037481787148863077, -0.00037555795279331505, -0.0013875867007300258, -1.5160346031188965, -2.0823397636413574, -0.14954207837581635, -1.186643362045288, -0.02023540809750557, -0.11860539764165878, -2.622600959512056e-06, -0.014056606218218803, -4.6491513785440475e-06, -0.02314946986734867, -0.0010250320192426443, -0.00033861625706776977, -0.1379614919424057, -2.312633478140924e-05, -0.00013779645087197423, -5.125986263010418e-06, -0.0001380348257953301, -9.142934868577868e-05, -0.000739658426027745, -0.0004303721070755273, -0.7859163880348206, -0.04798109829425812, -0.018571073189377785, -0.0020543676801025867, -0.00011836781777674332, -0.004446262959390879, -1.2397689715726301e-05, -4.053033626405522e-05, -3.576278118089249e-07, -8.785339014139026e-05, -0.00020561488054227084, -0.00442715547978878, -0.0004999579978175461, -0.003837484633550048, -0.002681709360331297, -0.08511083573102951, -0.023242652416229248, -0.029321717098355293, -1.5438511371612549, -0.0006478118011727929, -2.197934150695801, -0.0032646951731294394, -1.5020257706055418e-05, -1.1205610462639015e-05, -4.5536911784438416e-05, -1.1920928244535389e-07, -6.6756979322235566e-06, -0.5637733936309814, -1.5210907459259033, -1.065852165222168, -0.11725710332393646, -0.023204680532217026, -0.11077509820461273, -0.00607264181599021, -0.0009994279826059937, -2.3483953555114567e-05, -0.0002300474588992074, -0.0007150000892579556, -1.4178459644317627, -0.005312018096446991, -0.16773870587348938, -5.817244164063595e-05, -0.13975021243095398, -0.9979101419448853, -0.12261051684617996, -0.0005850272136740386, -0.003260892815887928, -0.0028923603240400553, -0.09880666434764862, -0.07175067067146301, -0.05480556935071945, -0.09089122712612152, -2.0265373677830212e-05, -0.4009281396865845, -0.0008068405441008508, -0.10904213786125183, -0.13168086111545563, -0.00018094333063345402, -0.0006793813081458211, -0.04447612166404724, -0.005635564215481281, -0.045784711837768555, -0.045545320957899094, -0.003401567228138447, -0.001998928841203451, -0.35151049494743347, -0.011922763660550117, -6.198863957251888e-06, -1.764281842042692e-05, -4.768370445162873e-07, -0.0007699147681705654, -0.0014013956533744931, -8.797258487902582e-05, -0.0009022455778904259, -0.02335946448147297, -0.0012244831304997206, -0.0007514513563364744, -0.012376531027257442, -0.0008369756978936493, -0.001213648240081966, -4.23184028477408e-05, -4.0531076592742465e-06, -0.00010895135346800089, -0.00431273877620697, -0.0406588651239872, -0.5452845096588135, -1.0728830375228426e-06, -7.867782187531702e-06, -1.0728830375228426e-06, -0.005839312914758921, -4.768370445162873e-07, -2.95634672511369e-05, -0.0007930232677608728, -0.030096691101789474, -0.0037941390182822943, -0.4053914248943329, -0.007291846442967653, -0.02925167605280876, -0.12601570785045624, -0.005491172894835472, -0.0013044904917478561, -0.001278179232031107, -0.002204251941293478, -0.00021860594279132783, -0.00017414960893802345, -2.1815061700181104e-05, -3.576214658096433e-05, -0.6302057504653931, -0.019845498725771904, -0.478626549243927], "finish_reason": "stop"}], "metrics": {"energy": 532.5023147964479, "energy_per_token": 3.307467793766757, "time": 13.252033, "time_per_token": 0.08231076397515528}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise FileNotFoundError(f\"Directory '{directory}' does not exist.\")\n\n    zip_path = os.path.join(directory, 'files.zip')\n    zip_ref = zipfile.ZipFile(zip_path, 'w', zipfile.ZIP_DEFLATED)\n\n    for file in glob.glob(os.path.join(directory, '*')):\n        if os.path.isfile(file):\n            zip_ref.write(file, os.path.basename(file))\n\n    zip_ref.close()\n\n    if os.path.exists(zip_path):\n        return zip_path\n    else:\n        return None", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " '", "{", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "zip", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", "\n", "    ", "zip", "_", "ref", " =", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "path", ",", " '", "w", "'", ",", " zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", "\n", "\n", "    ", "for", " file", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "*", "'))", ":", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "            ", "zip", "_", "ref", ".", "write", "(", "file", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "\n", "    ", "zip", "_", "ref", ".", "close", "()", "\n", "\n", "    ", "if", " os", ".", "path", ".", "exists", "(", "zip", "_", "path", "):", "\n", "        ", "return", " zip", "_", "path", "\n", "    ", "else", ":", "\n", "        ", "return", " None"], "logprobs": [-0.4745236039161682, -0.0755167230963707, -0.016357962042093277, -3.242440288886428e-05, -0.0011792379664257169, -2.5510462364763953e-05, -0.4496077597141266, -0.00038914260221645236, -0.0010921949287876487, -0.014048730954527855, -0.006929650902748108, -0.008318774402141571, -0.009232919663190842, -0.0017828536219894886, -0.00016830935783218592, -2.8609820219571702e-05, -0.08112692087888718, -0.3290020525455475, -0.09696367383003235, -0.2933553159236908, -0.4777083396911621, -0.00018046658078674227, -0.0009005781612358987, -0.0013936578761786222, -0.28840041160583496, -0.0003159739135298878, -0.0028904585633426905, -0.5990384221076965, -0.0037481787148863077, -0.00037555795279331505, -0.0013875867007300258, -0.2502036690711975, -0.0006344689172692597, -1.4113401174545288, -0.06978337466716766, -0.5994852781295776, -0.0010386077919974923, -0.049340374767780304, -6.9141146923357155e-06, -0.0005266471416689456, -3.6954811548639555e-06, -0.030000561848282814, -0.007755644153803587, -0.027351779863238335, -0.0008223251206800342, -0.18616178631782532, -0.007713414262980223, -0.002522622002288699, -1.2636104656849056e-05, -4.851700214203447e-05, -0.017620686441659927, -0.2617538869380951, -1.5325953960418701, -0.09255560487508774, -3.9463062286376953, -0.0016363576287403703, -0.027114197611808777, -3.8980677345534787e-05, -1.4066597032069694e-05, -5.900685573578812e-05, -2.9802276912960224e-06, -1.6689286894688848e-06, -0.00011538793478393927, -0.0006697318749502301, -1.6569954823353328e-05, -2.002696055569686e-05, -0.0021454906091094017, -0.04676628112792969, -0.0044413972645998, -1.420849323272705, -0.00018344627460464835, -0.004156166221946478, -0.0001110968878492713, -6.556489552167477e-06, -0.00016223068814724684, -0.000900101731531322, -7.152555099310121e-07, -0.023078298196196556, -1.1920922133867862e-06, -3.528532761265524e-05, -0.009680470451712608, -0.0035388958640396595, -0.4440673887729645, -0.00014745102089364082, -1.2304482460021973, -0.08214503526687622, -0.14624306559562683, -0.03522135689854622, -1.3351351299206726e-05, -0.19515904784202576, -0.0008469808381050825, -0.05580268055200577, -3.814689989667386e-06, -4.768360213347478e-06, -3.099436753473128e-06, -0.00012087091454304755, -5.447716102935374e-05, -0.00026294111739844084, -0.00030429501202888787, -0.08065316826105118, -0.0035371140111237764, -0.039645612239837646, -3.58813522325363e-05, -0.005069734528660774, -0.003579520620405674, -0.14584586024284363, -0.04680666700005531, -4.768360213347478e-06, -2.038458114839159e-05, -8.344646857949556e-07, -0.0009707267745397985, -0.0015288818394765258, -5.328513361746445e-05, -0.00014661667228210717, -0.028347430750727654, -0.002146323211491108, -0.0008487674640491605, -0.02523103728890419, -0.0023243811447173357, -0.005509430542588234, -7.748573807475623e-06, -7.152531907195225e-06, -5.340433563105762e-05, -0.0026895562186837196, -0.00807579979300499, -0.4103524088859558, -7.271740287251305e-06, -2.7418097943154862e-06, -3.576278118089249e-07, -0.002863119123503566, -8.344646857949556e-07, -1.8954096958623268e-05, -0.0003270567976869643, -0.041916899383068085, -0.0020828000269830227, -0.08474574983119965, -0.0014885308919474483, -0.02013014629483223, -5.209310256759636e-05, -9.333651541965082e-05, -1.585470999998506e-05, -0.00034231049357913435, -0.00011121608258690685, -0.0017492959741503, -0.09313139319419861, -0.0016283836448565125, -0.46152639389038086, -0.3038584887981415, -5.722029527532868e-06, -0.012157151475548744, -4.172316494077677e-06, -0.2851302921772003, -0.00022373080719262362, -0.001260677701793611, -1.5497195136049413e-06, -0.0031566813122481108, -0.014502943493425846, -0.003684638300910592, -0.001334610627964139, -0.029838239774107933, -0.01438003871589899, -1.3232143828645349e-05, -0.0004297763225622475, -0.040077585726976395, -0.2774238586425781, -0.04031176120042801, -5.364274329622276e-05, -0.0004993622424080968, -0.0005109196645207703, -0.057776376605033875, -0.003287270897999406], "finish_reason": "stop"}], "metrics": {"energy": 566.4029973583224, "energy_per_token": 3.312298230165628, "time": 14.302078, "time_per_token": 0.08363788304093567}}
{"outputs": [{"text": "if not os.path.isdir(directory):\n        raise FileNotFoundError\n\n    file_list = glob.glob(os.path.join(directory, \"*\"))\n    if not file_list:\n        return None\n\n    zip_name = 'files.zip'\n    with zipfile.ZipFile(zip_name, 'w') as myzip:\n        for file in file_list:\n            myzip.write(file)\n\n    return os.path.abspath(zip_name)", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "\n", "\n", "    ", "file", "_", "list", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " \"", "*", "\"", "))", "\n", "    ", "if", " not", " file", "_", "list", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "zip", "_", "name", " =", " '", "files", ".", "zip", "'", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "name", ",", " '", "w", "')", " as", " my", "zip", ":", "\n", "        ", "for", " file", " in", " file", "_", "list", ":", "\n", "            ", "my", "zip", ".", "write", "(", "file", ")", "\n", "\n", "    ", "return", " os", ".", "path", ".", "ab", "sp", "ath", "(", "zip", "_", "name", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-0.4745236039161682, -0.0755167230963707, -0.016357962042093277, -3.242440288886428e-05, -0.0011792379664257169, -2.5510462364763953e-05, -1.0163153409957886, -0.0017677409341558814, -0.001073142047971487, -0.0019792981911450624, -0.0029235025867819786, -0.012098971754312515, -0.009320556186139584, -0.011804135516285896, -0.004146075341850519, -0.00020597243565134704, -2.932505594799295e-05, -2.917609930038452, -0.8312187790870667, -0.001110532903112471, -2.6484410762786865, -0.13887180387973785, -0.8159679770469666, -0.004032576456665993, -0.11799271404743195, -9.095255518332124e-05, -0.04347654804587364, -0.016860125586390495, -0.6317926645278931, -1.2636104656849056e-05, -0.0002554328821133822, -4.0531076592742465e-06, -0.008307070471346378, -0.00043335105874575675, -0.0030646997038275003, -0.0019407500512897968, -1.073188304901123, -0.0038402159698307514, -0.06905336678028107, -0.012934241443872452, -0.03373117744922638, -0.3657228350639343, -0.26174670457839966, -0.18107637763023376, -0.03825163096189499, -5.006777428206988e-06, -1.9073468138230965e-06, -0.02220727503299713, -0.018039211630821228, -0.0010602811817079782, -0.020426977425813675, -0.03654647246003151, -0.011470205150544643, -0.07017696648836136, -0.0003233625029679388, -0.3776896595954895, -0.1089949980378151, -1.1693379878997803, -0.002356135519221425, -1.289348840713501, -0.01697862334549427, -0.0028909340035170317, -0.00011300401820335537, -6.985420623095706e-05, -0.007578550837934017, -0.03878191113471985, -0.27620187401771545, -0.001823549740947783, -1.4781842764932662e-05, -5.722029527532868e-06, -3.2543604902457446e-05, -7.152555099310121e-07, -5.364403477869928e-06, -0.0006997520686127245, -0.0010604002745822072, -7.402622577501461e-05, -2.1457441107486375e-05, -0.002107305685058236, -0.10960797965526581, -0.0014080620603635907, -0.15559472143650055, -4.482168878894299e-05, -2.196890354156494, -0.0069026583805680275, -0.0004403813509270549, -0.0022763311862945557, -0.007620904594659805, -0.021729720756411552, -0.8031544089317322, -0.18145963549613953, -0.029288606718182564, -1.645074735279195e-05, -1.0251946150674485e-05, -0.0002008474839385599, -0.001019792165607214, -0.004042430780827999, -0.3290785849094391, -3.015949550899677e-05, -1.3112935448589269e-05, -8.106198947643861e-06, -9.536288416711614e-05, -0.008324094116687775, -0.20610128343105316, -0.0018887552432715893, -0.31908971071243286, -0.004785868804901838, -0.021693909540772438, -1.4070731401443481, -0.00028975578607060015, -0.017747176811099052, -6.913899414939806e-05, -0.40485185384750366, -3.075552376685664e-05, -1.0371154530730564e-05, -0.005949170328676701, -0.007928093895316124, -0.00015841660206206143, -3.909988299710676e-05, -1.6116600036621094, -7.748573807475623e-06, -1.311301275563892e-06, -1.5497195136049413e-06, -1.2755313036905136e-05, -0.17703162133693695], "finish_reason": "stop"}], "metrics": {"energy": 409.4115706586837, "energy_per_token": 3.3017062149893843, "time": 10.313514, "time_per_token": 0.0831735}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise FileNotFoundError(f\"Directory '{directory}' not found.\")\n\n    # Create a zip file with the specified name and file mode\n    zip_path = os.path.join(directory, 'files.zip')\n    with zipfile.ZipFile(zip_path, 'w') as zipf:\n        for file in glob.glob(os.path.join(directory, '*')):\n            # Check if the file is a regular file and add it to the zip\n            if os.path.isfile(file):\n                zipf.write(file, arcname=os.path.basename(file))\n\n    # Return the path to the generated zip file if it contains any files\n    return zip_path if os.path.getsize(zip_path) > 0 else None", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " '", "{", "directory", "}'", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "#", " Create", " a", " zip", " file", " with", " the", " specified", " name", " and", " file", " mode", "\n", "    ", "zip", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "path", ",", " '", "w", "')", " as", " zip", "f", ":", "\n", "        ", "for", " file", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "*", "'))", ":", "\n", "            ", "#", " Check", " if", " the", " file", " is", " a", " regular", " file", " and", " add", " it", " to", " the", " zip", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "                ", "zip", "f", ".", "write", "(", "file", ",", " arc", "name", "=", "os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "\n", "    ", "#", " Return", " the", " path", " to", " the", " generated", " zip", " file", " if", " it", " contains", " any", " files", "\n", "    ", "return", " zip", "_", "path", " if", " os", ".", "path", ".", "get", "size", "(", "zip", "_", "path", ")", " >", " ", "0", " else", " None", "\n", "\n", "if"], "logprobs": [-0.4745236039161682, -0.0755167230963707, -0.016357962042093277, -3.242440288886428e-05, -0.0011792379664257169, -2.5510462364763953e-05, -0.4496077597141266, -0.00038914260221645236, -0.0010921949287876487, -0.014048730954527855, -0.006929650902748108, -0.008318774402141571, -0.009232919663190842, -0.0017828536219894886, -0.00016830935783218592, -2.8609820219571702e-05, -0.08112692087888718, -0.3290020525455475, -0.09696367383003235, -0.2933553159236908, -0.4777083396911621, -0.00018046658078674227, -0.0009005781612358987, -0.0013936578761786222, -1.4187676906585693, -0.000856628583278507, -0.3162175416946411, -0.007291846442967653, -0.00033087024348787963, -0.001788327470421791, -0.2665199339389801, -0.00048828122089616954, -1.6973904371261597, -2.0064730644226074, -0.7757396101951599, -0.7313274145126343, -0.07604993134737015, -1.247564673423767, -0.5019505620002747, -1.6835565567016602, -0.3608627915382385, -2.3520705699920654, -3.021712303161621, -1.6147658824920654, -0.32713863253593445, -0.0010681406129151583, -0.5983499884605408, -0.11987215280532837, -1.0553836822509766, -0.001023364719003439, -0.12356852740049362, -3.814689989667386e-06, -0.0003922408213838935, -7.271740287251305e-06, -0.04540703445672989, -0.009737138636410236, -0.02498655766248703, -0.0007758706342428923, -0.14920757710933685, -0.009754491969943047, -0.002286321949213743, -1.7404405298293568e-05, -6.09140915912576e-05, -0.014563215896487236, -0.08515944331884384, -0.3790523111820221, -0.0008224442135542631, -1.4543427823809907e-05, -8.4638240878121e-06, -2.7179348762729205e-05, -1.1920928244535389e-07, -1.311301275563892e-06, -0.00022218143567442894, -0.00040451448876410723, -1.3589766240329482e-05, -1.6569954823353328e-05, -0.00035124807618558407, -0.263852596282959, -0.005166394170373678, -0.16984009742736816, -0.0016800350276753306, -0.06531331688165665, -0.858271598815918, -0.0006018257699906826, -0.002562574576586485, -0.03774414211511612, -2.4275336265563965, -0.09913080930709839, -0.2574862241744995, -0.045889243483543396, -8.583032467868179e-06, -0.34195205569267273, -0.0006291079334914684, -0.039675746113061905, -2.145764938177308e-06, -4.6491513785440475e-06, -1.1920922133867862e-06, -9.238292841473594e-05, -7.045020902296528e-05, -0.0003081085451412946, -0.00018046658078674227, -0.06668327003717422, -0.002904841210693121, -0.022774331271648407, -4.9828242481453344e-05, -0.010426690801978111, -0.003825371852144599, -1.2325822114944458, -0.837795078754425, -0.012521108612418175, -0.28203317523002625, -0.6277002692222595, -0.23313942551612854, -0.7874342203140259, -0.058134566992521286, -0.0007388246012851596, -1.422058343887329, -2.325106382369995, -0.0073847416788339615, -0.004162457771599293, -0.0071766916662454605, -0.019413700327277184, -2.5006814002990723, -0.0002637753786984831, -0.008659431710839272, -0.024549992755055428, -1.5497195136049413e-06, -2.1219027985353023e-05, -7.152555099310121e-07, -0.00020692592079285532, -5.8887653722194955e-05, -3.6238969187252223e-05, -6.305972783593461e-05, -0.027265824377536774, -0.0003381395654287189, -0.0005332001601345837, -0.04701891914010048, -0.0009450022480450571, -3.4570634852570947e-06, -4.529942543740617e-06, -4.7801782784517854e-05, -0.001427346607670188, -0.03787201642990112, -1.2541128396987915, -3.576278118089249e-07, -0.0023636280093342066, -0.0025345126632601023, -1.0728830375228426e-06, -0.00012516192509792745, -4.768370445162873e-07, -0.0014785320963710546, 0.0, -3.802703940891661e-05, -0.0004599228559527546, -0.0046355403028428555, -0.0063074566423892975, -0.2910495698451996, -0.029391173273324966, -0.34068843722343445, -0.9527696371078491, -0.04815958812832832, -0.12635186314582825, -0.09218713641166687, -0.0009365463047288358, -0.5234029293060303, -0.0025957482866942883, -0.003070879727602005, -1.8986451625823975, -0.7166734933853149, -0.5887135863304138, -0.6657788157463074, -0.06655167043209076, -0.4205254316329956, -0.000513064325787127, -1.3565306663513184, -0.026758763939142227, -0.00033909291960299015, -1.2636104656849056e-05, -0.01673235185444355, -0.13306716084480286, -1.4543427823809907e-05, -0.0571746788918972, -2.50339189733495e-06, -1.2090173959732056, -6.6756979322235566e-06, -0.0003511289251036942, -0.00038556772051379085, -0.000448841426987201, -3.075552376685664e-05, -0.001745368936099112, -0.016667168587446213, -0.00011145447206217796, -0.002731047570705414, -0.00016485285595990717, -0.0005659647285938263, -0.6225267648696899, -0.015213875100016594, -0.5337418913841248], "finish_reason": "stop"}], "metrics": {"energy": 676.0059893417358, "energy_per_token": 3.4141716633421, "time": 16.401731, "time_per_token": 0.08283702525252526}}
{"outputs": [{"text": "if not os.path.isdir(directory):\n        raise FileNotFoundError(f\"The directory '{directory}' does not exist\")\n    zip_path = os.path.join(directory, 'files.zip')\n    with zipfile.ZipFile(zip_path, 'w') as zf:\n        files = glob.glob(os.path.join(directory, '*'))\n        if not files:\n            return None\n        for file in files:\n            zf.write(file, os.path.basename(file))\n    return zip_path", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " directory", " '", "{", "directory", "}'", " does", " not", " exist", "\"", ")", "\n", "    ", "zip", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "path", ",", " '", "w", "')", " as", " z", "f", ":", "\n", "        ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "*", "'))", "\n", "        ", "if", " not", " files", ":", "\n", "            ", "return", " None", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "z", "f", ".", "write", "(", "file", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "    ", "return", " zip", "_", "path", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.4745236039161682, -0.0755167230963707, -0.016357962042093277, -3.242440288886428e-05, -0.0011792379664257169, -2.5510462364763953e-05, -1.0163153409957886, -0.0017677409341558814, -0.001073142047971487, -0.0019792981911450624, -0.0029235025867819786, -0.012098971754312515, -0.009320556186139584, -0.011804135516285896, -0.004146075341850519, -0.00020597243565134704, -2.932505594799295e-05, -0.1692999005317688, -0.33665764331817627, -0.13827484846115112, -1.5284819602966309, -0.4222995340824127, -0.597916841506958, -0.00033825874561443925, -0.0013959197094663978, -0.0023475727066397667, -0.02310613915324211, -0.0003325386205688119, -0.0034432667307555676, -1.1729934215545654, -0.0005843124235980213, -0.0028386320918798447, -1.1825941801071167, -2.1205034255981445, -0.10909835994243622, -0.5822585821151733, -0.002476959954947233, -0.04170699417591095, -6.556489552167477e-06, -0.0005703729693777859, -5.722029527532868e-06, -0.03951166570186615, -0.004585228394716978, -0.026659874245524406, -0.0010514690075069666, -0.26026779413223267, -0.008718520402908325, -0.0032504366245120764, -1.680836794548668e-05, -8.451581379631534e-05, -0.019908839836716652, -0.014828463084995747, -0.5712313652038574, -0.0015355474315583706, -2.95634672511369e-05, -9.775113539944869e-06, -5.340433563105762e-05, -1.1920928244535389e-07, -1.0847986231965479e-05, -0.00022504181833937764, -0.0008405489497818053, -1.9311717551317997e-05, -1.728519782773219e-05, -0.002872271928936243, -0.06512580811977386, -0.004640049301087856, -0.4152803122997284, -0.0001656871900195256, -2.338042974472046, -0.7958808541297913, -0.0008846183773130178, -0.005654648877680302, -0.0027986904606223106, -1.385311484336853, -0.04273175448179245, -0.08457750827074051, -2.5987286790041253e-05, -0.15899984538555145, -0.000732868502382189, -0.09251702576875687, -2.9802276912960224e-06, -2.9205850296420977e-05, -1.2040065485052764e-05, -0.0003847335756290704, -0.00015925093612167984, -0.0005312938592396677, -0.00031287543242797256, -0.048435039818286896, -0.00965756643563509, -0.03144524618983269, -0.008561454713344574, -0.002791438950225711, -0.5756101608276367, -0.09516508132219315, -0.03724455088376999, -0.00258516613394022, -0.02271408587694168, -0.0012678211787715554, -0.03342132642865181, -0.03644360229372978, -0.017642004415392876, -0.007071230560541153, -0.01643899641931057, -0.09157414734363556, -0.10029888898134232, -0.013341439887881279, -0.00011514954530866817, -0.0006313714548014104, -0.0009517907164990902, -1.0994170904159546, -2.038458114839159e-05, -7.748573807475623e-06, -8.821448318485636e-06, -0.00013815402053296566, -0.00240525184199214, -0.0682608038187027, -0.5783534049987793, -3.3378546504536644e-06, -2.9682672902708873e-05, -1.0728830375228426e-06, -0.004824782256036997, -3.9457496313843876e-05, -6.985420623095706e-05, -0.00018857131362892687, -0.03002358227968216, -0.005324350204318762, -0.03953607380390167, -0.004623674787580967, -0.008519376628100872, -0.000102037942269817, -4.4225667807040736e-05, -1.0164546966552734, -4.291525328881107e-06, -9.536738616588991e-07, -1.6689286894688848e-06, -6.318072337307967e-06, -0.1764029562473297], "finish_reason": "stop"}], "metrics": {"energy": 495.6185943679811, "energy_per_token": 3.617653973488913, "time": 11.360801, "time_per_token": 0.08292555474452555}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise FileNotFoundError('Specified directory does not exist')\n\n    zip_path = os.path.join(directory, 'files.zip')\n    zip = zipfile.ZipFile(zip_path, 'w')\n\n    file_paths = glob.glob(os.path.join(directory, \"*\"))\n\n    if len(file_paths) == 0:\n        return None\n\n    for file_path in file_paths:\n        if os.path.isfile(file_path):\n            zip.write(file_path, os.path.basename(file_path))\n\n    zip.close()\n\n    return zip_path", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "Spec", "ified", " directory", " does", " not", " exist", "')", "\n", "\n", "    ", "zip", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", "\n", "    ", "zip", " =", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "path", ",", " '", "w", "')", "\n", "\n", "    ", "file", "_", "paths", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " \"", "*", "\"", "))", "\n", "\n", "    ", "if", " len", "(", "file", "_", "paths", ")", " ==", " ", "0", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "for", " file", "_", "path", " in", " file", "_", "paths", ":", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "            ", "zip", ".", "write", "(", "file", "_", "path", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", "))", "\n", "\n", "    ", "zip", ".", "close", "()", "\n", "\n", "    ", "return", " zip", "_", "path", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.4745236039161682, -0.0755167230963707, -0.016357962042093277, -3.242440288886428e-05, -0.0011792379664257169, -2.5510462364763953e-05, -0.4496077597141266, -0.00038914260221645236, -0.0010921949287876487, -0.014048730954527855, -0.006929650902748108, -0.008318774402141571, -0.009232919663190842, -0.0017828536219894886, -0.00016830935783218592, -2.8609820219571702e-05, -3.0552518367767334, -2.445819854736328, -0.007086736615747213, -0.02297310158610344, -0.08538253605365753, -0.0013634203933179379, -0.02276221103966236, -0.22011353075504303, -0.002414646791294217, -0.3992666006088257, -0.0008167268824763596, -1.2822415828704834, -0.11991392076015472, -0.7466862201690674, -0.0036253698635846376, -0.10036531835794449, -1.4066597032069694e-05, -0.0019890540279448032, -5.8412379075889476e-06, -0.04377337545156479, -0.006084016524255276, -0.03366709500551224, -0.0014980534324422479, -0.04342598468065262, -0.0118715213611722, -0.003371984465047717, -1.4305012882687151e-05, -0.00011538793478393927, -0.016805149614810944, -0.31271612644195557, -1.2091983556747437, -2.5423786640167236, -0.005587080493569374, -4.851700214203447e-05, -4.51792984677013e-05, -0.0003106111544184387, -1.1920928244535389e-07, -2.50339189733495e-06, -0.0006475735572166741, -0.0015328098088502884, -4.8993817472364753e-05, -2.47952248173533e-05, -0.0026336766313761473, -0.09114242345094681, -0.016990577802062035, -0.3767712116241455, -0.008146273903548717, -0.49368754029273987, -0.0002361257211305201, -3.1677207946777344, -0.11193840205669403, -1.195736289024353, -0.004959068261086941, -0.0701066181063652, -5.3165931603871286e-05, -0.1563374400138855, -0.009779282845556736, -0.11438515782356262, -4.0531076592742465e-06, -2.932505594799295e-05, -7.986990567587782e-06, -0.0007135705673135817, -0.00024625606602057815, -0.0011680454481393099, -0.0010157431242987514, -2.956242799758911, -0.027980495244264603, -0.1507173627614975, -0.02599606290459633, -0.02265966311097145, -1.346558928489685, -0.00024125049822032452, -0.6903660893440247, -1.4222357273101807, -0.0009409529156982899, -0.0013050857232883573, -3.814689989667386e-06, -3.218599158572033e-05, -0.012805494479835033, -0.18065236508846283, -0.00041762212640605867, -0.013879919424653053, -0.002160359639674425, -0.02444937266409397, -0.006437517236918211, -0.2660735547542572, -0.08076280355453491, -0.006374739576131105, -0.04240456596016884, -0.00023529145983047783, -0.04685228317975998, -0.09296184033155441, -0.29162681102752686, -0.009372166357934475, -0.0003077510336879641, -0.0069843437522649765, -2.0265558760002023e-06, -1.811964830267243e-05, -0.00034517052699811757, -0.0009058186551555991, -0.009896262548863888, -0.31536129117012024, -0.08861395716667175, -5.364403477869928e-06, -0.00012683063687290996, -2.0265558760002023e-06, -0.00420875521376729, -0.029335029423236847, -0.00023707917716819793, -0.00018308870494365692, -1.4662635294371285e-05, -6.318072337307967e-06, -0.025867361575365067, -0.0021766559220850468, -0.0025758917909115553, -0.16676642000675201, -0.004927278030663729, -1.2040065485052764e-05, -0.00019572250312194228, -0.006087216082960367, -6.651657167822123e-05, -1.2278481335670222e-05, -0.04677390307188034, -0.08940189331769943, -5.960446742392378e-06, -0.00013422065239865333, -1.1920922133867862e-06, -0.0011300613405182958, -1.1920928244535389e-07, -7.819823804311454e-05, -0.0007329876534640789, -7.867782187531702e-06, -2.3841574147809297e-05, -0.04100722074508667, -0.0021167034283280373, -0.10228363424539566, -0.0021159895695745945, -0.05396853759884834, -0.00047994061606004834, -0.0009802542626857758, -0.00042965717148035765, -0.0021935468539595604, -0.4492138624191284, -0.0016511153662577271, -0.013489876873791218, -0.008984732441604137, -0.004865828901529312, -3.0517112463712692e-05, -1.0848450660705566, -3.814689989667386e-06, -1.4305104514278355e-06, -1.5497195136049413e-06, -1.764281842042692e-05, -0.14357112348079681], "finish_reason": "stop"}], "metrics": {"energy": 570.0374792556757, "energy_per_token": 3.3531616426804454, "time": 14.093807, "time_per_token": 0.08290474705882353}}
{"outputs": [{"text": "if os.path.exists(directory):\n        with zipfile.ZipFile('files.zip', 'w') as zf:\n            for file in glob.glob(directory + '/*'):\n                zf.write(file)\n            if zf.namelist():\n                return os.getcwd() + '/files.zip'\n    else:\n        raise FileNotFoundError('The directory does not exist!')", "tokens": ["if", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "with", " zip", "file", ".", "Z", "ip", "File", "('", "files", ".", "zip", "'", ",", " '", "w", "')", " as", " z", "f", ":", "\n", "            ", "for", " file", " in", " glob", ".", "glob", "(", "directory", " +", " '", "/*", "')", ":", "\n", "                ", "z", "f", ".", "write", "(", "file", ")", "\n", "            ", "if", " z", "f", ".", "nam", "elist", "():", "\n", "                ", "return", " os", ".", "get", "c", "wd", "()", " +", " '/", "files", ".", "zip", "'", "\n", "    ", "else", ":", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "The", " directory", " does", " not", " exist", "!", "')"], "logprobs": [-0.4745236039161682, -2.7503061294555664, -0.0005134217790327966, -0.010038956999778748, -6.031808152329177e-05, -0.6021939516067505, -0.0010009760735556483, -0.006099775433540344, -0.1520104557275772, -0.014910443685948849, -0.032689765095710754, -1.8095228672027588, -0.008056524209678173, -0.0001012035645544529, -1.7046782886609435e-05, -9.107174992095679e-05, -1.311301275563892e-06, -6.16293036728166e-05, -0.6983556747436523, -0.015081780962646008, -0.0018856617389246821, -3.755022044060752e-05, -0.0005579821881838143, -0.0002828436263371259, -0.07581358402967453, -0.003359984839335084, -0.2091139405965805, -0.0004941195948049426, -1.7540907859802246, -1.0805773735046387, -0.001192097319290042, -0.008193451911211014, -0.006326884031295776, -0.14067868888378143, -0.12074890732765198, -0.05843134969472885, -0.023812612518668175, -5.1377883210079744e-05, -0.22369366884231567, -0.003538064192980528, -2.262094736099243, -0.12000834196805954, -0.27215030789375305, -0.16508232057094574, -0.032651230692863464, -0.00032276666024699807, -0.007786043919622898, -0.002099573379382491, -0.37336695194244385, -0.00010144196130568162, -2.992108420585282e-05, -1.3708974620385561e-05, -0.000546425289940089, -0.011305438354611397, -0.37169545888900757, -0.004376120399683714, -1.7434571981430054, -1.0024794340133667, -0.3540683686733246, -2.52720492426306e-05, -0.0026242840103805065, -0.03487731143832207, -4.0531076592742465e-06, -0.05689498037099838, -0.07043319940567017, -0.0017855905462056398, -0.06498394161462784, -0.5053423047065735, -0.00035315475543029606, -2.5686120986938477, -0.0005749003030359745, -3.576278118089249e-07, -0.00027926836628466845, -0.08207926154136658, -0.187546968460083, -0.07051707804203033, -0.00018416139937471598, -6.472854875028133e-05, -0.01616983488202095, -0.020526250824332237, -0.7686491012573242, -0.48803406953811646, -0.0001646144810365513, -0.0030050380155444145, -0.003969884943217039, -0.022224880754947662, -0.003301647724583745, -0.000286657246761024, -4.732496745418757e-05, -1.5372562408447266, -1.2680747509002686, -1.4665100574493408, -0.1589312106370926, -0.0015733970794826746, -0.029565833508968353, -2.878448963165283, -0.0227523073554039], "finish_reason": "stop"}], "metrics": {"energy": 319.9482517814637, "energy_per_token": 3.2984355853759144, "time": 7.997528, "time_per_token": 0.08244874226804123}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise FileNotFoundError(\"The specified directory does not exist\")\n    path = os.path.join(directory, \"*\")\n    file_list = glob.glob(path)\n    if not file_list:\n        return None\n    zip_name = os.path.join(directory, \"files.zip\")\n    with zipfile.ZipFile(zip_name, \"w\") as zip_obj:\n        for file in file_list:\n            zip_obj.write(file, os.path.basename(file))\n    return zip_name", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "The", " specified", " directory", " does", " not", " exist", "\"", ")", "\n", "    ", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " \"", "*", "\"", ")", "\n", "    ", "file", "_", "list", " =", " glob", ".", "glob", "(", "path", ")", "\n", "    ", "if", " not", " file", "_", "list", ":", "\n", "        ", "return", " None", "\n", "    ", "zip", "_", "name", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " \"", "files", ".", "zip", "\"", ")", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "name", ",", " \"", "w", "\"", ")", " as", " zip", "_", "obj", ":", "\n", "        ", "for", " file", " in", " file", "_", "list", ":", "\n", "            ", "zip", "_", "obj", ".", "write", "(", "file", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "    ", "return", " zip", "_", "name"], "logprobs": [-0.4745236039161682, -0.0755167230963707, -0.016357962042093277, -3.242440288886428e-05, -0.0011792379664257169, -2.5510462364763953e-05, -0.4496077597141266, -0.00038914260221645236, -0.0010921949287876487, -0.014048730954527855, -0.006929650902748108, -0.008318774402141571, -0.009232919663190842, -0.0017828536219894886, -0.00016830935783218592, -2.8609820219571702e-05, -0.08112692087888718, -1.3278728723526, -1.108968734741211, -0.2590782046318054, -0.003341212635859847, -0.005902123637497425, -0.00026901919045485556, -0.0019064837833866477, -0.8054772019386292, -0.0009124883217737079, -0.0010010951664298773, -1.4293889999389648, -3.759186267852783, -0.32149288058280945, -0.19134975969791412, -1.7881233361549675e-05, -0.022481342777609825, -0.0001546025014249608, -0.3242286741733551, -0.012229223735630512, -0.06293690949678421, -0.005944785661995411, -0.7850802540779114, -1.8743568658828735, -0.6435216069221497, -0.0008802115335129201, -0.021469680592417717, -0.003996481653302908, -1.804013967514038, -0.06404592841863632, -0.4131533205509186, -0.001970613142475486, -0.036813534796237946, -4.327203714638017e-05, -0.005450862925499678, -0.00012718822108581662, -0.0015290009323507547, -0.013376140035688877, -0.02345903031527996, -0.04311797767877579, -0.1578746885061264, -0.2195989489555359, -0.017080115154385567, -5.722029527532868e-06, -1.7881377516459906e-06, -0.013531393371522427, -0.0107614416629076, -0.0014637719141319394, -0.0436314232647419, -0.03282451629638672, -0.010146466083824635, -0.062456801533699036, -0.5618951320648193, -0.12987491488456726, -1.17660391330719, -0.002269432647153735, -1.0451606512069702, -4.529942543740617e-06, -0.0004518203204497695, -1.6689286894688848e-06, -0.04728672653436661, -0.00802613329142332, -0.08622508496046066, -0.001100649475120008, -0.18142016232013702, -0.0052668387070298195, -0.005965879186987877, -1.9550132492440753e-05, -2.5510462364763953e-05, -0.00018106251081917435, -0.0025348695926368237, -0.002991845365613699, -0.19671045243740082, -0.0011448265286162496, -1.7762025890988298e-05, -7.152531907195225e-06, -4.339123915997334e-05, -2.3841855067985307e-07, -4.291525328881107e-06, -9.691245941212401e-05, -0.0010259846458211541, -6.580135959666222e-05, -0.00025233422638848424, -0.002644733991473913, -0.3456520736217499, -0.001096481690183282, -2.3841830625315197e-06, -0.2882820963859558, -6.329813186312094e-05, -0.24633623659610748, -0.28498175740242004, -1.707289218902588, -0.00010573305189609528, -0.001824858714826405, -0.0021815330255776644, -0.009083140641450882, -0.18014654517173767, -0.18744972348213196, -0.0043073976412415504, -7.271740287251305e-06, -4.6491513785440475e-06, -0.00028951745480298996, -0.0003331344632897526, -0.0021002870053052902, -0.2903023064136505, -0.0011603058082982898, -0.0019683525897562504, -9.298280929215252e-06, -1.823885577323381e-05, -3.302042750874534e-05, -0.0035938932560384274, -0.2362133264541626, -0.5956569910049438, -1.2159273865108844e-05, -2.253030106658116e-05, -7.033323527139146e-06, -0.014727095142006874, -8.344646857949556e-07, -4.3987260141875595e-05, -0.0005696581210941076, -0.024373987689614296, -0.003338361158967018, -0.033684615045785904, -0.015110432170331478, -0.04121818765997887, -0.0002273062855238095, -0.002004044596105814], "finish_reason": "stop"}], "metrics": {"energy": 482.23651234054574, "energy_per_token": 3.3722833030807395, "time": 11.783468, "time_per_token": 0.08240187412587412}}
{"outputs": [{"text": "if not os.path.isdir(directory):\n        raise FileNotFoundError(f\"Directory does not exist: {directory}\")\n\n    files = glob.glob(os.path.join(directory, \"*\"))\n\n    if not files:\n        return None\n\n    zipname = \"files.zip\"\n    with zipfile.ZipFile(zipname, \"w\") as zf:\n        for file in files:\n            if os.path.isfile(file):\n                zf.write(file)\n\n    return zipname", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " does", " not", " exist", ":", " {", "directory", "}\"", ")", "\n", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " \"", "*", "\"", "))", "\n", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "zip", "name", " =", " \"", "files", ".", "zip", "\"", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "name", ",", " \"", "w", "\"", ")", " as", " z", "f", ":", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "                ", "z", "f", ".", "write", "(", "file", ")", "\n", "\n", "    ", "return", " zip", "name"], "logprobs": [-0.4745236039161682, -0.0755167230963707, -0.016357962042093277, -3.242440288886428e-05, -0.0011792379664257169, -2.5510462364763953e-05, -1.0163153409957886, -0.0017677409341558814, -0.001073142047971487, -0.0019792981911450624, -0.0029235025867819786, -0.012098971754312515, -0.009320556186139584, -0.011804135516285896, -0.004146075341850519, -0.00020597243565134704, -2.932505594799295e-05, -0.1692999005317688, -0.33665764331817627, -0.13827484846115112, -0.4889826774597168, -3.0967798233032227, -0.002646517474204302, -0.024058077484369278, -0.09556517004966736, -0.045391879975795746, -0.0022192392498254776, -0.009094244800508022, -0.00031716562807559967, -0.0015287628630176187, -0.2598326802253723, -0.0006856950931251049, -1.0753049850463867, -0.06035823002457619, -0.05472826212644577, -3.4689302992774174e-05, -0.05340002849698067, -0.0011788808042183518, -0.1900269240140915, -2.0265558760002023e-06, -7.510157047363464e-06, -1.7881377516459906e-06, -0.0005156855913810432, -8.594620157964528e-05, -0.00030083899036981165, -0.0003010773507412523, -0.4645320475101471, -0.0020600780844688416, -0.022450221702456474, -0.01809845119714737, -0.027766136452555656, -1.3744065761566162, -0.0003297977091278881, -0.08663171529769897, -0.030419256538152695, -0.016406629234552383, -0.00212848000228405, -0.003802214516326785, -0.0006330393371172249, -0.04813232272863388, -0.008097675628960133, -0.04285087808966637, -0.017380312085151672, -0.0004646890447475016, -0.3212239444255829, -2.9528872966766357, -0.001924449927173555, -1.3589954376220703, -0.01687934808433056, -0.005911485757678747, -5.411955135059543e-05, -3.0040289857424796e-05, -0.011386999860405922, -0.19227218627929688, -0.18684300780296326, -0.0013053239090368152, -1.1920858014491387e-05, -3.814689989667386e-06, -1.6331539882230572e-05, -3.576278118089249e-07, -2.3841830625315197e-06, -7.343022298300639e-05, -0.001167569193057716, -0.00041392818093299866, -0.0002760506176855415, -0.10770303010940552, -0.0006118332967162132, -1.311301275563892e-06, -0.25403642654418945, -2.098061486321967e-05, -1.8894602060317993, -0.9842640161514282, -0.0003718638326972723, -0.0006727101281285286, -0.0011849532602354884, -0.02034906856715679, -0.21682307124137878, -0.07838263362646103, -0.005389327649027109, -6.3774932641536e-05, -0.00018451895448379219, -0.0008337597246281803, -1.4737391471862793, -0.038053348660469055, -4.6491513785440475e-06, -4.6967357775429264e-05, -1.311301275563892e-06, -0.003258991753682494, -0.004184063524007797, -3.957670196541585e-05, -0.00013815402053296566, -0.007787699811160564, -0.0020880342926830053, -0.0005297449533827603, -0.045838914811611176, -2.2411095415009186e-05, -1.490105023549404e-05, -1.1324817933200393e-05, -1.9430925021879375e-05, -0.0014013956533744931, -2.4486451148986816, -0.002357324818149209, -0.10078348219394684, -0.0017849955474957824, -0.012233933433890343, -0.23500151932239532, -0.0009557208395563066], "finish_reason": "stop"}], "metrics": {"energy": 427.5579948654171, "energy_per_token": 3.3665983847670637, "time": 10.517953, "time_per_token": 0.08281852755905512}}
{"outputs": [{"text": "if not os.path.isdir(directory):\n        raise FileNotFoundError(f\"The directory '{directory}' does not exist\")\n\n    # Get all files in the specified directory\n    files = glob.glob(os.path.join(directory, \"*\"))\n\n    # Check if there are any files\n    if not files:\n        return None\n\n    # Create the zip file\n    with zipfile.ZipFile(os.path.join(directory, \"files.zip\"), \"w\") as zip_file:\n        for file in files:\n            zip_file.write(file, arcname=os.path.basename(file))\n\n    # Return the path to the created zip file\n    return os.path.join(directory, \"files.zip\")", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "The", " directory", " '", "{", "directory", "}'", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "#", " Get", " all", " files", " in", " the", " specified", " directory", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " \"", "*", "\"", "))", "\n", "\n", "    ", "#", " Check", " if", " there", " are", " any", " files", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "#", " Create", " the", " zip", " file", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " \"", "files", ".", "zip", "\"", ")", ",", " \"", "w", "\"", ")", " as", " zip", "_", "file", ":", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "zip", "_", "file", ".", "write", "(", "file", ",", " arc", "name", "=", "os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "\n", "    ", "#", " Return", " the", " path", " to", " the", " created", " zip", " file", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "directory", ",", " \"", "files", ".", "zip", "\"", ")<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.4745236039161682, -0.0755167230963707, -0.016357962042093277, -3.242440288886428e-05, -0.0011792379664257169, -2.5510462364763953e-05, -1.0163153409957886, -0.0017677409341558814, -0.001073142047971487, -0.0019792981911450624, -0.0029235025867819786, -0.012098971754312515, -0.009320556186139584, -0.011804135516285896, -0.004146075341850519, -0.00020597243565134704, -2.932505594799295e-05, -0.1692999005317688, -0.33665764331817627, -0.13827484846115112, -1.5284819602966309, -0.4222995340824127, -0.597916841506958, -0.00033825874561443925, -0.0013959197094663978, -0.0023475727066397667, -0.02310613915324211, -0.0003325386205688119, -0.0034432667307555676, -1.1729934215545654, -0.0005843124235980213, -0.0028386320918798447, -0.36920538544654846, -0.0006652049487456679, -1.7854325771331787, -1.4402793645858765, -0.8647465109825134, -0.4646638035774231, -0.1295110434293747, -0.045335717499256134, -1.510679006576538, -0.0022782341111451387, -0.5031459331512451, -0.0005189026123844087, -0.2252388596534729, -0.04932482913136482, -0.04851839691400528, -5.531158240046352e-05, -0.030716286972165108, -0.0007895689341239631, -0.11906405538320541, -2.861018856492592e-06, -4.768360213347478e-06, -4.279521817807108e-05, -0.00042226933874189854, -7.188061863416806e-05, -0.000342191313393414, -0.00025328766787424684, -0.6296118497848511, -0.0018897071713581681, -0.04331628605723381, -0.021292665973305702, -0.004785987548530102, -0.2596948742866516, -0.0002522150462027639, -0.27317291498184204, -0.6924906373023987, -0.01420164667069912, -0.4320915937423706, -0.006286489311605692, -0.12703073024749756, -0.014177435077726841, -1.6772656440734863, -7.497983460780233e-05, -0.0012267453130334616, -0.05568474903702736, -0.04159413278102875, -0.0035012392327189445, -0.000710592488758266, -0.000614216027315706, -0.10785640776157379, -0.01360336598008871, -0.005962916649878025, -0.008313336409628391, -0.0007049936102703214, -0.029817182570695877, -0.3351982533931732, -0.6527383923530579, -0.13615217804908752, -0.047143902629613876, -0.38383859395980835, -0.0003797286772169173, -1.2185524702072144, -0.0007414452848024666, -2.002696055569686e-05, -2.861018856492592e-06, -1.3708974620385561e-05, -3.576278118089249e-07, -1.311301275563892e-06, -0.1038251593708992, -1.1690961122512817, -2.1934269170742482e-05, -0.00012885693286079913, -1.3589766240329482e-05, -0.003461561631411314, -0.010260453447699547, -0.020808136090636253, -0.0004151197790633887, -0.36968570947647095, -0.008081002160906792, -0.0015172171406447887, -9.298280929215252e-06, -3.2066785934148356e-05, -0.000788258679676801, -5.090107151772827e-05, -0.10249260812997818, -0.0009725131676532328, -5.960462772236497e-07, -0.1335161030292511, -1.4781842764932662e-05, -0.16194792091846466, -0.38149699568748474, -0.09123644232749939, -0.0001551984460093081, -0.0005158047424629331, -0.00451640086248517, -0.8258355855941772, -0.03837645426392555, -0.08774503320455551, -0.0029025827534496784, -4.827859811484814e-05, -0.0003393312799744308, -0.0012394849909469485, -0.46501004695892334, -0.00027998341829515994, -0.0005378468777053058, -3.6954195820726454e-05, -5.602820692729438e-06, -1.8358061424805783e-05, -0.005357195157557726, -0.09329678863286972, -0.642006516456604, -4.768370445162873e-07, -0.0009415484382770956, -0.003712073899805546, -2.50339189733495e-06, -0.00020883286197204143, -5.960462772236497e-07, -0.001348182326182723, 0.0, -3.5523738915799186e-05, -0.0002673506969586015, -0.0226688701659441, -0.008020338602364063, -0.024635018780827522, -0.0038912780582904816, -0.7294037938117981, -0.05333549901843071, -0.010492753237485886, -0.03882250562310219, -0.018096577376127243, -0.0007938570925034583, -2.0610342025756836, -0.0016958630876615644, -0.0014857931528240442, -0.0034726096782833338, -0.00024327656137757003, -0.012125235982239246, -0.02730422094464302, -6.079655122448457e-06, -1.537788011773955e-05, -5.8412379075889476e-06, -0.004472728352993727, -7.64102369430475e-05, -0.0010415849974378943, -6.997340824455023e-05, -0.001058137626387179, -0.00018249277491122484, -0.00015078838623594493, -1.728519782773219e-05, -2.4199192921514623e-05, -1.1534759998321533, -1.0132738680113107e-05, -1.7881377516459906e-06, -2.9802276912960224e-06, -1.0013530300057027e-05, -1.8449063301086426, -0.001256867777556181], "finish_reason": "stop"}], "metrics": {"energy": 673.8993170413969, "energy_per_token": 3.5845708353265793, "time": 15.544456, "time_per_token": 0.08268327659574468}}
{"outputs": [{"text": "# Check if directory exists\n    if not os.path.isdir(directory):\n        raise FileNotFoundError(f\"Directory '{directory}' does not exist.\")\n\n    # Get all files in the directory\n    files = glob.glob(os.path.join(directory, '*'))\n\n    # Check if directory is not empty\n    if not files:\n        return None\n\n    # Create zip file with files\n    with zipfile.ZipFile(f\"{directory}/files.zip\", \"w\") as zip_file:\n        for file in files:\n            zip_file.write(file, os.path.basename(file))\n\n    return f\"{directory}/files.zip\"", "tokens": ["#", " Check", " if", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " '", "{", "directory", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Get", " all", " files", " in", " the", " directory", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "*", "'))", "\n", "\n", "    ", "#", " Check", " if", " directory", " is", " not", " empty", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "#", " Create", " zip", " file", " with", " files", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "f", "\"", "{", "directory", "}/", "files", ".", "zip", "\"", ",", " \"", "w", "\"", ")", " as", " zip", "_", "file", ":", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "zip", "_", "file", ".", "write", "(", "file", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "\n", "    ", "return", " f", "\"", "{", "directory", "}/", "files", ".", "zip", "\"", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.671107292175293, -0.5433729887008667, -0.10233151912689209, -1.366400957107544, -0.20827312767505646, -0.1033715009689331, -0.00150079105515033, -0.010317088104784489, -0.015430237166583538, -0.004738648887723684, -1.3828182090946939e-05, -0.0002775999018922448, -1.0490362910786644e-05, -1.6145514249801636, -0.00031716562807559967, -0.0003634030872490257, -0.0007937379996292293, -0.0007234578370116651, -0.0009482178138568997, -0.0030753957107663155, -0.008729510940611362, -0.0019150504376739264, -8.749579137656838e-05, -7.748573807475623e-06, -0.04279205948114395, -0.23754765093326569, -0.04949524998664856, -0.11900574713945389, -0.362308144569397, -0.00010847456724150106, -0.0007722970913164318, -0.0009093916742131114, -0.2950826585292816, -0.00017450717859901488, -0.0016383809270337224, -0.579292893409729, -0.003104868344962597, -0.00031132620642893016, -0.00042906138696707785, -0.24805693328380585, -0.0008760428754612803, -0.05436580255627632, -1.2135483026504517, -0.7401044368743896, -0.29520174860954285, -0.06600723415613174, -0.18078380823135376, -0.1033569872379303, -0.3788743317127228, -0.00020180096908006817, -0.18693596124649048, -0.02983233891427517, -0.04265167936682701, -2.396077979938127e-05, -0.017751626670360565, -0.00048673225683160126, -0.08666625618934631, -1.0728830375228426e-06, -1.7881377516459906e-06, -6.139089964563027e-05, -0.00016640232934150845, -4.1960789531003684e-05, -0.00018487652414478362, -0.0001161031104857102, -0.6259109973907471, -0.0008320921915583313, -0.01581307128071785, -0.0025486627127975225, -0.16412928700447083, -0.000416907190810889, -0.01364722941070795, -0.32569006085395813, -0.003030471969395876, -1.3129324913024902, -0.28211453557014465, -1.8878846168518066, -0.00046790618216618896, -0.030095534399151802, -8.272782724816352e-05, -0.0016866994556039572, -0.04687867313623428, -0.1733057051897049, -0.005577359814196825, -0.00034731553751043975, -0.0006272017490118742, -0.1360195279121399, -0.009251936338841915, -0.0029525042045861483, -0.009987263940274715, -0.0006326819420792162, -0.012281861156225204, -0.299061119556427, -0.5393169522285461, -0.059782564640045166, -2.657428503036499, -1.7010838985443115, -0.24455974996089935, -0.0007011815905570984, -1.0391491651535034, -0.0013048476539552212, -2.13382354559144e-05, -3.2186455882765586e-06, -1.823885577323381e-05, -3.576278118089249e-07, -2.622600959512056e-06, -0.35335347056388855, -1.9413779973983765, -1.452972173690796, -0.12403134256601334, -0.050662562251091, -0.13761436939239502, -0.01245847623795271, -0.0013617537915706635, -2.8490614567999728e-05, -0.00010239553375868127, -0.000596107158344239, -1.1959714889526367, -0.003570492845028639, -7.152555099310121e-07, -0.09562519192695618, -6.365573790390044e-05, -0.09657659381628036, -0.7624233365058899, -0.1252904087305069, -0.00025912740966305137, -0.0012206730898469687, -0.0021120640449225903, -0.016432546079158783, -0.05558236315846443, -0.061273470520973206, -0.007196575868874788, -9.667406266089529e-05, -0.000179036331246607, -0.0014665097696706653, -0.3862336277961731, -0.0003408804477658123, -0.0005115154199302197, -3.683499380713329e-05, -7.986990567587782e-06, -5.6622808187967166e-05, -0.005898687057197094, -0.10108812898397446, -0.7629703879356384, -3.933898824470816e-06, -3.135155202471651e-05, -8.344646857949556e-07, -0.008912544697523117, -1.1920928244535389e-07, -2.777537883957848e-05, -0.0007098776986822486, -0.07133527100086212, -0.006439412012696266, -0.038995642215013504, -0.005455960985273123, -1.143689513206482, -0.2141404151916504, -0.004084103740751743, -0.0017488199518993497, -0.0014266322832554579, -0.003049844177439809, -0.00035124807618558407, -0.00012838016846217215, -2.2649508537142538e-05, -4.160317621426657e-05, -1.4026765823364258, -8.106198947643861e-06, -3.2186455882765586e-06, -2.861018856492592e-06, -5.245195097813848e-06, -0.1597261279821396], "finish_reason": "stop"}], "metrics": {"energy": 609.5417273597724, "energy_per_token": 3.5855395727045436, "time": 14.08321, "time_per_token": 0.08284241176470587}}
{"outputs": [{"text": "# Check if the directory exists\n    if not os.path.isdir(directory):\n        raise FileNotFoundError(\"Directory does not exist.\")\n\n    # Get a list of all files in the directory\n    files = glob.glob(os.path.join(directory, \"*\"))\n    # If there are no files, return None\n    if not files:\n        return None\n\n    # Create the zip file\n    zip_path = os.path.join(directory, \"files.zip\")\n    with zipfile.ZipFile(zip_path, \"w\") as zip_file:\n        for file_path in files:\n            zip_file.write(file_path, os.path.basename(file_path))\n    # Return the path to the zip file\n    return zip_path", "tokens": ["#", " Check", " if", " the", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Directory", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Get", " a", " list", " of", " all", " files", " in", " the", " directory", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " \"", "*", "\"", "))", "\n", "    ", "#", " If", " there", " are", " no", " files", ",", " return", " None", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "#", " Create", " the", " zip", " file", "\n", "    ", "zip", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " \"", "files", ".", "zip", "\"", ")", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "path", ",", " \"", "w", "\"", ")", " as", " zip", "_", "file", ":", "\n", "        ", "for", " file", "_", "path", " in", " files", ":", "\n", "            ", "zip", "_", "file", ".", "write", "(", "file", "_", "path", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", "_", "path", "))", "\n", "    ", "#", " Return", " the", " path", " to", " the", " zip", " file", "\n", "    ", "return", " zip", "_", "path", "\n", "\n", "def"], "logprobs": [-1.671107292175293, -0.5433729887008667, -0.10233151912689209, -0.3212577700614929, -0.21297478675842285, -0.04973970726132393, -0.11669843643903732, -0.0013859200989827514, -0.007415625732392073, -0.013077208772301674, -0.0034641751553863287, -1.0490362910786644e-05, -0.00030119650182314217, -1.0847986231965479e-05, -1.7972241640090942, -0.0002824861148837954, -0.0003352795320097357, -0.0006274400511756539, -0.0006291079334914684, -0.0007207180024124682, -0.002338058315217495, -0.00991373136639595, -0.0014329414116218686, -7.235741941258311e-05, -8.22540732769994e-06, -0.027471128851175308, -1.5524225234985352, -0.4385245740413666, -0.42067423462867737, -0.0002779574424494058, -0.0012479382567107677, -1.547565221786499, -0.005550923757255077, -0.0009839460253715515, -0.0005392765742726624, -0.24266965687274933, -0.0010659971740096807, -0.06145285442471504, -1.2177579402923584, -0.998537003993988, -0.004674696829169989, -0.00021991695393808186, -0.1431722193956375, -0.17809684574604034, -0.058185964822769165, -0.0013392536202445626, -0.06957846134901047, -0.7021484375, -0.00026663561584427953, -0.4881705343723297, -0.060032159090042114, -0.05536245182156563, -3.194758028257638e-05, -0.008430015295743942, -0.002952147740870714, -0.10202014446258545, -2.622600959512056e-06, -2.3841830625315197e-06, -4.327203714638017e-05, -0.00021264675888232887, -4.4225667807040736e-05, -0.00023719835735391825, -0.00018857131362892687, -0.2682340741157532, -0.0009299959056079388, -0.058237139135599136, -0.006421645637601614, -0.00593305379152298, -2.506037712097168, -2.154974937438965, -2.3012595176696777, -0.24045734107494354, -0.002928138244897127, -0.005417902488261461, -0.00280213775113225, -0.2471848428249359, -0.06483536213636398, -0.008449755609035492, -0.010662254877388477, -0.0016484970692545176, -0.0017886845162138343, -0.08432213962078094, -0.010571551509201527, -0.001680391957052052, -0.0008715168805792928, -0.0011559001868590713, -0.017883719876408577, -0.007123666815459728, -0.0003766304289456457, -0.19102276861667633, -0.0008669908274896443, -0.018049513921141624, -0.3239785134792328, -0.8864307403564453, -0.15012167394161224, -0.043645229190588, -0.6079164743423462, -0.00035255891270935535, -0.5009806752204895, -0.14456723630428314, -0.7211534976959229, -0.0002321927313460037, -0.014156044460833073, -1.0728830375228426e-06, -4.351044481154531e-05, -3.4570634852570947e-06, -0.013677685521543026, -0.006337308324873447, -0.041031476110219955, -0.0006140968762338161, -0.4288197457790375, -0.007711994927376509, -0.0018034399254247546, -1.0490362910786644e-05, -1.6689160474925302e-05, -6.687417771900073e-05, -0.0030830015894025564, -0.006976885721087456, -0.09115994721651077, -0.0003524397616274655, -1.4543427823809907e-05, -2.3841830625315197e-06, -1.156323378381785e-05, -1.1920928244535389e-07, -1.0728830375228426e-06, -1.537788011773955e-05, -0.00023362292267847806, -9.059865078597795e-06, -1.6569954823353328e-05, -0.00036399890086613595, -0.13342535495758057, -0.0013336582342162728, -3.2186455882765586e-06, -0.2305745631456375, -9.179073458653875e-06, -0.1014927476644516, -0.5664739012718201, -0.0740445926785469, -8.821098163025454e-05, -0.0005078217945992947, -0.006015884689986706, -1.0878461599349976, -0.03641452267765999, -1.9540188312530518, -0.03317065164446831, -5.5549986427649856e-05, -0.005216321442276239, -6.639736966462806e-05, -0.0003334919747430831, -0.002381586004048586, -1.1927719116210938, -0.0005004345439374447, -0.0028046341612935066, -0.0002899941464420408, -9.775113539944869e-06, -1.549708758830093e-05, -0.002039734972640872, -0.00011300401820335537, -1.6689286894688848e-06, -0.03247583657503128, -0.34254735708236694, -2.0265558760002023e-06, -2.2172682292875834e-05, -5.960462772236497e-07, -0.0023253324907273054, 0.0, -2.1457441107486375e-05, -0.0009502424509264529, -3.290122185717337e-05, -3.576278118089249e-07, -0.023547058925032616, -0.003667535027489066, -2.2019147872924805, -1.4744986295700073, -0.04600958898663521, -0.00788054894655943, -0.07542508095502853, -0.03422676771879196, -0.0010026433737948537, -0.5430492758750916, -0.003653163556009531, -0.004189643077552319, -0.0008600826840847731, -0.004423713777214289, -0.015199434012174606, -9.131014667218551e-05, -0.00035494225448928773, -0.638914167881012, -0.033693719655275345, -1.5564815998077393], "finish_reason": "stop"}], "metrics": {"energy": 635.8714203987115, "energy_per_token": 3.346691686309008, "time": 15.774054, "time_per_token": 0.08302133684210526}}
