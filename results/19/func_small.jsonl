{"outputs": [{"text": "# Check if directory exists\n    if not os.path.exists(directory):\n        raise FileNotFoundError(directory + \" doesn't exist\")\n\n    files = glob.glob(os.path.join(directory, '*.txt'))\n    if not files:\n        return None\n\n    zip_filename = 'files.zip'\n\n    # Create a ZipFile object\n    with zipfile.ZipFile(zip_filename, 'w') as zip_file:\n        # Add each file to the zip\n        for file in files:\n            zip_file.write(file)\n\n    return zip_filename", "tokens": ["#", " Check", " if", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "directory", " +", " \"", " doesn", "'", "t", " exist", "\"", ")", "\n", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "*", ".", "txt", "'))", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "zip", "_", "filename", " =", " '", "files", ".", "zip", "'", "\n", "\n", "    ", "#", " Create", " a", " Zip", "File", " object", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "filename", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "        ", "#", " Add", " each", " file", " to", " the", " zip", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "zip", "_", "file", ".", "write", "(", "file", ")", "\n", "\n", "    ", "return", " zip", "_", "filename"], "logprobs": [-2.030395269393921, -1.2500495910644531, -0.369878351688385, -1.6841243505477905, -0.06626777350902557, -0.1575043648481369, -0.002553062280640006, -0.07621917128562927, -0.043651849031448364, -0.008252331987023354, -1.2159273865108844e-05, -0.0001911934232339263, -0.0161138828843832, -0.45411890745162964, -0.0003044141922146082, -0.0015175743028521538, -0.004105829633772373, -0.00392072694376111, -0.0021370449103415012, -0.031299103051424026, -0.0033118657302111387, -9.285972191719338e-05, -5.125868119648658e-05, -0.5127822756767273, -1.488635540008545, -1.1598939895629883, -1.164180040359497, -2.7886993885040283, -0.007239537313580513, -2.4914430468925275e-05, -0.0974508598446846, -0.6925151348114014, -0.0009436921682208776, -0.007370896637439728, -0.2596193850040436, -0.0010768335778266191, -2.73211932182312, -0.1711772382259369, -0.14289315044879913, -6.365573790390044e-05, -0.019221704453229904, -0.013911192305386066, -0.4275972247123718, -0.0003026265767402947, -0.00024077377747744322, -0.0017546509625390172, -0.004493022337555885, -0.0011106519959867, -0.006558441556990147, -0.003278121817857027, -0.31047046184539795, -0.352018266916275, -2.2215847969055176, -2.4729785919189453, -0.04483010247349739, -0.1631922721862793, -0.4169565737247467, -0.329424649477005, -0.7120699286460876, -0.013141332194209099, -0.004563037771731615, -0.0655781701207161, -0.0018566290382295847, -0.16085003316402435, -0.10425907373428345, -0.019371960312128067, -0.15812018513679504, -0.0006470970110967755, -1.0447909832000732, -0.17927932739257812, -2.4065568447113037, -0.002946561435237527, -1.1723554134368896, -0.045013826340436935, -0.008146747015416622, -0.0003058442671317607, -0.0001677133986959234, -0.01650841534137726, -2.0386295318603516, -0.0005768066039308906, -1.4515116214752197, -0.7635434865951538, -0.9052666425704956, -1.375244379043579, -0.06372251361608505, -0.1126752719283104, -0.21179157495498657, -0.0007139279623515904, -0.6754550337791443, -0.05360998213291168, -1.645074735279195e-05, -1.1444026313256472e-05, -0.002410008804872632, -0.00013004888023715466, -5.006664650863968e-05, -0.018436145037412643, -0.0965120866894722, -0.0016989572905004025, -8.511180931236595e-05, -0.0007818264421075583, -0.02754245325922966, -0.013695206493139267, -0.23076273500919342, -0.00019822540343739092, -0.15839962661266327, -0.15878598392009735, -0.17792773246765137, -0.00049650261644274, -0.0022506401874125004, -0.06301111727952957, -0.5038799047470093, -0.8512471318244934, -0.7548839449882507, -0.09086934477090836, -0.16485902667045593, -0.01010398380458355, -0.28677940368652344, -1.7305293083190918, -0.0012631779536604881, -0.005039726383984089, -0.1616717129945755, -0.20191611349582672, -0.005631652660667896, -0.0002714027068577707, -0.0009640575153753161, -0.001086121890693903, -0.08965401351451874, -0.00040797016117721796, -0.006734413094818592, -3.564294092939235e-05, -0.0003480305604171008, -0.00010144196130568162, -0.0032049263827502728, -0.23498126864433289, -0.00953394640237093, -0.10032887011766434, -0.014687390066683292, -0.38454487919807434, -0.29895007610321045, -0.0011548285838216543, -0.0005496421363204718], "finish_reason": "stop"}], "metrics": {"energy": 153.0596513748168, "energy_per_token": 1.0855294423745874, "time": 6.7356167, "time_per_token": 0.047770331205673755}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise FileNotFoundError(f'Directory \"{directory}\" not found')\n\n    files = glob.glob(f'{directory}/*.*')\n    if not files:\n        return None\n\n    zip_file = zipfile.ZipFile(f'{directory}/files.zip', 'w', compression=zipfile.ZIP_DEFLATED)\n    for file in files:\n        zip_file.write(file, os.path.basename(file))\n    zip_file.close()\n    return f'{directory}/files.zip'", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "'", "Directory", " \"", "{", "directory", "}\"", " not", " found", "')", "\n", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "f", "'{", "directory", "}", "/*", ".", "*", "')", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "zip", "_", "file", " =", " zip", "file", ".", "Z", "ip", "File", "(", "f", "'{", "directory", "}/", "files", ".", "zip", "'", ",", " '", "w", "'", ",", " compression", "=", "zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "zip", "_", "file", ".", "write", "(", "file", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "    ", "zip", "_", "file", ".", "close", "()", "\n", "    ", "return", " f", "'{", "directory", "}/", "files", ".", "zip", "'", "\n", "\n", "if"], "logprobs": [-1.161291241645813, -0.10425037145614624, -0.03928108140826225, -3.731181277544238e-05, -0.0005763299996033311, -0.015057121403515339, -0.6041281223297119, -0.0009501233580522239, -0.0029584472067654133, -0.008017381653189659, -0.027650531381368637, -0.00353723275475204, -0.03625163063406944, -0.00374984135851264, -0.00017689094238448888, -8.451581379631534e-05, -0.7036335468292236, -0.6522549390792847, -1.1877553462982178, -0.7434395551681519, -2.7187070846557617, -0.0012517482973635197, -0.0037510290276259184, -0.005217625759541988, -0.8167909979820251, -0.01603962667286396, -0.5140183568000793, -0.0022040142212063074, -0.3549840748310089, -0.0004049911512993276, -1.4409743547439575, -0.20185814797878265, -0.1725044697523117, -7.199982064776123e-05, -0.022120410576462746, -0.01899598352611065, -1.5032094717025757, -0.21946457028388977, -0.005428454838693142, -0.2476498782634735, -0.04129013791680336, -2.0581252574920654, -0.23293867707252502, -0.04886379837989807, -0.024958651512861252, -0.3067675232887268, -0.17913872003555298, -0.4275202453136444, -0.01527974009513855, -0.00609989371150732, -0.029730629175901413, -0.000602421467192471, -0.10879560559988022, -0.06661824882030487, -0.00974398571997881, -0.06305398792028427, -0.00018940561858471483, -0.8262671232223511, -0.10938210785388947, -1.3526113033294678, -0.47799035906791687, -1.2387785911560059, -0.008058889769017696, -5.054346183896996e-05, -0.014501533471047878, -0.001753103919327259, -0.00014900050882715732, -0.10679998248815536, -0.8884193897247314, -0.3393428325653076, -0.05714653432369232, -0.16798503696918488, -0.012999550439417362, -0.0019215944921597838, -5.94836674281396e-05, -0.006756437011063099, -0.00029881304362788796, -0.20194748044013977, -0.010449577122926712, -1.3788957595825195, -0.002863119123503566, -0.5510794520378113, -0.018780509009957314, -0.001566136721521616, -2.861018856492592e-06, -1.0847986231965479e-05, -0.0018160531762987375, -0.036904532462358475, -0.0005530973430722952, -0.005780290346592665, -0.0003743662964552641, -0.0020157035905867815, -0.06926939636468887, -0.005189401097595692, -0.2567528188228607, -0.040821611881256104, -0.2513444423675537, -0.12567010521888733, -0.006726597901433706, -0.0006210067658685148, -0.003310440108180046, -0.0010825494537129998, -0.15052232146263123, -0.0006613928126171231, -0.008306125178933144, -7.414542778860778e-05, -0.0003846143954433501, -0.00028010259848088026, -0.013218156062066555, -1.2010529041290283, -0.46335744857788086, -7.271740287251305e-06, -0.0008582960581406951, -0.0016199335223063827, -0.14865435659885406, -2.3841855067985307e-07, -0.00012373158824630082, -0.003622637828812003, -0.04632660746574402, -0.014190481044352055, -0.19956451654434204, -0.023610979318618774, -0.000393432448618114, -0.0001287377526750788, -5.4834770708112046e-05, -0.0004848258395213634, -0.0015013862866908312, -0.007165447808802128, -0.5635421872138977, -0.03817888721823692, -0.3537246286869049, -0.06878230720758438, -0.003782500745728612, -0.0029759190510958433, -0.00042143522296100855, -0.00044050050200894475, -1.811964830267243e-05, -0.6025576591491699, -0.2144761085510254, -0.015500195324420929, -0.6546335816383362], "finish_reason": "stop"}], "metrics": {"energy": 149.03134669876093, "energy_per_token": 1.0569599056649712, "time": 5.903364, "time_per_token": 0.041867829787234044}}
{"outputs": [{"text": "path = os.path.join(directory, 'files.zip')\n    files = glob.glob(f\"{directory}/*\")\n\n    if not files:\n        return None\n\n    with zipfile.ZipFile(path, 'w') as zip_file:\n        for file_path in files:\n            zip_file.write(file_path, os.path.relpath(file_path, directory))\n\n    return path", "tokens": ["path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "f", "\"", "{", "directory", "}", "/*", "\"", ")", "\n", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "path", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "        ", "for", " file", "_", "path", " in", " files", ":", "\n", "            ", "zip", "_", "file", ".", "write", "(", "file", "_", "path", ",", " os", ".", "path", ".", "rel", "path", "(", "file", "_", "path", ",", " directory", "))", "\n", "\n", "    ", "return", " path", "\n", "\n", "def"], "logprobs": [-2.328306198120117, -0.1294996291399002, -1.4882330894470215, -0.00015686711412854493, -0.01834462210536003, -0.019892830401659012, -0.3964647054672241, -0.018227456137537956, -0.034679971635341644, -0.009002571925520897, -0.1410658359527588, -0.019797582179307938, -0.009181066416203976, -0.00015400654228869826, -0.0007568117580376565, -0.023221919313073158, -0.3024512529373169, -2.398857593536377, -0.13662824034690857, -0.1371205896139145, -7.295342220459133e-05, -0.01664641685783863, -0.04023504629731178, -2.2764694690704346, -1.0266084671020508, -0.006041005253791809, -0.026339925825595856, -0.19338783621788025, -0.0443924255669117, -0.1905229538679123, -0.07899440079927444, -0.013300150632858276, -1.4226832389831543, -0.0002637753786984831, -0.1926978975534439, -0.5282320380210876, -0.17021241784095764, -0.048674989491701126, -0.041658513247966766, -0.002136925933882594, -0.20882849395275116, -0.19708013534545898, -0.004174091853201389, -0.10454419255256653, -0.00021717573690693825, -0.41512489318847656, -0.0930975079536438, -0.000205018965061754, -1.4424220353248529e-05, -0.0019393223337829113, -0.0008662762120366096, -0.00015925093612167984, -0.008129247464239597, -0.014998523518443108, -0.0010470629204064608, -0.13444674015045166, -0.00906223151832819, -0.2452262043952942, -0.00016902448260225356, -0.610938310623169, -0.3701169788837433, -0.26150840520858765, -0.0003922408213838935, -0.001989886863157153, -0.0040006376802921295, -0.036862943321466446, -0.1167425662279129, -2.2624781131744385, -0.35886305570602417, -0.0011812621960416436, -0.00582864647731185, -0.0005023409612476826, -0.0013462775386869907, -0.0029475123155862093, -0.3833144009113312, -0.0014619863359257579, -0.021239450201392174, -0.00010632903286023065, -0.00034517052699811757, -0.00015793983766343445, -0.012202726677060127, -0.00014661667228210717, -8.916457591112703e-05, -1.3514158725738525, -0.2155395895242691, -9.131014667218551e-05, -0.000251142424531281, -0.006257465574890375, -1.6026111841201782, -0.00011908298620255664, -0.0002456601650919765, -0.0037839256692677736, -5.578839045483619e-05, -2.13382354559144e-05, -0.041960567235946655, -0.12895332276821136, -0.013914483599364758, -0.0075111123733222485, -0.12823201715946198, -0.009978057816624641, -0.035064831376075745, -0.04390983656048775, -0.8576094508171082, -0.008373036980628967, -0.981528103351593], "finish_reason": "stop"}], "metrics": {"energy": 99.44272591781616, "energy_per_token": 0.9470735801696777, "time": 4.212279, "time_per_token": 0.04011694285714285}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise FileNotFoundError(\"Directory not found\")\n\n    files = glob.glob(os.path.join(directory, \"*\"))\n    files = [f for f in files if os.path.isfile(f)]\n    if not files:\n        return None\n\n    zip_name = os.path.join(directory, \"files.zip\")\n    with zipfile.ZipFile(zip_name, 'w') as zipf:\n        for f in files:\n            zipf.write(f)\n    return zip_name", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "\"", "Directory", " not", " found", "\"", ")", "\n", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " \"", "*", "\"", "))", "\n", "    ", "files", " =", " [", "f", " for", " f", " in", " files", " if", " os", ".", "path", ".", "is", "file", "(", "f", ")]", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "zip", "_", "name", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " \"", "files", ".", "zip", "\"", ")", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "name", ",", " '", "w", "')", " as", " zip", "f", ":", "\n", "        ", "for", " f", " in", " files", ":", "\n", "            ", "zip", "f", ".", "write", "(", "f", ")", "\n", "    ", "return", " zip", "_", "name", "\n", "\n", "if"], "logprobs": [-1.161291241645813, -0.10425037145614624, -0.03928108140826225, -3.731181277544238e-05, -0.0005763299996033311, -0.015057121403515339, -0.6041281223297119, -0.0009501233580522239, -0.0029584472067654133, -0.008017381653189659, -0.027650531381368637, -0.00353723275475204, -0.03625163063406944, -0.00374984135851264, -0.00017689094238448888, -8.451581379631534e-05, -0.7036335468292236, -1.4583443403244019, -0.6024696826934814, -0.7683133482933044, -0.008697722107172012, -0.5693708062171936, -0.001957050058990717, -0.013288505375385284, -0.24443531036376953, -0.0003948624071199447, -1.2434085607528687, -0.18374355137348175, -0.13636542856693268, -5.590759246842936e-05, -0.012622936628758907, -0.009033406153321266, -0.28420698642730713, -0.0005379660287871957, -5.2689116273541003e-05, -0.0030680273193866014, -0.0020943391136825085, -0.0005184260080568492, -0.0033652123529464006, -0.00144710682798177, -0.9068042039871216, -0.3419141173362732, -0.35569465160369873, -0.04622644558548927, -0.011220450513064861, -0.4177474081516266, -2.811164617538452, -0.3182655870914459, -0.15530797839164734, -0.5172635912895203, -0.007152310106903315, -0.00025293012731708586, -0.00016044282529037446, -0.002079825848340988, -0.0025021694600582123, -0.4768137037754059, -6.186770770000294e-05, -0.0026648270431905985, -0.006109846290200949, -0.004796665161848068, -0.0007231004419736564, -0.0001230164198204875, -0.0018887552432715893, -0.07545824348926544, -0.020440174266695976, -1.1292810440063477, -0.175752192735672, -0.4216984808444977, -0.007967948913574219, -0.0005469018360599875, -0.018131114542484283, -0.0006581762572750449, -0.05826334282755852, -0.055299852043390274, -0.008362042717635632, -0.08603160083293915, -0.00015066919149830937, -0.6720021963119507, -0.10746056586503983, -1.2262910604476929, -0.0018059387803077698, -0.8061667084693909, -5.602820692729438e-06, -0.0007926659309305251, -0.00034338299883529544, -0.1137821152806282, -0.00437505217269063, -0.021782442927360535, -0.004532658960670233, -0.16582630574703217, -0.005097962450236082, -0.0025465223006904125, -3.862306402879767e-05, -5.209310256759636e-05, -8.391981828026474e-05, -0.004348821938037872, -0.16673624515533447, -0.23988954722881317, -0.07462527602910995, -4.7205765440594405e-05, -4.0531076592742465e-06, -0.002173206303268671, -0.000706780469045043, -8.809178689261898e-05, -0.00028689560713246465, -0.004302649293094873, -9.274052717955783e-05, -0.00015317220822907984, -0.0002719986077863723, -1.3119046688079834, -0.008149703033268452, -0.228792205452919, -4.386805812828243e-05, -0.22719037532806396, -2.384721040725708, -0.00030655929003842175, -0.0011712603736668825, -0.0015191215788945556, -0.03724076226353645, -0.6135486960411072, -0.039012957364320755, -0.0011718557216227055, -0.00021586472576018423, -0.001257463125512004, -0.0010545651894062757, -0.03859291225671768, -0.0022501645144075155, -7.629365427419543e-06, -0.00030393750057555735, -7.152301259338856e-05, -0.004082203842699528, -0.3583507537841797, -0.008626576513051987, -1.1268162727355957, -0.0436849407851696, -0.0664016455411911, -0.0003293210465926677, -2.9205850296420977e-05, -0.44700005650520325, -0.018159911036491394, -0.9154131412506104], "finish_reason": "stop"}], "metrics": {"energy": 150.4020923137665, "energy_per_token": 1.0666815057713936, "time": 5.897808, "time_per_token": 0.041828425531914896}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise FileNotFoundError(f'{directory} does not exist')\n    with zipfile.ZipFile('files.zip', 'w', zipfile.ZIP_DEFLATED) as zipf:\n        for f in glob.glob(os.path.join(directory, '*')):\n            zipf.write(f)\n    return os.path.join(directory, 'files.zip')", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "'{", "directory", "}", " does", " not", " exist", "')", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "('", "files", ".", "zip", "'", ",", " '", "w", "'", ",", " zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", " as", " zip", "f", ":", "\n", "        ", "for", " f", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "*", "'))", ":", "\n", "            ", "zip", "f", ".", "write", "(", "f", ")", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", "\n", "\n", "def"], "logprobs": [-1.161291241645813, -0.10425037145614624, -0.03928108140826225, -3.731181277544238e-05, -0.0005763299996033311, -0.015057121403515339, -0.6041281223297119, -0.0009501233580522239, -0.0029584472067654133, -0.008017381653189659, -0.027650531381368637, -0.00353723275475204, -0.03625163063406944, -0.00374984135851264, -0.00017689094238448888, -8.451581379631534e-05, -0.7036335468292236, -0.6522549390792847, -2.7595155239105225, -0.008837397210299969, -0.06256531924009323, -0.598968505859375, -0.002250283258035779, -0.043634504079818726, -0.2685244679450989, -0.0033759051002562046, -1.1163350343704224, -3.614476442337036, -0.36127007007598877, -0.0011878109071403742, -4.3987260141875595e-05, -0.00334442057646811, -0.0006505518686026335, -0.00013505500101018697, -1.7614083290100098, -0.053360700607299805, -0.002609421731904149, -7.009260298218578e-05, -0.004467981401830912, -0.00010990492592100054, -0.12612469494342804, -0.044725120067596436, -0.9615394473075867, -0.0011850723531097174, -0.73051518201828, -0.00025948495022021234, -4.327203714638017e-05, -0.0022238779347389936, -0.09757218509912491, -0.000754786713514477, -0.003289884887635708, -0.00029094755882397294, -0.0008127961773425341, -0.06727614998817444, -0.00034457468427717686, -0.6014870405197144, -1.8930749893188477, -0.0023662445601075888, -0.006455165334045887, -0.005463074892759323, -0.11264801025390625, -1.895326852798462, -0.4234648644924164, -0.030825641006231308, -4.458328112377785e-05, -0.15767920017242432, -0.033266015350818634, -0.5946549773216248, -3.4570634852570947e-06, -0.00011979816190432757, -0.004218251910060644, -0.009723915718495846, -0.002262296387925744, -0.003324935445562005, -0.0022801372688263655, -0.051427632570266724, -0.43131953477859497, -0.06446626037359238, -0.0014706759247928858, -0.005243359133601189, -0.003834872040897608, -0.638023853302002, -0.005970263388007879, -2.8132995794294402e-05, -0.0001770101225702092, -0.000537727726623416, -0.009227132424712181, -0.3680049180984497, -0.02086499333381653, -0.20642659068107605, -0.07632111757993698, -1.4580051898956299, -4.6967357775429264e-05, -0.020353389903903008, -0.004162814002484083, -0.19923852384090424, -0.027049804106354713, -0.04149864614009857, -0.009318312630057335, -0.025574233382940292, -0.006018965505063534, -0.001660279231145978, -2.9444261599564925e-05, -0.0004459816846065223, -0.4141376316547394, -0.03095867671072483, -1.1142585277557373], "finish_reason": "stop"}], "metrics": {"energy": 119.84851515769961, "energy_per_token": 1.1200795809130804, "time": 4.4340024, "time_per_token": 0.04143927476635514}}
{"outputs": [{"text": "files = glob.glob(os.path.join(directory, '**/*.*'))\n    if not files:\n        return None\n    zip_path = os.path.join(directory, 'files.zip')\n    with zipfile.ZipFile(zip_path, 'w') as zip_file:\n        for file in files:\n            zip_file.write(file)\n    return zip_path", "tokens": ["files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "**", "/*", ".", "*", "'))", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "return", " None", "\n", "    ", "zip", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "path", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "zip", "_", "file", ".", "write", "(", "file", ")", "\n", "    ", "return", " zip", "_", "path", "\n", "\n", "def"], "logprobs": [-3.069295883178711, -0.24852462112903595, -0.23833537101745605, -0.0001902399235405028, -0.030530957505106926, -0.03299684822559357, -0.47279036045074463, -7.390948667307384e-06, -0.00022671037004329264, -0.0035482801031321287, -0.0071951556019485, -0.0036149173974990845, -0.010623096488416195, -0.002453295513987541, -0.18918639421463013, -1.1880109310150146, -0.42226606607437134, -0.845730185508728, -0.295082151889801, -0.1748538315296173, -0.01920369453728199, -0.18757444620132446, -0.27222877740859985, -0.7247161269187927, -0.04734186828136444, -0.009523437358438969, -0.056043464690446854, -0.002701207296922803, -0.15516947209835052, -0.08160814642906189, -0.00856795534491539, -0.6834552884101868, -1.390774130821228, -0.17187334597110748, -1.172794222831726, -0.0051709008403122425, -0.12658244371414185, -2.5152843591058627e-05, -0.0015810144832357764, -0.0028565814718604088, -0.0367981381714344, -0.013358143158257008, -0.02166859619319439, -0.010763328522443771, -0.03679986298084259, -0.011945498175919056, -0.0021564343478530645, -6.949660019017756e-05, -0.000309657771140337, -0.005605336278676987, -0.03248795494437218, -0.19902831315994263, -0.1125851646065712, -9.929640509653836e-05, -1.0251946150674485e-05, -0.0020281951874494553, -0.0014607959892600775, -0.00018761781393550336, -0.0030732564628124237, -0.006834345404058695, -0.00021550717065110803, -0.00015758226800244302, -0.0005796659388579428, -0.09528300166130066, -0.010606464929878712, -0.22155460715293884, -9.357491217087954e-05, -0.2770114243030548, -0.18155845999717712, -0.16235926747322083, -0.00044431351125240326, -0.0022011594846844673, -0.0015344761777669191, -0.03627002239227295, -0.13539858162403107, -0.35151469707489014, -0.003775612683966756, -0.00025006983196362853, -0.0024882566649466753, -0.0013887770473957062, -0.13324183225631714, -0.0013652060879394412, -0.007665504235774279, -4.136476854910143e-05, -0.00042965717148035765, -0.00018666432879399508, -0.007759666070342064, -0.17569880187511444, -0.005621102638542652, -0.05772630497813225, -0.023367034271359444, -0.04623543843626976, -2.706014311115723e-05, -0.00011562632425921038, -0.4742227792739868, -0.014406594447791576, -0.8544428944587708], "finish_reason": "stop"}], "metrics": {"energy": 86.79880200386049, "energy_per_token": 0.8948330103490771, "time": 4.003707, "time_per_token": 0.04127532989690722}}
{"outputs": [{"text": "path = None\n    if not os.path.isdir(directory):\n        raise FileNotFoundError\n\n    file_list = [\n        os.path.relpath(filepath, directory) for filepath in glob.glob(f\"{directory}/**/*\", recursive=False) if\n        os.path.isfile(filepath)\n    ]\n\n    if len(file_list) == 0:\n        return path\n\n    with zipfile.ZipFile(\"files.zip\", \"w\", compression=zipfile.ZIP_DEFLATED) as zip_file:\n        for file_path in file_list:\n            zip_file.write(file_path)\n\n    return os.path.join(directory, \"files.zip\")", "tokens": ["path", " =", " None", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "\n", "\n", "    ", "file", "_", "list", " =", " [", "\n", "        ", "os", ".", "path", ".", "rel", "path", "(", "file", "path", ",", " directory", ")", " for", " file", "path", " in", " glob", ".", "glob", "(", "f", "\"", "{", "directory", "}", "/**", "/*", "\"", ",", " recursive", "=", "False", ")", " if", "\n", "        ", "os", ".", "path", ".", "is", "file", "(", "file", "path", ")", "\n", "    ", "]", "\n", "\n", "    ", "if", " len", "(", "file", "_", "list", ")", " ==", " ", "0", ":", "\n", "        ", "return", " path", "\n", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "\"", "files", ".", "zip", "\"", ",", " \"", "w", "\"", ",", " compression", "=", "zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", " as", " zip", "_", "file", ":", "\n", "        ", "for", " file", "_", "path", " in", " file", "_", "list", ":", "\n", "            ", "zip", "_", "file", ".", "write", "(", "file", "_", "path", ")", "\n", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "directory", ",", " \"", "files", ".", "zip", "\"", ")", "\n", "\n", "if"], "logprobs": [-2.328306198120117, -0.1294996291399002, -0.6007551550865173, -0.014747768640518188, -0.3142995834350586, -0.6927745938301086, -1.1287652254104614, -0.08318086713552475, -3.099393507000059e-05, -0.0014523444697260857, -0.016111887991428375, -0.9228523373603821, -0.007308651227504015, -0.00028546550311148167, -0.0023327062372118235, -0.012219331227242947, -0.02039252035319805, -0.00448020501062274, -0.05200880765914917, -0.00676342286169529, -0.00021252757869660854, -0.00010501786891836673, -1.2459840774536133, -1.0705313682556152, -0.00045599075383506715, -2.123595952987671, -0.08929919451475143, -0.9342905879020691, -0.01245176512748003, -2.7796499729156494, -2.5242867469787598, -0.015588458627462387, -0.7921575903892517, -0.00011491115583339706, -0.0019872693810611963, -0.003878809744492173, -1.1776443719863892, -6.961580220377073e-05, -0.005278460215777159, -1.4026635885238647, -1.4032042026519775, -0.045455217361450195, -0.40627914667129517, -0.006100012455135584, -1.391254186630249, -0.04086807370185852, -0.0015276916092261672, -0.015503951348364353, -0.08739619702100754, -0.0002019201492657885, -0.16733381152153015, -0.023799806833267212, -1.5103224515914917, -0.4944857656955719, -0.00523612555116415, -0.00742000387981534, -0.114060178399086, -2.5521318912506104, -0.2101365625858307, -0.6898522973060608, -0.10505495965480804, -0.010167235508561134, -0.014619254507124424, -1.099888563156128, -0.067583829164505, -1.2085789442062378, -1.6262216567993164, -0.005570365581661463, -0.4320458471775055, -0.0005528590409085155, -0.0015509016811847687, -0.006015884689986706, -0.01735278032720089, -0.0016984812682494521, -0.0008705640211701393, -0.023303329944610596, -2.253030106658116e-05, -0.5651170611381531, -0.17773893475532532, -0.025726210325956345, -0.0003651905863080174, -0.007894623093307018, -0.3718883693218231, -5.6622808187967166e-05, -0.16065554320812225, -1.3935697078704834, -0.0002454218047205359, -0.0005097282119095325, -1.9788545614574105e-05, -1.0609570381348021e-05, -0.06703192740678787, -1.4510059356689453, -0.0006874820101074874, -0.01061130128800869, -0.002831618534401059, -0.024747831746935844, -0.001177451922558248, -0.21977713704109192, -1.0157595872879028, -0.01788102649152279, -0.1287803053855896, -0.000129691296024248, -0.7160980105400085, -0.16287405788898468, -0.0007117837085388601, -2.8132995794294402e-05, -0.002096956130117178, -0.0009099871967919171, -9.691245941212401e-05, -0.06529299169778824, -1.38892662525177, -0.14191459119319916, -0.002753992099314928, -5.936446541454643e-05, -9.893881360767409e-05, -0.0009390473715029657, -0.23468905687332153, -0.015432232990860939, -0.00021824838768225163, -0.6540432572364807, -0.906047523021698, -0.008178080432116985, -0.004395941272377968, -2.7418097943154862e-06, -0.00024029705673456192, -0.0024833811912685633, -0.010094070807099342, -0.00038509105797857046, -0.007412194274365902, -0.0002366024418734014, -0.001733468729071319, -0.08208990842103958, -0.00022015532886143774, -0.43744009733200073, -0.37467625737190247, -0.21951578557491302, -0.0015260252403095365, -0.001578276976943016, -0.005710952449589968, -0.13732844591140747, -0.12503279745578766, -1.7302896976470947, -0.2758910655975342, -0.0021259819623082876, -0.005860882345587015, -1.7523612768854946e-05, -3.4927710657939315e-05, -0.0004002247005701065, -0.0013559204526245594, -0.0018111744429916143, -0.07865793257951736, -0.001278536394238472, -0.009314768947660923, -0.0001113352773245424, -0.00037377048283815384, -0.000513064325787127, -0.199565589427948, -0.02507433481514454, -0.00019012074335478246, -0.2733185887336731, -0.005999413784593344, -0.596085250377655, -0.16043837368488312, -2.24832820892334, -0.9000673294067383, -1.1205610462639015e-05, -0.009306265972554684, -0.001764765940606594, -0.2688267230987549, -0.010199685581028461, -0.09038874506950378, -0.0047233435325324535, -0.10874567925930023, -0.007063418161123991, -0.0014444880653172731, -2.706014311115723e-05, -0.00011085849109804258, -0.5151749849319458, -0.2767108082771301, -0.013038615696132183, -0.7857407927513123], "finish_reason": "stop"}], "metrics": {"energy": 170.08698332023616, "energy_per_token": 0.9397070901670506, "time": 7.567702, "time_per_token": 0.04181050828729282}}
{"outputs": [{"text": "if not os.path.isdir(directory):\n        raise FileNotFoundError\n\n    files = glob.glob(f'{directory}/**/*.*', recursive=True)\n    if len(files) == 0:\n        return None\n\n    zip_name = 'files.zip'\n    with ZipFile(zip_name, 'w') as zip:\n        for file in files:\n            zip.write(file, arcname=os.path.basename(file))\n    return zip_name", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "\n", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "f", "'{", "directory", "}/", "**", "/*", ".", "*", "'", ",", " recursive", "=", "True", ")", "\n", "    ", "if", " len", "(", "files", ")", " ==", " ", "0", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "zip", "_", "name", " =", " '", "files", ".", "zip", "'", "\n", "    ", "with", " Zip", "File", "(", "zip", "_", "name", ",", " '", "w", "')", " as", " zip", ":", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "zip", ".", "write", "(", "file", ",", " arc", "name", "=", "os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "    ", "return", " zip", "_", "name", "\n", "\n", "if"], "logprobs": [-1.161291241645813, -0.10425037145614624, -0.03928108140826225, -3.731181277544238e-05, -0.0005763299996033311, -0.015057121403515339, -0.793020486831665, -0.004582973662763834, -0.00027640812913887203, -0.0018951804377138615, -0.0074036745354533195, -0.020623529329895973, -0.0034641751553863287, -0.05357450246810913, -0.005014818161725998, -0.000198821333469823, -8.284702198579907e-05, -1.266603708267212, -0.48434630036354065, -0.00034898388548754156, -1.3378974199295044, -0.19659176468849182, -0.1642126441001892, -6.69933797325939e-05, -0.021749667823314667, -0.009414798580110073, -1.6973146200180054, -0.9683518409729004, -0.011494600214064121, -1.5297980308532715, -0.0228724405169487, -0.19713260233402252, -1.1352049112319946, -0.1660730093717575, -0.15732735395431519, -0.00034671969478949904, -0.0036618339363485575, -0.00814095325767994, -0.06593257188796997, -0.0012225781101733446, -0.011830642819404602, -0.3440040349960327, -0.428137868642807, -1.3416850566864014, -0.0005989664932712913, -0.0027646913658827543, -0.00751690985634923, -0.15843096375465393, -0.00041869457345455885, -0.0007919512572698295, -0.0025233353953808546, -0.02483469992876053, -0.000780754373408854, -0.032880693674087524, -0.07599402219057083, -0.004885758738964796, -0.13681456446647644, -0.00020787939138244838, -1.0042920112609863, -0.13578008115291595, -1.306492567062378, -0.003661477705463767, -0.6280226707458496, -0.017451424151659012, -0.0061457459814846516, -8.356221951544285e-05, -0.00013374387344811112, -0.006937819067388773, -0.09571369737386703, -1.3164079189300537, -2.2386441230773926, -0.002401327481493354, -0.01053227111697197, -0.04664159193634987, -0.0027151170652359724, -0.000433112756581977, -0.0008853329927660525, -0.05956042930483818, -0.008033109828829765, -0.08015608042478561, -0.00011228884250158444, -0.15340885519981384, -1.7631032466888428, -0.00290971458889544, -0.002301545813679695, -0.030735014006495476, -0.22729237377643585, -0.07596375048160553, -0.00313849956728518, -0.0003411188081372529, -0.001692411839030683, -0.0012318650260567665, -0.24186913669109344, -0.0026675614062696695, -0.004924193490296602, -0.00018559163436293602, -0.007018199656158686, -1.3736621141433716, -1.3479080200195312, -0.007409472484141588, -0.0026704147458076477, -0.12700584530830383, -0.00047052756417542696, -0.0002915434306487441, -0.031457144767045975, -0.3883407413959503, -6.365573790390044e-05, -0.00021920185827184469, -0.002594083547592163, -0.049202609807252884, -0.008974926546216011, -1.4876117706298828, -0.1566525399684906, -0.32981741428375244, -0.01412513293325901, -5.61460001335945e-05, -0.3518434464931488, -0.008734828792512417, -0.795442521572113], "finish_reason": "stop"}], "metrics": {"energy": 135.97177131462092, "energy_per_token": 1.1426199270136213, "time": 4.8517103, "time_per_token": 0.040770674789915966}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise FileNotFoundError\n\n    zip_file = None\n\n    for root, dirs, files in os.walk(directory):\n        if not dirs and len(files) != 0:\n            zip_file = zipfile.ZipFile(os.path.join(directory, 'files.zip'), 'w')\n            for file_name in glob.glob(os.path.join(root, '*')):\n                zip_file.write(file_name)\n            zip_file.close()\n\n    if zip_file is None:\n        return None\n    else:\n        return zip_file.name", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "\n", "\n", "    ", "zip", "_", "file", " =", " None", "\n", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "if", " not", " d", "irs", " and", " len", "(", "files", ")", " ", "!", "=", " ", "0", ":", "\n", "            ", "zip", "_", "file", " =", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", ",", " '", "w", "')", "\n", "            ", "for", " file", "_", "name", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "root", ",", " '", "*", "'))", ":", "\n", "                ", "zip", "_", "file", ".", "write", "(", "file", "_", "name", ")", "\n", "            ", "zip", "_", "file", ".", "close", "()", "\n", "\n", "    ", "if", " zip", "_", "file", " is", " None", ":", "\n", "        ", "return", " None", "\n", "    ", "else", ":", "\n", "        ", "return", " zip", "_", "file", ".", "name", "\n", "\n", "#"], "logprobs": [-1.161291241645813, -0.10425037145614624, -0.03928108140826225, -3.731181277544238e-05, -0.0005763299996033311, -0.015057121403515339, -0.6041281223297119, -0.0009501233580522239, -0.0029584472067654133, -0.008017381653189659, -0.027650531381368637, -0.00353723275475204, -0.03625163063406944, -0.00374984135851264, -0.00017689094238448888, -8.451581379631534e-05, -1.258509874343872, -0.4305676519870758, -0.00032729512895457447, -1.6168345212936401, -0.1011759415268898, -1.46444571018219, -1.359334945678711, -0.720614492893219, -0.0071196421049535275, -1.1729792356491089, -0.0003713871701620519, -0.8075457215309143, -2.284898281097412, -0.003297370159998536, -0.525602400302887, -0.0007353700930252671, -0.00040618274942971766, -0.020014123991131783, -0.0015769677702337503, -0.00805818010121584, -5.006664650863968e-05, -8.248942322097719e-05, -0.0010487301042303443, -0.0014405598631128669, -0.06530337780714035, -0.012885050848126411, -0.014017462730407715, -1.3154339790344238, -1.4304333925247192, -1.775843858718872, -2.098061486321967e-05, -0.4560926854610443, -2.30985164642334, -0.010317678563296795, -0.0312926322221756, -0.03803418576717377, -2.373745918273926, -5.07818695041351e-05, -1.6689160474925302e-05, -0.001498291501775384, -0.0185409989207983, -0.009032342582941055, -0.0499279759824276, -0.016150714829564095, -0.6360633969306946, -0.010379736311733723, -0.4553292691707611, -0.14946220815181732, -1.0874158143997192, -0.5574545860290527, -0.00033301531220786273, -0.04980345070362091, -0.0010157431242987514, -0.00016044282529037446, -0.09264601022005081, -0.6746186017990112, -0.0006542449118569493, -0.002629753202199936, -0.004223000258207321, -0.032914839684963226, -0.014526089653372765, -0.9328161478042603, -0.006242420058697462, -0.12156334519386292, -0.01225253939628601, -0.0033477472607046366, -8.105902816168964e-05, -0.025225341320037842, -0.0007594323833473027, -0.0899263322353363, -0.017505543306469917, -0.26043611764907837, -0.007797399070113897, -0.3465031087398529, -0.10967367887496948, -0.4276981055736542, -1.405632734298706, -0.5990471839904785, -0.0010448002722114325, -2.1693477630615234, -1.883488948806189e-05, -0.27669039368629456, -0.019871560856699944, -0.10375402867794037, -0.0003987947420682758, -5.2689116273541003e-05, -0.0018158152233809233, -0.0008044582791626453, -0.0011754278093576431, -0.03580719232559204, -0.004842102527618408, -0.06204727664589882, -0.271748423576355, -0.08535429835319519, -0.021898960694670677, -0.003809221088886261, -0.0026179824490100145, -0.22599516808986664, -0.0014890070306137204, -0.0044530280865728855, -0.00014745102089364082, -0.0006392342620529234, -0.0003196682082489133, -0.022710589691996574, -0.0027939353603869677, -8.642300235806033e-05, -0.3105506896972656, -0.005379249341785908, -1.0648648738861084, -0.41917717456817627, -0.001709786825813353, -0.00046885941992513835, -0.004040531348437071, -0.0015076948329806328, -0.001427346607670188, -0.04517165198922157, -0.8071727156639099, -0.08496423065662384, -2.210207223892212, -0.12192051112651825, -0.000514851592015475, -5.125868119648658e-05, -0.45030224323272705, -0.16677974164485931, -0.030477536842226982, -0.012043027207255363, -0.0016646826406940818, -0.09594105184078217, -0.046994805335998535, -0.07772659510374069, -0.5033789277076721, -0.28463780879974365, -0.00026794656878337264, -0.0029193423688411713, -0.0006291079334914684, -0.015095285139977932, -1.4724671840667725, -0.005629044491797686, -0.0001245659514097497, -0.18393439054489136, -1.1588281393051147, -0.5202269554138184, -0.01750507578253746, -2.145505428314209], "finish_reason": "stop"}], "metrics": {"energy": 149.88465040779118, "energy_per_token": 0.9367790650486949, "time": 6.732321, "time_per_token": 0.04207700625}}
{"outputs": [{"text": "if not os.path.isdir(directory):\n        raise FileNotFoundError('Specified directory does not exist')\n\n    path = None\n    files = glob.glob(os.path.join(directory, '**'), recursive=False)\n\n    # only create the zip file if there are files to zip\n    if len(files) > 0:\n        zip_path = os.path.join(directory, 'files.zip')\n        with zipfile.ZipFile(zip_path, 'w', zipfile.ZIP_DEFLATED) as zip_file:\n            for file in files:\n                zip_file.write(file)\n        path = zip_path\n\n    return path", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "Spec", "ified", " directory", " does", " not", " exist", "')", "\n", "\n", "    ", "path", " =", " None", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "**", "')", ",", " recursive", "=", "False", ")", "\n", "\n", "    ", "#", " only", " create", " the", " zip", " file", " if", " there", " are", " files", " to", " zip", "\n", "    ", "if", " len", "(", "files", ")", " >", " ", "0", ":", "\n", "        ", "zip", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", "\n", "        ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "path", ",", " '", "w", "'", ",", " zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", " as", " zip", "_", "file", ":", "\n", "            ", "for", " file", " in", " files", ":", "\n", "                ", "zip", "_", "file", ".", "write", "(", "file", ")", "\n", "        ", "path", " =", " zip", "_", "path", "\n", "\n", "    ", "return", " path", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-1.161291241645813, -0.10425037145614624, -0.03928108140826225, -3.731181277544238e-05, -0.0005763299996033311, -0.015057121403515339, -0.793020486831665, -0.004582973662763834, -0.00027640812913887203, -0.0018951804377138615, -0.0074036745354533195, -0.020623529329895973, -0.0034641751553863287, -0.05357450246810913, -0.005014818161725998, -0.000198821333469823, -8.284702198579907e-05, -1.580963373184204, -3.2377283573150635, -0.004153316840529442, -0.15565665066242218, -0.3373783826828003, -0.0011891205795109272, -0.01831102930009365, -0.5004268884658813, -0.002303448738530278, -0.5306047797203064, -0.0003582789213396609, -3.2243218421936035, -0.2549513578414917, -1.1293258666992188, -0.013901786878705025, -0.4730147421360016, -1.4736922979354858, -0.09560178965330124, -0.1868870109319687, -7.211902266135439e-05, -0.02488098107278347, -0.025310542434453964, -0.3125905394554138, -0.0003361137059982866, -0.0002553137019276619, -0.003761598840355873, -0.004242230672389269, -0.001708358759060502, -0.008708121255040169, -0.0016473069554194808, -0.07449615001678467, -1.0423970222473145, -2.346221923828125, -0.004889317788183689, -0.007890483364462852, -0.016927054151892662, -0.74509197473526, -0.028007272630929947, -0.011947030201554298, -1.5580374002456665, -0.00010799778101500124, -3.147887945175171, -4.231565475463867, -3.856821060180664, -1.777237057685852, -0.2033587396144867, -0.5692710280418396, -0.09344641864299774, -0.5728066563606262, -0.13292084634304047, -0.3808596730232239, -0.43945935368537903, -1.2395994663238525, -0.09158948808908463, -0.0009665584657341242, -0.02596888318657875, -0.9566798806190491, -0.0015507827047258615, -0.005050875712186098, -0.07389724254608154, -0.10414585471153259, -0.0005367745761759579, -0.023375768214464188, -0.0054007102735340595, -0.0021615491714328527, -0.023785024881362915, -2.1280360221862793, -0.19542783498764038, -1.3404287099838257, -0.006373910699039698, -0.13655877113342285, -1.3589766240329482e-05, -0.0010112178279086947, -0.0023523299023509026, -0.03223808482289314, -0.009236817248165607, -0.03190352022647858, -0.008193097077310085, -0.03314897045493126, -0.023065833374857903, -0.0022527810651808977, -7.068861305015162e-05, -0.0002746204845607281, -0.009078415110707283, -0.23962289094924927, -0.5176301598548889, -0.13993459939956665, -7.438383181579411e-05, -8.22540732769994e-06, -0.0021438251715153456, -0.001111247343942523, -9.238292841473594e-05, -0.003519889432936907, -0.0068891616538167, -0.0002683041093405336, -6.19869097135961e-05, -0.0004215544031467289, -0.0915665328502655, -0.016929866746068, -1.3719041347503662, -0.00023362292267847806, -0.680926501750946, -0.00011598391574807465, -2.5152843591058627e-05, -0.001761909923516214, -0.025730973109602928, -0.0010003806091845036, -0.0023658876307308674, -0.00016902448260225356, -0.00047398300375789404, -0.02279110997915268, -0.00020323118951637298, -0.1625179648399353, -0.32134655117988586, -0.17372994124889374, -0.0008536509121768177, -0.001807485707104206, -0.006601785775274038, -0.07034198194742203, -0.18965482711791992, -0.22573770582675934, -0.008304115384817123, -0.0005905076395720243, -0.0037791754584759474, -0.0020759000908583403, -0.5590816736221313, -0.0030027797911316156, -0.008860201574862003, -7.426462980220094e-05, -0.0001734344696160406, -0.0002882065309677273, -0.016679244115948677, -0.24639438092708588, -0.008700557984411716, -0.45139822363853455, -0.04185722395777702, -0.0006092122639529407, -0.06390224397182465, -0.00041762212640605867, -0.001016576774418354, -0.007686206605285406, -0.3854828178882599, -0.0051602269522845745, -0.018350474536418915, -0.0013681822456419468, -1.0253841876983643, -4.768370445162873e-07, -5.960462772236497e-07, -7.259582343976945e-05, -0.00017510310863144696, -1.526941180229187, -0.006876020226627588], "finish_reason": "stop"}], "metrics": {"energy": 201.91205941772466, "energy_per_token": 1.194745913714347, "time": 7.150015, "time_per_token": 0.042307781065088756}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise FileNotFoundError('The specified directory does not exist')\n\n    zip_name = os.path.join(directory, 'files.zip')\n\n    if not glob.glob(os.path.join(directory, '*')):\n        return None\n\n    with zipfile.ZipFile(zip_name, 'w') as zipf:\n        for filename in glob.glob(os.path.join(directory, '*')):\n            zipf.write(filename, os.path.relpath(filename, directory))\n    return zip_name", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "The", " specified", " directory", " does", " not", " exist", "')", "\n", "\n", "    ", "zip", "_", "name", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", "\n", "\n", "    ", "if", " not", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "*", "'))", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "name", ",", " '", "w", "')", " as", " zip", "f", ":", "\n", "        ", "for", " filename", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "*", "'))", ":", "\n", "            ", "zip", "f", ".", "write", "(", "filename", ",", " os", ".", "path", ".", "rel", "path", "(", "filename", ",", " directory", "))", "\n", "    ", "return", " zip", "_", "name", "\n", "\n", "def"], "logprobs": [-1.161291241645813, -0.10425037145614624, -0.03928108140826225, -3.731181277544238e-05, -0.0005763299996033311, -0.015057121403515339, -0.6041281223297119, -0.0009501233580522239, -0.0029584472067654133, -0.008017381653189659, -0.027650531381368637, -0.00353723275475204, -0.03625163063406944, -0.00374984135851264, -0.00017689094238448888, -8.451581379631534e-05, -1.7318298816680908, -1.5355451107025146, -0.3812941312789917, -0.04856700077652931, -0.05257222428917885, -0.0007857572636567056, -0.007244508247822523, -0.5683274269104004, -0.0022471908014267683, -0.33694222569465637, -0.0004102342063561082, -1.6577224731445312, -0.09009628742933273, -1.582797646522522, -0.005103536881506443, -1.4011492729187012, -8.666139910928905e-05, -0.002104212762787938, -0.006754186935722828, -0.07143339514732361, -0.008104179054498672, -0.02022629603743553, -0.0021578615996986628, -0.030630851164460182, -0.010111772455275059, -0.004262528847903013, -9.250213042832911e-05, -0.0002300474588992074, -0.012626232579350471, -0.8949419856071472, -0.00018153927521780133, -2.102966785430908, -0.5862090587615967, -1.0688973665237427, -0.0003922408213838935, -0.0067985886707901955, -0.025688914582133293, -0.2943091094493866, -0.0007485924870707095, -0.00024125049822032452, -0.002805228577926755, -0.000933926145080477, -0.0013172292383387685, -0.004009186290204525, -0.0050063966773450375, -0.04234377667307854, -0.16095365583896637, -0.1200251504778862, -0.01365451980382204, -0.0552414208650589, -0.0018743580440059304, -0.11741908639669418, -0.15428020060062408, -0.010412298142910004, -0.07552147656679153, -0.00020776021119672805, -0.2850494384765625, -0.11303956806659698, -0.00012242044613230973, -1.5139465176616795e-05, -0.0031666632276028395, -0.0010488491971045732, -0.0001486429391661659, -0.003189597511664033, -0.015126870945096016, -0.00016091958968900144, -0.000271879427600652, -0.00035482310340739787, -0.07945320010185242, -0.01826268807053566, -0.26750120520591736, -0.00013493580627255142, -0.2758413255214691, -2.8680996894836426, -0.0008774721063673496, -0.003427822608500719, -0.004431427922099829, -0.0392230823636055, -1.1361521482467651, -0.00083078199531883, -0.055058665573596954, -2.062299427052494e-05, -0.028726624324917793, -0.0025259514804929495, -0.028940431773662567, -0.0006405447493307292, -8.940656698541716e-06, -0.002710837172344327, -0.00018368464952800423, -0.0005063920398242772, -0.0012825843878090382, -0.0003524397616274655, -0.008185530081391335, -0.041332803666591644, -0.008702566847205162, -0.0009240409708581865, -0.002557104919105768, -0.003511455375701189, -0.15998905897140503, -0.001672775368206203, -1.0132738680113107e-05, -0.00016973962192423642, -0.000200609109015204, -0.00646523293107748, -0.8991453051567078, -0.3432482182979584, -0.0006438804557546973, -0.00034517052699811757, -0.0069085778668522835, -0.7003251910209656, -7.450303382938728e-05, -0.00032276666024699807, -0.007608364336192608, -0.32128438353538513, -0.1548399180173874, -0.024333734065294266, -0.016592953354120255, -2.195037364959717, -0.03748432919383049, -0.12796542048454285, -0.0009560781763866544, -2.1815061700181104e-05, -0.511540412902832, -0.01829698495566845, -1.0406701564788818], "finish_reason": "stop"}], "metrics": {"energy": 137.30842939853667, "energy_per_token": 0.9738186482165722, "time": 5.899084, "time_per_token": 0.04183747517730497}}
{"outputs": [{"text": "# Check the path exists\n    if not os.path.isdir(directory):\n        raise FileNotFoundError(directory)\n\n    # Get all files\n    file_names = glob.glob(os.path.join(directory, '*'))\n    files = [f for f in file_names if not os.path.isdir(f)]\n\n    # Check if there are files to zip\n    if not files:\n        return None\n\n    # Create a new zipfile in the current directory\n    with zipfile.ZipFile('files.zip', 'w') as zip_file:\n        for file_name in files:\n            zip_file.write(file_name)\n\n    # Return the path to the generated zip file\n    return os.path.join(os.getcwd(), 'files.zip')", "tokens": ["#", " Check", " the", " path", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "directory", ")", "\n", "\n", "    ", "#", " Get", " all", " files", "\n", "    ", "file", "_", "names", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "*", "'))", "\n", "    ", "files", " =", " [", "f", " for", " f", " in", " file", "_", "names", " if", " not", " os", ".", "path", ".", "is", "dir", "(", "f", ")]", "\n", "\n", "    ", "#", " Check", " if", " there", " are", " files", " to", " zip", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "#", " Create", " a", " new", " zip", "file", " in", " the", " current", " directory", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "('", "files", ".", "zip", "'", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "        ", "for", " file", "_", "name", " in", " files", ":", "\n", "            ", "zip", "_", "file", ".", "write", "(", "file", "_", "name", ")", "\n", "\n", "    ", "#", " Return", " the", " path", " to", " the", " generated", " zip", " file", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "os", ".", "get", "c", "wd", "()", ",", " '", "files", ".", "zip", "')", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.0248374938964844, -1.2125849723815918, -3.2615761756896973, -3.201969623565674, -0.8539476990699768, -0.3594096899032593, -0.0016770598012953997, -0.1554606407880783, -0.04413490742444992, -0.011804606765508652, -1.6927575416048057e-05, -0.0002244459028588608, -0.020339490845799446, -1.290873646736145, -0.002534393919631839, -0.00021526881027966738, -0.0016517103649675846, -0.0030677898321300745, -0.0062892138957977295, -0.002978058299049735, -0.053250618278980255, -0.005147062707692385, -0.00020275443966966122, -6.210611172718927e-05, -0.6024913787841797, -1.6635465621948242, -0.487145334482193, -0.005328381434082985, -0.18069963157176971, -0.0009397619287483394, -0.2517279386520386, -1.5325945615768433, -0.6363205909729004, -0.5067358613014221, -2.241767406463623, -0.0005585778853856027, -1.9898409843444824, -0.09105231612920761, -2.0791261196136475, -0.013102976605296135, -0.16918283700942993, -0.00010966652916977182, -0.013269330374896526, -0.03183608502149582, -0.3304489552974701, -0.0003500564198475331, -0.0003077510336879641, -0.003792001400142908, -0.003532243659719825, -0.0021175360307097435, -0.0062020220793783665, -0.002259679604321718, -0.19856707751750946, -0.6239750385284424, -0.15877866744995117, -0.009016039781272411, -1.1926857233047485, -2.2564141750335693, -0.10390456765890121, -0.6120310425758362, -0.7508731484413147, -0.052288517355918884, -0.001032177242450416, -0.0005964645533822477, -0.007699810434132814, -5.483612312673358e-06, -1.168244216387393e-05, -0.013814433477818966, -1.3985905647277832, -0.0466257743537426, -0.0009895433904603124, -3.731181277544238e-05, -0.02076295018196106, -0.0006098079611547291, -0.06918374449014664, -9.417090768693015e-05, -0.00695013115182519, -0.0327797569334507, -0.030864248052239418, -0.20825928449630737, -0.0002489972102921456, -0.34815728664398193, -0.9777421951293945, -0.5257583856582642, -0.7542587518692017, -0.08987784385681152, -0.927459716796875, -0.3657854199409485, -0.4580024182796478, -0.06867947429418564, -0.0002127659390680492, -0.013975849375128746, -0.40671753883361816, -0.01770150102674961, -0.003406200557947159, -0.007275041658431292, -0.0008917645900510252, -0.04221224784851074, -0.07709518074989319, -0.0015937496209517121, -0.02108772285282612, -0.0004389514506328851, -0.11519555002450943, -0.9865476489067078, -1.0591810941696167, -2.0436837673187256, -0.1285962462425232, -2.1029016971588135, -3.1364622116088867, -0.36522090435028076, -1.504448413848877, -0.1635613888502121, -0.20906007289886475, -0.001370087033137679, -1.3918743133544922, -0.1391756534576416, -0.00012110930401831865, -1.3112935448589269e-05, -0.0020342625211924314, -0.001401038491167128, -0.00011681827891152352, -0.5894283652305603, -0.033922601491212845, -0.002354351570829749, -4.3748852476710454e-05, -0.007397876121103764, -4.577531944960356e-05, -0.11961188912391663, -0.013191921636462212, -0.3016450107097626, -9.703165414975956e-05, -0.5842182636260986, -0.4246230125427246, -0.2722625434398651, -0.00070296844933182, -0.002133119385689497, -0.009866989217698574, -0.0858709067106247, -0.4211706817150116, -1.2556495666503906, -0.2097013145685196, -0.0009949024533852935, -0.003709936048835516, -0.00020251607929822057, -0.00208125333301723, -0.0021512003149837255, -0.0809427946805954, -0.00048494499060325325, -0.022333301603794098, -4.625213477993384e-05, -0.00037126801908016205, -0.0002673506969586015, -0.007531699258834124, -0.00023958197562023997, -0.00016199229867197573, -0.23409949243068695, -0.012609045952558517, -0.1532781571149826, -0.01231047511100769, -1.0000672340393066, -0.2397010326385498, -0.04210950434207916, -0.18916438519954681, -0.10541688650846481, -0.00850294716656208, -2.053673505783081, -0.02885136939585209, -0.1297713667154312, -0.03628899157047272, -0.0006912940880283713, -0.03051847033202648, -0.5131460428237915, -3.4570634852570947e-06, -0.014363234862685204, -0.0013881819322705269, -0.3004961609840393, -0.06610342115163803, -0.8217758536338806, -0.0015849421033635736, -1.1369150876998901, -0.0004904259694740176, -2.861018856492592e-06, -0.0006144542712718248, -0.000860201776959002, -0.036527737975120544, -0.0021997320000082254, -0.0004689785710070282, -1.9192511899746023e-05, -0.00044800734031014144, -0.9164021015167236, -4.768370445162873e-07, -8.344646857949556e-07, -2.2411095415009186e-05, -0.0002848696312867105, -0.1492162048816681], "finish_reason": "stop"}], "metrics": {"energy": 190.6166415643694, "energy_per_token": 0.9775212387916379, "time": 8.206367, "time_per_token": 0.04208393333333334}}
{"outputs": [{"text": "path = None\n    if os.path.exists(directory):\n        file_list = glob.glob(directory + \"/**\", recursive=True)\n        if file_list:\n            path = f\"{directory}.zip\"\n            with zipfile.ZipFile(path, 'w') as zip_file:\n                for file in file_list:\n                    zip_file.write(file)\n    return path", "tokens": ["path", " =", " None", "\n", "    ", "if", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "file", "_", "list", " =", " glob", ".", "glob", "(", "directory", " +", " \"", "/**", "\"", ",", " recursive", "=", "True", ")", "\n", "        ", "if", " file", "_", "list", ":", "\n", "            ", "path", " =", " f", "\"", "{", "directory", "}", ".", "zip", "\"", "\n", "            ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "path", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "                ", "for", " file", " in", " file", "_", "list", ":", "\n", "                ", "    ", "zip", "_", "file", ".", "write", "(", "file", ")", "\n", "    ", "return", " path", "\n", "\n", "#"], "logprobs": [-2.328306198120117, -0.1294996291399002, -0.6007551550865173, -0.014747768640518188, -0.3142995834350586, -0.6927745938301086, -0.47576916217803955, -3.707340147229843e-05, -0.0017617909470573068, -0.014274041168391705, -0.6548433303833008, -0.0014417502097785473, -0.004015123005956411, -0.07500623911619186, -0.01756797730922699, -0.013538331724703312, -2.4152464866638184, -0.08471672981977463, -1.1154829263687134, -0.00788918323814869, -0.1839979588985443, -8.153582894010469e-05, -0.014667772687971592, -0.021337127313017845, -1.2285783290863037, -0.09639160335063934, -1.6436270475387573, -1.6367313861846924, -1.3604594469070435, -0.016281144693493843, -0.009337090887129307, -0.020964108407497406, -0.24781271815299988, -0.005182285793125629, -0.009304611943662167, -0.051581282168626785, -0.74062579870224, -0.6862064599990845, -6.651657167822123e-05, -4.339123915997334e-05, -0.0398409441113472, -0.024058310315012932, -0.004211841616779566, -1.866146206855774, -0.01835854910314083, -2.1731820106506348, -0.1355609893798828, -0.041302379220724106, -0.05417046323418617, -1.2092092037200928, -0.16811300814151764, -0.0011738798348233104, -0.00036507140612229705, -0.01219401229172945, -0.019353486597537994, -0.35172387957572937, -0.08108767867088318, -9.48860906646587e-05, -1.6331539882230572e-05, -0.003031541593372822, -0.001259487122297287, -0.00020692592079285532, -0.006457652430981398, -0.03749914467334747, -0.0012360322289168835, -0.4663483500480652, -0.010660485364496708, -0.4693845212459564, -0.00016473367577418685, -0.35396453738212585, -0.3910927176475525, -0.599854052066803, -0.0007906410028226674, -0.0032680220901966095, -0.002698829397559166, -0.030114158987998962, -0.1672915518283844, -0.21635375916957855, -0.002696927171200514, -3.516612196108326e-05, -7.867782187531702e-06, -0.001902795396745205, -0.001743821892887354, -0.0005399914807640016, -0.0014096095692366362, -0.38786354660987854, -0.001328420010395348, -0.005500538740307093, -4.339123915997334e-05, -0.000300600629998371, -0.00014745102089364082, -0.007168998476117849, -0.22328859567642212, -0.004034950863569975, -0.4245036244392395, -0.1337970793247223, -0.0050125643610954285, -0.4355835020542145, -0.014384386129677296, -2.5494985580444336], "finish_reason": "stop"}], "metrics": {"energy": 124.53371575069424, "energy_per_token": 1.2453371575069425, "time": 4.001606, "time_per_token": 0.04001606}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise FileNotFoundError(f'The directory {directory} does not exist.')\n\n    files = glob.glob(os.path.join(directory, '*'))\n\n    if not files:\n        return None\n\n    with zipfile.ZipFile('files.zip', mode='w') as zip:\n        for filename in files:\n            zip.write(filename, arcname=filename)\n    return os.path.abspath('files.zip')", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "'", "The", " directory", " {", "directory", "}", " does", " not", " exist", ".", "')", "\n", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "*", "'))", "\n", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "('", "files", ".", "zip", "'", ",", " mode", "='", "w", "')", " as", " zip", ":", "\n", "        ", "for", " filename", " in", " files", ":", "\n", "            ", "zip", ".", "write", "(", "filename", ",", " arc", "name", "=", "filename", ")", "\n", "    ", "return", " os", ".", "path", ".", "ab", "sp", "ath", "('", "files", ".", "zip", "')", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.161291241645813, -0.10425037145614624, -0.03928108140826225, -3.731181277544238e-05, -0.0005763299996033311, -0.015057121403515339, -0.6041281223297119, -0.0009501233580522239, -0.0029584472067654133, -0.008017381653189659, -0.027650531381368637, -0.00353723275475204, -0.03625163063406944, -0.00374984135851264, -0.00017689094238448888, -8.451581379631534e-05, -0.7036335468292236, -0.6522549390792847, -1.1877553462982178, -1.633665919303894, -0.8123177886009216, -0.3594885766506195, -0.003918114583939314, -0.021824317052960396, -0.14914371073246002, -0.0015594713622704148, -0.026687731966376305, -1.2385680675506592, -0.03159402310848236, -0.0022693139035254717, -0.33459240198135376, -0.000447530735982582, -1.3506340980529785, -0.1973077952861786, -0.1658850908279419, -7.70062324590981e-05, -0.030131278559565544, -0.024244843050837517, -0.41388753056526184, -0.00047922570956870914, -0.00010799778101500124, -0.00501849502325058, -0.003671573242172599, -0.001303180935792625, -0.0033299254719167948, -0.001803796854801476, -0.06289414316415787, -0.4980991780757904, -0.11676239967346191, -0.017245693132281303, -1.3949490785598755, -9.381330892210826e-05, -0.16361454129219055, -0.3708927631378174, -0.023351311683654785, -0.00946238823235035, -0.026377776637673378, -0.0006231511943042278, -0.08405672758817673, -0.0589764378964901, -0.006214105989784002, -0.03983556106686592, -0.00016616393986623734, -1.102365255355835, -0.08886703103780746, -0.0002805792901199311, -1.6331539882230572e-05, -0.0029673613607883453, -0.0008811643347144127, -0.00014077626110520214, -1.788580298423767, -0.036255884915590286, -0.0016417133156210184, -3.6000557884108275e-05, -0.004313688259571791, -4.5060096454108134e-05, -2.614945650100708, -0.013485643081367016, -0.010324757546186447, -0.309566855430603, -0.00020752183627337217, -0.502639651298523, -1.794466495513916, -0.0028638325165957212, -0.005714745726436377, -0.03642544150352478, -3.16740345954895, -0.000797192333266139, -0.00535174086689949, -0.0006244616815820336, -0.0017434648470953107, -0.003262199927121401, -0.38340702652931213, -0.0034255655482411385, -0.002271454781293869, -0.00033623288618400693, -0.0048184944316744804, -0.9281245470046997, -2.125401020050049, -0.0018950614612549543, -0.0034448110964149237, -1.1530859470367432, -0.5847530364990234, -0.015131332911550999, -2.500525951385498, -0.1327369213104248, -1.7165260314941406, -1.1920858014491387e-05, -0.017947886139154434, -0.0026614980306476355, -1.3452156782150269, -1.3112935448589269e-05, -1.9192511899746023e-05, -0.15429522097110748, -0.0338679775595665, -0.001157329068519175, -3.158996332786046e-05, -0.00048160876031033695, -1.3819159269332886, -4.768370445162873e-07, -1.311301275563892e-06, -3.85038583772257e-05, -0.00020668754586949944, -0.1566358208656311], "finish_reason": "stop"}], "metrics": {"energy": 125.67641569709777, "energy_per_token": 1.0135194814282078, "time": 5.061662, "time_per_token": 0.04081985483870968}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise FileNotFoundError\n\n    file_paths = glob.glob(f\"{directory}/*\")\n    zip_name = \"files.zip\"\n    zip_path = os.path.join(directory, zip_name)\n\n    try:\n        with zipfile.ZipFile(zip_path, 'w') as zip_file:\n            for file_path in file_paths:\n                zip_file.write(file_path)\n    except Exception as e:\n        print(f\"Error zipping files: {e}\")\n    else:\n        print(f\"Files zipped successfully to {zip_path}\")\n        return zip_path", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "\n", "\n", "    ", "file", "_", "paths", " =", " glob", ".", "glob", "(", "f", "\"", "{", "directory", "}", "/*", "\"", ")", "\n", "    ", "zip", "_", "name", " =", " \"", "files", ".", "zip", "\"", "\n", "    ", "zip", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " zip", "_", "name", ")", "\n", "\n", "    ", "try", ":", "\n", "        ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "path", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "            ", "for", " file", "_", "path", " in", " file", "_", "paths", ":", "\n", "                ", "zip", "_", "file", ".", "write", "(", "file", "_", "path", ")", "\n", "    ", "except", " Exception", " as", " e", ":", "\n", "        ", "print", "(", "f", "\"", "Error", " z", "ipping", " files", ":", " {", "e", "}\"", ")", "\n", "    ", "else", ":", "\n", "        ", "print", "(", "f", "\"", "Files", " z", "ipped", " successfully", " to", " {", "zip", "_", "path", "}\"", ")", "\n", "        ", "return", " zip", "_", "path"], "logprobs": [-1.161291241645813, -0.10425037145614624, -0.03928108140826225, -3.731181277544238e-05, -0.0005763299996033311, -0.015057121403515339, -0.6041281223297119, -0.0009501233580522239, -0.0029584472067654133, -0.008017381653189659, -0.027650531381368637, -0.00353723275475204, -0.03625163063406944, -0.00374984135851264, -0.00017689094238448888, -8.451581379631534e-05, -1.258509874343872, -0.4305676519870758, -0.00032729512895457447, -1.9710749387741089, -0.10492595285177231, -0.7267853617668152, -0.00896228477358818, -0.2593393623828888, -7.772143726469949e-05, -0.02191178873181343, -0.008709066547453403, -1.5857899188995361, -0.5461391806602478, -0.0023068978916853666, -0.003846272360533476, -0.14376400411128998, -0.038734208792448044, -0.1695111244916916, -0.09149136394262314, -0.014295664615929127, -0.545714795589447, -1.5542263984680176, -0.045926135033369064, -1.6418014764785767, -0.007059511728584766, -1.2698252201080322, -0.019221704453229904, -0.006718664430081844, -8.141662692651153e-05, -9.333651541965082e-05, -0.016409561038017273, -0.827351987361908, -0.6462321877479553, -0.016612298786640167, -0.3651553690433502, -0.0032206117175519466, -0.3877389132976532, -3.8980677345534787e-05, -0.0015531631652265787, -0.006017543841153383, -0.01141634676605463, -0.001937180757522583, -0.024991091340780258, -0.0027717051561921835, -0.008889622986316681, -7.223821739898995e-05, -5.0424259825376794e-05, -0.00022110878489911556, -0.005517847836017609, -0.29022276401519775, -0.00020716428116429597, -2.645099401473999, -0.0003071551618631929, -0.003492448478937149, -0.0035469732247292995, -0.30537694692611694, -0.09302733838558197, -6.8662193370983e-05, -1.168244216387393e-05, -0.0027528032660484314, -0.0010680215200409293, -0.00010418349120300263, -0.0009168949909508228, -0.014433855190873146, -7.235741941258311e-05, -0.003423308255150914, -0.000590865034610033, -0.7232019901275635, -0.010945518501102924, -0.2779541313648224, -8.868777513271198e-05, -0.13363084197044373, -0.13724426925182343, -0.13379812240600586, -0.0004051103023812175, -0.0032221563160419464, -0.004698546137660742, -0.02763383463025093, -0.12107710540294647, -0.1278606355190277, -0.007420714013278484, -0.00030250742565840483, -0.005016715731471777, -1.2159273865108844e-05, -8.106198947643861e-06, -0.00045193947153165936, -0.0011807858245447278, -0.0020960045512765646, -0.4620801508426666, -0.0015689932042732835, -0.016920607537031174, -6.067568756407127e-05, -0.0003134713042527437, -0.00015948931104503572, -0.00842575915157795, -1.645074735279195e-05, -0.0001652104256208986, -0.3015379011631012, -0.004866540897637606, -1.057220458984375, -0.00637900410220027, -1.5979846715927124, -0.16153013706207275, -0.29591256380081177, -0.00016890530241653323, -0.013185333460569382, -0.0010783816687762737, -0.2859024703502655, -0.019055869430303574, -0.27396124601364136, -0.07757239043712616, -0.46797099709510803, -2.2936768531799316, -0.001783329644240439, -0.25040191411972046, -0.13180260360240936, -0.0019145745318382978, -0.1412678062915802, -0.025978408753871918, -0.01262693852186203, -0.013019200414419174, -2.4182944297790527, -0.8173292875289917, -7.915183232398704e-05, -0.003509673522785306, -0.0016726563917472959, -1.0579590797424316, -0.003299984149634838, -0.09690070152282715, -0.010384573601186275, -1.7621309757232666, -0.2537899911403656, -0.0012367465533316135, -0.5854621529579163, -0.7095434665679932, -0.3452130854129791, -0.014223389327526093, -0.0001062098381225951, -0.0613020621240139, -0.08163923770189285, -0.022805092856287956, -0.02287616766989231, -0.7692155838012695, -0.04839029163122177, -0.06685889512300491, -2.3007127310847864e-05, -0.00803299155086279], "finish_reason": "stop"}], "metrics": {"energy": 156.92712832736962, "energy_per_token": 0.9627431185728197, "time": 6.730461, "time_per_token": 0.04129117177914111}}
{"outputs": [{"text": "if not os.path.isdir(directory):\n        raise FileNotFoundError('Path not found')\n\n    files = glob.glob(os.path.join(directory, \"*\"))\n\n    if len(files) == 0:\n        return None\n\n    zip_path = os.path.join(directory, \"files.zip\")\n    with zipfile.ZipFile(zip_path, 'w', compression=zipfile.ZIP_DEFLATED) as zip_file:\n        for file_name in files:\n            zip_file.write(file_name)\n\n    return zip_path", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "Path", " not", " found", "')", "\n", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " \"", "*", "\"", "))", "\n", "\n", "    ", "if", " len", "(", "files", ")", " ==", " ", "0", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "zip", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " \"", "files", ".", "zip", "\"", ")", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "path", ",", " '", "w", "'", ",", " compression", "=", "zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", " as", " zip", "_", "file", ":", "\n", "        ", "for", " file", "_", "name", " in", " files", ":", "\n", "            ", "zip", "_", "file", ".", "write", "(", "file", "_", "name", ")", "\n", "\n", "    ", "return", " zip", "_", "path", "\n", "\n", "if"], "logprobs": [-1.161291241645813, -0.10425037145614624, -0.03928108140826225, -3.731181277544238e-05, -0.0005763299996033311, -0.015057121403515339, -0.793020486831665, -0.004582973662763834, -0.00027640812913887203, -0.0018951804377138615, -0.0074036745354533195, -0.020623529329895973, -0.0034641751553863287, -0.05357450246810913, -0.005014818161725998, -0.000198821333469823, -8.284702198579907e-05, -1.580963373184204, -3.8030436038970947, -2.248824119567871, -0.1798131763935089, -0.4760931134223938, -0.0045648179948329926, -0.49971678853034973, -0.0003906917118001729, -1.528370976448059, -0.1476251780986786, -0.13337965309619904, -6.437094270950183e-05, -0.023138171061873436, -0.0222679004073143, -0.3550579845905304, -0.0005859803641214967, -0.00018082413589581847, -0.004415287170559168, -0.005053485278040171, -0.002072569215670228, -0.004675527568906546, -0.0025330858770757914, -2.914827585220337, -0.34257784485816956, -0.20196764171123505, -0.036443259567022324, -0.017469581216573715, -1.0984610319137573, -0.00013302871957421303, -0.1674705445766449, -0.9925032258033752, -0.0006044468027539551, -0.001311514643020928, -0.010394248180091381, -0.27572232484817505, -0.0006775943911634386, -0.0027437680400907993, -0.004706851206719875, -0.03116842359304428, -0.0012665116228163242, -0.04824535548686981, -0.05311576649546623, -0.0037627865094691515, -0.08993123471736908, -0.0001722425949992612, -1.1161983013153076, -0.12908922135829926, -1.2169296741485596, -0.004338851664215326, -0.11189790070056915, -1.1086402082582936e-05, -0.001142445020377636, -0.0010569468140602112, -0.031713444739580154, -0.005020867567509413, -0.0197717547416687, -0.006441425997763872, -0.7533167004585266, -0.01528056152164936, -0.002998025855049491, -7.056941103655845e-05, -9.727005090098828e-05, -0.00017641419253777713, -0.00603673979640007, -0.6422708034515381, -0.26765868067741394, -0.09009476751089096, -4.458328112377785e-05, -1.0490362910786644e-05, -0.002313201315701008, -0.0008590107318013906, -0.00013839241000823677, -0.0017953482456505299, -0.006691784597933292, -0.00014447122521232814, -0.00013076403411105275, -0.00032491172896698117, -0.6865947842597961, -0.01233084499835968, -1.4242157936096191, -0.00016139635408762842, -0.8752146363258362, -0.01403791643679142, -0.0021030232310295105, -6.318072337307967e-06, -1.4185804502631072e-05, -0.0018196230521425605, -0.011084526777267456, -0.0012493670219555497, -0.004308465868234634, -0.00026603974401950836, -0.0025403392501175404, -0.045331843197345734, -0.0001805857609724626, -0.1954856812953949, -0.2650732100009918, -0.1564495861530304, -0.0005285535007715225, -0.0014771036803722382, -0.0038941281381994486, -0.025183377787470818, -0.11645135283470154, -1.6959575414657593, -2.1367027759552, -0.0017515569925308228, -0.010135491378605366, -0.0005989664932712913, -0.0015748253790661693, -0.002394905546680093, -0.18816304206848145, -0.0009085579658858478, -0.006803443189710379, -4.768258077092469e-05, -0.00015960850578267127, -0.0001928620331455022, -0.008280470035970211, -0.0021658313926309347, -7.629103492945433e-05, -0.3000774085521698, -0.009595463052392006, -0.3015664517879486, -0.010075423866510391, -0.03299223631620407, -0.08840063959360123, -5.400034933700226e-05, -6.294052582234144e-05, -0.574239194393158, -0.010647629387676716, -0.6388058662414551], "finish_reason": "stop"}], "metrics": {"energy": 153.8133198318481, "energy_per_token": 1.0535158892592336, "time": 6.1122203, "time_per_token": 0.04186452260273973}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise FileNotFoundError(directory)\n\n    files = glob.glob(os.path.join(directory, '*'))\n    if not files:\n        return None\n    zip_name = 'files.zip'\n    zip_path = os.path.join(directory, zip_name)\n\n    with zipfile.ZipFile(zip_path, 'w') as zip_file:\n        for file in files:\n            zip_file.write(file)\n\n    return zip_path", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "directory", ")", "\n", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "*", "'))", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "return", " None", "\n", "    ", "zip", "_", "name", " =", " '", "files", ".", "zip", "'", "\n", "    ", "zip", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " zip", "_", "name", ")", "\n", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "path", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "zip", "_", "file", ".", "write", "(", "file", ")", "\n", "\n", "    ", "return", " zip", "_", "path", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.161291241645813, -0.10425037145614624, -0.03928108140826225, -3.731181277544238e-05, -0.0005763299996033311, -0.015057121403515339, -0.6041281223297119, -0.0009501233580522239, -0.0029584472067654133, -0.008017381653189659, -0.027650531381368637, -0.00353723275475204, -0.03625163063406944, -0.00374984135851264, -0.00017689094238448888, -8.451581379631534e-05, -0.7036335468292236, -1.5873249769210815, -0.23129315674304962, -0.007395036518573761, -0.36574167013168335, -0.0003413571394048631, -1.4409040212631226, -0.15072596073150635, -0.16059137880802155, -6.925819616299123e-05, -0.021018855273723602, -0.017163317650556564, -0.37314528226852417, -0.0008101756684482098, -8.964136941358447e-05, -0.0038327344227582216, -0.004681697580963373, -0.0014855550834909081, -0.003760767402127385, -0.0024173820856958628, -0.18798169493675232, -0.4321707487106323, -0.12878701090812683, -0.010755781084299088, -0.3071633279323578, -0.3017045259475708, -0.4462237060070038, -0.02838311903178692, -0.007129584904760122, -0.03234173357486725, -0.0007083290838636458, -0.05826536938548088, -0.07910476624965668, -0.008741564117372036, -2.3969593048095703, -1.603448510169983, -0.12238830327987671, -1.228305459022522, -0.0036284581292420626, -0.4776301085948944, -0.022402895614504814, -0.00559929059818387, -0.0001392267586197704, -0.00013386306818574667, -0.010001663118600845, -0.21038734912872314, -1.002742052078247, -0.03972695767879486, -0.2000228464603424, -0.001611721352674067, -0.02739771082997322, -1.2040065485052764e-05, -0.0005760917556472123, -0.008182219229638577, -0.006555243860930204, -0.004032338969409466, -0.012179291807115078, -0.0022889384999871254, -0.004721326753497124, -4.708655978902243e-05, -2.634490556374658e-05, -0.00016950124700088054, -0.004033525940030813, -1.0305825471878052, -0.0003331344632897526, -0.22196468710899353, -0.07252250611782074, -4.5060096454108134e-05, -9.059865078597795e-06, -0.0027506633196026087, -0.0008996253600344062, -0.00015805903240107, -0.0015983913326635957, -0.006842159666121006, -6.067568756407127e-05, -0.0022884628269821405, -0.0003833036171272397, -0.07106972485780716, -0.008744518272578716, -0.18902723491191864, -8.928377064876258e-05, -0.18943221867084503, -0.14849643409252167, -0.14854349195957184, -0.00037651124875992537, -0.0024473497178405523, -0.002133595058694482, -0.022710122168064117, -0.10130037367343903, -0.33461594581604004, -0.006528952158987522, -0.00041166413575410843, -0.0010382506297901273, -0.0015306673012673855, -0.3594275116920471, -0.0010630200849846005, -0.016114000231027603, -5.0424259825376794e-05, -0.0002786724944598973, -0.00013457823661156, -0.0064796824008226395, -0.3855050206184387, -0.008213433437049389, -0.18228623270988464, -0.006818361580371857, -0.04573289677500725, -0.08644170314073563, -2.3483953555114567e-05, -0.015708398073911667, -1.0811958312988281, -3.576278118089249e-07, -8.344646857949556e-07, -2.0861407392658293e-05, -0.00017534149810671806, -0.25055718421936035], "finish_reason": "stop"}], "metrics": {"energy": 137.20586343288417, "energy_per_token": 1.0473730033044593, "time": 5.4771175, "time_per_token": 0.0418100572519084}}
{"outputs": [{"text": "path = os.path.abspath(directory)\n    if not os.path.exists(path):\n        raise FileNotFoundError(f\"Directory {path} not found.\")\n\n    zip_file_name = os.path.join(path, 'files.zip')\n    file_list = [os.path.relpath(f, os.path.dirname(zip_file_name)) for f in glob.glob(os.path.join(path, '*'))]\n    if len(file_list) == 0:\n        return None\n\n    with zipfile.ZipFile(zip_file_name, 'w', zipfile.ZIP_DEFLATED) as zipf:\n        for f in file_list:\n            zipf.write(f)", "tokens": ["path", " =", " os", ".", "path", ".", "ab", "sp", "ath", "(", "directory", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "Directory", " {", "path", "}", " not", " found", ".", "\"", ")", "\n", "\n", "    ", "zip", "_", "file", "_", "name", " =", " os", ".", "path", ".", "join", "(", "path", ",", " '", "files", ".", "zip", "')", "\n", "    ", "file", "_", "list", " =", " [", "os", ".", "path", ".", "rel", "path", "(", "f", ",", " os", ".", "path", ".", "dirname", "(", "zip", "_", "file", "_", "name", "))", " for", " f", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "path", ",", " '", "*", "'))", "]", "\n", "    ", "if", " len", "(", "file", "_", "list", ")", " ==", " ", "0", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "file", "_", "name", ",", " '", "w", "'", ",", " zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", " as", " zip", "f", ":", "\n", "        ", "for", " f", " in", " file", "_", "list", ":", "\n", "            ", "zip", "f", ".", "write", "(", "f", ")<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-2.328306198120117, -0.1294996291399002, -1.4882330894470215, -0.00015686711412854493, -0.01834462210536003, -0.019892830401659012, -1.7975648641586304, -1.8596476365928538e-05, -3.707340147229843e-05, -0.009720610454678535, -0.06094130501151085, -0.0037905762437731028, -0.030602294951677322, -0.19973790645599365, -0.40312522649765015, -0.2163306176662445, -0.04169727489352226, -0.0008771148277446628, -0.0004409771354403347, -0.007888473570346832, -0.5051997900009155, -0.0004944770480506122, -0.04608666151762009, -0.008705521002411842, -0.01951482892036438, -0.0035409152042120695, -0.03945310786366463, -0.004023671615868807, -0.00026079590315930545, -0.0001426833332516253, -0.5497477054595947, -0.4936678111553192, -0.5163923501968384, -1.0998740196228027, -0.8481027483940125, -0.28488898277282715, -0.02184239588677883, -1.0234448909759521, -0.011458891443908215, -1.1501235961914062, -0.04512413591146469, -0.0006724718841724098, -0.007157518062740564, -0.4667396545410156, -0.0003829461056739092, -2.089323043823242, -0.10881143063306808, -1.6796820163726807, -0.5071712136268616, -1.6586273908615112, -0.00777989299967885, -0.9350457191467285, -9.059865078597795e-06, -0.001500672078691423, -0.0006468587671406567, -0.08185246586799622, -0.0048315441235899925, -0.14175818860530853, -0.003948393743485212, -0.467373251914978, -0.012901761569082737, -0.006231284234672785, -0.00010477947944309562, -0.0003483880718704313, -0.013142508454620838, -0.4069848954677582, -1.9794598817825317, -0.012595390900969505, -0.9834665060043335, -0.007976227439939976, -2.060436964035034, -0.7356492280960083, -5.960446742392378e-06, -0.0004012971476186067, -0.0001915509783430025, -1.2394800186157227, -4.9470632802695036e-05, -0.0020770898554474115, -1.6325733661651611, -0.03518947586417198, -2.876558780670166, -6.925819616299123e-05, -0.006825820542871952, -0.0016971721779555082, -0.6382507681846619, -0.0016690860502421856, -0.6414570808410645, -0.000390215078368783, -5.519237674889155e-05, -5.400034933700226e-05, -0.00032944019767455757, -0.006069561466574669, -0.2706282436847687, -0.002858958672732115, -0.005245374981313944, -0.04008342698216438, -5.566918844124302e-05, -0.0916871652007103, -0.042942699044942856, -0.23445448279380798, -0.0002653246629051864, -7.807903602952138e-05, -0.00039736481267027557, -0.0066756801679730415, -0.0009193961159326136, -0.011554229073226452, -0.0016315970569849014, -0.14640000462532043, -0.5652236342430115, -0.10466648638248444, -1.3648127317428589, -0.008627994917333126, -0.5362368226051331, -1.4940518140792847, -1.753476858139038, -0.0005501187406480312, -0.007055842317640781, -1.2755313036905136e-05, -2.4318398573086597e-05, -0.012200254015624523, -0.3241218030452728, -0.0005329619161784649, -0.004257187247276306, -0.007124021649360657, -0.03026348166167736, -0.002081372309476137, -0.09576103836297989, -0.08229172974824905, -0.011022747494280338, -0.33730149269104004, -0.00017307691450696439, -0.2362268716096878, -0.07510410994291306, -6.317892984952778e-05, -1.0132738680113107e-05, -0.0027046550530940294, -0.0007879013428464532, -9.7508447652217e-05, -0.00347961881197989, -0.011768791824579239, -0.00015448330668732524, -1.680836794548668e-05, -1.0251946150674485e-05, -3.6477376852417365e-05, -0.000560245884116739, -0.0859367623925209, -0.017120428383350372, -1.0431735515594482, -0.00015805903240107, -0.7421725988388062, -8.892617915989831e-05, -2.002696055569686e-05, -0.0015630420530214906, -0.0031171089503914118, -0.0014817459741607308, -0.0021063541062176228, -0.00026782741770148277, -0.0005993238883093, -0.07332167029380798, -0.0001245659514097497, -0.3177140951156616, -2.2611570358276367, -0.001023483811877668, -0.0013718727277591825, -0.002183198230341077, -0.16190625727176666, -0.897383987903595, -0.12962310016155243, -0.005850689951330423, -4.0531076592742465e-06, -5.960446742392378e-06, -0.0005694198189303279, -0.002554608043283224, -0.0017959432443603873, -0.0787968710064888, -0.0032298800069838762, -9.65590606938349e-06, -0.0004555141495075077, -0.0004985281848348677, -0.15053227543830872, -2.779893636703491, -1.4305104514278355e-06, -2.0265558760002023e-06, -4.482168878894299e-05, -0.00011240804451517761, -1.5115666389465332, -0.005359803792089224], "finish_reason": "stop"}], "metrics": {"energy": 198.6240937099456, "energy_per_token": 1.0621609289301905, "time": 7.7817473, "time_per_token": 0.04161362192513369}}
{"outputs": [{"text": "if not os.path.exists(directory):\n        raise FileNotFoundError(f\"{directory} does not exist\")\n\n    # create zip file\n    with zipfile.ZipFile(directory + os.sep + 'files.zip', 'w') as zip:\n        for file in glob.glob(directory + os.sep + '*'):\n            if os.path.isfile(file):\n                zip.write(file)\n\n    return directory + os.sep + 'files.zip'", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "\"", "{", "directory", "}", " does", " not", " exist", "\"", ")", "\n", "\n", "    ", "#", " create", " zip", " file", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "directory", " +", " os", ".", "sep", " +", " '", "files", ".", "zip", "'", ",", " '", "w", "')", " as", " zip", ":", "\n", "        ", "for", " file", " in", " glob", ".", "glob", "(", "directory", " +", " os", ".", "sep", " +", " '", "*", "')", ":", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "                ", "zip", ".", "write", "(", "file", ")", "\n", "\n", "    ", "return", " directory", " +", " os", ".", "sep", " +", " '", "files", ".", "zip", "'"], "logprobs": [-1.161291241645813, -0.10425037145614624, -0.03928108140826225, -3.731181277544238e-05, -0.0005763299996033311, -0.015057121403515339, -0.6041281223297119, -0.0009501233580522239, -0.0029584472067654133, -0.008017381653189659, -0.027650531381368637, -0.00353723275475204, -0.03625163063406944, -0.00374984135851264, -0.00017689094238448888, -8.451581379631534e-05, -0.7036335468292236, -0.6522549390792847, -0.4608438014984131, -1.5590941905975342, -0.008907463401556015, -0.04755377769470215, -0.5731201767921448, -0.002045445377007127, -0.028505127876996994, -0.4273093342781067, -0.000331704446580261, -0.007829217240214348, -0.4157158136367798, -0.0004085659747943282, -2.489475727081299, -3.4560794830322266, -2.4630794525146484, -0.42620232701301575, -0.9179051518440247, -0.0032900036312639713, -2.0792996883392334, -0.14207139611244202, -0.00030310326837934554, -2.706014311115723e-05, -0.0022946475073695183, -0.0005583396414294839, -0.00011717586312443018, -0.1592465043067932, -2.746795892715454, -0.14050757884979248, -2.775728225708008, -0.0004003438516519964, -0.2955783009529114, -0.004676595330238342, -0.4720158874988556, -0.01544608362019062, -0.014909973368048668, -8.618460560683161e-05, -0.00852706003934145, -0.0011887634173035622, -0.11467601358890533, -0.03328515589237213, -0.3596181273460388, -0.00024732868769206107, -0.3755403757095337, -2.0810019969940186, -0.006343112327158451, -0.034705303609371185, -0.23635224997997284, -1.1214327812194824, -0.20650775730609894, -0.01237888541072607, -3.111314072157256e-05, -0.09260232746601105, -0.024501720443367958, -0.17287859320640564, -0.011001288890838623, -0.0599639005959034, -0.0021364500280469656, -0.002063052263110876, -0.0015633992152288556, -0.0992821604013443, -0.15816476941108704, -0.3437306880950928, -0.0021054022945463657, -0.013004021719098091, -0.01788676343858242, -0.8697917461395264, -0.7099485993385315, -0.00019870213873218745, -0.0009996660519391298, -0.0025744650047272444, -0.004467506892979145, -0.059436310082674026, -0.00042381841922178864, -0.0019359909929335117, -0.15762758255004883, -0.04129048064351082, -0.001540903584100306, -0.05940575525164604, -0.0018373527564108372, -0.0016812250250950456, -0.00016866691294126213, -0.007798108737915754, -0.2880461812019348, -0.033566005527973175, -0.30381184816360474, -0.09368373453617096, -0.2075648158788681, -0.24888010323047638, -0.005361226387321949, -0.006708480883389711, -0.0002671123365871608, -0.0014916256768628955, -0.0011252983240410686, -0.019160659983754158, -0.0006185048841871321, -0.0006700892699882388, -1.597391747054644e-05, -0.450531542301178], "finish_reason": "stop"}], "metrics": {"energy": 109.97035074043279, "energy_per_token": 0.9480202650037309, "time": 4.638874, "time_per_token": 0.03999029310344828}}
{"outputs": [{"text": "# TODO: raise FileNotFoundError if specified directory does not exist\n\n    file_paths = []\n    for file in glob.glob(os.path.join(directory, '*')):\n        if os.path.isfile(file):\n            file_paths.append(file)\n    if not file_paths:\n        return None\n\n    with zipfile.ZipFile(os.path.join(directory, 'files.zip'), 'w') as zip_file:\n        for file in file_paths:\n            zip_file.write(file, os.path.basename(file))\n\n    return os.path.join(directory, 'files.zip')", "tokens": ["#", " TODO", ":", " raise", " File", "NotFound", "Error", " if", " specified", " directory", " does", " not", " exist", "\n", "\n", "    ", "file", "_", "paths", " =", " []", "\n", "    ", "for", " file", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "*", "'))", ":", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "            ", "file", "_", "paths", ".", "append", "(", "file", ")", "\n", "    ", "if", " not", " file", "_", "paths", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "        ", "for", " file", " in", " file", "_", "paths", ":", "\n", "            ", "zip", "_", "file", ".", "write", "(", "file", ",", " os", ".", "path", ".", "bas", "ename", "(", "file", "))", "\n", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')"], "logprobs": [-2.0248374938964844, -3.588921070098877, -0.5186223983764648, -4.032127857208252, -0.636755108833313, -0.002793697640299797, -0.015083307400345802, -0.18360693752765656, -3.662407636642456, -0.07636397331953049, -0.21851986646652222, -0.002312130993232131, -0.01640569232404232, -0.07286947220563889, -1.5819298028945923, -0.0006231511943042278, -3.040188789367676, -0.10101097822189331, -0.7410379648208618, -0.019141245633363724, -2.0825746059417725, -0.02693864330649376, -0.4022849500179291, -0.4128929674625397, -1.8162205219268799, -0.7464318871498108, -0.14636871218681335, -9.42901024245657e-05, -0.07806327193975449, -0.06712713092565536, -0.7668896317481995, -9.65590606938349e-06, -0.0011936451774090528, -0.001899701775982976, -0.014500241726636887, -0.00629987521097064, -0.009652135893702507, -0.004124706145375967, -0.2869618535041809, -0.6515135169029236, -0.08778750896453857, -0.0012771077454090118, -0.01790034770965576, -0.00988941639661789, -0.3682575821876526, -0.18922723829746246, -6.937739817658439e-05, -0.0006425699684768915, -0.002822346519678831, -0.0028368488419800997, -0.05463334172964096, -0.0005017452058382332, -0.005391106475144625, -0.0991818755865097, -0.018558669835329056, -0.0019025574438273907, -0.03633589670062065, -0.000892121868673712, -0.003659577341750264, -0.004192017484456301, -0.00047946401173248887, -0.0014790082350373268, -0.08580417186021805, -0.0018454440869390965, -0.005236955359578133, -1.6110649108886719, -0.24608871340751648, -0.8076187968254089, -0.013019553385674953, -2.1815061700181104e-05, -5.721882189391181e-05, -0.001342110801488161, -0.030866675078868866, -0.0024249928537756205, -0.11856262385845184, -0.10964419692754745, -0.009448808617889881, -0.5352014303207397, -0.0005000770906917751, -1.3215062618255615, -0.12732592225074768, -0.00025674383505247533, -1.847726889536716e-05, -0.0023506649304181337, -0.0005352256703190506, -0.00013886917440686375, -0.34954380989074707, -0.3610275685787201, -0.0010638536186888814, -0.002201635157689452, -0.004177534487098455, -0.017331458628177643, -0.02994908019900322, -0.008718638680875301, -0.0026700582820922136, -0.04313213750720024, -0.016005253419280052, -0.0039043400902301073, -7.128461584215984e-05, -0.00373582704924047, -0.00041345154750160873, -0.0877656638622284, -0.014497656375169754, -0.2259686291217804, -0.00037424711626954377, -0.37047234177589417, -0.21921288967132568, -0.16925007104873657, -0.0010153858456760645, -0.003316855989396572, -0.003311390522867441, -0.04549485817551613, -0.07337119430303574, -1.1680552959442139, -0.0024029924534261227, -2.276871418871451e-05, -1.0609570381348021e-05, -0.00020930961181875318, -0.0013874676078557968, -0.0013369916705414653, -0.04365652799606323, -0.001658970140852034, -0.012865985743701458, -7.188061863416806e-05, -0.0004751745145767927, -0.00022373080719262362, -0.013499756343662739, -1.6014328002929688, -0.4311436414718628, -0.0010620674584060907, -0.0001525762490928173, -0.010415365919470787, -0.4176628589630127, -3.576278118089249e-07, -0.00015400654228869826, -0.005774127319455147, -0.023268507793545723, -0.014780540950596333, -0.5622422099113464, -0.015618856064975262, -0.04976704344153404, -0.035805005580186844, -2.7418097943154862e-06, -0.0005339150666259229, -0.0013002045452594757, -0.05007323622703552, -0.0020929116290062666, -0.0028246049769222736, -0.0005943200667388737, -0.009102041833102703, -0.0010257464600726962, -0.00016759421851020306, -2.8132995794294402e-05, -0.000785161682870239], "finish_reason": "stop"}], "metrics": {"energy": 163.8973180198669, "energy_per_token": 1.0642682988303045, "time": 6.52969, "time_per_token": 0.04240058441558442}}
{"outputs": [{"text": "zip_name = 'files.zip'\n\n    try:\n        os.chdir(directory)\n        path = os.getcwd()\n        filenames = glob.glob(\"*\")\n        if not filenames:\n            print(\"Error: no files in directory\")\n            return\n    except FileNotFoundError:\n        print(\"Error: directory not found\")\n        return\n    else:\n        try:\n            with zipfile.ZipFile(path, 'w') as zip_ref:\n                for filename in filenames:\n                    zip_ref.write(filename)\n        except BaseException as e:\n            print(f\"Error: failed to write zip file: {e}\")\n\n    return path", "tokens": ["zip", "_", "name", " =", " '", "files", ".", "zip", "'", "\n", "\n", "    ", "try", ":", "\n", "        ", "os", ".", "ch", "dir", "(", "directory", ")", "\n", "        ", "path", " =", " os", ".", "get", "c", "wd", "()", "\n", "        ", "fil", "en", "ames", " =", " glob", ".", "glob", "(", "\"", "*", "\"", ")", "\n", "        ", "if", " not", " fil", "en", "ames", ":", "\n", "            ", "print", "(", "\"", "Error", ":", " no", " files", " in", " directory", "\"", ")", "\n", "            ", "return", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "print", "(", "\"", "Error", ":", " directory", " not", " found", "\"", ")", "\n", "        ", "return", "\n", "    ", "else", ":", "\n", "        ", "try", ":", "\n", "            ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "path", ",", " '", "w", "')", " as", " zip", "_", "ref", ":", "\n", "                ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "                ", "    ", "zip", "_", "ref", ".", "write", "(", "filename", ")", "\n", "        ", "except", " Base", "Exception", " as", " e", ":", "\n", "            ", "print", "(", "f", "\"", "Error", ":", " failed", " to", " write", " zip", " file", ":", " {", "e", "}\"", ")", "\n", "\n", "    ", "return", " path", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.8305587768554688, -0.14475736021995544, -1.4236695766448975, -0.007463310845196247, -0.33822059631347656, -0.023114291951060295, -0.006112097762525082, -8.940297266235575e-05, -0.0002563863235991448, -0.023923655971884727, -1.1756787300109863, -0.0005934861255809665, -1.894679307937622, -0.0004549183649942279, -0.0038117149379104376, -0.01289705466479063, -2.4082107543945312, -0.0019149314612150192, -1.1620303392410278, -0.004040531348437071, -0.004420746583491564, -0.007496796082705259, -0.0015864893794059753, -0.04972587153315544, -0.9057302474975586, -3.634451389312744, -0.3384772539138794, -0.7807099223136902, -0.0008201810996979475, -1.0924056768417358, -0.002135141519829631, -5.3165931603871286e-05, -0.0005227153305895627, -0.20494449138641357, -0.7959007024765015, -4.295286655426025, -0.010645860806107521, -0.0002681849291548133, -0.013370140455663204, -0.13779552280902863, -8.368142152903602e-05, -0.01375823188573122, -0.8614091873168945, -0.3123124837875366, -0.15173783898353577, -0.8176039457321167, -0.04901840537786484, -0.022734012454748154, -0.6410295367240906, -0.7284571528434753, -1.2675917148590088, -0.09783446788787842, 0.0, -2.145764938177308e-06, -0.009557325392961502, -0.03684846684336662, -0.0027593416161835194, -2.292684555053711, -0.2588973045349121, -0.3487837612628937, -3.0623581409454346, -0.14724650979042053, -2.0407261848449707, -0.08509879559278488, -2.1196136474609375, -0.7619525194168091, -0.4291367828845978, -0.028339898213744164, -0.006216238718479872, -0.14005523920059204, -0.07415318489074707, -1.766900658607483, -2.4289636611938477, -0.0060279713943600655, -0.10427765548229218, -0.00025006983196362853, -1.5616295058862306e-05, -0.1859617680311203, -0.010219509713351727, -0.003519295481964946, -0.07033809274435043, -0.028020719066262245, -0.1518678069114685, -0.05929611250758171, -0.01530697662383318, -0.4633644223213196, -0.6244182586669922, -0.007465677335858345, -0.059820856899023056, -0.001450797077268362, -0.0012369846226647496, -0.07646889239549637, -0.022231409326195717, -0.0868365541100502, -2.012162685394287, -2.0502898693084717, -0.00033825874561443925, -0.006673075258731842, -0.021520433947443962, -3.0954833030700684, -0.0005893162451684475, -0.0019076736643910408, -0.0022224506828933954, -0.5990181565284729, -0.25572097301483154, -0.00013386306818574667, -2.658331868587993e-05, -0.0021915247198194265, -0.0005123494775034487, -6.55629628454335e-05, -0.02359316684305668, -2.6394240856170654, -0.1430990844964981, -0.34885480999946594, -0.021408773958683014, -0.47737017273902893, -0.0005619138828478754, -0.7193073630332947, -0.490773469209671, -1.4678690433502197, -0.0011356578906998038, -0.0030540036968886852, -0.004798919428139925, -0.036664385348558426, -0.1845618039369583, -0.00042429505265317857, -0.010870288126170635, -2.3841855067985307e-07, -6.079655122448457e-06, -0.0009560781763866544, -0.0017648849170655012, -0.0006727101281285286, -0.0027425792068243027, -0.148943230509758, -0.0005958688561804593, -0.0019190958701074123, -4.005352093372494e-05, -0.0003665013937279582, -0.0004804172203876078, -0.006964810658246279, -0.1132078766822815, -0.004542152397334576, -0.3420373201370239, -0.004349652677774429, -3.6967782974243164, -0.0008042200352065265, -0.44484075903892517, -0.517311155796051, -0.0014541300479322672, -0.01003270223736763, -0.0031568000558763742, -0.0413743257522583, -0.03165823966264725, -0.6158638000488281, -0.10917799174785614, -0.23339726030826569, -0.21555101871490479, -2.7840301990509033, -0.016441810876131058, -3.092040538787842, -1.1416422128677368, -0.22196640074253082, -0.49244019389152527, -0.013386490754783154, -0.13181450963020325, -0.056040532886981964, -0.011083701625466347, -0.005092980805784464, -1.7300975322723389, -1.0823553800582886, -0.06610967218875885, -0.163286030292511, -0.8132331371307373, -1.0728830375228426e-06, -7.152555099310121e-07, -4.279521817807108e-05, -0.00017498392844572663, -0.19333133101463318], "finish_reason": "stop"}], "metrics": {"energy": 176.94142828750606, "energy_per_token": 0.9940529679073374, "time": 7.363436, "time_per_token": 0.04136761797752809}}
{"outputs": [{"text": "if not os.path.isdir(directory):\n        raise FileNotFoundError('No such file or directory')\n    zip_dir = os.path.join(directory, 'files.zip')\n    files = glob.glob(os.path.join(directory, '*'))\n    if not files:\n        return None\n    with zipfile.ZipFile(zip_dir, 'w') as myzip:\n        for f in files:\n            myzip.write(f, os.path.basename(f))\n    return zip_dir", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "No", " such", " file", " or", " directory", "')", "\n", "    ", "zip", "_", "dir", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "*", "'))", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "return", " None", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "dir", ",", " '", "w", "')", " as", " my", "zip", ":", "\n", "        ", "for", " f", " in", " files", ":", "\n", "            ", "my", "zip", ".", "write", "(", "f", ",", " os", ".", "path", ".", "bas", "ename", "(", "f", "))", "\n", "    ", "return", " zip", "_", "dir", "\n", "\n", "if"], "logprobs": [-1.161291241645813, -0.10425037145614624, -0.03928108140826225, -3.731181277544238e-05, -0.0005763299996033311, -0.015057121403515339, -0.793020486831665, -0.004582973662763834, -0.00027640812913887203, -0.0018951804377138615, -0.0074036745354533195, -0.020623529329895973, -0.0034641751553863287, -0.05357450246810913, -0.005014818161725998, -0.000198821333469823, -8.284702198579907e-05, -1.580963373184204, -3.567362070083618, -0.6683776378631592, -1.479236364364624, -0.04407045990228653, -0.009899095632135868, -0.47316044569015503, -0.003405963070690632, -0.9576554298400879, -2.059605121612549, -0.1711195707321167, -3.9028940200805664, -0.15043216943740845, -0.4192233383655548, -0.00043406602344475687, -0.01118661928921938, -0.020305965095758438, -0.21027113497257233, -0.010775594040751457, -0.03714095056056976, -0.007909406907856464, -0.04053661599755287, -0.037990231066942215, -0.019274793565273285, -0.00011514954530866817, -0.0006282739923335612, -0.014172499068081379, -0.07050152868032455, -1.850507378578186, -0.1820582151412964, -0.19318000972270966, -5.757642793469131e-05, -0.020737964659929276, -0.038323912769556046, -0.19534967839717865, -0.0008536509121768177, -0.00011288482346571982, -0.0006540066679008305, -0.0010927902767434716, -0.002135141519829631, -0.005882451310753822, -0.004159252624958754, -0.053994737565517426, -0.4552895724773407, -0.15024632215499878, -0.02367943711578846, -0.04171053692698479, -0.7942243218421936, -0.7311011552810669, -0.04326697066426277, -0.013670395128428936, -0.03868982568383217, -0.0010434903670102358, -0.049598485231399536, -0.09798211604356766, -0.005946207791566849, -0.13289694488048553, -0.3245460093021393, -0.052179448306560516, -9.285972191719338e-05, -9.775113539944869e-06, -0.002643782878294587, -0.0008654424455016851, -8.880697714630514e-05, -0.006239932496100664, -0.010127703659236431, -0.00025376438861712813, -0.0014497257070615888, -0.0004408579843584448, -0.06385012716054916, -0.012033015489578247, -0.298510879278183, -0.00017438798386137933, -3.4401633739471436, -0.15028366446495056, -0.0058573270216584206, -0.004921939689666033, -0.0024970562662929296, -0.09123198688030243, -1.3390980958938599, -0.13472037017345428, -0.008378948085010052, -0.0030525776091963053, -0.005480384454131126, -0.0026667292695492506, -0.39563921093940735, -1.2516897186287679e-05, -4.3987260141875595e-05, -0.0003675738989841193, -0.0003682888636831194, -0.008721592836081982, -1.5029524564743042, -0.553136944770813, -0.00018010901112575084, -0.0004714807728305459, -0.0066718910820782185, -0.1719961017370224, -5.960462772236497e-07, -0.00016330339713022113, -0.004392974078655243, -0.04806983470916748, -0.019490979611873627, -0.0809667557477951, -0.03599856048822403, -0.06584083288908005, -0.00028153270250186324, -1.2278481335670222e-05, -0.40424031019210815, -0.03271307051181793, -1.0066124200820923], "finish_reason": "stop"}], "metrics": {"energy": 116.55824053382877, "energy_per_token": 0.9177814215262108, "time": 5.261043, "time_per_token": 0.04142553543307086}}
{"outputs": [{"text": "try:\n        file_paths = glob.glob(os.path.join(directory, '**', '*.*'))\n\n        if len(file_paths) == 0:\n            return None\n\n        with zipfile.ZipFile(\n                os.path.join(directory, 'files.zip'), 'w',\n                zipfile.ZIP_DEFLATED) as archive:\n            for path in file_paths:\n                archive.write(path)\n\n        return os.path.join(directory, 'files.zip')\n\n    except FileNotFoundError:\n        print(f\"Directory '{directory}' not found.\")", "tokens": ["try", ":", "\n", "        ", "file", "_", "paths", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "**", "'", ",", " '", "*", ".", "*", "'))", "\n", "\n", "        ", "if", " len", "(", "file", "_", "paths", ")", " ==", " ", "0", ":", "\n", "            ", "return", " None", "\n", "\n", "        ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "\n", "                ", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", ",", " '", "w", "'", ",", "\n", "                ", "zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", " as", " archive", ":", "\n", "            ", "for", " path", " in", " file", "_", "paths", ":", "\n", "                ", "archive", ".", "write", "(", "path", ")", "\n", "\n", "        ", "return", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", "\n", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "print", "(", "f", "\"", "Directory", " '", "{", "directory", "}'", " not", " found", ".", "\"", ")", "\n", "\n", "if"], "logprobs": [-1.8366948366165161, -0.0007999319350346923, -0.005265653133392334, -0.009997531771659851, -2.3188283443450928, -0.12208279967308044, -1.045520544052124, -0.008309198543429375, -0.1921577900648117, -0.00011562632425921038, -0.019046513363718987, -0.017096873372793198, -0.5367277264595032, -6.318072337307967e-06, -0.0002109781780745834, -0.0016853903653100133, -0.00895649567246437, -0.002271930454298854, -0.008421622216701508, -0.0022487370297312737, -0.21954210102558136, -0.7250944375991821, -1.2746632099151611, -0.001064687268808484, -0.01211958285421133, -0.0035254727117717266, -1.3382508754730225, -0.30114129185676575, -0.049231208860874176, -0.017668824642896652, -2.4681973457336426, -0.16668196022510529, -0.2750445604324341, -1.2619632482528687, -0.0006984416977502406, -0.0051343729719519615, -7.986990567587782e-06, -7.545663538621739e-05, -0.017258932814002037, -0.3143998682498932, -0.0002812943421304226, -0.0014066335279494524, -0.009049118496477604, -0.04689869284629822, -0.0015474499668926, -0.16822697222232819, -0.05278981104493141, -0.008426823653280735, -0.18144771456718445, -0.012787016108632088, -1.341435194015503, -0.12061133980751038, -0.00034278715611435473, -1.8596476365928538e-05, -0.002176061272621155, -0.0008947421447373927, -0.00013517419574782252, -0.309641033411026, -2.4373669624328613, -1.1584726572036743, -0.5394987463951111, -0.0002441108226776123, -0.0016708712792024016, -0.005899516865611076, -0.030532576143741608, -0.027025902643799782, -0.06017427518963814, -0.007597480434924364, -0.047641076147556305, -0.027096794918179512, -0.006022046320140362, -0.00010513706365600228, -0.005984483286738396, -0.0033671134151518345, -0.7565584778785706, -0.014029217883944511, -0.2877226173877716, -0.017156872898340225, -1.4443607330322266, -0.004343955311924219, -0.5647668242454529, -0.00026353701832704246, -7.116541382856667e-05, -0.0017215682892128825, -0.048031773418188095, -0.0031747438479214907, -0.0020672159735113382, -0.00028379703871905804, -0.00021228920377325267, -0.4823220372200012, -0.0021044507157057524, -2.8948616981506348, -0.04612103849649429, -0.003989714197814465, -0.10240792483091354, -0.06020256131887436, -1.6086723804473877, -0.01976906508207321, -0.011565541848540306, -1.3947389561508317e-05, -1.2993727978027891e-05, -0.000777776469476521, -0.002463760320097208, -0.0024699438363313675, -0.17784422636032104, -0.0002330270071979612, -0.0005869334563612938, -0.0004040378553327173, -0.04056134074926376, -0.7278124690055847, -0.004970693029463291, -0.45065027475357056, -0.2146962732076645, -0.06991343945264816, -0.04101397097110748, -6.079655122448457e-06, -0.0007066613179631531, -0.0008647278300486505, -0.09259765595197678, -0.0023504269775003195, -0.007023408077657223, -0.0006413786904886365, -0.014300952665507793, -0.001699671265669167, -0.00019572250312194228, -3.2305197237292305e-05, -0.00034505134681239724, -0.0030453279614448547, -0.5176920890808105, -0.0027336629573255777, -0.004851949401199818, -0.08688955754041672, -0.000486970558995381, -8.702239938429557e-06, -0.16976898908615112, -0.005504806991666555, -0.001997858053073287, -2.0035409927368164, -0.7486682534217834, -0.8606537580490112, -0.7409141659736633, -1.4978455305099487, -1.238479733467102, -0.000714404450263828, -0.007823065854609013, -0.003985320683568716, -0.6727766394615173, -0.003123169532045722, -0.6530326008796692, -0.07195746898651123, -0.28993913531303406, -0.1788409948348999, -0.877981424331665, -0.7526732683181763], "finish_reason": "stop"}], "metrics": {"energy": 159.1735267152786, "energy_per_token": 1.033594329319991, "time": 6.313916, "time_per_token": 0.04099945454545455}}
{"outputs": [{"text": "try:\n        paths = glob.glob(directory + '/*')\n        files_zip = os.path.join(directory, 'files.zip')\n    except FileNotFoundError:\n        files_zip = None\n\n    if files_zip is None or not os.path.exists(files_zip):\n        return None\n\n    with zipfile.ZipFile(files_zip, 'w', zipfile.ZIP_DEFLATED) as zf:\n        for file in paths:\n            if os.path.isfile(file):\n                zf.write(file)\n    return files_zip", "tokens": ["try", ":", "\n", "        ", "paths", " =", " glob", ".", "glob", "(", "directory", " +", " '", "/*", "')", "\n", "        ", "files", "_", "zip", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", "\n", "    ", "except", " File", "NotFound", "Error", ":", "\n", "        ", "files", "_", "zip", " =", " None", "\n", "\n", "    ", "if", " files", "_", "zip", " is", " None", " or", " not", " os", ".", "path", ".", "exists", "(", "files", "_", "zip", "):", "\n", "        ", "return", " None", "\n", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "files", "_", "zip", ",", " '", "w", "'", ",", " zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", " as", " z", "f", ":", "\n", "        ", "for", " file", " in", " paths", ":", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "                ", "z", "f", ".", "write", "(", "file", ")", "\n", "    ", "return", " files", "_", "zip", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.8366948366165161, -0.0007999319350346923, -0.005265653133392334, -0.009997531771659851, -4.403234481811523, -0.05277330428361893, -0.28381025791168213, -0.0001494772732257843, -0.026132414117455482, -0.02301725558936596, -1.0040454864501953, -0.1377783864736557, -0.4875239133834839, -0.294459730386734, -0.21563653647899628, -0.04190169647336006, -0.6577622890472412, -2.3056423664093018, -2.026902198791504, -2.9840569496154785, -0.4939980208873749, -1.5455650091171265, -3.540453326422721e-05, -0.013184862211346626, -0.008261553943157196, -0.0439966544508934, -0.015029173344373703, -0.03540409356355667, -0.006578574422746897, -0.06566402316093445, -0.012790076434612274, -0.0035908047575503588, -7.462222856702283e-05, -0.0005302215577103198, -0.015560994856059551, -2.821531057357788, -0.005108280573040247, -0.11253637820482254, -0.00018416139937471598, -8.22540732769994e-06, -0.14098156988620758, -0.01982189156115055, -0.0023438858333975077, -3.3572890758514404, -0.0025612665340304375, -0.0007578838267363608, -0.005043640732765198, -0.03382648900151253, -0.0026462795212864876, -0.8474975824356079, -0.007013464346528053, -0.5320773124694824, -2.376293659210205, -0.003157394239678979, -9.452849917579442e-05, -0.7907509207725525, -0.46175193786621094, -1.130100965499878, -0.8195069432258606, -0.7537657618522644, -0.0001951265730895102, -0.02189476229250431, -0.004341462627053261, -0.6354200839996338, -0.00429113581776619, -0.12970341742038727, -4.672895011026412e-05, -2.455681169521995e-05, -0.054600946605205536, -0.0184644665569067, -0.005372253712266684, -0.8753849267959595, -0.5130494236946106, -0.008443727158010006, -0.2862459123134613, -0.0009345216676592827, -0.6297788619995117, -0.13828855752944946, -6.854299135738984e-05, -1.5735502529423684e-05, -0.0026115619111806154, -0.0005856229108758271, -0.00014530557382386178, -0.006841212511062622, -0.019753403961658478, -0.000316927267704159, -6.9141146923357155e-06, -0.0061042774468660355, -0.12399184703826904, -0.06700941175222397, -1.3344647884368896, -0.0006438804557546973, -0.7101858258247375, -0.0004215544031467289, -5.7338023907504976e-05, -0.0018522264435887337, -0.009124957956373692, -0.0008606782066635787, -0.00306018372066319, -0.00020180096908006817, -0.0006901028100401163, -0.025410262867808342, -0.0002575780963525176, -1.8499990701675415, -0.27902501821517944, -0.0018417553510516882, -0.005858156364411116, -0.007487448398023844, -0.048533957451581955, -1.692131757736206, -0.5126113295555115, -0.018121162429451942, -0.0019300420535728335, -0.0031254275236278772, -0.005176237318664789, -1.0731043815612793, -0.341033399105072, -6.556489552167477e-06, -0.0017298986203968525, -0.00036137725692242384, -0.02466188557446003, -0.08009875565767288, -0.0003626880934461951, -0.002573156962171197, -0.062010303139686584, -0.015561112202703953, -0.0010339635191485286, -0.08770113438367844, -0.00255769956856966, -4.5060096454108134e-05, -0.0008387623238377273, -0.0003779412363655865, -0.01265212893486023, -0.19000306725502014, -0.011462663300335407, -1.7111729383468628, -0.022909607738256454, -0.052404362708330154, -9.524368942948058e-05, -3.576272320060525e-06, -1.5149210691452026, -8.344646857949556e-07, -9.536738616588991e-07, -2.0503786799963564e-05, -0.00013529339048545808, -0.20616230368614197], "finish_reason": "stop"}], "metrics": {"energy": 144.03409436798106, "energy_per_token": 0.9865348929313771, "time": 6.111713, "time_per_token": 0.04186104794520548}}
{"outputs": [{"text": "if os.path.exists(directory) and glob.glob(os.path.join(directory, '*')):\n        with zipfile.ZipFile(os.path.join(directory, 'files.zip'), 'w', zipfile.ZIP_DEFLATED) as zip_file:\n            for file_name in os.listdir(directory):\n                zip_file.write(os.path.join(directory, file_name))\n        return os.path.join(directory, 'files.zip')\n    return None", "tokens": ["if", " os", ".", "path", ".", "exists", "(", "directory", ")", " and", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "*", "'))", ":", "\n", "        ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", ",", " '", "w", "'", ",", " zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", " as", " zip", "_", "file", ":", "\n", "            ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "                ", "zip", "_", "file", ".", "write", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " file", "_", "name", "))", "\n", "        ", "return", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", "\n", "    ", "return", " None", "\n", "\n", "if"], "logprobs": [-1.161291241645813, -2.492588520050049, -9.035655966727063e-05, -0.004807579796761274, -0.019333140924572945, -1.0002890825271606, -0.0024901593569666147, -0.0031621474772691727, -1.8902842998504639, -0.6692315340042114, -3.092973232269287, -0.0003962923656217754, -0.004767716862261295, -0.059597041457891464, -0.6959470510482788, -0.0012003129813820124, -0.0004117832868359983, -0.014386618509888649, -0.004395229276269674, -0.0019472938729450107, -0.007049805484712124, -0.0037233568727970123, -0.16818767786026, -0.48743027448654175, -0.08245179057121277, -0.032927412539720535, -0.030421223491430283, -0.0234219990670681, -1.369399070739746, -0.2320861965417862, -0.0006226746481843293, -3.135155202471651e-05, -0.0030976191628724337, -0.0005284343496896327, -0.00016723664884921163, -0.3143487572669983, -0.4031427502632141, -0.0010114560136571527, -0.002001427114009857, -0.0017143089789897203, -0.012552659027278423, -0.018076090142130852, -0.012276090681552887, -0.0037810755893588066, -0.04726455360651016, -0.011336908675730228, -0.0034050126560032368, -5.9602869441732764e-05, -0.003021558281034231, -0.0006886732880957425, -0.1377440094947815, -0.01708913967013359, -1.2062567472457886, -0.0005233110277913511, -0.5509467720985413, -0.0002450642641633749, -4.827859811484814e-05, -0.0014748420799151063, -0.020161457359790802, -0.00025614796322770417, -0.0028823756147176027, -0.00027891082572750747, -0.00040534863364882767, -0.024417148903012276, -0.00044526674901135266, -0.46524858474731445, -0.3318046033382416, -0.20431485772132874, -0.0008538890979252756, -0.0029582094866782427, -0.005881147924810648, -0.045516956597566605, -0.8913635015487671, -0.7845356464385986, -0.978267252445221, -0.0016962201334536076, -1.3634580373764038, -0.00029738296871073544, -0.0003407612966839224, -2.9802276912960224e-06, -0.0014973392244428396, -0.001706930692307651, -0.00047672350774519145, -0.004590093623846769, -0.000933807052206248, -0.4717644453048706, -0.00034874555421993136, -0.002552467631176114, -5.936446541454643e-05, -0.0001333863037871197, -0.00047195740626193583, -0.026128116995096207, -0.00023719835735391825, -0.00019178935326635838, -0.000518664310220629, -0.0012362702982500196, -8.868777513271198e-05, -0.000416907190810889, -0.00011944057769142091, -0.00177952169906348, -2.6225699912174605e-05, -1.0132738680113107e-05, -0.39333927631378174, -0.005351859610527754, -0.20760394632816315, -0.07231083512306213, -0.029852356761693954, -1.4305104514278355e-06, -0.00041059168870560825, -0.00031919151660986245, -0.0527040958404541, -0.0019359909929335117, -0.0019083875231444836, -0.0007169060409069061, -0.020096614956855774, -0.0016694430960342288, -0.0002563863235991448, -2.5510462364763953e-05, -0.0002181292074965313, -0.013491406105458736, -0.2897987961769104, -1.2747300863265991, -0.023396380245685577, -0.552431583404541, -0.015394551679491997, -0.9097375869750977], "finish_reason": "stop"}], "metrics": {"energy": 132.42436193466187, "energy_per_token": 1.0509869994814434, "time": 5.0567636, "time_per_token": 0.040133044444444446}}
{"outputs": [{"text": "if os.path.isdir(directory):\n        all_files = glob.glob(os.path.join(directory, '**'), recursive=True)\n        if not all_files:\n            return None\n        zip_path = os.path.join(directory, 'files.zip')\n        with zipfile.ZipFile(zip_path, 'w') as zip_file:\n            for file_path in all_files:\n                zip_file.write(file_path)\n        return zip_path\n    raise FileNotFoundError(\"File not found: {}\".format(directory))", "tokens": ["if", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "all", "_", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "**", "')", ",", " recursive", "=", "True", ")", "\n", "        ", "if", " not", " all", "_", "files", ":", "\n", "            ", "return", " None", "\n", "        ", "zip", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", "\n", "        ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "path", ",", " '", "w", "')", " as", " zip", "_", "file", ":", "\n", "            ", "for", " file", "_", "path", " in", " all", "_", "files", ":", "\n", "                ", "zip", "_", "file", ".", "write", "(", "file", "_", "path", ")", "\n", "        ", "return", " zip", "_", "path", "\n", "    ", "raise", " File", "NotFound", "Error", "(", "\"", "File", " not", " found", ":", " {", "}\"", ".", "format", "(", "directory", "))", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.161291241645813, -2.492588520050049, -9.035655966727063e-05, -0.004807579796761274, -0.019333140924572945, -0.46388351917266846, -0.11001942306756973, -0.0009291622554883361, -0.004227273631840944, -0.15567409992218018, -0.024364331737160683, -0.019482562318444252, -4.004218101501465, -0.03405971825122833, -0.13776975870132446, -0.0523235909640789, -0.29396381974220276, -9.560128091834486e-05, -0.02195913903415203, -0.03209194168448448, -0.42354556918144226, -0.0013831820106133819, -0.00015925093612167984, -0.004892876371741295, -0.003093816339969635, -0.0016765836626291275, -0.005340713541954756, -0.0021527467761188745, -0.1909027099609375, -0.5690802931785583, -1.8262193202972412, -0.00468513835221529, -0.015030934475362301, -0.017972005531191826, -0.2813625633716583, -0.004527081269770861, -0.009591212496161461, -0.07995162904262543, -2.057321548461914, -1.976047158241272, -0.07431168109178543, -0.009707978926599026, -1.3112935448589269e-05, -0.012136188335716724, -0.04472260922193527, -0.0016455217264592648, -0.19064275920391083, -0.11091295629739761, -0.016188720241189003, -0.28068238496780396, -1.942529320716858, -0.12804514169692993, -1.2792049646377563, -0.008783514611423016, -0.19841508567333221, -1.2874520507466514e-05, -0.001427227514795959, -0.0033905182499438524, -0.028019094839692116, -0.006832569371908903, -0.016561061143875122, -0.005164259113371372, -0.044329021126031876, -0.01205480471253395, -0.0027978583239018917, -7.617183291586116e-05, -0.0002790300059132278, -0.005764882545918226, -0.03362732753157616, -0.2278858721256256, -0.06958435475826263, -4.649054244509898e-05, -1.1324817933200393e-05, -0.0021912867669016123, -0.0018675759201869369, -0.00013791563105769455, -0.0020811345893889666, -0.0054209851659834385, -0.0001991788885788992, -0.00015054999676067382, -0.00037698791129514575, -0.07047463953495026, -0.012161626480519772, -0.26707836985588074, -7.819823804311454e-05, -0.2454628348350525, -0.14338377118110657, -0.2323736846446991, -0.0007122601964510977, -0.0018127213697880507, -0.001715499092824757, -0.042704109102487564, -0.2566908597946167, -0.850983738899231, -0.12504048645496368, -0.0008971241768449545, -0.007673430256545544, -4.6491513785440475e-06, -1.2755313036905136e-05, -0.00039641151670366526, -0.0010627818992361426, -0.0006798578542657197, -0.5813947319984436, -0.0014492495683953166, -0.007487567141652107, -9.715084888739511e-05, -0.0004068977141287178, -0.00020215852418914437, -0.008189194835722446, -0.0005797850899398327, -3.6000557884108275e-05, -0.30090636014938354, -0.0029836446046829224, -0.14216384291648865, -0.04257297143340111, -0.03594692423939705, -5.709961988031864e-05, -0.00013374387344811112, -0.017500389367341995, -0.032036181539297104, -1.6322062015533447, -0.005022290628403425, -0.00019667598826345056, -6.186770770000294e-05, -0.7774134278297424, -1.46127188205719, -2.8349108695983887, -0.5103124976158142, -0.01653057523071766, -2.0287415981292725, -0.8756276369094849, -0.17908668518066406, -0.0022760932333767414, -0.0017976091476157308, -0.0008737798780202866, -0.020295219495892525, -0.002211983548477292, -0.8485300540924072, -4.768370445162873e-07, -1.0728830375228426e-06, -0.00013660451804753393, -0.0001586549769854173, -0.1699712574481964], "finish_reason": "stop"}], "metrics": {"energy": 146.20319778442376, "energy_per_token": 1.02239998450646, "time": 5.9010925, "time_per_token": 0.04126638111888112}}
{"outputs": [{"text": "# check for path existence\n    if not os.path.exists(directory):\n        raise FileNotFoundError\n\n    files = glob.glob(os.path.join(directory, '*.*'))\n\n    if len(files) == 0:\n        return None\n\n    # create a zip file with the contents of the directory\n    zip_file = zipfile.ZipFile(os.path.join(directory, 'files.zip'), 'w', zipfile.ZIP_DEFLATED)\n    for file in files:\n        zip_file.write(file, os.path.relpath(file, directory))\n    zip_file.close()\n\n    # return the path to the created zip file\n    return os.path.join(directory, 'files.zip')", "tokens": ["#", " check", " for", " path", " existence", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "\n", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "*", ".", "*", "'))", "\n", "\n", "    ", "if", " len", "(", "files", ")", " ==", " ", "0", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "#", " create", " a", " zip", " file", " with", " the", " contents", " of", " the", " directory", "\n", "    ", "zip", "_", "file", " =", " zip", "file", ".", "Z", "ip", "File", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", ",", " '", "w", "'", ",", " zip", "file", ".", "Z", "IP", "_", "DE", "FL", "ATED", ")", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "zip", "_", "file", ".", "write", "(", "file", ",", " os", ".", "path", ".", "rel", "path", "(", "file", ",", " directory", "))", "\n", "    ", "zip", "_", "file", ".", "close", "()", "\n", "\n", "    ", "#", " return", " the", " path", " to", " the", " created", " zip", " file", "\n", "    ", "return", " os", ".", "path", ".", "join", "(", "directory", ",", " '", "files", ".", "zip", "')", "\n", "\n", "if"], "logprobs": [-2.0248374938964844, -2.4554600715637207, -2.539773941040039, -4.396882057189941, -0.7177188992500305, -0.14206333458423615, -0.003042119089514017, -0.1972792148590088, -0.05488727241754532, -0.021252170205116272, -2.0146166207268834e-05, -0.000538680877070874, -0.015157751739025116, -0.3809258043766022, -0.0007977878558449447, -0.002600147621706128, -0.0059676566161215305, -0.008571382611989975, -0.0034730848856270313, -0.051781538873910904, -0.0039044588338583708, -0.00018499570433050394, -8.093983342405409e-05, -1.642177939414978, -0.26142266392707825, -0.0008755664457567036, -2.927190065383911, -0.2060835361480713, -0.14495238661766052, -8.046303264563903e-05, -0.0220202449709177, -0.016623906791210175, -0.38310864567756653, -0.0005936052766628563, -0.00012492353562265635, -0.0032417625188827515, -0.003080981317907572, -0.0012511529494076967, -0.003389449091628194, -0.001946580014191568, -0.21018612384796143, -0.4780973792076111, -2.2218587398529053, -0.26015108823776245, -0.006043730769306421, -0.04747602343559265, -0.8292497396469116, -0.0002544794406276196, -0.4214530885219574, -1.2839365005493164, -0.00037043384509161115, -0.001760719926096499, -0.013716371729969978, -0.2769488990306854, -0.00043132537393830717, -0.0015925593907013535, -0.003725138260051608, -0.07431134581565857, -0.001555662602186203, -0.08312854170799255, -0.07213416695594788, -0.011907685548067093, -0.1014440655708313, -0.0005274811992421746, -1.5468021631240845, -1.141575574874878, -1.6049957275390625, -0.41267386078834534, -0.45717811584472656, -1.4974946975708008, -1.068710207939148, -3.2172458171844482, -0.08566805720329285, -0.11386094242334366, -0.2352709323167801, -0.09118584543466568, -0.0014061573892831802, -0.9533434510231018, -0.09391947090625763, -0.9854740500450134, -0.41450831294059753, -0.23882529139518738, -0.0007229813490994275, -2.1815061700181104e-05, -0.011669234372675419, -0.000788258679676801, -0.00010156115604331717, -0.21923290193080902, -0.36909645795822144, -2.7894584491150454e-05, -0.001177690108306706, -0.0016054133884608746, -0.021608401089906693, -0.01924789696931839, -0.006803087890148163, -0.0019739444833248854, -0.030228205025196075, -0.00989036075770855, -0.0022033003624528646, -3.4689302992774174e-05, -0.015287135727703571, -0.0003669780562631786, -0.07765346765518188, -0.004822172224521637, -1.5217459201812744, -0.0007201223634183407, -0.7778446674346924, -9.333651541965082e-05, -3.1709168979432434e-05, -0.001950387260876596, -0.024638041853904724, -0.00042083943844772875, -0.0031395689584314823, -0.00020752183627337217, -0.0006911749369464815, -0.015052542090415955, -0.0040174974128603935, -0.45790618658065796, -0.039603907614946365, -0.3262777626514435, -0.24777773022651672, -0.005841446109116077, -0.0005884823040105402, -0.0038877157494425774, -0.0011039836099371314, -0.12392276525497437, -0.0005860995152033865, -0.009494035504758358, -4.351044481154531e-05, -0.00035601475974544883, -0.00013076403411105275, -0.005580205004662275, -1.134596824645996, -0.32118210196495056, -0.00044967554276809096, -0.00021562635083682835, -0.004743394907563925, -1.18206787109375, -0.00010287232726113871, -0.0002747396647464484, -0.003398240776732564, -0.05149964988231659, -0.16516125202178955, -0.054364562034606934, -0.023276427760720253, -0.11256556212902069, -0.006670825183391571, -0.00010585224663373083, -1.5258672647178173e-05, -2.5629668016335927e-05, -0.00016699827392585576, -0.0010645681759342551, -0.012430926784873009, -0.17842990159988403, -0.0017199022695422173, -1.5002914667129517, -0.29875460267066956, -0.10156027972698212, -0.18795077502727509, -0.08709368854761124, -0.00598578667268157, -1.6253129243850708, -0.03825576230883598, -0.01363582257181406, -0.022322576493024826, -0.00047052756417542696, -0.008552826009690762, -0.023325923830270767, -2.9801878554280847e-05, -0.0005754960584454238, -0.00038342276820912957, -0.0990196093916893, -0.0026120375841856003, -0.0035612278152257204, -0.000560245884116739, -0.012069880962371826, -0.0005482124397531152, -0.00016032364510465413, -2.13382354559144e-05, -0.0006437613046728075, -0.8058775663375854, -0.008812346495687962, -0.8925272226333618], "finish_reason": "stop"}], "metrics": {"energy": 198.14328755283347, "energy_per_token": 1.0827502052067404, "time": 7.5682545, "time_per_token": 0.04135658196721312}}
{"outputs": [{"text": "# Create a list of files in the specified directory\n    files = glob.glob(os.path.join(directory, '**', '*'))\n\n    # Return None if the directory is empty\n    if not files:\n        return None\n\n    # Create a zipfile with all the files in the directory\n    with zipfile.ZipFile('files.zip', mode='w') as zip_file:\n        for file in files:\n            if os.path.isfile(file):\n                zip_file.write(file)\n\n    return 'files.zip'", "tokens": ["#", " Create", " a", " list", " of", " files", " in", " the", " specified", " directory", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "**", "'", ",", " '", "*", "'))", "\n", "\n", "    ", "#", " Return", " None", " if", " the", " directory", " is", " empty", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "#", " Create", " a", " zip", "file", " with", " all", " the", " files", " in", " the", " directory", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "('", "files", ".", "zip", "'", ",", " mode", "='", "w", "')", " as", " zip", "_", "file", ":", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "):", "\n", "                ", "zip", "_", "file", ".", "write", "(", "file", ")", "\n", "\n", "    ", "return", " '", "files", ".", "zip", "'", "\n", "\n", "print"], "logprobs": [-2.0248374938964844, -3.791135311126709, -0.5730791091918945, -0.8280505537986755, -0.06459366530179977, -1.2324692010879517, -0.6642491221427917, -0.027388663962483406, -1.0515493154525757, -0.005621813703328371, -0.21560069918632507, -0.002402516780421138, -0.9055075645446777, -0.10573085397481918, -0.14347104728221893, -3.290122185717337e-05, -0.008089043200016022, -0.011110227555036545, -0.2346193939447403, -5.602820692729438e-06, -9.297892393078655e-05, -0.0017728578532114625, -0.0017973711946979165, -0.002247072057798505, -0.006316696759313345, -0.0014791273279115558, -0.16860491037368774, -1.1855418682098389, -1.711621642112732, -0.001610174193046987, -0.007929986342787743, -0.0025593640748411417, -0.9619429111480713, -0.00519236596301198, -0.381359338760376, -0.0002698534226510674, -0.1571025401353836, -3.1547577381134033, -0.1251777559518814, -0.012545713223516941, -0.54184490442276, -0.04882451891899109, -1.6928329467773438, -0.05079955607652664, -0.08529223501682281, -0.00025293012731708586, -0.004502041265368462, -0.1868179738521576, -0.007130768615752459, -0.004215877968817949, -0.0025210760068148375, -0.0010127659188583493, -0.03172279894351959, -0.04700538143515587, -0.00034231049357913435, -0.011895199306309223, -0.0005442806868813932, -0.0415470190346241, -0.5942569375038147, -0.24032920598983765, -0.8132361769676208, -1.4756536483764648, -1.6953065395355225, -1.311141848564148, -0.8871864676475525, -0.06186183914542198, -0.7608978152275085, -0.10384912043809891, -0.19884657859802246, -0.09713201224803925, -0.0010181248653680086, -0.4595012664794922, -0.04366189241409302, -6.496695277746767e-05, -1.1444026313256472e-05, -0.0015250729629769921, -0.0025628122966736555, -0.0002383901592111215, -1.4087671041488647, -0.031877193599939346, -0.001816648175008595, -4.446407547220588e-05, -0.00233258749358356, -0.00010632903286023065, -2.7221839427948, -0.011136870831251144, -0.003125902730971575, -0.386489599943161, -9.381330892210826e-05, -0.38864240050315857, -0.33702102303504944, -0.06290433555841446, -0.0002269487304147333, -0.0010904086520895362, -0.0034830637741833925, -0.03998103365302086, -0.1448201686143875, -0.21275076270103455, -0.0027772923931479454, -0.00019810620869975537, -0.0016021999763324857, -0.0011735226726159453, -2.7104763984680176, -0.37487703561782837, -5.602820692729438e-06, -0.0029832879081368446, -0.001412466517649591, -0.012097794562578201, -0.027792107313871384, -0.0002857038634829223, -0.000846147071570158, -0.029634231701493263, -0.02796357125043869, -0.0005707303644157946, -0.03337739780545235, -0.0006081400788389146, -0.0073942081071436405, -2.0265373677830212e-05, -0.0005638201837427914, -0.00011991735664196312, -0.005995148327201605, -0.10437753051519394, -0.0073417858220636845, -0.09338908642530441, -0.02462082915008068, -1.0923430919647217, -0.2647085189819336, -0.014695025980472565, -0.0007887351675890386, -2.992108420585282e-05, -0.350138396024704, -0.2691839933395386, -0.0172995887696743, -3.5145444869995117], "finish_reason": "stop"}], "metrics": {"energy": 131.694992436409, "energy_per_token": 0.9827984510179776, "time": 5.467329, "time_per_token": 0.04080096268656717}}
{"outputs": [{"text": "zip_filename = 'files.zip'\n    files = glob.glob(os.path.join(directory, '*'))\n    if not files:\n        return None\n    with open(zip_filename, 'wb') as f:\n        with zipfile.ZipFile(f, 'w') as z:\n            for file in files:\n                z.write(file)\n    return zip_filename", "tokens": ["zip", "_", "filename", " =", " '", "files", ".", "zip", "'", "\n", "    ", "files", " =", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "*", "'))", "\n", "    ", "if", " not", " files", ":", "\n", "        ", "return", " None", "\n", "    ", "with", " open", "(", "zip", "_", "filename", ",", " '", "wb", "')", " as", " f", ":", "\n", "        ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "f", ",", " '", "w", "')", " as", " z", ":", "\n", "            ", "for", " file", " in", " files", ":", "\n", "                ", "z", ".", "write", "(", "file", ")", "\n", "    ", "return", " zip", "_", "filename"], "logprobs": [-2.8305587768554688, -0.14475736021995544, -3.147308111190796, -0.005482044070959091, -0.4396916925907135, -0.038580525666475296, -0.00563710555434227, -9.178694017464295e-05, -0.00022706791060045362, -0.026663240045309067, -0.3843819200992584, -2.5837197303771973, -0.4929114580154419, -0.25179651379585266, -0.00012575789878610522, -0.02835426665842533, -0.04056821018457413, -0.4645199775695801, -5.722029527532868e-06, -0.00015031162183731794, -0.0021554825361818075, -0.004308702889829874, -0.0024462793953716755, -0.009408066980540752, -0.0016771787777543068, -0.08245629072189331, -0.62223881483078, -0.12210094183683395, -0.016223790124058723, -0.30828413367271423, -0.23580585420131683, -0.6706052422523499, -0.07143428176641464, -0.02537156082689762, -0.03200431913137436, -0.0027032282669097185, -0.23529072105884552, -0.1273537278175354, -0.008530487306416035, -0.4593614339828491, -0.5521916747093201, -2.594597101211548, -0.02020888961851597, -0.10753432661294937, -0.0004379982128739357, -7.795983401592821e-05, -0.0010181248653680086, -0.0328819639980793, -0.023018186911940575, -0.005005566403269768, -0.0009417866240255535, -0.9777324795722961, -0.26688194274902344, -0.006064110901206732, -0.0022645562421530485, -0.6926655769348145, -0.013206509873270988, -6.365573790390044e-05, -1.847726889536716e-05, -0.0022113888990134, -0.0040849344804883, -0.00040368037298321724, -0.007450532168149948, -0.011741576716303825, -0.18021105229854584, -0.15306930243968964, -0.07532702386379242, -0.2681763768196106, -0.0003793711948674172, -0.5259315967559814, -1.284507155418396, -0.002146323211491108, -0.0025824313051998615, -0.06536692380905151, -0.3567662537097931, -0.195883646607399, -0.006138755939900875, -0.0017130000051110983, -0.0030284514650702477, -0.0008138681878335774, -0.30610567331314087, -0.0003756771038752049, -0.0003797286772169173, -0.0008217295398935676, -0.013995715416967869, -0.2790168821811676, -0.009327879175543785, -0.14023025333881378, -0.051571205258369446, -0.44408613443374634, -0.0003601856005843729, -4.31528314948082e-05], "finish_reason": "stop"}], "metrics": {"energy": 101.82576739692686, "energy_per_token": 1.1068018195318137, "time": 3.7983837, "time_per_token": 0.04128677934782609}}
{"outputs": [{"text": "if not os.path.isdir(directory):\n        raise FileNotFoundError('The directory specified does not exist')\n\n    file_path = []\n    for file_name in glob.glob(os.path.join(directory, '*')):\n        if os.path.isfile(file_name) and not os.path.islink(file_name):\n            file_path.append(file_name)\n\n    if not file_path:\n        return None\n\n    file_names = os.path.basename(directory)\n    zip_path = os.path.join(directory, f'../zip/{file_names}.zip')\n    with zipfile.ZipFile(zip_path, 'w') as zip_ref:\n        for file in file_path:\n            zip_ref.write(file)\n\n    return zip_path", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "('", "The", " directory", " specified", " does", " not", " exist", "')", "\n", "\n", "    ", "file", "_", "path", " =", " []", "\n", "    ", "for", " file", "_", "name", " in", " glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " '", "*", "'))", ":", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "name", ")", " and", " not", " os", ".", "path", ".", "is", "link", "(", "file", "_", "name", "):", "\n", "            ", "file", "_", "path", ".", "append", "(", "file", "_", "name", ")", "\n", "\n", "    ", "if", " not", " file", "_", "path", ":", "\n", "        ", "return", " None", "\n", "\n", "    ", "file", "_", "names", " =", " os", ".", "path", ".", "bas", "ename", "(", "directory", ")", "\n", "    ", "zip", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " f", "'", ".", ".", "/", "zip", "/{", "file", "_", "names", "}", ".", "zip", "')", "\n", "    ", "with", " zip", "file", ".", "Z", "ip", "File", "(", "zip", "_", "path", ",", " '", "w", "')", " as", " zip", "_", "ref", ":", "\n", "        ", "for", " file", " in", " file", "_", "path", ":", "\n", "            ", "zip", "_", "ref", ".", "write", "(", "file", ")", "\n", "\n", "    ", "return", " zip", "_", "path", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.161291241645813, -0.10425037145614624, -0.03928108140826225, -3.731181277544238e-05, -0.0005763299996033311, -0.015057121403515339, -0.793020486831665, -0.004582973662763834, -0.00027640812913887203, -0.0018951804377138615, -0.0074036745354533195, -0.020623529329895973, -0.0034641751553863287, -0.05357450246810913, -0.005014818161725998, -0.000198821333469823, -8.284702198579907e-05, -1.580963373184204, -1.6066763401031494, -1.2821006774902344, -2.8102025985717773, -0.12562300264835358, -0.0014857931528240442, -0.01478112768381834, -0.6227235198020935, -0.0028656155336648226, -0.46619826555252075, -0.0003713871701620519, -1.988335371017456, -0.06992600113153458, -3.333465576171875, -0.4594455361366272, -3.223673105239868, -0.022217534482479095, -0.2978251278400421, -0.23943008482456207, -0.9519815444946289, -1.4424116611480713, -0.23195962607860565, -0.0126580148935318, -0.10685215145349503, -3.659658250398934e-05, -0.0775967687368393, -0.05206086114048958, -0.5501256585121155, -0.0005408254801295698, -0.00039772229501977563, -0.002093149581924081, -0.004197596572339535, -0.002533442573621869, -0.004047773778438568, -0.0028166405390948057, -0.10540090501308441, -0.4240906834602356, -0.09284951537847519, -0.0010296764085069299, -0.01056187879294157, -0.008782687596976757, -0.30318939685821533, -0.3176574409008026, -7.64102369430475e-05, -0.00033504117163829505, -0.0036011389456689358, -0.0074484022334218025, -0.11550933122634888, -0.00045348849380388856, -0.003900302806869149, -4.494089080253616e-05, -0.00040236959466710687, -1.8247849941253662, -0.03487385809421539, -0.830418050289154, -0.14584246277809143, -0.0011182728921994567, -0.00016306500765495002, -0.00978990737348795, -0.008902973495423794, -0.27951154112815857, -0.00013600854435935616, -0.0029030581936240196, -2.264974000354414e-06, -0.0001961992384167388, -0.13654494285583496, -0.024938886985182762, -0.002287511248141527, -0.06500818580389023, -0.0004637358069885522, -0.0029564264696091413, -0.004527912009507418, -0.0017063356935977936, -0.006148708052933216, -0.09025543928146362, -7.176141662057489e-05, -0.00016258825780823827, -0.004527912009507418, -0.004317011684179306, -0.23314717411994934, -0.001885304693132639, -0.1354946792125702, -0.6878578662872314, -0.014342905953526497, -2.396077979938127e-05, -2.2053474822314456e-05, -0.0012134101707488298, -0.01955048367381096, -0.0008551992941647768, -0.04600583016872406, -0.08088584244251251, -0.006727900356054306, -0.10075297951698303, -0.00022230061586014926, -2.934746742248535, -0.054296478629112244, -3.8396830558776855, -0.0270296148955822, -2.276555299758911, -3.2543604902457446e-05, -0.1103796660900116, -0.05157924070954323, -0.45072677731513977, -1.9192511899746023e-05, -0.008274204097688198, -0.3277801275253296, -0.005910063628107309, -0.5874307751655579, -0.19344313442707062, -0.6119378209114075, -0.04887526482343674, -1.5497345924377441, -0.008470677770674229, -0.3016856610774994, -1.966933996300213e-05, -0.0024882566649466753, -0.004182401578873396, -0.02811066433787346, -0.029139023274183273, -0.18428117036819458, -0.020743802189826965, -0.8905131816864014, -2.285778284072876, -1.7119885683059692, -0.5515046715736389, -0.9916255474090576, -2.5915844440460205, -0.8878933191299438, -0.020338088274002075, -0.000536655425094068, -0.0016038662288337946, -0.1341385394334793, -0.017927981913089752, -0.0004551566671580076, -0.0028859416488558054, -0.008225138299167156, -0.5365020632743835, -0.6238922476768494, -0.06869060546159744, -0.00010275312524754554, -1.4662635294371285e-05, -0.0030030175112187862, -0.0005527398898266256, -0.0001358893496217206, -0.0028194934129714966, -0.009640329517424107, -0.0004191712068859488, -0.00020454221521504223, -0.0008000510279089212, -0.09690394997596741, -0.026942703872919083, -0.3561375141143799, -0.00017355366435367614, -0.2913401126861572, -0.19224298000335693, -2.6643543243408203, -0.002681828336790204, -0.0021259819623082876, -0.0025599587243050337, -0.09458775073289871, -0.18318220973014832, -0.4559571444988251, -0.005419917870312929, -2.5748875486897305e-05, -0.00011062010162277147, -0.0004094000905752182, -0.0020737587474286556, -0.00206947629339993, -0.06918185949325562, -0.0014805557439103723, -0.003277408890426159, -5.4834770708112046e-05, -0.0012421043356880546, -0.00025555206229910254, -0.012988371774554253, -0.5106902122497559, -0.005150976590812206, -0.4236690402030945, -0.00911657139658928, -0.06784495711326599, -0.15180860459804535, -5.8887653722194955e-05, -0.0007475204183720052, -0.928243100643158, -2.3841855067985307e-07, -1.1920922133867862e-06, -4.339123915997334e-05, -0.0002300474588992074, -0.2441462278366089], "finish_reason": "stop"}], "metrics": {"energy": 204.09665193653103, "energy_per_token": 0.99076044629384, "time": 8.8256235, "time_per_token": 0.042842832524271846}}
