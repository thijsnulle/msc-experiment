{"outputs": [{"text": "# Calculate distance from target to each row in data\n    distances = np.apply_along_axis(\n        lambda row: (row[0] - target[0])**2 + (row[1] - target[1])**2, 1, data\n    )\n\n    # Sort rows by distances in ascending order and return the top k\n    nearest_neighbors = sorted(zip(data.index, distances), key=lambda x: x[1])[:k]\n\n    return [tuple(nearest_neighbors[i][0][:2]) for i in range(k)]", "tokens": ["#", " Calculate", " distance", " from", " target", " to", " each", " row", " in", " data", "\n", "    ", "dist", "ances", " =", " np", ".", "apply", "_", "along", "_", "axis", "(", "\n", "        ", "lambda", " row", ":", " (", "row", "[", "0", "]", " -", " target", "[", "0", "])", "**", "2", " +", " (", "row", "[", "1", "]", " -", " target", "[", "1", "])", "**", "2", ",", " ", "1", ",", " data", "\n", "    ", ")", "\n", "\n", "    ", "#", " Sort", " rows", " by", " distances", " in", " ascending", " order", " and", " return", " the", " top", " k", "\n", "    ", "ne", "arest", "_", "ne", "ighbors", " =", " sorted", "(", "zip", "(", "data", ".", "index", ",", " distances", ")", ",", " key", "=", "lambda", " x", ":", " x", "[", "1", "])", "[:", "k", "]", "\n", "\n", "    ", "return", " [", "tuple", "(", "ne", "arest", "_", "ne", "ighbors", "[", "i", "][", "0", "][", ":", "2", "])", " for", " i", " in", " range", "(", "k", ")]", "\n", "\n", "if"], "logprobs": [-1.50576651096344, -3.6289267539978027, -2.011787176132202, -0.8965121507644653, -0.22083930671215057, -0.6707906723022461, -0.6419843435287476, -2.0018365383148193, -0.41677311062812805, -0.513676643371582, -0.3985874652862549, -0.005702655296772718, -0.15354740619659424, -0.028211727738380432, -0.005288064945489168, -1.4338126182556152, -5.066266385256313e-05, -2.7661890983581543, -7.795983401592821e-05, -0.0020575798116624355, -4.291525328881107e-06, -0.0001776060671545565, -0.00471088569611311, -2.0207042694091797, -0.009928603656589985, -0.14236754179000854, -0.8222772479057312, -0.006685627158731222, -3.397170066833496, -1.2462717294692993, -0.5327833890914917, -0.10534994304180145, -0.09141107648611069, -0.05709012597799301, -0.014216807670891285, -0.00020168177434243262, -0.0020511557813733816, -0.004064158070832491, -0.5172036290168762, -0.0007113072206266224, -0.01094374991953373, -0.011143000796437263, -0.0012422234285622835, -0.00013171759201213717, -0.0008864049450494349, -0.005799490958452225, -0.0006853376980870962, -0.0006959400488995016, -0.00021205084340181202, -0.0009732277248986065, -0.0004888770054094493, -0.0033131728414446115, -0.0001896439935080707, -0.021943628787994385, -0.8704142570495605, -1.3928449153900146, -0.0007465674425475299, -0.018701888620853424, -0.605150580406189, -0.015382695943117142, -0.007875936105847359, -0.12327760457992554, -0.256620317697525, -0.0006216024048626423, -0.015270347706973553, -0.39513659477233887, -0.7782690525054932, -0.6803467273712158, -2.8867995738983154, -1.5030525922775269, -0.010468806140124798, -0.00015758226800244302, -2.7415218353271484, -1.2097556591033936, -0.6471374034881592, -1.3888962268829346, -0.16632983088493347, -2.2613022327423096, -0.002528805285692215, -1.1908186674118042, -0.2086208611726761, -0.6619018912315369, -0.29317206144332886, -0.004987655207514763, -0.020231669768691063, -2.5589632987976074, -0.004031032789498568, -1.206406593322754, -0.002666372573003173, -1.0446193218231201, -0.3459406793117523, -0.28325310349464417, -0.07556933909654617, -0.04299545660614967, -0.08704189211130142, -5.8410845667822286e-05, -0.0007522851810790598, -0.0018776897341012955, -0.001794396317563951, -0.09422871470451355, -3.2782016205601394e-05, -0.00227276305668056, -0.0011539950501173735, -0.00039450492477044463, -0.005957583896815777, -0.11123938858509064, -0.010924884118139744, -0.003697940381243825, -0.001117082079872489, -0.6946282982826233, -0.00027426297310739756, -0.49925497174263, -0.5706709623336792, -2.6424098014831543, -0.005385533440858126, -0.9716699123382568, -2.064950942993164, -2.7894584491150454e-05, -0.13729622960090637, -0.003175813239067793, -0.02509409934282303, -0.1447005271911621, -0.21591909229755402, -0.03653199225664139, -2.3809781074523926, -1.1912426948547363, -0.015570267103612423, -0.0067248218692839146, -0.027278468012809753, -6.568216485902667e-05, -0.0019406310748308897, -0.0006581762572750449, -0.0004253674705978483, -0.10276328027248383, -0.004593890625983477, -0.2468816637992859, -0.014240900054574013, -1.3509565591812134], "finish_reason": "stop"}], "metrics": {"energy": 222.60574001884464, "energy_per_token": 1.6130850726003234, "time": 6.6827936, "time_per_token": 0.048426040579710145}}
{"outputs": [{"text": "# Check if k is a non-negative integer\n    if k < 0 or not isinstance(k, int):\n        raise ValueError(\"'k' must be a non-negative integer\")\n\n    # Calculate distances from target to all data points\n    distances = []\n    for row in data.itertuples():\n        lat1, lon1 = row[1], row[2]\n        lat2, lon2 = target\n        lat_diff = lat2 - lat1\n        lon_diff = lon2 - lon1\n        dist = math.sqrt(lat_diff ** 2 + lon_diff ** 2)\n        distances.append(dist)\n\n    # Sort distances in ascending order\n    sorted_distances = np.argsort(distances)[:k]\n\n    # Return the 'k' nearest neighbors\n    return [data.iloc[i].values for i in sorted_distances]", "tokens": ["#", " Check", " if", " k", " is", " a", " non", "-", "negative", " integer", "\n", "    ", "if", " k", " <", " ", "0", " or", " not", " isinstance", "(", "k", ",", " int", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "'", "k", "'", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n", "\n", "    ", "#", " Calculate", " distances", " from", " target", " to", " all", " data", " points", "\n", "    ", "dist", "ances", " =", " []", "\n", "    ", "for", " row", " in", " data", ".", "it", "ert", "up", "les", "():", "\n", "        ", "lat", "1", ",", " lon", "1", " =", " row", "[", "1", "]", ",", " row", "[", "2", "]", "\n", "        ", "lat", "2", ",", " lon", "2", " =", " target", "\n", "        ", "lat", "_", "diff", " =", " lat", "2", " -", " lat", "1", "\n", "        ", "lon", "_", "diff", " =", " lon", "2", " -", " lon", "1", "\n", "        ", "dist", " =", " math", ".", "sqrt", "(", "lat", "_", "diff", " **", " ", "2", " +", " lon", "_", "diff", " **", " ", "2", ")", "\n", "        ", "dist", "ances", ".", "append", "(", "dist", ")", "\n", "\n", "    ", "#", " Sort", " distances", " in", " ascending", " order", "\n", "    ", "s", "orted", "_", "dist", "ances", " =", " np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n", "\n", "    ", "#", " Return", " the", " '", "k", "'", " nearest", " neighbors", "\n", "    ", "return", " [", "data", ".", "il", "oc", "[", "i", "]", ".", "values", " for", " i", " in", " sorted", "_", "dist", "ances", "]", "\n", "\n", "def"], "logprobs": [-1.50576651096344, -1.5362573862075806, -1.0698859691619873, -0.5967395901679993, -0.006895791739225388, -0.27750787138938904, -0.18715456128120422, -0.0026944305282086134, -0.0017617909470573068, -0.012260782532393932, -0.1258973777294159, -0.0019355150870978832, -0.04977226257324219, -2.6057913303375244, -0.13086417317390442, -0.0019277813844382763, -0.011755715124309063, -0.96141517162323, -0.21193191409111023, -0.11454281955957413, -0.0001995364436879754, -0.0013258008984848857, -0.0006325627909973264, -0.005867755971848965, -0.006488328333944082, -0.0025637636426836252, -0.0017090728506445885, -0.01324944943189621, -0.0024651873391121626, -3.814689989667386e-06, -0.2916582524776459, -0.09212691336870193, -0.9859707951545715, -0.002180462470278144, -0.0014555584639310837, -0.05578283965587616, -0.0020374746527522802, -0.026658250018954277, -0.01670726388692856, -0.00040844682371243834, -0.0003000047872774303, -0.0022977397311478853, -0.47290605306625366, -0.00010501786891836673, -0.0015833948273211718, -0.17728665471076965, -0.0012176964664831758, -0.11587885767221451, -0.8598212003707886, -2.660982131958008, -0.8725537657737732, -0.29761525988578796, -0.6486616730690002, -1.0205519199371338, -0.756912887096405, -0.03570182994008064, -0.1338505744934082, -0.0014761515194550157, -0.09085562825202942, -0.02399325557053089, -0.007120352238416672, -0.6787418723106384, -0.00403708778321743, -0.014056253246963024, -0.015443384647369385, -0.5528826713562012, -0.0033538066782057285, -0.01018658746033907, -0.04359649866819382, -0.41072753071784973, -0.0012309125158935785, -0.0007429938414134085, -4.529942543740617e-06, -0.3828633427619934, -0.013125213794410229, -0.0019075546879321337, -0.36230573058128357, -0.14448367059230804, -0.2557070255279541, -0.08566904067993164, -0.00010227633902104571, -0.07748392224311829, -0.29273101687431335, -0.4319348633289337, -0.05343743413686752, -0.15714706480503082, -0.009790261276066303, -0.0005515484372153878, -0.000806721393018961, -0.0033611729741096497, -4.017272294731811e-05, -0.01571778766810894, -0.013516456820070744, -0.10777100175619125, -0.0031645242124795914, -0.00634844321757555, -0.00014959646796341985, -3.0517112463712692e-05, -0.00026222606538794935, -0.023876981809735298, -2.0609242916107178, -0.07771468162536621, -1.9070285558700562, -0.300203412771225, -0.39034709334373474, -0.05982658267021179, -2.5643885135650635, -1.149396538734436, -0.016595063731074333, -0.0008068405441008508, -0.0006790239713154733, -0.010123573243618011, -6.5205356804654e-05, -0.005501724313944578, -2.8967437174287625e-05, -7.593343616463244e-05, -9.893881360767409e-05, -0.0006214833119884133, -0.00023636408150196075, -0.00029237763374112546, -4.494089080253616e-05, -0.00028427375946193933, -0.00040415700641460717, -0.024460889399051666, -1.0059897899627686, -0.1754869669675827, -0.6485748887062073, -2.7418097943154862e-06, -0.2920703887939453, -0.08073849976062775, -0.052196647971868515, -9.583967766957358e-05, -2.3841830625315197e-06, -0.9741429686546326, -0.0007737264968454838, -1.6331539882230572e-05, -0.0007620529504492879, -0.0012518672738224268, -1.9073468138230965e-06, -1.311301275563892e-06, -0.0010543270036578178, -0.0010570659069344401, -2.5510462364763953e-05, -0.0036967527121305466, -0.4384234845638275, -0.004407928790897131, -0.030093684792518616, -0.0026104918215423822, -0.0004786299541592598, -0.00032014489988796413, -0.17254379391670227, -0.008527295663952827, -0.010574853979051113, -0.002012015553191304, -0.036892469972372055, -0.0006011109799146652, -0.020029081031680107, -0.15704131126403809, -0.41370096802711487, -0.24009960889816284, -0.004892758093774319, -7.295342220459133e-05, -0.3685280382633209, -0.0002269487304147333, -0.4407062232494354, -0.0014509160537272692, -0.00025781645672395825, -0.14327768981456757, -0.0038083898834884167, -0.003609334584325552, -1.0113213062286377, -7.390948667307384e-06, -0.5651355981826782, -0.00042000532266683877, -0.00031680811662226915, -0.01844925247132778, -2.312633478140924e-05, -0.01888287253677845, -0.8434516191482544, -0.0021557204890996218, -0.009032579138875008, -0.021768679842352867, -0.1099710464477539, -0.00018261195509694517, -0.04779587313532829, -0.46039173007011414, -0.4835391938686371, -1.060088038444519, -0.0006156456656754017, -0.0009709649602882564, -0.09928032755851746, -0.029258159920573235, -0.33556488156318665, -0.0001864259538706392, -0.8352447152137756, -0.6051110029220581, -0.1337117701768875, -0.04704803228378296, -0.1802639216184616, -2.5152843591058627e-05, -0.0011206544004380703, -0.21684744954109192, -0.09556982666254044, -0.4707584083080292, -0.8225290775299072, -0.126265287399292, -4.792098479811102e-05, -8.415821503149346e-05, -0.008023176342248917, -0.00013195598148740828, -1.4305104514278355e-06, -0.0004037995240651071, -0.19933287799358368, -0.195369690656662, -0.02071087434887886, -1.2682636976242065], "finish_reason": "stop"}], "metrics": {"energy": 304.2141899375915, "energy_per_token": 1.4083990274888496, "time": 10.467834, "time_per_token": 0.04846219444444445}}
{"outputs": [{"text": "# Check input parameters\n    if k < 0:\n        raise ValueError(\"k must be a non-negative integer\")\n    elif k != int(k):\n        raise ValueError(\"k must be an integer\")\n\n    # Calculate the distance from the target to all other points\n    distances = []\n    for point in data.to_numpy().tolist():\n        distance = math.acos(\n            math.sin(math.radians(target[0])) * math.sin(math.radians(point[0]))\n            +\n            math.cos(math.radians(target[0])) * math.cos(math.radians(point[0])) * math.cos(math.radians(target[1]) - math.radians(point[1]))\n        )\n        distance = math.degrees(distance)\n        distances.append((distance, point))\n\n    distances.sort(key=lambda x: x[0])\n\n    # Return the k nearest neighbors\n    return distances[0:k]", "tokens": ["#", " Check", " input", " parameters", "\n", "    ", "if", " k", " <", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "k", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n", "    ", "elif", " k", " ", "!", "=", " int", "(", "k", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "k", " must", " be", " an", " integer", "\"", ")", "\n", "\n", "    ", "#", " Calculate", " the", " distance", " from", " the", " target", " to", " all", " other", " points", "\n", "    ", "dist", "ances", " =", " []", "\n", "    ", "for", " point", " in", " data", ".", "to", "_", "numpy", "()", ".", "tol", "ist", "():", "\n", "        ", "distance", " =", " math", ".", "ac", "os", "(", "\n", "            ", "math", ".", "sin", "(", "math", ".", "rad", "ians", "(", "target", "[", "0", "]))", " *", " math", ".", "sin", "(", "math", ".", "rad", "ians", "(", "point", "[", "0", "]))", "\n", "            ", "+", "\n", "            ", "math", ".", "cos", "(", "math", ".", "rad", "ians", "(", "target", "[", "0", "]))", " *", " math", ".", "cos", "(", "math", ".", "rad", "ians", "(", "point", "[", "0", "]))", " *", " math", ".", "cos", "(", "math", ".", "rad", "ians", "(", "target", "[", "1", "])", " -", " math", ".", "rad", "ians", "(", "point", "[", "1", "]))", "\n", "        ", ")", "\n", "        ", "distance", " =", " math", ".", "deg", "rees", "(", "distance", ")", "\n", "        ", "dist", "ances", ".", "append", "((", "distance", ",", " point", "))", "\n", "\n", "    ", "dist", "ances", ".", "sort", "(", "key", "=", "lambda", " x", ":", " x", "[", "0", "])", "\n", "\n", "    ", "#", " Return", " the", " k", " nearest", " neighbors", "\n", "    ", "return", " distances", "[", "0", ":", "k", "]<", "|", "end", "of", "text", "|>"], "logprobs": [-1.50576651096344, -1.5362573862075806, -2.1886184215545654, -1.7836664915084839, -0.14948488771915436, -0.004261104390025139, -0.07400772720575333, -2.2798919677734375, -0.20036067068576813, -0.0031901916954666376, -0.07923582941293716, -0.5506598353385925, -0.007231016177684069, -0.002498839981853962, -0.02197791449725628, -0.0024435443338006735, -1.2040065485052764e-05, -0.24487511813640594, -0.0773836299777031, -0.897127091884613, -0.1702505201101303, -0.006065769586712122, -0.09784235805273056, -0.03199057653546333, -0.00102324562612921, -0.0010850501712411642, -0.008441363461315632, -0.4192918539047241, -0.00019894051365554333, -0.0026844439562410116, -0.39443984627723694, -1.3549258708953857, -2.3755857944488525, -1.7312700748443604, -4.172316494077677e-06, -5.8412379075889476e-06, -0.1385374665260315, -0.0028736984822899103, -0.0025122768711298704, -0.00823909044265747, -0.015073795802891254, -0.0005161621957086027, -0.012539591640233994, -0.03712842985987663, -6.48477507638745e-05, -0.004176703747361898, -0.01226831879466772, -0.00625497754663229, -0.029408421367406845, -0.0020192726515233517, -0.16825799643993378, -0.002923145890235901, -0.017770130187273026, -0.00010585224663373083, -0.0012519863666966558, -0.3335765302181244, -0.0014556775568053126, -0.293175607919693, -0.7814050912857056, -1.0183943510055542, -0.4324818551540375, -1.2822558879852295, -0.290626585483551, -0.020729906857013702, -0.8892171382904053, -1.6632866859436035, -1.9791473150253296, -0.5508810877799988, -0.6956697106361389, -0.001341634662821889, -0.1905076801776886, -0.035364508628845215, -0.007182254455983639, -0.9322835206985474, -0.005174695514142513, -0.009401099756360054, -0.027924619615077972, -2.533731698989868, -0.007566483225673437, -0.010115784592926502, -0.11302774399518967, -2.417691946029663, -1.585470999998506e-05, -0.32422783970832825, -1.2705421447753906, -0.14346030354499817, -0.16406333446502686, -1.5497195136049413e-06, -0.05957749858498573, -0.030226008966565132, -0.003024767152965069, -2.210270404815674, -0.02497958019375801, -0.47621411085128784, -7.557583012385294e-05, -1.585005760192871, -0.0003904534096363932, -0.012143254280090332, -0.8174198269844055, -0.02841116115450859, -0.7553219199180603, -4.124556289752945e-05, -0.10125663876533508, -0.008667468093335629, -0.7878753542900085, -0.00024291902082040906, -0.002539269160479307, -2.5152843591058627e-05, -0.0028246049769222736, -0.4736465811729431, -0.0003955773718189448, -0.005018613766878843, -0.030437642708420753, -0.1829083263874054, -0.021482864394783974, -0.0006236277404241264, -0.0027416283264756203, -0.0010109796421602368, -0.024853305891156197, -0.00012039413559250534, -8.070142939686775e-05, -1.7404405298293568e-05, -0.00018249277491122484, -0.001321157906204462, -0.0003280101518612355, -0.002015108708292246, -0.00531782815232873, -0.34527722001075745, -0.017501913011074066, -0.0029487009160220623, -2.864665985107422, -0.0018659100169315934, -0.019116686657071114, -3.933898824470816e-06, -0.00016711745411157608, -0.0003351603518240154, -0.001958239823579788, -4.7801782784517854e-05, -4.672895011026412e-05, -6.6756979322235566e-06, -0.00015746307326480746, -0.0004904259694740176, -3.9457496313843876e-05, -0.0013797297142446041, -0.0023235485423356295, -0.04654510319232941, -0.02416001819074154, -0.0013168720761314034, -2.7894584491150454e-05, -0.0001062098381225951, -0.012761122547090054, -3.766942609217949e-05, -5.090107151772827e-05, -5.149708886165172e-05, -7.188061863416806e-05, -0.005712256301194429, -6.842378934379667e-05, -0.000863894063513726, -0.0032667149789631367, -0.3284600079059601, -0.18928830325603485, -0.0006428082706406713, -0.00048685140791349113, -0.011798952706158161, -0.21133282780647278, -0.0001591317413840443, -0.0008905735448934138, -2.7894584491150454e-05, -0.017874352633953094, -0.304332971572876, -0.00027295202016830444, -0.0011825718684121966, -0.10179083049297333, -0.005133661441504955, -0.012830797582864761, -4.327203714638017e-05, -9.262132516596466e-05, -9.417489309271332e-06, -0.0002851079625543207, -0.0011528043542057276, -0.000120751719805412, -0.0005977750988677144, -0.08081547170877457, -0.015683520585298538, -0.07611698657274246, -0.01832566037774086, -2.009028911590576, -0.026158079504966736, -1.3206682205200195, -0.6198904514312744, -1.6152212619781494, -1.0371154530730564e-05, -0.15642981231212616, -1.7881377516459906e-06, -0.0026115619111806154, -0.2179020792245865, -0.019067097455263138, -0.27682217955589294, -0.02938133291900158, -0.12312837690114975, -5.471556869451888e-05, -0.0009133219718933105, -0.000773369160015136, -1.8884903192520142, -1.4953949451446533, -0.03853177651762962, -0.11494022607803345, -0.14496320486068726, -0.005236243829131126, -0.08582998812198639, -0.0013429442187771201, -1.9011722803115845, -0.0005197366117499769, -0.24153278768062592, -0.0002224197960458696, -0.3917486369609833, -0.011046327650547028, -0.013887796550989151, -0.0023405556567013264, -0.05488930270075798, -0.0004737447015941143, -0.02357581816613674, -0.00023040501400828362, -0.004892046097666025, -0.01322062686085701, -0.10513018816709518, -0.4201619029045105, -0.00023409964342135936, -0.4082978069782257, -0.2533997893333435, -0.1112583726644516, -1.0474371910095215, -0.19371327757835388, -0.0985264927148819, -0.17325277626514435, -0.000581572181545198, -0.32572051882743835, -1.7377939224243164, -1.8780157566070557, -0.045301083475351334, -0.039563801139593124, -0.13018423318862915, -1.742077350616455, -4.768370445162873e-07, -1.311301275563892e-06, -1.4543427823809907e-05, -0.0005754960584454238, -0.1346108615398407], "finish_reason": "stop"}], "metrics": {"energy": 343.19984770774846, "energy_per_token": 1.383870353660276, "time": 12.090627, "time_per_token": 0.04875252822580645}}
{"outputs": [{"text": "lat1, lon1 = target\n    k = int(k)\n\n    if k < 1:\n        raise ValueError('k must be a non-negative integer')\n\n    distances = []\n\n    for i in range(len(data)):\n        lat2, lon2 = data.iloc[i][['Latitude', 'Longitude']]\n        distance = math.radians(lat2 - lat1) + math.radians(lon2 - lon1) * math.cos(math.radians(lat1) * math.cos(math.radians(lat2)))\n        distance = round(math.degrees(distance), 4)\n\n        if 180 >= distance > 180 - 90:\n            distance = (180 - distance)\n        elif distance > 180:\n            distance = (distance - 360)\n        elif distance < -180:\n            distance = (distance + 360)\n\n        distances.append(distance)\n\n    distances = sorted(distances)[:k]\n\n    ", "tokens": ["lat", "1", ",", " lon", "1", " =", " target", "\n", "    ", "k", " =", " int", "(", "k", ")", "\n", "\n", "    ", "if", " k", " <", " ", "1", ":", "\n", "        ", "raise", " Value", "Error", "('", "k", " must", " be", " a", " non", "-", "negative", " integer", "')", "\n", "\n", "    ", "dist", "ances", " =", " []", "\n", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "data", "))", ":", "\n", "        ", "lat", "2", ",", " lon", "2", " =", " data", ".", "il", "oc", "[", "i", "][", "['", "Lat", "itude", "'", ",", " '", "Long", "itude", "']", "]", "\n", "        ", "distance", " =", " math", ".", "rad", "ians", "(", "lat", "2", " -", " lat", "1", ")", " +", " math", ".", "rad", "ians", "(", "lon", "2", " -", " lon", "1", ")", " *", " math", ".", "cos", "(", "math", ".", "rad", "ians", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "math", ".", "rad", "ians", "(", "lat", "2", ")))", "\n", "        ", "distance", " =", " round", "(", "math", ".", "deg", "rees", "(", "distance", ")", ",", " ", "4", ")", "\n", "\n", "        ", "if", " ", "1", "8", "0", " >=", " distance", " >", " ", "1", "8", "0", " -", " ", "9", "0", ":", "\n", "            ", "distance", " =", " (", "1", "8", "0", " -", " distance", ")", "\n", "        ", "elif", " distance", " >", " ", "1", "8", "0", ":", "\n", "            ", "distance", " =", " (", "distance", " -", " ", "3", "6", "0", ")", "\n", "        ", "elif", " distance", " <", " -", "1", "8", "0", ":", "\n", "            ", "distance", " =", " (", "distance", " +", " ", "3", "6", "0", ")", "\n", "\n", "        ", "dist", "ances", ".", "append", "(", "distance", ")", "\n", "\n", "    ", "dist", "ances", " =", " sorted", "(", "dist", "ances", ")", "[:", "k", "]", "\n", "\n", "    "], "logprobs": [-3.6461758613586426, -0.7399116158485413, -0.1032400131225586, -0.30936399102211, -0.00027450130437500775, -0.0202143806964159, -0.21618513762950897, -0.2506788969039917, -0.1612052023410797, -3.21907114982605, -0.3121766746044159, -0.09652020037174225, -0.000393432448618114, -0.014093279838562012, -0.0018822111887857318, -0.04106191173195839, -1.1630282402038574, -0.00033480284037068486, -0.24366676807403564, -0.35185837745666504, -0.11810034513473511, -0.0021621440537273884, -1.953800082206726, -0.20690834522247314, -0.012728990986943245, -0.0036634968128055334, -0.022709889337420464, -0.004936174489557743, -1.4305012882687151e-05, -1.3596526384353638, -0.41466447710990906, -0.15101228654384613, -0.0035191767383366823, -0.11805479228496552, -0.3041227161884308, -0.0010246747406199574, -0.011844426393508911, -0.008880878798663616, -0.1763114184141159, -0.002239697612822056, -0.11187060922384262, -0.000486970558995381, -1.4836875200271606, -0.07246840000152588, -0.017216047272086143, -0.17303462326526642, -0.029081476852297783, -1.139296293258667, -0.00040737437666393816, -0.08920390158891678, -0.83698570728302, -0.22964909672737122, -0.09508367627859116, -0.0008434075862169266, -0.26920950412750244, -1.7523612768854946e-05, -0.0007197650265879929, -0.05196942389011383, -5.745722592109814e-05, -0.003770505776628852, -0.005446238908916712, -0.07262361794710159, -0.0038380783516913652, -0.06669241189956665, -0.0005967028555460274, -6.651657167822123e-05, -0.0009868042543530464, -0.029966896399855614, -0.13838748633861542, -0.16912375390529633, -9.941560711013153e-05, -0.0003095386200584471, -0.0001248043408850208, -1.9106537103652954, -0.09281116724014282, -0.008118250407278538, -0.00016437610611319542, -0.0007558587822131813, -6.0794889577664435e-05, -0.00963584240525961, -3.45700973412022e-05, -1.1801649634435307e-05, -0.005743073765188456, -0.013053441420197487, -0.6483088731765747, -0.1864098608493805, -0.5777627825737, -0.03427296131849289, -0.6390918493270874, -0.0002760506176855415, -3.2807369232177734, -0.00018380382971372455, -0.0739554762840271, -0.3509652316570282, -0.698975682258606, -0.1418939083814621, -0.0031264969147741795, -0.000339569611242041, -0.005550805013626814, -0.05853153020143509, -0.14498981833457947, -0.004013579338788986, -0.04769188165664673, -0.0001597276859683916, -0.032020825892686844, -0.013809965923428535, -0.025359589606523514, -0.005940993782132864, -0.0004924515378661454, -0.00023946279543451965, -0.030046140775084496, -0.8556064963340759, -0.43572840094566345, -0.0027633835561573505, -0.091864213347435, -0.018634025007486343, -0.07214215397834778, -3.349725011503324e-05, -0.0017477489309385419, -1.1920858014491387e-05, -0.0631597489118576, -0.01029880065470934, -0.6802623867988586, -0.49932861328125, -0.7541611790657043, -0.08102106302976608, -0.0008420973899774253, -0.8481687307357788, -0.016857663169503212, -0.006658746860921383, -0.000382707774406299, -0.0062013110145926476, -0.00011860620725201443, -0.0016978861531242728, -0.01065706554800272, -0.0035580205731093884, -0.32370680570602417, -0.03057200275361538, -0.03930950537323952, -1.535889744758606, -0.11672071367502213, -3.29890775680542, -0.08549658209085464, -1.2401533126831055, -1.1086402082582936e-05, -0.05116512253880501, -1.4305104514278355e-06, -0.00666881212964654, -0.8208827376365662, -0.19725650548934937, -0.2666100561618805, -0.06979604810476303, -1.6682857275009155, -0.0018290233565494418, -0.05386507138609886, -2.397043466567993, -0.0008834273321554065, -2.440352439880371, -3.1530141830444336, -1.7712907791137695, -0.370944082736969, -0.007464967668056488, -2.125851631164551, -0.030777670443058014, -1.0281095504760742, -0.029239751398563385, -1.2730469703674316, -1.4824227094650269, -0.017794253304600716, -0.4607519805431366, -0.5550585985183716, -1.851366400718689, -0.014034977182745934, -0.09098298102617264, -0.0636918693780899, -0.006747674662619829, -0.806220293045044, -0.18353748321533203, -3.4824256896972656, -0.4604382812976837, -0.01220508199185133, -0.0017241863533854485, -0.16841524839401245, -0.06520175188779831, -0.03305705264210701, -1.216607928276062, -0.7272594571113586, -0.43902137875556946, -0.42081645131111145, -0.3700522780418396, -0.004211960360407829, -0.1854746788740158, -0.011366020888090134, -0.0007347744540311396, -1.039553165435791, -0.002250283258035779, -0.0010201494442299008, -0.020168818533420563, -0.1479608118534088, -1.0285584926605225, -2.2645034790039062, -0.043943148106336594, -0.005709411576390266, -0.945249080657959, -0.0006399490521289408, -0.0001823735801735893, -0.014366407878696918, -0.028980616480112076, -1.143903374671936, -0.9502564072608948, -0.11645113676786423, -0.38170015811920166, -0.3201777935028076, -0.08666953444480896, -0.010574146173894405, -0.00019476900342851877, -0.011211492121219635, -0.000972155889030546, -0.000681883015204221, -0.0021379964891821146, -0.008217571303248405, -0.14096882939338684, -0.8965262770652771, -0.01742037944495678, -0.0008569859201088548, -0.004733072593808174, -8.010543388081715e-05, -3.7431014789035544e-05, -0.00037317464011721313, -0.0013786583440378308, -0.21530893445014954, -0.00022635281493421644, -0.08362854272127151, -0.0008136299438774586, -0.0019311128417029977, -0.0006878394051454961, -0.7836195826530457, -0.09775219857692719, -0.008264982141554356, -0.0014038955559954047, -0.029515603557229042, -0.006169086322188377, -1.1700471639633179, -0.013418836519122124, -0.3399231433868408, -0.7050325870513916, -0.006417499855160713, -0.08239064365625381, -9.775113539944869e-06, -0.180053249001503, -1.269039511680603, -0.005070327315479517, -0.006498750764876604, -0.00934453122317791, -0.27243414521217346, -0.00021455370006151497], "finish_reason": "length"}], "metrics": {"energy": 354.57537582397464, "energy_per_token": 1.385060061812401, "time": 12.5135145, "time_per_token": 0.048880916015625}}
{"outputs": [{"text": "data = data.copy()\n    data['dist'] = calculate_dist(data, target)\n    data = data.sort_values('dist')\n    return data[0:k]", "tokens": ["data", " =", " data", ".", "copy", "()", "\n", "    ", "data", "['", "dist", "']", " =", " calculate", "_", "dist", "(", "data", ",", " target", ")", "\n", "    ", "data", " =", " data", ".", "sort", "_", "values", "('", "dist", "')", "\n", "    ", "return", " data", "[", "0", ":", "k", "]", "\n", "\n", "def"], "logprobs": [-3.3371758460998535, -0.7197363376617432, -0.29759806394577026, -0.2723798453807831, -0.9743618965148926, -0.01226137112826109, -0.12423265725374222, -0.223855122923851, -1.0381602048873901, -0.31491079926490784, -2.18558406829834, -0.10302012413740158, -0.014651913195848465, -4.131105899810791, -0.030314020812511444, -1.4994351863861084, -0.4679960012435913, -0.23148676753044128, -0.371539831161499, -0.1354178488254547, -0.09890623390674591, -0.07078144699335098, -0.10898430645465851, -0.747807502746582, -0.6919288039207458, -0.04898378625512123, -0.01416744478046894, -0.01947624981403351, -0.0014944825088605285, -0.0009397619287483394, -1.0903937816619873, -7.235741941258311e-05, -0.30268511176109314, -0.38025641441345215, -0.07985895872116089, -0.8410253524780273, -0.12330985069274902, -1.278207540512085, -1.0191682577133179, -0.009299533441662788, -0.05220751091837883, -0.16688677668571472, -0.5784755349159241, -0.02361796610057354, -0.04487181827425957], "finish_reason": "stop"}], "metrics": {"energy": 35.571384140014636, "energy_per_token": 0.7904752031114364, "time": 1.887576, "time_per_token": 0.04194613333333333}}
{"outputs": [{"text": "data['distance'] = ((data['Latitude'] - target[0])**2 + (data['Longitude'] - target[1])**2)**0.5\n    sorted_distances = np.argsort(data['distance'])[:k]\n    nearest_neighbors = data.iloc[sorted_distances].reset_index(drop=True).to_numpy()\n    return nearest_neighbors", "tokens": ["data", "['", "distance", "']", " =", " ((", "data", "['", "Lat", "itude", "']", " -", " target", "[", "0", "])", "**", "2", " +", " (", "data", "['", "Long", "itude", "']", " -", " target", "[", "1", "])", "**", "2", ")**", "0", ".", "5", "\n", "    ", "s", "orted", "_", "dist", "ances", " =", " np", ".", "args", "ort", "(", "data", "['", "distance", "'])", "[:", "k", "]", "\n", "    ", "ne", "arest", "_", "ne", "ighbors", " =", " data", ".", "il", "oc", "[", "s", "orted", "_", "dist", "ances", "]", ".", "reset", "_", "index", "(", "drop", "=", "True", ")", ".", "to", "_", "numpy", "()", "\n", "    ", "return", " nearest", "_", "ne", "ighbors", "\n", "\n", "#"], "logprobs": [-3.3371758460998535, -1.617361307144165, -0.9599721431732178, -0.061432451009750366, -0.01184006780385971, -1.844104528427124, -0.535576343536377, -0.33581259846687317, -0.21451438963413239, -0.00013779645087197423, -0.001827000523917377, -0.1610681265592575, -0.012499799951910973, -0.0005526207387447357, -0.0015442363219335675, -0.0033293315209448338, -0.765593945980072, -0.004786106292158365, -0.03126571327447891, -0.07441360503435135, -0.010603162460029125, -0.003182467771694064, -0.0005031750188209116, -8.749579137656838e-05, -0.0033646184019744396, -0.029009798541665077, -0.007187225390225649, -0.0005813338793814182, -0.0015447123441845179, -0.0034892410039901733, -0.015954336151480675, -0.0005436849314719439, -0.18559874594211578, -0.5073064565658569, -9.190614218823612e-05, -0.0002451834443490952, -0.05199850723147392, -0.08396652340888977, -1.9157116413116455, -0.01030764915049076, -0.020708423107862473, -2.6111252307891846, -0.13126057386398315, -0.011848313733935356, -1.9221302270889282, -4.589452510117553e-05, -0.9841446280479431, -0.0007008241955190897, -0.0010805251076817513, -0.004709105938673019, -0.024566160514950752, -7.56950321374461e-05, -0.09924297779798508, -1.2270421981811523, -0.011766199953854084, -0.030645880848169327, -0.09503836929798126, -0.08240678161382675, -0.7721256017684937, -0.12851867079734802, -0.07409960776567459, -0.08755107969045639, -0.00982638355344534, -0.006255806889384985, -0.2769332528114319, -0.09231671690940857, -0.30501657724380493, -1.5616295058862306e-05, -0.003978196531534195, -0.038976266980171204, -5.960462772236497e-07, -1.3351351299206726e-05, -2.5748875486897305e-05, -6.139089964563027e-05, -0.23275035619735718, -0.16101180016994476, -2.521758794784546, -0.00013124081306159496, -0.00011634149996098131, -0.031457722187042236, -0.0033527372870594263, -0.01147645153105259, -0.0008251837571151555, -0.22779598832130432, -0.6709445714950562, -0.7243643403053284, -3.4927710657939315e-05, -0.7773236036300659, -0.06522341817617416, -0.19840091466903687, -0.07549549639225006, -0.06768320500850677, -0.013859815895557404, -7.426462980220094e-05, -2.0265558760002023e-06, -1.0132738680113107e-05, -0.27440276741981506, -0.015168554149568081, -1.8592584133148193], "finish_reason": "stop"}], "metrics": {"energy": 159.77215754508973, "energy_per_token": 1.6138601772231285, "time": 4.5951405, "time_per_token": 0.046415560606060606}}
{"outputs": [{"text": "# check if k is an integer and non-negative\n    if not isinstance(k, int) or k < 0:\n        raise ValueError(f\"k must be a non-negative integer, not '{type(k)}'\")\n    # sort data points by distance from target\n    # get the k nearest neighbors\n    distances = [math.dist(target, [i[0], i[1]]) for i in data.values]\n    knn_list = sorted(distances)[:k]\n\n    # get the nearest neighbor coordinates\n    nearest_neighbors = data[data['Latitude'].isin(knn_list)].values\n    return nearest_neighbors", "tokens": ["#", " check", " if", " k", " is", " an", " integer", " and", " non", "-", "negative", "\n", "    ", "if", " not", " isinstance", "(", "k", ",", " int", ")", " or", " k", " <", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "k", " must", " be", " a", " non", "-", "negative", " integer", ",", " not", " '", "{", "type", "(", "k", ")}", "'", "\"", ")", "\n", "    ", "#", " sort", " data", " points", " by", " distance", " from", " target", "\n", "    ", "#", " get", " the", " k", " nearest", " neighbors", "\n", "    ", "dist", "ances", " =", " [", "math", ".", "dist", "(", "target", ",", " [", "i", "[", "0", "]", ",", " i", "[", "1", "]]", ")", " for", " i", " in", " data", ".", "values", "]", "\n", "    ", "k", "nn", "_", "list", " =", " sorted", "(", "dist", "ances", ")", "[:", "k", "]", "\n", "\n", "    ", "#", " get", " the", " nearest", " neighbor", " coordinates", "\n", "    ", "ne", "arest", "_", "ne", "ighbors", " =", " data", "[", "data", "['", "Lat", "itude", "']", ".", "isin", "(", "k", "nn", "_", "list", ")]", ".", "values", "\n", "    ", "return", " nearest", "_", "ne", "ighbors", "\n", "\n", "def"], "logprobs": [-1.50576651096344, -2.341902256011963, -1.143540859222412, -0.2880820333957672, -0.018389448523521423, -2.3337883949279785, -0.08211516588926315, -1.9308974742889404, -0.6492435336112976, -0.012893406674265862, -0.0025049042887985706, -0.09434739500284195, -0.0027781245298683643, -0.06168903037905693, -0.18655765056610107, -0.08927401155233383, -0.00036399890086613595, -0.0028851095121353865, -0.00038961926475167274, -0.012271616607904434, -0.1684238165616989, -0.00825847964733839, -0.04665933921933174, -0.031945548951625824, -0.0009834696538746357, -0.10789921134710312, -0.007987226359546185, -0.002262653084471822, -0.0030053947120904922, -0.012884697876870632, -0.004692731890827417, -6.198863957251888e-06, -0.24096110463142395, -2.7597758769989014, -0.15827588737010956, -0.4723149836063385, -0.13542388379573822, -0.002079231198877096, -0.4104909598827362, -0.04126543179154396, -0.0010989824077114463, -0.0006292270263656974, -0.008135869167745113, -0.20521017909049988, -1.6011072397232056, -2.9051222801208496, -0.00041392818093299866, -1.4178684949874878, -0.0002015625941567123, -0.0016675388906151056, -0.3776223361492157, -0.03212796151638031, -0.18317735195159912, -0.00021860594279132783, -0.0048744892701506615, -1.5270110368728638, -0.2704428732395172, -4.145443916320801, -0.944064199924469, -1.576721429824829, -0.31112465262413025, -0.2792772352695465, -0.27676406502723694, -0.09080000221729279, -0.3519091010093689, -0.0028696570079773664, -3.8684134483337402, -3.4838674068450928, -1.4584382772445679, -0.9437311887741089, -0.6517072916030884, -0.49693581461906433, -0.32027357816696167, -0.056726377457380295, -1.6114461421966553, -0.05910814180970192, -0.02263425663113594, -1.1363391876220703, -0.8974248170852661, -3.6954195820726454e-05, -0.21862974762916565, -0.18995890021324158, -0.4960887134075165, -0.011330544017255306, -2.1492481231689453, -3.08065128326416, -0.29911449551582336, -0.17436479032039642, -0.010386815294623375, -0.00849987380206585, -0.03036513738334179, -0.0008310201810672879, -0.001497934339568019, -0.0006205302197486162, -0.014685510657727718, -0.05730166658759117, -0.00235958443954587, -0.0008177988929674029, -0.024524403735995293, -0.10339203476905823, -0.707153856754303, -0.11079921573400497, -0.024482177570462227, -0.01578056626021862, -3.5688014030456543, -2.4042510986328125, -1.5699633359909058, -2.781827449798584, -0.014346313662827015, -1.5463924407958984, -0.04290638491511345, -1.8261091709136963, -1.6689160474925302e-05, -0.3138234317302704, -0.08863631635904312, -0.012276443652808666, -0.012085780501365662, -0.01591409370303154, -2.343759059906006, -0.004860253538936377, -1.4042479991912842, -1.764865756034851, -0.42299142479896545, -2.8361358642578125, -2.116947650909424, -3.104449510574341, -0.3995550870895386, -0.0035875977482646704, -1.072238564491272, -0.0578407347202301, -0.06810824573040009, -0.5943504571914673, -0.020865226164460182, -0.04391223192214966, -1.3782522678375244, -0.6848880648612976, -2.127627372741699, -0.5525130033493042, -0.42888668179512024, -0.00018439977429807186, -0.002715830225497484, -0.003319469979032874, -0.10611001402139664, -0.08616416901350021, -0.19581465423107147, -2.90866428258596e-05, -0.004822409246116877, -6.425174069590867e-05, -0.18788084387779236, -1.1547943353652954, -0.40962883830070496, -0.5180202126502991, -0.7088411450386047, -0.7820534706115723, -0.14390915632247925, -8.106198947643861e-06, -6.6756979322235566e-06, -2.9444261599564925e-05, -0.41480472683906555, -0.025791501626372337, -1.1235836744308472], "finish_reason": "stop"}], "metrics": {"energy": 252.3235200538635, "energy_per_token": 1.5672268326326926, "time": 8.578695, "time_per_token": 0.0532838198757764}}
{"outputs": [{"text": "# TODO: implement function\n    if k < 0 or not isinstance(k, int):\n        raise ValueError(\"'k' must be a non-negative integer\")\n    distances = []\n    for row in data.itertuples():\n        lat1, lon1 = row.Latitude, row.Longitude\n        lat2, lon2 = target[0], target[1]\n        theta = lon1 - lon2\n        phi = lat1 - lat2\n        distance = ((math.pi * radius_earth * (theta * math.pi / 180)\n                     * (1 + math.cos(phi) * math.cos(theta) * (1 - math.sin(phi)))\n                     )**(1 / 2))\n        distances.append([distance, row[1]])\n    distances.sort(key=lambda x: x[0])\n    return distances[:k]", "tokens": ["#", " TODO", ":", " implement", " function", "\n", "    ", "if", " k", " <", " ", "0", " or", " not", " isinstance", "(", "k", ",", " int", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "'", "k", "'", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n", "    ", "dist", "ances", " =", " []", "\n", "    ", "for", " row", " in", " data", ".", "it", "ert", "up", "les", "():", "\n", "        ", "lat", "1", ",", " lon", "1", " =", " row", ".", "Lat", "itude", ",", " row", ".", "Long", "itude", "\n", "        ", "lat", "2", ",", " lon", "2", " =", " target", "[", "0", "]", ",", " target", "[", "1", "]", "\n", "        ", "theta", " =", " lon", "1", " -", " lon", "2", "\n", "        ", "phi", " =", " lat", "1", " -", " lat", "2", "\n", "        ", "distance", " =", " ((", "math", ".", "pi", " *", " radius", "_", "earth", " *", " (", "theta", " *", " math", ".", "pi", " /", " ", "1", "8", "0", ")", "\n", "                ", "     ", "*", " (", "1", " +", " math", ".", "cos", "(", "phi", ")", " *", " math", ".", "cos", "(", "theta", ")", " *", " (", "1", " -", " math", ".", "sin", "(", "phi", ")))", "\n", "                ", "     ", ")**", "(", "1", " /", " ", "2", "))", "\n", "        ", "dist", "ances", ".", "append", "([", "distance", ",", " row", "[", "1", "]]", ")", "\n", "    ", "dist", "ances", ".", "sort", "(", "key", "=", "lambda", " x", ":", " x", "[", "0", "])", "\n", "    ", "return", " distances", "[:", "k", "]", "\n", "\n", "if"], "logprobs": [-1.50576651096344, -3.3716254234313965, -0.41592079401016235, -1.5245107412338257, -2.976019859313965, -0.5327520370483398, -0.1871633678674698, -1.801934003829956, -1.1077678203582764, -0.2977820038795471, -0.007170300465077162, -0.07618758082389832, -1.1685348749160767, -0.3432820439338684, -0.19967542588710785, -0.0007612191257067025, -0.0032353459391742945, -0.0022513538133352995, -0.021704640239477158, -0.014897524379193783, -0.012813261710107327, -0.005933883599936962, -0.036334287375211716, -0.00982555653899908, -4.410646579344757e-05, -0.46230602264404297, -0.11289528757333755, -1.5080864429473877, -0.004641236271709204, -0.0023661255836486816, -0.17821435630321503, -0.006316933315247297, -0.06960281729698181, -0.045775603502988815, -0.0017105009173974395, -0.0009757286752574146, -0.0042248996905982494, -0.278903603553772, -0.00024101213784888387, -0.005140421446412802, -0.6111812591552734, -2.3530006408691406, -0.12611481547355652, -0.03582145273685455, -0.23062832653522491, -0.028679827228188515, -0.10473219305276871, -0.23222143948078156, -1.049640417098999, -0.010750710032880306, -0.02180740423500538, -0.12162742018699646, -0.6173555254936218, -0.0012192443246021867, -0.0005726366653107107, -3.933898824470816e-06, -0.2805500328540802, -0.019250471144914627, -0.0032523376867175102, -0.5250087976455688, -0.21629498898983002, -0.23926550149917603, -0.126964271068573, -0.00018463814922142774, -0.06786344945430756, -0.26167598366737366, -0.8546668887138367, -0.015885936096310616, -9.023735765367746e-05, -0.006426027975976467, -0.000536655425094068, -0.0005651307292282581, -0.0001931004080688581, -4.0649541915627196e-05, -0.01681230030953884, -0.00464289728552103, -0.14038130640983582, -0.006361591629683971, -0.010982777923345566, -0.00034338299883529544, -8.308542601298541e-05, -0.0009957361035048962, -0.020503243431448936, -0.26056861877441406, -0.0011917401570826769, -0.0010962436208501458, -0.0015963680343702435, -0.0008628221112303436, -0.0002444683632347733, -0.0004068977141287178, -2.777537883957848e-05, -0.0029010374564677477, -0.04347483813762665, -4.180516719818115, -0.019094115123152733, -0.1231023371219635, -0.4326817989349365, -0.034104421734809875, -0.0001530530134914443, -6.5205356804654e-05, -0.0084060188382864, -0.0013379440642893314, -1.1626895666122437, -0.021810319274663925, -0.10752105712890625, -0.00990582350641489, -0.0028430302627384663, -0.0006457865820266306, -0.00016664070426486433, -0.0007906410028226674, -0.03990589454770088, -1.5791486501693726, -0.04947516694664955, -3.8857474327087402, -0.22633764147758484, -1.0013530300057027e-05, -2.348379373550415, -0.951636791229248, -1.1026345491409302, -2.491945505142212, -0.48813554644584656, -0.922143816947937, -1.315125823020935, -1.992813229560852, -0.687526524066925, -0.20984232425689697, -0.0006737822550348938, -1.6183958053588867, -0.43137335777282715, -0.037825871258974075, -0.008574101142585278, -0.00036614391137845814, -2.5748875486897305e-05, -1.2299270629882812, -2.7618274688720703, -0.08655267208814621, -0.26720377802848816, -0.962252140045166, -0.6799890398979187, -0.8849460482597351, -1.5832867622375488, -1.5164241790771484, -0.0003644755925051868, -0.5378888249397278, -0.023082608357071877, -0.2230522781610489, -3.017394542694092, -0.08986738324165344, -0.06543179601430893, -0.0009891861118376255, -0.0170279648154974, -0.041052985936403275, -0.15978312492370605, -0.774621307849884, -0.40667960047721863, -1.3403719663619995, -0.38727423548698425, -1.2548013925552368, -0.1735261082649231, -0.0014150853967294097, -0.6004657745361328, -0.009602665901184082, -0.28418096899986267, -2.9796836376190186, -0.7869248986244202, -0.007786162197589874, -0.03204772621393204, -3.3051605224609375, -1.0878537893295288, -0.038650259375572205, -0.5124315619468689, -0.0037558982148766518, -0.007794915232807398, -0.1932128369808197, -0.1984274983406067, -0.013421659357845783, -0.07421483844518661, -0.0007040405762381852, -0.0013271104544401169, -0.0007519278442487121, -1.8459640741348267, -0.8904234170913696, -0.024243563413619995, -0.19533997774124146, -2.587928056716919, -0.19751064479351044, -2.301443099975586, -0.0007051127031445503, -0.02091951295733452, -0.17249774932861328, -0.21225494146347046, -0.0009291622554883361, -0.19105516374111176, -0.00026854246971197426, -0.20618247985839844, -0.026952916756272316, -0.00819912739098072, -0.0032278599683195353, -0.05147179588675499, -0.0008503158460371196, -0.020665569230914116, -0.0004319211875554174, -0.009000444784760475, -0.016775023192167282, -0.0445193350315094, -0.020592233166098595, -0.59969162940979, -0.9565513134002686, -0.2100883424282074, -0.008246419951319695, -0.22890637814998627, -0.2787947356700897, -0.03447337821125984, -1.0360074043273926], "finish_reason": "stop"}], "metrics": {"energy": 339.14553352737425, "energy_per_token": 1.5847922127447396, "time": 11.473975, "time_per_token": 0.05361670560747663}}
{"outputs": [{"text": "# Check input arguments\n    if not isinstance(k, int) or k < 0:\n        raise ValueError(\"k must be a non-negative integer\")\n\n    # Calculate distance for each data point from target point\n    distances = []\n    for row in data.itertuples(index=False):\n        lat1, lon1 = row[1], row[2]\n        lat2, lon2 = target\n        distance = math.sqrt(\n            (lat2 - lat1) ** 2 + (lon2 - lon1) ** 2) * 111.32\n        distances.append(distance)\n\n    # Sort data points by increasing distance from target\n    sorted_distances = sorted(\n        zip(distances, data.itertuples(index=False)), key=lambda x: x[0])\n\n    # Return the top k data points\n    neighbors = []\n    for i in range(k):\n        neighbors.append(list(sorted_distances[i][1]))\n\n    return neighbors", "tokens": ["#", " Check", " input", " arguments", "\n", "    ", "if", " not", " isinstance", "(", "k", ",", " int", ")", " or", " k", " <", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "k", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n", "\n", "    ", "#", " Calculate", " distance", " for", " each", " data", " point", " from", " target", " point", "\n", "    ", "dist", "ances", " =", " []", "\n", "    ", "for", " row", " in", " data", ".", "it", "ert", "up", "les", "(", "index", "=", "False", "):", "\n", "        ", "lat", "1", ",", " lon", "1", " =", " row", "[", "1", "]", ",", " row", "[", "2", "]", "\n", "        ", "lat", "2", ",", " lon", "2", " =", " target", "\n", "        ", "distance", " =", " math", ".", "sqrt", "(", "\n", "            ", "(", "lat", "2", " -", " lat", "1", ")", " **", " ", "2", " +", " (", "lon", "2", " -", " lon", "1", ")", " **", " ", "2", ")", " *", " ", "1", "1", "1", ".", "3", "2", "\n", "        ", "dist", "ances", ".", "append", "(", "distance", ")", "\n", "\n", "    ", "#", " Sort", " data", " points", " by", " increasing", " distance", " from", " target", "\n", "    ", "s", "orted", "_", "dist", "ances", " =", " sorted", "(", "\n", "        ", "zip", "(", "dist", "ances", ",", " data", ".", "it", "ert", "up", "les", "(", "index", "=", "False", "))", ",", " key", "=", "lambda", " x", ":", " x", "[", "0", "])", "\n", "\n", "    ", "#", " Return", " the", " top", " k", " data", " points", "\n", "    ", "ne", "ighbors", " =", " []", "\n", "    ", "for", " i", " in", " range", "(", "k", "):", "\n", "        ", "ne", "ighbors", ".", "append", "(", "list", "(", "s", "orted", "_", "dist", "ances", "[", "i", "][", "1", "]))", "\n", "\n", "    ", "return", " neighbors"], "logprobs": [-1.50576651096344, -1.5362573862075806, -2.1886184215545654, -2.1883678436279297, -0.1547670066356659, -0.005004498641937971, -0.0801665335893631, -0.2485278695821762, -0.06436086446046829, -0.0005230727256275713, -0.2839151918888092, -0.0003066784702241421, -0.022168682888150215, -0.6455527544021606, -0.018043192103505135, -0.032443296164274216, -0.044307809323072433, -0.0036746615078300238, -0.11768141388893127, -0.010937971994280815, -0.009713763371109962, -0.0018662670627236366, -0.02476922981441021, -0.008516776375472546, -1.156323378381785e-05, -0.16965298354625702, -0.16965670883655548, -0.8360573053359985, -0.06560920923948288, -0.001492816023528576, -0.0661836490035057, -0.03152495250105858, -0.0006827168981544673, -0.0006439996068365872, -0.0033471533097326756, -0.2668062746524811, -0.00020108585886191577, -0.003350479993969202, -0.3288990259170532, -0.001156733720563352, -0.2765614688396454, -0.8563928008079529, -1.4766017198562622, -3.492492437362671, -0.2845771908760071, -0.8684191107749939, -0.03601224347949028, -1.3942866325378418, -0.7701441049575806, -1.1099439859390259, -0.15796130895614624, -0.0017375147435814142, -0.11843757331371307, -0.033609114587306976, -0.005841209087520838, -0.6192445158958435, -0.003915145993232727, -0.013122507371008396, -0.018780391663312912, -0.6794961094856262, -0.003995413426309824, -0.011965994723141193, -0.05753421038389206, -0.47984665632247925, -0.0013728251215070486, -0.0005859803641214967, -3.4570634852570947e-06, -1.2106385231018066, -0.01162752229720354, -0.003992919810116291, -0.10692831873893738, -0.07203423231840134, -0.017486099153757095, -0.002831143094226718, -0.31248146295547485, -0.11964742839336395, -0.21621806919574738, -0.09442831575870514, -6.401333666872233e-05, -0.03421732410788536, -0.2258991152048111, -0.5666337013244629, -0.20715247094631195, -0.09396928548812866, -0.010674167424440384, -0.000596107158344239, -0.0007906410028226674, -0.0030156157445162535, -7.497983460780233e-05, -0.027215013280510902, -0.015555478632450104, -0.09186867624521255, -0.00652279332280159, -0.0041139028035104275, -0.0001829695247579366, -3.2066785934148356e-05, -0.00038187362952157855, -0.025577137246727943, -2.749840259552002, -0.10958992689847946, -1.1109932661056519, -0.051089007407426834, -1.120797872543335, -0.00010978573118336499, -1.722468614578247, -1.3502272367477417, -0.6047967076301575, -0.023817850276827812, -0.1085064560174942, -0.14228059351444244, -0.4739636778831482, -0.06245960295200348, -0.0037098173052072525, -0.0007303669699467719, -0.03914502263069153, -0.08534389734268188, -0.0003343261778354645, -2.312633478140924e-05, -0.07583071291446686, -0.01882578432559967, -0.001207456924021244, -0.0005857420619577169, -0.0004727914638351649, -7.60526381782256e-05, -0.03526899963617325, -0.002431533532217145, -0.00028725311858579516, -0.00030763185350224376, -1.6689160474925302e-05, -0.9768616557121277, -1.0670671463012695, -0.2475721687078476, -0.7849763631820679, -1.2802985906600952, -0.05288807302713394, -0.3238546848297119, -1.2753288745880127, -0.20294252038002014, -0.37439969182014465, -0.010702001862227917, -0.03648681938648224, -6.508615479106084e-05, -0.0002985746832564473, -0.00041166413575410843, -0.13803842663764954, -0.022222431376576424, -0.004057983867824078, -0.0031923307105898857, -0.0455915629863739, -0.0009076051646843553, -0.029026126489043236, -0.20224550366401672, -1.6804448366165161, -0.08740286529064178, -0.4011150896549225, -2.8053348064422607, -0.09964466840028763, -0.8433996438980103, -0.04165668413043022, -1.1129488945007324, -0.0006055190460756421, -0.14140638709068298, -0.0016505202511325479, -0.00039760314393788576, -0.993084728717804, -0.003013832960277796, -0.004922888707369566, -0.588222324848175, -0.005768319591879845, -3.224522352218628, -0.002820563269779086, -0.8190392851829529, -0.0017141900025308132, -0.1889064460992813, -3.6954811548639555e-06, -0.0007550249574705958, -0.045596230775117874, -0.34260186553001404, -0.36344602704048157, -2.074220174108632e-05, -9.512448741588742e-05, -0.00019596086349338293, -0.010167825035750866, -0.002193308901041746, -0.000606710382271558, -0.01452373992651701, -0.24807097017765045, -0.002934675430878997, -0.10942741483449936, -0.0012296028435230255, -0.0028087948448956013, -0.02037605084478855, -0.00015579440514557064, -0.008211660198867321, -0.00013422065239865333, -0.01798078790307045, -0.007999643683433533, -0.023601898923516273, -0.0672554224729538, -0.0002530493075028062, -0.04808460548520088, -0.2717021703720093, -0.3004673719406128, -1.6146972179412842, -0.3157937824726105, -1.1206161975860596, -0.001828071428462863, -0.2820757031440735, -0.0009629856795072556, -2.190782308578491, -1.7692087888717651, -0.007762386463582516, -2.160731792449951, -0.0008155357209034264, -0.004687392618507147, -0.017046598717570305, -0.7245728969573975, -0.013053677044808865, -0.00438727717846632, -0.00022933237778488547, -0.0672527477145195, -0.0019938128534704447, -0.0017970141489058733, -0.0011816193582490087, -0.20795956254005432, -0.002203657291829586, -0.0005679901223629713, -0.0008033862104639411, -0.13146285712718964, -1.4350433349609375, -0.0032676656264811754, -0.010578982532024384, -7.152555099310121e-07, -2.706014311115723e-05, -1.311301275563892e-06, -0.000285584683297202, -0.0013955625472590327, -0.00026258357684127986, -0.0032818051986396313, -0.0027934599202126265, -0.06914214044809341, -0.0031247143633663654, -0.4959355294704437, -0.00037520044133998454, -0.03317030519247055, -0.01320709753781557], "finish_reason": "stop"}], "metrics": {"energy": 356.3379862728119, "energy_per_token": 1.4485283994829752, "time": 12.524537, "time_per_token": 0.050912752032520325}}
{"outputs": [{"text": "if not isinstance(k, int):\n        raise ValueError(\"k must be a non-negative integer\")\n    if k < 0:\n        raise ValueError(\"k must be a non-negative integer\")\n    if data.shape[0] < k:\n        raise ValueError(\"Not enough data points in dataset\")\n\n    # Convert the target data point to radians\n    target_lat, target_lon = math.radians(target[0]), math.radians(target[1])\n\n    # Calculate the distance from each data point to the target point\n    distances = []\n    for i in range(data.shape[0]):\n        lat1, lon1 = math.radians(data['Latitude'].iloc[i]), math.radians(data['Longitude'].iloc[i])\n        distance = 6371 * math.acos(math.sin(target_lat) * math.sin(lat1) + math.cos(target_lat) * math.cos(lat1) * math.cos(target_lon - lon1))\n        ", "tokens": ["if", " not", " isinstance", "(", "k", ",", " int", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "k", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n", "    ", "if", " k", " <", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "k", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n", "    ", "if", " data", ".", "shape", "[", "0", "]", " <", " k", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Not", " enough", " data", " points", " in", " dataset", "\"", ")", "\n", "\n", "    ", "#", " Convert", " the", " target", " data", " point", " to", " rad", "ians", "\n", "    ", "target", "_", "lat", ",", " target", "_", "lon", " =", " math", ".", "rad", "ians", "(", "target", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "target", "[", "1", "])", "\n", "\n", "    ", "#", " Calculate", " the", " distance", " from", " each", " data", " point", " to", " the", " target", " point", "\n", "    ", "dist", "ances", " =", " []", "\n", "    ", "for", " i", " in", " range", "(", "data", ".", "shape", "[", "0", "]", "):", "\n", "        ", "lat", "1", ",", " lon", "1", " =", " math", ".", "rad", "ians", "(", "data", "['", "Lat", "itude", "']", ".", "il", "oc", "[", "i", "])", ",", " math", ".", "rad", "ians", "(", "data", "['", "Long", "itude", "']", ".", "il", "oc", "[", "i", "])", "\n", "        ", "distance", " =", " ", "6", "3", "7", "1", " *", " math", ".", "ac", "os", "(", "math", ".", "sin", "(", "target", "_", "lat", ")", " *", " math", ".", "sin", "(", "lat", "1", ")", " +", " math", ".", "cos", "(", "target", "_", "lat", ")", " *", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "target", "_", "lon", " -", " lon", "1", "))", "\n", "        "], "logprobs": [-1.220100998878479, -0.38665109872817993, -0.11872545629739761, -0.0007759897271171212, -0.06379499286413193, -0.0007659838884137571, -0.029085297137498856, -0.7059046626091003, -0.018990369513630867, -0.005443986505270004, -0.02758791297674179, -0.06499377638101578, -2.074220174108632e-05, -0.2757437825202942, -0.13906000554561615, -0.8376340270042419, -0.1794937252998352, -0.00237980205565691, -0.8396664261817932, -0.05281604453921318, -0.0032171655911952257, -0.0012234115274623036, -0.007113961037248373, -0.2141689956188202, -0.000325388420606032, -0.0034450488165020943, -0.0838596448302269, -0.3548462390899658, -0.042194075882434845, -0.044792599976062775, -0.002318196464329958, -0.10913150012493134, -0.010201219469308853, -0.0019530047429725528, -0.0010238410905003548, -0.005072225350886583, -0.0005735897575505078, -2.8609820219571702e-05, -0.0026213114615529776, -0.002136925933882594, -0.009073099121451378, -0.026163887232542038, -0.0052992114797234535, -0.044863611459732056, -0.008332842960953712, -0.00015639036428183317, -0.0006824786541983485, -0.001734420657157898, -0.0042838952504098415, -0.00029392691794782877, -0.0005502378917299211, -0.5827298760414124, -1.4844112396240234, -2.3760368824005127, -0.20338121056556702, -1.6617473363876343, -0.030240118503570557, -0.011272669769823551, -0.001291037304326892, -0.8987007141113281, -0.09002482146024704, -0.03631221503019333, -0.011538791470229626, -0.0009535771678201854, -0.17060117423534393, -0.03996500000357628, -4.100715523236431e-05, -0.011806020513176918, -0.21653175354003906, -1.5973296165466309, -0.0263367909938097, -0.27126482129096985, -0.3503308892250061, -1.289149284362793, -1.3001155853271484, -0.4429696798324585, -0.0006849803612567484, -0.001602675998583436, -0.4737546741962433, -0.0019102912629023194, -1.2078269720077515, -2.2550876140594482, -1.3591816425323486, -0.648628830909729, -0.4765525162220001, -0.03921552002429962, -0.20209553837776184, -2.001659870147705, -0.02502666786313057, -0.2639131247997284, -0.0006510283565148711, -0.5662902593612671, -0.16315945982933044, -0.2107127159833908, -1.0192008018493652, -0.0009176096064038575, -4.291525328881107e-06, -0.10661730170249939, -0.0005590544897131622, -0.4454203248023987, -0.0002422039397060871, -0.0038390285335481167, -8.177422569133341e-05, -0.003976178355515003, -0.010308829136192799, -0.0023491187021136284, -0.0007689617923460901, -0.0014961488777771592, -0.0002703301142901182, -0.0018039158312603831, -0.00020716428116429597, -2.8729025871143676e-05, -2.062299427052494e-05, -0.00013004888023715466, -0.0005467826849780977, -0.0005422552349045873, -0.0003980797773692757, -9.881961887003854e-05, -0.0014549632323905826, -0.0983193889260292, -0.0002543602604418993, -0.12794318795204163, -0.5640419721603394, -0.36766690015792847, -0.9708751440048218, -1.3201485872268677, -1.1209845542907715, -0.4418506324291229, -0.002607994945719838, -0.03630945459008217, -0.009598532691597939, -0.001419966109097004, -0.7428804039955139, -0.5452702045440674, -0.000649956171400845, -0.04428796470165253, -0.01678217388689518, -0.00590793089941144, -0.8666081428527832, -0.001261034864000976, -0.005243951920419931, -0.005322808399796486, -0.744310736656189, -0.08540070801973343, -0.012179527431726456, -0.00014172980445437133, -0.19850902259349823, -0.0006416169344447553, -0.00046885941992513835, -1.585470999998506e-05, -9.48860906646587e-05, -0.0002184867626056075, -0.00031394799589179456, -0.0021786780562251806, -0.001258296542800963, -0.376710444688797, -0.25506293773651123, -0.11085373908281326, -0.010799533687531948, -0.00010668662434909493, -0.03963117673993111, -0.12199828028678894, -7.152555099310121e-07, -0.0002867764269467443, -4.768360213347478e-06, -0.0008429311565123498, -0.006653654854744673, -1.2719237804412842, -0.00535221491008997, -1.4185804502631072e-05, -1.1762049198150635, -0.00016151554882526398, -0.09902381896972656, -7.843663479434326e-05, -0.00014482879487331957, -7.521823135903105e-05, -0.0024882566649466753, -0.00040391870425082743, -0.0013808010844513774, -0.001632549217902124, -9.536697689327411e-06, -3.111314072157256e-05, -7.271502545336261e-05, -0.0031198421493172646, -0.001916716224513948, -9.762764238985255e-05, -1.1444026313256472e-05, -0.0012898467248305678, -0.004456944297999144, -5.709961988031864e-05, -3.85038583772257e-05, -1.4185804502631072e-05, -0.00012051333033014089, -2.95634672511369e-05, -0.0016564709367230535, -0.009040848352015018, -1.6727604866027832, -0.0320657379925251, -0.09680450707674026, -1.476407766342163, -0.0011023165425285697, -0.0012438902631402016, -0.0009528625523671508, -0.10112401098012924, -0.08031054586172104, -3.2543604902457446e-05, -0.0037296514492481947, -7.962863310240209e-05, -0.01407035905867815, -0.325422078371048, -1.5497195136049413e-06, -0.18303203582763672, -0.0003831844369415194, -0.044500067830085754, -0.00026353701832704246, -0.0002740246127359569, -0.023026341572403908, -0.001679201959632337, -0.003689032746478915, -4.51792984677013e-05, -0.0012678211787715554, -0.0003766304289456457, -0.00017534149810671806, -2.0265373677830212e-05, -0.0009440494468435645, -0.0266120508313179, -0.29753583669662476, -0.0002307625545654446, -4.7444173105759546e-05, -7.426462980220094e-05, -0.000563224486541003, -1.3351351299206726e-05, -0.00033408781746402383, -0.0013655632501468062, -0.005202564876526594, -0.011614678427577019, -0.0001752223033690825, -5.149708886165172e-05, -0.00010311071673640981, -0.004064513836055994, -5.602820692729438e-06, -0.0019821536261588335, -0.008347028866410255, -0.009328941814601421, -0.0004111875023227185, -2.1457441107486375e-05, -0.004141920246183872, -0.014715700410306454, -7.581423415103927e-05, -5.245071224635467e-05, -0.027533987537026405, -0.001157924416474998, -9.417489309271332e-06, -0.0020848223939538, -0.0663265660405159, -0.0032412870787084103], "finish_reason": "length"}], "metrics": {"energy": 394.6561751785277, "energy_per_token": 1.5416256842911238, "time": 12.728805, "time_per_token": 0.04972189453125}}
{"outputs": [{"text": "data = data.copy()  # Ensure that the original data is not altered\n\n    # Convert target coordinates to radians\n    target_radians = [math.radians(coord) for coord in target]\n\n    # Compute distances in radians from the target\n    distances = np.abs(data[[\"Latitude\", \"Longitude\"]] - np.array(target_radians))\n\n    # Sort the distances in ascending order\n    sorted_distances = np.sort(distances, axis=0)\n\n    # Return the top k distances\n    return sorted_distances[:k].tolist()", "tokens": ["data", " =", " data", ".", "copy", "()", "  ", "#", " Ensure", " that", " the", " original", " data", " is", " not", " altered", "\n", "\n", "    ", "#", " Convert", " target", " coordinates", " to", " rad", "ians", "\n", "    ", "target", "_", "rad", "ians", " =", " [", "math", ".", "rad", "ians", "(", "coord", ")", " for", " coord", " in", " target", "]", "\n", "\n", "    ", "#", " Compute", " distances", " in", " rad", "ians", " from", " the", " target", "\n", "    ", "dist", "ances", " =", " np", ".", "abs", "(", "data", "[[", "\"", "Lat", "itude", "\"", ",", " \"", "Long", "itude", "\"", "]]", " -", " np", ".", "array", "(", "target", "_", "rad", "ians", "))", "\n", "\n", "    ", "#", " Sort", " the", " distances", " in", " ascending", " order", "\n", "    ", "s", "orted", "_", "dist", "ances", " =", " np", ".", "sort", "(", "dist", "ances", ",", " axis", "=", "0", ")", "\n", "\n", "    ", "#", " Return", " the", " top", " k", " distances", "\n", "    ", "return", " sorted", "_", "dist", "ances", "[:", "k", "]", ".", "tol", "ist", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.3371758460998535, -0.7197363376617432, -0.29759806394577026, -0.2723798453807831, -0.9743618965148926, -0.01226137112826109, -2.6727709770202637, -0.0012029323261231184, -4.260732173919678, -1.6670548915863037, -0.4829145669937134, -0.5447532534599304, -0.18586695194244385, -0.40687301754951477, -0.04981354624032974, -2.3013243675231934, -0.2167576253414154, -1.0607597827911377, -0.0004822045157197863, -1.3711481094360352, -2.5688531398773193, -1.5805625915527344, -2.0892858505249023, -0.15516722202301025, -0.9022507667541504, -0.025173498317599297, -0.2529870569705963, -0.000660439720377326, -0.6296084523200989, -0.08571171760559082, -2.120089054107666, -0.9824248552322388, -0.02149861678481102, -0.48949500918388367, -0.43522918224334717, -0.00017176583060063422, -0.020381424576044083, -3.266281055402942e-05, -0.0022683623246848583, -2.4401538372039795, -0.012879402376711369, -0.005482636857777834, -0.00017855956684798002, -0.0004441943601705134, -0.008091645315289497, -0.03279002383351326, -0.01273063849657774, -0.4277639389038086, -0.00023719835735391825, -0.11989288032054901, -2.815274238586426, -1.1299488544464111, -2.6263675689697266, -0.38450828194618225, -0.0017437029164284468, -1.564133882522583, -0.9005469083786011, -0.034810882061719894, -1.6543116569519043, -0.0003999863693024963, -0.0892348662018776, -0.029939476400613785, -0.14379951357841492, -2.096123695373535, -2.682172998902388e-05, -3.9221487045288086, -0.12040918320417404, -0.2828878164291382, -1.8930212259292603, -0.03756367042660713, -0.02000793069601059, -0.0005626287311315536, -0.0011812621960416436, -0.04374530538916588, -0.0025034775026142597, -7.021180499577895e-05, -1.728519782773219e-05, -5.722029527532868e-06, -0.0024404525756835938, -1.6556336879730225, -1.8525009155273438, -0.0007063039811328053, -0.08275911211967468, -0.084915392100811, -0.018297452479600906, -0.029883595183491707, -7.152531907195225e-06, -0.00015090756642166525, -0.14770188927650452, -1.117676019668579, -0.7606182098388672, -0.00032872517476789653, -0.03462401032447815, -0.8035696744918823, -0.9245796799659729, -0.3645056486129761, -0.3621717393398285, -0.011626933701336384, -0.0006140968762338161, -0.23814637959003448, -0.0003505330823827535, -0.4978931248188019, -0.0005530973430722952, -0.00010168035078095272, -0.22210465371608734, -0.0017886845162138343, -0.01378574501723051, -0.8926362991333008, -0.00011860620725201443, -0.3043138086795807, -0.0013815154088661075, -0.01061495766043663, -1.9073304429184645e-05, -0.3629205822944641, -0.00684784259647131, -0.004361521918326616, -0.20265257358551025, -0.05925465747714043, -0.17265193164348602, -0.03568687662482262, -0.0002119316632160917, -0.05174962058663368, -1.0633293390274048, -0.08454672992229462, -1.5812779664993286, -0.40799787640571594, -1.3657810688018799, -0.5408483743667603, -0.0006225554971024394, -0.23866717517375946, -0.10816992819309235, -0.0008420973899774253, -4.0531076592742465e-06, -0.00020859450160060078, -0.09188628941774368, -0.0406818725168705, -0.3844400942325592, -0.7970403432846069, -0.1388484686613083, -7.629365427419543e-06, -0.06141563504934311, -1.0830178260803223, -2.3841855067985307e-07, -4.768370445162873e-07, -5.9126061387360096e-05, -0.00021884430316276848, -0.16466310620307922], "finish_reason": "stop"}], "metrics": {"energy": 239.462511379242, "energy_per_token": 1.6289966760492651, "time": 7.282682, "time_per_token": 0.04954205442176871}}
{"outputs": [{"text": "# Check if k is valid\n    if not isinstance(k, int):\n        raise ValueError(\"k must be an integer\")\n    if k < 0:\n        raise ValueError(\"k must be a non-negative integer\")\n\n    # Get distances between target and data points\n    target_distances = []\n    for i in range(len(data)):\n        dist = distance(target, data.iloc[i])\n        target_distances.append(dist)\n\n    # Sort the distances from the target\n    sorted_distances = sorted(target_distances)[:k]\n\n    # Return the nearest k points\n    nearest_k_points = []\n    for distance in sorted_distances:\n        nearest_point = data[data['Distance'] == distance][['Latitude', 'Longitude']].iloc[0]\n        nearest_k_points.append(nearest_point)\n\n    return nearest_k_points", "tokens": ["#", " Check", " if", " k", " is", " valid", "\n", "    ", "if", " not", " isinstance", "(", "k", ",", " int", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "k", " must", " be", " an", " integer", "\"", ")", "\n", "    ", "if", " k", " <", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "k", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n", "\n", "    ", "#", " Get", " distances", " between", " target", " and", " data", " points", "\n", "    ", "target", "_", "dist", "ances", " =", " []", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "data", "))", ":", "\n", "        ", "dist", " =", " distance", "(", "target", ",", " data", ".", "il", "oc", "[", "i", "])", "\n", "        ", "target", "_", "dist", "ances", ".", "append", "(", "dist", ")", "\n", "\n", "    ", "#", " Sort", " the", " distances", " from", " the", " target", "\n", "    ", "s", "orted", "_", "dist", "ances", " =", " sorted", "(", "target", "_", "dist", "ances", ")", "[:", "k", "]", "\n", "\n", "    ", "#", " Return", " the", " nearest", " k", " points", "\n", "    ", "ne", "arest", "_", "k", "_", "points", " =", " []", "\n", "    ", "for", " distance", " in", " sorted", "_", "dist", "ances", ":", "\n", "        ", "ne", "arest", "_", "point", " =", " data", "[", "data", "['", "Distance", "']", " ==", " distance", "][", "['", "Lat", "itude", "'", ",", " '", "Long", "itude", "']", "]", ".", "il", "oc", "[", "0", "]", "\n", "        ", "ne", "arest", "_", "k", "_", "points", ".", "append", "(", "ne", "arest", "_", "point", ")", "\n", "\n", "    ", "return", " nearest", "_", "k", "_", "points", "\n", "\n", "#"], "logprobs": [-1.50576651096344, -1.5362573862075806, -1.0698859691619873, -0.5967395901679993, -0.006895791739225388, -2.9504528045654297, -0.2145444005727768, -0.0026276130229234695, -0.047978371381759644, -0.2703617215156555, -0.04261169582605362, -0.00042834642226807773, -0.002098502591252327, -0.0004011779965367168, -0.016834337264299393, -1.0625267028808594, -0.0076385317370295525, -0.0021357364021241665, -0.021380186080932617, -0.07422568649053574, -1.2993727978027891e-05, -0.25374308228492737, -0.14733941853046417, -0.5605876445770264, -0.14872051775455475, -0.0008742563077248633, -0.410133957862854, -0.03359366953372955, -0.2454620897769928, -0.0001776060671545565, -0.003406557021662593, -0.04469878599047661, -0.26236414909362793, -0.022086363285779953, -0.06573892384767532, -0.0025384367909282446, -0.0420743003487587, -0.010635598562657833, -0.0010337253334000707, -0.0006629414856433868, -0.002455436158925295, -0.0003734129713848233, -3.0397906812140718e-05, -0.003014308400452137, -0.0038963842671364546, -0.010382804088294506, -0.10933765769004822, -0.011814974248409271, -0.27516263723373413, -0.030743684619665146, -0.0013004426145926118, -0.0007308434578590095, -0.014345255680382252, -0.007679936941713095, -0.0002012050390476361, -0.0006708040600642562, -0.14686040580272675, -0.0015795861836522818, -0.14539581537246704, -2.6808695793151855, -2.665300130844116, -1.8268587589263916, -0.4904786944389343, -0.16603948175907135, -2.1184897422790527, -0.47387927770614624, -0.11047007888555527, -0.0015279296785593033, -3.268202781677246, -0.06765903532505035, -1.5243134498596191, -0.17149874567985535, -0.00582817243412137, -0.9794433116912842, -0.012452943250536919, -0.012004747055470943, -0.0537351630628109, -1.468708872795105, -0.25382983684539795, -0.13904672861099243, -0.0005402297829277813, -0.2549055218696594, -1.585470999998506e-05, -0.0019345632754266262, -0.0641121193766594, -1.8954096958623268e-05, -0.0020342625211924314, -0.0013334201648831367, -3.261204957962036, -0.05641692131757736, -2.8758652210235596, -0.3899984061717987, -0.6341410875320435, -0.30826497077941895, -0.4637281894683838, -0.19618730247020721, -0.10615010559558868, -0.00013851160474587232, -0.005963864270597696, -0.00020716428116429597, -0.22190864384174347, -0.031563300639390945, -0.0022508781403303146, -0.03753932937979698, -4.5298504119273275e-05, -0.00012909532233607024, -2.038458114839159e-05, -0.0005914607318118215, -0.0004240567213855684, -0.45643019676208496, -0.006489631254225969, -0.003301528748124838, -0.0018722163513302803, -0.11432880163192749, -0.00051115796668455, -0.04261306673288345, -0.16146835684776306, -1.8471328020095825, -0.3078128397464752, -2.834204912185669, -1.528347373008728, -0.2345869541168213, -1.5607357025146484, -0.00038235029205679893, -0.15683089196681976, -0.0012359131360426545, -0.00040880427695810795, -0.09995915740728378, -0.003872872330248356, -0.004145956598222256, -0.34473147988319397, -0.0014936492079868913, -0.14864717423915863, -5.245195097813848e-06, -1.4305104514278355e-06, -9.214453893946484e-05, -0.052129436284303665, -2.6583778858184814, -0.00772559829056263, -0.005050164181739092, -0.017796244472265244, -0.04083408787846565, -0.00021371940965764225, -0.03734251484274864, -1.1937892436981201, -0.16294091939926147, -1.69864022731781, -0.6629045009613037, -0.6999261379241943, -0.2939617931842804, -0.0004430027911439538, -0.6552727818489075, -0.02346392162144184, -0.14775362610816956, -0.6184450387954712, -0.8578956127166748, -0.07945243269205093, -0.003397290362045169, -0.26450374722480774, -0.0012263881508260965, -0.008580246940255165, -0.025459537282586098, -2.386326313018799, -0.01619434915482998, -0.006695574149489403, -0.000710592488758266, -1.4305104514278355e-06, -5.8053239627042785e-05, -0.00285574933513999, -0.0008616310660727322, -0.0007154765771701932, -1.010694980621338, -0.0029194613453000784, -0.04826420918107033, -0.662935733795166, -0.08779220283031464, -0.4683036208152771, -0.4212237298488617, -0.4877522885799408, -0.26327869296073914, -0.6411200165748596, -0.1471976488828659, -0.1076207160949707, -0.010385635308921337, -2.563777446746826, -0.2393195629119873, -0.04245917871594429, -0.0004808938247151673, -0.0013511584838852286, -7.843663479434326e-05, -0.00622204365208745, -0.0002836778585333377, -1.0609570381348021e-05, -0.005835401825606823, -0.00872679241001606, -0.5898497700691223, -1.1349725723266602, -9.298280929215252e-06, -0.0033347969874739647, -0.000514017534442246, -0.016874190419912338, -0.09539277851581573, -0.0015068616485223174, -0.010047572664916515, -4.768360213347478e-06, -1.8358061424805783e-05, -0.0011825718684121966, -1.5616295058862306e-05, -0.00013648532330989838, -0.00015984688070602715, -0.0006478118011727929, -0.05999365076422691, -0.06780686229467392, -0.006952853873372078, -7.152555099310121e-07, -1.0371154530730564e-05, -0.48403823375701904, -0.0006565084331668913, -0.3064580261707306, -0.0006460248259827495, -0.0567748099565506, -0.02332184836268425, -3.433168603805825e-05, -3.93382906622719e-05, -1.7881233361549675e-05, -2.5152843591058627e-05, -0.03801180422306061, -0.007600201293826103, -2.473989725112915], "finish_reason": "stop"}], "metrics": {"energy": 328.3824551315307, "energy_per_token": 1.433984520225025, "time": 11.279254, "time_per_token": 0.04925438427947598}}
{"outputs": [{"text": "# Convert target data point to list\n    target = list(target)\n    # Convert target data point to tuple\n    target_tuple = (target[0], target[1])\n    # Convert target data point to tuple\n    # target = list(target)\n\n    # Validate 'k' is a non-negative integer\n    if not isinstance(k, int) or k < 0:\n        raise ValueError(\"'k' must be a non-negative integer.\")\n\n    # Convert data to numpy array\n    data = np.array(data, dtype=np.float64)\n\n    # Convert target data point to numpy array\n    target = np.array(target_tuple)\n\n    # Calculate distance using haversine formula\n    distances = np.sqrt(np.sum((data - target) ** 2, axis=1))\n\n    # Sort data in ascending order of distances\n    sorted_data = data[np.argsort(distances)]\n\n    # Return first 'k' rows in sorted order\n    return sorted_data[:k]", "tokens": ["#", " Convert", " target", " data", " point", " to", " list", "\n", "    ", "target", " =", " list", "(", "target", ")", "\n", "    ", "#", " Convert", " target", " data", " point", " to", " tuple", "\n", "    ", "target", "_", "tuple", " =", " (", "target", "[", "0", "]", ",", " target", "[", "1", "])", "\n", "    ", "#", " Convert", " target", " data", " point", " to", " tuple", "\n", "    ", "#", " target", " =", " list", "(", "target", ")", "\n", "\n", "    ", "#", " Valid", "ate", " '", "k", "'", " is", " a", " non", "-", "negative", " integer", "\n", "    ", "if", " not", " isinstance", "(", "k", ",", " int", ")", " or", " k", " <", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "'", "k", "'", " must", " be", " a", " non", "-", "negative", " integer", ".", "\"", ")", "\n", "\n", "    ", "#", " Convert", " data", " to", " numpy", " array", "\n", "    ", "data", " =", " np", ".", "array", "(", "data", ",", " dtype", "=", "np", ".", "float", "6", "4", ")", "\n", "\n", "    ", "#", " Convert", " target", " data", " point", " to", " numpy", " array", "\n", "    ", "target", " =", " np", ".", "array", "(", "target", "_", "tuple", ")", "\n", "\n", "    ", "#", " Calculate", " distance", " using", " ha", "vers", "ine", " formula", "\n", "    ", "dist", "ances", " =", " np", ".", "sqrt", "(", "np", ".", "sum", "((", "data", " -", " target", ")", " **", " ", "2", ",", " axis", "=", "1", "))", "\n", "\n", "    ", "#", " Sort", " data", " in", " ascending", " order", " of", " distances", "\n", "    ", "s", "orted", "_", "data", " =", " data", "[", "np", ".", "args", "ort", "(", "dist", "ances", ")]", "\n", "\n", "    ", "#", " Return", " first", " '", "k", "'", " rows", " in", " sorted", " order", "\n", "    ", "return", " sorted", "_", "data", "[:", "k", "]", "\n", "\n", "def"], "logprobs": [-1.50576651096344, -3.525996685028076, -1.7046570777893066, -0.9275072813034058, -0.13980494439601898, -0.18640223145484924, -3.38393235206604, -1.0624574422836304, -0.0021106365602463484, -0.2063482254743576, -0.4568254053592682, -0.5159322619438171, -0.0021864098962396383, -0.05306263640522957, -0.0015929164364933968, -0.005178490653634071, -1.503833532333374, -0.4246821701526642, -2.335594654083252, -1.614532470703125, -0.2569735646247864, -0.014652148820459843, -0.13022221624851227, -1.3097013235092163, -0.17139288783073425, -0.000900101731531322, -0.052505262196063995, -1.0266096591949463, -0.14917872846126556, -0.003127804258838296, -2.576451063156128, -0.1215227022767067, -0.0025679252576082945, -0.008790486492216587, -0.0007284610182978213, -0.0025100174825638533, -0.01959771104156971, -0.000731558189727366, -0.0009545299108140171, -0.014323515817523003, -0.0011314902221783996, -0.7521697878837585, -0.10467733442783356, -1.567888617515564, -1.6843795776367188, -0.05576559156179428, -0.013455416075885296, -0.07087795436382294, -1.5122439861297607, -0.3851444125175476, -0.02162928320467472, -2.2925527095794678, -1.5844076871871948, -1.3775590658187866, -1.7002943754196167, -0.025781162083148956, -0.5251137614250183, -0.3818865120410919, -0.01623094454407692, -1.167102575302124, -0.001383420079946518, -0.17652906477451324, -4.244399070739746, -0.17627763748168945, -1.7540923357009888, -0.005728376563638449, -0.0030374841298907995, -1.4920967817306519, -0.33853334188461304, -0.1011710911989212, -0.0046901218593120575, -0.002615723293274641, -0.014616552740335464, -0.14640381932258606, -0.004440329037606716, -0.14307841658592224, -0.27475324273109436, -0.10780118405818939, -0.0005237876321189106, -0.0018010600470006466, -0.0004353767435532063, -0.03320178762078285, -0.17723174393177032, -0.015231721103191376, -0.028642063960433006, -0.03048551455140114, -0.0031194856856018305, -0.07365650683641434, -0.010378320701420307, -0.004377307370305061, -0.003404774935916066, -0.027566110715270042, -0.007470883894711733, -1.2636104656849056e-05, -0.3154708743095398, -0.1475393921136856, -0.4438646733760834, -0.0015036477707326412, -0.0014753182185813785, -0.08810126781463623, -0.0016891986597329378, -0.04408140853047371, -0.02552240714430809, -0.0011204162146896124, -0.000645429186988622, -0.0028229409363120794, -1.0041565895080566, -0.007141184061765671, -0.00024720950750634074, -0.0018604366341605783, -0.231117382645607, -0.001910886145196855, -0.1193629801273346, -2.0847554206848145, -0.8410884737968445, -0.5265448093414307, -0.5774419903755188, -0.14473755657672882, -0.20092540979385376, -0.0016847953666001558, -0.1536504477262497, -0.23610694706439972, -0.1478564441204071, -7.748303323751315e-05, -0.0963234007358551, -0.044532448053359985, -0.022316865622997284, -2.9107930660247803, -0.05613115057349205, -0.1546557992696762, -0.3370020389556885, -0.0025833826512098312, -0.07453875243663788, -0.2522227466106415, -7.557583012385294e-05, -0.0048047322779893875, -0.024046091362833977, -0.3941276967525482, -0.0010625437134876847, -0.055793773382902145, -2.833390474319458, -0.5212616920471191, -0.23936431109905243, -0.01515728235244751, -0.03900492936372757, -0.567435622215271, -0.03779981657862663, -0.03148937225341797, -0.0023354417644441128, -0.036416247487068176, -0.5221876502037048, -0.0140062952414155, -0.0020042823161929846, -0.05254790559411049, -0.18031448125839233, -0.00907617062330246, -1.1906002759933472, -5.566918844124302e-05, -1.579385757446289, -0.13916082680225372, -0.12050238996744156, -0.0009513143450021744, -0.10615739971399307, -0.39975011348724365, -1.526352882385254, -3.891909599304199, -2.0534400939941406, -0.0026726736687123775, -0.005803639069199562, -0.06328810751438141, -0.07260144501924515, -0.00863331276923418, -0.8599097728729248, -0.1003311350941658, -0.007654975634068251, -0.3519760072231293, -0.0026400971692055464, -0.791085422039032, -0.24430310726165771, -1.549236536026001, -0.0004439560289029032, -0.2916698157787323, -0.47564664483070374, -0.372587114572525, -0.05508168041706085, -0.0017119289841502905, -1.455852746963501, -0.007736008148640394, -0.00031454383861273527, -9.775113539944869e-06, -0.007522589061409235, -0.008756808005273342, -0.025609208270907402, -0.0012472239322960377, -0.001778450678102672, -0.03203849121928215, -0.11070616543292999, -0.0004303721070755273, -0.01851513795554638, -0.2630658447742462, -2.9969301223754883, -1.568439245223999, -0.02273739129304886, -0.00782377552241087, -0.3400730788707733, -0.6084280610084534, -0.2555302381515503, -0.00197001826018095, -0.21521693468093872, -0.0005994430393911898, -0.0005198557628318667, -0.7062354683876038, -0.0046987831592559814, -0.7301854491233826, -0.0012318650260567665, -0.1539592444896698, -0.0009590555564500391, -0.0017872564494609833, -3.85038583772257e-05, -5.936446541454643e-05, -0.000331704446580261, -4.887569048150908e-06, -0.09215854853391647, -0.021475281566381454, -0.0465843603014946, -0.00025817399728111923, -0.024573838338255882, -0.3315504789352417, -2.9502439498901367, -0.3164452612400055, -0.0009604846709407866, -0.0005641775787808001, -1.083356261253357, -3.3896350860595703, -0.40683236718177795, -1.521960973739624, -0.10838537663221359, -0.002688367385417223, -0.3032630681991577, -0.11292862147092819, -0.0025880197063088417, -1.5139465176616795e-05, -0.08074334263801575, -0.010360388085246086, -0.1908368170261383, -0.35504350066185, -0.07147523760795593, -1.1555187702178955], "finish_reason": "stop"}], "metrics": {"energy": 336.48067841911336, "energy_per_token": 1.3567769291093281, "time": 12.116647, "time_per_token": 0.04885744758064516}}
{"outputs": [{"text": "if not isinstance(k, int):\n        raise ValueError(\"k must be an integer.\")\n    elif k < 0:\n        raise ValueError(\"k must be a non-negative integer.\")\n    elif len(data.index) < k:\n        raise ValueError(\"There are not enough data points for 'k' nearest neighbors.\")\n    dist = [math.dist(target, row) for row in data.values]\n    sorted_dist = sorted(dist)\n    nearest_k = sorted_dist[:k]\n    nearest_neighbors = [row for dist, row in zip(sorted_dist, data.values) if dist in nearest_k]\n    return nearest_neighbors", "tokens": ["if", " not", " isinstance", "(", "k", ",", " int", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "k", " must", " be", " an", " integer", ".", "\"", ")", "\n", "    ", "elif", " k", " <", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "k", " must", " be", " a", " non", "-", "negative", " integer", ".", "\"", ")", "\n", "    ", "elif", " len", "(", "data", ".", "index", ")", " <", " k", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "There", " are", " not", " enough", " data", " points", " for", " '", "k", "'", " nearest", " neighbors", ".", "\"", ")", "\n", "    ", "dist", " =", " [", "math", ".", "dist", "(", "target", ",", " row", ")", " for", " row", " in", " data", ".", "values", "]", "\n", "    ", "s", "orted", "_", "dist", " =", " sorted", "(", "dist", ")", "\n", "    ", "ne", "arest", "_", "k", " =", " sorted", "_", "dist", "[:", "k", "]", "\n", "    ", "ne", "arest", "_", "ne", "ighbors", " =", " [", "row", " for", " dist", ",", " row", " in", " zip", "(", "s", "orted", "_", "dist", ",", " data", ".", "values", ")", " if", " dist", " in", " nearest", "_", "k", "]", "\n", "    ", "return", " nearest", "_", "ne", "ighbors", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.220100998878479, -0.38665109872817993, -0.11872545629739761, -0.0007759897271171212, -0.06379499286413193, -0.0007659838884137571, -0.029085297137498856, -0.7059046626091003, -0.018990369513630867, -0.005443986505270004, -0.02758791297674179, -0.06499377638101578, -2.074220174108632e-05, -0.2757437825202942, -0.13906000554561615, -0.8376340270042419, -0.1794937252998352, -0.00237980205565691, -0.625862181186676, -0.041889119893312454, -1.970776915550232, -0.023516669869422913, -0.0004524161049630493, -0.002893430180847645, -0.14826767146587372, -1.5867981910705566, -0.014219745993614197, -0.045494288206100464, -0.0034866277128458023, -0.029405295848846436, -0.01132960058748722, -0.0011295850854367018, -0.0012836558744311333, -0.003239148296415806, -0.0005354639724828303, -3.576214658096433e-05, -0.004619759041815996, -0.006885254755616188, -0.027554862201213837, -0.11851423978805542, -0.014517630450427532, -0.18013061583042145, -0.02987341396510601, -0.0018128404626622796, -0.000795762927737087, -0.016306711360812187, -0.012839624658226967, -0.0008511496125720441, -0.0003120412293355912, -0.000592890428379178, -0.7210769653320312, -0.9917444586753845, -2.614950180053711, -0.0003575639275368303, -0.10716663300991058, -2.318312883377075, -1.8299286365509033, -0.0068976860493421555, -0.2936474680900574, -0.04772086441516876, -0.021287765353918076, -0.009593219496309757, -0.001408776268362999, -0.1981007605791092, -0.04836905002593994, -3.421248038648628e-05, -0.010326645337045193, -0.34044793248176575, -1.6606003046035767, -0.3117215037345886, -0.6141136884689331, -0.08987762778997421, -0.6189129948616028, -0.1832205206155777, -1.8157495260238647, -2.5219569206237793, -0.006209367420524359, -0.006030578166246414, -0.46301236748695374, -0.03570999577641487, -0.17569759488105774, -0.016464559361338615, -0.0013543728273361921, -0.0010780243901535869, -1.2227541208267212, -3.0692107677459717, -2.702711343765259, -2.9851717948913574, -0.8231480121612549, -4.649054244509898e-05, -0.8916327357292175, -0.2491208016872406, -1.0827301740646362, -0.019335245713591576, -2.169306755065918, -0.15864428877830505, -0.0589764378964901, -0.3172032833099365, -0.00030751267331652343, -0.014401307329535484, -0.13733810186386108, -0.9550620913505554, -0.1493796706199646, -0.04506545141339302, -0.02575002796947956, -1.6151913404464722, -0.023581290617585182, -0.008638513274490833, -0.49041876196861267, -0.07426099479198456, -0.7390046715736389, -0.012682144530117512, -0.2826624810695648, -0.07782420516014099, -0.15494436025619507, -0.037734728306531906, -0.7813457250595093, -0.17774073779582977, -0.5283137559890747, -1.4047646522521973, -0.09897706657648087, -0.4158536195755005, -0.022860905155539513, -1.5139465176616795e-05, -0.09606841206550598, -0.010146702639758587, -0.010894225910305977, -0.011459952220320702, -0.04211144521832466, -0.30222129821777344, -0.11860053241252899, -0.13602764904499054, -1.612701416015625, -0.06817706674337387, -0.013054853305220604, -1.1374526023864746, -2.1049675941467285, -0.35520705580711365, -1.1968145370483398, -0.33293208479881287, -0.00689496286213398, -0.0015567338559776545, -0.1362890899181366, -0.0007577646756544709, -0.9752499461174011, -1.0371154530730564e-05, -0.013878509402275085, -1.9073468138230965e-06, -0.003963235765695572, -0.014522917568683624, -0.020170219242572784, -0.049712032079696655, -0.06506448239088058, -0.047570716589689255, -0.013846530579030514, -0.09937886893749237, -0.0006741396500729024, -5.960446742392378e-06, -3.0278701160568744e-05, -0.02006109617650509, -0.0045730057172477245, -0.04555090144276619, -0.451138973236084, -0.0641879215836525, -0.00011157367407577112, -0.0004891153075732291, -5.8410845667822286e-05, -1.8852875232696533, -7.152555099310121e-07, -8.344646857949556e-07, -7.629103492945433e-05, -0.0001267114421352744, -0.18488052487373352], "finish_reason": "stop"}], "metrics": {"energy": 242.07745710754398, "energy_per_token": 1.399291659581179, "time": 8.168696, "time_per_token": 0.04721789595375723}}
{"outputs": [{"text": "if isinstance(k, int) and k >= 0:\n        # Calculate the distance between the target and each row in data using Haversine formula\n        distances = []\n        for row in data.itertuples():\n            lat1, lon1 = row[1], row[2]\n            lat2, lon2 = target[0], target[1]\n            rad_dist = (math.pi/180.0)*6371\n            lat1 = math.radians(lat1)\n            lon1 = math.radians(lon1)\n            lat2 = math.radians(lat2)\n            lon2 = math.radians(lon2)\n            distance = (2 * math.asin(math.sqrt(math.pow(math.sin((lat1-lat2)/2),2)+\n            math.cos(lat1)*math.cos(lat2)*(math.sin((lon1-lon2)/2)**2))))\n            distances.append([row[1],row[2],distance])\n\n        # Sort the distances by distance from target using lambda function", "tokens": ["if", " isinstance", "(", "k", ",", " int", ")", " and", " k", " >=", " ", "0", ":", "\n", "        ", "#", " Calculate", " the", " distance", " between", " the", " target", " and", " each", " row", " in", " data", " using", " Ha", "vers", "ine", " formula", "\n", "        ", "dist", "ances", " =", " []", "\n", "        ", "for", " row", " in", " data", ".", "it", "ert", "up", "les", "():", "\n", "            ", "lat", "1", ",", " lon", "1", " =", " row", "[", "1", "]", ",", " row", "[", "2", "]", "\n", "            ", "lat", "2", ",", " lon", "2", " =", " target", "[", "0", "]", ",", " target", "[", "1", "]", "\n", "            ", "rad", "_", "dist", " =", " (", "math", ".", "pi", "/", "1", "8", "0", ".", "0", ")*", "6", "3", "7", "1", "\n", "            ", "lat", "1", " =", " math", ".", "rad", "ians", "(", "lat", "1", ")", "\n", "            ", "lon", "1", " =", " math", ".", "rad", "ians", "(", "lon", "1", ")", "\n", "            ", "lat", "2", " =", " math", ".", "rad", "ians", "(", "lat", "2", ")", "\n", "            ", "lon", "2", " =", " math", ".", "rad", "ians", "(", "lon", "2", ")", "\n", "            ", "distance", " =", " (", "2", " *", " math", ".", "as", "in", "(", "math", ".", "sqrt", "(", "math", ".", "pow", "(", "math", ".", "sin", "((", "lat", "1", "-", "lat", "2", ")/", "2", ")", ",", "2", ")+", "\n", "            ", "math", ".", "cos", "(", "lat", "1", ")*", "math", ".", "cos", "(", "lat", "2", ")*(", "math", ".", "sin", "((", "lon", "1", "-", "lon", "2", ")/", "2", ")**", "2", "))", "))", "\n", "            ", "dist", "ances", ".", "append", "([", "row", "[", "1", "]", ",", "row", "[", "2", "]", ",", "distance", "])", "\n", "\n", "        ", "#", " Sort", " the", " distances", " by", " distance", " from", " target", " using", " lambda", " function"], "logprobs": [-1.220100998878479, -2.9923601150512695, -0.0005956306122243404, -0.07916931062936783, -0.0009239218779839575, -0.2986452281475067, -0.33257946372032166, -0.16362810134887695, -0.058757491409778595, -0.25821658968925476, -0.016836095601320267, -0.06201108917593956, -0.01003364659845829, -0.029457731172442436, -0.045209482312202454, -2.0089898109436035, -1.456827163696289, -0.6863409280776978, -0.46269404888153076, -0.9238834381103516, -0.32788002490997314, -0.03737352043390274, -0.47723016142845154, -0.25732171535491943, -2.186493158340454, -0.30520468950271606, -1.5439963340759277, -2.5067224502563477, -2.2113401889801025, -3.957670196541585e-05, -0.003785588312894106, -0.11499442160129547, -0.13004596531391144, -0.003916095942258835, -0.32488805055618286, -0.04706964269280434, -0.010067281313240528, -1.2664295434951782, -0.005726124159991741, -0.010608234442770481, -0.0682690441608429, -0.3212938904762268, -0.0035379454493522644, -0.007972680032253265, -0.14509962499141693, -0.6757967472076416, -0.0013808010844513774, -0.0007855190197005868, -2.50339189733495e-06, -0.3412151038646698, -0.02403922565281391, -0.001568279112689197, -0.270109623670578, -0.11166774481534958, -0.2036784291267395, -0.08759913593530655, -7.962863310240209e-05, -0.11414696276187897, -0.4395889937877655, -0.32143324613571167, -0.05898284167051315, -0.1474950611591339, -0.00903281569480896, -0.0005989664932712913, -0.0005458295345306396, -0.0024894457310438156, -6.151010165922344e-05, -0.025709712877869606, -0.004709817469120026, -0.11598140746355057, -0.0038752472028136253, -0.0032297612633556128, -0.0001070442158379592, -4.434487345861271e-05, -0.0004979324294254184, -0.010169477201998234, -0.07690832018852234, -0.006572416052222252, -0.0008182753226719797, -0.0006790239713154733, -0.0006003961316309869, -0.00013028726971242577, -0.00020072828920092434, -1.4185804502631072e-05, -0.002372071845456958, -0.08084461092948914, -3.9140610694885254, -0.8512494564056396, -1.952580451965332, -0.03307078033685684, -2.473315715789795, -1.1137909889221191, -1.537788011773955e-05, -0.1950593888759613, -1.542690634727478, -0.010107523761689663, -3.0040289857424796e-05, -2.9801878554280847e-05, -1.1735162734985352, -0.03216605633497238, -1.4149811267852783, -0.5725589990615845, -0.003753285389393568, -0.0013333010720089078, -0.0034702338743954897, -1.7175201177597046, -0.030457185581326485, -0.631965696811676, -0.944512128829956, -1.1532843112945557, -0.2814900577068329, -7.10462118149735e-05, -0.8239098191261292, -0.000516757951118052, -0.0013633014168590307, -0.004510823171585798, -0.0017986800521612167, -0.008905691094696522, -0.005847371648997068, -7.772143726469949e-05, -0.6377822160720825, -0.00016342257731594145, -0.000895933189895004, -0.00040797016117721796, -6.603976362384856e-05, -4.3987260141875595e-05, -6.627816765103489e-05, -3.9934315282152966e-05, -0.00011955977242905647, -0.00010430268594063818, -0.00015615197480656207, -5.864924969500862e-05, -0.0006250573205761611, -0.004516638349741697, -0.0002708068350329995, -0.0005018643569201231, -0.000695463502779603, -7.056941103655845e-05, -7.4741430580616e-05, -7.331102824537084e-05, -3.135155202471651e-05, -0.0002015625941567123, -0.0004976941272616386, -0.0001113352773245424, -0.0002673506969586015, -3.683499380713329e-05, -0.00044050050200894475, -0.0001209901092806831, -0.00020430385484360158, -0.00023862851958256215, -0.000301673193462193, -1.156323378381785e-05, -6.878139538457617e-05, -3.790783375734463e-05, -0.00014840454969089478, -0.0003736513026524335, -9.452849917579442e-05, -6.3774932641536e-05, -0.033014725893735886, -2.3979384899139404, -0.05182477831840515, -2.914813280105591, -0.44886624813079834, -0.4159485399723053, -0.151937335729599, -7.152531907195225e-06, -0.83994460105896, -3.3378546504536644e-06, -0.05265749990940094, -0.03984002768993378, -3.3378546504536644e-06, -0.0003923600015696138, -0.3766988217830658, -0.09321589022874832, -2.9802276912960224e-06, -0.13604740798473358, -0.24995572865009308, -0.018877491354942322, -9.298280929215252e-06, -0.0017102628480643034, -0.03130823001265526, -0.006809718441218138, -0.6801819205284119, -0.14400380849838257, -0.000723576988093555, -3.564294092939235e-05, -0.05792421102523804, -0.0010876698652282357, -0.059475962072610855, -0.0024175008293241262, -0.40896403789520264, -1.5907385349273682, -1.5154739618301392, -1.4731225967407227, -0.16784222424030304, -3.933898824470816e-06, -0.017207259312272072, -0.002062219427898526, -0.001069093239493668, -0.001446987851522863, -0.04458227381110191, -0.005835638847202063, -7.748573807475623e-06, -0.0003121604095213115, -0.011148305609822273, -0.005563252605497837, -0.0001567479339428246, -0.008739910088479519, -0.002940024249255657, -1.4305104514278355e-06, -8.511180931236595e-05, -0.003966798074543476, -0.00051771110156551, -0.0008350699208676815, -0.0008719933102838695, -0.00015400654228869826, -0.00012766500003635883, -0.0005525015876628458, -0.00014590153296012431, -0.3631346821784973, -0.0004944770480506122, -0.020151643082499504, -0.06849882751703262, -0.3191041946411133, -0.016986476257443428, -0.2933715581893921, -0.014089047908782959, -0.0009010545909404755, -0.0007400158210657537, -1.4673457145690918, -0.7183181047439575, -0.32803475856781006, -0.23636692762374878, -0.07399090379476547, -0.0007689617923460901, -2.6981000900268555, -4.815939246327616e-05, -0.0005789510905742645, -0.0017043125117197633, -0.0006401873542927206, -0.7577007412910461, -0.14114834368228912, -0.0070311021991074085, -0.4801773428916931, -0.010488389059901237, -0.3688819110393524, -0.24110087752342224, -0.4487074315547943, -0.1359516829252243, -2.363262414932251, -0.17451287806034088, -1.5203779935836792, -1.1829135417938232, -3.29364275932312, -2.1195993423461914, -0.2835189700126648], "finish_reason": "length"}], "metrics": {"energy": 354.2943234748841, "energy_per_token": 1.383962201073766, "time": 12.526752, "time_per_token": 0.048932625}}
{"outputs": [{"text": "# check if k is a non-negative integer\n    if not isinstance(k, int) or k < 0:\n        raise ValueError(\"k must be a non-negative integer\")\n\n    # find the distance of target from each row in data\n    distances = []\n    for row in data.itertuples():\n        lat1, lon1, lat2, lon2 = row[1], row[2], target[0], target[1]\n        # distance between points on the surface of the Earth\n        distance = 2 * math.pi * math.sqrt(\n            (lat1 - lat2) ** 2 + (lon1 - lon2) ** 2)\n        # distance in km\n        distance_km = math.radians(distance) * 6371\n        distances.append(distance_km)\n\n    # sort distances in ascending order\n    distances.sort()\n\n    # return the k nearest points\n    k_nearest = distances[0:k]\n\n    return [data.iloc[i][1:3] for i, d in enumerate(", "tokens": ["#", " check", " if", " k", " is", " a", " non", "-", "negative", " integer", "\n", "    ", "if", " not", " isinstance", "(", "k", ",", " int", ")", " or", " k", " <", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "k", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n", "\n", "    ", "#", " find", " the", " distance", " of", " target", " from", " each", " row", " in", " data", "\n", "    ", "dist", "ances", " =", " []", "\n", "    ", "for", " row", " in", " data", ".", "it", "ert", "up", "les", "():", "\n", "        ", "lat", "1", ",", " lon", "1", ",", " lat", "2", ",", " lon", "2", " =", " row", "[", "1", "]", ",", " row", "[", "2", "]", ",", " target", "[", "0", "]", ",", " target", "[", "1", "]", "\n", "        ", "#", " distance", " between", " points", " on", " the", " surface", " of", " the", " Earth", "\n", "        ", "distance", " =", " ", "2", " *", " math", ".", "pi", " *", " math", ".", "sqrt", "(", "\n", "            ", "(", "lat", "1", " -", " lat", "2", ")", " **", " ", "2", " +", " (", "lon", "1", " -", " lon", "2", ")", " **", " ", "2", ")", "\n", "        ", "#", " distance", " in", " km", "\n", "        ", "distance", "_", "km", " =", " math", ".", "rad", "ians", "(", "distance", ")", " *", " ", "6", "3", "7", "1", "\n", "        ", "dist", "ances", ".", "append", "(", "distance", "_", "km", ")", "\n", "\n", "    ", "#", " sort", " distances", " in", " ascending", " order", "\n", "    ", "dist", "ances", ".", "sort", "()", "\n", "\n", "    ", "#", " return", " the", " k", " nearest", " points", "\n", "    ", "k", "_", "ne", "arest", " =", " distances", "[", "0", ":", "k", "]", "\n", "\n", "    ", "return", " [", "data", ".", "il", "oc", "[", "i", "][", "1", ":", "3", "]", " for", " i", ",", " d", " in", " enumerate", "("], "logprobs": [-1.50576651096344, -2.341902256011963, -1.143540859222412, -0.2880820333957672, -0.018389448523521423, -0.4780869483947754, -0.2572077214717865, -0.013510223478078842, -0.00396454194560647, -0.02273867279291153, -0.08471870422363281, -0.0024895647075027227, -0.06743217259645462, -0.22095246613025665, -0.06979705393314362, -0.0004689785710070282, -0.002336869016289711, -0.0005422552349045873, -0.028452178463339806, -0.18101461231708527, -0.0075729903765022755, -0.024547899141907692, -0.019547445699572563, -0.00129413278773427, -0.03748249262571335, -0.005918833427131176, -0.0026496085338294506, -0.00265507772564888, -0.016139807179570198, -0.005959006026387215, -5.722029527532868e-06, -0.26756179332733154, -0.09364812821149826, -0.6488885879516602, -0.06145374849438667, -0.0012653210433200002, -0.04255354776978493, -0.018069885671138763, -0.0007968349382281303, -0.0004884004010818899, -0.0031204363331198692, -0.18403178453445435, -9.583967766957358e-05, -0.0019164782715961337, -0.24357576668262482, -0.0012442474253475666, -0.13431157171726227, -3.930314779281616, -0.6017890572547913, -0.8258879780769348, -1.1695308685302734, -1.66424560546875, -0.865727961063385, -0.6791629195213318, -1.710100769996643, -0.35598745942115784, -0.39720654487609863, -0.2176319807767868, -0.0018368767341598868, -0.16462083160877228, -0.04628870636224747, -0.00938220415264368, -0.8201653361320496, -0.005436516832560301, -0.016729889437556267, -0.020375700667500496, -0.24086011946201324, -0.005372372455894947, -0.00920445378869772, -0.09791705012321472, -0.5303563475608826, -0.0016827721847221255, -0.0007583603146485984, -5.960446742392378e-06, -0.27333971858024597, -0.017848121002316475, -0.001690864795818925, -0.4604561924934387, -0.18361051380634308, -0.34186989068984985, -0.10128723084926605, -0.00013243274588603526, -2.8162646293640137, -0.21441732347011566, -0.0016164820408448577, -0.0010412277188152075, -0.00015269544383045286, -3.8265450712060556e-05, -0.008145565167069435, -0.08351264148950577, -0.4090883731842041, -0.1051625981926918, -0.06800657510757446, -0.002198542468249798, -0.0011200590524822474, -0.00071190285962075, -0.016278915107250214, -0.0002628219372127205, -0.0004997196956537664, -0.024407610297203064, -0.00018225439998786896, -0.0032482976093888283, -0.00035506143467500806, -0.0004885195521637797, -0.0005806190893054008, -0.0001754606782924384, -0.0002996472467202693, -4.327203714638017e-05, -0.007844829931855202, -0.0568666011095047, -2.693206787109375, -2.861098051071167, -2.1954307556152344, -2.339653253555298, -1.4890666007995605, -1.1783254146575928, -2.2372989654541016, -0.05281683802604675, -0.3155990540981293, -0.7778956890106201, -0.32658645510673523, -0.0017673838883638382, -1.489637017250061, -0.05677706375718117, -0.15077733993530273, -0.4756813049316406, -0.07343898713588715, -0.10131685435771942, -1.1920858014491387e-05, -0.6800361275672913, -0.013678626157343388, -0.25978001952171326, -0.0007439468172378838, -0.20739151537418365, -0.3855648636817932, -1.5512149333953857, -0.043385233730077744, -0.42585983872413635, -0.25812828540802, -0.41218826174736023, -0.25477710366249084, -0.006387058645486832, -0.0007730118231847882, -0.12601549923419952, -0.055475685745477676, -0.0012254356406629086, -5.2689116273541003e-05, -0.018307987600564957, -0.0230014119297266, -0.0009297577198594809, -0.000635183765552938, -0.0007641970878466964, -9.476689592702314e-05, -0.00044467096449807286, -0.0013400870375335217, -0.00017498392844572663, -0.0009097489528357983, -6.317892984952778e-05, -0.32617151737213135, -1.1776401996612549, -0.041275955736637115, -1.7335572242736816, -2.094696521759033, -0.7323726415634155, -1.3334721326828003, -0.11138550192117691, -0.0010218166280537844, -1.1702274084091187, -1.8578639030456543, -0.06513261795043945, -0.0006685405969619751, -2.1633145809173584, -1.1920858014491387e-05, -1.8327159881591797, -0.00806882232427597, -0.0044684563763439655, -0.08611910790205002, -0.3001115024089813, -0.9090980887413025, -0.1583458036184311, -0.010200629942119122, -0.002356254495680332, -0.001257224939763546, -0.0017508429009467363, -0.25743600726127625, -0.02029814012348652, -0.21054361760616302, -7.903263758635148e-05, -0.00043644916149787605, -0.000284154579276219, -0.08055770397186279, -0.021318571642041206, -0.005468054208904505, -1.8596476365928538e-05, -0.0023761154152452946, -0.002721180208027363, -0.11612863093614578, -0.0011332763824611902, -0.045221101492643356, -0.21712160110473633, -0.7055870294570923, -0.21764761209487915, -0.008230932056903839, -0.00027533553657121956, -0.21856115758419037, -0.0006181474891491234, -0.8638684153556824, -0.0010266992030665278, -0.7648363709449768, -4.184158387943171e-05, -0.01977759785950184, -0.008099685423076153, -0.155076265335083, -0.00019739109848160297, -0.023769309744238853, -0.5492268800735474, -0.2275274097919464, -1.4939799308776855, -0.2814880609512329, -2.974630117416382, -0.23495817184448242, -0.000856628583278507, -2.8980355262756348, -0.042854078114032745, -0.019217727705836296, -0.037988509982824326, -0.22992382943630219, -0.3504036068916321, -2.6383488178253174, -0.08250700682401657, -0.042528074234724045, -0.027678709477186203, -0.006352707277983427, -0.010123219341039658, -0.790788471698761, -0.001149708521552384, -0.34346091747283936, -2.3647520542144775, -1.579122543334961, -0.17132830619812012, -0.8349884748458862, -2.658331868587993e-05, -0.06742816418409348, -0.5079303979873657, -1.6028883457183838, -0.25992801785469055, -0.6823921203613281, -0.035812366753816605, -0.0011629253858700395, -0.5789398550987244, -0.0010740946745499969, -1.6427994966506958, -0.7778887748718262, -0.0030538849532604218, -0.014443490654230118, -0.0005376085755415261], "finish_reason": "length"}], "metrics": {"energy": 361.97983254814136, "energy_per_token": 1.4139837208911772, "time": 12.501873, "time_per_token": 0.04883544140625}}
{"outputs": [{"text": "if not isinstance(k, int):\n        raise ValueError(\"k should be an integer\")\n    if k < 0:\n        raise ValueError(\"k must be a non-negative integer\")\n    distances = []\n    for i in range(len(data)):\n        lat1, lon1 = data.iloc[i, 0], data.iloc[i, 1]\n        lat2, lon2 = target[0], target[1]\n        radius = 6371\n        lat_diff = math.radians(lat2 - lat1)\n        lon_diff = math.radians(lon2 - lon1)\n        lat1 = math.radians(lat1)\n        lat2 = math.radians(lat2)\n        a = math.sin(lat_diff / 2)**2 + math.cos(lat1) * math.cos(lat2) * (math.sin(lon_diff / 2)**2)\n        c = 2 * math.atan2(math.sqrt(a), math.sqrt(1 - a))\n        ", "tokens": ["if", " not", " isinstance", "(", "k", ",", " int", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "k", " should", " be", " an", " integer", "\"", ")", "\n", "    ", "if", " k", " <", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "k", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n", "    ", "dist", "ances", " =", " []", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "data", "))", ":", "\n", "        ", "lat", "1", ",", " lon", "1", " =", " data", ".", "il", "oc", "[", "i", ",", " ", "0", "]", ",", " data", ".", "il", "oc", "[", "i", ",", " ", "1", "]", "\n", "        ", "lat", "2", ",", " lon", "2", " =", " target", "[", "0", "]", ",", " target", "[", "1", "]", "\n", "        ", "radius", " =", " ", "6", "3", "7", "1", "\n", "        ", "lat", "_", "diff", " =", " math", ".", "rad", "ians", "(", "lat", "2", " -", " lat", "1", ")", "\n", "        ", "lon", "_", "diff", " =", " math", ".", "rad", "ians", "(", "lon", "2", " -", " lon", "1", ")", "\n", "        ", "lat", "1", " =", " math", ".", "rad", "ians", "(", "lat", "1", ")", "\n", "        ", "lat", "2", " =", " math", ".", "rad", "ians", "(", "lat", "2", ")", "\n", "        ", "a", " =", " math", ".", "sin", "(", "lat", "_", "diff", " /", " ", "2", ")**", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " (", "math", ".", "sin", "(", "lon", "_", "diff", " /", " ", "2", ")**", "2", ")", "\n", "        ", "c", " =", " ", "2", " *", " math", ".", "atan", "2", "(", "math", ".", "sqrt", "(", "a", ")", ",", " math", ".", "sqrt", "(", "1", " -", " a", "))", "\n", "        "], "logprobs": [-1.220100998878479, -0.38665109872817993, -0.11872545629739761, -0.0007759897271171212, -0.06379499286413193, -0.0007659838884137571, -0.029085297137498856, -0.7059046626091003, -0.018990369513630867, -0.005443986505270004, -0.02758791297674179, -0.06499377638101578, -2.074220174108632e-05, -0.2757437825202942, -0.13906000554561615, -0.8376340270042419, -2.480564832687378, -0.008122507482767105, -0.7343398332595825, -0.10871616750955582, -0.3502800166606903, -0.0004832768754567951, -0.005014106631278992, -0.11903464049100876, -0.22645331919193268, -0.050498686730861664, -0.06644347310066223, -0.0041814520955085754, -0.03393631428480148, -0.013658988289535046, -0.0014463926199823618, -0.0011399445356801152, -0.003224770538508892, -0.0006820021662861109, -4.386805812828243e-05, -0.0071431961841881275, -0.005553768947720528, -0.03338627517223358, -2.1399827003479004, -0.04293253645300865, -0.4120385944843292, -0.05804930627346039, -0.007658051792532206, -0.002012015553191304, -0.03219156712293625, -0.024973418563604355, -0.00041797960875555873, -0.0011510183103382587, -0.6668720245361328, -2.3491721153259277, -0.10319507122039795, -0.025423860177397728, -0.20715180039405823, -0.023913761600852013, -0.11181508004665375, -0.1677539348602295, -1.162691354751587, -0.1658220738172531, -0.26942405104637146, -0.001420442247763276, -0.3451676666736603, -2.253030106658116e-05, -0.0025056179147213697, -0.06819789111614227, -0.00013433984713628888, -0.005072818137705326, -0.003692833473905921, -0.5974674224853516, -0.20650184154510498, -0.6889076232910156, -0.13503974676132202, -0.00014673586701974273, -0.015793826431035995, -0.307795912027359, -0.34882041811943054, -0.19612714648246765, -0.00019822540343739092, -0.00035124807618558407, -0.0003978414461016655, -2.4941213130950928, -0.08830122649669647, -0.0032095606438815594, -0.01618168130517006, -0.009983723051846027, -0.0017227584030479193, -0.00015686711412854493, -6.222531374078244e-05, -0.00031704644788987935, -1.0847986231965479e-05, -0.00010251473577227443, -0.00013684290752280504, -0.002745075849816203, -0.001527215470559895, -4.351044481154531e-05, -0.011172826401889324, -0.004126843065023422, -0.07345039397478104, -0.004736038856208324, -0.005542151164263487, -0.0002131234941771254, -7.223821739898995e-05, -0.0006565084331668913, -0.01892007142305374, -0.1393316388130188, -0.000894146622158587, -0.0014793653972446918, -0.0008063640561886132, -0.0008042200352065265, -0.0001481661747675389, -0.0004403813509270549, -2.4199192921514623e-05, -0.002999570919200778, -0.0426996573805809, -3.7385945320129395, -0.26008546352386475, -0.027055488899350166, -0.007032404653728008, -0.001973706530407071, -0.0011435167398303747, -0.0035251162480562925, -1.5972239971160889, -0.039682965725660324, -0.5913260579109192, -0.5303947329521179, -0.40357092022895813, -0.005450270138680935, -0.14847351610660553, -2.622600959512056e-06, -0.018911413848400116, -0.0004278697888366878, -0.009738318622112274, -0.014693968929350376, -0.3164290189743042, -0.06913068145513535, -0.0008702066843397915, -0.00046659549116156995, -0.00011681827891152352, -0.006601785775274038, -0.00014983485743869096, -0.005527806468307972, -8.272782724816352e-05, -0.0001731960946926847, -0.00030858523678034544, -0.0005156855913810432, -0.00013040646445006132, -1.7404405298293568e-05, -2.074220174108632e-05, -0.0036741863004863262, -0.0005124686285853386, -0.0016961010405793786, -0.0014027050929144025, -7.629103492945433e-05, -6.818538531661034e-05, -5.0424259825376794e-05, -0.00023541064001619816, -0.00801442563533783, -1.0654462575912476, -0.12556695938110352, -0.37674543261528015, -0.0021460852585732937, -0.00018249277491122484, -0.0009945451747626066, -1.4662635294371285e-05, -0.00020680672605521977, -0.0036751364823430777, -0.004284013994038105, -0.0004505096294451505, -0.0013375869020819664, -0.0008005275158211589, -0.004111765883862972, -0.00010680581908673048, -0.00022671037004329264, -0.0015234065940603614, -0.00013541258522309363, -0.00010406429646536708, -0.0006305375136435032, -4.6967357775429264e-05, -0.00026067672297358513, -0.0019684715662151575, -5.6980417866725475e-05, -0.00028796817059628665, -0.1460711658000946, -0.22471491992473602, -0.001995002618059516, -0.3321603238582611, -1.1920928244535389e-07, -0.17673207819461823, -4.327203714638017e-05, -0.0005485698929987848, -5.6622808187967166e-05, -9.536738616588991e-07, -0.21891537308692932, -0.0004107108688913286, -9.298280929215252e-06, -0.4369334876537323, -0.00030989613151177764, -0.01214737631380558, -0.044629015028476715, -4.160317621426657e-05, -0.028889937326312065, -4.362964682513848e-05, -0.0004536076739896089, -0.0020881532691419125, -0.014989950694143772, -0.0010892179561778903, -0.015028116293251514, -0.0003746046277228743, -0.0009678685455583036, -5.9126061387360096e-05, -0.0017738097812980413, -0.0004605186404660344, -0.0015456646215170622, -0.0074418941512703896, -2.4231884479522705, -0.03159252181649208, -2.145764938177308e-06, -3.266281055402942e-05, -2.2172682292875834e-05, -0.0005311747081577778, -9.536697689327411e-06, -2.264974000354414e-06, -0.002200088929384947, -0.001820098957978189, -9.059865078597795e-06, -0.09273891150951385, -0.00023755589791107923, -0.0007472821744158864, -0.0018146253423765302, -0.00182819040492177, -0.20017166435718536, -0.0004651656490750611, -0.0017458448419347405, -0.00010740180005086586, -0.0010484919184818864, -0.023966718465089798, -8.344646857949556e-07, -0.521785318851471, -0.0010003806091845036, -0.0013665156438946724, -0.21740813553333282, -7.152555099310121e-07, -4.6967357775429264e-05, -1.7881233361549675e-05, -6.389413465512916e-05, -0.00022539935889653862, -0.00018225439998786896, -0.0011617346899583936, -0.0014435357879847288, -2.992108420585282e-05, -5.2689116273541003e-05, -0.041136275976896286, -0.083088718354702, -0.0017651228699833155, -0.0001787979417713359, -0.0015924404142424464, -0.0020453264005482197], "finish_reason": "length"}], "metrics": {"energy": 356.8800803413389, "energy_per_token": 1.394062813833355, "time": 12.341402, "time_per_token": 0.0482086015625}}
{"outputs": [{"text": "if k < 0:\n        raise ValueError(\"'k' must be a non-negative integer.\")\n    data_latitudes, data_longitudes = data.Latitude.values, data.Longitude.values\n    target_lat, target_lon = target\n    min_distance = math.inf\n    nearest_neighbors = []\n\n    for data_lat, data_lon in zip(data_latitudes, data_longitudes):\n        lat1, lon1 = data_lat, data_lon\n        lat2, lon2 = target_lat, target_lon\n        distance = 6371.0 * math.acos(\n            math.sin(lat1) * math.sin(lat2) +\n            math.cos(lat1) * math.cos(lat2) * math.cos(lon1 - lon2)\n        )\n        if min_distance > distance:\n            min_distance = distance\n            nearest_neighbors = [data_lat, data_lon]\n    sorted_neighbors = sorted(nearest_neighbors, key=lambda x: distance)", "tokens": ["if", " k", " <", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "'", "k", "'", " must", " be", " a", " non", "-", "negative", " integer", ".", "\"", ")", "\n", "    ", "data", "_", "lat", "itudes", ",", " data", "_", "long", "itudes", " =", " data", ".", "Lat", "itude", ".", "values", ",", " data", ".", "Long", "itude", ".", "values", "\n", "    ", "target", "_", "lat", ",", " target", "_", "lon", " =", " target", "\n", "    ", "min", "_", "distance", " =", " math", ".", "inf", "\n", "    ", "ne", "arest", "_", "ne", "ighbors", " =", " []", "\n", "\n", "    ", "for", " data", "_", "lat", ",", " data", "_", "lon", " in", " zip", "(", "data", "_", "lat", "itudes", ",", " data", "_", "long", "itudes", "):", "\n", "        ", "lat", "1", ",", " lon", "1", " =", " data", "_", "lat", ",", " data", "_", "lon", "\n", "        ", "lat", "2", ",", " lon", "2", " =", " target", "_", "lat", ",", " target", "_", "lon", "\n", "        ", "distance", " =", " ", "6", "3", "7", "1", ".", "0", " *", " math", ".", "ac", "os", "(", "\n", "            ", "math", ".", "sin", "(", "lat", "1", ")", " *", " math", ".", "sin", "(", "lat", "2", ")", " +", "\n", "            ", "math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " math", ".", "cos", "(", "lon", "1", " -", " lon", "2", ")", "\n", "        ", ")", "\n", "        ", "if", " min", "_", "distance", " >", " distance", ":", "\n", "            ", "min", "_", "distance", " =", " distance", "\n", "            ", "ne", "arest", "_", "ne", "ighbors", " =", " [", "data", "_", "lat", ",", " data", "_", "lon", "]", "\n", "    ", "s", "orted", "_", "ne", "ighbors", " =", " sorted", "(", "ne", "arest", "_", "ne", "ighbors", ",", " key", "=", "lambda", " x", ":", " distance", ")"], "logprobs": [-1.220100998878479, -1.7045621871948242, -0.22322985529899597, -0.004764394834637642, -0.09151562303304672, -0.429831326007843, -0.015479420311748981, -0.006910472176969051, -0.02474759891629219, -0.003966085612773895, -1.7881233361549675e-05, -0.3051691949367523, -0.11512713134288788, -1.2416350841522217, -0.005632482469081879, -0.0017579830018803477, -0.2096950262784958, -0.01122434064745903, -0.09399738907814026, -0.03407031670212746, -0.001709667849354446, -0.0011731653939932585, -0.010772645473480225, -0.9154679179191589, -0.008634612895548344, -0.0004262015863787383, -0.0034861525055021048, -0.5608950853347778, -3.2311387062072754, -1.6001652479171753, -1.7084254026412964, -2.2917914390563965, -2.464162588119507, -0.0019613332115113735, -8.868777513271198e-05, -0.001379372552037239, -0.0010507544502615929, -0.01062710676342249, -0.2546180784702301, -0.5438666939735413, -0.7110875844955444, -4.23184028477408e-05, -0.2081601619720459, -0.3603985011577606, -0.03848245367407799, -0.0011879300000146031, -0.0018398514948785305, -0.00018106251081917435, -1.4185804502631072e-05, -0.00013195598148740828, -0.000851387856528163, -0.02291228622198105, -0.12775038182735443, -0.37213587760925293, -0.005192010197788477, -0.032972972840070724, -2.298978567123413, -0.002877739956602454, -4.124556289752945e-05, -0.6172702312469482, -0.0014178233686834574, -0.02284226194024086, -0.3046448230743408, -0.4215148687362671, -4.351827144622803, -0.006632694508880377, -1.2395341396331787, -0.13086290657520294, -0.8179522156715393, -1.883488948806189e-05, -0.08048049360513687, -0.05513504147529602, -0.09758980572223663, -0.4026963412761688, -0.09707694500684738, -0.05493184179067612, -0.14326870441436768, -0.016119396314024925, -0.01419165637344122, -0.046024389564991, -0.005285812076181173, -0.8093075156211853, -0.0005189026123844087, -0.19421188533306122, -2.331235885620117, -0.014722160995006561, -0.587843656539917, -0.04760129377245903, -0.0003657863999251276, -4.6491513785440475e-06, -0.0026742194313555956, -0.02909027598798275, -0.0028770267963409424, -0.001615291927009821, -0.0014397265622392297, -0.0008831891464069486, -4.1483970562694594e-05, -3.814689989667386e-06, -0.00011729506513802335, -0.0007203606073744595, -3.2543604902457446e-05, -4.005352093372494e-05, -2.0861407392658293e-05, -0.0004757702990900725, -0.004208043217658997, -0.010128765366971493, -1.386796236038208, -1.7870352268218994, -0.12453467398881912, -0.08291284739971161, -0.0004418112221173942, -0.08302608132362366, -1.180610179901123, -0.004243298899382353, -0.0009246364934369922, -0.019991572946310043, -0.0021771318279206753, -3.0040289857424796e-05, -0.0002047805901383981, -0.009011668153107166, -0.004026402253657579, -0.022819774225354195, -0.002033667638897896, -0.00557261798530817, -0.0003165697562508285, -8.701899787411094e-05, -0.0005744237569160759, -0.0033820830285549164, -0.004030795302242041, -2.9801878554280847e-05, -0.0004493180604185909, -0.00023636408150196075, -5.61460001335945e-05, -0.00012957210128661245, -0.0031203175894916058, -0.22545239329338074, -1.2852505445480347, -0.047920648008584976, -2.3470051288604736, -0.438701331615448, -0.002522978698834777, -0.0028909340035170317, -0.0020361661445349455, -2.623758316040039, -0.08600053936243057, -0.6182031035423279, -0.032343581318855286, -1.811964830267243e-05, -0.019274676218628883, -0.00011228884250158444, -0.013224156573414803, -0.8900874853134155, -0.041114311665296555, -0.03450389951467514, -1.764281842042692e-05, -0.13417501747608185, -0.005928076803684235, -0.8537740111351013, -0.18782126903533936, -1.6824673414230347, -0.0033091329969465733, -0.0010382506297901273, -0.00037281715776771307, -0.0060561723075807095, -0.0003496989083942026, -0.002606924856081605, -0.000800408364739269, -0.00035506143467500806, -0.10053630918264389, -0.8900363445281982, -0.0019442004850134254, -0.0024474686942994595, -0.0006236277404241264, -4.5060096454108134e-05, -0.0004555141495075077, -0.0016746795736253262, -0.0009209443815052509, -0.000933807052206248, -0.00024577934527769685, -0.0007815881981514394, -0.0009723940747790039, -2.8967437174287625e-05, -3.349725011503324e-05, -0.0007401349139399827, -0.00015293381875380874, -0.0004996005445718765, -0.0020778034813702106, -0.12777754664421082, -0.0051858434453606606, -5.113947918289341e-05, -0.00531332241371274, -0.02064104564487934, -0.08592516928911209, -0.08127035945653915, -0.000651147507596761, -9.679325739853084e-05, -0.19609864056110382, -0.0023347281385213137, -0.011036896146833897, -0.0009192770230583847, -0.013134037144482136, -0.19523024559020996, -0.07758088409900665, -2.9287784099578857, -0.00018630675913300365, -2.7417760065873154e-05, -0.09207776933908463, -0.0014225849881768227, -0.007408052682876587, -0.0019378946162760258, -0.0008200620068237185, -0.29393672943115234, -2.0503786799963564e-05, -0.0005583396414294839, -0.05096270143985748, -0.0009336879593320191, -0.0013952055014669895, -0.01689177379012108, -0.005699336528778076, -9.297892393078655e-05, -0.00037925204378552735, -0.0023029730655252934, -0.00012814177898690104, -0.24672919511795044, -0.40949562191963196, -0.11617819964885712, -0.23113271594047546, -0.023975098505616188, -0.012556190602481365, -0.0010824303608387709, -0.00022230061586014926, -0.0002790300059132278, -0.0014428215799853206, -0.004160440061241388, -1.2149319648742676, -2.9782631397247314, -0.002074948512017727, -0.010320745408535004, -0.07819689065217972, -0.24277037382125854, -0.012414325028657913, -0.24827289581298828, -0.013922595418989658, -0.15595422685146332, -7.366862701019272e-05, -1.4185804502631072e-05, -5.8412379075889476e-06, -1.4662635294371285e-05, -0.0676712840795517, -0.0614425390958786, -0.015052776783704758, -0.008684721775352955, -0.14370059967041016, -0.0019349202048033476, -2.406031608581543, -0.2984728515148163], "finish_reason": "length"}], "metrics": {"energy": 353.67724913787833, "energy_per_token": 1.3815517544448372, "time": 12.520651, "time_per_token": 0.04890879296875}}
{"outputs": [{"text": "# raise ValueError for negative or not an integer values\n    if (\n        isinstance(k, float)\n        or isinstance(k, int)\n        or k < 0\n        or k % 1 != 0\n    ):\n        raise ValueError(\n            f\"k must be a non-negative integer, but got {k}\"\n        )\n\n    # find distances to all the points in the dataframe\n    distances = []\n    for point in data[\"Latitude\"].to_list(), data[\"Longitude\"].to_list():\n        d = round(\n            2 * math.pi * 6371 * math.asin(\n                math.sqrt(math.pow(target[0] - point[0], 2) + math.pow(target[1] - point[1], 2))\n            ),\n            3,\n        )\n        distances.append(d)\n\n    # sort distances in ascending order\n    distances = np.argsort(distances)\n\n    # return the top k nearest neighbors\n    return distances[:k", "tokens": ["#", " raise", " Value", "Error", " for", " negative", " or", " not", " an", " integer", " values", "\n", "    ", "if", " (", "\n", "        ", "is", "instance", "(", "k", ",", " float", ")", "\n", "        ", "or", " isinstance", "(", "k", ",", " int", ")", "\n", "        ", "or", " k", " <", " ", "0", "\n", "        ", "or", " k", " %", " ", "1", " ", "!", "=", " ", "0", "\n", "    ", "):", "\n", "        ", "raise", " Value", "Error", "(", "\n", "            ", "f", "\"", "k", " must", " be", " a", " non", "-", "negative", " integer", ",", " but", " got", " {", "k", "}\"", "\n", "        ", ")", "\n", "\n", "    ", "#", " find", " distances", " to", " all", " the", " points", " in", " the", " data", "frame", "\n", "    ", "dist", "ances", " =", " []", "\n", "    ", "for", " point", " in", " data", "[", "\"", "Lat", "itude", "\"", "]", ".", "to", "_", "list", "()", ",", " data", "[", "\"", "Long", "itude", "\"", "]", ".", "to", "_", "list", "():", "\n", "        ", "d", " =", " round", "(", "\n", "            ", "2", " *", " math", ".", "pi", " *", " ", "6", "3", "7", "1", " *", " math", ".", "as", "in", "(", "\n", "                ", "math", ".", "sqrt", "(", "math", ".", "pow", "(", "target", "[", "0", "]", " -", " point", "[", "0", "]", ",", " ", "2", ")", " +", " math", ".", "pow", "(", "target", "[", "1", "]", " -", " point", "[", "1", "]", ",", " ", "2", "))", "\n", "            ", ")", ",", "\n", "            ", "3", ",", "\n", "        ", ")", "\n", "        ", "dist", "ances", ".", "append", "(", "d", ")", "\n", "\n", "    ", "#", " sort", " distances", " in", " ascending", " order", "\n", "    ", "dist", "ances", " =", " np", ".", "args", "ort", "(", "dist", "ances", ")", "\n", "\n", "    ", "#", " return", " the", " top", " k", " nearest", " neighbors", "\n", "    ", "return", " distances", "[:", "k"], "logprobs": [-1.50576651096344, -4.21705961227417, -1.7871919870376587, -0.0052368370816111565, -3.185060501098633, -1.448479413986206, -3.3778724670410156, -1.0199780464172363, -1.5732884407043457, -0.13525551557540894, -3.397871494293213, -1.0510951280593872, -0.013719546608626842, -0.18187794089317322, -2.9959659576416016, -3.836073637008667, -0.046477168798446655, -2.3848540782928467, -0.0014221088495105505, -0.0002727136597968638, -0.12998388707637787, -0.0004822045157197863, -2.3393068313598633, -0.0015643513761460781, -0.3914411962032318, -0.0026120375841856003, -0.0331774540245533, -1.0949474573135376, -0.00020930961181875318, -0.09383904933929443, -0.00045015214709565043, -0.7814156413078308, -0.0004602803383022547, -0.011372975073754787, -0.008166257292032242, -0.23097574710845947, -1.5341134071350098, -0.39393267035484314, -0.013460355810821056, -0.07884226739406586, -0.01674266718327999, -0.16318538784980774, -0.017965801060199738, -2.382265567779541, -1.142972707748413, -0.01903586834669113, -0.005015648435801268, -0.11276036500930786, -1.9073468138230965e-06, -2.4914430468925275e-05, -0.0007363230688497424, -5.2569914259947836e-05, -0.07191719859838486, -0.0862676203250885, -0.03081500716507435, -0.04472876712679863, -0.0039049338083714247, -0.04748011752963066, -0.009254653006792068, -1.1205610462639015e-05, -0.2779766023159027, -1.6677253246307373, -0.0013563965912908316, -1.2987146377563477, -0.06039762124419212, -1.2774884700775146, -0.9854267239570618, -0.021640948951244354, -0.41256657242774963, -0.10536646097898483, -0.013149685226380825, -0.0067933788523077965, -0.041414812207221985, -0.711123526096344, -1.2435519695281982, -1.392364263534546, -0.25089070200920105, -0.09819091111421585, -2.2439749240875244, -0.12020159512758255, -0.021484149619936943, -9.572047565598041e-05, -0.006294426042586565, -0.3811900019645691, -0.0011451836908236146, -0.3929212987422943, -3.8067755699157715, -2.5442795753479004, -1.7489112615585327, -2.5889971256256104, -2.636037588119507, -0.8311812281608582, -1.2802072763442993, -0.5457950830459595, -0.941929042339325, -2.125917434692383, -0.41110959649086, -0.009277683682739735, -0.5466894507408142, -0.11514168977737427, -0.05025225877761841, -0.8670126795768738, -0.008367125876247883, -0.07167832553386688, -0.06150979921221733, -1.3954579830169678, -0.012196484953165054, -0.015012498013675213, -2.4646782875061035, -0.4777567684650421, -0.11827321350574493, -0.004081254359334707, -0.03959886357188225, -0.7118097543716431, -0.44427838921546936, -1.3162126541137695, -0.0001225396408699453, -0.5107035636901855, -0.8511837124824524, -0.05486470088362694, -0.0033457274548709393, -0.004943647887557745, -0.001978227635845542, -0.00029690624796785414, -9.452849917579442e-05, -1.8000440832111053e-05, -0.0004968600696884096, -3.7431014789035544e-05, -0.0006361367995850742, -0.0006256530177779496, -0.0005283151986077428, -0.00141258561052382, -0.006539492402225733, -0.006799417547881603, -3.2472171783447266, -0.26745569705963135, -3.695359230041504, -0.0884837880730629, -0.44211825728416443, -0.0018829250475391746, -1.6993623971939087, -0.25555330514907837, -0.2495121955871582, -1.5735502529423684e-05, -0.27293846011161804, -0.4092366695404053, -1.1660804748535156, -0.02308959700167179, -0.005234820768237114, -0.0027335442136973143, -0.0034224765840917826, -0.45106008648872375, -0.27708858251571655, -0.00018106251081917435, -2.054821252822876, -3.93382906622719e-05, -0.025738641619682312, -0.3005615770816803, -0.0015328098088502884, -0.1547149270772934, -1.4185804502631072e-05, -0.09479616582393646, -0.1523779034614563, -2.782947540283203, -3.3378546504536644e-06, -0.15838772058486938, -0.24512535333633423, -2.251649856567383, -0.0005060345865786076, -0.039652831852436066, -0.006485604215413332, -0.007590618450194597, -0.01133832335472107, -0.00026794656878337264, -0.0024806461296975613, -0.004515332635492086, -0.0020009512081742287, -0.00102324562612921, -0.0002723561483435333, -0.024769578129053116, -0.09995473921298981, -0.07924320548772812, -0.003336816793307662, -0.004062733147293329, -0.004061901941895485, -0.01747274398803711, -0.0001699779968475923, -0.003815277712419629, -0.0038254905957728624, -0.006118732504546642, -0.0036073154769837856, -0.00040284625720232725, -0.006418921053409576, -0.002816759515553713, -0.0007914748275652528, -0.003443385474383831, -7.426462980220094e-05, -0.021150168031454086, -0.0735960379242897, -0.04426880553364754, -0.005585894919931889, -0.4109625220298767, -0.03731540963053703, -0.024910399690270424, -1.9334455728530884, -0.8573906421661377, -0.009425308555364609, -0.007598781492561102, -0.00011872540198964998, -0.029311412945389748, -0.043410688638687134, -0.05447598919272423, -0.00027998341829515994, -0.005354942288249731, -0.001785828499123454, -0.04569508880376816, -0.02343236468732357, -0.002160240663215518, -0.004519130103290081, -0.25351080298423767, -0.00139246741309762, -0.2160113900899887, -0.7202588319778442, -1.1630686521530151, -1.1162406206130981, -0.09401746094226837, -0.014849722385406494, -0.2539515495300293, -0.0015135272406041622, -0.4083443284034729, -0.0050804088823497295, -0.5229236483573914, -1.768646240234375, -1.9430925021879375e-05, -1.8774635791778564, -0.0005504761938937008, -0.003333489876240492, -0.07454295456409454, -0.00010597144137136638, -0.10835745930671692, -0.4992295503616333, -0.28443628549575806, -0.0002022777043748647, -0.1273420751094818, -0.652712345123291, -0.5590550303459167, -2.1654648780822754, -0.44941824674606323, -1.2739115953445435, -0.24706771969795227, -0.256638765335083, -0.0030651751440018415, -0.18429811298847198, -1.9462140798568726, -0.15966281294822693, -0.18345969915390015], "finish_reason": "length"}], "metrics": {"energy": 369.17765356254586, "energy_per_token": 1.4421002092286948, "time": 12.751813, "time_per_token": 0.04981176953125}}
{"outputs": [{"text": "# check if k is a valid integer\n    if not isinstance(k, int) or k < 0:\n        raise ValueError(\"'k' must be a non-negative integer\")\n\n    # get the list of data points in the data frame\n    points = list(data.values)\n\n    # get the target data point coordinates\n    latitude, longitude = target\n\n    # calculate the Euclidean distance of each data point to the target point\n    distances = [math.sqrt((point[0] - latitude) ** 2 + (point[1] - longitude) ** 2) for point in points]\n\n    # sort the points based on distance in ascending order\n    sorted_points = sorted(list(zip(points, distances)), key=lambda x: x[1])\n\n    # return the k nearest neighbors as a list of coordinates\n    return [point for point, _ in sorted_points[:k]]", "tokens": ["#", " check", " if", " k", " is", " a", " valid", " integer", "\n", "    ", "if", " not", " isinstance", "(", "k", ",", " int", ")", " or", " k", " <", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "'", "k", "'", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n", "\n", "    ", "#", " get", " the", " list", " of", " data", " points", " in", " the", " data", " frame", "\n", "    ", "points", " =", " list", "(", "data", ".", "values", ")", "\n", "\n", "    ", "#", " get", " the", " target", " data", " point", " coordinates", "\n", "    ", "lat", "itude", ",", " long", "itude", " =", " target", "\n", "\n", "    ", "#", " calculate", " the", " Euclidean", " distance", " of", " each", " data", " point", " to", " the", " target", " point", "\n", "    ", "dist", "ances", " =", " [", "math", ".", "sqrt", "((", "point", "[", "0", "]", " -", " latitude", ")", " **", " ", "2", " +", " (", "point", "[", "1", "]", " -", " long", "itude", ")", " **", " ", "2", ")", " for", " point", " in", " points", "]", "\n", "\n", "    ", "#", " sort", " the", " points", " based", " on", " distance", " in", " ascending", " order", "\n", "    ", "s", "orted", "_", "points", " =", " sorted", "(", "list", "(", "zip", "(", "points", ",", " distances", "))", ",", " key", "=", "lambda", " x", ":", " x", "[", "1", "])", "\n", "\n", "    ", "#", " return", " the", " k", " nearest", " neighbors", " as", " a", " list", " of", " coordinates", "\n", "    ", "return", " [", "point", " for", " point", ",", " _", " in", " sorted", "_", "points", "[:", "k", "]]", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.50576651096344, -2.341902256011963, -1.143540859222412, -0.2880820333957672, -0.018389448523521423, -0.4780869483947754, -2.9618661403656006, -0.5060543417930603, -0.14269039034843445, -0.0030440206173807383, -0.07282480597496033, -0.20979158580303192, -0.04710262268781662, -0.00041976699139922857, -0.0017219253350049257, -0.0006163604557514191, -0.01712382771074772, -0.6766148805618286, -0.01729748025536537, -0.02863696590065956, -0.04050593450665474, -0.00404017511755228, -0.10283997654914856, -0.0071571627631783485, -0.0025393879041075706, -0.0023430532310158014, -0.017688969150185585, -0.006475063040852547, -6.198863957251888e-06, -0.29144182801246643, -0.0833565816283226, -1.1253137588500977, -0.0020778034813702106, -0.0013523490633815527, -0.08503660559654236, -0.0016623024130240083, -0.03991081938147545, -0.041163962334394455, -0.0004037995240651071, -0.0006040894077159464, -0.00197001826018095, -0.608158528804779, -0.00012766500003635883, -0.00199167151004076, -0.1878919005393982, -0.0013293724041432142, -0.12681569159030914, -2.7959694862365723, -0.886664092540741, -4.084719657897949, -0.01856791414320469, -2.5515270233154297, -0.24934053421020508, -1.8407511711120605, -1.0082013607025146, -2.1164445877075195, -1.8061562776565552, -0.2702470123767853, -0.0034420788288116455, -1.8187732696533203, -0.09360850602388382, -1.090545415878296, -0.003834159579128027, -0.0570962056517601, -0.26902705430984497, -0.9055031538009644, -0.09314670413732529, -0.018784135580062866, -0.1007465124130249, -0.0012557962909340858, -0.050787318497896194, -1.8474100828170776, -0.19408661127090454, -2.0617101192474365, -1.091629981994629, -0.07742676883935928, -2.92187762260437, -0.23742778599262238, -0.0007420408655889332, -1.6052007675170898, -1.3750381469726562, -0.6534969210624695, -0.002379921032115817, -0.0027159492019563913, -0.0012193633010610938, -0.03154666721820831, -0.11989689618349075, -0.06649701297283173, -0.0006799769471399486, -0.04546592757105827, -0.8410466909408569, -0.24011348187923431, -2.127119779586792, -0.06818296760320663, -2.2708940505981445, -0.6258966326713562, -0.619125247001648, -0.004847085103392601, -2.9433047771453857, -0.006512726657092571, -0.004030914045870304, -0.8469021916389465, -0.0523715578019619, -0.0016262413701042533, -0.039543405175209045, -0.0077615585178136826, -0.0036618339363485575, -1.1297338008880615, -0.5468881130218506, -6.09140915912576e-05, -0.5605840086936951, -0.08111537992954254, -1.3271363973617554, -0.015187105163931847, -0.033145856112241745, -0.08619248867034912, -0.0006713996990583837, -0.0020123724825680256, -0.3224245607852936, -0.0035070599988102913, -0.0010220548138022423, -7.986990567587782e-06, -0.003213244490325451, -0.006995471194386482, -0.00021491125517059118, -0.00020489977032411844, -0.00041345154750160873, -0.0004970983718521893, -0.0006895071710459888, -0.0023310412652790546, -7.676783570786938e-05, -0.005770097486674786, -0.0005740663618780673, -0.0016300498973578215, -9.894321920000948e-06, -0.011968939565122128, -0.17175278067588806, -0.0015563768101856112, -0.00018130090029444546, -0.0036562515888363123, -0.0008027906878851354, -0.0006773561472073197, -0.033376362174749374, -0.00018070495571009815, -0.005681437905877829, -0.0419297032058239, -0.03362755849957466, -2.3358371257781982, -1.9175031185150146, -0.00036793138133361936, -2.7588133811950684, -3.115407943725586, -0.011821100488305092, -0.00012516192509792745, -0.055463504046201706, -0.000841025379486382, -0.13194960355758667, -0.000285584683297202, -0.00024875884992070496, -0.0810619592666626, -0.002009755000472069, -0.4950653612613678, -0.002189026679843664, -2.9126663208007812, -0.000774917658418417, -0.14192534983158112, -0.001978227635845542, -0.5851030945777893, -0.001408895361237228, -0.0017565549351274967, -0.011791530065238476, -0.0003070359816774726, -0.00014911970356479287, -0.002688842825591564, -0.000837571220472455, -0.059037234634160995, -0.0001811817055568099, -0.003964779432862997, -0.00316226645372808, -0.00039307496626861393, -0.0007879013428464532, -0.030507948249578476, -0.02171887271106243, -0.00018690270371735096, -0.014992651529610157, -0.37245938181877136, -0.05854974314570427, -1.6488407850265503, -0.27246183156967163, -0.5018060207366943, -1.9425439834594727, -0.2871007025241852, -0.01619810238480568, -0.6059712767601013, -1.4372613430023193, -0.0773676335811615, -0.0007198841194622219, -0.09807150065898895, -0.5022128224372864, -0.1104445680975914, -1.009473204612732, -0.04697933793067932, -0.0608835406601429, -0.44051891565322876, -0.002344718435779214, -0.004289948847144842, -0.0006752118351869285, -1.0132738680113107e-05, -0.0725923553109169, -0.004491360858082771, -0.014709005132317543, -1.3636579513549805, -5.960462772236497e-07, -7.152555099310121e-07, -0.00011979816190432757, -0.00023457636416424066, -0.185517355799675], "finish_reason": "stop"}], "metrics": {"energy": 335.1045018730165, "energy_per_token": 1.5442603772950068, "time": 10.631289, "time_per_token": 0.048992115207373274}}
{"outputs": [{"text": "data.columns = ['Latitude', 'Longitude']\n    radius = 6371\n    data['Latitude'] = np.radians(data['Latitude'])\n    data['Longitude'] = np.radians(data['Longitude'])\n    target = np.radians(target)\n\n    dists = (\n        np.sum(\n            (target - np.array([\n                data['Latitude'],\n                data['Longitude']\n            ])) ** 2,\n            axis=1\n        ) ** 0.5\n    )\n\n    dists_sort = np.argsort(dists)\n    k = min(k, len(dists))\n    return [\n        np.array([\n            data['Latitude'].iloc[dists_sort[i]],\n            data['Longitude'].iloc[dists_sort[i]]\n        ]).tolist()\n        for i in range(k)\n    ]", "tokens": ["data", ".", "columns", " =", " ['", "Lat", "itude", "'", ",", " '", "Long", "itude", "']", "\n", "    ", "radius", " =", " ", "6", "3", "7", "1", "\n", "    ", "data", "['", "Lat", "itude", "']", " =", " np", ".", "rad", "ians", "(", "data", "['", "Lat", "itude", "'])", "\n", "    ", "data", "['", "Long", "itude", "']", " =", " np", ".", "rad", "ians", "(", "data", "['", "Long", "itude", "'])", "\n", "    ", "target", " =", " np", ".", "rad", "ians", "(", "target", ")", "\n", "\n", "    ", "d", "ists", " =", " (", "\n", "        ", "np", ".", "sum", "(", "\n", "            ", "(", "target", " -", " np", ".", "array", "([", "\n", "                ", "data", "['", "Lat", "itude", "']", ",", "\n", "                ", "data", "['", "Long", "itude", "']", "\n", "            ", "]))", " **", " ", "2", ",", "\n", "            ", "axis", "=", "1", "\n", "        ", ")", " **", " ", "0", ".", "5", "\n", "    ", ")", "\n", "\n", "    ", "d", "ists", "_", "sort", " =", " np", ".", "args", "ort", "(", "d", "ists", ")", "\n", "    ", "k", " =", " min", "(", "k", ",", " len", "(", "d", "ists", "))", "\n", "    ", "return", " [", "\n", "        ", "np", ".", "array", "([", "\n", "            ", "data", "['", "Lat", "itude", "']", ".", "il", "oc", "[", "d", "ists", "_", "sort", "[", "i", "]]", ",", "\n", "            ", "data", "['", "Long", "itude", "']", ".", "il", "oc", "[", "d", "ists", "_", "sort", "[", "i", "]]", "\n", "        ", "])", ".", "tol", "ist", "()", "\n", "        ", "for", " i", " in", " range", "(", "k", ")", "\n", "    ", "]<", "|", "end", "of", "text", "|>"], "logprobs": [-3.3371758460998535, -2.1995394229888916, -2.628507137298584, -0.044984083622694016, -0.10647542029619217, -0.12395994365215302, -0.0562528595328331, -0.00571984238922596, -0.0002108589978888631, -0.028541505336761475, -0.000655793643090874, -0.0003256267518736422, -0.0022319662384688854, -0.02877805382013321, -0.2016262710094452, -3.3357229232788086, -0.28891587257385254, -0.031321633607149124, -0.009087983518838882, -0.003253644797950983, -0.0016569469589740038, -0.003214908065274358, -1.0392025709152222, -0.37061646580696106, -3.0675435066223145, -0.655247688293457, -2.6897292137145996, -0.21568314731121063, -0.47517725825309753, -0.07577557116746902, -0.9283542037010193, -3.6954195820726454e-05, -0.2761448919773102, -0.005449203308671713, -0.005689023993909359, -0.009486950002610683, -0.06151282787322998, -0.0006020640721544623, -2.9801878554280847e-05, -0.027240071445703506, -0.008344073779881, -0.0010587330907583237, -0.02264847606420517, -0.0026018121279776096, -0.018245482817292213, -0.0007869484252296388, -0.00040082051418721676, -0.004272143822163343, -0.0006325627909973264, -0.00015925093612167984, -0.00022075122979003936, -1.9430925021879375e-05, -0.0006206493126228452, -0.00042632073746062815, -0.0005585778853856027, -0.00015472168161068112, -7.033100700937212e-05, -0.0008627030183561146, -0.00042822727118618786, -0.12752006947994232, -0.3471416234970093, -0.6875544786453247, -0.05484833940863609, -0.0002337421028641984, -0.02871214598417282, -1.0251946150674485e-05, -0.027620382606983185, -0.012536413036286831, -0.032367587089538574, -0.0059514218010008335, -1.4481278657913208, -0.0007702721050009131, -3.694608688354492, -0.21415138244628906, -0.04251973330974579, -2.9656336307525635, -1.866175889968872, -0.04356454685330391, -1.5128593444824219, -1.549708758830093e-05, -2.1678435802459717, -1.657723307609558, -0.25912246108055115, -0.011753947474062443, -0.251833975315094, -1.3138766288757324, -0.8396303653717041, -1.3437104225158691, -0.0029569019097834826, -0.26309242844581604, -0.2693515717983246, -2.26986026763916, -0.008626221679151058, -0.8025725483894348, -0.0951744019985199, -0.1209932416677475, -9.059865078597795e-06, -0.03172014281153679, -0.09398176521062851, -0.5872127413749695, -0.006411340553313494, -0.07498389482498169, -0.003513237228617072, -0.0007219092221930623, -4.6491513785440475e-06, -0.006252252962440252, -0.5369328260421753, -0.020551593974232674, -0.37085220217704773, -0.3021033704280853, -0.0012742503313347697, -3.635817120084539e-05, -0.016637273132801056, -0.3552316427230835, -0.022123325616121292, -0.005351148080080748, -0.04155891388654709, -0.0037566106766462326, -0.22569556534290314, -0.003356063971295953, -0.027426939457654953, -1.583061695098877, -0.2636021375656128, -0.1604040563106537, -2.169585604860913e-05, -0.00010549465514486656, -0.04521050676703453, -0.014458647929131985, -0.003417368046939373, -0.07021830976009369, -0.7083896398544312, -0.00017188502533826977, -2.811248779296875, -0.012001213617622852, -1.5634517669677734, -1.8365281820297241, -0.13441161811351776, -0.550721287727356, -2.586808113846928e-05, -0.18551765382289886, -0.0007413261337205768, -0.001321038813330233, -0.013253684155642986, -4.0531076592742465e-06, -0.06149321049451828, -0.459026038646698, -0.7710897326469421, -2.339573860168457, -1.2429170608520508, -0.5033156275749207, -0.015464043244719505, -0.2076272964477539, -0.004177890717983246, -0.21618686616420746, -7.390703103737906e-05, -0.14994437992572784, -3.85038583772257e-05, -0.42162466049194336, -0.017537640407681465, -0.4571264386177063, -0.821323812007904, -1.0698730945587158, -0.6368576288223267, -0.005777446087449789, -2.920201539993286, -9.452849917579442e-05, -0.4282664358615875, -0.22556914389133453, -0.10301043838262558, -0.007752568926662207, -0.4096134901046753, -0.3788156509399414, -0.0058396682143211365, -2.0265373677830212e-05, -1.672252893447876, -0.013708258979022503, -0.2217472493648529, -9.65590606938349e-06, -0.001427584677003324, -1.9124571084976196, -0.01718616858124733, -0.004493615590035915, -0.0027305721305310726, -0.013050970621407032, -0.14446189999580383, -0.008410865440964699, -0.033003538846969604, -0.0070176078006625175, -0.000445385929197073, -0.0012326984433457255, -0.0006373281357809901, -0.00014911970356479287, -1.4305104514278355e-06, -4.589452510117553e-05, -0.00026925752172246575, -2.3007127310847864e-05, -0.0003632839070633054, -2.3364747903542593e-05, -0.0008606782066635787, -0.002624997403472662, -8.106198947643861e-06, -3.576278118089249e-07, -1.585470999998506e-05, -1.0371154530730564e-05, -0.00022551853908225894, -0.10921892523765564, -0.0021567910443991423, -0.00851275771856308, -1.6836516857147217, -0.0446731373667717, -1.0728830375228426e-06, -0.0008728270186111331, -0.3334049582481384, -0.004359029233455658, -0.002137282630428672, -9.190614218823612e-05, -0.0031966085080057383, -0.005253913346678019, -0.00056429672986269, -0.03373947739601135, -0.011672768741846085, -0.002093268558382988, -0.003755423240363598, -2.148812770843506, -3.576278118089249e-07, -1.7881377516459906e-06, -0.00013553177996072918, -0.0004042761866003275, -0.14726442098617554], "finish_reason": "stop"}], "metrics": {"energy": 319.2967703456879, "energy_per_token": 1.394309040810864, "time": 11.274956, "time_per_token": 0.04923561572052402}}
{"outputs": [{"text": "radius = 6371000\n    target_lat = target[0]\n    target_lon = target[1]\n\n    distances = []\n    for i in range(len(data)):\n        lat1 = math.radians(data.loc[i, 'Latitude'])\n        lon1 = math.radians(data.loc[i, 'Longitude'])\n        lat2 = math.radians(target_lat)\n        lon2 = math.radians(target_lon)\n        dlon = lon2 - lon1\n        dlat = lat2 - lat1\n        a = (math.sin(dlat / 2)) ** 2 + math.cos(lat1) * math.cos(lat2) * (math.sin(dlon / 2)) ** 2\n        c = 2 * math.atan2(math.sqrt(a), math.sqrt(1 - a))\n        distance = radius * c\n        distances.append(distance)\n\n    sorted_distances = np.array(distances)\n    sorted_distances = sorted_dist", "tokens": ["radius", " =", " ", "6", "3", "7", "1", "0", "0", "0", "\n", "    ", "target", "_", "lat", " =", " target", "[", "0", "]", "\n", "    ", "target", "_", "lon", " =", " target", "[", "1", "]", "\n", "\n", "    ", "dist", "ances", " =", " []", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "data", "))", ":", "\n", "        ", "lat", "1", " =", " math", ".", "rad", "ians", "(", "data", ".", "loc", "[", "i", ",", " '", "Lat", "itude", "'])", "\n", "        ", "lon", "1", " =", " math", ".", "rad", "ians", "(", "data", ".", "loc", "[", "i", ",", " '", "Long", "itude", "'])", "\n", "        ", "lat", "2", " =", " math", ".", "rad", "ians", "(", "target", "_", "lat", ")", "\n", "        ", "lon", "2", " =", " math", ".", "rad", "ians", "(", "target", "_", "lon", ")", "\n", "        ", "dl", "on", " =", " lon", "2", " -", " lon", "1", "\n", "        ", "d", "lat", " =", " lat", "2", " -", " lat", "1", "\n", "        ", "a", " =", " (", "math", ".", "sin", "(", "d", "lat", " /", " ", "2", "))", " **", " ", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " (", "math", ".", "sin", "(", "dl", "on", " /", " ", "2", "))", " **", " ", "2", "\n", "        ", "c", " =", " ", "2", " *", " math", ".", "atan", "2", "(", "math", ".", "sqrt", "(", "a", ")", ",", " math", ".", "sqrt", "(", "1", " -", " a", "))", "\n", "        ", "distance", " =", " radius", " *", " c", "\n", "        ", "dist", "ances", ".", "append", "(", "distance", ")", "\n", "\n", "    ", "s", "orted", "_", "dist", "ances", " =", " np", ".", "array", "(", "dist", "ances", ")", "\n", "    ", "s", "orted", "_", "dist", "ances", " =", " sorted", "_", "dist"], "logprobs": [-3.0299782752990723, -0.37161925435066223, -0.027289140969514847, -0.010276500135660172, -0.003946018870919943, -0.0018109364900738, -0.00402046600356698, -3.906250238418579, -0.029375892132520676, -0.020181436091661453, -0.7052678465843201, -0.26641225814819336, -3.5130438804626465, -0.3186371624469757, -0.32818683981895447, -1.3154385089874268, -0.2677166759967804, -0.0008363801171071827, -0.002174039138481021, -0.002375164069235325, -0.04292557016015053, -0.0005824061809107661, -0.0026700582820922136, -3.564294092939235e-05, -0.2624164819717407, -0.0004101150552742183, -0.000961913785431534, -0.0009837078396230936, -0.0007185738068073988, -9.083335316972807e-05, -0.00026222606538794935, -0.9941731691360474, -0.0008133916999213398, -1.7479320764541626, -0.05197768658399582, -0.014992651529610157, -0.15433292090892792, -0.022144431248307228, -0.21258914470672607, -0.06300485134124756, -1.1771317720413208, -0.2598879337310791, -0.12383387237787247, -0.0016465928638353944, -0.3263571560382843, -2.253030106658116e-05, -0.001019792165607214, -0.080983467400074, -0.00013553177996072918, -0.0022763311862945557, -0.004797020927071571, -0.2901206612586975, -0.16140252351760864, -0.12573212385177612, -0.8009958863258362, -1.2993727978027891e-05, -0.004529098514467478, -8.523101132595912e-05, -0.0031583448871970177, -0.05803074315190315, -0.6365434527397156, -2.6320455074310303, -0.0005600076401606202, -0.0010876698652282357, -0.0940399244427681, -0.0839753970503807, -0.002379921032115817, -7.510157047363464e-06, -0.005520100239664316, -0.006653654854744673, -0.00010191874753218144, -0.2888320982456207, -0.0003047717036679387, -6.639736966462806e-05, -0.0008814025786705315, -0.0005382042727433145, -3.0636318115284666e-05, -2.098061486321967e-05, -0.0001308832288486883, -0.0008681819308549166, -0.00010847456724150106, -4.207999518257566e-05, -1.5020257706055418e-05, -1.2159273865108844e-05, -4.3748852476710454e-05, -0.0005648924270644784, -8.356221951544285e-05, -1.168244216387393e-05, -0.00025102324434556067, -0.0003895000845659524, -0.022985218092799187, -0.029534121975302696, -0.0008917645900510252, -0.005054078064858913, -0.001589583931490779, -0.00016175392374861985, -0.0004968600696884096, -5.209310256759636e-05, -0.00016532962035853416, -0.0018935146508738399, -0.018070587888360023, -3.6477376852417365e-05, -0.00017689094238448888, -0.0006012300727888942, -8.928377064876258e-05, -0.0010351543314754963, -5.495397272170521e-05, -7.83174327807501e-05, -9.417090768693015e-05, -0.0001387499796692282, -3.0636318115284666e-05, -6.23445157543756e-05, -4.95898348162882e-05, -5.590759246842936e-05, -4.7205765440594405e-05, -0.00019691436318680644, -5.578839045483619e-05, -4.827859811484814e-05, -0.24689126014709473, -0.9103416204452515, -0.009492382407188416, -0.0032194233499467373, -0.4919607937335968, -0.105637326836586, -0.02695430815219879, -5.113947918289341e-05, -5.2689116273541003e-05, -0.0016383809270337224, -0.0006784282741136849, -0.08431665599346161, -0.013595016673207283, -0.00025674383505247533, -0.023752428591251373, -0.00025102324434556067, -0.0007172634359449148, -0.00016640232934150845, -0.0001530530134914443, -0.00017331528943032026, -0.07307415455579758, -0.3167175054550171, -0.0019518149783834815, -1.5552406311035156, -0.16296786069869995, -5.960462772236497e-07, -0.017760878428816795, -0.00035363141796551645, -0.002110398607328534, -2.682172998902388e-05, -0.28114038705825806, -0.0008556757238693535, -3.838465272565372e-05, -0.8503288626670837, -0.13664965331554413, -0.003993394784629345, -5.3165931603871286e-05, -0.004556748550385237, -0.4711895287036896, -5.876845170860179e-05, -0.002325689420104027, -0.00024971229140646756, -0.003144441172480583, -0.30205395817756653, -0.00032491172896698117, -0.0012206730898469687, -0.017206674441695213, -0.00029690624796785414, -0.001383420079946518, -5.972207145532593e-05, -0.006146101746708155, -0.00015841660206206143, -0.0006188622792251408, -0.004227986093610525, -0.027484118938446045, -0.007355039939284325, -4.291525328881107e-06, -3.0874729418428615e-05, -0.0005021026590839028, -0.00033063191222026944, -0.00023409964342135936, -0.001994169782847166, -0.0004650464979931712, -2.2172682292875834e-05, -0.0043354094959795475, -0.00346666993573308, -0.0019812018144875765, -1.0371154530730564e-05, -0.0014968630857765675, -0.0079988157376647, -0.3282691538333893, -0.00031513971043750644, -0.0011968599865213037, -0.0004844683862756938, -8.630380034446716e-05, -0.01166935171931982, -2.0265558760002023e-06, -0.3502393662929535, -0.004610978066921234, -0.0041683935560286045, -0.1993829756975174, -8.344646857949556e-07, -0.0001397035230183974, -0.00012420836719684303, -0.00011705666838679463, -0.0001720042055239901, -0.00016652150952722877, -0.0015457835979759693, -0.0005706112715415657, -7.486063259420916e-05, -0.0007682471186853945, -0.04080982506275177, -0.017679015174508095, -0.0017310886178165674, -0.00019464982324279845, -0.0008197046699933708, -0.004968913737684488, -0.4005287289619446, -0.016037631779909134, -0.09065727889537811, -0.001127441762946546, -0.0006430465145967901, -0.02293151058256626, -0.015042794868350029, -0.02666173130273819, -0.0006965356878936291, -0.0003967689990531653, -0.00033563701435923576, -0.46824175119400024, -0.042208705097436905, -0.0049077048897743225, -0.0015437601832672954, -0.17144210636615753, -0.0011610202491283417, -0.9404545426368713, -0.00195443257689476, -0.0010131231974810362, -0.4772092401981354, -0.005051705986261368, -0.012992254458367825, -1.1893304586410522, -5.245195097813848e-06, -1.3150136470794678, -0.005530295893549919, -0.03420361503958702, -1.3828182090946939e-05, -0.019109318032860756, -1.3457496166229248, -0.00652279332280159, -0.13015669584274292, -4.8874615458771586e-05, -4.6132929128361866e-05, -0.03154736012220383, -0.00015364897262770683, -0.596910834312439, -0.39546945691108704, -0.06612975895404816, -5.245195097813848e-06], "finish_reason": "length"}], "metrics": {"energy": 386.5857825908661, "energy_per_token": 1.5101007132455706, "time": 12.729084, "time_per_token": 0.049722984375}}
{"outputs": [{"text": "if not isinstance(k, int) or k < 0:\n        raise ValueError(f\"k must be non-negative integer. Got {k}.\")\n\n    lat, lng = target\n    distances = []\n    for i, row in data.iterrows():\n        lat_diff = lat - row['Latitude']\n        lng_diff = lng - row['Longitude']\n        distance = math.sqrt(lat_diff ** 2 + lng_diff ** 2)\n        distances.append((distance, i, row['Latitude'], row['Longitude']))\n    distances.sort(key=lambda x: x[0])\n\n    nearest_k_data = [data.iloc[i] for d, i, _, _ in distances[:k]]\n    nearest_k_data.sort(key=lambda x: (x['Latitude'], x['Longitude']))\n\n    return nearest_k_data", "tokens": ["if", " not", " isinstance", "(", "k", ",", " int", ")", " or", " k", " <", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "k", " must", " be", " non", "-", "negative", " integer", ".", " Got", " {", "k", "}", ".", "\"", ")", "\n", "\n", "    ", "lat", ",", " l", "ng", " =", " target", "\n", "    ", "dist", "ances", " =", " []", "\n", "    ", "for", " i", ",", " row", " in", " data", ".", "iter", "rows", "():", "\n", "        ", "lat", "_", "diff", " =", " lat", " -", " row", "['", "Lat", "itude", "']", "\n", "        ", "l", "ng", "_", "diff", " =", " l", "ng", " -", " row", "['", "Long", "itude", "']", "\n", "        ", "distance", " =", " math", ".", "sqrt", "(", "lat", "_", "diff", " **", " ", "2", " +", " l", "ng", "_", "diff", " **", " ", "2", ")", "\n", "        ", "dist", "ances", ".", "append", "((", "distance", ",", " i", ",", " row", "['", "Lat", "itude", "']", ",", " row", "['", "Long", "itude", "']))", "\n", "    ", "dist", "ances", ".", "sort", "(", "key", "=", "lambda", " x", ":", " x", "[", "0", "])", "\n", "\n", "    ", "ne", "arest", "_", "k", "_", "data", " =", " [", "data", ".", "il", "oc", "[", "i", "]", " for", " d", ",", " i", ",", " _", ",", " _", " in", " distances", "[:", "k", "]]", "\n", "    ", "ne", "arest", "_", "k", "_", "data", ".", "sort", "(", "key", "=", "lambda", " x", ":", " (", "x", "['", "Lat", "itude", "']", ",", " x", "['", "Long", "itude", "']))", "\n", "\n", "    ", "return", " nearest", "_", "k", "_", "data", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-1.220100998878479, -0.38665109872817993, -0.11872545629739761, -0.0007759897271171212, -0.06379499286413193, -0.0007659838884137571, -0.029085297137498856, -0.681097686290741, -0.03330153226852417, -0.03528660535812378, -0.04995712265372276, -0.00404017511755228, -0.11681204289197922, -0.012484495528042316, -0.016064027324318886, -0.0047830212861299515, -0.01861986704170704, -0.008762125857174397, -1.811964830267243e-05, -0.25085386633872986, -2.0655765533447266, -0.18673203885555267, -0.7171288132667542, -0.2480657696723938, -0.005047198850661516, -2.780865430831909, -0.014538660645484924, -0.0031733177602291107, -0.08041109144687653, -2.4048962593078613, -1.0366318225860596, -0.4761773347854614, -0.14932863414287567, -0.43895113468170166, -1.072035312652588, -0.007997159846127033, -0.00027366707217879593, -0.004966185428202152, -0.5314326286315918, -0.0011972171487286687, -3.067704916000366, -2.420835256576538, -2.1495299339294434, -0.003144797869026661, -0.0048093595542013645, -0.48489513993263245, -0.15417343378067017, -0.39122718572616577, -1.7653166055679321, -0.09269426017999649, -0.026222646236419678, -0.24873481690883636, -0.03402595967054367, -0.6032542586326599, -0.2126135230064392, -1.412955403327942, -0.8163294196128845, -0.6663161516189575, -0.0009572691051289439, -0.009143976494669914, -0.0030110995285212994, -0.0069823311641812325, -0.010417843237519264, -3.480850500636734e-05, -0.005845594219863415, -0.003096311818808317, -0.4965329170227051, -1.061516284942627, -1.0438348054885864, -0.05645309016108513, -2.234279155731201, -0.011747702956199646, -0.03895792365074158, -0.20911045372486115, -0.008408027701079845, -0.00017736769223120064, -0.00024053541710600257, -0.014610091224312782, -0.00023910524032544345, -0.007796452846378088, -8.856858039507642e-05, -4.565611743601039e-05, -0.00032240914879366755, -0.000346362212439999, -0.004682053346186876, -0.00015948931104503572, -0.00031120702624320984, -0.00012861855793744326, -0.0012390087358653545, -9.536288416711614e-05, -2.90866428258596e-05, -2.8371408916427754e-05, -0.004605994094163179, -0.0919102132320404, -0.6835576295852661, -0.04063986614346504, -0.4407278597354889, -1.2993727978027891e-05, -0.1416923850774765, -0.1662684679031372, -0.09385435283184052, -0.00026890001026913524, -2.264974000354414e-06, -0.7871719002723694, -0.001965973060578108, -3.015949550899677e-05, -0.001531976624391973, -0.0022430280223488808, -3.2305197237292305e-05, -2.3483953555114567e-05, -9.059865078597795e-06, -0.0025988395791500807, -0.0026505598798394203, -4.8397800128441304e-05, -0.006008419673889875, -0.6989607810974121, -0.007517974823713303, -0.04105653241276741, -0.00016008525562938303, -0.0005267662927508354, -0.0004505096294451505, -0.9559546113014221, -1.2189968824386597, -0.0035217900294810534, -1.3459991216659546, -1.6195087432861328, -0.03939168155193329, -1.0653809309005737, -0.08890804648399353, -2.0265373677830212e-05, -0.012571611441671848, -0.00052426423644647, -0.0010062160436064005, -0.00069165148306638, -7.998623186722398e-05, -5.602820692729438e-06, -0.011774447746574879, -0.005826986860483885, -0.7519021034240723, -0.07481953501701355, -0.0003693613689392805, -0.07641389220952988, -7.116541382856667e-05, -0.7905635237693787, -0.008310144767165184, -0.002485878299921751, -0.0019397982396185398, -0.03913470357656479, -0.0003510097449179739, -0.03833894059062004, -0.0003067976504098624, -0.003954092971980572, -0.005298262927681208, -0.035728976130485535, -1.460256814956665, -0.00013124081306159496, -0.8084345459938049, -0.17166513204574585, -0.24992136657238007, -1.580036997795105, -1.768664002418518, -3.327852725982666, -0.01802387461066246, -0.9045732021331787, -0.588633120059967, -0.038780536502599716, -0.2030520886182785, -1.07287787614041e-05, -0.005875933449715376, -0.5000194907188416, -0.8741073608398438, -0.09985430538654327, -2.7253599166870117, -0.03766516223549843, -0.11476784944534302, -0.028772493824362755, -0.3505648374557495, -0.003113187151029706, -0.0057520815171301365, -0.004099775105714798, -0.0012821081327274442, -0.04338911548256874, -0.005011615343391895, -0.009240479208528996, -0.003889615647494793, -0.4799235165119171, -1.0348024368286133, -0.017314352095127106, -0.006912839598953724, -0.034987132996320724, -0.13500964641571045, -0.49381324648857117, -0.20718717575073242, -0.04243004694581032, -0.010779603384435177, -0.015227142721414566, -0.0020308124367147684, -0.004662713035941124, -0.07134471088647842, -0.0008149401983246207, -0.7928882837295532, -0.07052174210548401, -0.052698779851198196, -0.05260038748383522, -1.9192511899746023e-05, -0.0010212211636826396, -0.0049441223964095116, -0.008048128336668015, -0.00038652101648040116, -0.00013493580627255142, -1.3112935448589269e-05, -0.010185407474637032, -0.008849331177771091, -0.8120650053024292, -0.00024625606602057815, -0.2930587828159332, -0.13599206507205963, -4.7801782784517854e-05, -2.372236667724792e-05, -3.2186455882765586e-06, -2.7894584491150454e-05, -1.3193143606185913, -3.576278118089249e-07, -8.344646857949556e-07, -0.00010907054820563644, -0.0006412595394067466, -1.7939121723175049, -0.0043846662156283855], "finish_reason": "stop"}], "metrics": {"energy": 310.6618320655821, "energy_per_token": 1.3625518950244828, "time": 11.09176, "time_per_token": 0.0486480701754386}}
{"outputs": [{"text": "# Check that the k is a non-negative integer\n    if not isinstance(k, int) or k < 0:\n        raise ValueError(\"k must be a non-negative integer\")\n\n    # Check that data is a DataFrame\n    if not isinstance(data, pd.DataFrame):\n        raise TypeError(\"data must be a DataFrame\")\n\n    # Check that data has columns Latitude and Longitude\n    if not all(col in data.columns for col in ['Latitude', 'Longitude']):\n        raise ValueError(\"data must contain both 'Latitude' and 'Longitude' columns\")\n\n    # Check that target is a list of length 2\n    if not isinstance(target, list) or len(target) != 2:\n        raise ValueError(\"target must be a list of length 2\")\n\n    # Convert the data to numpy arrays\n    data_lat = np.array(data['Latitude'].values)\n    data_lon = np.array(data['Longitude'].values)\n\n    # Convert the target to a numpy array\n    target", "tokens": ["#", " Check", " that", " the", " k", " is", " a", " non", "-", "negative", " integer", "\n", "    ", "if", " not", " isinstance", "(", "k", ",", " int", ")", " or", " k", " <", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "k", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n", "\n", "    ", "#", " Check", " that", " data", " is", " a", " Data", "Frame", "\n", "    ", "if", " not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n", "        ", "raise", " Type", "Error", "(", "\"", "data", " must", " be", " a", " Data", "Frame", "\"", ")", "\n", "\n", "    ", "#", " Check", " that", " data", " has", " columns", " Lat", "itude", " and", " Long", "itude", "\n", "    ", "if", " not", " all", "(", "col", " in", " data", ".", "columns", " for", " col", " in", " ['", "Lat", "itude", "'", ",", " '", "Long", "itude", "']", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "data", " must", " contain", " both", " '", "Lat", "itude", "'", " and", " '", "Long", "itude", "'", " columns", "\"", ")", "\n", "\n", "    ", "#", " Check", " that", " target", " is", " a", " list", " of", " length", " ", "2", "\n", "    ", "if", " not", " isinstance", "(", "target", ",", " list", ")", " or", " len", "(", "target", ")", " ", "!", "=", " ", "2", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "target", " must", " be", " a", " list", " of", " length", " ", "2", "\"", ")", "\n", "\n", "    ", "#", " Convert", " the", " data", " to", " numpy", " arrays", "\n", "    ", "data", "_", "lat", " =", " np", ".", "array", "(", "data", "['", "Lat", "itude", "']", ".", "values", ")", "\n", "    ", "data", "_", "lon", " =", " np", ".", "array", "(", "data", "['", "Long", "itude", "']", ".", "values", ")", "\n", "\n", "    ", "#", " Convert", " the", " target", " to", " a", " numpy", " array", "\n", "    ", "target"], "logprobs": [-1.50576651096344, -1.5362573862075806, -1.9136970043182373, -2.904184341430664, -2.6537587642669678, -0.7112494707107544, -0.3609922528266907, -0.1494753509759903, -0.0058499788865447044, -0.002717257011681795, -0.014270985499024391, -0.16044822335243225, -0.0028810682706534863, -0.04428385943174362, -0.22366955876350403, -0.0848536267876625, -0.00037400881410576403, -0.0016512343427166343, -0.0004040378553327173, -0.024141283705830574, -0.19142064452171326, -0.005931513383984566, -0.032281599938869476, -0.016910644248127937, -0.0011984078446403146, -0.03776572272181511, -0.006156646180897951, -0.002100881887599826, -0.002223402261734009, -0.015683989971876144, -0.006508462596684694, -5.364403477869928e-06, -0.23961228132247925, -0.09973055869340897, -0.5795782208442688, -0.08187849819660187, -0.0014349650591611862, -0.05056328698992729, -0.024997137486934662, -0.0008916454971767962, -0.0005659647285938263, -0.0035405587404966354, -0.18649691343307495, -0.00013147920253686607, -0.0019076736643910408, -0.17769552767276764, -0.0012737740762531757, -0.11106061190366745, -1.6852240562438965, -0.25790560245513916, -1.5696980953216553, -1.2625224590301514, -0.33503225445747375, -0.6939921379089355, -0.004967846442013979, -0.6680747270584106, -0.000618624035269022, -0.008802303113043308, -0.012755355797708035, -0.005166512448340654, -0.00011562632425921038, -0.0002004899288294837, -0.00033718624035827816, -0.14390234649181366, -3.135155202471651e-05, -0.02951652929186821, -0.028340362012386322, -0.0005098473629914224, -0.0007606235449202359, -0.011357652954757214, -0.6596032977104187, -3.933898824470816e-06, -0.01668545790016651, -0.017234327271580696, -0.06335759162902832, -0.01187717542052269, -0.0022481423802673817, -0.009898623451590538, -0.33577340841293335, -0.003481044201180339, -0.02038118988275528, -0.00010501786891836673, -0.00033182359766215086, -0.024090196937322617, -0.0010806442005559802, -0.052849967032670975, -0.33240240812301636, -0.09378109872341156, -2.4544856548309326, -0.34301045536994934, -1.269270420074463, -1.9840739965438843, -0.002623451640829444, -0.08139289915561676, -0.002283586421981454, -0.001487578614614904, -0.025535305961966515, -0.00037150635034777224, -0.051337722688913345, -0.7015109062194824, -1.0763850212097168, -0.06248916685581207, -0.2545608580112457, -0.020034806802868843, -0.005391817539930344, -0.0031916177831590176, -0.0004758894501719624, -0.0032867954578250647, -6.3774932641536e-05, -2.5152843591058627e-05, -0.07744695991277695, -0.013992189429700375, -5.4834770708112046e-05, -0.0003430254873819649, -3.397406908334233e-05, -0.0028023754712194204, -8.284702198579907e-05, -7.009260298218578e-05, -0.0009064141195267439, -0.00014804698002990335, -0.000507464399561286, -0.0005281960475258529, -0.02501911111176014, -0.1261916309595108, -1.645074735279195e-05, -0.02527090720832348, -0.03918640315532684, -0.06665003299713135, -0.02242562733590603, -1.780131459236145, -2.665830612182617, -1.2930657863616943, -0.004339801147580147, -0.0005031750188209116, -0.00022825974156148732, -0.0007471630233339965, -0.0011829291470348835, -0.00025078488397412, -0.0002300474588992074, -0.0004881620698142797, -0.010825595818459988, -0.006084964610636234, -0.00016807096835691482, -0.0005272428970783949, -0.005632482469081879, -0.0011026738211512566, -0.07461930066347122, -1.120440125465393, -0.07524542510509491, -0.17129366099834442, -0.020774859935045242, -0.015357809141278267, -0.03103610873222351, -0.46086981892585754, -1.0788655281066895, -0.011128618381917477, -0.001353539526462555, -0.13367734849452972, -0.00012575789878610522, -0.007229832466691732, -0.2164667695760727, -0.08796142786741257, -4.660974445869215e-05, -0.0004634975048247725, -0.0003564914222806692, -0.010343988426029682, -0.008903564885258675, -0.0018185520311817527, -0.01625194028019905, -6.794906312279636e-06, -0.0003003622987307608, -4.410734163684538e-06, -0.0012188870459794998, 0.0, 0.0, -0.0005306981038302183, -0.00018034738604910672, -0.00788918323814869, -0.0004314445541240275, -0.0003301552205812186, -0.000897957943379879, -0.2923496663570404, -2.002696055569686e-05, -0.004515570122748613, -0.0029844765085726976, -0.01246824860572815, -0.008410274051129818, -0.0009126074146479368, -0.0018527023494243622, -0.013082504272460938, -0.01624443382024765, -0.03346513584256172, -0.0008405489497818053, -0.0001938155182870105, -0.10674169659614563, -7.760223525110632e-05, -0.00031728477915748954, -0.010466447100043297, -0.0015478070126846433, -0.1353975385427475, -1.4014718532562256, -1.366431713104248, -1.6510283946990967, -0.8879954814910889, -1.0583778619766235, -0.11832764744758606, -0.23533104360103607, -0.0005072260973975062, -1.3478699922561646, -0.4518156051635742, -0.3949010372161865, -0.546565592288971, -0.9253445267677307, -0.00020704510097857565, -0.20907041430473328, -0.007474551443010569, -0.005196635145694017, -0.2580292820930481, -0.0014897212386131287, -7.152555099310121e-07, -0.9867216348648071, -0.05874141678214073, -0.7181863784790039, -0.10246613621711731, -0.0164965707808733, -0.0001230164198204875, -0.0006053998949937522, -1.4662635294371285e-05, -0.08617881685495377, -7.70062324590981e-05, -5.9602869441732764e-05, -0.00017176583060063422, -0.00013433984713628888, -8.928377064876258e-05, -3.611976353568025e-05, -0.0007148809381760657, -1.2993727978027891e-05, -5.125986263010418e-06, -0.0005617947317659855, -0.12977565824985504, -0.00018690270371735096, -7.30726242181845e-05, -0.000248043768806383, -0.20617151260375977, -0.00021681819634977728, -0.02255314216017723, -0.6911947727203369, -0.19913361966609955, -0.006510831415653229, -0.31969818472862244, -1.4233605861663818, -0.03604501485824585, -0.004194747656583786, -0.028525518253445625, -0.00010322991875000298, -0.024797488003969193], "finish_reason": "length"}], "metrics": {"energy": 359.1252218017579, "energy_per_token": 1.4028328976631168, "time": 12.710421, "time_per_token": 0.04965008203125}}
{"outputs": [{"text": "if not isinstance(k, int) or k < 0:\n        raise ValueError(f'k must be a non-negative integer, but received {k}')\n\n    distances = []\n    for i in range(len(data)):\n        lat1, lon1 = data['Latitude'][i], data['Longitude'][i]\n        lat2, lon2 = target[0], target[1]\n        lat_dist = math.radians(lat2 - lat1)\n        lon_dist = math.radians(lon2 - lon1)\n        lat_sum = math.cos(lat_dist / 2) ** 2 + math.cos(math.radians(lat1)) * math.cos(math.radians(lat2)) * math.sin(lon_dist / 2) ** 2\n        dist = math.sqrt(lat_sum) * 2 * math.pi * 6371  # km\n        distances.append(dist)\n    sorted_indices = np.argsort(distances)[:k]\n    return [[data['Latitude'][i", "tokens": ["if", " not", " isinstance", "(", "k", ",", " int", ")", " or", " k", " <", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "k", " must", " be", " a", " non", "-", "negative", " integer", ",", " but", " received", " {", "k", "}", "')", "\n", "\n", "    ", "dist", "ances", " =", " []", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "data", "))", ":", "\n", "        ", "lat", "1", ",", " lon", "1", " =", " data", "['", "Lat", "itude", "'][", "i", "]", ",", " data", "['", "Long", "itude", "'][", "i", "]", "\n", "        ", "lat", "2", ",", " lon", "2", " =", " target", "[", "0", "]", ",", " target", "[", "1", "]", "\n", "        ", "lat", "_", "dist", " =", " math", ".", "rad", "ians", "(", "lat", "2", " -", " lat", "1", ")", "\n", "        ", "lon", "_", "dist", " =", " math", ".", "rad", "ians", "(", "lon", "2", " -", " lon", "1", ")", "\n", "        ", "lat", "_", "sum", " =", " math", ".", "cos", "(", "lat", "_", "dist", " /", " ", "2", ")", " **", " ", "2", " +", " math", ".", "cos", "(", "math", ".", "rad", "ians", "(", "lat", "1", "))", " *", " math", ".", "cos", "(", "math", ".", "rad", "ians", "(", "lat", "2", "))", " *", " math", ".", "sin", "(", "lon", "_", "dist", " /", " ", "2", ")", " **", " ", "2", "\n", "        ", "dist", " =", " math", ".", "sqrt", "(", "lat", "_", "sum", ")", " *", " ", "2", " *", " math", ".", "pi", " *", " ", "6", "3", "7", "1", "  ", "#", " km", "\n", "        ", "dist", "ances", ".", "append", "(", "dist", ")", "\n", "    ", "s", "orted", "_", "indices", " =", " np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n", "    ", "return", " [[", "data", "['", "Lat", "itude", "'][", "i"], "logprobs": [-1.220100998878479, -0.38665109872817993, -0.11872545629739761, -0.0007759897271171212, -0.06379499286413193, -0.0007659838884137571, -0.029085297137498856, -0.681097686290741, -0.03330153226852417, -0.03528660535812378, -0.04995712265372276, -0.00404017511755228, -0.11681204289197922, -0.012484495528042316, -0.016064027324318886, -0.0047830212861299515, -0.01861986704170704, -0.008762125857174397, -1.811964830267243e-05, -0.25085386633872986, -2.0655765533447266, -1.8570029735565186, -0.3888508975505829, -0.2857692837715149, -0.005069971550256014, -0.22527921199798584, -0.06450460106134415, -0.00359543738886714, -0.0023494756314903498, -0.01539255678653717, -0.33890998363494873, -1.4808313846588135, -1.141208291053772, -0.20555469393730164, -0.12101109325885773, -0.027100158855319023, -0.1379111111164093, -0.0027709919959306717, -0.5763615965843201, -0.0010624246206134558, -1.833603858947754, -0.06913802772760391, -0.03907199949026108, -0.2510569095611572, -0.044659342616796494, -0.255837082862854, -0.1778438240289688, -1.3910571336746216, -0.24924419820308685, -0.23904147744178772, -0.001359610934741795, -0.27666860818862915, -2.455681169521995e-05, -0.0028423171024769545, -0.06263978034257889, -9.738924563862383e-05, -0.005926298908889294, -0.004003012087196112, -0.2750251889228821, -0.20372383296489716, -0.5675201416015625, -0.1467878371477127, -0.00016342257731594145, -0.01650865003466606, -0.31330522894859314, -1.2234610319137573, -0.006753476802259684, -3.2305197237292305e-05, -0.1711689978837967, -0.001427465584129095, -0.005518914666026831, -0.006141599267721176, -0.0012543675256893039, -0.002245644573122263, -9.16677454370074e-05, -7.986990567587782e-06, -8.749579137656838e-05, -0.00012206286191940308, -5.638440416078083e-05, -0.0037327392492443323, -0.012236877344548702, -0.04880919307470322, -0.0031105726957321167, -0.004309415351599455, -0.0002236116270069033, -6.222531374078244e-05, -0.0005621521850116551, -0.023961249738931656, -0.39401426911354065, -0.0017676219576969743, -0.0016093410085886717, -0.0007651500636711717, -0.0007116645574569702, -0.00011205045302631333, -0.0002706876548472792, -2.5510462364763953e-05, -0.004531353246420622, -0.21998706459999084, -1.4616748094558716, -1.0494632720947266, -1.8555172681808472, -0.045318856835365295, -0.34745311737060547, -1.2040065485052764e-05, -0.26012930274009705, -0.0015936305280774832, -0.0317230299115181, -0.09378001093864441, -0.5032767057418823, -0.06257987022399902, -0.0008985534077510238, -0.0006781900301575661, -0.0003319427778478712, -0.014198120683431625, -0.00025233422638848424, -0.009085266850888729, -0.00015984688070602715, -0.002357919467613101, -0.00022575691400561482, -0.0009764432325027883, -0.0003175231395289302, -4.279521817807108e-05, -1.6093124941107817e-05, -0.0027900123968720436, -0.0007095203618519008, -0.0031159203499555588, -0.0014079429674893618, -9.417090768693015e-05, -7.545663538621739e-05, -9.011816291604191e-05, -0.0003518439189065248, -0.017395425587892532, -0.19363676011562347, -0.4459924101829529, -4.640885353088379, -0.10153087973594666, -0.03539903089404106, -0.0006181474891491234, -2.721129894256592, -0.012184826657176018, -0.8530187010765076, -0.1921609491109848, -0.0007241725688800216, -0.36200663447380066, -0.0020965994335711002, -0.0004661188868340105, -0.0797577053308487, -1.102557897567749, -0.0015803002752363682, -0.00011264643399044871, -2.156325578689575, -0.09612114727497101, -0.0011936451774090528, -0.09747584164142609, -0.002196639310568571, -0.04843583330512047, -1.490105023549404e-05, -9.703165414975956e-05, -8.344646857949556e-07, -0.0009623901569284499, -0.010638901963829994, -0.05133579671382904, -0.15622569620609283, -0.015589280053973198, -0.023252317681908607, -0.0001662831346038729, -0.002116941148415208, -8.892617915989831e-05, -0.7470127940177917, -0.00023195437097456306, -0.00011634149996098131, -1.1205610462639015e-05, -7.86750388215296e-05, -0.017308024689555168, -0.0009868042543530464, -0.012007691897451878, -0.00673500495031476, -0.5418796539306641, -0.0002795067266561091, -0.006375924218446016, -0.00018880968855228275, -0.03530881553888321, -1.537788011773955e-05, -2.4676019165781327e-05, -0.013144626282155514, -0.0008609164506196976, -1.8715683836489916e-05, -0.022859157994389534, -0.0010364643530920148, -0.0015300721861422062, -5.304672595229931e-05, -0.0012546057114377618, -0.01407917495816946, -0.6132460236549377, -0.18434065580368042, -2.1611247062683105, -3.814689989667386e-06, -0.155548095703125, -0.002453295513987541, -0.16441231966018677, -0.00013219437096267939, -0.0003524397616274655, -0.3609202206134796, -0.02301865443587303, -0.28795886039733887, -0.2579123079776764, -0.009927777573466301, -1.216772198677063, -0.0005222387262620032, -1.0397210121154785, -0.02510816603899002, -0.09368405491113663, -0.010372539982199669, -0.004259442910552025, -0.001639452064409852, -0.0022188823204487562, -1.47160005569458, -0.0021183686330914497, -2.7548837661743164, -0.6220886707305908, -0.017533540725708008, -0.028268862515687943, -0.007558201439678669, -0.00039295581518672407, -0.00041547726141288877, -0.16026635468006134, -0.00508017186075449, -0.0033371730241924524, -0.007348294369876385, -1.486496090888977, -1.0235546827316284, -0.002547711366787553, -0.001623861026018858, -1.7036654949188232, -0.0018241447396576405, -0.3543904423713684, -6.198863957251888e-06, -0.01398736983537674, -0.0005698964232578874, -0.0010832638945430517, -0.010412533767521381, -3.576214658096433e-05, -0.05631652846932411, -0.2737697958946228, -0.0025096607860177755, -0.016477927565574646, -0.06437338143587112, -0.15546686947345734, -1.5054490566253662, -2.867501735687256, -0.056032080203294754, -0.05965050309896469, -0.0025449765380471945, -8.344646857949556e-07, -0.008300922811031342, -0.07947412133216858], "finish_reason": "length"}], "metrics": {"energy": 400.98285385894786, "energy_per_token": 1.566339272886515, "time": 12.714319, "time_per_token": 0.04966530859375}}
{"outputs": [{"text": "if not isinstance(k, int) or k < 1:\n        raise ValueError('The number of neighbors should be non-negative integer')\n    distance_to_points = [np.linalg.norm(np.array(target) - np.array(row)) for _, row in data.iterrows()]\n    sorted_points = sorted(data.itertuples(index=False), key=lambda x: distance_to_points[x[0]])\n\n    # Select the 'k' closest points\n    nearest_neighbors = sorted_points[:k]\n    return list(map(lambda row: [row.Latitude, row.Longitude], nearest_neighbors))", "tokens": ["if", " not", " isinstance", "(", "k", ",", " int", ")", " or", " k", " <", " ", "1", ":", "\n", "        ", "raise", " Value", "Error", "('", "The", " number", " of", " neighbors", " should", " be", " non", "-", "negative", " integer", "')", "\n", "    ", "distance", "_", "to", "_", "points", " =", " [", "np", ".", "l", "inal", "g", ".", "norm", "(", "np", ".", "array", "(", "target", ")", " -", " np", ".", "array", "(", "row", "))", " for", " _", ",", " row", " in", " data", ".", "iter", "rows", "()", "]", "\n", "    ", "s", "orted", "_", "points", " =", " sorted", "(", "data", ".", "it", "ert", "up", "les", "(", "index", "=", "False", ")", ",", " key", "=", "lambda", " x", ":", " distance", "_", "to", "_", "points", "[", "x", "[", "0", "]]", ")", "\n", "\n", "    ", "#", " Select", " the", " '", "k", "'", " closest", " points", "\n", "    ", "ne", "arest", "_", "ne", "ighbors", " =", " sorted", "_", "points", "[:", "k", "]", "\n", "    ", "return", " list", "(", "map", "(", "lambda", " row", ":", " [", "row", ".", "Lat", "itude", ",", " row", ".", "Long", "itude", "]", ",", " nearest", "_", "ne", "ighbors", "))", "\n", "\n", "if"], "logprobs": [-1.220100998878479, -0.38665109872817993, -0.11872545629739761, -0.0007759897271171212, -0.06379499286413193, -0.0007659838884137571, -0.029085297137498856, -0.681097686290741, -0.03330153226852417, -0.03528660535812378, -0.04995712265372276, -0.00404017511755228, -2.2073023319244385, -0.018640460446476936, -0.016325006261467934, -0.004963220097124577, -0.016451073810458183, -0.009868170134723186, -1.645074735279195e-05, -1.5849493741989136, -2.894909143447876, -0.8598924279212952, -0.06288406997919083, -1.128274917602539, -2.3701395988464355, -0.010660131461918354, -3.180600643157959, -0.01718839444220066, -0.0293378084897995, -0.2495512068271637, -0.5620426535606384, -0.002970332745462656, -0.7880657315254211, -3.9312257766723633, -0.881374180316925, -3.647186756134033, -0.024057496339082718, -2.5107507705688477, -0.04293379187583923, -2.663764476776123, -2.5064573287963867, -0.001260677701793611, -0.4620363116264343, -0.0008469808381050825, -0.0006019449210725725, -2.777537883957848e-05, -0.02937195636332035, -0.3092353641986847, -0.16158977150917053, -0.0003828269545920193, -0.30320674180984497, -0.04120457544922829, -0.45845067501068115, -0.12592880427837372, -0.0081920325756073, -0.11148083955049515, -0.0010243174619972706, -0.006887149065732956, -0.05697639659047127, -1.3849672079086304, -0.30886998772621155, -0.1504049003124237, -2.495107412338257, -0.0035531502217054367, -0.007652136497199535, -0.0022644372656941414, -0.005625962745398283, -0.005769386421889067, -0.008953187614679337, -0.0037510290276259184, -0.00048411093303002417, -0.0068405019119381905, -0.027378341183066368, -0.03878948092460632, -0.6768085360527039, -0.0018949424847960472, -0.0006567466771230102, -1.6065375804901123, -0.07045964151620865, -1.0404645204544067, -0.007723942399024963, -2.1895358562469482, -0.05537756532430649, -1.4245306253433228, -0.0017158561386168003, -0.0003430254873819649, -3.2186455882765586e-06, -0.932391881942749, -0.036644503474235535, -0.008156324736773968, -0.762868344783783, -0.4270942211151123, -0.0007043979712761939, -0.0057466295547783375, -0.004551171325147152, -0.003212293842807412, -0.5224271416664124, -0.001960738329216838, -0.04694794490933418, -0.0001299296854995191, -3.0397906812140718e-05, -1.5258672647178173e-05, -7.247662142617628e-05, -0.011690560728311539, -0.008569964207708836, -2.4216954708099365, -0.11994701623916626, -0.022203544154763222, -0.022283989936113358, -0.05085360258817673, -2.9935238361358643, -0.0009565545478835702, -3.2376794815063477, -4.2765607833862305, -0.22136718034744263, -1.948850154876709, -0.0039043400902301073, -0.0040648700669407845, -1.6746608018875122, -0.4417717754840851, -0.5136818885803223, -0.00047350639943033457, -0.866523265838623, -0.20914943516254425, -0.05378871038556099, -1.2089322805404663, -0.006956168916076422, -0.011353527195751667, -0.5770910382270813, -0.004363064654171467, -1.5616295058862306e-05, -0.11628729850053787, -0.00828590802848339, -0.007454318460077047, -0.010151422582566738, -1.0842220783233643, -0.4395969808101654, -2.564443349838257, -0.01153832022100687, -0.3445930778980255, -0.0019081495702266693, -0.27922266721725464, -2.4909865856170654, -0.0029314663261175156, -0.5078760385513306, -0.011221393942832947, -0.36923983693122864, -0.02551148273050785, -0.0002889215829782188, -0.0011868583969771862, -0.001713952049612999, -9.30981186684221e-05, -0.000105375460407231, -3.862306402879767e-05, -0.0005788319394923747, -0.0009717986104078591, -0.0024647116661071777, -2.2053474822314456e-05, -1.311301275563892e-06, -1.1086402082582936e-05, -0.001931469771079719, -0.35258424282073975, -0.01949331723153591, -1.2928476333618164], "finish_reason": "stop"}], "metrics": {"energy": 230.86671541786197, "energy_per_token": 1.4077238744991583, "time": 7.9392457, "time_per_token": 0.04841003475609756}}
{"outputs": [{"text": "try:\n        if not isinstance(k, int) or k < 0:\n            raise ValueError('k must be a non-negative integer')\n        target_coords = [np.deg2rad(target[0]), np.deg2rad(target[1])]\n        data['Latitude'] = np.radians(data['Latitude'])\n        data['Longitude'] = np.radians(data['Longitude'])\n        distances = np.sqrt(np.power(data['Latitude'] - target_coords[0], 2) +\n                            np.power(data['Longitude'] - target_coords[1], 2))\n        neighbors = data[distances <= 10].sort_values(by='Distance')\n        neighbors_list = neighbors[['Latitude', 'Longitude']].to_numpy().tolist()\n        return neighbors_list[:k]\n\n    except Exception:\n        print('Error in task_func function')", "tokens": ["try", ":", "\n", "        ", "if", " not", " isinstance", "(", "k", ",", " int", ")", " or", " k", " <", " ", "0", ":", "\n", "            ", "raise", " Value", "Error", "('", "k", " must", " be", " a", " non", "-", "negative", " integer", "')", "\n", "        ", "target", "_", "co", "ords", " =", " [", "np", ".", "deg", "2", "rad", "(", "target", "[", "0", "])", ",", " np", ".", "deg", "2", "rad", "(", "target", "[", "1", "]", ")]", "\n", "        ", "data", "['", "Lat", "itude", "']", " =", " np", ".", "rad", "ians", "(", "data", "['", "Lat", "itude", "'])", "\n", "        ", "data", "['", "Long", "itude", "']", " =", " np", ".", "rad", "ians", "(", "data", "['", "Long", "itude", "'])", "\n", "        ", "dist", "ances", " =", " np", ".", "sqrt", "(", "np", ".", "power", "(", "data", "['", "Lat", "itude", "']", " -", " target", "_", "co", "ords", "[", "0", "]", ",", " ", "2", ")", " +", "\n", "                ", "            ", "np", ".", "power", "(", "data", "['", "Long", "itude", "']", " -", " target", "_", "co", "ords", "[", "1", "]", ",", " ", "2", "))", "\n", "        ", "ne", "ighbors", " =", " data", "[", "dist", "ances", " <=", " ", "1", "0", "]", ".", "sort", "_", "values", "(", "by", "='", "Distance", "')", "\n", "        ", "ne", "ighbors", "_", "list", " =", " neighbors", "[", "['", "Lat", "itude", "'", ",", " '", "Long", "itude", "']", "]", ".", "to", "_", "numpy", "()", ".", "tol", "ist", "()", "\n", "        ", "return", " neighbors", "_", "list", "[:", "k", "]", "\n", "\n", "    ", "except", " Exception", ":", "\n", "        ", "print", "('", "Error", " in", " task", "_", "func", " function", "')", "<", "|", "end", "of", "text", "|>"], "logprobs": [-3.571413516998291, -0.0018124834168702364, -0.006809836719185114, -0.02100192941725254, -1.3337187767028809, -0.883244514465332, -0.25859561562538147, -0.0007656264933757484, -0.10198613256216049, -0.0008759237825870514, -0.030449554324150085, -0.6836302280426025, -0.028595376759767532, -0.033567849546670914, -0.0778985321521759, -0.003468808252364397, -0.015110197477042675, -0.009683540090918541, -0.01229175180196762, -0.0028588399291038513, -0.014176965691149235, -0.027321619912981987, -2.3603161025675945e-05, -1.988123893737793, -0.36748093366622925, -0.21514032781124115, -0.003831784473732114, -0.1000622808933258, -0.05594393238425255, -0.0018679328495636582, -0.0015749443555250764, -0.00699073588475585, -0.11160900443792343, -0.0018011790234595537, -1.2369070053100586, -3.5314364433288574, -0.5322672724723816, -1.9452664852142334, -0.2505761981010437, -0.011982249096035957, -1.7822201251983643, -3.3616487979888916, -0.00016199229867197573, -1.2961827516555786, -0.007061997428536415, -0.0024952725507318974, -0.008647731505334377, -0.31495335698127747, -0.009115862660109997, -0.020333299413323402, -0.01128280721604824, -0.004572649952024221, -0.013443537056446075, -0.00031716562807559967, -0.0056069958955049515, -1.156323378381785e-05, -2.276871418871451e-05, -0.0002964295563288033, -0.000276765669696033, -0.0008388814167119563, -0.000614335120189935, -0.0011741180205717683, -0.0002455409849062562, -0.04737131670117378, -0.08904840797185898, -1.5011425018310547, -2.598104476928711, -3.062347412109375, -0.22941219806671143, -0.12030475586652756, -0.10739503800868988, -0.41490164399147034, -0.00015221867943182588, -1.1184264421463013, -1.0947937965393066, -0.005954858381301165, -0.005849504843354225, -0.09989066421985626, -0.0008825936238281429, -1.2755313036905136e-05, -0.011927004903554916, -0.0035992383491247892, -0.00026258357684127986, -0.002872271928936243, -0.0031625039409846067, -0.002806536154821515, -0.00044169207103550434, -0.00013398226292338222, -0.00036113892565481365, -0.0005968220066279173, -0.0001842805795604363, -0.00018892886873800308, -1.7404405298293568e-05, -0.00012039413559250534, -0.00018225439998786896, -0.00035720644518733025, -3.6954195820726454e-05, -3.123234637314454e-05, -0.00010752100206445903, -0.0005992047372274101, -0.08300808817148209, -0.6766787171363831, -0.1408739984035492, -0.022401614114642143, -1.4555790424346924, -0.0002153879904653877, -0.7486163377761841, -0.8006760478019714, -1.665530800819397, -0.00022623363474849612, -2.330970287322998, -0.11313623189926147, -1.446274995803833, -0.014839738607406616, -0.14390471577644348, -1.1920858014491387e-05, -0.0004873280122410506, -0.0445779412984848, -0.017686745151877403, -0.0030434264335781336, -5.483612312673358e-06, -5.722029527532868e-06, -0.00012694983161054552, -0.0008522216230630875, -0.0003805628512054682, -0.0014806747203692794, -0.009854004718363285, -7.724463648628443e-05, -0.005099860019981861, -0.07001903653144836, -1.4160507917404175, -0.014493074268102646, -0.18415464460849762, -0.0004638549580704421, -0.00010513706365600228, -0.0005052005290053785, -0.00368095631711185, -0.004914822522550821, -0.00047839165199548006, -0.000288087350782007, -5.245195097813848e-06, -0.00010358751023886725, -0.0011840007500723004, -0.0004988856380805373, -2.109982233378105e-05, -1.1920928244535389e-07, -1.0967194612021558e-05, -1.5616295058862306e-05, -0.0014491304755210876, -7.30726242181845e-05, -0.00011824862303910777, -0.0013621109537780285, -2.098061486321967e-05, -0.02953643724322319, -0.1601228415966034, -0.025549598038196564, -1.3358824253082275, -2.295281410217285, -0.046923376619815826, -0.9941681623458862, -2.2185230255126953, -0.1695808470249176, -5.125986263010418e-06, -0.7522770166397095, -0.9723694324493408, -1.8565703630447388, -0.7954972386360168, -1.8888647556304932, -0.7500327229499817, -0.1468261331319809, -0.00027724236133508384, -0.004987773951143026, -0.3018281161785126, -0.029018135741353035, -0.14438730478286743, -1.6992888450622559, -0.5197892785072327, -0.5890189409255981, -0.04136940464377403, -1.0425670146942139, -0.02848890610039234, -2.0355732440948486, -0.825383186340332, -0.008054750971496105, -0.9017508029937744, -1.3039021492004395, -0.12293916195631027, -0.05863979458808899, -0.00010966652916977182, -0.002331873867660761, -4.100715523236431e-05, -0.002959041390568018, -0.00032240914879366755, -7.867782187531702e-06, -0.15728701651096344, -0.05327311158180237, -0.06435593962669373, -0.9849690794944763, -4.768258077092469e-05, -0.5423344969749451, -0.016532335430383682, -0.553520917892456, -0.07893899083137512, -0.0001397035230183974, -0.015118886716663837, -0.06268233060836792, -0.05316109582781792, -0.33586373925209045, -0.033995192497968674, -0.006370120216161013, -1.883488948806189e-05, -0.4487771987915039, -0.01262317132204771, -0.004874607548117638, -0.016431959345936775, -2.538297653198242, -0.0027829986065626144, -0.008392424322664738, -1.1045993566513062, -2.2965378761291504, -0.012387951835989952, -0.0033121034502983093, -1.3271510601043701, -0.779461681842804, -2.0267703533172607, -0.6035091280937195, -0.6511960029602051, -0.2264571338891983, -0.02739550732076168, -2.024552822113037, -0.4763529598712921, -2.081784248352051, -1.311301275563892e-06, -4.768370445162873e-07, -0.00013362467871047556, -0.00010752100206445903, -0.20612098276615143], "finish_reason": "stop"}], "metrics": {"energy": 331.80529261207585, "energy_per_token": 1.4000223316965226, "time": 11.68, "time_per_token": 0.049282700421940925}}
{"outputs": [{"text": "if not isinstance(k, int):\n        raise ValueError(\"'k' must be an integer\")\n    elif k < 0:\n        raise ValueError(\"'k' must be a non-negative integer\")\n    k = int(k)\n\n    # Get coordinates of the target data point\n    target_latitude = target[0]\n    target_longitude = target[1]\n\n    # Calculate the distance to the target point using the Haversine formula\n    def haversine_distance(lat1, lon1, lat2, lon2):\n        lat1, lat2, lon1, lon2 = map(math.radians, [lat1, lat2, lon1, lon2])\n        d_lat = lat1 - lat2\n        d_lon = lon1 - lon2\n        sin_d_lat = math.sin(d_lat/2)\n        sin_d_lon = math.sin(d_lon/2)\n        a = sin_d_lat**2 + math.cos(lat1) * math.cos(lat2) * sin_d_lon**", "tokens": ["if", " not", " isinstance", "(", "k", ",", " int", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "'", "k", "'", " must", " be", " an", " integer", "\"", ")", "\n", "    ", "elif", " k", " <", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "(", "\"", "'", "k", "'", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n", "    ", "k", " =", " int", "(", "k", ")", "\n", "\n", "    ", "#", " Get", " coordinates", " of", " the", " target", " data", " point", "\n", "    ", "target", "_", "lat", "itude", " =", " target", "[", "0", "]", "\n", "    ", "target", "_", "long", "itude", " =", " target", "[", "1", "]", "\n", "\n", "    ", "#", " Calculate", " the", " distance", " to", " the", " target", " point", " using", " the", " Ha", "vers", "ine", " formula", "\n", "    ", "def", " ha", "vers", "ine", "_", "distance", "(", "lat", "1", ",", " lon", "1", ",", " lat", "2", ",", " lon", "2", "):", "\n", "        ", "lat", "1", ",", " lat", "2", ",", " lon", "1", ",", " lon", "2", " =", " map", "(", "math", ".", "rad", "ians", ",", " [", "lat", "1", ",", " lat", "2", ",", " lon", "1", ",", " lon", "2", "])", "\n", "        ", "d", "_", "lat", " =", " lat", "1", " -", " lat", "2", "\n", "        ", "d", "_", "lon", " =", " lon", "1", " -", " lon", "2", "\n", "        ", "sin", "_", "d", "_", "lat", " =", " math", ".", "sin", "(", "d", "_", "lat", "/", "2", ")", "\n", "        ", "sin", "_", "d", "_", "lon", " =", " math", ".", "sin", "(", "d", "_", "lon", "/", "2", ")", "\n", "        ", "a", " =", " sin", "_", "d", "_", "lat", "**", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " sin", "_", "d", "_", "lon", "**"], "logprobs": [-1.220100998878479, -0.38665109872817993, -0.11872545629739761, -0.0007759897271171212, -0.06379499286413193, -0.0007659838884137571, -0.029085297137498856, -0.7059046626091003, -0.018990369513630867, -0.005443986505270004, -0.02758791297674179, -0.06499377638101578, -2.074220174108632e-05, -0.2757437825202942, -0.13906000554561615, -1.0492982864379883, -0.004316655918955803, -0.0016413562698289752, -0.19643603265285492, -0.0018116504652425647, -0.9098260402679443, -0.023055698722600937, -0.41203978657722473, -0.00029225845355540514, -0.00296379579231143, -0.11792152374982834, -1.711338996887207, -0.014363587833940983, -0.05403178557753563, -0.0031298245303332806, -0.00983346626162529, -0.012991665862500668, -0.0012729407753795385, -0.001191144809126854, -0.003222750499844551, -0.000479344860650599, -3.909988299710676e-05, -0.010892457328736782, -0.004966067150235176, -0.008254696615040302, -0.0005287918029353023, -0.0008775911992415786, -0.06604383885860443, -0.02090608887374401, -0.18282125890254974, -0.02480609342455864, -0.0013056810712441802, -0.0009550062823109329, -0.014034389518201351, -0.013357437215745449, -0.0002942844294011593, -0.0007924277451820672, -0.8103814125061035, -3.1008055210113525, -0.3413904309272766, -1.436300277709961, -0.0008623456815257668, -0.0448034293949604, -0.0023847969714552164, -0.08046795427799225, -0.7871080040931702, -0.001629335805773735, -1.5739089250564575, -3.808187961578369, -3.376891613006592, -0.9648683667182922, -1.127578616142273, -0.16285137832164764, -1.0391814708709717, -0.020890794694423676, -0.21381577849388123, -0.000647692708298564, -0.48803985118865967, -0.03038167394697666, -0.2711138427257538, -1.237788200378418, -0.8502117395401001, -0.06949428468942642, -0.0006299418746493757, -0.0009445258183404803, -0.00032455421751365066, -0.007917449809610844, -0.00010406429646536708, -0.00028784899041056633, -6.079655122448457e-06, -0.0001778444420779124, -0.0012036467669531703, -0.00023278864682652056, -0.0003721021639648825, -0.0010944573441520333, -0.0002579356369096786, -3.528532761265524e-05, -9.48860906646587e-05, -0.11044733971357346, -0.0004196478403173387, -0.0835108831524849, -0.8228057622909546, -0.5810142755508423, -0.47384047508239746, -1.9526700973510742, -0.7393021583557129, -0.15143245458602905, -1.0536706447601318, -2.108093738555908, -0.34534111618995667, -0.8827939033508301, -2.3364747903542593e-05, -0.0017270424868911505, -0.0619942806661129, -0.039398785680532455, -0.0023258081637322903, -0.38876402378082275, -0.5986664891242981, -0.02383938431739807, -0.01623692736029625, -0.3521730899810791, -0.07373956590890884, -0.009332957677543163, -0.48267272114753723, -0.11362645775079727, -0.03258107602596283, -0.19614048302173615, -7.211902266135439e-05, -0.00019834458362311125, -0.0020692383404821157, -6.592056161025539e-05, -0.00014006110723130405, -2.5629668016335927e-05, -1.3112935448589269e-05, -0.015140491537749767, -0.0007702721050009131, -0.0026966894511133432, -0.814644992351532, -0.035636838525533676, -0.38589614629745483, -1.594713807106018, -1.8000440832111053e-05, -0.6619275212287903, -0.0002383901592111215, -6.615896563744172e-05, -1.8358061424805783e-05, -6.913899414939806e-05, -1.966933996300213e-05, -0.004580837674438953, -1.0972546339035034, -0.00016973962192423642, -0.09155794233083725, -2.622600959512056e-06, -0.0005136600811965764, -0.0007621721015311778, -4.494089080253616e-05, -0.07792246341705322, -0.001032891683280468, -0.000302030734019354, -0.00012814177898690104, -0.005317235365509987, -0.0015230495482683182, -0.0004502712981775403, -0.00010740180005086586, -4.649054244509898e-05, -3.540453326422721e-05, -8.010543388081715e-05, -1.847726889536716e-05, -0.0002944036095868796, -0.005597749724984169, -0.022105952724814415, -0.9847803115844727, -0.6370514631271362, -0.07199695706367493, -0.031665630638599396, -0.14885109663009644, -0.668836772441864, -0.006419276352971792, -0.00011324241495458409, -3.421248038648628e-05, -0.0007479969062842429, -3.969590397900902e-05, -0.0007273888913914561, -2.0265373677830212e-05, -0.0040674819611012936, -4.0649541915627196e-05, -0.00012742661056108773, -7.176141662057489e-05, -0.00011991735664196312, -5.638440416078083e-05, -3.421248038648628e-05, -6.890059739816934e-05, -0.018784252926707268, -2.5000364780426025, -0.018093183636665344, -0.9234404563903809, -0.10278446972370148, -0.0035902110394090414, -0.21399904787540436, -0.015674130991101265, -7.152555099310121e-07, -0.0010081215295940638, -0.0008578196284361184, -0.007254686206579208, -1.0490362910786644e-05, -2.3841830625315197e-06, -2.986664056777954, -0.0010352734243497252, -0.017808424308896065, -0.03948381915688515, -2.396077979938127e-05, -0.006111979018896818, -6.592056161025539e-05, -0.0007783720502629876, -1.9073304429184645e-05, -0.004799986723810434, -0.000105375460407231, -0.0001282609737245366, -0.0005359405186027288, -9.583967766957358e-05, -0.00013290952483657748, -8.439661905867979e-05, -2.0265558760002023e-06, -0.0001867835089797154, -0.000380324519937858, -3.933898824470816e-06, -3.7788631743751466e-05, -3.075552376685664e-05, -0.016886968165636063, -0.5092480182647705, -0.00925807747989893, -0.20266075432300568, -1.9073468138230965e-06, -1.3589766240329482e-05, -1.1920928244535389e-07, -0.0002138386043952778, -0.4791848063468933, -0.0001102625101339072, -0.002054724609479308, -0.028669053688645363, -1.8596476365928538e-05, -0.000336590368533507, -0.0001072826053132303, -0.005865622777491808, -0.011135810054838657, -0.40586382150650024, -0.001082311267964542, -0.0016482589999213815, -0.0005752577562816441, -0.0001250427303602919, -2.6940935640595853e-05, -0.0009070096421055496, -0.00022075122979003936, -0.001258058357052505, -0.0014033003244549036, -0.004737106617540121, -3.2186455882765586e-06, -5.245195097813848e-06, -2.3841855067985307e-07, -0.00014685506175737828, -0.007366163190454245], "finish_reason": "length"}], "metrics": {"energy": 364.44424340820314, "energy_per_token": 1.4236103258132935, "time": 12.701453, "time_per_token": 0.04961505078125}}
{"outputs": [{"text": "if not isinstance(k, int) or k < 0:\n        raise ValueError('k must be a non-negative integer')\n\n    data = data.copy()\n    data['lat_diff'] = (data['Latitude'] - target[0]) * math.pi / 180\n    data['lon_diff'] = (data['Longitude'] - target[1]) * math.pi / 180\n\n    data['distance'] = np.sqrt(data['lat_diff'] ** 2 + data['lon_diff'] ** 2)\n\n    sorted_distances = data.sort_values('distance')\n\n    nearest_neighbors = sorted_distances[:k]\n\n    return nearest_neighbors.to_list()", "tokens": ["if", " not", " isinstance", "(", "k", ",", " int", ")", " or", " k", " <", " ", "0", ":", "\n", "        ", "raise", " Value", "Error", "('", "k", " must", " be", " a", " non", "-", "negative", " integer", "')", "\n", "\n", "    ", "data", " =", " data", ".", "copy", "()", "\n", "    ", "data", "['", "lat", "_", "diff", "']", " =", " (", "data", "['", "Lat", "itude", "']", " -", " target", "[", "0", "])", " *", " math", ".", "pi", " /", " ", "1", "8", "0", "\n", "    ", "data", "['", "lon", "_", "diff", "']", " =", " (", "data", "['", "Long", "itude", "']", " -", " target", "[", "1", "])", " *", " math", ".", "pi", " /", " ", "1", "8", "0", "\n", "\n", "    ", "data", "['", "distance", "']", " =", " np", ".", "sqrt", "(", "data", "['", "lat", "_", "diff", "']", " **", " ", "2", " +", " data", "['", "lon", "_", "diff", "']", " **", " ", "2", ")", "\n", "\n", "    ", "s", "orted", "_", "dist", "ances", " =", " data", ".", "sort", "_", "values", "('", "distance", "')", "\n", "\n", "    ", "ne", "arest", "_", "ne", "ighbors", " =", " sorted", "_", "dist", "ances", "[:", "k", "]", "\n", "\n", "    ", "return", " nearest", "_", "ne", "ighbors", ".", "to", "_", "list", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.220100998878479, -0.38665109872817993, -0.11872545629739761, -0.0007759897271171212, -0.06379499286413193, -0.0007659838884137571, -0.029085297137498856, -0.681097686290741, -0.03330153226852417, -0.03528660535812378, -0.04995712265372276, -0.00404017511755228, -0.11681204289197922, -0.012484495528042316, -0.016064027324318886, -0.0047830212861299515, -0.01861986704170704, -0.008762125857174397, -1.811964830267243e-05, -1.5854581594467163, -0.35746556520462036, -0.1457965075969696, -0.0027995225973427296, -0.10454118996858597, -0.06657709926366806, -0.0019061268540099263, -0.0012525817146524787, -0.0071544405072927475, -0.12774178385734558, -0.002137520583346486, -0.6609355807304382, -0.00135389668866992, -2.8329720497131348, -1.1466058492660522, -0.21979369223117828, -0.12011649459600449, -0.962066650390625, -0.013489759527146816, -0.14519737660884857, -0.17372292280197144, -0.3335959017276764, -0.2503616511821747, -2.755764961242676, -0.7126451730728149, -0.9186302423477173, -0.031363338232040405, -0.00837977509945631, -2.0055766105651855, -0.5566901564598083, -0.4251324534416199, -0.027290532365441322, -4.029192859889008e-05, -0.0027139282319694757, -0.09942474216222763, -0.009784241206943989, -0.0005472592893056571, -0.0010912423022091389, -0.002653650939464569, -1.13877534866333, -0.517308235168457, -6.842378934379667e-05, -0.13727669417858124, -0.059271059930324554, -0.01964271441102028, -0.014105386100709438, -0.0012178155593574047, -4.482168878894299e-05, -0.17316065728664398, -0.0006526962388306856, -0.0009951406391337514, -0.0003591130953282118, -0.2621747553348541, -7.199982064776123e-05, -0.0003916450368706137, -0.0003763920976780355, -0.0027576773427426815, -0.01206198986619711, -0.02807345800101757, -0.0003332536434754729, -7.450303382938728e-05, -1.847726889536716e-05, -0.0010471820132806897, -0.005858630407601595, -0.00034767304896377027, -6.007967749610543e-05, -0.001553996349684894, -0.0020574608352035284, -0.0030269066337496042, -0.011465727351605892, -0.000876757490914315, -0.000379132863599807, -0.0015764916315674782, -0.0014732946874573827, -0.0007780147134326398, -0.00020930961181875318, -0.0003979606262873858, -0.006085793953388929, -1.7491182088851929, -0.00020275443966966122, -0.5919952392578125, -0.06917651742696762, -1.4716421365737915, -0.06616010516881943, -0.0007186928996816278, -1.2278645038604736, -3.766942609217949e-05, -0.08515813201665878, -0.1695588082075119, -0.47506123781204224, -0.040314510464668274, -0.009529459290206432, -1.2397689715726301e-05, -4.768360213347478e-06, -0.0020361661445349455, -0.4608374834060669, -0.0014385362155735493, -4.2676016164477915e-05, -0.010924411937594414, -0.022864749655127525, -0.001050516264513135, -0.0007120219524949789, -3.933898824470816e-06, -1.5139465176616795e-05, -0.0005393957253545523, -0.0022388650104403496, -0.002150724409148097, -3.2782016205601394e-05, -0.011812853626906872, -0.3678913712501526, -0.6587875485420227, -0.00013124081306159496, -1.7126834392547607, -0.005774364341050386, -0.0033339650835841894, -2.861586570739746, -0.07698415219783783, -0.004308584611862898, -0.4401836097240448, -0.21540360152721405, -0.004390363115817308, -5.3165931603871286e-05, -0.0008463853155262768, -0.6059622764587402, -0.00013004888023715466, -0.24592970311641693, -0.6679773330688477, -0.49751338362693787, -6.41325386823155e-05, -0.7661271691322327, -0.08825014531612396, -0.2021498829126358, -0.37137332558631897, -0.005320081487298012, -0.007271846290677786, -0.060213785618543625, -0.0003313469351269305, -4.768360213347478e-06, -4.529942543740617e-06, -1.7790303230285645, -0.012171518988907337, -0.2474241852760315, -0.3876037895679474, -0.38039448857307434, -0.00018702188390307128, -0.27416354417800903, -0.14600235223770142, -0.00010179955279454589, -1.6689286894688848e-06, -7.152531907195225e-06, -1.2285842895507812, -0.38553640246391296, -2.7656173188006505e-05, -1.9295222759246826, -0.307744562625885, -1.0769556760787964, -2.3841855067985307e-07, -5.960462772236497e-07, -0.00013731967192143202, -0.00011121608258690685, -0.12616053223609924], "finish_reason": "stop"}], "metrics": {"energy": 252.32761999702447, "energy_per_token": 1.4018201110945805, "time": 8.983195, "time_per_token": 0.04990663888888889}}
{"outputs": [{"text": "data_latitudes = data['Latitude'].to_numpy()\n    data_longitudes = data['Longitude']\n    target_latitude, target_longitude = target\n\n    if k < 0 or not isinstance(k, int):\n        raise ValueError('k must be a non-negative integer')\n\n    distances = []\n    for i in range(len(data)):\n        lat1, long1 = data_latitudes[i], data_longitudes[i]\n        lat2, long2 = target_latitude, target_longitude\n        distance = 6371 * math.acos(\n            math.sin(lat1) * math.sin(lat2) +\n            math.cos(lat1) * math.cos(lat2) * math.cos(long1 - long2)\n        )\n        distances.append((distance, i))\n\n    distances.sort(key=lambda x: x[0])\n\n    nearest_neighbors = [data.iloc[i].values for _, i in distances[:k]]\n\n    return nearest_", "tokens": ["data", "_", "lat", "itudes", " =", " data", "['", "Lat", "itude", "']", ".", "to", "_", "numpy", "()", "\n", "    ", "data", "_", "long", "itudes", " =", " data", "['", "Long", "itude", "']", "\n", "    ", "target", "_", "lat", "itude", ",", " target", "_", "long", "itude", " =", " target", "\n", "\n", "    ", "if", " k", " <", " ", "0", " or", " not", " isinstance", "(", "k", ",", " int", "):", "\n", "        ", "raise", " Value", "Error", "('", "k", " must", " be", " a", " non", "-", "negative", " integer", "')", "\n", "\n", "    ", "dist", "ances", " =", " []", "\n", "    ", "for", " i", " in", " range", "(", "len", "(", "data", "))", ":", "\n", "        ", "lat", "1", ",", " long", "1", " =", " data", "_", "lat", "itudes", "[", "i", "]", ",", " data", "_", "long", "itudes", "[", "i", "]", "\n", "        ", "lat", "2", ",", " long", "2", " =", " target", "_", "lat", "itude", ",", " target", "_", "long", "itude", "\n", "        ", "distance", " =", " ", "6", "3", "7", "1", " *", " math", ".", "ac", "os", "(", "\n", "            ", "math", ".", "sin", "(", "lat", "1", ")", " *", " math", ".", "sin", "(", "lat", "2", ")", " +", "\n", "            ", "math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " math", ".", "cos", "(", "long", "1", " -", " long", "2", ")", "\n", "        ", ")", "\n", "        ", "dist", "ances", ".", "append", "((", "distance", ",", " i", "))", "\n", "\n", "    ", "dist", "ances", ".", "sort", "(", "key", "=", "lambda", " x", ":", " x", "[", "0", "])", "\n", "\n", "    ", "ne", "arest", "_", "ne", "ighbors", " =", " [", "data", ".", "il", "oc", "[", "i", "]", ".", "values", " for", " _", ",", " i", " in", " distances", "[:", "k", "]]", "\n", "\n", "    ", "return", " nearest", "_"], "logprobs": [-3.3371758460998535, -2.0315535068511963, -1.6838536262512207, -2.7459311485290527, -0.07720576226711273, -0.1232120543718338, -0.5449036359786987, -0.007719565648585558, -2.312633478140924e-05, -0.0013708013575524092, -0.429440975189209, -1.1836857795715332, -0.00012611546844709665, -0.16336429119110107, -0.012226985767483711, -0.05086198449134827, -0.0007731309160590172, -0.010924648493528366, -0.00022718709078617394, -0.003717537270858884, -0.001831522211432457, -0.0009151084814220667, -0.0002903516869992018, -0.0017253764672204852, -5.209310256759636e-05, -0.00014053787162993103, -4.625213477993384e-05, -0.3711841106414795, -0.48079416155815125, -0.5826172828674316, -0.009388227015733719, -0.02358909137547016, -0.10625623166561127, -0.6567398905754089, -0.0026820660568773746, -2.169585604860913e-05, -0.001207814086228609, -0.0018066527554765344, -0.0019174300832673907, -0.019926251843571663, -0.06599941849708557, -0.5037438869476318, -0.001212695729918778, -1.30830717086792, -1.448494791984558, -0.23282647132873535, -0.0028204445261508226, -0.2085483819246292, -0.9781584143638611, -0.2085222601890564, -0.1615907847881317, -0.00028153270250186324, -0.0024547225330024958, -0.000514851592015475, -0.006803443189710379, -0.00790349394083023, -0.009561694227159023, -0.003318757051602006, -0.01692318543791771, -0.0024173820856958628, -1.3828182090946939e-05, -1.2107831239700317, -0.29374924302101135, -0.10547750443220139, -0.002144895726814866, -0.05502504110336304, -0.037754129618406296, -0.0012703214306384325, -0.0008151783840730786, -0.003907190170139074, -0.13801123201847076, -0.0015923213213682175, -0.08624783158302307, -0.0008223251206800342, -0.9213653206825256, -0.008195225149393082, -0.033618684858083725, -0.18792025744915009, -0.02437433786690235, -0.24064487218856812, -0.051119253039360046, -0.3989456593990326, -0.16315267980098724, -0.0023707635700702667, -0.0002661589242052287, -0.23027917742729187, -8.940656698541716e-06, -0.00046135272714309394, -0.7420795559883118, -3.9934315282152966e-05, -0.002047110814601183, -0.0020943391136825085, -0.41271260380744934, -0.570042073726654, -0.7332146167755127, -1.9771579504013062, -0.0003695997002068907, -0.0036347531713545322, -0.0720568597316742, -0.17354655265808105, -0.007059156429022551, -2.253030106658116e-05, -9.190614218823612e-05, -3.6954195820726454e-05, -0.0005830018781125546, -0.0016732513904571533, -0.0010202685371041298, -0.0001510267611593008, -8.511180931236595e-05, -3.576272320060525e-06, -0.00011324241495458409, -4.0411134250462055e-05, -7.414542778860778e-05, -0.0015417367685586214, -0.028665579855442047, -0.20458780229091644, -0.004012510646134615, -0.010801774449646473, -0.002438906580209732, -0.0001842805795604363, -0.0003134713042527437, -0.008653049357235432, -0.0032131255138665438, -0.00024589852546341717, -4.60137271147687e-05, -0.0002797450579237193, -0.00032574593205936253, -7.867782187531702e-06, -0.00015352977789007127, -2.4199192921514623e-05, -0.0012382942950353026, -0.5480266213417053, -0.7572036385536194, -0.04933583363890648, -1.7206990718841553, -0.48060861229896545, -0.0029258797876536846, -0.0029856651090085506, -0.002619646955281496, -0.14353352785110474, -0.07805918902158737, -1.2397689715726301e-05, -0.05834532529115677, -0.00012790338951162994, -0.03351551294326782, -1.9522671699523926, -0.04557971656322479, -0.0775250717997551, -1.2755313036905136e-05, -0.10577546805143356, -0.011824163608253002, -2.126253128051758, -0.19424742460250854, -1.9164650440216064, -0.0012393658980727196, -0.002101000864058733, -0.0006750926841050386, -0.020413661375641823, -0.00043466180795803666, -0.016287360340356827, -0.000607782625593245, -0.0007098776986822486, -0.043050382286310196, -0.6742442846298218, -0.0012057899730280042, -0.0058282907120883465, -0.00036530973738990724, -5.340433563105762e-05, -0.00030858523678034544, -0.0013913960428908467, -0.0009896624833345413, -0.0007929041748866439, -0.0001967951684491709, -0.0017402517842128873, -0.0011428022990003228, -2.407998726994265e-05, -4.136476854910143e-05, -0.001459129503928125, -0.00012730741582345217, -0.0005466635921038687, -0.001369372708722949, -0.10423307865858078, -0.005977610591799021, -6.425174069590867e-05, -0.004210298415273428, -0.0725162997841835, -0.308980792760849, -0.07968351244926453, -0.0006600823253393173, -7.056941103655845e-05, -0.23417222499847412, -0.0024634036235511303, -0.009620612487196922, -0.0008199428557418287, -0.023790843784809113, -0.024935049936175346, -0.0499102845788002, -0.0003332536434754729, -0.00046039948938414454, -0.0002338612830499187, -0.9152379631996155, -0.3958203196525574, -0.007663375232368708, -0.4684554934501648, -0.060499176383018494, -0.004389413632452488, -0.3364099860191345, -0.00035386974923312664, -0.19865308701992035, -0.00018380382971372455, -0.044199347496032715, -1.5616295058862306e-05, -0.5800245404243469, -0.0275938268750906, -0.00345372105948627, -0.0013610394671559334, -0.037901513278484344, -0.0003535122668836266, -0.03979260101914406, -0.00010597144137136638, -0.0031036799773573875, -0.006801430135965347, -0.021824084222316742, -0.8535784482955933, -4.9828242481453344e-05, -0.5253201723098755, -0.10027559846639633, -0.15002810955047607, -0.19510814547538757, -0.004207449499517679, -0.00617998605594039, -0.733002781867981, -0.3689917027950287, -0.37355920672416687, -0.2086590826511383, -3.7431014789035544e-05, -0.0041474997997283936, -0.3416004478931427, -0.6332049369812012, -1.0713250637054443, -0.23094594478607178, -0.060720209032297134, -0.3960515558719635, -0.00024291902082040906, -0.007189237512648106, -0.0004210777406115085, -0.0014598437119275331, -0.05106895789504051, -0.0029514345806092024, -0.010379146784543991, -0.0022770448122173548, -0.39664730429649353, -0.00016068121476564556, -0.021574918180704117, -0.004941512830555439, -4.470248313737102e-05], "finish_reason": "length"}], "metrics": {"energy": 436.4677068595887, "energy_per_token": 1.7049519799202684, "time": 13.787072, "time_per_token": 0.05385575}}
