{"outputs": [{"text": " not isinstance(k, int):", "tokens": [" not", " isinstance", "(", "k", ",", " int", "):", "\n"], "logprobs": [-0.4479149580001831, -0.10221561789512634, -0.0006647284608334303, -0.08805760741233826, -0.0010432521812617779, -0.03258603811264038, -0.6443291306495667, -0.01940189115703106], "finish_reason": "stop"}, {"text": " ValueError('k must be a non-negative integer')", "tokens": [" Value", "Error", "('", "k", " must", " be", " a", " non", "-", "negative", " integer", "')", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -1.6672230958938599, -0.3376762866973877, -0.17633379995822906, -0.0030859727412462234, -0.0946008712053299, -0.06347887217998505, -0.0025869496166706085, -0.001450082752853632, -0.007667988538742065, -0.10608106851577759, -0.002156553091481328], "finish_reason": "stop"}, {"text": " 6371", "tokens": [" ", "6", "3", "7", "1", "\n"], "logprobs": [-0.009556381031870842, -0.0011865011183544993, -0.0014024670235812664, -0.0010849310783669353, -0.00224956963211298, -0.6280490756034851], "finish_reason": "stop"}, {"text": " lon1 = coord1[0], coord1[1]", "tokens": [" lon", "1", " =", " coord", "1", "[", "0", "]", ",", " coord", "1", "[", "1", "]", "\n"], "logprobs": [-0.1863720566034317, -1.549708758830093e-05, -0.11258590966463089, -0.5586482286453247, -0.0031931623816490173, -1.577700138092041, -0.0205860435962677, -0.04344356432557106, -0.5419809818267822, -0.00195443257689476, -0.0006986799417063594, -0.0002115741081070155, -0.00038425691309385, -0.00023862851958256215, -0.012852334417402744], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-9.846202738117427e-05, -2.682172998902388e-05, -0.00010442188795423135, -0.001803796854801476, -0.0004068977141287178, -5.054346183896996e-05, -0.0001525762490928173, -3.313963316031732e-05, -0.0003046525234822184, -0.00047874910524114966, -0.0004951919545419514, -0.00019894051365554333, -8.749579137656838e-05, -3.802703940891661e-05, -0.00021836756786797196, -0.0015555436257272959, -1.4543427823809907e-05, -0.00025185750564560294, -0.00010382589971413836, -0.0004542034293990582, -0.0002796259068418294, -1.156323378381785e-05, -0.0002456601650919765, -1.3470558769768104e-05, -0.0006177900941111147], "finish_reason": "stop"}, {"text": " lat2 - lat1", "tokens": [" lat", "2", " -", " lat", "1", "\n"], "logprobs": [-0.3077547252178192, -0.07922118157148361, -0.04670507460832596, -0.0003268184664193541, -7.83174327807501e-05, -0.001976324012503028], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.0001679517881711945, -0.00010513706365600228, -0.00067223358200863, -5.23315102327615e-05, -4.6132929128361866e-05, -0.00011729506513802335], "finish_reason": "stop"}, {"text": " math.sin(dlat/2)**2 + math.cos(lat1) * math.cos(lat2) * math.sin(dlon/2)**2", "tokens": [" math", ".", "sin", "(", "d", "lat", "/", "2", ")**", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " math", ".", "sin", "(", "dl", "on", "/", "2", ")**", "2", "\n"], "logprobs": [-0.4628535211086273, -4.768370445162873e-07, -0.08940745145082474, -0.0002708068350329995, -0.0009714413317851722, -5.900685573578812e-05, -1.3861392736434937, -0.0006162413046695292, -0.03481433913111687, -8.11782301752828e-05, -0.0013075858587399125, -0.0042710755951702595, -2.729855441430118e-05, -0.027050500735640526, -2.2411095415009186e-05, -0.0005327236140146852, -0.008339108899235725, -0.3340815305709839, -0.00048160876031033695, -0.0011829291470348835, -0.00013863079948350787, -0.003617530455812812, -1.7404405298293568e-05, -0.0007859955076128244, -6.425174069590867e-05, -0.000590865034610033, -0.0010930284624919295, -0.009457547217607498, -0.0001658063702052459, -0.0001456631434848532, -2.777537883957848e-05, -0.00011634149996098131, -2.52720492426306e-05, -0.001312943291850388, -2.7417760065873154e-05, -0.00017557987303007394, -4.768258077092469e-05, -0.0006211258587427437], "finish_reason": "stop"}, {"text": " 2 * math.atan2(math.sqrt(a), math.sqrt(1-a))", "tokens": [" ", "2", " *", " math", ".", "atan", "2", "(", "math", ".", "sqrt", "(", "a", ")", ",", " math", ".", "sqrt", "(", "1", "-", "a", "))", "\n"], "logprobs": [-0.0009617946925573051, -0.00016973962192423642, -0.02271338552236557, -0.004228935576975346, -3.576278118089249e-07, -1.4097964763641357, -0.0008092227508313954, -0.0003292018664069474, -0.010842458344995975, -3.576278118089249e-07, -8.105902816168964e-05, -1.728519782773219e-05, -4.9828242481453344e-05, -3.1470757676288486e-05, -0.00022146634000819176, -0.0015645894454792142, -6.425174069590867e-05, -4.482168878894299e-05, -5.6622808187967166e-05, -0.017951399087905884, -0.06993534415960312, -0.00027295202016830444, -0.00010501786891836673, -0.002244455274194479], "finish_reason": "stop"}, {"text": " RADIUS_EARTH_KM * c  # Distance in kilometers", "tokens": [" R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", " *", " c", "  ", "#", " Distance", " in", " kilometers", "\n"], "logprobs": [-0.4124845564365387, -4.827859811484814e-05, -6.6756979322235566e-06, -5.578839045483619e-05, -4.172316494077677e-06, -7.748573807475623e-06, -2.145764938177308e-06, -8.34461570775602e-06, -2.8609820219571702e-05, -0.00013684290752280504, -0.008960630744695663, -0.0010194348869845271, -1.7389039993286133, -0.00026592056383378804, -0.2955504357814789, -0.059886541217565536, -0.04057862609624863, -0.02509712055325508], "finish_reason": "stop"}, {"text": " np.apply_along_axis(calculate_distance, 1, data, target)", "tokens": [" np", ".", "apply", "_", "along", "_", "axis", "(", "calculate", "_", "distance", ",", " ", "1", ",", " data", ",", " target", ")", "\n"], "logprobs": [-3.9510338306427, -1.728519782773219e-05, -1.1283743381500244, -3.576272320060525e-06, -0.00031680811662226915, -9.536738616588991e-07, -0.00044824567157775164, -0.0027803832199424505, -0.18736423552036285, -5.006777428206988e-06, -4.136476854910143e-05, -0.0007986216805875301, -0.0485483780503273, -0.2688974142074585, -0.00013386306818574667, -0.07351075857877731, -1.0567822456359863, -0.3474113643169403, -0.009977939538657665, -0.09611009806394577], "finish_reason": "stop"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.2509055435657501, -0.00027891082572750747, -0.0331290178000927, -0.00021979777375236154, -0.00035601475974544883, -0.0006482883472926915, -8.583032467868179e-06, -0.0659489780664444, -0.08263444155454636, -0.0018817351665347815, -0.009409012272953987, -0.06476876884698868], "finish_reason": "stop"}, {"text": " data.iloc[nearest_indices]", "tokens": [" data", ".", "il", "oc", "[", "ne", "arest", "_", "indices", "]", "\n"], "logprobs": [-0.2753068506717682, -0.033635396510362625, -0.19466492533683777, -5.483612312673358e-06, -0.0014225849881768227, -0.011044206097722054, -0.00011669908417388797, -8.344646857949556e-07, -2.1457441107486375e-05, -0.092353455722332, -2.6072707176208496], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors"], "logprobs": [-0.008372918702661991, -5.5549986427649856e-05, -5.8887653722194955e-05, -6.878139538457617e-05], "finish_reason": "stop"}], "metrics": {"energy": 440.3415134334564, "energy_per_token": 2.137580162298332, "time": 14.604348, "time_per_token": 0.0708948932038835}}
{"outputs": [{"text": " not isinstance(k, int):", "tokens": [" not", " isinstance", "(", "k", ",", " int", "):", "\n"], "logprobs": [-0.42849767208099365, -0.10607624053955078, -0.0005781171494163573, -0.0960288867354393, -0.0007917130133137107, -0.027842888608574867, -0.581300675868988, -0.02165401354432106], "finish_reason": "stop"}, {"text": " ValueError('k must be a non-negative integer')", "tokens": [" Value", "Error", "('", "k", " must", " be", " a", " non", "-", "negative", " integer", "')", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -1.6672230958938599, -0.3376762866973877, -0.17633379995822906, -0.0030859727412462234, -0.0946008712053299, -0.06347887217998505, -0.0025869496166706085, -0.001450082752853632, -0.007667988538742065, -0.10608106851577759, -0.002156553091481328], "finish_reason": "stop"}, {"text": " 6371  # km", "tokens": [" ", "6", "3", "7", "1", "  ", "#", " km", "\n"], "logprobs": [-0.009556381031870842, -0.0011865011183544993, -0.0014024670235812664, -0.0010849310783669353, -0.00224956963211298, -1.1231300830841064, -0.002188075101003051, -1.1995362043380737, -0.06853990256786346], "finish_reason": "stop"}, {"text": " lon1 = coord1", "tokens": [" lon", "1", " =", " coord", "1", "\n"], "logprobs": [-0.1863720566034317, -1.549708758830093e-05, -0.11258590966463089, -0.5586482286453247, -0.0031931623816490173, -0.3027347922325134], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-9.846202738117427e-05, -2.682172998902388e-05, -0.00010442188795423135, -0.001803796854801476, -0.0004068977141287178, -5.054346183896996e-05, -0.0001525762490928173, -3.313963316031732e-05, -0.0003046525234822184, -0.00047874910524114966, -0.0004951919545419514, -0.00019894051365554333, -8.749579137656838e-05, -3.802703940891661e-05, -0.00021836756786797196, -0.0015555436257272959, -1.4543427823809907e-05, -0.00025185750564560294, -0.00010382589971413836, -0.0004542034293990582, -0.0002796259068418294, -1.156323378381785e-05, -0.0002456601650919765, -1.3470558769768104e-05, -0.0006177900941111147], "finish_reason": "stop"}, {"text": " math.sin((lat2 - lat1) / 2)**2", "tokens": [" math", ".", "sin", "((", "lat", "2", " -", " lat", "1", ")", " /", " ", "2", ")**", "2", "\n"], "logprobs": [-1.6007444858551025, -2.622600959512056e-06, -1.5327022075653076, -0.09857132285833359, -0.002782760886475444, -0.06345415115356445, -0.3344168961048126, -0.0006829552003182471, -6.067568756407127e-05, -0.07032809406518936, -0.0006562701892107725, -0.0005458295345306396, -3.838465272565372e-05, -0.7542881965637207, -0.0001854724541772157, -0.578095555305481], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.00017081231635529548, -0.00011526874004630372, -0.000747758662328124, -4.100715523236431e-05, -4.088794958079234e-05, -0.0001380348257953301], "finish_reason": "stop"}, {"text": " math.sin(dlat / 2)**2 + math.cos(lat1) * math.cos(lat2) * math.sin(dlon / 2)**2", "tokens": [" math", ".", "sin", "(", "d", "lat", " /", " ", "2", ")**", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " math", ".", "sin", "(", "dl", "on", " /", " ", "2", ")**", "2", "\n"], "logprobs": [-0.36696016788482666, -4.768370445162873e-07, -0.08753808587789536, -0.0003392120997887105, -0.0010024051880463958, -4.756337511935271e-05, -0.2887668311595917, -0.000485183292767033, -2.4914430468925275e-05, -0.34383678436279297, -9.333651541965082e-05, -0.0020707848016172647, -0.004782191012054682, -1.6689160474925302e-05, -0.009944655932486057, -2.098061486321967e-05, -0.00031406714697368443, -0.011425892822444439, -0.005931157618761063, -0.0001919085334520787, -0.0010788579238578677, -0.00019536493346095085, -0.002236367203295231, -8.34461570775602e-06, -0.00045980370487086475, -3.969590397900902e-05, -0.00029416524921543896, -0.0021325245033949614, -0.021804489195346832, -0.00018737945356406271, -0.00013696208770852536, -3.814624506048858e-05, -0.0002233732520835474, -3.3854863431770355e-05, -0.0026505598798394203, -0.000998594332486391, -1.3470558769768104e-05, -0.002723438898101449, -4.207999518257566e-05, -0.0006932000978849828], "finish_reason": "stop"}, {"text": " 2 * math.asin(math.sqrt(a))", "tokens": [" ", "2", " *", " math", ".", "as", "in", "(", "math", ".", "sqrt", "(", "a", "))", "\n"], "logprobs": [-0.0009683449170552194, -0.00016640232934150845, -0.018096577376127243, -0.006625588983297348, -4.768370445162873e-07, -0.2749921381473541, -5.245195097813848e-06, -0.0007242917199619114, -0.003948630765080452, -9.536738616588991e-07, -0.0001267114421352744, -1.7165990357170813e-05, -0.00011836781777674332, -0.0002470903273206204, -0.0034614428877830505], "finish_reason": "stop"}, {"text": " RADIUS_EARTH_KM * c  # Distance in kilometers", "tokens": [" R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", " *", " c", "  ", "#", " Distance", " in", " kilometers", "\n"], "logprobs": [-0.5160514712333679, -5.0424259825376794e-05, -6.9141146923357155e-06, -5.9126061387360096e-05, -4.172316494077677e-06, -5.960446742392378e-06, -2.145764938177308e-06, -8.940656698541716e-06, -2.0861407392658293e-05, -0.00012957210128661245, -0.008920224383473396, -0.0009330924949608743, -1.7751909494400024, -0.00025328766787424684, -0.37458258867263794, -0.05836702883243561, -0.04214436188340187, -0.023809002712368965], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.9974098205566406, -0.03403690457344055], "finish_reason": "stop"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.1838323324918747, -0.00031418632715940475, -0.030095767229795456, -0.00021228920377325267, -0.00037293630884960294, -0.0004897110629826784, -1.0013530300057027e-05, -0.08031098544597626, -0.07820548862218857, -0.0019839382730424404, -0.007998697459697723, -0.0632656142115593], "finish_reason": "stop"}, {"text": " data.iloc[nearest_indices].values.tolist()", "tokens": [" data", ".", "il", "oc", "[", "ne", "arest", "_", "indices", "]", ".", "values", ".", "tol", "ist", "()", "\n"], "logprobs": [-0.24416032433509827, -0.03427388519048691, -0.23488645255565643, -7.629365427419543e-06, -0.0017680978635326028, -0.011023219674825668, -0.00012051333033014089, -9.536738616588991e-07, -2.8371408916427754e-05, -0.09904919564723969, -0.0668065994977951, -1.7004508972167969, -0.725691020488739, -0.008161053992807865, -1.5020257706055418e-05, -0.004581905901432037, -0.022332603111863136], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "\n"], "logprobs": [-0.0075799706391990185, -5.280832192511298e-05, -4.7444173105759546e-05, -7.652943895664066e-05, -0.40825024247169495], "finish_reason": "stop"}], "metrics": {"energy": 375.0474458370208, "energy_per_token": 1.9533721137344833, "time": 13.176917, "time_per_token": 0.06862977604166666}}
{"outputs": [{"text": " isinstance(k, int) and k > 0:", "tokens": [" isinstance", "(", "k", ",", " int", ")", " and", " k", " >", " ", "0", ":", "\n"], "logprobs": [-2.780823230743408, -0.0005906267906539142, -0.06547880172729492, -0.0010453957365825772, -0.34151700139045715, -0.3396160900592804, -0.20378343760967255, -0.05765676498413086, -1.4036390781402588, -0.0779983252286911, -0.002868587151169777, -0.014920895919203758, -0.051408495754003525], "finish_reason": "stop"}, {"text": " ValueError(\"'k' must be a non-negative integer\")", "tokens": [" Value", "Error", "(", "\"", "'", "k", "'", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -0.2305050790309906, -0.1437573879957199, -0.9894286394119263, -0.0036493625957518816, -0.001900772680528462, -0.11651798337697983, -0.003042475553229451, -0.05675104632973671, -0.04075271636247635, -0.0008314966107718647, -0.0011397063499316573, -0.004253745079040527, -0.4964959919452667, -0.00020787939138244838, -0.004039343912154436], "finish_reason": "stop"}, {"text": " 6371", "tokens": [" ", "6", "3", "7", "1", "\n"], "logprobs": [-0.01035389956086874, -0.0011545903980731964, -0.001420561340637505, -0.0011392300948500633, -0.0024147657677531242, -0.592377781867981], "finish_reason": "stop"}, {"text": " lon1 = math.radians(coord1[0]), math.radians(coord1[1])", "tokens": [" lon", "1", " =", " math", ".", "rad", "ians", "(", "coord", "1", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "1", "[", "1", "])", "\n"], "logprobs": [-0.1862134486436844, -1.680836794548668e-05, -0.10691192746162415, -1.1007015705108643, -8.940656698541716e-06, -0.0027385372668504715, -0.00014184899919200689, -0.0029955299105495214, -0.001729184528812766, -0.0005414212355390191, -0.2381884604692459, -0.005070920567959547, -0.0018120075110346079, -0.000125281119835563, -0.0011252983240410686, -0.0015043619787320495, -1.2874520507466514e-05, -6.580135959666222e-05, -4.994744449504651e-05, -0.00013016807497479022, -0.0009334497735835612, -9.786603914108127e-05, -0.00034600470098666847, -0.00027021096320822835, -0.003432455938309431], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-0.0001110968878492713, -3.0636318115284666e-05, -0.00010191874753218144, -0.0015630420530214906, -0.00036221143091097474, -6.186770770000294e-05, -0.00015710550360381603, -4.577531944960356e-05, -0.0003133521240670234, -0.0004459816846065223, -0.000474936212413013, -0.00016008525562938303, -7.319182623177767e-05, -3.0040289857424796e-05, -0.00016032364510465413, -0.0015367376618087292, -1.6927575416048057e-05, -0.00020776021119672805, -5.8530047681415454e-05, -0.0003461238811723888, -0.00022206225548870862, -1.0609570381348021e-05, -0.00023815179883968085, -8.821448318485636e-06, -0.0005061537376604974], "finish_reason": "stop"}, {"text": " math.radians(lat2 - lat1)", "tokens": [" math", ".", "rad", "ians", "(", "lat", "2", " -", " lat", "1", ")", "\n"], "logprobs": [-1.5246844291687012, -2.145764938177308e-06, -0.31727471947669983, -1.2397689715726301e-05, -0.006648799404501915, -0.15758013725280762, -0.037795111536979675, -0.12442383170127869, -0.0006602014764212072, -0.00015114595589693636, -0.00034791138023138046, -0.003541984362527728], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.0001699779968475923, -0.00010024998482549563, -0.000797192333266139, -5.030505417380482e-05, -4.494089080253616e-05, -0.00011634149996098131], "finish_reason": "stop"}, {"text": " math.sin(dlat/2)**2 + math.cos(lat1) * math.cos(lat2) * math.sin(dlon/2)**2", "tokens": [" math", ".", "sin", "(", "d", "lat", "/", "2", ")**", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " math", ".", "sin", "(", "dl", "on", "/", "2", ")**", "2", "\n"], "logprobs": [-0.3568124771118164, -4.768370445162873e-07, -0.11230190098285675, -0.0003084660565946251, -0.0009662011871114373, -5.6980417866725475e-05, -1.3376317024230957, -0.0005684667266905308, -0.03219687566161156, -9.583967766957358e-05, -0.0013324677711352706, -0.0038035206962376833, -3.111314072157256e-05, -0.0167726781219244, -2.6702524337451905e-05, -0.0003567297535482794, -0.011155261658132076, -0.3381213843822479, -0.00045658653834834695, -0.0012546057114377618, -0.00013743886665906757, -0.0020252210088074207, -1.3112935448589269e-05, -0.0005876483046449721, -5.9602869441732764e-05, -0.0006571040721610188, -0.0011723319767042994, -0.00965107325464487, -0.0002300474588992074, -0.0001578206429257989, -2.9801878554280847e-05, -0.0001512651506345719, -2.7417760065873154e-05, -0.0012160295154899359, -2.658331868587993e-05, -0.00022396916756406426, -4.6967357775429264e-05, -0.0006865289760753512], "finish_reason": "stop"}, {"text": " 2 * math.asin(math.sqrt(a))", "tokens": [" ", "2", " *", " math", ".", "as", "in", "(", "math", ".", "sqrt", "(", "a", "))", "\n"], "logprobs": [-0.0008505540899932384, -0.00015579440514557064, -0.01990603469312191, -0.004584278911352158, -4.768370445162873e-07, -0.43266192078590393, -4.768360213347478e-06, -0.0007488307310268283, -0.003285963786765933, -1.0728830375228426e-06, -0.0001419681793777272, -1.5020257706055418e-05, -0.000105375460407231, -0.00028546550311148167, -0.0032717054709792137], "finish_reason": "stop"}, {"text": " RADIUS_EARTH_KM * c", "tokens": [" R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", " *", " c", "\n"], "logprobs": [-0.43860846757888794, -4.577531944960356e-05, -6.794906312279636e-06, -6.544376083184034e-05, -4.291525328881107e-06, -9.059865078597795e-06, -2.0265558760002023e-06, -8.940656698541716e-06, -3.0517112463712692e-05, -0.0001209901092806831, -0.007522825617343187, -0.0009457168052904308, -0.1914309859275818], "finish_reason": "stop"}, {"text": " [calculate_distance(point, target) for point in data.values]", "tokens": [" [", "calculate", "_", "distance", "(", "point", ",", " target", ")", " for", " point", " in", " data", ".", "values", "]", "\n"], "logprobs": [-1.0533065795898438, -0.05482972040772438, -1.1205610462639015e-05, -6.01988795096986e-05, -0.02071414329111576, -2.7562263011932373, -0.016565166413784027, -0.013871924951672554, -0.0036879638209939003, -0.019323553889989853, -0.05285630002617836, -0.00013863079948350787, -0.005751252174377441, -0.1597510278224945, -0.4280223250389099, -0.1900947540998459, -0.03548704832792282], "finish_reason": "stop"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.20644550025463104, -0.00027497802511788905, -0.03250064700841904, -0.0002668739762157202, -0.0002623452164698392, -0.00044526674901135266, -9.536697689327411e-06, -0.06927384436130524, -0.09208505600690842, -0.0018217648612335324, -0.007786398753523827, -0.0678272470831871], "finish_reason": "stop"}, {"text": " data.iloc[nearest_indices].to_numpy()", "tokens": [" data", ".", "il", "oc", "[", "ne", "arest", "_", "indices", "]", ".", "to", "_", "numpy", "()", "\n"], "logprobs": [-0.25098568201065063, -0.03187881037592888, -0.2115774154663086, -6.079655122448457e-06, -0.0019351581577211618, -0.011534549295902252, -0.00011395759065635502, -7.152555099310121e-07, -2.2649508537142538e-05, -0.08821478486061096, -0.0635538324713707, -0.23417288064956665, -2.109982233378105e-05, -0.10930420458316803, -0.01019083522260189, -0.07598628848791122], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "\n"], "logprobs": [-0.008383085019886494, -5.471556869451888e-05, -6.258291978156194e-05, -8.463501580990851e-05, -0.38457441329956055], "finish_reason": "stop"}], "metrics": {"energy": 430.6905615081786, "energy_per_token": 1.9576843704917208, "time": 13.9788265, "time_per_token": 0.06354012045454546}}
{"outputs": [{"text": " not isinstance(k, int):", "tokens": [" not", " isinstance", "(", "k", ",", " int", "):", "\n"], "logprobs": [-0.42849767208099365, -0.10607624053955078, -0.0005781171494163573, -0.0960288867354393, -0.0007917130133137107, -0.027842888608574867, -0.581300675868988, -0.02165401354432106], "finish_reason": "stop"}, {"text": " ValueError(\"'k' must be a non-negative integer\")", "tokens": [" Value", "Error", "(", "\"", "'", "k", "'", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -0.2305050790309906, -0.1437573879957199, -0.9894286394119263, -0.0036493625957518816, -0.001900772680528462, -0.11651798337697983, -0.003042475553229451, -0.05675104632973671, -0.04075271636247635, -0.0008314966107718647, -0.0011397063499316573, -0.004253745079040527, -0.4964959919452667, -0.00020787939138244838, -0.004039343912154436], "finish_reason": "stop"}, {"text": " 6371", "tokens": [" ", "6", "3", "7", "1", "\n"], "logprobs": [-0.01035389956086874, -0.0011545903980731964, -0.001420561340637505, -0.0011392300948500633, -0.0024147657677531242, -0.592377781867981], "finish_reason": "stop"}, {"text": " lon1 = math.radians(coord1[0]), math.radians(coord1[1])", "tokens": [" lon", "1", " =", " math", ".", "rad", "ians", "(", "coord", "1", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "1", "[", "1", "])", "\n"], "logprobs": [-0.1862134486436844, -1.680836794548668e-05, -0.10691192746162415, -1.1007015705108643, -8.940656698541716e-06, -0.0027385372668504715, -0.00014184899919200689, -0.0029955299105495214, -0.001729184528812766, -0.0005414212355390191, -0.2381884604692459, -0.005070920567959547, -0.0018120075110346079, -0.000125281119835563, -0.0011252983240410686, -0.0015043619787320495, -1.2874520507466514e-05, -6.580135959666222e-05, -4.994744449504651e-05, -0.00013016807497479022, -0.0009334497735835612, -9.786603914108127e-05, -0.00034600470098666847, -0.00027021096320822835, -0.003432455938309431], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-0.0001110968878492713, -3.0636318115284666e-05, -0.00010191874753218144, -0.0015630420530214906, -0.00036221143091097474, -6.186770770000294e-05, -0.00015710550360381603, -4.577531944960356e-05, -0.0003133521240670234, -0.0004459816846065223, -0.000474936212413013, -0.00016008525562938303, -7.319182623177767e-05, -3.0040289857424796e-05, -0.00016032364510465413, -0.0015367376618087292, -1.6927575416048057e-05, -0.00020776021119672805, -5.8530047681415454e-05, -0.0003461238811723888, -0.00022206225548870862, -1.0609570381348021e-05, -0.00023815179883968085, -8.821448318485636e-06, -0.0005061537376604974], "finish_reason": "stop"}, {"text": " lat2 - lat1", "tokens": [" lat", "2", " -", " lat", "1", "\n"], "logprobs": [-0.3400987982749939, -0.0848902016878128, -0.05274571105837822, -0.0002932118659373373, -8.511180931236595e-05, -0.0019751342479139566], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.00015710550360381603, -0.00011383838864276186, -0.00063744728686288, -4.672895011026412e-05, -4.827859811484814e-05, -9.77468371274881e-05], "finish_reason": "stop"}, {"text": " math.sin(dlat/2)**2 + math.cos(lat1)*math.cos(lat2)*(math.sin(dlon/2)**2)", "tokens": [" math", ".", "sin", "(", "d", "lat", "/", "2", ")**", "2", " +", " math", ".", "cos", "(", "lat", "1", ")*", "math", ".", "cos", "(", "lat", "2", ")*(", "math", ".", "sin", "(", "dl", "on", "/", "2", ")**", "2", ")", "\n"], "logprobs": [-0.3568793833255768, -4.768370445162873e-07, -0.1019272431731224, -0.0003203832311555743, -0.0010190776083618402, -5.8530047681415454e-05, -1.2337545156478882, -0.0005573864909820259, -0.03543320298194885, -7.772143726469949e-05, -0.0014460355741903186, -0.004208636935800314, -1.823885577323381e-05, -0.020863592624664307, -2.5152843591058627e-05, -0.00035089056473225355, -0.008469495922327042, -1.3684108257293701, -0.00555459875613451, -3.4570634852570947e-06, -0.0004232226056046784, -1.3589766240329482e-05, -0.0017056216020137072, -0.000105375460407231, -0.20632582902908325, -0.0015331668546423316, -1.1920922133867862e-06, -3.58813522325363e-05, -1.1920858014491387e-05, -0.0002540027489885688, -3.8980677345534787e-05, -0.0012184107908979058, -4.017272294731811e-05, -0.0024528198409825563, -9.154854342341423e-05, -0.00036030475166626275, -0.0006783091812394559], "finish_reason": "stop"}, {"text": " 2 * math.asin(math.sqrt(a))", "tokens": [" ", "2", " *", " math", ".", "as", "in", "(", "math", ".", "sqrt", "(", "a", "))", "\n"], "logprobs": [-0.0009683449170552194, -0.0002094287920044735, -0.02228608727455139, -0.004647168796509504, -4.768370445162873e-07, -0.25124356150627136, -5.364403477869928e-06, -0.0005957497633062303, -0.0029138748068362474, -1.0728830375228426e-06, -0.00013839241000823677, -1.4662635294371285e-05, -0.00013696208770852536, -0.00026043839170597494, -0.003438633633777499], "finish_reason": "stop"}, {"text": " math.sqrt(c) * RADIUS_EARTH_KM", "tokens": [" math", ".", "sqrt", "(", "c", ")", " *", " R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", "\n"], "logprobs": [-2.5427825450897217, -2.3841830625315197e-06, -1.285955786705017, -0.009663115255534649, -0.3447086811065674, -0.6249006390571594, -0.028653647750616074, -0.010451464913785458, -1.3589766240329482e-05, -6.794906312279636e-06, -6.592056161025539e-05, -1.1920922133867862e-06, -9.059865078597795e-06, -1.6689286894688848e-06, -4.768360213347478e-06, -3.9219088648678735e-05, -0.00012790338951162994, -0.22808821499347687], "finish_reason": "stop"}, {"text": " [calculate_distance(coord, target) for coord in data.values]", "tokens": [" [", "calculate", "_", "distance", "(", "coord", ",", " target", ")", " for", " coord", " in", " data", ".", "values", "]", "\n"], "logprobs": [-1.1109358072280884, -0.046388063579797745, -8.940656698541716e-06, -6.890059739816934e-05, -0.01702726259827614, -1.8228850364685059, -0.08065536618232727, -0.015155521221458912, -0.0061329505406320095, -0.01945403590798378, -0.0375424288213253, -0.00026901919045485556, -0.005140658468008041, -0.19582827389240265, -0.5089161396026611, -0.17021290957927704, -0.03534586727619171], "finish_reason": "stop"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.21707908809185028, -0.00023874769976828247, -0.03302844986319542, -0.00021717573690693825, -0.0004391897819004953, -0.00044645831803791225, -1.07287787614041e-05, -0.07203855365514755, -0.08992960304021835, -0.0018017739057540894, -0.008075090125203133, -0.06891573220491409], "finish_reason": "stop"}, {"text": " data.to_numpy()[nearest_indices]", "tokens": [" data", ".", "to", "_", "numpy", "()[", "ne", "arest", "_", "indices", "]", "\n"], "logprobs": [-0.23833397030830383, -0.03198191896080971, -2.246828317642212, -0.006294189020991325, -0.0014180614380165935, -0.011541973799467087, -0.003127804258838296, -0.0002454218047205359, -8.344646857949556e-07, -1.8358061424805783e-05, -0.045449864119291306, -0.05987946689128876], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "\n"], "logprobs": [-0.008374100551009178, -5.8887653722194955e-05, -5.709961988031864e-05, -5.9602869441732764e-05, -0.4030348062515259], "finish_reason": "stop"}], "metrics": {"energy": 422.68157702064514, "energy_per_token": 2.0223998900509335, "time": 13.774953, "time_per_token": 0.06590886602870813}}
{"outputs": [{"text": " not isinstance(k, int) or k < 0:", "tokens": [" not", " isinstance", "(", "k", ",", " int", ")", " or", " k", " <", " ", "0", ":", "\n"], "logprobs": [-0.42849767208099365, -0.10607624053955078, -0.0005781171494163573, -0.0960288867354393, -0.0007917130133137107, -0.027842888608574867, -0.819847047328949, -0.02922944724559784, -0.04074951261281967, -0.0691075474023819, -0.005433552898466587, -0.09914679080247879, -0.014808965846896172, -0.016751108691096306], "finish_reason": "stop"}, {"text": " ValueError(\"'k' must be a non-negative integer\")", "tokens": [" Value", "Error", "(", "\"", "'", "k", "'", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -0.2305050790309906, -0.1437573879957199, -0.9894286394119263, -0.0036493625957518816, -0.001900772680528462, -0.11651798337697983, -0.003042475553229451, -0.05675104632973671, -0.04075271636247635, -0.0008314966107718647, -0.0011397063499316573, -0.004253745079040527, -0.4964959919452667, -0.00020787939138244838, -0.004039343912154436], "finish_reason": "stop"}, {"text": " 6371.0", "tokens": [" ", "6", "3", "7", "1", ".", "0", "\n"], "logprobs": [-0.01035389956086874, -0.0011545903980731964, -0.001420561340637505, -0.0011392300948500633, -0.0024147657677531242, -2.871157646179199, -0.1337057203054428, -0.6045730710029602], "finish_reason": "stop"}, {"text": " lng1 = math.radians(coord1[0]), math.radians(coord1[1])", "tokens": [" l", "ng", "1", " =", " math", ".", "rad", "ians", "(", "coord", "1", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "1", "[", "1", "])", "\n"], "logprobs": [-2.2866175174713135, -0.0024679224006831646, -4.672895011026412e-05, -0.05972743034362793, -1.3269758224487305, -8.4638240878121e-06, -0.004190474282950163, -0.0001627074379939586, -0.003649600315839052, -0.0025100174825638533, -0.00042060110718011856, -0.16874167323112488, -0.005777090322226286, -0.002008446492254734, -0.0001820160250645131, -0.001608150894753635, -0.0014734136639162898, -1.9788545614574105e-05, -6.69933797325939e-05, -8.439661905867979e-05, -0.00018976318824570626, -0.001369610894471407, -0.00013457823661156, -0.00039188333903439343, -0.00039736481267027557, -0.00458012567833066], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-0.00010716341057559475, -2.5510462364763953e-05, -0.00010466027742950246, -0.0017953482456505299, -0.0006449526408687234, -5.686121585313231e-05, -0.00017414960893802345, -3.58813522325363e-05, -0.00025519452174194157, -0.00044312194222584367, -0.0004338276921771467, -0.0001858300092862919, -7.92710343375802e-05, -3.111314072157256e-05, -0.0002150304353563115, -0.0017387047410011292, -1.6093124941107817e-05, -0.00020275443966966122, -5.900685573578812e-05, -0.00046957432641647756, -0.00022754464589525014, -1.0251946150674485e-05, -0.00021753329201601446, -1.0847986231965479e-05, -0.00045885046711191535], "finish_reason": "stop"}, {"text": " lat1 - lat2", "tokens": [" lat", "1", " -", " lat", "2", "\n"], "logprobs": [-0.30621257424354553, -2.476421594619751, -0.0174828190356493, -0.00021252757869660854, -7.319182623177767e-05, -0.0022225696593523026], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.0001911934232339263, -0.000120751719805412, -0.0007357274298556149, -4.541770613286644e-05, -4.660974445869215e-05, -0.00011121608258690685], "finish_reason": "stop"}, {"text": " math.sin(dlat / 2)**2 + math.cos(lat1) * math.cos(lat2) * math.sin(dlon / 2)**2", "tokens": [" math", ".", "sin", "(", "d", "lat", " /", " ", "2", ")**", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " math", ".", "sin", "(", "dl", "on", " /", " ", "2", ")**", "2", "\n"], "logprobs": [-0.30660322308540344, -4.768370445162873e-07, -0.11108461022377014, -0.0003296785580459982, -0.000920706195756793, -4.577531944960356e-05, -0.279359370470047, -0.0005578630371019244, -2.5629668016335927e-05, -0.3805098533630371, -0.00010632903286023065, -0.0017203782917931676, -0.00481671467423439, -2.9682672902708873e-05, -0.012403611093759537, -2.8013790142722428e-05, -0.0003275334893260151, -0.010411000810563564, -0.007925610058009624, -0.00027843413408845663, -0.0011503038695082068, -0.00020644917094614357, -0.009472544305026531, -1.1920858014491387e-05, -0.0007682471186853945, -5.066266385256313e-05, -0.0003129946126136929, -0.001859127776697278, -0.030490603297948837, -0.0002731903805397451, -0.00015472168161068112, -4.100715523236431e-05, -0.00020108585886191577, -3.45700973412022e-05, -0.0024462793953716755, -0.001032296335324645, -1.4305012882687151e-05, -0.0032399799674749374, -3.421248038648628e-05, -0.0005841932725161314], "finish_reason": "stop"}, {"text": " 2 * math.asin(math.sqrt(a))", "tokens": [" ", "2", " *", " math", ".", "as", "in", "(", "math", ".", "sqrt", "(", "a", "))", "\n"], "logprobs": [-0.0009968079393729568, -0.00017069313616957515, -0.02117292582988739, -0.005080053117126226, -4.768370445162873e-07, -0.23534592986106873, -4.768360213347478e-06, -0.0008470999309793115, -0.0035733438562601805, -1.0728830375228426e-06, -0.00012516192509792745, -1.549708758830093e-05, -0.00012206286191940308, -0.0002456601650919765, -0.003008009400218725], "finish_reason": "stop"}, {"text": " RADIUS_EARTH_KM * c", "tokens": [" R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", " *", " c", "\n"], "logprobs": [-0.43611884117126465, -6.532455881824717e-05, -5.722029527532868e-06, -6.723177648382261e-05, -4.529942543740617e-06, -7.152531907195225e-06, -1.9073468138230965e-06, -8.34461570775602e-06, -2.5987286790041253e-05, -0.00010239553375868127, -0.00834951177239418, -0.0009463122696615756, -0.2166483849287033], "finish_reason": "stop"}, {"text": " [calculate_distance(row, target) for row in data]", "tokens": [" [", "calculate", "_", "distance", "(", "row", ",", " target", ")", " for", " row", " in", " data", "]", "\n"], "logprobs": [-1.153442144393921, -0.05005747452378273, -1.1920858014491387e-05, -5.61460001335945e-05, -0.021182263270020485, -1.5250730514526367, -0.301492303609848, -0.021204788237810135, -0.004170055501163006, -0.010057131759822369, -0.4499276280403137, -0.0001308832288486883, -0.0030688594561070204, -3.021331310272217, -0.030114274471998215], "finish_reason": "stop"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.20784123241901398, -0.00029237763374112546, -0.030303960666060448, -0.000198821333469823, -0.0003771070914808661, -0.00041738382424227893, -1.2040065485052764e-05, -0.0660812184214592, -0.06997758150100708, -0.0017226393101736903, -0.008887732401490211, -0.06745479255914688], "finish_reason": "stop"}, {"text": " data.iloc[nearest_indices].to_numpy()", "tokens": [" data", ".", "il", "oc", "[", "ne", "arest", "_", "indices", "]", ".", "to", "_", "numpy", "()", "\n"], "logprobs": [-0.25399094820022583, -0.03247098997235298, -0.20237667858600616, -7.629365427419543e-06, -0.0017446548445150256, -0.012184709310531616, -0.0001538873475510627, -7.152555099310121e-07, -1.8000440832111053e-05, -0.09056886285543442, -0.07588750869035721, -0.2681522071361542, -1.9311717551317997e-05, -0.09232660382986069, -0.007878774777054787, -0.06783504784107208], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "\n"], "logprobs": [-0.007861034013330936, -7.009260298218578e-05, -7.271502545336261e-05, -6.842378934379667e-05, -0.39083993434906006], "finish_reason": "stop"}], "metrics": {"energy": 414.1536466560365, "energy_per_token": 1.8997873699818189, "time": 14.421574, "time_per_token": 0.06615400917431193}}
{"outputs": [{"text": " k < 0:", "tokens": [" k", " <", " ", "0", ":", "\n"], "logprobs": [-1.6484607458114624, -0.23642800748348236, -0.006035672966390848, -0.08516820520162582, -0.4216938614845276, -0.015105383470654488], "finish_reason": "stop"}, {"text": " ValueError(\"k must be a non-negative integer\")", "tokens": [" Value", "Error", "(", "\"", "k", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -0.2305050790309906, -0.1437573879957199, -0.8765403032302856, -0.10855693370103836, -0.0020247451029717922, -0.07357322424650192, -0.056977637112140656, -0.001706930692307651, -0.0014292511623352766, -0.006044915411621332, -0.21033808588981628, -0.00019298121333122253, -0.004107610322535038], "finish_reason": "stop"}, {"text": " 6371", "tokens": [" ", "6", "3", "7", "1", "\n"], "logprobs": [-0.010060318745672703, -0.00115863885730505, -0.0013044904917478561, -0.0010546842822805047, -0.0023651740048080683, -0.5970315933227539], "finish_reason": "stop"}, {"text": " lon1 = coord1", "tokens": [" lon", "1", " =", " coord", "1", "\n"], "logprobs": [-0.186264306306839, -1.7762025890988298e-05, -0.09546072036027908, -0.6333194971084595, -0.0028565814718604088, -0.2989170253276825], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-9.393251093570143e-05, -2.5748875486897305e-05, -9.941560711013153e-05, -0.0014886498684063554, -0.0004618293314706534, -6.0794889577664435e-05, -0.0001802282058633864, -3.5523738915799186e-05, -0.0003250309091527015, -0.00041762212640605867, -0.0003405229654163122, -0.00018010901112575084, -9.369411418447271e-05, -4.017272294731811e-05, -0.00021789084712509066, -0.0017251383978873491, -1.3232143828645349e-05, -0.0002040654799202457, -9.83428253675811e-05, -0.0005606033373624086, -0.00023684080224484205, -7.748573807475623e-06, -0.0002261144545627758, -8.22540732769994e-06, -0.0004611144249793142], "finish_reason": "stop"}, {"text": " lat2 - lat1", "tokens": [" lat", "2", " -", " lat", "1", "\n"], "logprobs": [-0.3258666694164276, -0.08085483312606812, -0.042061954736709595, -0.00022468426323030144, -9.202533692587167e-05, -0.0018230738351121545], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.00017915551143232733, -0.00013100242358632386, -0.0008741371566429734, -5.1973900554003194e-05, -3.9934315282152966e-05, -0.00012230125139467418], "finish_reason": "stop"}, {"text": " math.sin(dlat / 2) ** 2 + math.cos(lat1) * math.cos(lat2) * math.sin(dlon / 2) ** 2", "tokens": [" math", ".", "sin", "(", "d", "lat", " /", " ", "2", ")", " **", " ", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " math", ".", "sin", "(", "dl", "on", " /", " ", "2", ")", " **", " ", "2", "\n"], "logprobs": [-0.36379367113113403, -7.152555099310121e-07, -0.07355960458517075, -0.0003746046277228743, -0.0009378563845530152, -4.9828242481453344e-05, -0.27664273977279663, -0.0004567056894302368, -2.2291887944447808e-05, -1.2140356302261353, -0.0032093231566250324, -0.002066145185381174, -7.748573807475623e-06, -0.009147992357611656, -0.01236275490373373, -2.074220174108632e-05, -0.020969711244106293, -2.992108420585282e-05, -0.00041059168870560825, -0.015019543468952179, -0.00013433984713628888, -0.0005452338373288512, -0.0017171651124954224, -0.00021217002358753234, -0.008329886943101883, -1.0490362910786644e-05, -0.0008331642020493746, -6.294052582234144e-05, -0.0002411313180346042, -0.004808884579688311, -0.031420063227415085, -0.00022480344341602176, -0.00017593742813915014, -5.328513361746445e-05, -0.0005164004978723824, -3.0874729418428615e-05, -0.0019860798493027687, -0.0004592079494614154, -1.3470558769768104e-05, -0.014757048338651657, -6.90197994117625e-05, -0.0013724679592996836, -3.4570634852570947e-06, -0.0006946296198293567], "finish_reason": "stop"}, {"text": " 2 * math.asin(math.sqrt(a))", "tokens": [" ", "2", " *", " math", ".", "as", "in", "(", "math", ".", "sqrt", "(", "a", "))", "\n"], "logprobs": [-0.0009030792862176895, -0.00018165845540352166, -0.021811136975884438, -0.006084253545850515, -4.768370445162873e-07, -0.3168504536151886, -5.602820692729438e-06, -0.0007784912013448775, -0.0023480483796447515, -9.536738616588991e-07, -0.00014375607133843005, -1.6212332411669195e-05, -0.00012134769349358976, -0.0002416080387774855, -0.0035113366320729256], "finish_reason": "stop"}, {"text": " RADIUS_EARTH_KM * c", "tokens": [" R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", " *", " c", "\n"], "logprobs": [-0.483416348695755, -6.639736966462806e-05, -5.960446742392378e-06, -5.1973900554003194e-05, -4.529942543740617e-06, -7.152531907195225e-06, -2.264974000354414e-06, -8.940656698541716e-06, -2.6225699912174605e-05, -0.00013326710904948413, -0.007097034715116024, -0.00082601752365008, -0.18446487188339233], "finish_reason": "stop"}, {"text": " [calculate_distance(target, row) for i, row in data.iterrows()]", "tokens": [" [", "calculate", "_", "distance", "(", "target", ",", " row", ")", " for", " i", ",", " row", " in", " data", ".", "iter", "rows", "()", "]", "\n"], "logprobs": [-1.160175085067749, -0.05152988061308861, -8.940656698541716e-06, -5.769562994828448e-05, -0.02018645964562893, -2.1451377868652344, -0.013171685859560966, -1.063305377960205, -0.1322951465845108, -0.011822867207229137, -2.6570050716400146, -0.0038934156764298677, -0.01769857294857502, -0.00026294111739844084, -0.008734237402677536, -0.0023497133515775204, -0.003274794900789857, -0.00530822342261672, -0.0001931004080688581, -0.007158701308071613, -0.020663466304540634], "finish_reason": "stop"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.17636647820472717, -0.0002747396647464484, -0.032781947404146194, -0.0002047805901383981, -0.0003003622987307608, -0.0005720409681089222, -1.0251946150674485e-05, -0.0535532608628273, -0.06431916356086731, -0.0016811060486361384, -0.00805664248764515, -0.06858130544424057], "finish_reason": "stop"}, {"text": " data.iloc[nearest_indices]", "tokens": [" data", ".", "il", "oc", "[", "ne", "arest", "_", "indices", "]", "\n"], "logprobs": [-0.28558868169784546, -0.032673727720975876, -0.19811512529850006, -7.033323527139146e-06, -0.0016655157087370753, -0.011421886272728443, -0.0001559135998832062, -8.344646857949556e-07, -1.8000440832111053e-05, -0.09123481065034866, -2.619462251663208], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "\n"], "logprobs": [-0.009510566480457783, -5.125868119648658e-05, -5.876845170860179e-05, -7.688703772146255e-05, -0.4072031080722809], "finish_reason": "stop"}], "metrics": {"energy": 452.55638061904926, "energy_per_token": 2.369405134131148, "time": 14.621708, "time_per_token": 0.07655344502617802}}
{"outputs": [{"text": " not isinstance(k, int):", "tokens": [" not", " isinstance", "(", "k", ",", " int", "):", "\n"], "logprobs": [-0.42849767208099365, -0.10607624053955078, -0.0005781171494163573, -0.0960288867354393, -0.0007917130133137107, -0.027842888608574867, -0.581300675868988, -0.02165401354432106], "finish_reason": "stop"}, {"text": " ValueError(\"The k must be a non-negative integer.\")", "tokens": [" Value", "Error", "(", "\"", "The", " k", " must", " be", " a", " non", "-", "negative", " integer", ".", "\"", ")", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -0.2305050790309906, -0.1437573879957199, -2.7784910202026367, -3.3381216526031494, -1.2406564950942993, -0.005947985220700502, -0.11191079765558243, -0.07582574337720871, -0.005635327193886042, -0.004066769964993, -0.012325193732976913, -0.6517184376716614, -0.009256306104362011, -0.00043847484630532563, -0.0039177583530545235], "finish_reason": "stop"}, {"text": " 6371", "tokens": [" ", "6", "3", "7", "1", "\n"], "logprobs": [-0.010060318745672703, -0.00115863885730505, -0.0013044904917478561, -0.0010546842822805047, -0.0023651740048080683, -0.5970315933227539], "finish_reason": "stop"}, {"text": " lon1 = coord1", "tokens": [" lon", "1", " =", " coord", "1", "\n"], "logprobs": [-0.186264306306839, -1.7762025890988298e-05, -0.09546072036027908, -0.6333194971084595, -0.0028565814718604088, -0.2989170253276825], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-9.393251093570143e-05, -2.5748875486897305e-05, -9.941560711013153e-05, -0.0014886498684063554, -0.0004618293314706534, -6.0794889577664435e-05, -0.0001802282058633864, -3.5523738915799186e-05, -0.0003250309091527015, -0.00041762212640605867, -0.0003405229654163122, -0.00018010901112575084, -9.369411418447271e-05, -4.017272294731811e-05, -0.00021789084712509066, -0.0017251383978873491, -1.3232143828645349e-05, -0.0002040654799202457, -9.83428253675811e-05, -0.0005606033373624086, -0.00023684080224484205, -7.748573807475623e-06, -0.0002261144545627758, -8.22540732769994e-06, -0.0004611144249793142], "finish_reason": "stop"}, {"text": " lat2 - lat1", "tokens": [" lat", "2", " -", " lat", "1", "\n"], "logprobs": [-0.3258666694164276, -0.08085483312606812, -0.042061954736709595, -0.00022468426323030144, -9.202533692587167e-05, -0.0018230738351121545], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.00017915551143232733, -0.00013100242358632386, -0.0008741371566429734, -5.1973900554003194e-05, -3.9934315282152966e-05, -0.00012230125139467418], "finish_reason": "stop"}, {"text": " math.sin(dlat / 2)**2 + math.cos(lat1) * math.cos(lat2) * math.sin(dlon / 2)**2", "tokens": [" math", ".", "sin", "(", "d", "lat", " /", " ", "2", ")**", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " math", ".", "sin", "(", "dl", "on", " /", " ", "2", ")**", "2", "\n"], "logprobs": [-0.36379367113113403, -7.152555099310121e-07, -0.07355960458517075, -0.0003746046277228743, -0.0009378563845530152, -4.9828242481453344e-05, -0.27664273977279663, -0.0004567056894302368, -2.2291887944447808e-05, -0.3988730013370514, -0.00011205045302631333, -0.002004758222028613, -0.00391799584031105, -3.6477376852417365e-05, -0.012972603552043438, -2.5748875486897305e-05, -0.0002919009421020746, -0.009316776879131794, -0.005116464104503393, -0.00021514961554203182, -0.001105293515138328, -0.00015245705435518175, -0.0030685027595609426, -1.2636104656849056e-05, -0.0005043664714321494, -5.304672595229931e-05, -0.0002978596603497863, -0.0029361017514020205, -0.02071601152420044, -0.00019739109848160297, -0.00014745102089364082, -4.339123915997334e-05, -0.0001941730733960867, -4.124556289752945e-05, -0.0030673143919557333, -0.001004667836241424, -1.3947389561508317e-05, -0.0024284415412694216, -3.635817120084539e-05, -0.0006906984490342438], "finish_reason": "stop"}, {"text": " 2 * math.asin(math.sqrt(a))", "tokens": [" ", "2", " *", " math", ".", "as", "in", "(", "math", ".", "sqrt", "(", "a", "))", "\n"], "logprobs": [-0.0009030792862176895, -0.00018165845540352166, -0.021811136975884438, -0.006084253545850515, -4.768370445162873e-07, -0.3168504536151886, -5.602820692729438e-06, -0.0007784912013448775, -0.0023480483796447515, -9.536738616588991e-07, -0.00014375607133843005, -1.6212332411669195e-05, -0.00012134769349358976, -0.0002416080387774855, -0.0035113366320729256], "finish_reason": "stop"}, {"text": " RADIUS_EARTH_KM * c  # Distance in kilometers", "tokens": [" R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", " *", " c", "  ", "#", " Distance", " in", " kilometers", "\n"], "logprobs": [-0.483416348695755, -6.639736966462806e-05, -5.960446742392378e-06, -5.1973900554003194e-05, -4.529942543740617e-06, -7.152531907195225e-06, -2.264974000354414e-06, -8.940656698541716e-06, -2.6225699912174605e-05, -0.00013326710904948413, -0.007097034715116024, -0.00082601752365008, -1.9356627464294434, -0.00026294111739844084, -0.3285783529281616, -0.05634311959147453, -0.03573990240693092, -0.026820043101906776], "finish_reason": "stop"}, {"text": " [calculate_distance(target, row) for _, row in data.iterrows()]", "tokens": [" [", "calculate", "_", "distance", "(", "target", ",", " row", ")", " for", " _", ",", " row", " in", " data", ".", "iter", "rows", "()", "]", "\n"], "logprobs": [-1.160175085067749, -0.05152988061308861, -8.940656698541716e-06, -5.769562994828448e-05, -0.02018645964562893, -2.1451377868652344, -0.013171685859560966, -1.063305377960205, -0.1322951465845108, -0.011822867207229137, -0.8226392865180969, -0.0028714400250464678, -0.012030777521431446, -0.00080195686314255, -0.0013304438907653093, -0.005083967000246048, -0.006253792904317379, -0.0017471539322286844, -0.00017295771976932883, -0.005469358526170254, -0.021732402965426445], "finish_reason": "stop"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.17636647820472717, -0.0002747396647464484, -0.032781947404146194, -0.0002047805901383981, -0.0003003622987307608, -0.0005720409681089222, -1.0251946150674485e-05, -0.0535532608628273, -0.06431916356086731, -0.0016811060486361384, -0.00805664248764515, -0.06858130544424057], "finish_reason": "stop"}, {"text": " [data.to_numpy()[i] for i in nearest_indices]", "tokens": [" [", "data", ".", "to", "_", "numpy", "()[", "i", "]", " for", " i", " in", " nearest", "_", "indices", "]", "\n"], "logprobs": [-1.95381498336792, -0.3231959342956543, -0.051937054842710495, -2.965099573135376, -0.0005165196489542723, -0.0017592919757589698, -0.01402510330080986, -0.19604279100894928, -0.05923274904489517, -0.011050689965486526, -2.062299427052494e-05, -4.2199197196168825e-05, -0.0038091023452579975, -4.768370445162873e-07, -7.629365427419543e-06, -0.011481637135148048, -0.00512381736189127], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "\n"], "logprobs": [-0.008866582065820694, -5.6503606174374e-05, -6.246371776796877e-05, -6.508615479106084e-05, -0.36505451798439026], "finish_reason": "stop"}], "metrics": {"energy": 455.63684403038013, "energy_per_token": 2.255627940744456, "time": 15.227423, "time_per_token": 0.07538328217821783}}
{"outputs": [{"text": " not isinstance(k, int) or k < 0:", "tokens": [" not", " isinstance", "(", "k", ",", " int", ")", " or", " k", " <", " ", "0", ":", "\n"], "logprobs": [-0.42849767208099365, -0.10607624053955078, -0.0005781171494163573, -0.0960288867354393, -0.0007917130133137107, -0.027842888608574867, -0.819847047328949, -0.02922944724559784, -0.04074951261281967, -0.0691075474023819, -0.005433552898466587, -0.09914679080247879, -0.014808965846896172, -0.016751108691096306], "finish_reason": "stop"}, {"text": " ValueError(\"k must be a non-negative integer\")", "tokens": [" Value", "Error", "(", "\"", "k", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -0.2305050790309906, -0.1437573879957199, -0.8765403032302856, -0.10855693370103836, -0.0020247451029717922, -0.07357322424650192, -0.056977637112140656, -0.001706930692307651, -0.0014292511623352766, -0.006044915411621332, -0.21033808588981628, -0.00019298121333122253, -0.004107610322535038], "finish_reason": "stop"}, {"text": " 6371", "tokens": [" ", "6", "3", "7", "1", "\n"], "logprobs": [-0.010060318745672703, -0.00115863885730505, -0.0013044904917478561, -0.0010546842822805047, -0.0023651740048080683, -0.5970315933227539], "finish_reason": "stop"}, {"text": " lon1 = np.radians(coord1)", "tokens": [" lon", "1", " =", " np", ".", "rad", "ians", "(", "coord", "1", ")", "\n"], "logprobs": [-0.186264306306839, -1.7762025890988298e-05, -0.09546072036027908, -2.8971152305603027, -5.578839045483619e-05, -0.32020071148872375, -0.00023266946664080024, -0.04817015305161476, -0.00423036003485322, -0.0006478118011727929, -0.4350413978099823, -0.8962332010269165], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-9.393251093570143e-05, -2.5748875486897305e-05, -9.941560711013153e-05, -0.0014886498684063554, -0.0004618293314706534, -6.0794889577664435e-05, -0.0001802282058633864, -3.5523738915799186e-05, -0.0003250309091527015, -0.00041762212640605867, -0.0003405229654163122, -0.00018010901112575084, -9.369411418447271e-05, -4.017272294731811e-05, -0.00021789084712509066, -0.0017251383978873491, -1.3232143828645349e-05, -0.0002040654799202457, -9.83428253675811e-05, -0.0005606033373624086, -0.00023684080224484205, -7.748573807475623e-06, -0.0002261144545627758, -8.22540732769994e-06, -0.0004611144249793142], "finish_reason": "stop"}, {"text": " lat2 - lat1", "tokens": [" lat", "2", " -", " lat", "1", "\n"], "logprobs": [-0.3258666694164276, -0.08085483312606812, -0.042061954736709595, -0.00022468426323030144, -9.202533692587167e-05, -0.0018230738351121545], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.00017915551143232733, -0.00013100242358632386, -0.0008741371566429734, -5.1973900554003194e-05, -3.9934315282152966e-05, -0.00012230125139467418], "finish_reason": "stop"}, {"text": " (math.sin(dlat / 2) ** 2) + (math.cos(lat1) * math.cos(lat2) * (math.sin(dlon / 2) ** 2))", "tokens": [" (", "math", ".", "sin", "(", "d", "lat", " /", " ", "2", ")", " **", " ", "2", ")", " +", " (", "math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " (", "math", ".", "sin", "(", "dl", "on", " /", " ", "2", ")", " **", " ", "2", "))", "\n"], "logprobs": [-1.3216965198516846, -0.0902266800403595, -2.3841855067985307e-07, -0.0069485921412706375, -9.83428253675811e-05, -0.0006915323319844902, -5.4238757002167404e-05, -0.33557817339897156, -0.0004686211177613586, -1.5020257706055418e-05, -0.8464043140411377, -0.015941666439175606, -0.001293299370445311, -1.8358061424805783e-05, -0.32659202814102173, -0.0023600601125508547, -0.05503542348742485, -0.017100507393479347, -9.047575440490618e-05, -0.10045965760946274, -5.1616290875244886e-05, -0.0004337085410952568, -0.010799769312143326, -0.0007200032705441117, -0.0005492847412824631, -0.030548762530088425, -0.0007783720502629876, -0.009474669583141804, -9.298280929215252e-06, -0.000573351513594389, -5.686121585313231e-05, -0.011042083613574505, -0.00651450315490365, -0.06019144877791405, -0.0007514513563364744, -6.9141146923357155e-06, -4.017272294731811e-05, -1.537788011773955e-05, -0.00022754464589525014, -7.331102824537084e-05, -0.0023029730655252934, -0.00041154498467221856, -9.417489309271332e-06, -0.005452641285955906, -0.0003524397616274655, -0.0006277974462136626, -1.1324817933200393e-05, -0.0017440598458051682, -0.0005619138828478754], "finish_reason": "stop"}, {"text": " 2 * math.asin(math.sqrt(a))", "tokens": [" ", "2", " *", " math", ".", "as", "in", "(", "math", ".", "sqrt", "(", "a", "))", "\n"], "logprobs": [-0.0009196343016810715, -0.00016735584358684719, -0.021637098863720894, -0.004702580161392689, -4.768370445162873e-07, -0.2317914515733719, -5.602820692729438e-06, -0.0007061848300509155, -0.0032417625188827515, -1.0728830375228426e-06, -0.0001380348257953301, -1.5616295058862306e-05, -0.00014161060971673578, -0.00022587609419133514, -0.0033179253805428743], "finish_reason": "stop"}, {"text": " c * RADIUS_EARTH_KM", "tokens": [" c", " *", " R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", "\n"], "logprobs": [-1.8174989223480225, -0.05513831228017807, -0.005889917258173227, -1.3828182090946939e-05, -8.22540732769994e-06, -6.711257447022945e-05, -1.0728830375228426e-06, -9.179073458653875e-06, -2.0265558760002023e-06, -4.6491513785440475e-06, -2.288792165927589e-05, -8.880697714630514e-05, -0.29754018783569336], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.02079439163208, -0.02790989726781845], "finish_reason": "stop"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.19114241003990173, -0.000248401309363544, -0.030114389955997467, -0.0002002515539061278, -0.0002961912250611931, -0.0003738896339200437, -8.702239938429557e-06, -0.0665724128484726, -0.07339190691709518, -0.0019326595356687903, -0.008925540372729301, -0.06534827500581741], "finish_reason": "stop"}, {"text": " data.iloc[nearest_indices, :].to_numpy()", "tokens": [" data", ".", "il", "oc", "[", "ne", "arest", "_", "indices", ",", " :", "]", ".", "to", "_", "numpy", "()", "\n"], "logprobs": [-0.2798682451248169, -0.032717570662498474, -0.21871183812618256, -7.152531907195225e-06, -0.0015919642755761743, -0.00995929166674614, -0.00011622230522334576, -8.344646857949556e-07, -2.396077979938127e-05, -2.6864211559295654, -0.02657165378332138, -0.031349822878837585, -0.07368862628936768, -0.3294300436973572, -9.572047565598041e-05, -0.0943962037563324, -0.007507917936891317, -0.07996032387018204], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "\n"], "logprobs": [-0.009132045321166515, -5.590759246842936e-05, -6.48477507638745e-05, -7.009260298218578e-05, -0.4297422170639038], "finish_reason": "stop"}], "metrics": {"energy": 487.0075806961059, "energy_per_token": 2.4596342459399287, "time": 15.064303, "time_per_token": 0.07608233838383839}}
{"outputs": [{"text": " k < 0 or not isinstance(k, int):", "tokens": [" k", " <", " ", "0", " or", " not", " isinstance", "(", "k", ",", " int", "):", "\n"], "logprobs": [-1.6484607458114624, -0.23642800748348236, -0.006035672966390848, -0.08516820520162582, -1.1210823059082031, -0.27988454699516296, -0.16733472049236298, -0.0006492413813248277, -0.003346678102388978, -0.0015905360924080014, -0.01432774681597948, -0.013491288758814335, -0.019991690292954445], "finish_reason": "stop"}, {"text": " ValueError('k must be a non-negative integer')", "tokens": [" Value", "Error", "('", "k", " must", " be", " a", " non", "-", "negative", " integer", "')", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -1.6672230958938599, -0.3376762866973877, -0.17633379995822906, -0.0030859727412462234, -0.0946008712053299, -0.06347887217998505, -0.0025869496166706085, -0.001450082752853632, -0.007667988538742065, -0.10608106851577759, -0.002156553091481328], "finish_reason": "stop"}, {"text": " 6371  # in km", "tokens": [" ", "6", "3", "7", "1", "  ", "#", " in", " km", "\n"], "logprobs": [-0.009556381031870842, -0.0011865011183544993, -0.0014024670235812664, -0.0010849310783669353, -0.00224956963211298, -1.1231300830841064, -0.002188075101003051, -3.1400156021118164, -1.1138912439346313, -0.04625740647315979], "finish_reason": "stop"}, {"text": " lon1 = math.radians(coord1[0]), math.radians(coord1[1])", "tokens": [" lon", "1", " =", " math", ".", "rad", "ians", "(", "coord", "1", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "1", "[", "1", "])", "\n"], "logprobs": [-0.1863720566034317, -1.549708758830093e-05, -0.11258590966463089, -1.2564059495925903, -8.34461570775602e-06, -0.002830429933965206, -0.00015889335190877318, -0.002363865962252021, -0.0018753099720925093, -0.0005868143052794039, -0.15216507017612457, -0.005318895447999239, -0.0016724183224141598, -0.0001284993631998077, -0.0010937429033219814, -0.002032121177762747, -1.728519782773219e-05, -7.009260298218578e-05, -6.925819616299123e-05, -0.00018261195509694517, -0.0008945039589889348, -0.0001102625101339072, -0.0003190723655279726, -0.00029416524921543896, -0.0033776871860027313], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-0.00011634149996098131, -2.825220326485578e-05, -0.0001081169830285944, -0.0015482831513509154, -0.0005477358354255557, -8.451581379631534e-05, -0.00013743886665906757, -3.504691630951129e-05, -0.0002840353990904987, -0.0004287039046175778, -0.00043049128726124763, -0.0001760566228767857, -7.795983401592821e-05, -3.4927710657939315e-05, -0.00016604475968051702, -0.0010721894213929772, -1.5139465176616795e-05, -0.00020144341397099197, -9.202533692587167e-05, -0.000535821367520839, -0.0002611534437164664, -1.156323378381785e-05, -0.0002317160106031224, -1.1205610462639015e-05, -0.0005090133054181933], "finish_reason": "stop"}, {"text": " lat2 - lat1", "tokens": [" lat", "2", " -", " lat", "1", "\n"], "logprobs": [-0.32883700728416443, -0.07847356051206589, -0.04251904785633087, -0.00022790218645241112, -8.380061626667157e-05, -0.0019189768936485052], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.0002033503697020933, -0.00011908298620255664, -0.0009633429581299424, -3.766942609217949e-05, -4.0649541915627196e-05, -0.00010930894495686516], "finish_reason": "stop"}, {"text": " (math.sin(dlat / 2)) ** 2 + math.cos(lat1) * math.cos(lat2) * (math.sin(dlon / 2)) ** 2", "tokens": [" (", "math", ".", "sin", "(", "d", "lat", " /", " ", "2", "))", " **", " ", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " (", "math", ".", "sin", "(", "dl", "on", " /", " ", "2", "))", " **", " ", "2", "\n"], "logprobs": [-1.1180533170700073, -0.11905305087566376, -2.3841855067985307e-07, -0.006753713358193636, -9.965400386136025e-05, -0.000506511190906167, -4.589452510117553e-05, -0.3560912609100342, -0.0005137792322784662, -1.3828182090946939e-05, -0.9055413007736206, -0.2695304751396179, -0.003040217561647296, -2.658331868587993e-05, -0.01929677650332451, -0.22060690820217133, -6.341733387671411e-05, -0.005223792511969805, -8.654219709569588e-05, -0.0007819455349817872, -0.016558248549699783, -0.00044050050200894475, -0.0007728926721028984, -0.013774457387626171, -0.0004574206250254065, -0.001077071763575077, -3.302042750874534e-05, -0.001036107074469328, -5.531158240046352e-05, -0.0003971264814026654, -0.004648237023502588, -0.013098858296871185, -0.006322145462036133, -1.1920928244535389e-07, -3.981510963058099e-05, -0.00010597144137136638, -0.00018773700867313892, -6.115249561844394e-05, -0.003263863269239664, -0.0004574206250254065, -1.3589766240329482e-05, -0.006006760522723198, -0.00401037372648716, -0.002001070184633136, -4.291525328881107e-06, -0.0011204162146896124], "finish_reason": "stop"}, {"text": " 2 * math.asin(math.sqrt(a))", "tokens": [" ", "2", " *", " math", ".", "as", "in", "(", "math", ".", "sqrt", "(", "a", "))", "\n"], "logprobs": [-0.0009035557159222662, -0.00017736769223120064, -0.020692309364676476, -0.004473559092730284, -4.768370445162873e-07, -0.25245168805122375, -5.125986263010418e-06, -0.0007721779984422028, -0.0033004595898091793, -9.536738616588991e-07, -0.0001006075763143599, -1.680836794548668e-05, -0.00010835537250386551, -0.00023314618738368154, -0.0039004215504974127], "finish_reason": "stop"}, {"text": " c * RADIUS_EARTH_KM  # Distance in kilometers", "tokens": [" c", " *", " R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", "  ", "#", " Distance", " in", " kilometers", "\n"], "logprobs": [-1.4783481359481812, -0.0576261542737484, -0.004979708231985569, -1.549708758830093e-05, -6.198863957251888e-06, -7.1403817855753e-05, -8.344646857949556e-07, -7.510157047363464e-06, -2.0265558760002023e-06, -4.410734163684538e-06, -2.3007127310847864e-05, -0.00010847456724150106, -1.6105713844299316, -0.0003323002893012017, -0.3113400936126709, -0.04951487481594086, -0.052354928106069565, -0.014228560030460358], "finish_reason": "stop"}, {"text": " [(calculate_distance(x, target), x) for x in data.to_numpy()]", "tokens": [" [(", "calculate", "_", "distance", "(", "x", ",", " target", ")", ",", " x", ")", " for", " x", " in", " data", ".", "to", "_", "numpy", "()", "]", "\n"], "logprobs": [-1.8192092180252075, -0.21122878789901733, -1.8715683836489916e-05, -7.56950321374461e-05, -0.02778260037302971, -3.162304401397705, -0.09671717882156372, -0.07000503689050674, -0.006488920655101538, -0.0006705658161081374, -0.8563154339790344, -0.038557928055524826, -0.015979794785380363, -0.036707017570734024, -0.0002723561483435333, -0.009479628875851631, -0.1679355502128601, -2.102689504623413, -1.811964830267243e-05, -0.1100621372461319, -0.011270194314420223, -0.03113052248954773, -0.03840869292616844], "finish_reason": "stop"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.2003643810749054, -0.00028081765049137175, -0.029158128425478935, -0.00019631843315437436, -0.000309657771140337, -0.0004894727608188987, -1.0609570381348021e-05, -0.06801648437976837, -0.054614946246147156, -0.0019591916352510452, -0.007431718520820141, -0.06709591299295425], "finish_reason": "stop"}, {"text": " data.iloc[nearest_indices].to_numpy()", "tokens": [" data", ".", "il", "oc", "[", "ne", "arest", "_", "indices", "]", ".", "to", "_", "numpy", "()", "\n"], "logprobs": [-0.3166678249835968, -0.03739568218588829, -0.20802569389343262, -8.940656698541716e-06, -0.0018136734142899513, -0.012774894014000893, -0.0001387499796692282, -7.152555099310121e-07, -2.7656173188006505e-05, -0.0938897356390953, -0.07173557579517365, -0.25033074617385864, -2.5033637939486653e-05, -0.08617958426475525, -0.009333193302154541, -0.05197847634553909], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "\n"], "logprobs": [-0.007808872498571873, -5.638440416078083e-05, -5.2569914259947836e-05, -7.414542778860778e-05, -0.38237395882606506], "finish_reason": "stop"}], "metrics": {"energy": 448.489391614914, "energy_per_token": 1.9248471743129356, "time": 15.64008, "time_per_token": 0.06712480686695278}}
{"outputs": [{"text": " not isinstance(data, DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " Data", "Frame", "):", "\n"], "logprobs": [-0.42849767208099365, -0.10607624053955078, -0.0005781171494163573, -2.7813868522644043, -0.024861561134457588, -2.027453899383545, -0.00013743886665906757, -0.22810491919517517, -0.012163746170699596], "finish_reason": "stop"}, {"text": " ValueError(f\"k should be an non-negative integer, got {k}\")", "tokens": [" Value", "Error", "(", "f", "\"", "k", " should", " be", " an", " non", "-", "negative", " integer", ",", " got", " {", "k", "}\"", ")", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -0.2305050790309906, -2.2144951820373535, -0.19523759186267853, -0.6456169486045837, -2.143892288208008, -0.014804384671151638, -1.8425301313400269, -1.7978382110595703, -0.04437839984893799, -0.016689443960785866, -0.08328825235366821, -0.4984753727912903, -1.757724404335022, -0.20538686215877533, -0.07877197116613388, -0.5635960698127747, -0.0004451475979294628, -0.007130058016628027], "finish_reason": "stop"}, {"text": " 6371", "tokens": [" ", "6", "3", "7", "1", "\n"], "logprobs": [-0.012320601381361485, -0.0010526598198339343, -0.0014109190087765455, -0.0010332489619031549, -0.0022910793777555227, -0.6142769455909729], "finish_reason": "stop"}, {"text": " lng1 = coord1", "tokens": [" l", "ng", "1", " =", " coord", "1", "\n"], "logprobs": [-2.2934322357177734, -0.0023099901154637337, -5.5549986427649856e-05, -0.0651138499379158, -0.5241403579711914, -0.0026240460574626923, -0.31221339106559753], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-0.0001072826053132303, -2.7417760065873154e-05, -0.00010108436981681734, -0.0015589953400194645, -0.0004332319076638669, -6.854299135738984e-05, -0.0001538873475510627, -3.242440288886428e-05, -0.00031859567388892174, -0.00042381841922178864, -0.0003666205739136785, -0.0001774868869688362, -9.83428253675811e-05, -3.7788631743751466e-05, -0.00021455370006151497, -0.0020656692795455456, -1.2755313036905136e-05, -0.000205018965061754, -0.00013052565918769687, -0.0003277718205936253, -0.00022551853908225894, -1.2755313036905136e-05, -0.00025781645672395825, -1.2397689715726301e-05, -0.0005918181850574911], "finish_reason": "stop"}, {"text": " lat2 - lat1", "tokens": [" lat", "2", " -", " lat", "1", "\n"], "logprobs": [-0.28986865282058716, -0.07364687323570251, -0.05282927677035332, -0.0002109781780745834, -7.915183232398704e-05, -0.001942058908753097], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.00020168177434243262, -0.00012218205665703863, -0.000842692912556231, -5.066266385256313e-05, -3.671578815556131e-05, -0.00012981049076188356], "finish_reason": "stop"}, {"text": " (math.sin(dlat / 2) ** 2) + (math.cos(lat1) * math.cos(lat2) * (math.sin(dlon / 2) ** 2))", "tokens": [" (", "math", ".", "sin", "(", "d", "lat", " /", " ", "2", ")", " **", " ", "2", ")", " +", " (", "math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " (", "math", ".", "sin", "(", "dl", "on", " /", " ", "2", ")", " **", " ", "2", "))", "\n"], "logprobs": [-1.3474719524383545, -0.08605501055717468, -2.3841855067985307e-07, -0.006201666779816151, -9.7508447652217e-05, -0.0007322729215957224, -5.328513361746445e-05, -0.3051055073738098, -0.0005567907355725765, -1.490105023549404e-05, -0.9225344657897949, -0.013496228493750095, -0.0010371787939220667, -1.966933996300213e-05, -0.4272090196609497, -0.002408343832939863, -0.05541331693530083, -0.013819841668009758, -4.684815212385729e-05, -0.14115352928638458, -5.4834770708112046e-05, -0.0004638549580704421, -0.010523895733058453, -0.000715714821126312, -0.0004894727608188987, -0.024506255984306335, -0.0005576247931458056, -0.011432846076786518, -8.4638240878121e-06, -0.0006017066189087927, -4.9828242481453344e-05, -0.01188330166041851, -0.005849741864949465, -0.05403460934758186, -0.0004804172203876078, -5.483612312673358e-06, -3.731181277544238e-05, -1.3232143828645349e-05, -0.00017927470616996288, -7.295342220459133e-05, -0.0021458473056554794, -0.0004368066438473761, -8.821448318485636e-06, -0.005379249341785908, -0.0003060825983993709, -0.0005830018781125546, -8.940656698541716e-06, -0.0015651845606043935, -0.0007376333815045655], "finish_reason": "stop"}, {"text": " 2 * math.asin(math.sqrt(a))", "tokens": [" ", "2", " *", " math", ".", "as", "in", "(", "math", ".", "sqrt", "(", "a", "))", "\n"], "logprobs": [-0.0008775911992415786, -0.0001736728590913117, -0.021740568801760674, -0.004928108304738998, -4.768370445162873e-07, -0.19543783366680145, -4.887569048150908e-06, -0.0006227937992662191, -0.0032560210675001144, -9.536738616588991e-07, -0.00012516192509792745, -1.3589766240329482e-05, -0.00011598391574807465, -0.0002727136597968638, -0.0034222390968352556], "finish_reason": "stop"}, {"text": " round(c*RADIUS_EARTH_KM, 3)", "tokens": [" round", "(", "c", "*", "R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", ",", " ", "3", ")", "\n"], "logprobs": [-3.047849416732788, -0.04203338176012039, -1.7907215356826782, -2.6528666019439697, -0.015338203869760036, -3.611976353568025e-05, -1.8596476365928538e-05, -0.00011097769311163574, -2.7418097943154862e-06, -6.318072337307967e-06, -1.9073468138230965e-06, -4.529942543740617e-06, -2.5748875486897305e-05, -6.258291978156194e-05, -0.16152800619602203, -0.4181745946407318, -1.8045856952667236, -0.0014356792671605945, -0.4709210693836212], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.0199228525161743, -0.028337927535176277], "finish_reason": "stop"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.22979377210140228, -0.0002628219372127205, -0.031728919595479965, -0.00024423000286333263, -0.0002985746832564473, -0.0004152389301452786, -1.0847986231965479e-05, -0.07110236585140228, -0.06428775191307068, -0.002095528645440936, -0.0078073348850011826, -0.06526786834001541], "finish_reason": "stop"}, {"text": " data.iloc[nearest_indices].to_numpy()", "tokens": [" data", ".", "il", "oc", "[", "ne", "arest", "_", "indices", "]", ".", "to", "_", "numpy", "()", "\n"], "logprobs": [-0.2910149097442627, -0.032309070229530334, -0.19439515471458435, -8.583032467868179e-06, -0.0016484970692545176, -0.012039139866828918, -0.0001559135998832062, -8.344646857949556e-07, -2.5033637939486653e-05, -0.08690562099218369, -0.06378906220197678, -0.23047582805156708, -2.372236667724792e-05, -0.11420938372612, -0.010229774750769138, -0.06506660580635071], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.008020929992198944, -5.352353764465079e-05, -4.8874615458771586e-05, -6.508615479106084e-05, -1.580206274986267, -4.410734163684538e-06, -8.344646857949556e-07, -8.034383063204587e-05, -0.00011920218821614981, -0.1867038458585739], "finish_reason": "stop"}], "metrics": {"energy": 420.76365766716003, "energy_per_token": 2.0829884042928715, "time": 14.428892, "time_per_token": 0.07143015841584158}}
{"outputs": [{"text": " not (isinstance(k, int) and k >= 0):", "tokens": [" not", " (", "is", "instance", "(", "k", ",", " int", ")", " and", " k", " >=", " ", "0", "):", "\n"], "logprobs": [-0.42849767208099365, -2.926091194152832, -0.42344167828559875, -0.0006680640508420765, -0.0005129451747052372, -0.09992475062608719, -0.0010424185311421752, -0.025408286601305008, -0.1688777059316635, -0.14795176684856415, -0.04102884232997894, -0.15443649888038635, -0.008637331426143646, -0.0712122768163681, -0.0143471360206604, -0.018869886174798012], "finish_reason": "stop"}, {"text": " ValueError('k must be a non-negative integer')", "tokens": [" Value", "Error", "('", "k", " must", " be", " a", " non", "-", "negative", " integer", "')", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -1.6672230958938599, -0.3376762866973877, -0.17633379995822906, -0.0030859727412462234, -0.0946008712053299, -0.06347887217998505, -0.0025869496166706085, -0.001450082752853632, -0.007667988538742065, -0.10608106851577759, -0.002156553091481328], "finish_reason": "stop"}, {"text": " 6371.0  # km", "tokens": [" ", "6", "3", "7", "1", ".", "0", "  ", "#", " km", "\n"], "logprobs": [-0.009556381031870842, -0.0011865011183544993, -0.0014024670235812664, -0.0010849310783669353, -0.00224956963211298, -2.8289177417755127, -0.13269317150115967, -1.5454376935958862, -0.002061981474980712, -1.1107091903686523, -0.0680171549320221], "finish_reason": "stop"}, {"text": " lon1 = math.radians(coord1[0]), math.radians(coord1[1])", "tokens": [" lon", "1", " =", " math", ".", "rad", "ians", "(", "coord", "1", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "1", "[", "1", "])", "\n"], "logprobs": [-0.18728584051132202, -1.6689160474925302e-05, -0.12701813876628876, -1.221482276916504, -1.0013530300057027e-05, -0.003004800295457244, -0.00014149141497910023, -0.002988874213770032, -0.0022452878765761852, -0.0005069877952337265, -0.2040768414735794, -0.005484533961862326, -0.0017056216020137072, -0.00012790338951162994, -0.00108624086715281, -0.0017861855449154973, -1.549708758830093e-05, -6.472854875028133e-05, -7.343022298300639e-05, -0.00015198028995655477, -0.001110175740905106, -0.00012659224739763886, -0.00032860602368600667, -0.0002926159941125661, -0.0033881422132253647], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-0.00010597144137136638, -2.7417760065873154e-05, -0.00011491115583339706, -0.0015817285748198628, -0.0004256058018654585, -5.113947918289341e-05, -0.00014506718434859067, -3.2782016205601394e-05, -0.0003262225945945829, -0.0004086851258762181, -0.00047874910524114966, -0.0001711698860162869, -0.00010311071673640981, -3.266281055402942e-05, -0.00014983485743869096, -0.0015292390016838908, -1.7046782886609435e-05, -0.00023993951617740095, -6.496695277746767e-05, -0.0003909300430677831, -0.0002256377338198945, -1.0251946150674485e-05, -0.0002640137099660933, -1.0847986231965479e-05, -0.00054058717796579], "finish_reason": "stop"}, {"text": " lat2 - lat1", "tokens": [" lat", "2", " -", " lat", "1", "\n"], "logprobs": [-0.3101785480976105, -0.09504617005586624, -0.06050490215420723, -0.0003051292151212692, -7.903263758635148e-05, -0.0016881275223568082], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.0001760566228767857, -9.262132516596466e-05, -0.0006897454150021076, -4.637133679352701e-05, -4.2676016164477915e-05, -0.00014065706636756659], "finish_reason": "stop"}, {"text": " (", "tokens": [" (", "\n"], "logprobs": [-1.4931422472000122, -2.9937610626220703], "finish_reason": "stop"}, {"text": " 2 * math.asin(math.sqrt(a))", "tokens": [" ", "2", " *", " math", ".", "as", "in", "(", "math", ".", "sqrt", "(", "a", "))", "\n"], "logprobs": [-0.0009696549386717379, -0.0001578206429257989, -0.021168841049075127, -0.004071281291544437, -4.768370445162873e-07, -0.32989874482154846, -6.318072337307967e-06, -0.0006669919239357114, -0.004424069542437792, -9.536738616588991e-07, -0.00013839241000823677, -1.490105023549404e-05, -0.00012265883560758084, -0.0002324311062693596, -0.0028017812874168158], "finish_reason": "stop"}, {"text": " c * RADIUS_EARTH_KM  # Distance in kilometers", "tokens": [" c", " *", " R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", "  ", "#", " Distance", " in", " kilometers", "\n"], "logprobs": [-1.6507803201675415, -0.05560322478413582, -0.006113045383244753, -1.4781842764932662e-05, -7.152531907195225e-06, -7.247662142617628e-05, -1.0728830375228426e-06, -6.794906312279636e-06, -2.0265558760002023e-06, -3.933898824470816e-06, -2.4676019165781327e-05, -0.00012051333033014089, -1.605956792831421, -0.00029869386344216764, -0.30619746446609497, -0.04569235444068909, -0.052740734070539474, -0.013647817075252533], "finish_reason": "stop"}, {"text": " [(calculate_distance(target, row), row) for _, row in data.iterrows()]", "tokens": [" [(", "calculate", "_", "distance", "(", "target", ",", " row", ")", ",", " row", ")", " for", " _", ",", " row", " in", " data", ".", "iter", "rows", "()", "]", "\n"], "logprobs": [-1.8632664680480957, -0.23419316112995148, -2.169585604860913e-05, -9.107174992095679e-05, -0.036755967885255814, -2.2293460369110107, -0.016868799924850464, -1.3186503648757935, -0.2557829022407532, -0.000507464399561286, -0.3157513439655304, -0.05645128712058067, -0.01956533081829548, -0.7986649870872498, -0.004563037771731615, -0.011481637135148048, -0.0007838514284230769, -0.0016246942104771733, -0.004259324166923761, -0.013690267689526081, -0.0026081139221787453, -0.00030322244856506586, -0.00644497899338603, -0.02769007347524166], "finish_reason": "stop"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.20540182292461395, -0.000300600629998371, -0.03281009569764137, -0.00025555206229910254, -0.00029094755882397294, -0.0005240259342826903, -1.0490362910786644e-05, -0.06752243638038635, -0.0670045018196106, -0.0016928878612816334, -0.008123807609081268, -0.06354968994855881], "finish_reason": "stop"}, {"text": " [list(data.iloc[index].values) for index in nearest_indices]", "tokens": [" [", "list", "(", "data", ".", "il", "oc", "[", "index", "]", ".", "values", ")", " for", " index", " in", " nearest", "_", "indices", "]", "\n"], "logprobs": [-2.054245710372925, -2.632059335708618, -0.0010530170984566212, -0.03114357963204384, -0.03725580498576164, -0.15984612703323364, -4.8636207793606445e-05, -0.0036117101553827524, -1.9095451831817627, -0.2152903825044632, -0.0007027302053757012, -0.04355199262499809, -0.039588551968336105, -0.005912789609283209, -5.900685573578812e-05, -0.00010561384988250211, -0.003073731902986765, -4.172316494077677e-06, -6.9141146923357155e-06, -0.007769838906824589, -0.006493539549410343], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "\n"], "logprobs": [-0.008191914297640324, -5.793403761344962e-05, -5.376194530981593e-05, -7.509902934543788e-05, -0.4387519061565399], "finish_reason": "stop"}], "metrics": {"energy": 377.23660611343365, "energy_per_token": 1.8956613372534354, "time": 13.367555, "time_per_token": 0.0671736432160804}}
{"outputs": [{"text": " not isinstance(k, int):", "tokens": [" not", " isinstance", "(", "k", ",", " int", "):", "\n"], "logprobs": [-0.42849767208099365, -0.10607624053955078, -0.0005781171494163573, -0.0960288867354393, -0.0007917130133137107, -0.027842888608574867, -0.581300675868988, -0.02165401354432106], "finish_reason": "stop"}, {"text": " ValueError(\"k must be a non-negative integer\")", "tokens": [" Value", "Error", "(", "\"", "k", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -0.2305050790309906, -0.1437573879957199, -0.8765403032302856, -0.10855693370103836, -0.0020247451029717922, -0.07357322424650192, -0.056977637112140656, -0.001706930692307651, -0.0014292511623352766, -0.006044915411621332, -0.21033808588981628, -0.00019298121333122253, -0.004107610322535038], "finish_reason": "stop"}, {"text": " 6371", "tokens": [" ", "6", "3", "7", "1", "\n"], "logprobs": [-0.010060318745672703, -0.00115863885730505, -0.0013044904917478561, -0.0010546842822805047, -0.0023651740048080683, -0.5970315933227539], "finish_reason": "stop"}, {"text": " lng1 = coord1", "tokens": [" l", "ng", "1", " =", " coord", "1", "\n"], "logprobs": [-2.2875006198883057, -0.0024667331017553806, -5.209310256759636e-05, -0.06514512747526169, -0.5398041009902954, -0.002688248408958316, -0.2946809232234955], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-0.00010406429646536708, -2.7417760065873154e-05, -9.798523387871683e-05, -0.001279607880860567, -0.00044848397374153137, -4.482168878894299e-05, -0.00014280252798926085, -3.4927710657939315e-05, -0.0003678122302517295, -0.00046039948938414454, -0.00041083001997321844, -0.00017176583060063422, -9.214453893946484e-05, -3.40932747349143e-05, -0.00017712931730784476, -0.001900891656987369, -1.3947389561508317e-05, -0.00018499570433050394, -0.00011920218821614981, -0.00041547726141288877, -0.00022802136663813144, -1.1324817933200393e-05, -0.0002485204895492643, -1.2636104656849056e-05, -0.0005247407825663686], "finish_reason": "stop"}, {"text": " lat2 - lat1", "tokens": [" lat", "2", " -", " lat", "1", "\n"], "logprobs": [-0.3244877755641937, -0.08099786937236786, -0.049434661865234375, -0.00023636408150196075, -7.343022298300639e-05, -0.001775832730345428], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.0002157455455744639, -0.0001255195093108341, -0.0008802115335129201, -4.362964682513848e-05, -4.541770613286644e-05, -0.00011753345461329445], "finish_reason": "stop"}, {"text": " math.sin(dlat / 2) ** 2 + math.cos(lat1) * math.cos(lat2) * math.sin(dlon / 2) ** 2", "tokens": [" math", ".", "sin", "(", "d", "lat", " /", " ", "2", ")", " **", " ", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " math", ".", "sin", "(", "dl", "on", " /", " ", "2", ")", " **", " ", "2", "\n"], "logprobs": [-0.3242064416408539, -4.768370445162873e-07, -0.08882111310958862, -0.0002867764269467443, -0.0008350699208676815, -5.1020273531321436e-05, -0.3541494309902191, -0.0004439560289029032, -2.3603161025675945e-05, -1.2448694705963135, -0.002863119123503566, -0.0020166554022580385, -9.179073458653875e-06, -0.0086548225954175, -0.0096397390589118, -2.0146166207268834e-05, -0.014763391576707363, -3.40932747349143e-05, -0.00034505134681239724, -0.010817811824381351, -0.00010311071673640981, -0.0005611990345641971, -0.001440797932446003, -0.0001618731184862554, -0.0037921201437711716, -8.821448318485636e-06, -0.0006977269076742232, -4.994744449504651e-05, -0.00017617580306250602, -0.004066769964993, -0.026511985808610916, -0.00021860594279132783, -0.00018761781393550336, -4.625213477993384e-05, -0.00038235029205679893, -2.932505594799295e-05, -0.001802606973797083, -0.0005827635759487748, -1.4662635294371285e-05, -0.012884227558970451, -6.401333666872233e-05, -0.0018008219776675105, -2.861018856492592e-06, -0.000553335587028414], "finish_reason": "stop"}, {"text": " 2 * math.asin(math.sqrt(a))", "tokens": [" ", "2", " *", " math", ".", "as", "in", "(", "math", ".", "sqrt", "(", "a", "))", "\n"], "logprobs": [-0.0009118927991949022, -0.00016604475968051702, -0.021220894530415535, -0.004562919028103352, -4.768370445162873e-07, -0.24860216677188873, -6.437280717364047e-06, -0.0006027788622304797, -0.003782975720241666, -1.0728830375228426e-06, -0.00014125302550382912, -1.2040065485052764e-05, -9.989239333663136e-05, -0.0002554328821133822, -0.003407863900065422], "finish_reason": "stop"}, {"text": " c * RADIUS_EARTH_KM", "tokens": [" c", " *", " R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", "\n"], "logprobs": [-1.4574828147888184, -0.04521586000919342, -0.00588636239990592, -1.4305012882687151e-05, -7.152531907195225e-06, -6.770858453819528e-05, -9.536738616588991e-07, -6.6756979322235566e-06, -2.622600959512056e-06, -5.8412379075889476e-06, -2.5510462364763953e-05, -0.00011264643399044871, -0.24979138374328613], "finish_reason": "stop"}, {"text": " [(calculate_distance(d, target), d) for d in data.to_numpy()]", "tokens": [" [(", "calculate", "_", "distance", "(", "d", ",", " target", ")", ",", " d", ")", " for", " d", " in", " data", ".", "to", "_", "numpy", "()", "]", "\n"], "logprobs": [-1.757358193397522, -0.2443951666355133, -2.2172682292875834e-05, -7.92710343375802e-05, -0.041023239493370056, -2.6894102096557617, -0.315914511680603, -0.027588725090026855, -0.008845431730151176, -0.0006622266955673695, -0.2819867730140686, -0.04915551468729973, -0.014270516112446785, -0.008933693170547485, -0.00010358751023886725, -0.008449400775134563, -0.14000767469406128, -2.0627317428588867, -1.0251946150674485e-05, -0.10849597305059433, -0.00983110535889864, -0.04500482231378555, -0.03283882141113281], "finish_reason": "stop"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.20640215277671814, -0.00026294111739844084, -0.029073486104607582, -0.00022265815641731024, -0.0003331344632897526, -0.0004239375703036785, -9.894321920000948e-06, -0.07496044784784317, -0.07225283980369568, -0.0020775655284523964, -0.007333029061555862, -0.07536870241165161], "finish_reason": "stop"}, {"text": " data.iloc[nearest_indices].to_numpy()", "tokens": [" data", ".", "il", "oc", "[", "ne", "arest", "_", "indices", "]", ".", "to", "_", "numpy", "()", "\n"], "logprobs": [-0.26052698493003845, -0.03463437408208847, -0.1915593445301056, -6.794906312279636e-06, -0.001456748810596764, -0.011727556586265564, -0.0001705739414319396, -8.344646857949556e-07, -2.109982233378105e-05, -0.09743744879961014, -0.06102418899536133, -0.2459246665239334, -2.4676019165781327e-05, -0.08437538892030716, -0.008224783465266228, -0.07868966460227966], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "\n"], "logprobs": [-0.007077622227370739, -4.95898348162882e-05, -5.376194530981593e-05, -7.676783570786938e-05, -0.44042032957077026], "finish_reason": "stop"}], "metrics": {"energy": 413.193666530609, "energy_per_token": 2.0556898832368606, "time": 13.77905, "time_per_token": 0.06855248756218905}}
{"outputs": [{"text": " k <= 0:", "tokens": [" k", " <=", " ", "0", ":", "\n"], "logprobs": [-1.6484607458114624, -2.0804355144500732, -0.016894938424229622, -0.0024183334317058325, -0.27998295426368713, -0.017280373722314835], "finish_reason": "stop"}, {"text": " ValueError('k must be a non-negative integer')", "tokens": [" Value", "Error", "('", "k", " must", " be", " a", " non", "-", "negative", " integer", "')", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -1.6672230958938599, -0.3376762866973877, -0.17633379995822906, -0.0030859727412462234, -0.0946008712053299, -0.06347887217998505, -0.0025869496166706085, -0.001450082752853632, -0.007667988538742065, -0.10608106851577759, -0.002156553091481328], "finish_reason": "stop"}, {"text": " 6371  # km", "tokens": [" ", "6", "3", "7", "1", "  ", "#", " km", "\n"], "logprobs": [-0.009556381031870842, -0.0011865011183544993, -0.0014024670235812664, -0.0010849310783669353, -0.00224956963211298, -1.1231300830841064, -0.002188075101003051, -1.1995362043380737, -0.06853990256786346], "finish_reason": "stop"}, {"text": " long1 = math.radians(coord1[0]), math.radians(coord1[1])", "tokens": [" long", "1", " =", " math", ".", "rad", "ians", "(", "coord", "1", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "1", "[", "1", "])", "\n"], "logprobs": [-2.7186405658721924, -0.0002535260282456875, -0.04057370498776436, -1.4288640022277832, -9.775113539944869e-06, -0.0033163807820528746, -0.00022825974156148732, -0.0026415237225592136, -0.002266816096380353, -0.000573351513594389, -0.3270506262779236, -0.007122719660401344, -0.0016445695655420423, -0.0002097863471135497, -0.0025207193102687597, -0.0026062114629894495, -2.288792165927589e-05, -6.937739817658439e-05, -8.284702198579907e-05, -9.941560711013153e-05, -0.001595415873453021, -0.00016878610767889768, -0.0004226268210913986, -0.0002760506176855415, -0.004359859973192215], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-0.00013195598148740828, -2.777537883957848e-05, -9.285972191719338e-05, -0.0016988381976261735, -0.0004107108688913286, -5.781483559985645e-05, -0.0001805857609724626, -4.1126360883936286e-05, -0.00026353701832704246, -0.0004247716860845685, -0.0004843492351938039, -0.00018630675913300365, -0.00011729506513802335, -3.635817120084539e-05, -0.00014995403762441128, -0.002026291796937585, -1.490105023549404e-05, -0.0002416080387774855, -0.0001532914029667154, -0.0004198861715849489, -0.00023636408150196075, -1.5616295058862306e-05, -0.0002917817619163543, -1.3351351299206726e-05, -0.0005383234238252044], "finish_reason": "stop"}, {"text": " lat2 - lat1", "tokens": [" lat", "2", " -", " lat", "1", "\n"], "logprobs": [-0.32549604773521423, -0.08095620572566986, -0.04723567143082619, -0.0002627027570270002, -8.141662692651153e-05, -0.0019384894985705614], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.00019631843315437436, -0.00011193125828867778, -0.0009120118920691311, -4.8874615458771586e-05, -4.589452510117553e-05, -0.000129691296024248], "finish_reason": "stop"}, {"text": " math.sin(dlat / 2) ** 2 + math.cos(lat1) * math.cos(lat2) * math.sin(dlon / 2) ** 2", "tokens": [" math", ".", "sin", "(", "d", "lat", " /", " ", "2", ")", " **", " ", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " math", ".", "sin", "(", "dl", "on", " /", " ", "2", ")", " **", " ", "2", "\n"], "logprobs": [-0.39603376388549805, -7.152555099310121e-07, -0.12578648328781128, -0.0003303935518488288, -0.0011136289685964584, -5.376194530981593e-05, -0.3094393312931061, -0.0005497612874023616, -2.47952248173533e-05, -1.1841835975646973, -0.0031175841577351093, -0.001849489752203226, -7.986990567587782e-06, -0.007806506939232349, -0.008052030578255653, -2.729855441430118e-05, -0.024671537801623344, -2.682172998902388e-05, -0.00047398300375789404, -0.01280937809497118, -0.0001397035230183974, -0.0007117837085388601, -0.0011825718684121966, -0.00017188502533826977, -0.00891136284917593, -8.4638240878121e-06, -0.0009309487068094313, -5.519237674889155e-05, -0.00019751029321923852, -0.0038536349311470985, -0.020838841795921326, -0.0002787916746456176, -0.00016962042718660086, -5.0424259825376794e-05, -0.0004239375703036785, -4.076874756719917e-05, -0.0018318791408091784, -0.0005298641044646502, -1.3828182090946939e-05, -0.01649305410683155, -7.378782902378589e-05, -0.00158410903532058, -2.622600959512056e-06, -0.000661631056573242], "finish_reason": "stop"}, {"text": " 2 * math.asin(math.sqrt(a))", "tokens": [" ", "2", " *", " math", ".", "as", "in", "(", "math", ".", "sqrt", "(", "a", "))", "\n"], "logprobs": [-0.0009402383584529161, -0.000163541772053577, -0.022169731557369232, -0.004144294653087854, -4.768370445162873e-07, -0.2252429574728012, -4.768360213347478e-06, -0.0005911033367738128, -0.0021172980777919292, -9.536738616588991e-07, -0.00012003655137959868, -1.2993727978027891e-05, -0.00016723664884921163, -0.00022575691400561482, -0.003304499201476574], "finish_reason": "stop"}, {"text": " RADIUS_EARTH_KM * c  # Distance in kilometers", "tokens": [" R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", " *", " c", "  ", "#", " Distance", " in", " kilometers", "\n"], "logprobs": [-0.4441867470741272, -6.97350042173639e-05, -6.318072337307967e-06, -5.3165931603871286e-05, -5.125986263010418e-06, -8.106198947643861e-06, -2.50339189733495e-06, -8.106198947643861e-06, -2.3841574147809297e-05, -0.00015138434537220746, -0.009182957001030445, -0.0010222929995507002, -1.8001508712768555, -0.0003522014303598553, -0.3444085121154785, -0.0627126693725586, -0.036538656800985336, -0.01984246075153351], "finish_reason": "stop"}, {"text": " [(calculate_distance(target, coords), coords) for coords in data['Latitude'], data['Longitude']]", "tokens": [" [(", "calculate", "_", "distance", "(", "target", ",", " coord", "s", ")", ",", " coord", "s", ")", " for", " coord", "s", " in", " data", "['", "Lat", "itude", "']", ",", " data", "['", "Long", "itude", "']", "]", "\n"], "logprobs": [-1.8284647464752197, -0.22762197256088257, -2.2053474822314456e-05, -8.630380034446716e-05, -0.03567203879356384, -2.239898681640625, -0.017776453867554665, -1.027171015739441, -1.7616139650344849, -0.021319622173905373, -0.0009364272118546069, -0.25959742069244385, -0.013641937635838985, -0.03990738466382027, -0.04995451122522354, -0.06637107580900192, -6.806619057897478e-05, -0.00036995718255639076, -0.004513196647167206, -3.1110384464263916, -0.05191713571548462, -0.0014080620603635907, -0.2518049478530884, -0.8437418937683105, -0.06274166703224182, -0.003944831434637308, -0.0006530536338686943, -6.532455881824717e-05, -0.002437717281281948, -0.0404372476041317, -0.014008411206305027], "finish_reason": "stop"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.2009429633617401, -0.00025042734341695905, -0.03314274176955223, -0.0002686616498976946, -0.00039307496626861393, -0.0004804172203876078, -8.702239938429557e-06, -0.073704794049263, -0.07289673388004303, -0.0018856617389246821, -0.008364643901586533, -0.07088784128427505], "finish_reason": "stop"}, {"text": " data.iloc[nearest_indices]", "tokens": [" data", ".", "il", "oc", "[", "ne", "arest", "_", "indices", "]", "\n"], "logprobs": [-0.3075580596923828, -0.048485804349184036, -0.24121946096420288, -6.437280717364047e-06, -0.0015417367685586214, -0.011427189223468304, -0.00011944057769142091, -7.152555099310121e-07, -2.5033637939486653e-05, -0.10382580757141113, -2.741596221923828], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.008976698853075504, -5.638440416078083e-05, -6.794698856538162e-05, -7.748303323751315e-05, -1.4578078985214233, -4.529942543740617e-06, -8.344646857949556e-07, -5.5549986427649856e-05, -0.000144709600135684, -1.7893716096878052, -0.004730106331408024], "finish_reason": "stop"}], "metrics": {"energy": 455.8446044521333, "energy_per_token": 1.9648474329833332, "time": 15.212334, "time_per_token": 0.06557040517241379}}
{"outputs": [{"text": " not isinstance(k, int):", "tokens": [" not", " isinstance", "(", "k", ",", " int", "):", "\n"], "logprobs": [-0.42849767208099365, -0.10607624053955078, -0.0005781171494163573, -0.0960288867354393, -0.0007917130133137107, -0.027842888608574867, -0.581300675868988, -0.02165401354432106], "finish_reason": "stop"}, {"text": " ValueError(\"k must be a positive integer\")", "tokens": [" Value", "Error", "(", "\"", "k", " must", " be", " a", " positive", " integer", "\"", ")", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -0.2305050790309906, -0.1437573879957199, -0.8765403032302856, -0.10855693370103836, -0.0020247451029717922, -0.07357322424650192, -3.000850200653076, -0.043616700917482376, -0.20473167300224304, -0.00021443451987579465, -0.0037062542978674173], "finish_reason": "stop"}, {"text": " 6371  # Earth's radius in kilometers", "tokens": [" ", "6", "3", "7", "1", "  ", "#", " Earth", "'", "s", " radius", " in", " kilometers", "\n"], "logprobs": [-0.010060318745672703, -0.00115863885730505, -0.0013044904917478561, -0.0010546842822805047, -0.0023651740048080683, -1.1609315872192383, -0.002258847001940012, -2.5603885650634766, -0.6837099194526672, -0.0001908358681248501, -0.06632299721240997, -0.4030163288116455, -0.13904526829719543, -0.09563624113798141], "finish_reason": "stop"}, {"text": " lon1, lat2, lon2 = np.deg2rad(coord1), np.deg2rad(coord2)", "tokens": [" lon", "1", ",", " lat", "2", ",", " lon", "2", " =", " np", ".", "deg", "2", "rad", "(", "coord", "1", ")", ",", " np", ".", "deg", "2", "rad", "(", "coord", "2", ")", "\n"], "logprobs": [-0.186264306306839, -1.7762025890988298e-05, -2.401048421859741, -0.02573620155453682, -0.00013648532330989838, -5.304672595229931e-05, -0.00014494798961095512, -3.1709168979432434e-05, -0.002125268103554845, -2.1803059577941895, -0.0001426833332516253, -1.787756323814392, -0.0006158839096315205, -0.0012005510507151484, -0.14224760234355927, -0.007015003357082605, -0.0016236230731010437, -0.18022708594799042, -0.0019866747315973043, -0.0027398450765758753, -0.0001037067049765028, -0.000865680689457804, -2.109982233378105e-05, -2.2649508537142538e-05, -0.0004944770480506122, -0.004927633795887232, -0.0014030622551217675, -0.008426113985478878, -0.13974347710609436], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-0.00010406429646536708, -2.8132995794294402e-05, -8.67805938469246e-05, -0.0013934198068454862, -0.00040665941196493804, -5.376194530981593e-05, -0.0001481661747675389, -3.58813522325363e-05, -0.0003103728231508285, -0.00051771110156551, -0.0004891153075732291, -0.00016866691294126213, -9.357491217087954e-05, -3.838465272565372e-05, -0.00018761781393550336, -0.00186126958578825, -1.3112935448589269e-05, -0.00024423000286333263, -0.00011693747364915907, -0.0003847335756290704, -0.00023552982020191848, -9.894321920000948e-06, -0.0002337421028641984, -1.0967194612021558e-05, -0.0005098473629914224], "finish_reason": "stop"}, {"text": " lat2 - lat1", "tokens": [" lat", "2", " -", " lat", "1", "\n"], "logprobs": [-0.3202163875102997, -0.07922382652759552, -0.04757946729660034, -0.00027509720530360937, -7.939023635117337e-05, -0.001973706530407071], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.00016664070426486433, -0.00012790338951162994, -0.0007460909546352923, -4.8636207793606445e-05, -4.2676016164477915e-05, -0.00012766500003635883], "finish_reason": "stop"}, {"text": " (math.sin(dlat / 2) ** 2) + (math.cos(lat1) * math.cos(lat2) * (math.sin(dlon / 2) ** 2))", "tokens": [" (", "math", ".", "sin", "(", "d", "lat", " /", " ", "2", ")", " **", " ", "2", ")", " +", " (", "math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " (", "math", ".", "sin", "(", "dl", "on", " /", " ", "2", ")", " **", " ", "2", "))", "\n"], "logprobs": [-1.1020827293395996, -0.08186805993318558, -2.3841855067985307e-07, -0.007280722260475159, -9.727005090098828e-05, -0.00062851223628968, -4.470248313737102e-05, -0.30361995100975037, -0.00042012447374872863, -1.3828182090946939e-05, -0.7848246693611145, -0.017479069530963898, -0.0011628062929958105, -1.7523612768854946e-05, -0.4616236686706543, -0.002495748223736882, -0.055562179535627365, -0.011295654810965061, -8.523101132595912e-05, -0.12495747953653336, -4.672895011026412e-05, -0.000433112756581977, -0.008616648614406586, -0.0006003961316309869, -0.0003983181086368859, -0.029447197914123535, -0.000567275274079293, -0.019167209044098854, -9.059865078597795e-06, -0.0009099871967919171, -5.435795901576057e-05, -0.012249242514371872, -0.00806078128516674, -0.049289312213659286, -0.0008809261489659548, -8.583032467868179e-06, -3.3378044463461265e-05, -1.3470558769768104e-05, -0.0003079893649555743, -7.152301259338856e-05, -0.002075543161481619, -0.00038747431244701147, -9.179073458653875e-06, -0.005027391016483307, -0.00033408781746402383, -0.0005127069307491183, -1.1086402082582936e-05, -0.001412823679856956, -0.0006868863711133599], "finish_reason": "stop"}, {"text": " 2 * math.asin(math.sqrt(a))", "tokens": [" ", "2", " *", " math", ".", "as", "in", "(", "math", ".", "sqrt", "(", "a", "))", "\n"], "logprobs": [-0.0009168949909508228, -0.00016342257731594145, -0.02249031886458397, -0.0038294093683362007, -3.576278118089249e-07, -0.26522600650787354, -5.006777428206988e-06, -0.000714404450263828, -0.0036342781968414783, -9.536738616588991e-07, -0.0001433984871255234, -1.6212332411669195e-05, -0.00012182447244413197, -0.00025876989820972085, -0.003649837803095579], "finish_reason": "stop"}, {"text": " RADIUS_EARTH_KM * c", "tokens": [" R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", " *", " c", "\n"], "logprobs": [-0.4851306676864624, -7.068861305015162e-05, -6.198863957251888e-06, -4.994744449504651e-05, -5.722029527532868e-06, -7.867782187531702e-06, -1.5497195136049413e-06, -8.106198947643861e-06, -2.52720492426306e-05, -0.00010322991875000298, -0.008380366489291191, -0.0008189899963326752, -0.2392120063304901], "finish_reason": "stop"}, {"text": " [calculate_distance(i, target) for i in data[['Latitude', 'Longitude']].values.tolist()]", "tokens": [" [", "calculate", "_", "distance", "(", "i", ",", " target", ")", " for", " i", " in", " data", "[", "['", "Lat", "itude", "'", ",", " '", "Long", "itude", "']", "]", ".", "values", ".", "tol", "ist", "()", "]", "\n"], "logprobs": [-1.0828365087509155, -0.05406465008854866, -1.1205610462639015e-05, -5.602679812000133e-05, -0.01982785202562809, -3.4950361251831055, -0.045636776834726334, -0.05195968970656395, -0.004656661301851273, -0.008804784156382084, -0.006477076560258865, -0.00031013446277938783, -0.01325027272105217, -2.36616849899292, -0.011293533258140087, -0.009885875508189201, -3.814624506048858e-05, -0.0009128456003963947, -9.77468371274881e-05, -0.016108956187963486, -3.0040289857424796e-05, -4.529942543740617e-06, -0.00021646064124070108, -0.7768996953964233, -0.0006020640721544623, -0.39389610290527344, -1.5738699436187744, -0.009691450744867325, -2.3841855067985307e-07, -0.004103217739611864, -0.003167257411405444, -0.019816165789961815], "finish_reason": "stop"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.21264398097991943, -0.0002812943421304226, -0.03253549709916115, -0.00021550717065110803, -0.00040558696491643786, -0.0004273931554052979, -1.1444026313256472e-05, -0.0723927840590477, -0.0700131505727768, -0.0018098655855283141, -0.009224887937307358, -0.059062741696834564], "finish_reason": "stop"}, {"text": " data.iloc[nearest_indices].values", "tokens": [" data", ".", "il", "oc", "[", "ne", "arest", "_", "indices", "]", ".", "values", "\n"], "logprobs": [-0.2552982568740845, -0.03810349851846695, -0.22438865900039673, -6.079655122448457e-06, -0.0017914213240146637, -0.012174934148788452, -0.0001401803019689396, -1.0728830375228426e-06, -1.883488948806189e-05, -0.0962957963347435, -0.06596148014068604, -1.7339024543762207, -0.7102627754211426], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0071608321741223335, -6.115249561844394e-05, -5.185469490243122e-05, -7.509902934543788e-05, -1.451298713684082, -3.2186455882765586e-06, -8.344646857949556e-07, -6.723177648382261e-05, -0.00012051333033014089, -0.1611500084400177], "finish_reason": "stop"}], "metrics": {"energy": 446.1623140106201, "energy_per_token": 1.8210706694311025, "time": 15.863111, "time_per_token": 0.0647473918367347}}
{"outputs": [{"text": " not (isinstance(k, int) and k >= 0):", "tokens": [" not", " (", "is", "instance", "(", "k", ",", " int", ")", " and", " k", " >=", " ", "0", "):", "\n"], "logprobs": [-0.42849767208099365, -2.926091194152832, -0.42344167828559875, -0.0006680640508420765, -0.0005129451747052372, -0.09992475062608719, -0.0010424185311421752, -0.025408286601305008, -0.1688777059316635, -0.14795176684856415, -0.04102884232997894, -0.15443649888038635, -0.008637331426143646, -0.0712122768163681, -0.0143471360206604, -0.018869886174798012], "finish_reason": "stop"}, {"text": " ValueError(\"'k' must be a non-negative integer\")", "tokens": [" Value", "Error", "(", "\"", "'", "k", "'", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -0.2305050790309906, -0.1437573879957199, -0.9894286394119263, -0.0036493625957518816, -0.001900772680528462, -0.11651798337697983, -0.003042475553229451, -0.05675104632973671, -0.04075271636247635, -0.0008314966107718647, -0.0011397063499316573, -0.004253745079040527, -0.4964959919452667, -0.00020787939138244838, -0.004039343912154436], "finish_reason": "stop"}, {"text": " 6371", "tokens": [" ", "6", "3", "7", "1", "\n"], "logprobs": [-0.01035389956086874, -0.0011545903980731964, -0.001420561340637505, -0.0011392300948500633, -0.0024147657677531242, -0.592377781867981], "finish_reason": "stop"}, {"text": " lon1 = math.radians(coord1[0]), math.radians(coord1[1])", "tokens": [" lon", "1", " =", " math", ".", "rad", "ians", "(", "coord", "1", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "1", "[", "1", "])", "\n"], "logprobs": [-0.1862134486436844, -1.680836794548668e-05, -0.10691192746162415, -1.1007015705108643, -8.940656698541716e-06, -0.0027385372668504715, -0.00014184899919200689, -0.0029955299105495214, -0.001729184528812766, -0.0005414212355390191, -0.2381884604692459, -0.005070920567959547, -0.0018120075110346079, -0.000125281119835563, -0.0011252983240410686, -0.0015043619787320495, -1.2874520507466514e-05, -6.580135959666222e-05, -4.994744449504651e-05, -0.00013016807497479022, -0.0009334497735835612, -9.786603914108127e-05, -0.00034600470098666847, -0.00027021096320822835, -0.003432455938309431], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-0.0001110968878492713, -3.0636318115284666e-05, -0.00010191874753218144, -0.0015630420530214906, -0.00036221143091097474, -6.186770770000294e-05, -0.00015710550360381603, -4.577531944960356e-05, -0.0003133521240670234, -0.0004459816846065223, -0.000474936212413013, -0.00016008525562938303, -7.319182623177767e-05, -3.0040289857424796e-05, -0.00016032364510465413, -0.0015367376618087292, -1.6927575416048057e-05, -0.00020776021119672805, -5.8530047681415454e-05, -0.0003461238811723888, -0.00022206225548870862, -1.0609570381348021e-05, -0.00023815179883968085, -8.821448318485636e-06, -0.0005061537376604974], "finish_reason": "stop"}, {"text": " math.radians(lat2 - lat1)", "tokens": [" math", ".", "rad", "ians", "(", "lat", "2", " -", " lat", "1", ")", "\n"], "logprobs": [-1.5246844291687012, -2.145764938177308e-06, -0.31727471947669983, -1.2397689715726301e-05, -0.006648799404501915, -0.15758013725280762, -0.037795111536979675, -0.12442383170127869, -0.0006602014764212072, -0.00015114595589693636, -0.00034791138023138046, -0.003541984362527728], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.0001699779968475923, -0.00010024998482549563, -0.000797192333266139, -5.030505417380482e-05, -4.494089080253616e-05, -0.00011634149996098131], "finish_reason": "stop"}, {"text": " math.sin(dlat / 2)**2 + math.cos(lat1) * math.cos(lat2) * math.sin(dlon / 2)**2", "tokens": [" math", ".", "sin", "(", "d", "lat", " /", " ", "2", ")**", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " math", ".", "sin", "(", "dl", "on", " /", " ", "2", ")**", "2", "\n"], "logprobs": [-0.3568124771118164, -4.768370445162873e-07, -0.11230190098285675, -0.0003084660565946251, -0.0009662011871114373, -5.6980417866725475e-05, -0.30544334650039673, -0.0005104430601932108, -2.5033637939486653e-05, -0.36760565638542175, -8.594620157964528e-05, -0.0019769188947975636, -0.004501329269260168, -1.5616295058862306e-05, -0.012270085513591766, -2.884823152271565e-05, -0.00038425691309385, -0.010572966188192368, -0.002918035024777055, -0.00024375328212045133, -0.0010548033751547337, -0.00016151554882526398, -0.0015720878727734089, -9.775113539944869e-06, -0.0005899119423702359, -5.817244164063595e-05, -0.00034814971149899065, -0.002476603025570512, -0.02515385113656521, -0.00014852374442853034, -0.00013457823661156, -3.7788631743751466e-05, -0.00020215852418914437, -3.480850500636734e-05, -0.002541052643209696, -0.0009048658539541066, -1.2993727978027891e-05, -0.002814263105392456, -4.23184028477408e-05, -0.0005528590409085155], "finish_reason": "stop"}, {"text": " 2 * math.asin(math.sqrt(a))", "tokens": [" ", "2", " *", " math", ".", "as", "in", "(", "math", ".", "sqrt", "(", "a", "))", "\n"], "logprobs": [-0.0009222545195370913, -0.00016556799528189003, -0.020885074511170387, -0.004645389039069414, -4.768370445162873e-07, -0.27736696600914, -5.364403477869928e-06, -0.0006485265912488103, -0.0033762615639716387, -9.536738616588991e-07, -0.00012563870404846966, -1.537788011773955e-05, -0.00011503035057103261, -0.00026806574896909297, -0.003037959337234497], "finish_reason": "stop"}, {"text": " RADIUS_EARTH_KM * c", "tokens": [" R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", " *", " c", "\n"], "logprobs": [-0.6032992601394653, -4.684815212385729e-05, -6.198863957251888e-06, -6.460934673668817e-05, -5.125986263010418e-06, -7.152531907195225e-06, -2.264974000354414e-06, -9.65590606938349e-06, -2.5152843591058627e-05, -0.00013004888023715466, -0.009242132306098938, -0.0007668177131563425, -0.20729626715183258], "finish_reason": "stop"}, {"text": " [(calculate_distance(row, target), index) for index, row in data.iterrows()]", "tokens": [" [(", "calculate", "_", "distance", "(", "row", ",", " target", ")", ",", " index", ")", " for", " index", ",", " row", " in", " data", ".", "iter", "rows", "()", "]", "\n"], "logprobs": [-1.7477922439575195, -0.22763508558273315, -1.728519782773219e-05, -8.248942322097719e-05, -0.0314231812953949, -1.8880971670150757, -0.6386486887931824, -0.015160569921135902, -0.005335852038115263, -0.0005230727256275713, -2.506497621536255, -0.04495444893836975, -0.07537168264389038, -0.003036176785826683, -0.00013064485392533243, -0.009734541177749634, -0.0005930095794610679, -0.0039000653196126223, -0.0043446677736938, -0.0043876334093511105, -0.019304493442177773, -0.00028534632292576134, -0.004689172375947237, -0.01807175949215889], "finish_reason": "stop"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.19258157908916473, -0.0002954761730507016, -0.029750533401966095, -0.00018285033002030104, -0.0002673506969586015, -0.00042548662167973816, -9.059865078597795e-06, -0.07468756288290024, -0.05615808442234993, -0.001919809728860855, -0.009124485775828362, -0.06981083750724792], "finish_reason": "stop"}, {"text": " data.to_numpy()[nearest_indices]", "tokens": [" data", ".", "to", "_", "numpy", "()[", "ne", "arest", "_", "indices", "]", "\n"], "logprobs": [-0.2663537263870239, -0.03690372779965401, -2.1954076290130615, -0.004585821647197008, -0.00152757263276726, -0.013865694403648376, -0.0027129771187901497, -0.0003083468764089048, -8.344646857949556e-07, -1.6689160474925302e-05, -0.034384578466415405, -0.061000972986221313], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "\n"], "logprobs": [-0.00977774802595377, -5.376194530981593e-05, -5.686121585313231e-05, -7.235741941258311e-05, -0.43039968609809875], "finish_reason": "stop"}], "metrics": {"energy": 410.3753206062316, "energy_per_token": 1.7998917570448754, "time": 14.824686, "time_per_token": 0.06502055263157895}}
{"outputs": [{"text": " k < 0 or not isinstance(k, int):", "tokens": [" k", " <", " ", "0", " or", " not", " isinstance", "(", "k", ",", " int", "):", "\n"], "logprobs": [-1.6484607458114624, -0.23642800748348236, -0.006035672966390848, -0.08516820520162582, -1.1210823059082031, -0.27988454699516296, -0.16733472049236298, -0.0006492413813248277, -0.003346678102388978, -0.0015905360924080014, -0.01432774681597948, -0.013491288758814335, -0.019991690292954445], "finish_reason": "stop"}, {"text": " ValueError(\"k must be a non-negative integer\")", "tokens": [" Value", "Error", "(", "\"", "k", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -0.2305050790309906, -0.1437573879957199, -0.8765403032302856, -0.10855693370103836, -0.0020247451029717922, -0.07357322424650192, -0.056977637112140656, -0.001706930692307651, -0.0014292511623352766, -0.006044915411621332, -0.21033808588981628, -0.00019298121333122253, -0.004107610322535038], "finish_reason": "stop"}, {"text": " 6371", "tokens": [" ", "6", "3", "7", "1", "\n"], "logprobs": [-0.010060318745672703, -0.00115863885730505, -0.0013044904917478561, -0.0010546842822805047, -0.0023651740048080683, -0.5970315933227539], "finish_reason": "stop"}, {"text": " lon1 = coord1", "tokens": [" lon", "1", " =", " coord", "1", "\n"], "logprobs": [-0.186264306306839, -1.7762025890988298e-05, -0.09546072036027908, -0.6333194971084595, -0.0028565814718604088, -0.2989170253276825], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-9.393251093570143e-05, -2.5748875486897305e-05, -9.941560711013153e-05, -0.0014886498684063554, -0.0004618293314706534, -6.0794889577664435e-05, -0.0001802282058633864, -3.5523738915799186e-05, -0.0003250309091527015, -0.00041762212640605867, -0.0003405229654163122, -0.00018010901112575084, -9.369411418447271e-05, -4.017272294731811e-05, -0.00021789084712509066, -0.0017251383978873491, -1.3232143828645349e-05, -0.0002040654799202457, -9.83428253675811e-05, -0.0005606033373624086, -0.00023684080224484205, -7.748573807475623e-06, -0.0002261144545627758, -8.22540732769994e-06, -0.0004611144249793142], "finish_reason": "stop"}, {"text": " lat2 - lat1", "tokens": [" lat", "2", " -", " lat", "1", "\n"], "logprobs": [-0.3258666694164276, -0.08085483312606812, -0.042061954736709595, -0.00022468426323030144, -9.202533692587167e-05, -0.0018230738351121545], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.00017915551143232733, -0.00013100242358632386, -0.0008741371566429734, -5.1973900554003194e-05, -3.9934315282152966e-05, -0.00012230125139467418], "finish_reason": "stop"}, {"text": " math.sin(dlat/2)**2 + math.cos(lat1) * math.cos(lat2) * math.sin(dlon/2)**2", "tokens": [" math", ".", "sin", "(", "d", "lat", "/", "2", ")**", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " math", ".", "sin", "(", "dl", "on", "/", "2", ")**", "2", "\n"], "logprobs": [-0.36379367113113403, -7.152555099310121e-07, -0.07355960458517075, -0.0003746046277228743, -0.0009378563845530152, -4.9828242481453344e-05, -1.4225759506225586, -0.0005821678787469864, -0.042397137731313705, -8.165503095369786e-05, -0.0015267394483089447, -0.004017259925603867, -2.455681169521995e-05, -0.01618320681154728, -2.2649508537142538e-05, -0.00043752157944254577, -0.009982660412788391, -0.29986491799354553, -0.0004812512779608369, -0.0014579391572624445, -0.00011991735664196312, -0.003856247290968895, -1.7046782886609435e-05, -0.0006443570018745959, -6.401333666872233e-05, -0.0006909366929903626, -0.0012369846226647496, -0.011960811913013458, -0.00019226610311307013, -0.00014006110723130405, -3.0636318115284666e-05, -0.00011932138295378536, -3.2543604902457446e-05, -0.0011619728757068515, -2.658331868587993e-05, -0.0001528146385680884, -4.649054244509898e-05, -0.0006835508393123746], "finish_reason": "stop"}, {"text": " 2 * math.asin(math.sqrt(a))", "tokens": [" ", "2", " *", " math", ".", "as", "in", "(", "math", ".", "sqrt", "(", "a", "))", "\n"], "logprobs": [-0.0011884062550961971, -0.00020585325546562672, -0.030245207250118256, -0.0051108901388943195, -4.768370445162873e-07, -0.22516216337680817, -5.483612312673358e-06, -0.0007538337376900017, -0.0033189947716891766, -1.311301275563892e-06, -0.00011240804451517761, -2.0265373677830212e-05, -0.0001294529065489769, -0.00029047083808109164, -0.0031760509591549635], "finish_reason": "stop"}, {"text": " RADIUS_EARTH_KM * c", "tokens": [" R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", " *", " c", "\n"], "logprobs": [-0.505357563495636, -6.103329360485077e-05, -7.748573807475623e-06, -5.209310256759636e-05, -5.125986263010418e-06, -9.536697689327411e-06, -1.7881377516459906e-06, -9.059865078597795e-06, -2.753696753643453e-05, -0.00011145447206217796, -0.008831016719341278, -0.0008833082392811775, -0.20316913723945618], "finish_reason": "stop"}, {"text": " [calculate_distance(data[['Latitude', 'Longitude']][i], target)", "tokens": [" [", "calculate", "_", "distance", "(", "data", "[", "['", "Lat", "itude", "'", ",", " '", "Long", "itude", "']", "][", "i", "]", ",", " target", ")", "\n"], "logprobs": [-1.1228280067443848, -0.05272942781448364, -9.894321920000948e-06, -6.115249561844394e-05, -0.022779341787099838, -1.9968674182891846, -3.1671435832977295, -0.5211056470870972, -0.00787250604480505, -6.651657167822123e-05, -0.009735485538840294, -4.279521817807108e-05, -0.018476754426956177, -3.7431014789035544e-05, -1.8000440832111053e-05, -0.0012502004392445087, -1.6416512727737427, -0.27586817741394043, -0.04408277943730354, -0.4354252517223358, -0.07583944499492645, -0.007231844589114189, -2.3365285396575928], "finish_reason": "stop"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.2500908076763153, -0.0002548369811847806, -0.02783535234630108, -0.00018988236843142658, -0.0003911683743353933, -0.00041976699139922857, -8.940656698541716e-06, -0.08218753337860107, -0.07437963038682938, -0.001769763883203268, -0.010671926662325859, -0.07295292615890503], "finish_reason": "stop"}, {"text": " data.iloc[nearest_indices].to_numpy()", "tokens": [" data", ".", "il", "oc", "[", "ne", "arest", "_", "indices", "]", ".", "to", "_", "numpy", "()", "\n"], "logprobs": [-0.28009331226348877, -0.028457161039114, -0.22085411846637726, -7.748573807475623e-06, -0.0018748340662568808, -0.010103865526616573, -0.00011872540198964998, -8.344646857949556e-07, -2.47952248173533e-05, -0.10694010555744171, -0.06660408526659012, -0.2391151636838913, -1.9192511899746023e-05, -0.09685493260622025, -0.008958031423389912, -0.07570495456457138], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "\n"], "logprobs": [-0.007902429439127445, -5.769562994828448e-05, -6.09140915912576e-05, -6.69933797325939e-05, -0.3947846591472626], "finish_reason": "stop"}], "metrics": {"energy": 371.2592216300966, "energy_per_token": 1.8656242292969678, "time": 13.171716, "time_per_token": 0.06618952763819096}}
{"outputs": [{"text": " not isinstance(k, int):", "tokens": [" not", " isinstance", "(", "k", ",", " int", "):", "\n"], "logprobs": [-0.42849767208099365, -0.10607624053955078, -0.0005781171494163573, -0.0960288867354393, -0.0007917130133137107, -0.027842888608574867, -0.581300675868988, -0.02165401354432106], "finish_reason": "stop"}, {"text": " ValueError(\"k must be a non-negative integer\")", "tokens": [" Value", "Error", "(", "\"", "k", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -0.2305050790309906, -0.1437573879957199, -0.8765403032302856, -0.10855693370103836, -0.0020247451029717922, -0.07357322424650192, -0.056977637112140656, -0.001706930692307651, -0.0014292511623352766, -0.006044915411621332, -0.21033808588981628, -0.00019298121333122253, -0.004107610322535038], "finish_reason": "stop"}, {"text": " 6371", "tokens": [" ", "6", "3", "7", "1", "\n"], "logprobs": [-0.010060318745672703, -0.00115863885730505, -0.0013044904917478561, -0.0010546842822805047, -0.0023651740048080683, -0.5970315933227539], "finish_reason": "stop"}, {"text": " lon1 = coord1", "tokens": [" lon", "1", " =", " coord", "1", "\n"], "logprobs": [-0.186264306306839, -1.7762025890988298e-05, -0.09546072036027908, -0.6333194971084595, -0.0028565814718604088, -0.2989170253276825], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-9.393251093570143e-05, -2.5748875486897305e-05, -9.941560711013153e-05, -0.0014886498684063554, -0.0004618293314706534, -6.0794889577664435e-05, -0.0001802282058633864, -3.5523738915799186e-05, -0.0003250309091527015, -0.00041762212640605867, -0.0003405229654163122, -0.00018010901112575084, -9.369411418447271e-05, -4.017272294731811e-05, -0.00021789084712509066, -0.0017251383978873491, -1.3232143828645349e-05, -0.0002040654799202457, -9.83428253675811e-05, -0.0005606033373624086, -0.00023684080224484205, -7.748573807475623e-06, -0.0002261144545627758, -8.22540732769994e-06, -0.0004611144249793142], "finish_reason": "stop"}, {"text": " lat2 - lat1", "tokens": [" lat", "2", " -", " lat", "1", "\n"], "logprobs": [-0.3258666694164276, -0.08085483312606812, -0.042061954736709595, -0.00022468426323030144, -9.202533692587167e-05, -0.0018230738351121545], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.00017915551143232733, -0.00013100242358632386, -0.0008741371566429734, -5.1973900554003194e-05, -3.9934315282152966e-05, -0.00012230125139467418], "finish_reason": "stop"}, {"text": " (math.sin(dlat / 2)) ** 2 + math.cos(lat1) * math.cos(lat2) * (math.sin(dlon / 2)) ** 2", "tokens": [" (", "math", ".", "sin", "(", "d", "lat", " /", " ", "2", "))", " **", " ", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " (", "math", ".", "sin", "(", "dl", "on", " /", " ", "2", "))", " **", " ", "2", "\n"], "logprobs": [-1.3216965198516846, -0.0902266800403595, -2.3841855067985307e-07, -0.0069485921412706375, -9.83428253675811e-05, -0.0006915323319844902, -5.4238757002167404e-05, -0.33557817339897156, -0.0004686211177613586, -1.5020257706055418e-05, -0.7881443500518799, -0.28082969784736633, -0.0027120260056108236, -2.455681169521995e-05, -0.016568096354603767, -0.20324288308620453, -6.0794889577664435e-05, -0.0066626546904444695, -7.748303323751315e-05, -0.0007247682078741491, -0.01700183004140854, -0.0005339150666259229, -0.0006112375995144248, -0.014307651668787003, -0.00044431351125240326, -0.0010131231974810362, -3.099393507000059e-05, -0.00100192881654948, -4.851700214203447e-05, -0.0004297763225622475, -0.003708867123350501, -0.011305909603834152, -0.004930362105369568, -3.576278118089249e-07, -4.434487345861271e-05, -0.00011991735664196312, -0.00024077377747744322, -7.521823135903105e-05, -0.0028070115949958563, -0.0004651656490750611, -1.4066597032069694e-05, -0.0064832353964447975, -0.003543053288012743, -0.0022122215013951063, -3.2186455882765586e-06, -0.0010699268896132708], "finish_reason": "stop"}, {"text": " 2 * math.asin(math.sqrt(a))", "tokens": [" ", "2", " *", " math", ".", "as", "in", "(", "math", ".", "sqrt", "(", "a", "))", "\n"], "logprobs": [-0.0009196343016810715, -0.00016735584358684719, -0.021637098863720894, -0.004702580161392689, -4.768370445162873e-07, -0.2317914515733719, -5.602820692729438e-06, -0.0007061848300509155, -0.0032417625188827515, -1.0728830375228426e-06, -0.0001380348257953301, -1.5616295058862306e-05, -0.00014161060971673578, -0.00022587609419133514, -0.0033179253805428743], "finish_reason": "stop"}, {"text": " RADIUS_EARTH_KM * c", "tokens": [" R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", " *", " c", "\n"], "logprobs": [-0.4113805294036865, -6.174850568640977e-05, -5.722029527532868e-06, -4.172238186583854e-05, -4.291525328881107e-06, -7.271740287251305e-06, -1.6689286894688848e-06, -8.702239938429557e-06, -2.884823152271565e-05, -0.00011467275908216834, -0.006383741740137339, -0.0008811643347144127, -0.17692825198173523], "finish_reason": "stop"}, {"text": " [calculate_distance(data.iloc[i]['Latitude'], data.iloc[i]['Longitude']) for i in range(len(data))]", "tokens": [" [", "calculate", "_", "distance", "(", "data", ".", "il", "oc", "[", "i", "]['", "Lat", "itude", "']", ",", " data", ".", "il", "oc", "[", "i", "]['", "Long", "itude", "'])", " for", " i", " in", " range", "(", "len", "(", "data", "))", "]", "\n"], "logprobs": [-1.0497238636016846, -0.05862439423799515, -1.2040065485052764e-05, -5.757642793469131e-05, -0.022775961086153984, -1.9366270303726196, -0.21797800064086914, -0.11562158167362213, -0.00010895135346800089, -0.0017765468219295144, -0.08998113870620728, -1.0753154754638672, -0.06264347583055496, -0.003274438437074423, -0.12733158469200134, -0.04268697649240494, -0.0746430903673172, -0.0006342306733131409, -7.247662142617628e-05, -0.0001113352773245424, -0.00015710550360381603, -0.001262344536371529, -0.003462512046098709, -0.0001528146385680884, -5.960446742392378e-06, -0.34965676069259644, -0.10927513986825943, -0.0008229206432588398, -0.0021138484589755535, -0.03395036980509758, -0.0007229813490994275, -0.16902278363704681, -3.2782016205601394e-05, -0.0009977606823667884, -0.013159332796931267, -0.012368877418339252, -0.02915152907371521], "finish_reason": "stop"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.21050962805747986, -0.00026973424246534705, -0.03084459714591503, -0.0002733095607254654, -0.00026913834153674543, -0.0005053196800872684, -8.34461570775602e-06, -0.05889102444052696, -0.05371437594294548, -0.001947531825862825, -0.011367788538336754, -0.06764276325702667], "finish_reason": "stop"}, {"text": " data.iloc[nearest_indices].to_numpy()", "tokens": [" data", ".", "il", "oc", "[", "ne", "arest", "_", "indices", "]", ".", "to", "_", "numpy", "()", "\n"], "logprobs": [-0.30133727192878723, -0.02856108546257019, -0.23507918417453766, -6.794906312279636e-06, -0.001207337831147015, -0.0121683394536376, -0.00016378014697693288, -7.152555099310121e-07, -2.253030106658116e-05, -0.11517451703548431, -0.06528975814580917, -0.2410430759191513, -1.8954096958623268e-05, -0.07398968189954758, -0.008789541199803352, -0.07416148483753204], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "\n"], "logprobs": [-0.008706348948180676, -5.9126061387360096e-05, -6.937739817658439e-05, -7.426462980220094e-05, -0.3947467505931854], "finish_reason": "stop"}], "metrics": {"energy": 408.4284071655271, "energy_per_token": 1.890872255395959, "time": 14.42597, "time_per_token": 0.06678689814814814}}
{"outputs": [{"text": " not isinstance(k, int):", "tokens": [" not", " isinstance", "(", "k", ",", " int", "):", "\n"], "logprobs": [-0.42849767208099365, -0.10607624053955078, -0.0005781171494163573, -0.0960288867354393, -0.0007917130133137107, -0.027842888608574867, -0.581300675868988, -0.02165401354432106], "finish_reason": "stop"}, {"text": " ValueError(\"'k' must be a non-negative integer\")", "tokens": [" Value", "Error", "(", "\"", "'", "k", "'", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -0.2305050790309906, -0.1437573879957199, -0.9894286394119263, -0.0036493625957518816, -0.001900772680528462, -0.11651798337697983, -0.003042475553229451, -0.05675104632973671, -0.04075271636247635, -0.0008314966107718647, -0.0011397063499316573, -0.004253745079040527, -0.4964959919452667, -0.00020787939138244838, -0.004039343912154436], "finish_reason": "stop"}, {"text": " 6371  # km", "tokens": [" ", "6", "3", "7", "1", "  ", "#", " km", "\n"], "logprobs": [-0.01035389956086874, -0.0011545903980731964, -0.001420561340637505, -0.0011392300948500633, -0.0024147657677531242, -1.1802626848220825, -0.002145014703273773, -1.2636823654174805, -0.06627412885427475], "finish_reason": "stop"}, {"text": " lng1 = coord1", "tokens": [" l", "ng", "1", " =", " coord", "1", "\n"], "logprobs": [-2.2898340225219727, -0.0020334296859800816, -5.411955135059543e-05, -0.052499834448099136, -0.5784795880317688, -0.002744956873357296, -0.26753005385398865], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-0.00012242044613230973, -2.6940935640595853e-05, -0.00010752100206445903, -0.0016846762737259269, -0.00031132620642893016, -6.675497570540756e-05, -0.0001842805795604363, -3.1470757676288486e-05, -0.0002914242504630238, -0.0003810394846368581, -0.0004757702990900725, -0.00019667598826345056, -9.810443589231e-05, -3.8980677345534787e-05, -0.00015889335190877318, -0.0016676579834893346, -1.2397689715726301e-05, -0.000219321038457565, -8.082063141046092e-05, -0.00042417587246745825, -0.00024089295766316354, -1.0013530300057027e-05, -0.0002575780963525176, -1.2397689715726301e-05, -0.000406301929615438], "finish_reason": "stop"}, {"text": " lat2 - lat1", "tokens": [" lat", "2", " -", " lat", "1", "\n"], "logprobs": [-0.27872058749198914, -0.09087816625833511, -0.04535941407084465, -0.0002779574424494058, -8.725739462533966e-05, -0.0015901790466159582], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.00017653337272349745, -0.0001225396408699453, -0.0007796823629178107, -4.303362584323622e-05, -4.1483970562694594e-05, -0.00012337400403339416], "finish_reason": "stop"}, {"text": " math.sin(dlat / 2)**2 + math.cos(lat1) * math.cos(lat2) * math.sin(dlon / 2)**2", "tokens": [" math", ".", "sin", "(", "d", "lat", " /", " ", "2", ")**", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " math", ".", "sin", "(", "dl", "on", " /", " ", "2", ")**", "2", "\n"], "logprobs": [-0.4090750813484192, -5.960462772236497e-07, -0.10577568411827087, -0.00035065223346464336, -0.0008646087371744215, -6.496695277746767e-05, -0.29527851939201355, -0.0005354639724828303, -3.0040289857424796e-05, -0.3793555796146393, -9.893881360767409e-05, -0.0019574069883674383, -0.006235549226403236, -1.6927575416048057e-05, -0.014868279919028282, -2.8729025871143676e-05, -0.0003625689132604748, -0.00864359550178051, -0.006228559650480747, -0.00027247529942542315, -0.0009672730811871588, -0.0001481661747675389, -0.006357919424772263, -1.1086402082582936e-05, -0.0006117141456343234, -4.649054244509898e-05, -0.00029666791670024395, -0.002404657192528248, -0.02301049791276455, -0.00020621081057470292, -0.00017426878912374377, -4.708655978902243e-05, -0.00023445718397852033, -3.981510963058099e-05, -0.0024409282486885786, -0.0009567927336320281, -1.4543427823809907e-05, -0.003731551580131054, -2.8132995794294402e-05, -0.0005589353386312723], "finish_reason": "stop"}, {"text": " 2 * math.asin(math.sqrt(a))", "tokens": [" ", "2", " *", " math", ".", "as", "in", "(", "math", ".", "sqrt", "(", "a", "))", "\n"], "logprobs": [-0.0009447640040889382, -0.00016592556494288146, -0.022534843534231186, -0.0038270342629402876, -4.768370445162873e-07, -0.408865362405777, -5.245195097813848e-06, -0.0007011815905570984, -0.002923621330410242, -1.1920922133867862e-06, -0.00014518637908622622, -1.9430925021879375e-05, -0.00010179955279454589, -0.0002810560108628124, -0.0029696195852011442], "finish_reason": "stop"}, {"text": " RADIUS_EARTH_KM * c", "tokens": [" R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", " *", " c", "\n"], "logprobs": [-0.499111533164978, -5.900685573578812e-05, -6.9141146923357155e-06, -5.6503606174374e-05, -5.125986263010418e-06, -6.9141146923357155e-06, -2.264974000354414e-06, -8.583032467868179e-06, -2.47952248173533e-05, -0.00015031162183731794, -0.007674731779843569, -0.0009912106906995177, -0.20663690567016602], "finish_reason": "stop"}, {"text": " np.apply_along_axis(calculate_distance, 0, data.values, target)", "tokens": [" np", ".", "apply", "_", "along", "_", "axis", "(", "calculate", "_", "distance", ",", " ", "0", ",", " data", ".", "values", ",", " target", ")", "\n"], "logprobs": [-3.934628486633301, -2.4318398573086597e-05, -0.9642236232757568, -3.4570634852570947e-06, -0.0003564914222806692, -9.536738616588991e-07, -0.0004219118563923985, -0.0025144172832369804, -0.165890634059906, -4.887569048150908e-06, -4.911301948595792e-05, -0.0008373330347239971, -0.04967176541686058, -1.413266897201538, -0.00030501006403937936, -0.0900956392288208, -0.5058488845825195, -0.18617525696754456, -0.08508992195129395, -0.7176594734191895, -0.0136876804754138, -0.08947623521089554], "finish_reason": "stop"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.2170921415090561, -0.00027092601521871984, -0.027064191177487373, -0.00021753329201601446, -0.00031799983116798103, -0.00044955636258237064, -1.2874520507466514e-05, -0.06626966595649719, -0.08588994294404984, -0.002075067488476634, -0.009907593950629234, -0.06975147128105164], "finish_reason": "stop"}, {"text": " data.iloc[nearest_indices].to_numpy()", "tokens": [" data", ".", "il", "oc", "[", "ne", "arest", "_", "indices", "]", ".", "to", "_", "numpy", "()", "\n"], "logprobs": [-0.3212045133113861, -0.02959812432527542, -0.25066787004470825, -7.271740287251305e-06, -0.0014940063701942563, -0.01262646820396185, -0.0001776060671545565, -9.536738616588991e-07, -2.4676019165781327e-05, -0.0811215415596962, -0.0729077085852623, -0.2379227578639984, -2.1815061700181104e-05, -0.09850046038627625, -0.008664749562740326, -0.07620944827795029], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "\n"], "logprobs": [-0.00725693441927433, -5.352353764465079e-05, -4.851700214203447e-05, -8.606540359323844e-05, -0.42996567487716675], "finish_reason": "stop"}], "metrics": {"energy": 414.6375294857026, "energy_per_token": 2.062873281023396, "time": 13.556105, "time_per_token": 0.06744330845771145}}
{"outputs": [{"text": " k <= 0:", "tokens": [" k", " <=", " ", "0", ":", "\n"], "logprobs": [-1.6484607458114624, -2.0804355144500732, -0.016894938424229622, -0.0024183334317058325, -0.27998295426368713, -0.017280373722314835], "finish_reason": "stop"}, {"text": " ValueError(\"'k' must be a non-negative integer\")", "tokens": [" Value", "Error", "(", "\"", "'", "k", "'", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -0.2305050790309906, -0.1437573879957199, -0.9894286394119263, -0.0036493625957518816, -0.001900772680528462, -0.11651798337697983, -0.003042475553229451, -0.05675104632973671, -0.04075271636247635, -0.0008314966107718647, -0.0011397063499316573, -0.004253745079040527, -0.4964959919452667, -0.00020787939138244838, -0.004039343912154436], "finish_reason": "stop"}, {"text": " 6371  # Radius of the earth in kilometers", "tokens": [" ", "6", "3", "7", "1", "  ", "#", " Rad", "ius", " of", " the", " earth", " in", " kilometers", "\n"], "logprobs": [-0.01035389956086874, -0.0011545903980731964, -0.001420561340637505, -0.0011392300948500633, -0.0024147657677531242, -1.1802626848220825, -0.002145014703273773, -1.3844785690307617, -0.0005142558366060257, -0.013376021757721901, -0.4623599350452423, -0.49434974789619446, -0.10588613897562027, -0.10626888275146484, -0.07451452314853668], "finish_reason": "stop"}, {"text": " lon1 = coord1", "tokens": [" lon", "1", " =", " coord", "1", "\n"], "logprobs": [-0.1862134486436844, -1.680836794548668e-05, -0.10691192746162415, -0.6905185580253601, -0.0031392124947160482, -0.2867010831832886], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-0.00011955977242905647, -2.253030106658116e-05, -8.177422569133341e-05, -0.0012559153838083148, -0.0004337085410952568, -5.686121585313231e-05, -0.00014411364099942148, -4.4225667807040736e-05, -0.00032085992279462516, -0.0004737447015941143, -0.0004694551753345877, -0.0001740304142003879, -9.810443589231e-05, -4.184158387943171e-05, -0.00015138434537220746, -0.0014119903789833188, -1.3589766240329482e-05, -0.00024351492174901068, -9.405170567333698e-05, -0.00042691652197390795, -0.00022396916756406426, -1.3708974620385561e-05, -0.0002236116270069033, -1.1324817933200393e-05, -0.0004919749335385859], "finish_reason": "stop"}, {"text": " math.sin((lat2 - lat1) / 2.0) ** 2", "tokens": [" math", ".", "sin", "((", "lat", "2", " -", " lat", "1", ")", " /", " ", "2", ".", "0", ")", " **", " ", "2", "\n"], "logprobs": [-1.4779397249221802, -2.3841830625315197e-06, -1.7621217966079712, -0.08263038098812103, -0.002009755000472069, -0.0571473203599453, -0.2861086428165436, -0.0006550788530148566, -5.400034933700226e-05, -0.06305566430091858, -0.0005541696446016431, -0.0005634627304971218, -3.361645576660521e-05, -2.391850471496582, -0.008511694148182869, -0.1164567619562149, -0.2095973938703537, -0.0034632247406989336, -3.194758028257638e-05, -0.42445263266563416], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.0001646144810365513, -0.00012408917245920748, -0.0010009760735556483, -4.637133679352701e-05, -4.160317621426657e-05, -0.00011240804451517761], "finish_reason": "stop"}, {"text": " (math.sin(dlat / 2)) ** 2 + math.cos(lat1) * math.cos(lat2) * (math.sin(dlon / 2)) ** 2", "tokens": [" (", "math", ".", "sin", "(", "d", "lat", " /", " ", "2", "))", " **", " ", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " (", "math", ".", "sin", "(", "dl", "on", " /", " ", "2", "))", " **", " ", "2", "\n"], "logprobs": [-1.3639589548110962, -0.11816167831420898, -2.3841855067985307e-07, -0.005542743485420942, -0.00010597144137136638, -0.0007234578370116651, -5.245071224635467e-05, -0.36239874362945557, -0.0005391574813984334, -1.4781842764932662e-05, -0.8334125280380249, -0.2734645903110504, -0.0026007420383393764, -2.5152843591058627e-05, -0.018543105572462082, -0.28485050797462463, -5.602679812000133e-05, -0.006686811335384846, -7.676783570786938e-05, -0.000715833914000541, -0.025345992296934128, -0.0005099665140733123, -0.0006861716392450035, -0.014616787433624268, -0.0004024887748528272, -0.0008947421447373927, -3.2543604902457446e-05, -0.0010776671115309, -4.7205765440594405e-05, -0.00038342276820912957, -0.004217064939439297, -0.010166055522859097, -0.006310418248176575, -3.576278118089249e-07, -4.0411134250462055e-05, -0.00010466027742950246, -0.00017105070583056659, -5.9602869441732764e-05, -0.0023538758978247643, -0.00040439533768221736, -1.2278481335670222e-05, -0.006773131899535656, -0.003536401316523552, -0.0016066036187112331, -3.3378546504536644e-06, -0.0011636398267000914], "finish_reason": "stop"}, {"text": " 2 * math.asin(math.sqrt(a))", "tokens": [" ", "2", " *", " math", ".", "as", "in", "(", "math", ".", "sqrt", "(", "a", "))", "\n"], "logprobs": [-0.0009006972541101277, -0.00016449528629891574, -0.02029942348599434, -0.004114852286875248, -4.768370445162873e-07, -0.22890551388263702, -4.6491513785440475e-06, -0.00080195686314255, -0.0032080160453915596, -1.0728830375228426e-06, -0.00011181206355104223, -1.4781842764932662e-05, -0.00011681827891152352, -0.0002885640424210578, -0.0031280419789254665], "finish_reason": "stop"}, {"text": " RADIUS_EARTH_KM * c", "tokens": [" R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", " *", " c", "\n"], "logprobs": [-0.5827510952949524, -4.95898348162882e-05, -5.8412379075889476e-06, -5.8887653722194955e-05, -4.291525328881107e-06, -7.152531907195225e-06, -2.145764938177308e-06, -8.34461570775602e-06, -2.3245540432981215e-05, -0.0001267114421352744, -0.008533678948879242, -0.0006937957368791103, -0.1984599530696869], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.1071252822875977, -0.03668162226676941], "finish_reason": "stop"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.26074835658073425, -0.00019751029321923852, -0.028986405581235886, -0.00018690270371735096, -0.0002698534226510674, -0.00042775063775479794, -9.894321920000948e-06, -0.07184597104787827, -0.05651189759373665, -0.0019312318181619048, -0.0077299755066633224, -0.07283245772123337], "finish_reason": "stop"}, {"text": " data.iloc[nearest_indices].to_numpy()", "tokens": [" data", ".", "il", "oc", "[", "ne", "arest", "_", "indices", "]", ".", "to", "_", "numpy", "()", "\n"], "logprobs": [-0.2711952030658722, -0.030738482251763344, -0.22453227639198303, -7.033323527139146e-06, -0.0018271195003762841, -0.012277739122509956, -0.0001280225842492655, -8.344646857949556e-07, -2.253030106658116e-05, -0.11271563917398453, -0.0664791688323021, -0.23468613624572754, -2.8371408916427754e-05, -0.09036435186862946, -0.010701294057071209, -0.07176531106233597], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.009414798580110073, -4.851700214203447e-05, -6.878139538457617e-05, -7.295342220459133e-05, -1.4357057809829712, -2.9802276912960224e-06, -8.344646857949556e-07, -7.962863310240209e-05, -0.00011538793478393927, -0.165790855884552], "finish_reason": "stop"}], "metrics": {"energy": 444.0296930599212, "energy_per_token": 2.1245439859326374, "time": 14.406214, "time_per_token": 0.06892925358851675}}
{"outputs": [{"text": " not isinstance(k, int) or k < 0:", "tokens": [" not", " isinstance", "(", "k", ",", " int", ")", " or", " k", " <", " ", "0", ":", "\n"], "logprobs": [-0.42849767208099365, -0.10607624053955078, -0.0005781171494163573, -0.0960288867354393, -0.0007917130133137107, -0.027842888608574867, -0.819847047328949, -0.02922944724559784, -0.04074951261281967, -0.0691075474023819, -0.005433552898466587, -0.09914679080247879, -0.014808965846896172, -0.016751108691096306], "finish_reason": "stop"}, {"text": " ValueError('k must be a non-negative integer')", "tokens": [" Value", "Error", "('", "k", " must", " be", " a", " non", "-", "negative", " integer", "')", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -1.6672230958938599, -0.3376762866973877, -0.17633379995822906, -0.0030859727412462234, -0.0946008712053299, -0.06347887217998505, -0.0025869496166706085, -0.001450082752853632, -0.007667988538742065, -0.10608106851577759, -0.002156553091481328], "finish_reason": "stop"}, {"text": " 6371", "tokens": [" ", "6", "3", "7", "1", "\n"], "logprobs": [-0.009556381031870842, -0.0011865011183544993, -0.0014024670235812664, -0.0010849310783669353, -0.00224956963211298, -0.6280490756034851], "finish_reason": "stop"}, {"text": " lon1 = coord1", "tokens": [" lon", "1", " =", " coord", "1", "\n"], "logprobs": [-0.1863720566034317, -1.549708758830093e-05, -0.11258590966463089, -0.5586482286453247, -0.0031931623816490173, -0.3027347922325134], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-9.846202738117427e-05, -2.682172998902388e-05, -0.00010442188795423135, -0.001803796854801476, -0.0004068977141287178, -5.054346183896996e-05, -0.0001525762490928173, -3.313963316031732e-05, -0.0003046525234822184, -0.00047874910524114966, -0.0004951919545419514, -0.00019894051365554333, -8.749579137656838e-05, -3.802703940891661e-05, -0.00021836756786797196, -0.0015555436257272959, -1.4543427823809907e-05, -0.00025185750564560294, -0.00010382589971413836, -0.0004542034293990582, -0.0002796259068418294, -1.156323378381785e-05, -0.0002456601650919765, -1.3470558769768104e-05, -0.0006177900941111147], "finish_reason": "stop"}, {"text": " lat2 - lat1", "tokens": [" lat", "2", " -", " lat", "1", "\n"], "logprobs": [-0.3077547252178192, -0.07922118157148361, -0.04670507460832596, -0.0003268184664193541, -7.83174327807501e-05, -0.001976324012503028], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.0001679517881711945, -0.00010513706365600228, -0.00067223358200863, -5.23315102327615e-05, -4.6132929128361866e-05, -0.00011729506513802335], "finish_reason": "stop"}, {"text": " math.sin(dlat / 2)**2 + math.cos(lat1) * math.cos(lat2) * math.sin(dlon / 2)**2", "tokens": [" math", ".", "sin", "(", "d", "lat", " /", " ", "2", ")**", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " math", ".", "sin", "(", "dl", "on", " /", " ", "2", ")**", "2", "\n"], "logprobs": [-0.4628535211086273, -4.768370445162873e-07, -0.08940745145082474, -0.0002708068350329995, -0.0009714413317851722, -5.900685573578812e-05, -0.289144903421402, -0.00044526674901135266, -2.455681169521995e-05, -0.3381960391998291, -0.00011395759065635502, -0.0018339019734412432, -0.005027035251259804, -4.470248313737102e-05, -0.01756586879491806, -2.288792165927589e-05, -0.0003698380314745009, -0.009780935011804104, -0.006006286945194006, -0.00019500737835187465, -0.001057304092682898, -0.0001591317413840443, -0.004256119020283222, -9.775113539944869e-06, -0.0004731489170808345, -3.981510963058099e-05, -0.00025769727653823793, -0.001986317802220583, -0.02259719744324684, -0.000219321038457565, -0.0001512651506345719, -3.6477376852417365e-05, -0.00019870213873218745, -3.349725011503324e-05, -0.0020987405441701412, -0.000856509490404278, -1.585470999998506e-05, -0.002877620980143547, -3.6954195820726454e-05, -0.0006345880683511496], "finish_reason": "stop"}, {"text": " 2 * math.atan2(math.sqrt(a), math.sqrt(1 - a))", "tokens": [" ", "2", " *", " math", ".", "atan", "2", "(", "math", ".", "sqrt", "(", "a", ")", ",", " math", ".", "sqrt", "(", "1", " -", " a", "))", "\n"], "logprobs": [-0.0009556017466820776, -0.00015948931104503572, -0.02151973359286785, -0.004800579976290464, -4.768370445162873e-07, -1.3900662660598755, -0.0008453133050352335, -0.0003256267518736422, -0.007882796227931976, -3.576278118089249e-07, -8.535020606359467e-05, -2.098061486321967e-05, -4.8993817472364753e-05, -2.407998726994265e-05, -0.00022110878489911556, -0.0016058895271271467, -4.386805812828243e-05, -4.434487345861271e-05, -3.8980677345534787e-05, -0.022807423025369644, -2.908945322036743, -0.0016111262375488877, -0.00010024998482549563, -0.0020435419864952564], "finish_reason": "stop"}, {"text": " RADIUS_EARTH_KM * c  # Distance in kilometers", "tokens": [" R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", " *", " c", "  ", "#", " Distance", " in", " kilometers", "\n"], "logprobs": [-0.5124731063842773, -5.3165931603871286e-05, -5.722029527532868e-06, -5.745722592109814e-05, -4.529942543740617e-06, -8.22540732769994e-06, -2.264974000354414e-06, -7.271740287251305e-06, -2.3841574147809297e-05, -0.000129691296024248, -0.007927384227514267, -0.0011275607394054532, -1.7318042516708374, -0.00027640812913887203, -0.33539775013923645, -0.05838198587298393, -0.03818221390247345, -0.02208799496293068], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-0.9687030911445618, -0.03280375152826309], "finish_reason": "stop"}, {"text": " np.argsort(distances)", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "\n"], "logprobs": [-0.2773114740848541, -0.00023862851958256215, -0.03298589214682579, -0.00018034738604910672, -0.0003300360403954983, -0.0004923323867842555, -9.179073458653875e-06, -0.06572843343019485, -2.621917486190796], "finish_reason": "stop"}, {"text": " data.iloc[nearest_indices].to_numpy()", "tokens": [" data", ".", "il", "oc", "[", "ne", "arest", "_", "indices", "]", ".", "to", "_", "numpy", "()", "\n"], "logprobs": [-0.2569962441921234, -0.03413080424070358, -0.21938809752464294, -6.9141146923357155e-06, -0.0016057705506682396, -0.011293650604784489, -0.0001674750237725675, -8.344646857949556e-07, -2.658331868587993e-05, -0.08863784372806549, -0.05903352424502373, -0.2821558117866516, -2.1934269170742482e-05, -0.08653365075588226, -0.008960394188761711, -0.06239553913474083], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "\n"], "logprobs": [-0.009678109548985958, -6.09140915912576e-05, -7.080780778778717e-05, -7.271502545336261e-05, -0.36478835344314575], "finish_reason": "stop"}], "metrics": {"energy": 358.24768191146853, "energy_per_token": 1.8855141153235186, "time": 12.969377, "time_per_token": 0.06825987894736842}}
{"outputs": [{"text": " not isinstance(k, int) or k < 0:", "tokens": [" not", " isinstance", "(", "k", ",", " int", ")", " or", " k", " <", " ", "0", ":", "\n"], "logprobs": [-0.42849767208099365, -0.10607624053955078, -0.0005781171494163573, -0.0960288867354393, -0.0007917130133137107, -0.027842888608574867, -0.819847047328949, -0.02922944724559784, -0.04074951261281967, -0.0691075474023819, -0.005433552898466587, -0.09914679080247879, -0.014808965846896172, -0.016751108691096306], "finish_reason": "stop"}, {"text": " ValueError(\"k must be a non-negative integer\")", "tokens": [" Value", "Error", "(", "\"", "k", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -0.2305050790309906, -0.1437573879957199, -0.8765403032302856, -0.10855693370103836, -0.0020247451029717922, -0.07357322424650192, -0.056977637112140656, -0.001706930692307651, -0.0014292511623352766, -0.006044915411621332, -0.21033808588981628, -0.00019298121333122253, -0.004107610322535038], "finish_reason": "stop"}, {"text": " 6371", "tokens": [" ", "6", "3", "7", "1", "\n"], "logprobs": [-0.010060318745672703, -0.00115863885730505, -0.0013044904917478561, -0.0010546842822805047, -0.0023651740048080683, -0.5970315933227539], "finish_reason": "stop"}, {"text": " lon1 = (coord1[0] * math.pi / 180.0, coord1[1] * math.pi / 180.0)", "tokens": [" lon", "1", " =", " (", "coord", "1", "[", "0", "]", " *", " math", ".", "pi", " /", " ", "1", "8", "0", ".", "0", ",", " coord", "1", "[", "1", "]", " *", " math", ".", "pi", " /", " ", "1", "8", "0", ".", "0", ")", "\n"], "logprobs": [-0.186264306306839, -1.7762025890988298e-05, -0.09546072036027908, -3.2251334190368652, -1.8204565048217773, -0.007586240768432617, -0.15742667019367218, -0.011273141019046307, -0.053125716745853424, -0.13534630835056305, -0.25551074743270874, -1.0251946150674485e-05, -0.0008952185744419694, -0.1691867709159851, -0.0031307751778513193, -0.0007596705690957606, -1.0371154530730564e-05, -8.344646857949556e-07, -0.8316570520401001, -0.022818492725491524, -0.30986639857292175, -0.012599158100783825, -0.04846400022506714, -6.0437283536884934e-05, -0.00031573555315844715, -0.00016759421851020306, -0.0002321927313460037, -0.0015195977175608277, -0.0005647733341902494, -8.4638240878121e-06, -0.00020776021119672805, -0.0008568667690269649, -1.4185804502631072e-05, -1.168244216387393e-05, -6.508615479106084e-05, -8.630380034446716e-05, -4.95898348162882e-05, -0.0005229535745456815, -0.005283440463244915], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-9.393251093570143e-05, -2.5748875486897305e-05, -9.941560711013153e-05, -0.0014886498684063554, -0.0004618293314706534, -6.0794889577664435e-05, -0.0001802282058633864, -3.5523738915799186e-05, -0.0003250309091527015, -0.00041762212640605867, -0.0003405229654163122, -0.00018010901112575084, -9.369411418447271e-05, -4.017272294731811e-05, -0.00021789084712509066, -0.0017251383978873491, -1.3232143828645349e-05, -0.0002040654799202457, -9.83428253675811e-05, -0.0005606033373624086, -0.00023684080224484205, -7.748573807475623e-06, -0.0002261144545627758, -8.22540732769994e-06, -0.0004611144249793142], "finish_reason": "stop"}, {"text": " math.radians(coord2[0] - coord1[0])", "tokens": [" math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "]", " -", " coord", "1", "[", "0", "])", "\n"], "logprobs": [-1.5799293518066406, -1.9073468138230965e-06, -0.18002507090568542, -1.2040065485052764e-05, -0.006310536526143551, -1.8967013359069824, -0.176882803440094, -4.8397800128441304e-05, -0.001257820287719369, -0.05692662298679352, -0.00019262365822214633, -0.000724887300748378, -0.0019288521725684404, -3.4689302992774174e-05, -0.00015805903240107, -0.00029202012228779495, -0.005807787179946899], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.0001685477327555418, -0.00010394509445177391, -0.0008588915807195008, -4.339123915997334e-05, -4.625213477993384e-05, -0.00011252723925281316], "finish_reason": "stop"}, {"text": " (math.sin(dlat / 2)) ** 2 + math.cos(lat1) * math.cos(lat2) * (math.sin(dlon / 2)) ** 2", "tokens": [" (", "math", ".", "sin", "(", "d", "lat", " /", " ", "2", "))", " **", " ", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " (", "math", ".", "sin", "(", "dl", "on", " /", " ", "2", "))", " **", " ", "2", "\n"], "logprobs": [-1.3085596561431885, -0.10546022653579712, -2.3841855067985307e-07, -0.006927993148565292, -9.381330892210826e-05, -0.0006461439770646393, -5.1616290875244886e-05, -0.3101787269115448, -0.0004646890447475016, -1.4543427823809907e-05, -0.7602432370185852, -0.27145448327064514, -0.0025819556321948767, -2.288792165927589e-05, -0.01579863764345646, -0.2485034167766571, -6.341733387671411e-05, -0.007012635935097933, -8.49926145747304e-05, -0.000620768463704735, -0.020943911746144295, -0.00035982808913104236, -0.0005470209871418774, -0.010247591882944107, -0.0003415954706724733, -0.000474936212413013, -2.95634672511369e-05, -0.0010389650706201792, -5.9126061387360096e-05, -0.0004189328756183386, -0.0039749909192323685, -0.012618698179721832, -0.005282847676426172, -1.1920928244535389e-07, -4.1483970562694594e-05, -9.369411418447271e-05, -0.00018463814922142774, -6.663577369181439e-05, -0.0025156063493341208, -0.0004391897819004953, -1.3351351299206726e-05, -0.0063704755157232285, -0.0031166335102170706, -0.0015544723719358444, -2.861018856492592e-06, -0.0011405398836359382], "finish_reason": "stop"}, {"text": " 2 * math.asin(math.sqrt(a))", "tokens": [" ", "2", " *", " math", ".", "as", "in", "(", "math", ".", "sqrt", "(", "a", "))", "\n"], "logprobs": [-0.0008690156391821802, -0.0001839230244513601, -0.018321799114346504, -0.006221688352525234, -4.768370445162873e-07, -0.24340036511421204, -5.245195097813848e-06, -0.0007781338645145297, -0.0031688022427260876, -9.536738616588991e-07, -0.00013100242358632386, -1.6927575416048057e-05, -0.00010883215873036534, -0.00023147765023168176, -0.0029257608111947775], "finish_reason": "stop"}, {"text": " c * RADIUS_EARTH_KM", "tokens": [" c", " *", " R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", "\n"], "logprobs": [-1.346893548965454, -0.06152784824371338, -0.005967419594526291, -1.549708758830093e-05, -6.556489552167477e-06, -7.891343557275832e-05, -1.0728830375228426e-06, -6.794906312279636e-06, -2.0265558760002023e-06, -4.529942543740617e-06, -2.396077979938127e-05, -0.00010132275929208845, -0.3046819865703583], "finish_reason": "stop"}, {"text": " [(calculate_distance(row, target), i) for i, row in data.iterrows()]", "tokens": [" [(", "calculate", "_", "distance", "(", "row", ",", " target", ")", ",", " i", ")", " for", " i", ",", " row", " in", " data", ".", "iter", "rows", "()", "]", "\n"], "logprobs": [-1.7930657863616943, -0.23426418006420135, -2.3603161025675945e-05, -8.463501580990851e-05, -0.03648820146918297, -1.7210650444030762, -0.561604380607605, -0.01648343913257122, -0.004931073635816574, -0.0005607224884442985, -1.6339913606643677, -0.0654153823852539, -0.03808869421482086, -0.0025031205732375383, -0.00016890530241653323, -0.012311181053519249, -0.0003209791029803455, -0.011082993820309639, -0.003575956914573908, -0.003607196733355522, -0.0101386783644557, -0.0002401778765488416, -0.00590544193983078, -0.024043414741754532], "finish_reason": "stop"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.22162902355194092, -0.000327652640407905, -0.03376898169517517, -0.00024125049822032452, -0.0003446938644628972, -0.00048565989709459245, -9.894321920000948e-06, -0.06485167145729065, -0.058578189462423325, -0.0017369197448715568, -0.008984850719571114, -0.0668923482298851], "finish_reason": "stop"}, {"text": " data.iloc[nearest_indices].to_numpy()", "tokens": [" data", ".", "il", "oc", "[", "ne", "arest", "_", "indices", "]", ".", "to", "_", "numpy", "()", "\n"], "logprobs": [-0.27182289958000183, -0.03238316625356674, -0.21725380420684814, -6.556489552167477e-06, -0.0016349294455721974, -0.011220097541809082, -0.00014959646796341985, -1.0728830375228426e-06, -1.680836794548668e-05, -0.10435734689235687, -0.07526897639036179, -0.2646949887275696, -2.276871418871451e-05, -0.08871802687644958, -0.010118735022842884, -0.07903295755386353], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "\n"], "logprobs": [-0.00760528864338994, -5.5549986427649856e-05, -5.531158240046352e-05, -6.83045873302035e-05, -0.36996811628341675], "finish_reason": "stop"}], "metrics": {"energy": 473.4725329856873, "energy_per_token": 1.8714329367023212, "time": 16.518476, "time_per_token": 0.06529041897233201}}
{"outputs": [{"text": " k < 0:", "tokens": [" k", " <", " ", "0", ":", "\n"], "logprobs": [-1.6484607458114624, -0.23642800748348236, -0.006035672966390848, -0.08516820520162582, -0.4216938614845276, -0.015105383470654488], "finish_reason": "stop"}, {"text": " ValueError(f\"k should be an integer > 0, but {type(k)} was given.\")", "tokens": [" Value", "Error", "(", "f", "\"", "k", " should", " be", " an", " integer", " >", " ", "0", ",", " but", " {", "type", "(", "k", ")}", " was", " given", ".", "\"", ")", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -0.2305050790309906, -2.2144951820373535, -0.19523759186267853, -0.6456169486045837, -2.143892288208008, -0.014804384671151638, -1.8425301313400269, -0.31754109263420105, -3.017852783203125, -0.11621120572090149, -0.0021276473999023438, -0.3918400704860687, -1.0537627935409546, -1.9960732460021973, -2.2198643684387207, -0.003188646864145994, -0.002872747601941228, -0.06104841083288193, -1.2547221183776855, -0.3719450831413269, -1.3455724716186523, -0.02807566151022911, -0.0015553055563941598, -0.004760717041790485], "finish_reason": "stop"}, {"text": " 6371", "tokens": [" ", "6", "3", "7", "1", "\n"], "logprobs": [-0.012320601381361485, -0.0010526598198339343, -0.0014109190087765455, -0.0010332489619031549, -0.0022910793777555227, -0.6142769455909729], "finish_reason": "stop"}, {"text": " lon1 = (math.radians(coord1[0]), math.radians(coord1[1]))", "tokens": [" lon", "1", " =", " (", "math", ".", "rad", "ians", "(", "coord", "1", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "1", "[", "1", "]))", "\n"], "logprobs": [-0.1857108324766159, -1.549708758830093e-05, -0.10124004632234573, -3.4008569717407227, -0.4961247742176056, -1.2278481335670222e-05, -0.14634080231189728, -5.94836674281396e-05, -0.0005942009738646448, -0.023467298597097397, -0.005558392032980919, -0.028510572388768196, -0.003906833939254284, -0.008995483629405499, -0.002863119123503566, -0.007421660702675581, -0.0052835592068731785, -2.706014311115723e-05, -0.00018666432879399508, -5.709961988031864e-05, -0.00011681827891152352, -0.0005112771177664399, -0.00012599628826137632, -0.00033945043105632067, -0.0012393658980727196, -0.006484775338321924], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-9.619726915843785e-05, -2.992108420585282e-05, -9.97731985989958e-05, -0.0014279417227953672, -0.00041631137719377875, -6.294052582234144e-05, -0.00019870213873218745, -3.671578815556131e-05, -0.000377583724912256, -0.0004935238393954933, -0.00047267231275327504, -0.0002051381452474743, -0.00010179955279454589, -3.0874729418428615e-05, -0.00015364897262770683, -0.0015804193681105971, -1.2636104656849056e-05, -0.0002454218047205359, -0.0001174142598756589, -0.00042060110718011856, -0.0002719986077863723, -1.0132738680113107e-05, -0.0002374367177253589, -1.0967194612021558e-05, -0.00043478095903992653], "finish_reason": "stop"}, {"text": " lat2 - lat1", "tokens": [" lat", "2", " -", " lat", "1", "\n"], "logprobs": [-0.2075585275888443, -0.0902084931731224, -0.0419623963534832, -0.0002978596603497863, -9.417090768693015e-05, -0.0018344969721511006], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.00020549570035655051, -0.0001062098381225951, -0.0008175606490112841, -4.637133679352701e-05, -4.470248313737102e-05, -0.00010024998482549563], "finish_reason": "stop"}, {"text": " math.sin(dlat / 2)**2 + math.cos(lat1) * math.cos(lat2) * math.sin(dlon / 2)**2", "tokens": [" math", ".", "sin", "(", "d", "lat", " /", " ", "2", ")**", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " math", ".", "sin", "(", "dl", "on", " /", " ", "2", ")**", "2", "\n"], "logprobs": [-0.35058286786079407, -4.768370445162873e-07, -0.08544383198022842, -0.0002829628065228462, -0.0009894242975860834, -6.389413465512916e-05, -0.32745489478111267, -0.000526289688423276, -2.4199192921514623e-05, -0.33921393752098083, -0.0001037067049765028, -0.001777260797098279, -0.004359029233455658, -2.6702524337451905e-05, -0.020728623494505882, -2.1815061700181104e-05, -0.00031275625224225223, -0.010040609166026115, -0.004958712495863438, -0.00021002470748499036, -0.0009531007381156087, -0.00017486473370809108, -0.0034407719504088163, -9.894321920000948e-06, -0.00046588058467023075, -4.207999518257566e-05, -0.00026973424246534705, -0.002319029066711664, -0.020551826804876328, -0.00015436411194968969, -0.00016449528629891574, -4.7205765440594405e-05, -0.0001722425949992612, -3.6000557884108275e-05, -0.0022971450816839933, -0.0009290431626141071, -1.3828182090946939e-05, -0.0023846779949963093, -3.516612196108326e-05, -0.0005732323625124991], "finish_reason": "stop"}, {"text": " 2 * math.atan2(math.sqrt(a), math.sqrt(1-a))", "tokens": [" ", "2", " *", " math", ".", "atan", "2", "(", "math", ".", "sqrt", "(", "a", ")", ",", " math", ".", "sqrt", "(", "1", "-", "a", "))", "\n"], "logprobs": [-0.0009073669789358974, -0.0001627074379939586, -0.02500760182738304, -0.003238554112613201, -4.768370445162873e-07, -1.5018467903137207, -0.0008436457719653845, -0.000406301929615438, -0.008862446993589401, -2.3841855067985307e-07, -7.819823804311454e-05, -2.0146166207268834e-05, -4.875540980719961e-05, -2.253030106658116e-05, -0.0002374367177253589, -0.001450797077268362, -7.259582343976945e-05, -4.351044481154531e-05, -3.8980677345534787e-05, -0.02562222257256508, -0.06578011065721512, -0.00025555206229910254, -0.0001137191939051263, -0.001670038211159408], "finish_reason": "stop"}, {"text": " c * RADIUS_EARTH_KM", "tokens": [" c", " *", " R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", "\n"], "logprobs": [-1.6407400369644165, -0.05618704855442047, -0.0062109073624014854, -1.6689160474925302e-05, -7.510157047363464e-06, -8.046303264563903e-05, -8.344646857949556e-07, -8.583032467868179e-06, -2.622600959512056e-06, -5.245195097813848e-06, -2.109982233378105e-05, -0.0001212284987559542, -0.2528590261936188], "finish_reason": "stop"}, {"text": " [calculate_distance(data.iloc[i, :2], target) for i in range(len(data))]", "tokens": [" [", "calculate", "_", "distance", "(", "data", ".", "il", "oc", "[", "i", ",", " :", "2", "]", ",", " target", ")", " for", " i", " in", " range", "(", "len", "(", "data", "))", "]", "\n"], "logprobs": [-1.0538265705108643, -0.052445538341999054, -1.0371154530730564e-05, -5.2927523938706145e-05, -0.017701266333460808, -2.1057844161987305, -0.23824764788150787, -0.09285613894462585, -9.655486064730212e-05, -0.0018054627580568194, -0.08279598504304886, -3.1500165462493896, -0.16186518967151642, -1.6456975936889648, -0.004547848366200924, -1.3455311059951782, -0.07516095042228699, -0.005356958135962486, -0.07063982635736465, -9.440929716220126e-05, -0.0008917645900510252, -0.012013109400868416, -0.0002694958820939064, -0.42119595408439636, -1.9192511899746023e-05, -0.0005480932886712253, -0.007590263616293669, -0.005151213612407446, -0.027850424870848656], "finish_reason": "stop"}, {"text": " np.argsort(distances)", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "\n"], "logprobs": [-0.22923515737056732, -0.00026472879108041525, -0.03041139431297779, -0.00018773700867313892, -0.00028880240279249847, -0.000432278640801087, -1.0013530300057027e-05, -0.06298985332250595, -2.733447313308716], "finish_reason": "stop"}, {"text": " [data.iloc[i]['Latitude'], data.iloc[i]['Longitude'] for i in nearest_indices]", "tokens": [" [", "data", ".", "il", "oc", "[", "i", "]['", "Lat", "itude", "']", ",", " data", ".", "il", "oc", "[", "i", "]['", "Long", "itude", "']", " for", " i", " in", " nearest", "_", "indices", "]", "\n"], "logprobs": [-2.0375211238861084, -0.32360804080963135, -0.038374047726392746, -0.15564818680286407, -1.811964830267243e-05, -0.0009223736124113202, -0.520183265209198, -2.4271960258483887, -0.08000081777572632, -0.0013625870924443007, -0.009805961512029171, -0.49269717931747437, -0.02395903691649437, -0.0006630606367252767, -0.00013612773909699172, -0.00038258862332440913, -3.504691630951129e-05, -3.0040289857424796e-05, -0.0010837402660399675, -0.000163541772053577, -8.22540732769994e-06, -7.509902934543788e-05, -0.06839963793754578, -0.00013910756388213485, -9.858122211880982e-05, -0.005838246084749699, -1.1920928244535389e-07, -8.583032467868179e-06, -0.011345630511641502, -0.003068384015932679], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "\n"], "logprobs": [-0.007834776304662228, -4.1960789531003684e-05, -6.83045873302035e-05, -6.651657167822123e-05, -0.34895598888397217], "finish_reason": "stop"}], "metrics": {"energy": 461.2693366947175, "energy_per_token": 1.8377264410148106, "time": 16.297985, "time_per_token": 0.06493221115537849}}
{"outputs": [{"text": " k < 0:", "tokens": [" k", " <", " ", "0", ":", "\n"], "logprobs": [-1.6484607458114624, -0.23642800748348236, -0.006035672966390848, -0.08516820520162582, -0.4216938614845276, -0.015105383470654488], "finish_reason": "stop"}, {"text": " ValueError(\"k must be a non-negative integer\")", "tokens": [" Value", "Error", "(", "\"", "k", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -0.2305050790309906, -0.1437573879957199, -0.8765403032302856, -0.10855693370103836, -0.0020247451029717922, -0.07357322424650192, -0.056977637112140656, -0.001706930692307651, -0.0014292511623352766, -0.006044915411621332, -0.21033808588981628, -0.00019298121333122253, -0.004107610322535038], "finish_reason": "stop"}, {"text": " 6371", "tokens": [" ", "6", "3", "7", "1", "\n"], "logprobs": [-0.010060318745672703, -0.00115863885730505, -0.0013044904917478561, -0.0010546842822805047, -0.0023651740048080683, -0.5970315933227539], "finish_reason": "stop"}, {"text": " lon1 = coord1", "tokens": [" lon", "1", " =", " coord", "1", "\n"], "logprobs": [-0.186264306306839, -1.7762025890988298e-05, -0.09546072036027908, -0.6333194971084595, -0.0028565814718604088, -0.2989170253276825], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-9.393251093570143e-05, -2.5748875486897305e-05, -9.941560711013153e-05, -0.0014886498684063554, -0.0004618293314706534, -6.0794889577664435e-05, -0.0001802282058633864, -3.5523738915799186e-05, -0.0003250309091527015, -0.00041762212640605867, -0.0003405229654163122, -0.00018010901112575084, -9.369411418447271e-05, -4.017272294731811e-05, -0.00021789084712509066, -0.0017251383978873491, -1.3232143828645349e-05, -0.0002040654799202457, -9.83428253675811e-05, -0.0005606033373624086, -0.00023684080224484205, -7.748573807475623e-06, -0.0002261144545627758, -8.22540732769994e-06, -0.0004611144249793142], "finish_reason": "stop"}, {"text": " lat2 - lat1", "tokens": [" lat", "2", " -", " lat", "1", "\n"], "logprobs": [-0.3258666694164276, -0.08085483312606812, -0.042061954736709595, -0.00022468426323030144, -9.202533692587167e-05, -0.0018230738351121545], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.00017915551143232733, -0.00013100242358632386, -0.0008741371566429734, -5.1973900554003194e-05, -3.9934315282152966e-05, -0.00012230125139467418], "finish_reason": "stop"}, {"text": " math.sin(dlat/2)**2 + math.cos(lat1) * math.cos(lat2) * math.sin(dlon/2)**2", "tokens": [" math", ".", "sin", "(", "d", "lat", "/", "2", ")**", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " math", ".", "sin", "(", "dl", "on", "/", "2", ")**", "2", "\n"], "logprobs": [-0.36379367113113403, -7.152555099310121e-07, -0.07355960458517075, -0.0003746046277228743, -0.0009378563845530152, -4.9828242481453344e-05, -1.4225759506225586, -0.0005821678787469864, -0.042397137731313705, -8.165503095369786e-05, -0.0015267394483089447, -0.004017259925603867, -2.455681169521995e-05, -0.01618320681154728, -2.2649508537142538e-05, -0.00043752157944254577, -0.009982660412788391, -0.29986491799354553, -0.0004812512779608369, -0.0014579391572624445, -0.00011991735664196312, -0.003856247290968895, -1.7046782886609435e-05, -0.0006443570018745959, -6.401333666872233e-05, -0.0006909366929903626, -0.0012369846226647496, -0.011960811913013458, -0.00019226610311307013, -0.00014006110723130405, -3.0636318115284666e-05, -0.00011932138295378536, -3.2543604902457446e-05, -0.0011619728757068515, -2.658331868587993e-05, -0.0001528146385680884, -4.649054244509898e-05, -0.0006835508393123746], "finish_reason": "stop"}, {"text": " 2 * math.asin(math.sqrt(a))", "tokens": [" ", "2", " *", " math", ".", "as", "in", "(", "math", ".", "sqrt", "(", "a", "))", "\n"], "logprobs": [-0.0011884062550961971, -0.00020585325546562672, -0.030245207250118256, -0.0051108901388943195, -4.768370445162873e-07, -0.22516216337680817, -5.483612312673358e-06, -0.0007538337376900017, -0.0033189947716891766, -1.311301275563892e-06, -0.00011240804451517761, -2.0265373677830212e-05, -0.0001294529065489769, -0.00029047083808109164, -0.0031760509591549635], "finish_reason": "stop"}, {"text": " c * RADIUS_EARTH_KM", "tokens": [" c", " *", " R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", "\n"], "logprobs": [-1.4133546352386475, -0.05729885399341583, -0.0066641937009990215, -1.5020257706055418e-05, -5.722029527532868e-06, -7.068861305015162e-05, -1.0728830375228426e-06, -8.22540732769994e-06, -1.7881377516459906e-06, -5.125986263010418e-06, -2.3007127310847864e-05, -0.00010096516780322418, -0.2603214681148529], "finish_reason": "stop"}, {"text": " [calculate_distance(coord, target) for coord in data.values]", "tokens": [" [", "calculate", "_", "distance", "(", "coord", ",", " target", ")", " for", " coord", " in", " data", ".", "values", "]", "\n"], "logprobs": [-1.1485741138458252, -0.05841459333896637, -1.168244216387393e-05, -5.972207145532593e-05, -0.022128457203507423, -1.7508480548858643, -0.08924522995948792, -0.013366024009883404, -0.00648785475641489, -0.018751027062535286, -0.023856496438384056, -0.00025555206229910254, -0.0052132378332316875, -0.19342683255672455, -0.5467504858970642, -0.1331380158662796, -0.03283859044313431], "finish_reason": "stop"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.21545550227165222, -0.00027843413408845663, -0.026911837980151176, -0.00017307691450696439, -0.0002985746832564473, -0.000382707774406299, -8.106198947643861e-06, -0.06788817793130875, -0.057105325162410736, -0.0016846762737259269, -0.008688267320394516, -0.06079155579209328], "finish_reason": "stop"}, {"text": " data.iloc[nearest_indices].to_numpy()", "tokens": [" data", ".", "il", "oc", "[", "ne", "arest", "_", "indices", "]", ".", "to", "_", "numpy", "()", "\n"], "logprobs": [-0.2669633626937866, -0.03723030909895897, -0.2084224820137024, -6.556489552167477e-06, -0.0019629988819360733, -0.012293047271668911, -0.00013267113536130637, -7.152555099310121e-07, -2.0265373677830212e-05, -0.09199970215559006, -0.059429459273815155, -0.25610223412513733, -2.1815061700181104e-05, -0.07341616600751877, -0.01081769447773695, -0.07124947011470795], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "\n"], "logprobs": [-0.009631946682929993, -5.8410845667822286e-05, -5.817244164063595e-05, -6.854299135738984e-05, -0.41196373105049133], "finish_reason": "stop"}], "metrics": {"energy": 436.02819033432013, "energy_per_token": 2.3442375824425814, "time": 13.616943, "time_per_token": 0.07320937096774192}}
{"outputs": [{"text": " k < 0:", "tokens": [" k", " <", " ", "0", ":", "\n"], "logprobs": [-1.6484607458114624, -0.23642800748348236, -0.006035672966390848, -0.08516820520162582, -0.4216938614845276, -0.015105383470654488], "finish_reason": "stop"}, {"text": " ValueError('k must be a non-negative integer')", "tokens": [" Value", "Error", "('", "k", " must", " be", " a", " non", "-", "negative", " integer", "')", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -1.6672230958938599, -0.3376762866973877, -0.17633379995822906, -0.0030859727412462234, -0.0946008712053299, -0.06347887217998505, -0.0025869496166706085, -0.001450082752853632, -0.007667988538742065, -0.10608106851577759, -0.002156553091481328], "finish_reason": "stop"}, {"text": " 6371", "tokens": [" ", "6", "3", "7", "1", "\n"], "logprobs": [-0.009556381031870842, -0.0011865011183544993, -0.0014024670235812664, -0.0010849310783669353, -0.00224956963211298, -0.6280490756034851], "finish_reason": "stop"}, {"text": " lon1 = (math.radians(coord1[0]), math.radians(coord1[1]))", "tokens": [" lon", "1", " =", " (", "math", ".", "rad", "ians", "(", "coord", "1", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "1", "[", "1", "]))", "\n"], "logprobs": [-0.1863720566034317, -1.549708758830093e-05, -0.11258590966463089, -3.3449716567993164, -0.4607275426387787, -1.3112935448589269e-05, -0.12119908630847931, -6.5205356804654e-05, -0.0006164796068333089, -0.02316344901919365, -0.005259960889816284, -0.02395426668226719, -0.003611947875469923, -0.009301659651100636, -0.002166663995012641, -0.007762504741549492, -0.004911856725811958, -3.0517112463712692e-05, -0.00018416139937471598, -4.970903682988137e-05, -0.000105375460407231, -0.00037901371251791716, -0.0001677133986959234, -0.00034791138023138046, -0.0014121094718575478, -0.007092536427080631], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-9.846202738117427e-05, -2.682172998902388e-05, -0.00010442188795423135, -0.001803796854801476, -0.0004068977141287178, -5.054346183896996e-05, -0.0001525762490928173, -3.313963316031732e-05, -0.0003046525234822184, -0.00047874910524114966, -0.0004951919545419514, -0.00019894051365554333, -8.749579137656838e-05, -3.802703940891661e-05, -0.00021836756786797196, -0.0015555436257272959, -1.4543427823809907e-05, -0.00025185750564560294, -0.00010382589971413836, -0.0004542034293990582, -0.0002796259068418294, -1.156323378381785e-05, -0.0002456601650919765, -1.3470558769768104e-05, -0.0006177900941111147], "finish_reason": "stop"}, {"text": " lat2 - lat1", "tokens": [" lat", "2", " -", " lat", "1", "\n"], "logprobs": [-0.3077547252178192, -0.07922118157148361, -0.04670507460832596, -0.0003268184664193541, -7.83174327807501e-05, -0.001976324012503028], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.0001679517881711945, -0.00010513706365600228, -0.00067223358200863, -5.23315102327615e-05, -4.6132929128361866e-05, -0.00011729506513802335], "finish_reason": "stop"}, {"text": " math.sin(dlat/2)**2 + math.cos(lat1) * math.cos(lat2) * math.sin(dlon/2)**2", "tokens": [" math", ".", "sin", "(", "d", "lat", "/", "2", ")**", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " math", ".", "sin", "(", "dl", "on", "/", "2", ")**", "2", "\n"], "logprobs": [-0.4628535211086273, -4.768370445162873e-07, -0.08940745145082474, -0.0002708068350329995, -0.0009714413317851722, -5.900685573578812e-05, -1.3861392736434937, -0.0006162413046695292, -0.03481433913111687, -8.11782301752828e-05, -0.0013075858587399125, -0.0042710755951702595, -2.729855441430118e-05, -0.027050500735640526, -2.2411095415009186e-05, -0.0005327236140146852, -0.008339108899235725, -0.3340815305709839, -0.00048160876031033695, -0.0011829291470348835, -0.00013863079948350787, -0.003617530455812812, -1.7404405298293568e-05, -0.0007859955076128244, -6.425174069590867e-05, -0.000590865034610033, -0.0010930284624919295, -0.009457547217607498, -0.0001658063702052459, -0.0001456631434848532, -2.777537883957848e-05, -0.00011634149996098131, -2.52720492426306e-05, -0.001312943291850388, -2.7417760065873154e-05, -0.00017557987303007394, -4.768258077092469e-05, -0.0006211258587427437], "finish_reason": "stop"}, {"text": " 2 * math.asin(math.sqrt(a))", "tokens": [" ", "2", " *", " math", ".", "as", "in", "(", "math", ".", "sqrt", "(", "a", "))", "\n"], "logprobs": [-0.0009617946925573051, -0.00016973962192423642, -0.02271338552236557, -0.004228935576975346, -3.576278118089249e-07, -0.28139954805374146, -4.887569048150908e-06, -0.0008057684754021466, -0.004205194301903248, -9.536738616588991e-07, -0.00013886917440686375, -1.3589766240329482e-05, -0.0001662831346038729, -0.0002829628065228462, -0.0034887660294771194], "finish_reason": "stop"}, {"text": " RADIUS_EARTH_KM * c", "tokens": [" R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", " *", " c", "\n"], "logprobs": [-0.40295490622520447, -6.007967749610543e-05, -5.125986263010418e-06, -6.23445157543756e-05, -4.291525328881107e-06, -7.271740287251305e-06, -2.145764938177308e-06, -8.34461570775602e-06, -2.5510462364763953e-05, -0.00013517419574782252, -0.007449822034686804, -0.001019673072732985, -0.21587499976158142], "finish_reason": "stop"}, {"text": " [calculate_distance(target, coord) for coord in data['Latitude'].astype(float).loc[data['Longitude'].astype(float).isin(data['Longitude'].astype(float).loc[data['Longitude'].astype(float).isin(data['Longitude'].astype(float).loc[data['Longitude'].astype(float).isin(data['Longitude'].astype(float).loc[data['Longitude'].astype(float).isin(data['Longitude'].astype(float).loc[data['Longitude'].astype(float).isin(data['Longitude'].astype(float).loc[data['Longitude'].astype(float).isin(data['Longitude'].astype(float).loc[data['Longitude'].astype(float).isin(data['Longitude'].astype(float).loc[data['Longitude'].astype(float).isin(data['Longitude'].astype(float).loc[data['Longitude'].", "tokens": [" [", "calculate", "_", "distance", "(", "target", ",", " coord", ")", " for", " coord", " in", " data", "['", "Lat", "itude", "']", ".", "ast", "ype", "(", "float", ")", ".", "loc", "[", "data", "['", "Long", "itude", "']", ".", "ast", "ype", "(", "float", ")", ".", "isin", "(", "data", "['", "Long", "itude", "']", ".", "ast", "ype", "(", "float", ")", ".", "loc", "[", "data", "['", "Long", "itude", "']", ".", "ast", "ype", "(", "float", ")", ".", "isin", "(", "data", "['", "Long", "itude", "']", ".", "ast", "ype", "(", "float", ")", ".", "loc", "[", "data", "['", "Long", "itude", "']", ".", "ast", "ype", "(", "float", ")", ".", "isin", "(", "data", "['", "Long", "itude", "']", ".", "ast", "ype", "(", "float", ")", ".", "loc", "[", "data", "['", "Long", "itude", "']", ".", "ast", "ype", "(", "float", ")", ".", "isin", "(", "data", "['", "Long", "itude", "']", ".", "ast", "ype", "(", "float", ")", ".", "loc", "[", "data", "['", "Long", "itude", "']", ".", "ast", "ype", "(", "float", ")", ".", "isin", "(", "data", "['", "Long", "itude", "']", ".", "ast", "ype", "(", "float", ")", ".", "loc", "[", "data", "['", "Long", "itude", "']", ".", "ast", "ype", "(", "float", ")", ".", "isin", "(", "data", "['", "Long", "itude", "']", ".", "ast", "ype", "(", "float", ")", ".", "loc", "[", "data", "['", "Long", "itude", "']", ".", "ast", "ype", "(", "float", ")", ".", "isin", "(", "data", "['", "Long", "itude", "']", ".", "ast", "ype", "(", "float", ")", ".", "loc", "[", "data", "['", "Long", "itude", "']", ".", "ast", "ype", "(", "float", ")", ".", "isin", "(", "data", "['", "Long", "itude", "']", ".", "ast", "ype", "(", "float", ")", ".", "loc", "[", "data", "['", "Long", "itude", "']", "."], "logprobs": [-1.1919548511505127, -0.05245662480592728, -9.536697689327411e-06, -4.8874615458771586e-05, -0.024585120379924774, -2.186532497406006, -0.012773245573043823, -1.02395498752594, -0.16777147352695465, -0.009547761641442776, -0.0707014799118042, -0.00045074793160893023, -0.004659983795136213, -2.879093647003174, -0.07705710828304291, -0.0015981532633304596, -0.06326460838317871, -0.28115156292915344, -2.5981509685516357, -0.00016759421851020306, -0.09165594726800919, -0.4141354262828827, -0.052517931908369064, -0.5284010171890259, -3.03830623626709, -0.6737860441207886, -0.7515842914581299, -0.2360401153564453, -0.052759844809770584, -5.8887653722194955e-05, -0.00028534632292576134, -0.029385732486844063, -0.0423220656812191, -0.0001541257370263338, -0.0028584832325577736, -0.04552994295954704, -0.1469133049249649, -0.9532987475395203, -0.3653227388858795, -0.17915496230125427, -0.2153877466917038, -0.5003507137298584, -0.1412036269903183, -0.005380553659051657, -0.13452593982219696, -0.31672748923301697, -0.2551708221435547, -0.00021395778458099812, -0.0028646644204854965, -0.1841430366039276, -0.28322848677635193, -0.04051864147186279, -0.6148030757904053, -0.11985819786787033, -0.15076780319213867, -0.08577419072389603, -0.4706555902957916, -0.005436161067336798, -0.0015610187547281384, -0.1797047108411789, -0.4026043713092804, -9.154854342341423e-05, -0.0022339883726090193, -0.08560612797737122, -0.07487185299396515, -0.02258973754942417, -0.21112966537475586, -0.05872410908341408, -0.3972110152244568, -0.17100383341312408, -0.06679611653089523, -0.00016115797916427255, -0.037608906626701355, -0.012813497334718704, -0.039071425795555115, -4.935142715112306e-05, -0.0005276002921164036, -0.022362912073731422, -0.05186360329389572, -0.006160081829875708, -0.2698402404785156, -0.043424271047115326, -0.061019476503133774, -0.053382739424705505, -0.14836274087429047, -7.414542778860778e-05, -0.0006586528033949435, -0.004864405374974012, -0.08235002309083939, -4.482168878894299e-05, -0.00045158201828598976, -0.016536790877580643, -0.01883327215909958, -0.006755252834409475, -0.03379698842763901, -0.03375273197889328, -0.04004654660820961, -0.01051457691937685, -0.04813005030155182, -1.2636104656849056e-05, -0.007445089053362608, -0.009792031720280647, -0.006015055347234011, -4.970903682988137e-05, -0.0002019201492657885, -0.007716371677815914, -0.048278409987688065, -0.0028460018802434206, -0.1388542801141739, -0.018398460000753403, -0.01783781684935093, -0.007612741552293301, -0.0699523463845253, -5.8412379075889476e-06, -0.0004408579843584448, -0.00257422705180943, -0.006941015832126141, -2.8729025871143676e-05, -0.00018320789968129247, -0.00959074031561613, -0.007400006055831909, -0.0017260904423892498, -0.005842394195497036, -0.009987736120820045, -0.007547434885054827, -0.0034387523774057627, -0.03185213729739189, -5.245195097813848e-06, -0.004064276814460754, -0.0022515917662531137, -0.0016614693449810147, -2.002696055569686e-05, -0.0001262346631847322, -0.004423595033586025, -0.014180726371705532, -0.0016527815023437142, -0.02484772354364395, -0.005310002248734236, -0.01279396004974842, -0.001679201959632337, -0.03301484137773514, -2.861018856492592e-06, -0.00037949037505313754, -0.0016468308167532086, -0.0018791175680235028, -2.0146166207268834e-05, -0.000125281119835563, -0.0055751074105501175, -0.0056226435117423534, -0.00099871342536062, -0.0021291938610374928, -0.0029262362513691187, -0.0035103862173855305, -0.0014559156261384487, -0.01735067181289196, -2.9802276912960224e-06, -0.001518169417977333, -0.00116637849714607, -0.0012210302520543337, -2.0265373677830212e-05, -0.00013195598148740828, -0.0035943682305514812, -0.0073364609852433205, -0.0011320855701342225, -0.04644223302602768, -0.003939725458621979, -0.012493560090661049, -0.0007819455349817872, -0.018435675650835037, -1.4305104514278355e-06, -0.0003295593778602779, -0.0009470268851146102, -0.0014923398848623037, -3.433168603805825e-05, -0.00011181206355104223, -0.005101046059280634, -0.007708682678639889, -0.001068736077286303, -0.0030954801477491856, -0.00293990527279675, -0.004265971481800079, -0.0010912423022091389, -0.015134620480239391, -2.861018856492592e-06, -0.0012359131360426545, -0.0005174727994017303, -0.0009167758980765939, -2.109982233378105e-05, -0.00011836781777674332, -0.0041678003035485744, -0.00433956366032362, -0.0010113369207829237, -0.0289236381649971, -0.0042996820993721485, -0.013010493479669094, -0.0010245556477457285, -0.01929350197315216, -1.0728830375228426e-06, -0.0003766304289456457, -0.0008491248008795083, -0.0009860896971076727, -3.58813522325363e-05, -0.0001530530134914443, -0.0046775443479418755, -0.0072806039825081825, -0.0007624103454872966, -0.0016315970569849014, -0.0018237876938655972, -0.004742089658975601, -0.0010912423022091389, -0.010254436172544956, -2.264974000354414e-06, -0.0014855550834909081, -0.0004117832868359983, -0.0006799769471399486, -2.6464111215318553e-05, -0.0001486429391661659, -0.003989239223301411, -0.004729276057332754, -0.0009486941853538156, -0.03266530856490135, -0.0024618576280772686, -0.010483906604349613, -0.0006652049487456679, -0.015838298946619034, -8.344646857949556e-07, -0.00040558696491643786, -0.0005925330333411694, -0.0012010273057967424, -3.480850500636734e-05, -0.00012981049076188356, -0.0035168009344488382, -0.004841746762394905, -0.000392598332837224, -0.0012371037155389786, -0.0018089136574417353, -0.0029332491103559732, -0.0007717015105299652, -0.013452122919261456, -1.5497195136049413e-06, -0.0008668717346154153, -0.00033396866638213396, -0.0004349001101218164, -2.47952248173533e-05, -0.00011395759065635502, -0.0020273623522371054, -0.003196252044290304, -0.00041940953815355897, -0.009087039157748222, -0.0018378286622464657, -0.007276935037225485, -0.0004463391669560224, -0.014231850393116474, -1.4305104514278355e-06, -0.0004209585895296186, -0.00043275527423247695], "finish_reason": "length"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.2117985188961029, -0.000331704446580261, -0.0350186750292778, -0.00023827097902540118, -0.00027783826226368546, -0.000366263062460348, -9.894321920000948e-06, -0.06088993325829506, -0.047948259860277176, -0.0014917447697371244, -0.008456612005829811, -0.06922979652881622], "finish_reason": "stop"}, {"text": " data.iloc[nearest_indices].values", "tokens": [" data", ".", "il", "oc", "[", "ne", "arest", "_", "indices", "]", ".", "values", "\n"], "logprobs": [-0.26465079188346863, -0.03647888824343681, -0.20554353296756744, -6.437280717364047e-06, -0.0018929197685793042, -0.013493170030415058, -0.00017045476124621928, -8.344646857949556e-07, -1.7762025890988298e-05, -0.10710751265287399, -0.0648965835571289, -1.6685268878936768, -0.5242463946342468], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "\n"], "logprobs": [-0.007707263343036175, -5.113947918289341e-05, -5.578839045483619e-05, -7.283422019099817e-05, -0.3688347339630127], "finish_reason": "stop"}], "metrics": {"energy": 760.4191912498467, "energy_per_token": 1.7282254346587425, "time": 25.658863, "time_per_token": 0.058315597727272725}}
{"outputs": [{"text": " not isinstance(k, int) or k < 0:", "tokens": [" not", " isinstance", "(", "k", ",", " int", ")", " or", " k", " <", " ", "0", ":", "\n"], "logprobs": [-0.42849767208099365, -0.10607624053955078, -0.0005781171494163573, -0.0960288867354393, -0.0007917130133137107, -0.027842888608574867, -0.819847047328949, -0.02922944724559784, -0.04074951261281967, -0.0691075474023819, -0.005433552898466587, -0.09914679080247879, -0.014808965846896172, -0.016751108691096306], "finish_reason": "stop"}, {"text": " ValueError(f'k must be a non-negative integer, not {k}')", "tokens": [" Value", "Error", "(", "f", "'", "k", " must", " be", " a", " non", "-", "negative", " integer", ",", " not", " {", "k", "}", "')", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -0.2305050790309906, -2.2144951820373535, -1.8116507530212402, -0.4018627107143402, -0.2860206067562103, -0.005392173305153847, -0.19750496745109558, -0.05968969687819481, -0.0031028480734676123, -0.002444971352815628, -0.01283938903361559, -0.3811759948730469, -1.3491590023040771, -0.0774533599615097, -0.3155091404914856, -0.028166992589831352, -0.08462417870759964, -0.003400141606107354], "finish_reason": "stop"}, {"text": " 6371  # km", "tokens": [" ", "6", "3", "7", "1", "  ", "#", " km", "\n"], "logprobs": [-0.012320601381361485, -0.0010526598198339343, -0.0014109190087765455, -0.0010332489619031549, -0.0022910793777555227, -1.1445579528808594, -0.0019873883575201035, -1.0774741172790527, -0.06752455234527588], "finish_reason": "stop"}, {"text": " lon1 = coord1", "tokens": [" lon", "1", " =", " coord", "1", "\n"], "logprobs": [-0.1857108324766159, -1.549708758830093e-05, -0.10124004632234573, -0.6434162855148315, -0.0031509771943092346, -0.3156818151473999], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-9.619726915843785e-05, -2.992108420585282e-05, -9.97731985989958e-05, -0.0014279417227953672, -0.00041631137719377875, -6.294052582234144e-05, -0.00019870213873218745, -3.671578815556131e-05, -0.000377583724912256, -0.0004935238393954933, -0.00047267231275327504, -0.0002051381452474743, -0.00010179955279454589, -3.0874729418428615e-05, -0.00015364897262770683, -0.0015804193681105971, -1.2636104656849056e-05, -0.0002454218047205359, -0.0001174142598756589, -0.00042060110718011856, -0.0002719986077863723, -1.0132738680113107e-05, -0.0002374367177253589, -1.0967194612021558e-05, -0.00043478095903992653], "finish_reason": "stop"}, {"text": " math.radians(lat2 - lat1)", "tokens": [" math", ".", "rad", "ians", "(", "lat", "2", " -", " lat", "1", ")", "\n"], "logprobs": [-2.100153923034668, -3.2186455882765586e-06, -0.30070948600769043, -1.3470558769768104e-05, -0.006879690568894148, -0.14162886142730713, -0.04408619925379753, -0.16391560435295105, -0.0006302992696873844, -0.00013267113536130637, -0.00034767304896377027, -0.0034638189245015383], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.0001699779968475923, -0.00011395759065635502, -0.0007365613128058612, -4.088794958079234e-05, -4.207999518257566e-05, -0.0001110968878492713], "finish_reason": "stop"}, {"text": " math.sin(dlat / 2) ** 2 + math.cos(lat1) * math.cos(lat2) * math.sin(dlon / 2) ** 2", "tokens": [" math", ".", "sin", "(", "d", "lat", " /", " ", "2", ")", " **", " ", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " math", ".", "sin", "(", "dl", "on", " /", " ", "2", ")", " **", " ", "2", "\n"], "logprobs": [-0.31998735666275024, -4.768370445162873e-07, -0.10461903363466263, -0.0002335037279408425, -0.0009015309624373913, -6.294052582234144e-05, -0.3536018431186676, -0.0005007919971831143, -2.5629668016335927e-05, -1.2875502109527588, -0.0031717729289084673, -0.0020121345296502113, -9.65590606938349e-06, -0.00846133939921856, -0.012508747167885303, -2.2649508537142538e-05, -0.02514524944126606, -2.4676019165781327e-05, -0.0004644507134798914, -0.01155092939734459, -0.00012361239350866526, -0.0004876854654867202, -0.001416513929143548, -0.00017987063620239496, -0.005019207019358873, -9.179073458653875e-06, -0.0006717570940963924, -4.3987260141875595e-05, -0.00023314618738368154, -0.004026877228170633, -0.024822605773806572, -0.0002924968139268458, -0.0002525725867599249, -5.3165931603871286e-05, -0.00045980370487086475, -2.658331868587993e-05, -0.0015180503251031041, -0.0005477358354255557, -1.537788011773955e-05, -0.017567509785294533, -7.843663479434326e-05, -0.001835091970860958, -2.861018856492592e-06, -0.0005970602505840361], "finish_reason": "stop"}, {"text": " 2 * math.atan2(math.sqrt(a), math.sqrt(1-a))", "tokens": [" ", "2", " *", " math", ".", "atan", "2", "(", "math", ".", "sqrt", "(", "a", ")", ",", " math", ".", "sqrt", "(", "1", "-", "a", "))", "\n"], "logprobs": [-0.0009135602158494294, -0.00016115797916427255, -0.022045083343982697, -0.004739005118608475, -4.768370445162873e-07, -1.722811222076416, -0.0008197046699933708, -0.0003401654539629817, -0.008538761176168919, -3.576278118089249e-07, -9.858122211880982e-05, -1.6927575416048057e-05, -3.9219088648678735e-05, -2.825220326485578e-05, -0.00023588736075907946, -0.0014135378878563643, -6.782778655178845e-05, -4.434487345861271e-05, -4.792098479811102e-05, -0.023484181612730026, -0.05542651191353798, -0.00036149643710814416, -8.535020606359467e-05, -0.002021889900788665], "finish_reason": "stop"}, {"text": " RADIUS_EARTH_KM * c  # distance in kilometers", "tokens": [" R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", " *", " c", "  ", "#", " distance", " in", " kilometers", "\n"], "logprobs": [-0.5157528519630432, -5.006664650863968e-05, -5.960446742392378e-06, -4.7801782784517854e-05, -5.8412379075889476e-06, -7.748573807475623e-06, -1.9073468138230965e-06, -9.536697689327411e-06, -3.123234637314454e-05, -0.00011503035057103261, -0.00862846802920103, -0.0009754904895089567, -1.7070648670196533, -0.00030596344731748104, -3.295837640762329, -0.050798311829566956, -0.21778905391693115, -0.010900947265326977], "finish_reason": "stop"}, {"text": " [calculate_distance(coord, target) for coord in data.itertuples(index=False)]", "tokens": [" [", "calculate", "_", "distance", "(", "coord", ",", " target", ")", " for", " coord", " in", " data", ".", "it", "ert", "up", "les", "(", "index", "=", "False", ")]", "\n"], "logprobs": [-1.0638433694839478, -0.04556228965520859, -9.536697689327411e-06, -4.625213477993384e-05, -0.02287605218589306, -1.663446068763733, -0.1021856963634491, -0.015034927055239677, -0.006559270434081554, -0.019996246322989464, -0.03112543746829033, -0.0002674698771443218, -0.005213356576859951, -0.2008453607559204, -1.9669067859649658, -0.0018314032349735498, -0.0005619138828478754, -9.536738616588991e-07, -0.1953878253698349, -0.013974555768072605, -0.01817290671169758, -0.00961045827716589, -1.3479602336883545, -0.02084444649517536], "finish_reason": "stop"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.2633402645587921, -0.00032729512895457447, -0.03199207782745361, -0.0002611534437164664, -0.0003334919747430831, -0.0004158347437623888, -1.0132738680113107e-05, -0.07137612253427505, -0.09037164598703384, -0.0017390617867931724, -0.008393724448978901, -0.06979493796825409], "finish_reason": "stop"}, {"text": " data.iloc[nearest_indices].to_numpy()", "tokens": [" data", ".", "il", "oc", "[", "ne", "arest", "_", "indices", "]", ".", "to", "_", "numpy", "()", "\n"], "logprobs": [-0.27849242091178894, -0.033452108502388, -0.1726328730583191, -8.4638240878121e-06, -0.0018573428969830275, -0.010413359850645065, -0.0001397035230183974, -1.1920922133867862e-06, -1.9550132492440753e-05, -0.08418253809213638, -0.06596114486455917, -0.24199512600898743, -2.1457441107486375e-05, -0.10593514144420624, -0.010128883644938469, -0.07148001343011856], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "\n"], "logprobs": [-0.007153138518333435, -4.827859811484814e-05, -5.5549986427649856e-05, -7.915183232398704e-05, -0.3363513946533203], "finish_reason": "stop"}], "metrics": {"energy": 420.600068256378, "energy_per_token": 1.7897875244952255, "time": 15.219603, "time_per_token": 0.06476426808510638}}
{"outputs": [{"text": " not isinstance(k, int):", "tokens": [" not", " isinstance", "(", "k", ",", " int", "):", "\n"], "logprobs": [-0.42849767208099365, -0.10607624053955078, -0.0005781171494163573, -0.0960288867354393, -0.0007917130133137107, -0.027842888608574867, -0.581300675868988, -0.02165401354432106], "finish_reason": "stop"}, {"text": " ValueError(\"'k' must be a non-negative integer.\")", "tokens": [" Value", "Error", "(", "\"", "'", "k", "'", " must", " be", " a", " non", "-", "negative", " integer", ".", "\"", ")", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -0.2305050790309906, -0.1437573879957199, -0.9894286394119263, -0.0036493625957518816, -0.001900772680528462, -0.11651798337697983, -0.003042475553229451, -0.05675104632973671, -0.04075271636247635, -0.0008314966107718647, -0.0011397063499316573, -0.004253745079040527, -1.0350453853607178, -0.005263162776827812, -0.0003475538978818804, -0.004300394095480442], "finish_reason": "stop"}, {"text": " 6371", "tokens": [" ", "6", "3", "7", "1", "\n"], "logprobs": [-0.011734036728739738, -0.0012822272256016731, -0.0014478211523965001, -0.0010931475553661585, -0.0023406746331602335, -0.6075398325920105], "finish_reason": "stop"}, {"text": " lon1 = math.radians(coord1[0]), math.radians(coord1[1])", "tokens": [" lon", "1", " =", " math", ".", "rad", "ians", "(", "coord", "1", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "1", "[", "1", "])", "\n"], "logprobs": [-0.18584011495113373, -1.549708758830093e-05, -0.09098940342664719, -1.160569667816162, -8.106198947643861e-06, -0.002764929085969925, -0.00014327930693980306, -0.0022963127121329308, -0.0017751187551766634, -0.00048828122089616954, -0.18814170360565186, -0.005291978362947702, -0.001878284616395831, -0.0001299296854995191, -0.0009751332108862698, -0.00163433444686234, -1.8000440832111053e-05, -8.082063141046092e-05, -6.687417771900073e-05, -0.00013028726971242577, -0.0009253510506823659, -9.262132516596466e-05, -0.0003060825983993709, -0.00032074074260890484, -0.0037064917851239443], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-9.97731985989958e-05, -2.6225699912174605e-05, -0.00010513706365600228, -0.0017450118903070688, -0.0004220310365781188, -0.00010895135346800089, -0.00016866691294126213, -3.1709168979432434e-05, -0.0003066784702241421, -0.0004412154376041144, -0.00040534863364882767, -0.00018726025882642716, -9.285972191719338e-05, -3.3854863431770355e-05, -0.00016151554882526398, -0.0020202244631946087, -1.4543427823809907e-05, -0.00023052419419400394, -0.0001003691868390888, -0.00038092033355496824, -0.00023624490131624043, -7.510157047363464e-06, -0.00022480344341602176, -9.179073458653875e-06, -0.0005007919971831143], "finish_reason": "stop"}, {"text": " lat2 - lat1", "tokens": [" lat", "2", " -", " lat", "1", "\n"], "logprobs": [-0.2854022979736328, -0.08986236900091171, -0.04395604133605957, -0.0002294515579706058, -8.594620157964528e-05, -0.0020632902160286903], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.00017510310863144696, -0.000102037942269817, -0.0006803343421779573, -4.2437604861333966e-05, -3.671578815556131e-05, -0.00011681827891152352], "finish_reason": "stop"}, {"text": " (math.sin(dlat/2) ** 2) + (math.cos(lat1) * math.cos(lat2) * (math.sin(dlon/2) ** 2))", "tokens": [" (", "math", ".", "sin", "(", "d", "lat", "/", "2", ")", " **", " ", "2", ")", " +", " (", "math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " (", "math", ".", "sin", "(", "dl", "on", "/", "2", ")", " **", " ", "2", "))", "\n"], "logprobs": [-1.3292747735977173, -0.12504585087299347, -3.576278118089249e-07, -0.006310418248176575, -0.0001232548092957586, -0.0006989181856624782, -4.7801782784517854e-05, -1.2292885780334473, -0.0005165196489542723, -1.3224245309829712, -0.03628382086753845, -0.008955905213952065, -2.396077979938127e-05, -0.08175546675920486, -0.0019165972480550408, -0.04274363070726395, -0.0012706785928457975, -5.638440416078083e-05, -0.11980193853378296, -5.6503606174374e-05, -0.0006277974462136626, -0.010195319540798664, -0.008938301354646683, -0.0006989181856624782, -0.01742612011730671, -0.00043466180795803666, -0.0108446991071105, -1.0251946150674485e-05, -0.0010561132803559303, -6.16293036728166e-05, -0.009572911076247692, -0.004140851553529501, -0.09944459795951843, -0.0005041282274760306, -1.2516897186287679e-05, -3.5523738915799186e-05, -1.7404405298293568e-05, -0.00020859450160060078, -6.711257447022945e-05, -0.004550933837890625, -3.6477376852417365e-05, -0.00852304045110941, -0.0007519278442487121, -0.0037463970948010683, -1.7404405298293568e-05, -0.004966897424310446, -0.0006133820279501379], "finish_reason": "stop"}, {"text": " 2 * math.asin(math.sqrt(a))", "tokens": [" ", "2", " *", " math", ".", "as", "in", "(", "math", ".", "sqrt", "(", "a", "))", "\n"], "logprobs": [-0.000947622349485755, -0.0001746263587847352, -0.020557783544063568, -0.00401405431330204, -4.768370445162873e-07, -0.21237178146839142, -5.483612312673358e-06, -0.0009639384225010872, -0.003339905757457018, -8.344646857949556e-07, -0.0001284993631998077, -1.5020257706055418e-05, -0.00011753345461329445, -0.00026174934464506805, -0.0031001148745417595], "finish_reason": "stop"}, {"text": " math.ceil(RADIUS_EARTH_KM * c)", "tokens": [" math", ".", "ceil", "(", "R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", " *", " c", ")", "\n"], "logprobs": [-2.294579029083252, -1.4305104514278355e-06, -2.2120792865753174, -0.04615610092878342, -0.5816177129745483, -3.576214658096433e-05, -1.597391747054644e-05, -9.154854342341423e-05, -1.0967194612021558e-05, -7.390948667307384e-06, -1.4305104514278355e-06, -6.556489552167477e-06, -2.4914430468925275e-05, -7.83174327807501e-05, -0.08340933918952942, -0.00438039330765605, -0.4375403821468353, -0.41313764452934265], "finish_reason": "stop"}, {"text": " [calculate_distance(data['Latitude'].iloc[i], data['Longitude'].iloc[i])", "tokens": [" [", "calculate", "_", "distance", "(", "data", "['", "Lat", "itude", "']", ".", "il", "oc", "[", "i", "]", ",", " data", "['", "Long", "itude", "']", ".", "il", "oc", "[", "i", "])", "\n"], "logprobs": [-1.1953942775726318, -0.06285026669502258, -1.0847986231965479e-05, -6.05564855504781e-05, -0.019006861373782158, -2.1049883365631104, -1.9788068532943726, -0.028209062293171883, -9.512448741588742e-05, -0.06833873689174652, -0.3187606930732727, -0.15149885416030884, -0.00015841660206206143, -0.010251250118017197, -0.11153490096330643, -0.002447825390845537, -0.014195535331964493, -0.14868271350860596, -0.0014719852479174733, -0.0002131234941771254, -2.312633478140924e-05, -0.001121726119890809, -0.00039915222441777587, -4.100715523236431e-05, -1.549708758830093e-05, -0.0004017737810499966, -0.01925058662891388, -0.01602836512029171, -1.6722737550735474], "finish_reason": "stop"}, {"text": " distances.argsort()[:k]", "tokens": [" distances", ".", "args", "ort", "()", "[:", "k", "]", "\n"], "logprobs": [-1.6793153285980225, -0.0008482910343445837, -0.0011892396723851562, -0.00109112320933491, -0.17204749584197998, -0.055526770651340485, -0.002816402819007635, -0.007855238392949104, -0.09254506230354309], "finish_reason": "stop"}, {"text": " data.iloc[nearest_indices].to_numpy()", "tokens": [" data", ".", "il", "oc", "[", "ne", "arest", "_", "indices", "]", ".", "to", "_", "numpy", "()", "\n"], "logprobs": [-0.27023419737815857, -0.035121459513902664, -0.21337489783763885, -5.245195097813848e-06, -0.0016132686287164688, -0.009631592780351639, -0.0001627074379939586, -8.344646857949556e-07, -2.5629668016335927e-05, -0.09297183156013489, -0.07024119794368744, -0.28236833214759827, -1.811964830267243e-05, -0.08293315023183823, -0.01017702929675579, -0.07427383214235306], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "\n"], "logprobs": [-0.008380838669836521, -5.709961988031864e-05, -7.164221460698172e-05, -7.033100700937212e-05, -0.38169795274734497], "finish_reason": "stop"}], "metrics": {"energy": 439.2622307491304, "energy_per_token": 1.8852456255327485, "time": 15.206621, "time_per_token": 0.0652644678111588}}
{"outputs": [{"text": " not isinstance(k, int):", "tokens": [" not", " isinstance", "(", "k", ",", " int", "):", "\n"], "logprobs": [-0.42849767208099365, -0.10607624053955078, -0.0005781171494163573, -0.0960288867354393, -0.0007917130133137107, -0.027842888608574867, -0.581300675868988, -0.02165401354432106], "finish_reason": "stop"}, {"text": " ValueError('k must be a non-negative integer')", "tokens": [" Value", "Error", "('", "k", " must", " be", " a", " non", "-", "negative", " integer", "')", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -1.6672230958938599, -0.3376762866973877, -0.17633379995822906, -0.0030859727412462234, -0.0946008712053299, -0.06347887217998505, -0.0025869496166706085, -0.001450082752853632, -0.007667988538742065, -0.10608106851577759, -0.002156553091481328], "finish_reason": "stop"}, {"text": " 6371  # Radius of Earth in kilometers", "tokens": [" ", "6", "3", "7", "1", "  ", "#", " Rad", "ius", " of", " Earth", " in", " kilometers", "\n"], "logprobs": [-0.009556381031870842, -0.0011865011183544993, -0.0014024670235812664, -0.0010849310783669353, -0.00224956963211298, -1.1231300830841064, -0.002188075101003051, -1.531680941581726, -0.0005952732171863317, -0.012629764154553413, -1.663135290145874, -0.13801424205303192, -0.08243455737829208, -0.07966721802949905], "finish_reason": "stop"}, {"text": " lon1 = coord1", "tokens": [" lon", "1", " =", " coord", "1", "\n"], "logprobs": [-0.1863720566034317, -1.549708758830093e-05, -0.11258590966463089, -0.5586482286453247, -0.0031931623816490173, -0.3027347922325134], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-9.846202738117427e-05, -2.682172998902388e-05, -0.00010442188795423135, -0.001803796854801476, -0.0004068977141287178, -5.054346183896996e-05, -0.0001525762490928173, -3.313963316031732e-05, -0.0003046525234822184, -0.00047874910524114966, -0.0004951919545419514, -0.00019894051365554333, -8.749579137656838e-05, -3.802703940891661e-05, -0.00021836756786797196, -0.0015555436257272959, -1.4543427823809907e-05, -0.00025185750564560294, -0.00010382589971413836, -0.0004542034293990582, -0.0002796259068418294, -1.156323378381785e-05, -0.0002456601650919765, -1.3470558769768104e-05, -0.0006177900941111147], "finish_reason": "stop"}, {"text": " lat1 - lat2", "tokens": [" lat", "1", " -", " lat", "2", "\n"], "logprobs": [-0.3077547252178192, -2.5749106407165527, -0.017619047313928604, -0.00014768941036891192, -5.352353764465079e-05, -0.002314390614628792], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.00018189683032687753, -0.00011598391574807465, -0.0006058764411136508, -4.994744449504651e-05, -4.815939246327616e-05, -0.00011860620725201443], "finish_reason": "stop"}, {"text": " math.sin(dlat / 2)**2 + math.cos(lat1) * math.cos(lat2) * math.sin(dlon / 2)**2", "tokens": [" math", ".", "sin", "(", "d", "lat", " /", " ", "2", ")**", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " math", ".", "sin", "(", "dl", "on", " /", " ", "2", ")**", "2", "\n"], "logprobs": [-0.35556653141975403, -5.960462772236497e-07, -0.09165278822183609, -0.00025960413040593266, -0.0008998635457828641, -5.173549288883805e-05, -0.3436633050441742, -0.0004605186404660344, -2.5987286790041253e-05, -0.3618515729904175, -0.00010954733443213627, -0.0015585192013531923, -0.0049233632162213326, -1.585470999998506e-05, -0.016924826428294182, -3.4450891689630225e-05, -0.00039307496626861393, -0.0132939163595438, -0.004115446005016565, -0.0002449450839776546, -0.0011293468996882439, -0.0001629458274692297, -0.0025913489516824484, -9.65590606938349e-06, -0.0003880701260641217, -4.1960789531003684e-05, -0.00025900822947733104, -0.0027286699041724205, -0.018792910501360893, -0.00017927470616996288, -0.0001629458274692297, -2.9444261599564925e-05, -0.00019441144831944257, -3.3378044463461265e-05, -0.002975324634462595, -0.000952386180870235, -1.2516897186287679e-05, -0.002611799631267786, -3.802703940891661e-05, -0.0007365613128058612], "finish_reason": "stop"}, {"text": " 2 * math.asin(math.sqrt(a))", "tokens": [" ", "2", " *", " math", ".", "as", "in", "(", "math", ".", "sqrt", "(", "a", "))", "\n"], "logprobs": [-0.0009527434594929218, -0.00016509123088326305, -0.022450221702456474, -0.0042650215327739716, -4.768370445162873e-07, -0.23004668951034546, -4.887569048150908e-06, -0.0008715168805792928, -0.004458487033843994, -1.0728830375228426e-06, -0.00013279033009894192, -1.3112935448589269e-05, -0.00015162272029556334, -0.00024184639914892614, -0.0034538398031145334], "finish_reason": "stop"}, {"text": " c * RADIUS_EARTH_KM", "tokens": [" c", " *", " R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", "\n"], "logprobs": [-1.6100702285766602, -0.053088296204805374, -0.005674562882632017, -1.728519782773219e-05, -6.9141146923357155e-06, -8.368142152903602e-05, -8.344646857949556e-07, -7.271740287251305e-06, -1.7881377516459906e-06, -4.6491513785440475e-06, -2.539125671319198e-05, -0.0001232548092957586, -0.23452746868133545], "finish_reason": "stop"}, {"text": " [calculate_distance(data.iloc[i].values, target) for i in range(len(data))]", "tokens": [" [", "calculate", "_", "distance", "(", "data", ".", "il", "oc", "[", "i", "]", ".", "values", ",", " target", ")", " for", " i", " in", " range", "(", "len", "(", "data", "))", "]", "\n"], "logprobs": [-1.146277666091919, -0.046313632279634476, -1.1086402082582936e-05, -5.328513361746445e-05, -0.022202495485544205, -2.129793882369995, -0.27342450618743896, -0.11655416339635849, -0.0001081169830285944, -0.0020574608352035284, -0.07276861369609833, -0.6679515242576599, -0.5935713052749634, -0.2560328245162964, -0.03769030421972275, -0.047065433114767075, -0.004178484436124563, -0.046374522149562836, -0.0001072826053132303, -0.0005673944251611829, -0.0075578466057777405, -0.000382707774406299, -0.24400922656059265, -1.764281842042692e-05, -0.0005595310358330607, -0.010283107869327068, -0.004461928736418486, -0.02877596952021122], "finish_reason": "stop"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.220370814204216, -0.0002627027570270002, -0.027629775926470757, -0.00027938754647038877, -0.0003181189822498709, -0.0003762729174923152, -1.0609570381348021e-05, -0.06821414828300476, -0.061475273221731186, -0.0017581019783392549, -0.008951887488365173, -0.0811716616153717], "finish_reason": "stop"}, {"text": " [list(data.iloc[i]['Latitude']) + list(data.iloc[i]['Longitude']) for i in nearest_indices]", "tokens": [" [", "list", "(", "data", ".", "il", "oc", "[", "i", "]['", "Lat", "itude", "'])", " +", " list", "(", "data", ".", "il", "oc", "[", "i", "]['", "Long", "itude", "'])", " for", " i", " in", " nearest", "_", "indices", "]", "\n"], "logprobs": [-2.030426025390625, -2.7578811645507812, -0.0009859706042334437, -0.0364377424120903, -0.04127606749534607, -0.1398240178823471, -4.184158387943171e-05, -0.0025562725495547056, -0.3506212532520294, -2.998302936553955, -0.06911833584308624, -0.0021137294825166464, -0.6608342528343201, -0.2408856898546219, -0.6328526735305786, -0.0005541696446016431, -0.004838780965656042, -0.000402250443585217, -0.0001289761275984347, -0.0002554328821133822, -8.904537389753386e-05, -7.10462118149735e-05, -0.0024289172142744064, -0.00013100242358632386, -1.7165990357170813e-05, -0.0013624681159853935, -0.05722128972411156, -0.00027223696815781295, -0.00024732868769206107, -0.009053843095898628, -2.622600959512056e-06, -9.417489309271332e-06, -0.013013199903070927, -0.006060081999748945], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "\n"], "logprobs": [-0.007616172544658184, -5.054346183896996e-05, -8.046303264563903e-05, -6.806619057897478e-05, -0.39432331919670105], "finish_reason": "stop"}], "metrics": {"energy": 465.4357685222628, "energy_per_token": 2.068603415654501, "time": 15.053097, "time_per_token": 0.06690265333333333}}
{"outputs": [{"text": " not isinstance(data, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "data", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.42849767208099365, -0.10607624053955078, -0.0005781171494163573, -2.7813868522644043, -0.024861561134457588, -0.36627158522605896, -3.313963316031732e-05, -0.05340036749839783, -0.19275029003620148, -0.011854204349219799], "finish_reason": "stop"}, {"text": " ValueError(\"'k' must be a non-negative integer\")", "tokens": [" Value", "Error", "(", "\"", "'", "k", "'", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -0.2305050790309906, -0.1437573879957199, -0.9894286394119263, -0.0036493625957518816, -0.001900772680528462, -0.11651798337697983, -0.003042475553229451, -0.05675104632973671, -0.04075271636247635, -0.0008314966107718647, -0.0011397063499316573, -0.004253745079040527, -0.4964959919452667, -0.00020787939138244838, -0.004039343912154436], "finish_reason": "stop"}, {"text": " 6371", "tokens": [" ", "6", "3", "7", "1", "\n"], "logprobs": [-0.01035389956086874, -0.0011545903980731964, -0.001420561340637505, -0.0011392300948500633, -0.0024147657677531242, -0.592377781867981], "finish_reason": "stop"}, {"text": " lon1 = math.radians(coord1[0]), math.radians(coord1[1])", "tokens": [" lon", "1", " =", " math", ".", "rad", "ians", "(", "coord", "1", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "1", "[", "1", "])", "\n"], "logprobs": [-0.1862134486436844, -1.680836794548668e-05, -0.10691192746162415, -1.1007015705108643, -8.940656698541716e-06, -0.0027385372668504715, -0.00014184899919200689, -0.0029955299105495214, -0.001729184528812766, -0.0005414212355390191, -0.2381884604692459, -0.005070920567959547, -0.0018120075110346079, -0.000125281119835563, -0.0011252983240410686, -0.0015043619787320495, -1.2874520507466514e-05, -6.580135959666222e-05, -4.994744449504651e-05, -0.00013016807497479022, -0.0009334497735835612, -9.786603914108127e-05, -0.00034600470098666847, -0.00027021096320822835, -0.003432455938309431], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-0.0001110968878492713, -3.0636318115284666e-05, -0.00010191874753218144, -0.0015630420530214906, -0.00036221143091097474, -6.186770770000294e-05, -0.00015710550360381603, -4.577531944960356e-05, -0.0003133521240670234, -0.0004459816846065223, -0.000474936212413013, -0.00016008525562938303, -7.319182623177767e-05, -3.0040289857424796e-05, -0.00016032364510465413, -0.0015367376618087292, -1.6927575416048057e-05, -0.00020776021119672805, -5.8530047681415454e-05, -0.0003461238811723888, -0.00022206225548870862, -1.0609570381348021e-05, -0.00023815179883968085, -8.821448318485636e-06, -0.0005061537376604974], "finish_reason": "stop"}, {"text": " lat2 - lat1", "tokens": [" lat", "2", " -", " lat", "1", "\n"], "logprobs": [-0.3400987982749939, -0.0848902016878128, -0.05274571105837822, -0.0002932118659373373, -8.511180931236595e-05, -0.0019751342479139566], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.00015710550360381603, -0.00011383838864276186, -0.00063744728686288, -4.672895011026412e-05, -4.827859811484814e-05, -9.77468371274881e-05], "finish_reason": "stop"}, {"text": " math.sin(dlat / 2)**2 + math.cos(lat1) * math.cos(lat2) * math.sin(dlon / 2)**2", "tokens": [" math", ".", "sin", "(", "d", "lat", " /", " ", "2", ")**", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " math", ".", "sin", "(", "dl", "on", " /", " ", "2", ")**", "2", "\n"], "logprobs": [-0.3568793833255768, -4.768370445162873e-07, -0.1019272431731224, -0.0003203832311555743, -0.0010190776083618402, -5.8530047681415454e-05, -0.34532296657562256, -0.0005171154043637216, -2.539125671319198e-05, -0.4224856495857239, -0.00010907054820563644, -0.0015911312075331807, -0.004538354929536581, -1.490105023549404e-05, -0.014440670609474182, -3.0278701160568744e-05, -0.0003985564399044961, -0.010643383488059044, -0.0062543852254748344, -0.0002256377338198945, -0.0012949660886079073, -0.00016640232934150845, -0.003770030802115798, -9.179073458653875e-06, -0.000502817565575242, -4.2676016164477915e-05, -0.0002613918040879071, -0.002277282765135169, -0.0309672299772501, -0.0002090712368953973, -0.00013910756388213485, -3.564294092939235e-05, -0.00023409964342135936, -3.2305197237292305e-05, -0.002303448738530278, -0.0008532935753464699, -1.3708974620385561e-05, -0.002477316651493311, -3.302042750874534e-05, -0.0006739014061167836], "finish_reason": "stop"}, {"text": " 2 * math.asin(math.sqrt(a))", "tokens": [" ", "2", " *", " math", ".", "as", "in", "(", "math", ".", "sqrt", "(", "a", "))", "\n"], "logprobs": [-0.0009628665866330266, -0.00017009719158522785, -0.02053571119904518, -0.005026679486036301, -4.768370445162873e-07, -0.33090493083000183, -5.245195097813848e-06, -0.0008046964649111032, -0.003600069787353277, -9.536738616588991e-07, -0.00012265883560758084, -1.5258672647178173e-05, -0.00013374387344811112, -0.00025149996508844197, -0.002928851405158639], "finish_reason": "stop"}, {"text": " c * RADIUS_EARTH_KM", "tokens": [" c", " *", " R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", "\n"], "logprobs": [-1.6802978515625, -0.06150655075907707, -0.006302244495600462, -1.6689160474925302e-05, -6.6756979322235566e-06, -7.724463648628443e-05, -9.536738616588991e-07, -9.298280929215252e-06, -2.3841830625315197e-06, -5.722029527532868e-06, -2.3603161025675945e-05, -0.00010287232726113871, -0.22735050320625305], "finish_reason": "stop"}, {"text": " [calculate_distance(d, target) for d in data.values]", "tokens": [" [", "calculate", "_", "distance", "(", "d", ",", " target", ")", " for", " d", " in", " data", ".", "values", "]", "\n"], "logprobs": [-1.0921361446380615, -0.047352444380521774, -8.34461570775602e-06, -5.924526340095326e-05, -0.02255920134484768, -2.7988181114196777, -0.1184876561164856, -0.022416766732931137, -0.005720197688788176, -0.007701939903199673, -0.0210832878947258, -7.509902934543788e-05, -0.012872576713562012, -0.2384767383337021, -0.38515689969062805, -0.13047827780246735, -0.04480263218283653], "finish_reason": "stop"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.241866797208786, -0.00023719835735391825, -0.033165231347084045, -0.00026246439665555954, -0.00029845553217455745, -0.0004551566671580076, -1.1801649634435307e-05, -0.06856739521026611, -0.06252847611904144, -0.0017150230705738068, -0.010040373541414738, -0.06920399516820908], "finish_reason": "stop"}, {"text": " data.to_numpy()[nearest_indices]", "tokens": [" data", ".", "to", "_", "numpy", "()[", "ne", "arest", "_", "indices", "]", "\n"], "logprobs": [-0.2835739254951477, -0.03815651312470436, -2.1735076904296875, -0.0030717116314917803, -0.002037236699834466, -0.010460195131599903, -0.0023377013858407736, -0.00032443503732793033, -5.960462772236497e-07, -1.6212332411669195e-05, -0.03273303061723709, -0.0533943772315979], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "\n"], "logprobs": [-0.007048740051686764, -5.7338023907504976e-05, -7.974783511599526e-05, -6.770858453819528e-05, -0.4292610287666321], "finish_reason": "stop"}], "metrics": {"energy": 430.9362384967803, "energy_per_token": 2.0618958779750254, "time": 14.184875, "time_per_token": 0.06787021531100479}}
{"outputs": [{"text": " not isinstance(k, int):", "tokens": [" not", " isinstance", "(", "k", ",", " int", "):", "\n"], "logprobs": [-0.42849767208099365, -0.10607624053955078, -0.0005781171494163573, -0.0960288867354393, -0.0007917130133137107, -0.027842888608574867, -0.581300675868988, -0.02165401354432106], "finish_reason": "stop"}, {"text": " ValueError(\"The value for 'k' must be a non-negative integer.\")", "tokens": [" Value", "Error", "(", "\"", "The", " value", " for", " '", "k", "'", " must", " be", " a", " non", "-", "negative", " integer", ".", "\"", ")", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -0.2305050790309906, -0.1437573879957199, -2.7784910202026367, -1.7437260150909424, -2.680447578430176, -0.727213442325592, -0.004395941272377968, -0.002000237349420786, -0.2865390181541443, -0.005260316655039787, -0.13034716248512268, -0.09004105627536774, -0.0022509971167892218, -0.002054129960015416, -0.008228330872952938, -0.40750032663345337, -0.009635606780648232, -0.00045253525604493916, -0.0044138627126812935], "finish_reason": "stop"}, {"text": " 6371", "tokens": [" ", "6", "3", "7", "1", "\n"], "logprobs": [-0.010060318745672703, -0.00115863885730505, -0.0013044904917478561, -0.0010546842822805047, -0.0023651740048080683, -0.5970315933227539], "finish_reason": "stop"}, {"text": " lng1 = coord1[0], coord1[1]", "tokens": [" l", "ng", "1", " =", " coord", "1", "[", "0", "]", ",", " coord", "1", "[", "1", "]", "\n"], "logprobs": [-2.2875006198883057, -0.0024667331017553806, -5.209310256759636e-05, -0.06514512747526169, -0.5398041009902954, -0.002688248408958316, -1.6089586019515991, -0.018229328095912933, -0.05168396234512329, -0.5571267604827881, -0.0020996923558413982, -0.0013848486123606563, -0.00033408781746402383, -0.0005142558366060257, -0.0002324311062693596, -0.015809081494808197], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-0.00010406429646536708, -2.7417760065873154e-05, -9.798523387871683e-05, -0.001279607880860567, -0.00044848397374153137, -4.482168878894299e-05, -0.00014280252798926085, -3.4927710657939315e-05, -0.0003678122302517295, -0.00046039948938414454, -0.00041083001997321844, -0.00017176583060063422, -9.214453893946484e-05, -3.40932747349143e-05, -0.00017712931730784476, -0.001900891656987369, -1.3947389561508317e-05, -0.00018499570433050394, -0.00011920218821614981, -0.00041547726141288877, -0.00022802136663813144, -1.1324817933200393e-05, -0.0002485204895492643, -1.2636104656849056e-05, -0.0005247407825663686], "finish_reason": "stop"}, {"text": " lat2 - lat1", "tokens": [" lat", "2", " -", " lat", "1", "\n"], "logprobs": [-0.3244877755641937, -0.08099786937236786, -0.049434661865234375, -0.00023636408150196075, -7.343022298300639e-05, -0.001775832730345428], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.0002157455455744639, -0.0001255195093108341, -0.0008802115335129201, -4.362964682513848e-05, -4.541770613286644e-05, -0.00011753345461329445], "finish_reason": "stop"}, {"text": " math.sin(dlat / 2)**2 + math.cos(lat1) * math.cos(lat2) * math.sin(dlon / 2)**2", "tokens": [" math", ".", "sin", "(", "d", "lat", " /", " ", "2", ")**", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " math", ".", "sin", "(", "dl", "on", " /", " ", "2", ")**", "2", "\n"], "logprobs": [-0.3242064416408539, -4.768370445162873e-07, -0.08882111310958862, -0.0002867764269467443, -0.0008350699208676815, -5.1020273531321436e-05, -0.3541494309902191, -0.0004439560289029032, -2.3603161025675945e-05, -0.38941216468811035, -0.0001102625101339072, -0.0022802562452852726, -0.00374045898206532, -2.276871418871451e-05, -0.009861087426543236, -3.85038583772257e-05, -0.00028975578607060015, -0.00821899063885212, -0.006037332117557526, -0.00019786784832831472, -0.001111366436816752, -0.0001734344696160406, -0.0028010678943246603, -1.2040065485052764e-05, -0.0006428082706406713, -4.60137271147687e-05, -0.000291662581730634, -0.002054724609479308, -0.019475547596812248, -0.00015400654228869826, -0.00019047829846385866, -3.361645576660521e-05, -0.0001787979417713359, -2.9444261599564925e-05, -0.0026391458231955767, -0.000982397934421897, -1.3828182090946939e-05, -0.0023617250844836235, -3.635817120084539e-05, -0.0006524579366669059], "finish_reason": "stop"}, {"text": " 2 * math.atan2(math.sqrt(a), math.sqrt(1-a))", "tokens": [" ", "2", " *", " math", ".", "atan", "2", "(", "math", ".", "sqrt", "(", "a", ")", ",", " math", ".", "sqrt", "(", "1", "-", "a", "))", "\n"], "logprobs": [-0.0009118927991949022, -0.00016604475968051702, -0.021220894530415535, -0.004562919028103352, -4.768370445162873e-07, -1.519838571548462, -0.0009136793087236583, -0.0003270567976869643, -0.0065304916352033615, -2.3841855067985307e-07, -7.509902934543788e-05, -1.9073304429184645e-05, -4.7205765440594405e-05, -2.002696055569686e-05, -0.00026794656878337264, -0.0014419882791116834, -8.356221951544285e-05, -3.2782016205601394e-05, -4.255681051290594e-05, -0.014715583063662052, -0.04871745407581329, -0.0002933310461230576, -0.00010787858627736568, -0.0016389759257435799], "finish_reason": "stop"}, {"text": " RADIUS_EARTH_KM * c", "tokens": [" R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", " *", " c", "\n"], "logprobs": [-0.4878580570220947, -6.472854875028133e-05, -5.722029527532868e-06, -4.5298504119273275e-05, -5.245195097813848e-06, -7.390948667307384e-06, -2.145764938177308e-06, -7.867782187531702e-06, -2.276871418871451e-05, -0.00010764019680209458, -0.0077801295556128025, -0.00104301399551332, -0.22233946621418], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.028581976890564, -0.03100675530731678], "finish_reason": "stop"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.23076434433460236, -0.00026842328952625394, -0.03042573295533657, -0.00017820201173890382, -0.00029583368450403214, -0.0004182179400231689, -9.179073458653875e-06, -0.054152846336364746, -0.07350367307662964, -0.0019023193744942546, -0.008134094998240471, -0.0680852010846138], "finish_reason": "stop"}, {"text": " data.iloc[nearest_indices].to_numpy()", "tokens": [" data", ".", "il", "oc", "[", "ne", "arest", "_", "indices", "]", ".", "to", "_", "numpy", "()", "\n"], "logprobs": [-0.28147196769714355, -0.035111792385578156, -0.1998656988143921, -6.9141146923357155e-06, -0.001620528637431562, -0.008959094993770123, -0.00013815402053296566, -9.536738616588991e-07, -2.169585604860913e-05, -0.10474228113889694, -0.06900797039270401, -0.21216700971126556, -2.4318398573086597e-05, -0.09320187568664551, -0.009313470683991909, -0.0697394609451294], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "\n"], "logprobs": [-0.008071779273450375, -5.352353764465079e-05, -5.113947918289341e-05, -6.294052582234144e-05, -0.4392511546611786], "finish_reason": "stop"}], "metrics": {"energy": 380.68070604515066, "energy_per_token": 1.9034035302257533, "time": 13.579565, "time_per_token": 0.06789782500000001}}
{"outputs": [{"text": " not isinstance(k, int):", "tokens": [" not", " isinstance", "(", "k", ",", " int", "):", "\n"], "logprobs": [-0.42849767208099365, -0.10607624053955078, -0.0005781171494163573, -0.0960288867354393, -0.0007917130133137107, -0.027842888608574867, -0.581300675868988, -0.02165401354432106], "finish_reason": "stop"}, {"text": " ValueError(\"'k' must be a non-negative integer\")", "tokens": [" Value", "Error", "(", "\"", "'", "k", "'", " must", " be", " a", " non", "-", "negative", " integer", "\"", ")", "\n"], "logprobs": [-0.007210778072476387, -1.490105023549404e-05, -0.2305050790309906, -0.1437573879957199, -0.9894286394119263, -0.0036493625957518816, -0.001900772680528462, -0.11651798337697983, -0.003042475553229451, -0.05675104632973671, -0.04075271636247635, -0.0008314966107718647, -0.0011397063499316573, -0.004253745079040527, -0.4964959919452667, -0.00020787939138244838, -0.004039343912154436], "finish_reason": "stop"}, {"text": " 6371  # radius of earth in kilometers", "tokens": [" ", "6", "3", "7", "1", "  ", "#", " radius", " of", " earth", " in", " kilometers", "\n"], "logprobs": [-0.01035389956086874, -0.0011545903980731964, -0.001420561340637505, -0.0011392300948500633, -0.0024147657677531242, -1.1802626848220825, -0.002145014703273773, -1.8285417556762695, -0.009416097775101662, -0.20774468779563904, -0.20547626912593842, -0.3481772243976593, -0.0247921384871006], "finish_reason": "stop"}, {"text": " lon1 = (math.radians(coord1[0]), math.radians(coord1[1]))", "tokens": [" lon", "1", " =", " (", "math", ".", "rad", "ians", "(", "coord", "1", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "1", "[", "1", "]))", "\n"], "logprobs": [-0.1862134486436844, -1.680836794548668e-05, -0.10691192746162415, -3.083441972732544, -0.38930612802505493, -1.3232143828645349e-05, -0.1200551763176918, -6.615896563744172e-05, -0.0007101159426383674, -0.020031066611409187, -0.004752293229103088, -0.02444274164736271, -0.0037047103978693485, -0.00850542914122343, -0.0030077716801315546, -0.008531905710697174, -0.0042916107922792435, -2.6464111215318553e-05, -0.00016234986833296716, -5.3881147323409095e-05, -0.00012540031457319856, -0.0004530118894763291, -0.00018010901112575084, -0.00031454383861273527, -0.0015929164364933968, -0.006674140691757202], "finish_reason": "stop"}, {"text": " lon2 = math.radians(coord2[0]), math.radians(coord2[1])", "tokens": [" lon", "2", " =", " math", ".", "rad", "ians", "(", "coord", "2", "[", "0", "])", ",", " math", ".", "rad", "ians", "(", "coord", "2", "[", "1", "])", "\n"], "logprobs": [-0.00011955977242905647, -2.253030106658116e-05, -8.177422569133341e-05, -0.0012559153838083148, -0.0004337085410952568, -5.686121585313231e-05, -0.00014411364099942148, -4.4225667807040736e-05, -0.00032085992279462516, -0.0004737447015941143, -0.0004694551753345877, -0.0001740304142003879, -9.810443589231e-05, -4.184158387943171e-05, -0.00015138434537220746, -0.0014119903789833188, -1.3589766240329482e-05, -0.00024351492174901068, -9.405170567333698e-05, -0.00042691652197390795, -0.00022396916756406426, -1.3708974620385561e-05, -0.0002236116270069033, -1.1324817933200393e-05, -0.0004919749335385859], "finish_reason": "stop"}, {"text": " (lat2-lat1) / 2", "tokens": [" (", "lat", "2", "-", "lat", "1", ")", " /", " ", "2", "\n"], "logprobs": [-2.648294687271118, -0.012611047364771366, -0.1838098168373108, -2.2149884700775146, -0.0010992205934599042, -0.00025507534155622125, -0.2421945333480835, -0.9031792283058167, -0.0226008091121912, -0.006860984489321709, -0.117507703602314], "finish_reason": "stop"}, {"text": " lon2 - lon1", "tokens": [" lon", "2", " -", " lon", "1", "\n"], "logprobs": [-0.0001646144810365513, -0.00012408917245920748, -0.0010009760735556483, -4.637133679352701e-05, -4.160317621426657e-05, -0.00011240804451517761], "finish_reason": "stop"}, {"text": " math.sin(dlat / 2)**2 + math.cos(lat1) * math.cos(lat2) * math.sin(dlon / 2)**2", "tokens": [" math", ".", "sin", "(", "d", "lat", " /", " ", "2", ")**", "2", " +", " math", ".", "cos", "(", "lat", "1", ")", " *", " math", ".", "cos", "(", "lat", "2", ")", " *", " math", ".", "sin", "(", "dl", "on", " /", " ", "2", ")**", "2", "\n"], "logprobs": [-0.3485170900821686, -4.768370445162873e-07, -0.10662747919559479, -0.00041237910045310855, -0.0009028411004692316, -6.174850568640977e-05, -0.3061691224575043, -0.0004935238393954933, -2.396077979938127e-05, -0.3277290165424347, -0.00011121608258690685, -0.002013205084949732, -0.0051416074857115746, -1.4305012882687151e-05, -0.015733864158391953, -3.182837463100441e-05, -0.0003570872650016099, -0.01081769447773695, -0.006507870741188526, -0.00024423000286333263, -0.001260439632460475, -0.0001629458274692297, -0.0031825865153223276, -1.2159273865108844e-05, -0.00043406602344475687, -4.470248313737102e-05, -0.00031275625224225223, -0.0017803546506911516, -0.0181498434394598, -0.0002535260282456875, -0.0001565095444675535, -2.5510462364763953e-05, -0.00023195437097456306, -4.589452510117553e-05, -0.0019041041377931833, -0.0007803970365785062, -1.4305012882687151e-05, -0.0023298519663512707, -3.886147169396281e-05, -0.0005886013968847692], "finish_reason": "stop"}, {"text": " 2 * math.asin(math.sqrt(a))", "tokens": [" ", "2", " *", " math", ".", "as", "in", "(", "math", ".", "sqrt", "(", "a", "))", "\n"], "logprobs": [-0.0009252319578081369, -0.00016759421851020306, -0.021651914343237877, -0.005193314515054226, -4.768370445162873e-07, -0.1902177631855011, -5.125986263010418e-06, -0.0007901645149104297, -0.0033073509112000465, -1.0728830375228426e-06, -0.00011538793478393927, -1.7165990357170813e-05, -0.00014244495832826942, -0.00024005869636312127, -0.00382869690656662], "finish_reason": "stop"}, {"text": " RADIUS_EARTH_KM * c", "tokens": [" R", "AD", "I", "US", "_", "E", "AR", "TH", "_", "KM", " *", " c", "\n"], "logprobs": [-0.4650048613548279, -5.8887653722194955e-05, -5.483612312673358e-06, -6.12716976320371e-05, -5.006777428206988e-06, -7.867782187531702e-06, -1.6689286894688848e-06, -8.702239938429557e-06, -2.6225699912174605e-05, -0.00010263393050990999, -0.008763307705521584, -0.0009096298599615693, -0.25960439443588257], "finish_reason": "stop"}, {"text": " []", "tokens": [" []", "\n"], "logprobs": [-1.0690910816192627, -0.032553382217884064], "finish_reason": "stop"}, {"text": " np.argsort(distances)[:k]", "tokens": [" np", ".", "args", "ort", "(", "dist", "ances", ")", "[:", "k", "]", "\n"], "logprobs": [-0.19549508392810822, -0.0002616301644593477, -0.029087845236063004, -0.0002451834443490952, -0.00025674383505247533, -0.0004781533498317003, -8.702239938429557e-06, -0.07351640611886978, -0.06983140110969543, -0.0017021704697981477, -0.008186121471226215, -0.07541237026453018], "finish_reason": "stop"}, {"text": " data.iloc[nearest_indices].to_numpy()", "tokens": [" data", ".", "il", "oc", "[", "ne", "arest", "_", "indices", "]", ".", "to", "_", "numpy", "()", "\n"], "logprobs": [-0.28106075525283813, -0.037752293050289154, -0.22284768521785736, -8.34461570775602e-06, -0.0017867805436253548, -0.01505841314792633, -0.0002205128694185987, -7.152555099310121e-07, -2.5748875486897305e-05, -0.09712021797895432, -0.06981217116117477, -0.27743417024612427, -2.062299427052494e-05, -0.09357213973999023, -0.008115057833492756, -0.08607393503189087], "finish_reason": "stop"}, {"text": " nearest_neighbors", "tokens": [" nearest", "_", "ne", "ighbors", "\n"], "logprobs": [-0.006976293865591288, -4.60137271147687e-05, -6.997340824455023e-05, -6.258291978156194e-05, -0.3397752344608307], "finish_reason": "stop"}], "metrics": {"energy": 425.47134998130826, "energy_per_token": 2.035748086034968, "time": 14.857545, "time_per_token": 0.07108873205741627}}
