{"outputs": [{"text": "if not os.path.exists(directory):\n        raise ValueError(f'The specified directory {directory} does not exist!')\n\n    file_info = {}\n    for file_name in os.listdir(directory):\n        file_path = os.path.join(directory, file_name)\n        if os.path.isfile(file_path):\n            ascii_file_name = unicodedata.normalize('NFKD', file_name).encode('ascii', 'ignore').decode('ascii')\n\n            md5_hash = md5()\n            with open(file_path, 'rb') as file:\n                md5_hash.update(file.read())\n\n            file_info[ascii_file_name] = {\n                'Size': os.path.getsize(file_path),\n                'MD5 Hash': md5_hash.hexdigest()\n            }\n\n    return file_info", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "'", "The", " specified", " directory", " {", "directory", "}", " does", " not", " exist", "!", "')", "\n", "\n", "    ", "file", "_", "info", " =", " {}", "\n", "    ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " file", "_", "name", ")", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "            ", "ascii", "_", "file", "_", "name", " =", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " file", "_", "name", ")", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "('", "ascii", "')", "\n", "\n", "            ", "md", "5", "_", "hash", " =", " md", "5", "()", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " file", ":", "\n", "                ", "md", "5", "_", "hash", ".", "update", "(", "file", ".", "read", "())", "\n", "\n", "            ", "file", "_", "info", "[", "ascii", "_", "file", "_", "name", "]", " =", " {", "\n", "                ", "'", "Size", "':", " os", ".", "path", ".", "get", "size", "(", "file", "_", "path", ")", ",", "\n", "                ", "'", "MD", "5", " Hash", "':", " md", "5", "_", "hash", ".", "hex", "dig", "est", "()", "\n", "            ", "}", "\n", "\n", "    ", "return", " file", "_", "info", "\n", "\n", "def"], "logprobs": [-3.1384410858154297, -0.16661617159843445, -0.4312363564968109, -0.0001323135511483997, -0.01712886616587639, -0.00018702188390307128, -0.8423954844474792, -0.0012248402927070856, -0.005169833078980446, -0.07426918298006058, -0.012145845219492912, -0.004231072496622801, -0.5136285424232483, -0.9997225999832153, -1.811964830267243e-05, -0.15588507056236267, -0.6535708904266357, -1.729735016822815, -1.538670301437378, -1.4583408832550049, -0.06685131043195724, -2.5923492908477783, -0.0024412849452346563, -0.10342535376548767, -0.03353326767683029, -0.00034421717282384634, -0.0036482936702668667, -2.9183084964752197, -0.013052735477685928, -0.0012535341084003448, -0.4858597218990326, -0.00034409802174195647, -2.883242607116699, -0.04303805157542229, -0.20269706845283508, -0.0230962373316288, -0.11302530020475388, -0.012901761569082737, -0.3700420558452606, -0.13084827363491058, -0.8296825289726257, -1.3378692865371704, -0.3579438030719757, -0.005849741864949465, -0.028899433091282845, -1.1444026313256472e-05, -0.0008166077313944697, 0.0, -0.00021371940965764225, -0.006382202263921499, -0.0007097586058080196, -0.0015982723562046885, -0.015991762280464172, -0.6643191576004028, -0.032192375510931015, -0.019262632355093956, -0.0012280549854040146, -0.026468219235539436, -1.1920922133867862e-06, -9.786603914108127e-05, -1.2159273865108844e-05, -0.0022980966605246067, -6.568216485902667e-05, -0.0030592328403145075, -4.815939246327616e-05, -0.0017936823423951864, -5.722029527532868e-06, -5.483612312673358e-06, -0.00042489083716645837, -0.001311752712354064, -0.16163530945777893, -0.12648527324199677, -0.3228464126586914, -2.0265558760002023e-06, -0.00032443503732793033, -2.264974000354414e-06, -0.002257063053548336, -0.04047582671046257, -0.0001546025014249608, -0.0001411338453181088, -2.622600959512056e-06, -0.0006463822210207582, -0.02768126130104065, -0.0015912501839920878, -0.013200980611145496, -3.1190261840820312, -0.0003948624071199447, -1.179809808731079, -0.013661575503647327, -0.028592713177204132, -0.006726124323904514, -0.19674286246299744, -0.008695948868989944, -3.2186455882765586e-06, -6.437280717364047e-06, -0.00013410145766101778, -0.00021073981770314276, -1.2636104656849056e-05, -0.01464251521974802, -0.0017207353375852108, -0.7067798376083374, -7.986990567587782e-06, -1.0013530300057027e-05, -0.010820996016263962, -8.4638240878121e-06, -0.0035513683687895536, -0.016252057626843452, -0.0170135498046875, -0.0012322221882641315, -0.054305851459503174, -0.08596072345972061, -0.0002299282787134871, -8.940656698541716e-06, -0.013148508965969086, -0.000446696620201692, -0.00529079232364893, -0.020314259454607964, -0.0023807534016668797, -0.4142152965068817, -0.1168603003025055, -0.0008575814426876605, -0.007095851004123688, -2.4033548831939697, -0.0004024887748528272, -1.6757876873016357, -0.006450545974075794, -0.009417042136192322, -0.034965839236974716, -0.01541204284876585, -0.04701152443885803, -1.3351351299206726e-05, -0.2415591925382614, -0.002757082926109433, -0.0534551776945591, -0.06804922968149185, -0.0019947646651417017, -0.00010585224663373083, -0.003143015317618847, -1.0847986231965479e-05, -0.0015015052631497383, -0.00022384998737834394, -0.04784144461154938, -0.005776497535407543, -0.0005149707430973649, -4.815939246327616e-05, -0.6974873542785645, -0.034121010452508926, -0.00021681819634977728, -0.0005041282274760306, -2.3141579627990723, -0.00010513706365600228, -0.0002849888114724308, -0.005713086109608412, -0.0015423318836838007, -7.748573807475623e-06, -0.0004577780782710761, -0.000603493710514158, -9.703165414975956e-05, -7.271740287251305e-06, -0.0026371246203780174, -0.0015986294019967318, -0.1662350445985794, -0.00464052427560091, -0.10461656004190445, -2.706014311115723e-05, -0.22132763266563416, -0.004450772888958454, -0.012470602989196777, -9.536738616588991e-07, -2.062299427052494e-05, -2.50339189733495e-06, -1.7881377516459906e-06, -0.003143371781334281, -0.0001854724541772157, -0.5822467803955078, -0.005722568370401859, -0.0021967582870274782, -0.04530142620205879, -0.04533059149980545, -0.010178917087614536, -0.16107502579689026, -1.883488948806189e-05, -0.044264815747737885, -2.396077979938127e-05, -1.1801649634435307e-05, -3.4570634852570947e-06, -7.521823135903105e-05, -0.0010793342953547835, -0.00020072828920092434, -0.0010602811817079782, -0.0003212174342479557, -0.006371067836880684, -0.02570308931171894, -0.00022480344341602176, -0.0011823337990790606, -0.0012550819665193558, -7.855583680793643e-05, -0.010006973519921303, -0.0003047717036679387, -0.0022540895733982325, -5.960462772236497e-07, -3.3378044463461265e-05, -9.536738616588991e-07, -0.0015018623089417815, -0.0016842002514749765, -2.6702524337451905e-05, 0.0, -0.0031054625287652016, -0.19976945221424103, -0.003190667135640979, -9.536697689327411e-06, -3.862306402879767e-05, -0.40860530734062195, -0.007672484032809734, -0.010085455141961575, -0.0031699903775006533, -5.125986263010418e-06, -1.6689286894688848e-06, -0.3623542785644531, -0.004417186137288809, -1.0159885883331299], "finish_reason": "stop"}], "metrics": {"energy": 937.9240648193356, "energy_per_token": 4.244000293300161, "time": 23.779177, "time_per_token": 0.10759808597285068}}
{"outputs": [{"text": "info = {}\n    for root, dirs, files in os.walk(directory):\n        for fname in files:\n            full_path = os.path.join(root, fname)\n            normalized_name = unicodedata.normalize('NFD', fname)\n            info[normalized_name] = {\n                'Size': os.stat(full_path).st_size,\n                'MD5 Hash': md5(pathlib.Path(full_path).read_bytes()).hexdigest(),\n            }\n    return info", "tokens": ["info", " =", " {}", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " f", "name", " in", " files", ":", "\n", "            ", "full", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " f", "name", ")", "\n", "            ", "normalized", "_", "name", " =", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "D", "'", ",", " f", "name", ")", "\n", "            ", "info", "[", "normalized", "_", "name", "]", " =", " {", "\n", "                ", "'", "Size", "':", " os", ".", "stat", "(", "full", "_", "path", ")", ".", "st", "_", "size", ",", "\n", "                ", "'", "MD", "5", " Hash", "':", " md", "5", "(", "path", "lib", ".", "Path", "(", "full", "_", "path", ")", ".", "read", "_", "bytes", "())", ".", "hex", "dig", "est", "()", ",", "\n", "            ", "}", "\n", "    ", "return", " info", "\n", "\n", "if"], "logprobs": [-1.0510468482971191, -0.01756657287478447, -0.09746405482292175, -0.02451649308204651, -0.21110717952251434, -0.2669380009174347, -1.9377578496932983, -0.006036384031176567, -0.2657051086425781, -0.004081729333847761, -0.0002406545972917229, -0.025218715891242027, -0.0009299959056079388, -0.0022904847282916307, -8.940656698541716e-06, -2.6464111215318553e-05, -0.0007699147681705654, -0.008403654210269451, -0.02872164361178875, -0.007039743475615978, -0.004469168372452259, -0.04119382053613663, -2.691477060317993, -1.1763209104537964, -0.002085298066958785, -0.006199771072715521, -0.0009502424509264529, -0.001192097319290042, -0.007130649872124195, -2.0484213829040527, -0.1666102111339569, -0.21466483175754547, -0.0044950395822525024, -0.16574399173259735, -2.7418097943154862e-06, -0.00021026308240834624, -8.344646857949556e-07, -0.004737581126391888, -5.340433563105762e-05, -0.013575024902820587, -0.0007239343249239028, -0.005805416963994503, -3.933898824470816e-06, -0.0005669178790412843, -0.008155141957104206, -0.04510624706745148, -2.019078016281128, -0.14620938897132874, -0.6303669810295105, -0.003985201939940453, -0.6036984324455261, -0.004603027831763029, -6.6756979322235566e-06, -3.2186455882765586e-06, -0.000228140561375767, -0.000129691296024248, -7.545663538621739e-05, -0.10242180526256561, -0.004448043182492256, -0.7470612525939941, -0.00016592556494288146, -3.349725011503324e-05, -0.1438174843788147, -7.331102824537084e-05, -0.039304234087467194, -1.6616652011871338, -0.03458232432603836, -1.2934781312942505, -0.017554741352796555, -0.007651781663298607, -5.364403477869928e-06, -3.099436753473128e-06, -0.004465370438992977, -0.000750617531593889, -0.8048069477081299, -0.00471527548506856, -0.006163636222481728, -0.14447954297065735, -0.05954672396183014, -0.012237348593771458, -0.2547386586666107, -5.2569914259947836e-05, -2.575927495956421, -5.8053239627042785e-05, -0.0037403402384370565, -6.794906312279636e-06, 0.0, -0.0015422129072248936, -0.0002812943421304226, -1.6569954823353328e-05, -4.0531076592742465e-06, -0.00013600854435935616, -0.0030824074055999517, -0.012217800132930279, -0.0014603198505938053, -0.004016666207462549, -0.0016267173923552036, -0.00012218205665703863, -0.00840448122471571, -0.0002873722987715155, -0.07336155325174332, -7.545663538621739e-05, -0.026390083134174347, -0.8191473484039307, -6.580135959666222e-05, -6.997340824455023e-05, -0.0008106521563604474, -0.0032424754463136196, -0.006392388604581356, -1.6569954823353328e-05, 0.0, -0.00023815179883968085, -0.000695344409905374, -0.0013003236381337047, -1.883488948806189e-05, -0.00014447122521232814, -0.0009349980391561985, -0.004394636023789644, -0.00717586325481534, -0.00013565097469836473, 0.0, -0.033891141414642334, -1.2426429986953735, -0.004433089401572943, -0.03455710411071777, -3.111314072157256e-05, -0.00011920218821614981, -0.06255277246236801, -0.004218133166432381, -0.001259249052964151, -0.7099779844284058, -0.005571195390075445, -0.41296496987342834], "finish_reason": "stop"}], "metrics": {"energy": 476.6398057651519, "energy_per_token": 3.5837579380838487, "time": 11.340852, "time_per_token": 0.08526956390977443}}
{"outputs": [{"text": "def _get_path_info(file_path):\n        return {\n            'Size': file_path.stat().st_size,\n            'MD5 Hash': md5(file_path.read_bytes()).hexdigest()\n        }\n\n    def _get_normalized_name(name):\n        # Remove whitespace from start and end of filename\n        name = name.strip()\n\n        # Remove non-ASCII characters\n        name = unicodedata.normalize('NFD', name).encode('ascii', 'ignore').decode()\n\n        # Convert to lowercase\n        name = name.lower()\n\n        return name\n\n    path = pathlib.Path(directory)\n    normalized_name_map = {\n        _get_normalized_name(file.name): str(file)\n        for file in path.iterdir()\n    }\n\n    return {\n        name: _get_path_info(pathlib.Path(path_name))\n        for name, path_name in normalized_name_map.items()\n    }", "tokens": ["def", " _", "get", "_", "path", "_", "info", "(", "file", "_", "path", "):", "\n", "        ", "return", " {", "\n", "            ", "'", "Size", "':", " file", "_", "path", ".", "stat", "()", ".", "st", "_", "size", ",", "\n", "            ", "'", "MD", "5", " Hash", "':", " md", "5", "(", "file", "_", "path", ".", "read", "_", "bytes", "())", ".", "hex", "dig", "est", "()", "\n", "        ", "}", "\n", "\n", "    ", "def", " _", "get", "_", "normalized", "_", "name", "(", "name", "):", "\n", "        ", "#", " Remove", " whites", "pace", " from", " start", " and", " end", " of", " filename", "\n", "        ", "name", " =", " name", ".", "strip", "()", "\n", "\n", "        ", "#", " Remove", " non", "-", "ASC", "II", " characters", "\n", "        ", "name", " =", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "D", "'", ",", " name", ")", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "()", "\n", "\n", "        ", "#", " Convert", " to", " lower", "case", "\n", "        ", "name", " =", " name", ".", "lower", "()", "\n", "\n", "        ", "return", " name", "\n", "\n", "    ", "path", " =", " path", "lib", ".", "Path", "(", "directory", ")", "\n", "    ", "normalized", "_", "name", "_", "map", " =", " {", "\n", "        ", "_", "get", "_", "normalized", "_", "name", "(", "file", ".", "name", "):", " str", "(", "file", ")", "\n", "        ", "for", " file", " in", " path", ".", "iter", "dir", "()", "\n", "    ", "}", "\n", "\n", "    ", "return", " {", "\n", "        ", "name", ":", " _", "get", "_", "path", "_", "info", "(", "path", "lib", ".", "Path", "(", "path", "_", "name", "))", "\n", "        ", "for", " name", ",", " path", "_", "name", " in", " normalized", "_", "name", "_", "map", ".", "items", "()", "\n", "    ", "}"], "logprobs": [-2.924858570098877, -2.5444416999816895, -2.498058319091797, -0.036029838025569916, -4.072168350219727, -0.9213547110557556, -1.9077341556549072, -0.0678047463297844, -1.5570389032363892, -0.619133472442627, -0.18020986020565033, -0.182453915476799, -0.002298929262906313, -0.010790099389851093, -3.077700614929199, -0.44673049449920654, -0.012750647962093353, -0.019618868827819824, -0.2452111840248108, -0.0933888703584671, -0.007446745876222849, -1.6341297626495361, -0.000436091679148376, -0.0028421981260180473, -0.00011181206355104223, -0.004982080310583115, -0.0009045085171237588, -0.00010191874753218144, -0.0004596845537889749, -2.264974000354414e-06, -4.51792984677013e-05, -0.003808746114373207, -0.038692690432071686, -0.0010344398906454444, -0.010877245105803013, -0.0026755272410809994, -0.00015793983766343445, -0.01106035802513361, -0.0004383556661196053, -0.21127811074256897, -2.7894584491150454e-05, -0.011662164703011513, -0.05703112483024597, -9.238292841473594e-05, -0.00017998983094003052, -0.00011932138295378536, -0.006181288976222277, -4.470248313737102e-05, -3.111314072157256e-05, -0.0003321811091154814, -0.0005113962688483298, -0.012481551617383957, -0.00022825974156148732, -1.1920928244535389e-07, -0.0057058557868003845, -0.4373326301574707, -0.008916443213820457, -7.30726242181845e-05, -0.0006742588011547923, -0.03686903044581413, -0.00014482879487331957, -0.32724693417549133, -0.0887380987405777, -1.9891694784164429, -0.001106127048842609, -1.1149351596832275, -0.017273226752877235, -1.2484147548675537, -0.015617681667208672, -1.263834834098816, -0.05840795859694481, -0.001405086019076407, -0.0022744282614439726, -2.409900188446045, -1.2803418636322021, -3.397067070007324, -0.20418298244476318, -2.216404914855957, -2.4726758003234863, -0.11152732372283936, -0.006716177798807621, -0.7221875786781311, -1.460815668106079, -0.1818140298128128, -0.00039545822073705494, -0.4808468520641327, -0.012940595857799053, -0.036326814442873, -4.1960789531003684e-05, -0.019982224330306053, -0.0036847570445388556, -0.018679190427064896, -0.5512466430664062, -0.0004553949984256178, -0.010697166435420513, -1.1440531015396118, -2.015892744064331, -0.021819883957505226, -0.8687351942062378, -0.001122916815802455, -0.027112457901239395, -0.6311066150665283, -0.00032026408007368445, -0.22202426195144653, -0.024988185614347458, -0.16092848777770996, -0.0017579830018803477, -5.483612312673358e-06, -3.4570634852570947e-06, -0.00012087091454304755, -8.189342770492658e-05, -8.344646857949556e-07, -0.028540000319480896, -6.758938252460212e-05, -0.21297159790992737, -0.00046850196667946875, -5.8412379075889476e-06, -0.004349415190517902, -0.022202027961611748, -0.055331770330667496, -0.00011419598013162613, -0.1097954586148262, -0.017316460609436035, -0.00010930894495686516, -5.8412379075889476e-06, -0.004965473897755146, -0.0006161222117953002, -0.00018225439998786896, -0.008023412898182869, -0.0006475735572166741, -0.43305549025535583, -0.004734496586024761, -0.00989224947988987, -0.0003002431185450405, -0.03442373871803284, -1.9924936294555664, -0.8697843551635742, -0.08977465331554413, -0.1909676194190979, -0.2523144483566284, -3.349725011503324e-05, -0.1260310560464859, -0.00025090406415984035, -0.0019190958701074123, -1.6331539882230572e-05, -0.0021340709645301104, -1.2636104656849056e-05, -0.0005924138822592795, -0.02840629406273365, -0.0002079985715681687, -1.277390480041504, -0.006250831298530102, -0.022902267053723335, -0.0052700405940413475, -0.00019131260341964662, -2.544363260269165, -0.5271650552749634, -0.009649066254496574, -4.029192859889008e-05, -1.9192511899746023e-05, -0.006505264900624752, -0.006177972070872784, -0.003964779432862997, -0.001280679483897984, -0.03835970535874367, -0.2633448541164398, -4.0928544998168945, -0.016458461061120033, -2.2074992656707764, -0.32779431343078613, -2.1230149269104004, -0.01574806310236454, -0.22807417809963226, -0.92047518491745, -0.004769021645188332, -0.6548911929130554, -0.0003152588615193963, -8.344646857949556e-07, -0.0020536540541797876, -3.576278118089249e-07, -2.0265558760002023e-06, -0.008253040723502636, -0.7277875542640686, -0.48816752433776855, -0.05198798328638077, -0.012190597131848335, -2.542022705078125, -0.002209128811955452, -0.0022526620887219906, -0.6748574376106262, -0.3538227081298828, -0.005228417459875345, -0.0005988473421894014, -0.0009673921740613878, -0.01374612096697092, -0.0518125556409359, -0.0029186292085796595, -0.23934507369995117, -1.2636104656849056e-05, -0.0006409021443687379, -0.3703693151473999, -0.543309211730957, -7.593343616463244e-05, -0.0005925330333411694, -0.18362440168857574, -8.34430247778073e-05, -0.6912317872047424, -0.013504578731954098, -0.11941206455230713, -0.0016721803694963455, -1.7196862697601318, -0.011746524833142757, -0.008333197794854641, -2.861018856492592e-06, -3.576278118089249e-07, -4.887569048150908e-06, -3.576278118089249e-07, 0.0, -0.002653650939464569, -0.05213034152984619, -0.0030317793134599924, -6.6756979322235566e-06, -0.0001282609737245366, -0.001189596951007843, -1.0152223110198975, -0.7524197697639465, -0.7713847756385803, -0.014458413235843182, -0.02279180847108364, -0.0007537146448157728, -0.00031537804170511663, -0.004138240125030279, -5.4834770708112046e-05, -0.0004891153075732291, -5.006777428206988e-06, -2.0265558760002023e-06, -0.04640740901231766, -0.0026490141171962023, -1.1920928244535389e-07, -1.1920928244535389e-07, -1.4305104514278355e-06, -1.1920928244535389e-07, -0.00022671037004329264, -0.00013958434283267707, -0.00025078488397412, -0.004049910698086023, -0.021626366302371025, -0.46773019433021545], "finish_reason": "stop"}], "metrics": {"energy": 879.3416367454536, "energy_per_token": 3.5457324062316675, "time": 21.431917, "time_per_token": 0.08641902016129031}}
{"outputs": [{"text": "info = {}\n    for filename in os.listdir(directory):\n        file_path = os.path.join(directory, filename)\n        if os.path.isfile(file_path):\n            with open(file_path, 'rb') as file:\n                file_data = file.read()\n                md5_hash = md5(file_data).hexdigest()\n\n            normalized_name = unicodedata.normalize('NFKC', filename)\n            info[normalized_name] = {\n                'Size': os.path.getsize(file_path),\n                'MD5 Hash': md5_hash\n            }\n    return info", "tokens": ["info", " =", " {}", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " filename", ")", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " file", ":", "\n", "                ", "file", "_", "data", " =", " file", ".", "read", "()", "\n", "                ", "md", "5", "_", "hash", " =", " md", "5", "(", "file", "_", "data", ")", ".", "hex", "dig", "est", "()", "\n", "\n", "            ", "normalized", "_", "name", " =", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "K", "C", "'", ",", " filename", ")", "\n", "            ", "info", "[", "normalized", "_", "name", "]", " =", " {", "\n", "                ", "'", "Size", "':", " os", ".", "path", ".", "get", "size", "(", "file", "_", "path", ")", ",", "\n", "                ", "'", "MD", "5", " Hash", "':", " md", "5", "_", "hash", "\n", "            ", "}", "\n", "    ", "return", " info"], "logprobs": [-1.0510468482971191, -0.01756657287478447, -0.09746405482292175, -0.02451649308204651, -0.21110717952251434, -0.2669380009174347, -1.7332452535629272, -0.006494250148534775, -0.061774540692567825, -2.9205850296420977e-05, -0.006583074573427439, -1.1920928244535389e-07, -0.0006470970110967755, -0.02109040878713131, -0.0012256737099960446, -0.009354805573821068, -0.018032537773251534, -1.1513867378234863, -0.48561549186706543, -0.0786038264632225, -0.0009919252479448915, -0.11133825778961182, -3.2186455882765586e-06, -0.0001716466504149139, -1.490105023549404e-05, -0.002504547592252493, -0.00014590153296012431, -0.0026653024833649397, -9.619726915843785e-05, -0.001929447171278298, -0.0008672290714457631, -0.002940618433058262, -0.11530879884958267, -0.39496785402297974, -0.20707553625106812, -4.172316494077677e-06, -0.0006554362480528653, -3.933898824470816e-06, -0.0024431876372545958, -0.042780183255672455, -8.415821503149346e-05, -0.0005509527400135994, -1.3112935448589269e-05, 0.0, -0.03554445877671242, -0.0059029534459114075, -0.007040690630674362, -1.5629571676254272, -0.002195925684645772, -0.0001287377526750788, -0.0014067525044083595, -2.109982233378105e-05, -1.0728830375228426e-06, -0.00443332688882947, -0.15398499369621277, -0.016575483605265617, -0.0025927757378667593, -0.0005116345710121095, -0.7712724208831787, -0.018235063180327415, -0.0021257440093904734, -0.0016179102240130305, -1.248259425163269, -0.007504960056394339, -1.3306840658187866, -0.0010889797704294324, -0.0022910793777555227, -0.0011474461061879992, -2.861018856492592e-06, -0.00023278864682652056, -0.0044923098757863045, -0.2074689120054245, -1.6440515518188477, -0.004084222484380007, -0.017886530607938766, -0.010319329798221588, -0.003218710422515869, -0.0017534609651193023, -3.4570634852570947e-06, -0.0012540103634819388, -0.00312958681024611, -9.894321920000948e-06, -2.50339189733495e-06, -0.00043335105874575675, -0.008260371163487434, -0.004178484436124563, -4.887569048150908e-06, 0.0, -3.790783375734463e-05, -0.01281232014298439, -2.208631992340088, -0.07241828739643097, -1.3606860637664795, -0.0233856663107872, -1.6680911779403687, -0.0045631565153598785, -0.30973032116889954, -0.003596031339839101, -1.4305104514278355e-06, -7.390948667307384e-06, -9.941560711013153e-05, -0.00014304091746453196, -1.549708758830093e-05, -0.020363084971904755, -0.0035076539497822523, -2.08811092376709, -1.1205610462639015e-05, -1.9550132492440753e-05, -4.9828242481453344e-05, -0.042392224073410034, -0.03223704546689987, -0.21041062474250793, -0.2578635811805725, -0.8885459899902344, -0.006841093767434359, -0.0020841085352003574, -2.50339189733495e-06, -3.576278118089249e-07, -0.004515095613896847, -0.00014959646796341985, -0.6703084707260132, -0.015791714191436768, -0.002360773738473654, -0.07440375536680222, -0.034980688244104385, -0.007000916637480259, -0.16927644610404968, -7.271740287251305e-06, -0.07949217408895493, -3.933898824470816e-06, -1.0013530300057027e-05, -3.3378546504536644e-06, -0.00016246906307060272, -0.008785877376794815, -0.0012293646577745676, -6.437280717364047e-06, -0.00041571559268049896, -0.006388006266206503, -0.007974216714501381, -0.00026258357684127986, -0.0015797051601111889, -0.0013809201773256063, -6.425174069590867e-05, -0.008200427517294884, -0.00021240839851088822, -0.006024771835654974, -4.0531076592742465e-06, -0.0007737264968454838, -2.861018856492592e-06, -0.22415421903133392, -0.004791800864040852, -7.748573807475623e-06, -6.532455881824717e-05, -0.31097662448883057, -0.0061457459814846516, -0.0009615565068088472], "finish_reason": "stop"}], "metrics": {"energy": 605.209143035889, "energy_per_token": 3.8795457886915963, "time": 14.92359, "time_per_token": 0.09566403846153847}}
{"outputs": [{"text": "def norm(path):\n        \"\"\"\n        Normalizes the specified file or directory name to ASCII using the Unicode Normalization Form C.\n\n        Parameters:\n        path (str): The file or directory name to be normalized.\n\n        Returns:\n        str: The normalized file or directory name.\n        \"\"\"\n        return unicodedata.normalize('NFD', path).encode('ascii', 'ignore').decode('utf-8')\n\n    info = {}\n    for file in os.listdir(directory):\n        path = os.path.join(directory, file)\n        if not os.path.isdir(path):\n            info[norm(file)] = {}\n            info[norm(file)]['Size'] = os.stat(path).st_size\n            info[norm(file)]['MD5 Hash'] = md5(pathlib.Path(path).read_bytes()).hexdigest()\n    return info", "tokens": ["def", " norm", "(", "path", "):", "\n", "        ", "\"", "\"", "\"", "\n", "        ", "Normal", "izes", " the", " specified", " file", " or", " directory", " name", " to", " ASC", "II", " using", " the", " Un", "icode", " Normal", "ization", " Form", " C", ".", "\n", "\n", "        ", "Parameters", ":", "\n", "        ", "path", " (", "str", "):", " The", " file", " or", " directory", " name", " to", " be", " normalized", ".", "\n", "\n", "        ", "Returns", ":", "\n", "        ", "str", ":", " The", " normalized", " file", " or", " directory", " name", ".", "\n", "        ", "\"", "\"", "\"", "\n", "        ", "return", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "D", "'", ",", " path", ")", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "('", "utf", "-", "8", "')", "\n", "\n", "    ", "info", " =", " {}", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " file", ")", "\n", "        ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "path", "):", "\n", "            ", "info", "[", "norm", "(", "file", ")]", " =", " {}", "\n", "            ", "info", "[", "norm", "(", "file", ")]", "['", "Size", "']", " =", " os", ".", "stat", "(", "path", ")", ".", "st", "_", "size", "\n", "            ", "info", "[", "norm", "(", "file", ")]", "['", "MD", "5", " Hash", "']", " =", " md", "5", "(", "path", "lib", ".", "Path", "(", "path", ")", ".", "read", "_", "bytes", "())", ".", "hex", "dig", "est", "()", "\n", "    ", "return", " info", "\n", "\n", "if"], "logprobs": [-2.924858570098877, -3.616201877593994, -0.6735098361968994, -2.33990478515625, -0.22078338265419006, -0.009155552834272385, -0.00651201605796814, -1.3895753622055054, -0.021762032061815262, -0.00022146634000819176, -0.24004408717155457, -0.0018711454467847943, -0.5247291922569275, -0.27052727341651917, -0.650732159614563, -1.402902364730835, -0.5558136105537415, -2.005981922149658, -0.05180666968226433, -1.5821048021316528, -0.3133675456047058, -0.4611537754535675, -0.0002636561985127628, -1.7582205533981323, -0.5321117043495178, -1.5142083168029785, -0.002245525596663356, -1.4434934854507446, -0.012203669175505638, -0.35113969445228577, -0.5096524357795715, -0.5191243290901184, -0.009217328391969204, -0.5467206835746765, -0.0003002431185450405, -0.032830167561769485, -0.003490072675049305, -0.00020394629973452538, -0.009164293296635151, -0.021767746657133102, -0.008534742519259453, -0.10494205355644226, -0.01398466620594263, -0.023277008906006813, -0.10080643743276596, -0.013484113849699497, -0.00024470672360621393, -0.0320410318672657, -0.04577651247382164, -0.3129604160785675, -0.006797286216169596, -0.06935993582010269, -0.0037378461565822363, -0.001939917216077447, -2.884823152271565e-05, -0.004616911057382822, -0.0002366024418734014, -8.940297266235575e-05, -0.0006949870148673654, -0.0070217507891356945, -0.0003680505615193397, -0.05135504901409149, -0.06775718182325363, -0.2799874544143677, -0.0077295019291341305, -6.341733387671411e-05, -0.0010807631770148873, -0.5388348698616028, -0.013905196450650692, -1.1483367681503296, -0.0018982740584760904, -3.2186455882765586e-06, -2.7418097943154862e-06, -5.793403761344962e-05, -0.014930996112525463, -0.46494346857070923, -0.05322394147515297, -0.00029094755882397294, -1.9073468138230965e-06, -2.622600959512056e-06, -0.00040522945346310735, -0.0001618731184862554, -0.00020215852418914437, -0.2583441138267517, -0.8345655798912048, -0.07032587379217148, -8.713819261174649e-05, -9.440929716220126e-05, -0.13757207989692688, -0.06940220296382904, -0.08203072100877762, -0.000631848000921309, -0.1615326702594757, -0.10580077767372131, -0.0005584587925113738, -2.7179348762729205e-05, -0.006446400191634893, -0.012173992581665516, -0.0010244365548714995, -0.004571819212287664, -0.0006874820101074874, -0.9485116004943848, -0.2830377221107483, -0.04921804368495941, -0.0007466865936294198, -0.018786124885082245, -0.023352593183517456, -0.06530673056840897, -0.0005327236140146852, -1.2528002262115479, -0.015196029096841812, -0.11468388140201569, -0.01860606111586094, -0.14033488929271698, -0.2109597772359848, -1.2838101387023926, -0.1402268260717392, -0.3064330220222473, -2.884823152271565e-05, -0.07650842517614365, -2.0265558760002023e-06, -0.00042167355422861874, -0.03064195066690445, -0.0023966894950717688, -0.008436398580670357, -0.0072325547225773335, -1.175111174583435, -0.03207104653120041, -0.4828426241874695, -2.9802276912960224e-06, -0.0010793342953547835, -3.814689989667386e-06, -0.01463499665260315, -0.00033861625706776977, -0.003514187643304467, -0.000196556793525815, -0.03162659332156181, -0.000666277133859694, -0.0065269386395812035, -0.05231872573494911, -0.5874505043029785, -1.590306282043457, -0.032370470464229584, -1.3351351299206726e-05, -0.0006510283565148711, -1.6689286894688848e-06, -0.0037168245762586594, -0.8789297342300415, -0.00011264643399044871, -0.009820126928389072, -0.06386768072843552, -0.010910380631685257, -0.002258133376017213, -1.3226873874664307, -0.017015425488352776, -0.0156426802277565, -0.00029416524921543896, -0.03769248351454735, -0.0077794198878109455, -0.0013244913425296545, -2.718968391418457, -0.004108797758817673, -0.04472637176513672, -0.6786888837814331, -0.00040558696491643786, -0.00040665941196493804, -1.7046782886609435e-05, -0.0001456631434848532, -0.08148937672376633, -0.015406056307256222, -0.19827783107757568, -0.0010177677031606436, -0.002843267982825637, -0.0454535111784935, -2.1219027985353023e-05, -2.2774078845977783, -4.279521817807108e-05, -0.008333669975399971, -0.002506093354895711, -0.0008859285153448582, -1.0609570381348021e-05, -1.6689286894688848e-06, -6.997340824455023e-05, -0.03412308543920517, -0.05322122946381569, -0.8630062937736511, -0.0005026984144933522, -4.362964682513848e-05, -3.540453326422721e-05, -6.3774932641536e-05, -0.003514187643304467, -0.0002824861148837954, -0.002940618433058262, -0.0001392267586197704, -0.007731158286333084, -9.440929716220126e-05, -0.0010455148294568062, -0.09196784347295761, -0.00011729506513802335, -0.012439403682947159, -0.1017475426197052, -0.006342638749629259, -3.540453326422721e-05, -0.000248401309363544, -0.0029233836103230715, -0.009426961652934551, -0.0006538875168189406, -0.00034517052699811757, -0.0014637719141319394, -8.4638240878121e-06, -6.651657167822123e-05, -0.0013097288319841027, -0.0032985585276037455, -0.006289450917392969, -0.0004755319678224623, -1.1920928244535389e-07, -0.00028713393840007484, -0.013023554347455502, -0.2368420958518982, -0.0076646762900054455, -0.003962998278439045, -0.4505733251571655, -0.007969249971210957, -0.4960482716560364], "finish_reason": "stop"}], "metrics": {"energy": 860.0444351511003, "energy_per_token": 3.8394840854959833, "time": 20.780476, "time_per_token": 0.09276998214285714}}
{"outputs": [{"text": "def _normalize(string):\n        string = unicodedata.normalize('NFD', string)\n        string = string.encode('ascii', 'ignore').decode()\n        string = string.lower().replace(' ', '_')\n        return string\n\n    def _get_hash(file_path):\n        hash_md5 = md5()\n        with open(file_path, 'rb') as file:\n            for chunk in iter(lambda: file.read(64 * 1024), b''):\n                hash_md5.update(chunk)\n        return hash_md5.hexdigest()\n\n    def _get_size(file_path):\n        return os.path.getsize(file_path)\n\n    files_info = {}\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            file_path = os.path.join(root, file)\n            file_name = file.split('.')[0]\n            normalized_file_name = _normalize(file_name)\n            file", "tokens": ["def", " _", "normal", "ize", "(", "string", "):", "\n", "        ", "string", " =", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "D", "'", ",", " string", ")", "\n", "        ", "string", " =", " string", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "()", "\n", "        ", "string", " =", " string", ".", "lower", "()", ".", "replace", "('", " '", ",", " '_", "')", "\n", "        ", "return", " string", "\n", "\n", "    ", "def", " _", "get", "_", "hash", "(", "file", "_", "path", "):", "\n", "        ", "hash", "_", "md", "5", " =", " md", "5", "()", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " file", ":", "\n", "            ", "for", " chunk", " in", " iter", "(", "lambda", ":", " file", ".", "read", "(", "6", "4", " *", " ", "1", "0", "2", "4", ")", ",", " b", "'')", ":", "\n", "                ", "hash", "_", "md", "5", ".", "update", "(", "chunk", ")", "\n", "        ", "return", " hash", "_", "md", "5", ".", "hex", "dig", "est", "()", "\n", "\n", "    ", "def", " _", "get", "_", "size", "(", "file", "_", "path", "):", "\n", "        ", "return", " os", ".", "path", ".", "get", "size", "(", "file", "_", "path", ")", "\n", "\n", "    ", "files", "_", "info", " =", " {}", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", ")", "\n", "            ", "file", "_", "name", " =", " file", ".", "split", "('", ".", "')", "[", "0", "]", "\n", "            ", "normalized", "_", "file", "_", "name", " =", " _", "normal", "ize", "(", "file", "_", "name", ")", "\n", "            ", "file"], "logprobs": [-2.924858570098877, -2.5444416999816895, -0.7266731858253479, -0.01501425914466381, -0.8896576762199402, -2.2000668048858643, -0.0801125094294548, -0.00878493208438158, -0.00580008327960968, -2.310800552368164, -0.031177205964922905, -0.5571334362030029, -0.0062810396775603294, -7.152555099310121e-07, -3.2186455882765586e-06, -8.749579137656838e-05, -9.190614218823612e-05, -3.242440288886428e-05, -0.07481632381677628, -0.015047727152705193, -0.11165346205234528, -0.0006139777251519263, -2.5987286790041253e-05, -0.01412513293325901, -0.062144409865140915, -0.7721260786056519, -0.005563727114349604, -0.3028261065483093, -0.0027575583662837744, -0.04891885817050934, -0.0003937899600714445, -0.011171176098287106, -0.007855593226850033, -0.12566526234149933, -0.00038723601028323174, -1.8715683836489916e-05, -0.006510476116091013, -0.003260892815887928, -0.0006591292913071811, -0.6312921643257141, -0.0010082405060529709, -1.1894251108169556, -0.030092528089880943, -0.021982228383421898, -0.7852224707603455, -0.0018930387450382113, -0.4265221357345581, -0.002830191981047392, -1.353987693786621, -0.00011491115583339706, -1.8847286701202393, -0.2817436158657074, -0.06750505417585373, -0.0308073777705431, -8.856858039507642e-05, -0.056297145783901215, -0.0004887578543275595, -0.1320125013589859, -0.02950865961611271, -0.21304260194301605, -0.07872900366783142, -0.02416897751390934, -0.05409683659672737, -0.0003589939442463219, -1.4105076789855957, -0.0537453293800354, -0.7787375450134277, -0.015505008399486542, -2.5226898193359375, -0.08568556606769562, -0.5672895312309265, -0.5204792022705078, -0.048283521085977554, -0.03179024159908295, -0.0003393312799744308, -0.001122083282098174, -0.6565976142883301, -0.06741780042648315, -0.2954823076725006, -0.0004114258335903287, -0.0003358753747306764, -0.001335444045253098, -1.7881377516459906e-06, -0.0007702721050009131, -0.00531735410913825, -0.015300754457712173, -0.03193458169698715, -0.00460813008248806, -0.0004469349514693022, -0.0036199060268700123, -0.00015186110977083445, -1.0728830375228426e-06, -0.0015526870265603065, -0.4888532757759094, -0.0017485818825662136, -0.0010749283246695995, -0.000144709600135684, -0.8759393095970154, -0.07907569408416748, -0.0008102948195300996, -0.0003651905863080174, -0.0539419949054718, -0.05072545260190964, -0.00011419598013162613, -0.000491021724883467, -0.00011216964776394889, -0.00023648326168768108, -0.001213171985000372, -0.0006967739318497479, -4.124556289752945e-05, -5.8412379075889476e-06, -0.004722513258457184, -2.7411303520202637, -0.07572860270738602, -0.16325262188911438, -0.004973184317350388, -0.00044264530879445374, -0.00039843725971877575, -0.00014852374442853034, -8.105902816168964e-05, -0.013672864064574242, -0.00026520551182329655, -0.0013299677520990372, -0.03703756630420685, -8.34461570775602e-06, -0.004114496521651745, -0.00016437610611319542, -0.00022432672267314047, -5.960446742392378e-06, -8.22540732769994e-06, -4.768370445162873e-07, -1.0251946150674485e-05, -4.768370445162873e-07, -2.253030106658116e-05, -1.4781842764932662e-05, -5.435795901576057e-05, -5.507317473529838e-05, -0.0211639404296875, -0.003419268876314163, -0.00684890802949667, -2.8371408916427754e-05, -2.861018856492592e-06, -3.576278118089249e-07, -0.008299622684717178, -0.0007651500636711717, -1.2755313036905136e-05, -2.3841855067985307e-07, -0.00015293381875380874, -0.00372644467279315, -0.0038349907845258713, -0.00015817821258679032, -0.6392822265625, -0.03374708443880081, -0.04536761716008186, -0.0004390706308186054, -0.13912099599838257, -0.014595523476600647, -0.06664758175611496, -0.008375873789191246, -0.0032825181260704994, -0.005328618921339512, -0.0002836778585333377, -0.00045694399159401655, -0.2775808274745941, -0.11604148894548416, -1.3828182090946939e-05, -0.15532971918582916, -1.6689160474925302e-05, -6.735097849741578e-05, -1.585470999998506e-05, -0.00033718624035827816, -0.00524205481633544, -1.2159273865108844e-05, 0.0, -0.0002037079248111695, -0.013391431421041489, -0.0031484817154705524, -0.0002022777043748647, -2.3951611518859863, -1.3905080556869507, -0.19817790389060974, -0.005006040912121534, -0.046174995601177216, -0.0007781338645145297, -0.2017354965209961, -0.22836945950984955, -1.461024284362793, -0.00777989299967885, -0.4925319254398346, -0.00037722624256275594, -7.939023635117337e-05, -0.02075979858636856, -0.0004948345012962818, -0.0008172033121809363, -5.125986263010418e-06, -4.458328112377785e-05, -0.0005874100024811924, -0.0026481819804757833, -0.015601955354213715, -0.000819347333163023, -0.001007526065222919, -0.06331607699394226, -0.237740159034729, -0.21410587430000305, -0.00233556074090302, -0.0001419681793777272, -7.784063927829266e-05, -0.00040892345714382827, -0.3153854012489319, -0.01430271565914154, -0.04696819186210632, -0.001784400548785925, -0.05170988664031029, -2.264974000354414e-06, -5.793403761344962e-05, -8.4638240878121e-06, -0.0016105312388390303, -7.235741941258311e-05, -0.0025258325040340424, -9.63164638960734e-05, -0.0011388728162273765, -0.00020239688456058502, -0.0011094611836597323, -0.00628246134147048, -1.2097508907318115, -0.005694595165550709, -0.3877353370189667, -0.200833261013031, -2.962467670440674, -0.8275793194770813, -0.42256399989128113, -0.10751420259475708, -0.0031289926264435053, -0.016920490190386772, -0.05052044987678528, -0.0010253892978653312, -0.0003046525234822184, -0.0961700901389122, -0.01637074537575245, -0.31630000472068787, -0.012135599739849567, -0.43098723888397217, -0.036170460283756256, -0.009340633638203144, -0.0008183944155462086, -0.03580627217888832, -7.533743337262422e-05, -1.1920928244535389e-07, -0.0005360596696846187, -0.003697465406730771, -0.0007176207727752626, -0.0023974028881639242, -0.002804396441206336, -0.012066583149135113, -0.049396198242902756, -1.0118025541305542], "finish_reason": "length"}], "metrics": {"energy": 914.9932099952692, "energy_per_token": 3.5741922265440205, "time": 22.251955, "time_per_token": 0.08692169921875}}
{"outputs": [{"text": "info = {}\n    for file in os.listdir(directory):\n        path = os.path.join(directory, file)\n\n        # skip non-files\n        if not os.path.isfile(path):\n            continue\n\n        # calculate md5 hash\n        hash = md5()\n        with open(path, \"rb\") as f:\n            for chunk in iter(lambda: f.read(4096), b\"\"):\n                hash.update(chunk)\n\n        # normalize the file name\n        path = pathlib.Path(path)\n        filename = path.name\n        normalized_filename = unicodedata.normalize(\"NFKC\", filename)\n\n        info[normalized_filename] = {\n            \"Size\": os.path.getsize(path),\n            \"MD5 Hash\": hash.hexdigest()\n        }\n\n    return info", "tokens": ["info", " =", " {}", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " file", ")", "\n", "\n", "        ", "#", " skip", " non", "-", "files", "\n", "        ", "if", " not", " os", ".", "path", ".", "is", "file", "(", "path", "):", "\n", "            ", "continue", "\n", "\n", "        ", "#", " calculate", " md", "5", " hash", "\n", "        ", "hash", " =", " md", "5", "()", "\n", "        ", "with", " open", "(", "path", ",", " \"", "rb", "\"", ")", " as", " f", ":", "\n", "            ", "for", " chunk", " in", " iter", "(", "lambda", ":", " f", ".", "read", "(", "4", "0", "9", "6", ")", ",", " b", "\"", "\"", "):", "\n", "                ", "hash", ".", "update", "(", "chunk", ")", "\n", "\n", "        ", "#", " normalize", " the", " file", " name", "\n", "        ", "path", " =", " path", "lib", ".", "Path", "(", "path", ")", "\n", "        ", "filename", " =", " path", ".", "name", "\n", "        ", "normalized", "_", "filename", " =", " un", "ic", "oded", "ata", ".", "normal", "ize", "(", "\"", "NF", "K", "C", "\"", ",", " filename", ")", "\n", "\n", "        ", "info", "[", "normalized", "_", "filename", "]", " =", " {", "\n", "            ", "\"", "Size", "\":", " os", ".", "path", ".", "get", "size", "(", "path", ")", ",", "\n", "            ", "\"", "MD", "5", " Hash", "\":", " hash", ".", "hex", "dig", "est", "()", "\n", "        ", "}", "\n", "\n", "    ", "return", " info", "\n", "\n", "if"], "logprobs": [-1.0510468482971191, -0.01756657287478447, -0.09746405482292175, -0.02451649308204651, -0.21110717952251434, -0.2669380009174347, -0.8736041784286499, -0.21415051817893982, -0.1913062483072281, -3.7431014789035544e-05, -0.051884088665246964, -3.576278118089249e-07, -0.0004020121123176068, -0.018032537773251534, -0.001718117156997323, -0.005869533866643906, -0.016809485852718353, -1.535309076309204, -0.050142060965299606, -0.462013840675354, -1.2636104656849056e-05, -0.0009345216676592827, -1.3232143828645349e-05, -0.008235661312937737, -0.00028546550311148167, -0.004954561125487089, -0.00015627116954419762, -0.007568730972707272, -0.001704074558801949, -0.005510141607373953, -2.892352819442749, -0.0011026738211512566, -1.7577704191207886, -3.9871811866760254, -2.272526264190674, -0.05194146931171417, -0.31501495838165283, -0.511388897895813, -0.00042846560245379806, -0.003552675014361739, -0.07704419642686844, -0.010709903202950954, -8.583032467868179e-06, -0.0001821352052502334, -2.861018856492592e-06, -0.0008168459753505886, -0.0020418763160705566, -0.00040725519647821784, -0.0010657589882612228, -0.006365026347339153, -0.01612268015742302, -0.0009709649602882564, -0.009923882782459259, -0.00029738296871073544, -0.0248300489038229, -0.00036542891757562757, -0.47771093249320984, -3.126983165740967, -1.4341226816177368, -0.0004657614335883409, -0.1326534003019333, -0.31408607959747314, -0.0002712835557758808, -1.6921968460083008, -0.7607209086418152, -0.0810404121875763, -1.9907753085135482e-05, -0.11553163081407547, -0.007970905862748623, -0.016244668513536453, -0.03938446193933487, -0.0023732611443847418, -0.0001387499796692282, -0.005703485105186701, -0.0010163385886698961, -1.1243630647659302, -0.004059646278619766, -0.0002783149539027363, -0.002819731365889311, -4.434487345861271e-05, -0.11360900849103928, -0.11931812018156052, -0.0012816318776458502, -0.0003741279651876539, -0.25755128264427185, -1.153833031654358, -6.568216485902667e-05, -0.012498622760176659, -9.500529267825186e-05, -0.0019828674849122763, -0.0008348317351192236, -0.0006425699684768915, -2.1934269170742482e-05, -4.291525328881107e-06, -0.0011310139670968056, -0.2968650758266449, -0.0014948395546525717, -0.00021681819634977728, -7.545663538621739e-05, -0.008613221347332, -7.128461584215984e-05, -0.007848496548831463, -0.060807038098573685, -2.5629668016335927e-05, -5.483612312673358e-06, -0.0010420613689348102, -0.00011860620725201443, -0.002188194077461958, -4.017272294731811e-05, -1.1920922133867862e-06, -1.764281842042692e-05, -2.3603161025675945e-05, -0.00013147920253686607, -0.00015114595589693636, -0.21558022499084473, -0.0012066233903169632, -0.12863869965076447, -0.7317920327186584, -2.4466824531555176, -0.7144352793693542, -0.06164946407079697, -0.45224854350090027, -0.0008835464250296354, -3.0327963829040527, -0.49439743161201477, -0.1967901587486267, -0.016857897862792015, -1.2755313036905136e-05, -0.33044371008872986, -0.0015119798481464386, -0.0975881889462471, -0.005908049177378416, -0.0183947142213583, -0.020056188106536865, -2.638463020324707, -0.1738682985305786, -0.9934833645820618, -0.024019673466682434, -1.0521433353424072, -0.17593997716903687, -0.05233230069279671, -1.4728130102157593, -0.26920101046562195, -0.19609521329402924, -0.003869547275826335, -0.15395934879779816, -0.0014417502097785473, -1.6689286894688848e-06, -2.9802276912960224e-06, -0.00013195598148740828, -0.00013529339048545808, -7.617183291586116e-05, -0.14136488735675812, -0.02852042019367218, -0.014002416282892227, -1.6197668313980103, -9.179073458653875e-06, -7.510157047363464e-06, -4.589452510117553e-05, -0.009114917367696762, -0.014532433822751045, -0.11714779585599899, -0.2755335569381714, -0.0002087136817863211, -0.8730449676513672, -0.020113440230488777, -0.006716651376336813, -1.6689286894688848e-06, -4.410734163684538e-06, -0.00575243728235364, -0.0002369599969824776, -0.33530378341674805, -0.002819731365889311, -0.006218133959919214, -0.10897371917963028, -0.09019966423511505, -0.0038134963251650333, -0.03850895166397095, -1.5735502529423684e-05, -0.08367174118757248, -2.729855441430118e-05, -3.40932747349143e-05, -7.152531907195225e-06, -0.0001658063702052459, -0.022154925391077995, -0.0029002055525779724, -0.0030317793134599924, -0.032606348395347595, -0.0003195490571670234, -0.002850400283932686, -0.0016219568205997348, -8.713819261174649e-05, -0.011369438841938972, -0.0001262346631847322, -0.001977156847715378, -0.001190787530504167, -0.0056269108317792416, -3.504691630951129e-05, -2.3841855067985307e-07, -0.0030656505841761827, -1.594525694847107, -0.012395134195685387, -5.113947918289341e-05, -0.00026258357684127986, -0.2783084213733673, -0.005524368025362492, -0.010449813678860664, -0.0014149664202705026, -0.5565685033798218, -0.004911382216960192, -0.44468632340431213], "finish_reason": "stop"}], "metrics": {"energy": 757.0712616214756, "energy_per_token": 3.5880154579216854, "time": 18.493816, "time_per_token": 0.08764841706161138}}
{"outputs": [{"text": "file_info = {}\n    for path in sorted(pathlib.Path(directory).rglob(\"*\")):\n        path_str = str(path)\n        if os.path.isfile(path_str):\n            file_info[_normalize(path.stem)] = {\n                'Size': os.path.getsize(path_str),\n                'MD5 Hash': _calculate_md5_hash(path_str),\n            }\n\n    return file_info", "tokens": ["file", "_", "info", " =", " {}", "\n", "    ", "for", " path", " in", " sorted", "(", "path", "lib", ".", "Path", "(", "directory", ")", ".", "rg", "lob", "(", "\"", "*", "\"", "))", ":", "\n", "        ", "path", "_", "str", " =", " str", "(", "path", ")", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "path", "_", "str", "):", "\n", "            ", "file", "_", "info", "[", "_", "normal", "ize", "(", "path", ".", "stem", ")]", " =", " {", "\n", "                ", "'", "Size", "':", " os", ".", "path", ".", "get", "size", "(", "path", "_", "str", ")", ",", "\n", "                ", "'", "MD", "5", " Hash", "':", " _", "calculate", "_", "md", "5", "_", "hash", "(", "path", "_", "str", ")", ",", "\n", "            ", "}", "\n", "\n", "    ", "return", " file", "_", "info", "\n", "\n", "def"], "logprobs": [-2.8340516090393066, -0.04432206600904465, -0.24930839240550995, -0.016469718888401985, -0.054094914346933365, -0.028058622032403946, -0.26865899562835693, -0.17972911894321442, -2.593862771987915, -0.2534620463848114, -2.6197948455810547, -0.022385060787200928, -0.07138045132160187, -0.00013433984713628888, -0.00010227633902104571, -0.00033849707688204944, -0.0016470688860863447, -0.005103536881506443, -0.0007631250191479921, -3.540453326422721e-05, -0.3666752576828003, -9.894321920000948e-06, -0.5768904089927673, -0.002764572389423847, -0.05025622621178627, -0.06665204465389252, -0.016250180080533028, -0.000277123210253194, -0.010225408710539341, -0.012426570057868958, -2.6505472660064697, -1.1914995908737183, -0.4428344964981079, -0.0029733041301369667, -0.008401644416153431, -6.48477507638745e-05, -0.00015484087634831667, -0.0335744209587574, -0.032283563166856766, -0.017693420872092247, -0.0760776624083519, -0.2976497709751129, -3.576214658096433e-05, -0.00030560590676032007, -7.676783570786938e-05, -0.013043204322457314, -0.03621828928589821, -2.8013790142722428e-05, -0.000459565402707085, -0.012714749202132225, -3.2186455882765586e-06, -0.010250305756926537, -0.008747827261686325, -0.005107924807816744, -1.1545215845108032, -0.0555257573723793, -0.9059097766876221, -0.006599890999495983, -1.2777739763259888, -0.2362288534641266, -0.007422725670039654, -1.0098819732666016, -0.011689499951899052, -0.5838290452957153, -0.9507873058319092, -0.14801180362701416, -0.0006920088781043887, -0.21826277673244476, -0.002771110739558935, -0.0012191252317279577, -1.7420684099197388, -0.044007834047079086, -0.005406282842159271, -0.35228005051612854, -1.1324817933200393e-05, -0.03959473967552185, -1.5497195136049413e-06, -5.960462772236497e-07, -7.152531907195225e-06, -0.0014544870937243104, -0.0021722547244280577, -0.02353646419942379, -1.1920928244535389e-07, -0.00047469791024923325, -0.0032812110148370266, -0.040026161819696426, -0.0009277330245822668, -0.017056208103895187, -0.0013627061853185296, -8.916457591112703e-05, -0.007083304226398468, -0.00017927470616996288, -0.11232960224151611, -3.065082311630249, -0.005073411390185356, -0.11077926307916641, -0.0008632985409349203, -0.9043914079666138, -0.00874983612447977, -0.003042119089514017, -0.00242594419978559, -0.03222804144024849, -1.9311717551317997e-05, -0.04411642625927925, -0.9736157655715942, -0.002401327481493354, -0.04702835902571678, -2.0265373677830212e-05, -0.00019751029321923852, -2.963379144668579, -0.004575734958052635, -0.023118719458580017, -0.01131192035973072, -1.1920922133867862e-06, -1.1920928244535389e-07, -0.011138521134853363, -0.0010369406081736088, -0.03437398001551628], "finish_reason": "stop"}], "metrics": {"energy": 417.93811917877207, "energy_per_token": 3.5418484676167123, "time": 10.282642, "time_per_token": 0.08714103389830508}}
{"outputs": [{"text": "info = {}\n    for root, dirs, files in os.walk(directory):\n        for file_name in files:\n            file_path = os.path.join(root, file_name)\n\n            with open(file_path, 'rb') as file:\n                data = file.read()\n                hash_md5 = md5(data).hexdigest()\n                file_size = os.path.getsize(file_path)\n\n                normalized_name = normalize_ascii(file_name)\n                info[normalized_name] = {\n                    'Size': file_size,\n                    'MD5 Hash': hash_md5\n                }\n    return info", "tokens": ["info", " =", " {}", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " file", "_", "name", " in", " files", ":", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " file", "_", "name", ")", "\n", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " file", ":", "\n", "                ", "data", " =", " file", ".", "read", "()", "\n", "                ", "hash", "_", "md", "5", " =", " md", "5", "(", "data", ")", ".", "hex", "dig", "est", "()", "\n", "                ", "file", "_", "size", " =", " os", ".", "path", ".", "get", "size", "(", "file", "_", "path", ")", "\n", "\n", "                ", "normalized", "_", "name", " =", " normalize", "_", "ascii", "(", "file", "_", "name", ")", "\n", "                ", "info", "[", "normalized", "_", "name", "]", " =", " {", "\n", "                ", "    ", "'", "Size", "':", " file", "_", "size", ",", "\n", "                ", "    ", "'", "MD", "5", " Hash", "':", " hash", "_", "md", "5", "\n", "                ", "}", "\n", "    ", "return", " info", "\n", "\n", "def"], "logprobs": [-1.0510468482971191, -0.01756657287478447, -0.09746405482292175, -0.02451649308204651, -0.21110717952251434, -0.2669380009174347, -1.9377578496932983, -0.006036384031176567, -0.2657051086425781, -0.004081729333847761, -0.0002406545972917229, -0.025218715891242027, -0.0009299959056079388, -0.0022904847282916307, -8.940656698541716e-06, -2.6464111215318553e-05, -0.0007699147681705654, -0.008403654210269451, -0.02872164361178875, -0.007039743475615978, -0.004469168372452259, -0.04119382053613663, -0.5865156054496765, -1.886264681816101, -0.1276264637708664, -0.005051824729889631, -0.0027703975792974234, -0.0004880429187323898, -0.000797311426140368, -0.0063011785969138145, -0.7491817474365234, -0.047718703746795654, -0.037287045270204544, -0.0018856617389246821, -0.06363493204116821, -3.2186455882765586e-06, -7.712543447269127e-05, -7.390948667307384e-06, -0.001562089892104268, -2.610649426060263e-05, -0.006047522183507681, -0.0004969792207702994, -0.0015379278920590878, -1.4305012882687151e-05, -1.2516897186287679e-05, -0.00034421717282384634, -0.003018587129190564, -2.378638505935669, -0.0008808070560917258, -1.3190921545028687, -0.004247572273015976, -0.00010775939153973013, -0.00201094476506114, -1.2516897186287679e-05, -0.00010513706365600228, -0.002800949150696397, -0.18065734207630157, -0.0184436347335577, -0.003694139886647463, -0.0005228344234637916, -0.8591995239257812, -0.029786981642246246, -0.0020024979021400213, -0.0037036414723843336, -1.3556649684906006, -0.005584472790360451, -0.0017936823423951864, -9.691245941212401e-05, -3.6954811548639555e-06, -0.0003927174839191139, -0.00614313967525959, -0.2593005299568176, -2.2198994159698486, -0.14319288730621338, -1.5079036951065063, -0.0010246747406199574, -0.005369645077735186, -0.0038206216413527727, -2.145764938177308e-06, -0.019711794331669807, -0.004303480498492718, -0.000854841957334429, -0.386637419462204, -0.00922512449324131, -7.629365427419543e-06, 0.0, -0.00011896379146492109, -0.014733907766640186, -0.6274839043617249, -1.1535121202468872, -0.0010901705827564, -0.03325413912534714, -0.014238785021007061, -0.0828273668885231, -7.510157047363464e-06, -0.08508718758821487, -7.986990567587782e-06, -1.3708974620385561e-05, -1.4305104514278355e-06, -0.00017712931730784476, -0.0022788289934396744, -0.0005833592731505632, -0.00010978573118336499, -0.0004273931554052979, -0.006379595957696438, -0.20683380961418152, -1.3399419784545898, -0.9942647218704224, -0.02291368506848812, -1.181848168373108, -0.008196881040930748, -1.970762014389038, -0.11816496402025223, -2.8245348930358887, -0.1566280871629715, -0.012212500907480717, -0.000439428084064275, -0.020422304049134254, -0.017032653093338013, -0.010115076787769794, -0.36616721749305725, -0.15362949669361115, -0.015618973411619663, -0.0023338955361396074, -1.7881377516459906e-06, -9.536738616588991e-07, -0.0016832482069730759, -0.00023529145983047783, -1.426275372505188, -0.029499631375074387, -0.0003426679759286344, -0.005610670894384384, -0.09902878850698471, -0.10891053825616837, -0.012884697876870632, -0.04961084946990013, -2.145764938177308e-06, -2.4676019165781327e-05, -0.0017726197838783264, -0.009736666455864906, -5.07818695041351e-05, -0.00016616393986623734, -0.001649092067964375, -0.002647468587383628, -0.00011812942830147222, -0.006326054688543081, -0.000256982195423916, -0.0015043619787320495, -1.168244216387393e-05, -4.529942543740617e-06, -4.291525328881107e-06, -0.21062126755714417, -0.0005569098866544664, -0.002396808471530676, -8.272782724816352e-05, -0.5029799342155457, -0.004885402973741293, -0.0017602439038455486, -0.002525594551116228, -0.0014972201315686107, -0.03743966296315193], "finish_reason": "stop"}], "metrics": {"energy": 607.6357391443256, "energy_per_token": 3.774135025741153, "time": 15.116411, "time_per_token": 0.09389075155279503}}
{"outputs": [{"text": "info = {}\n    for file in os.listdir(directory):\n        name = unicodedata.normalize('NFD', file).encode('ascii', 'ignore').decode('utf-8')\n        info[name] = {'Size': os.stat(directory + '/' + file).st_size, 'MD5 Hash': md5(open(directory + '/' + file, 'rb').read()).hexdigest()}\n    return info", "tokens": ["info", " =", " {}", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "name", " =", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "D", "'", ",", " file", ")", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "('", "utf", "-", "8", "')", "\n", "        ", "info", "[", "name", "]", " =", " {'", "Size", "':", " os", ".", "stat", "(", "directory", " +", " '/", "'", " +", " file", ")", ".", "st", "_", "size", ",", " '", "MD", "5", " Hash", "':", " md", "5", "(", "open", "(", "directory", " +", " '/", "'", " +", " file", ",", " '", "rb", "')", ".", "read", "())", ".", "hex", "dig", "est", "()}", "\n", "    ", "return", " info", "\n", "\n", "def"], "logprobs": [-1.0510468482971191, -0.01756657287478447, -0.09746405482292175, -0.02451649308204651, -0.21110717952251434, -0.2669380009174347, -0.8736041784286499, -0.21415051817893982, -0.1913062483072281, -3.7431014789035544e-05, -0.051884088665246964, -3.576278118089249e-07, -0.0004020121123176068, -0.018032537773251534, -0.001718117156997323, -0.005869533866643906, -0.016809485852718353, -4.035175323486328, -0.23209498822689056, -1.9339274168014526, -0.008595611900091171, -4.482168878894299e-05, -3.6954811548639555e-06, -0.00019798702851403505, -0.0001932195882545784, -2.2053474822314456e-05, -0.11721108853816986, -0.0065490854904055595, -0.7311372756958008, -0.00024375328212045133, -5.507317473529838e-05, -0.05672784149646759, -0.08218950778245926, -0.16957542300224304, -0.007509101182222366, -0.10595294088125229, -0.1008964329957962, -0.0013494918821379542, -1.2159273865108844e-05, -0.006679587997496128, -0.003961335867643356, -0.015981320291757584, -0.05182330682873726, -0.004208636935800314, -0.45405933260917664, -0.19123831391334534, -0.025157803669571877, -7.86750388215296e-05, -0.008144027553498745, -0.04568130895495415, -0.03208501636981964, -1.951472520828247, -0.02790653519332409, -0.019344832748174667, -0.009513990953564644, -0.0008972433279268444, -1.3868722915649414, -0.058521073311567307, -0.006628549657762051, -1.2437525987625122, -3.4689302992774174e-05, -1.410747766494751, -0.0023105847649276257, -1.5661474466323853, -0.22313381731510162, -0.8020401000976562, -0.004235464613884687, -0.00013124081306159496, -0.015796877443790436, -0.0020286710932850838, -0.00033146608620882034, -1.549708758830093e-05, -2.622600959512056e-06, -0.00014447122521232814, -0.03767721727490425, -1.0391936302185059, -0.0034522954374551773, -0.00017271934484597296, -0.013755409978330135, -0.0013299677520990372, -0.15604081749916077, -0.00041797960875555873, -0.047874171286821365, -1.1202361583709717, -0.004231665749102831, -0.07218596339225769, -0.00491992337629199, -0.008284371346235275, -0.0004463391669560224, -0.0007278653793036938, -0.0055816275998950005, -0.033037446439266205, -0.1774453967809677, -0.005747814662754536, -0.0008501967531628907, -9.262132516596466e-05, -2.2291887944447808e-05, -0.002123126992955804, -6.770858453819528e-05, -0.00961801502853632, -0.00012790338951162994, 0.0, -0.013744239695370197, -0.005651330109685659, -0.0586182102560997, -0.012958129867911339, -0.007541282568126917, -0.12864719331264496, -0.007759311236441135, -0.5996474027633667], "finish_reason": "stop"}], "metrics": {"energy": 441.6755895042418, "energy_per_token": 4.015232631856744, "time": 9.872572, "time_per_token": 0.08975065454545454}}
{"outputs": [{"text": "info = {}\n    for filename in os.listdir(directory):\n        filename = normalize_filename(filename)\n        info[filename] = {\n            'Size': get_file_size(f'{directory}/{filename}'),\n            'MD5 Hash': get_file_md5_hash(f'{directory}/{filename}')\n        }\n    return info", "tokens": ["info", " =", " {}", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "filename", " =", " normalize", "_", "filename", "(", "filename", ")", "\n", "        ", "info", "[", "filename", "]", " =", " {", "\n", "            ", "'", "Size", "':", " get", "_", "file", "_", "size", "(", "f", "'{", "directory", "}/{", "filename", "}", "')", ",", "\n", "            ", "'", "MD", "5", " Hash", "':", " get", "_", "file", "_", "md", "5", "_", "hash", "(", "f", "'{", "directory", "}/{", "filename", "}", "')", "\n", "        ", "}", "\n", "    ", "return", " info", "\n", "\n", "def"], "logprobs": [-1.0510468482971191, -0.01756657287478447, -0.09746405482292175, -0.02451649308204651, -0.21110717952251434, -0.2669380009174347, -1.7332452535629272, -0.006494250148534775, -0.061774540692567825, -2.9205850296420977e-05, -0.006583074573427439, -1.1920928244535389e-07, -0.0006470970110967755, -0.02109040878713131, -0.0012256737099960446, -0.009354805573821068, -0.018032537773251534, -2.304708957672119, -0.6838055849075317, -2.699937343597412, -0.4363829493522644, -0.6298315525054932, -0.008045763708651066, -0.06333096325397491, -0.014445488341152668, -0.01481742225587368, -0.058860789984464645, -2.529827117919922, -0.011291529051959515, -0.0019039851613342762, -0.003554694587364793, -0.0006598440813831985, -1.5188913345336914, -0.00660652294754982, -0.016893180087208748, -0.343735933303833, -0.06736620515584946, -0.007911654189229012, -0.8863396048545837, -0.011542326770722866, -0.1107897162437439, -0.00011085849109804258, -0.002188194077461958, -0.018037572503089905, -1.893602967262268, -0.13650916516780853, -0.0013000854523852468, -0.048794206231832504, -0.001456629834137857, -0.008185530081391335, -0.0010749283246695995, -0.0035602774005383253, -0.0030652941204607487, -0.0014705568319186568, -0.0020803017541766167, -0.0016127924900501966, -0.00019238528329879045, -0.0070772673934698105, -0.0004817279113922268, -0.07908439636230469, -0.00017355366435367614, -0.26299959421157837, -0.00028463127091526985, -0.21691980957984924, -0.00021681819634977728, -0.4645472466945648, -0.003213957417756319, -0.001209481037221849, -0.008686495013535023, -0.0010701649589464068, -5.006664650863968e-05, -0.0019091013818979263, -0.001877094735391438, -0.05091104283928871, -0.0011681645410135388, -0.3163788914680481, -0.027820512652397156, -1.4424220353248529e-05, -0.00035255891270935535, -0.048404261469841, -0.005380553659051657, -0.00285574933513999, -0.007772795855998993, -0.001725019421428442, -0.027403393760323524], "finish_reason": "stop"}], "metrics": {"energy": 313.7331278343201, "energy_per_token": 3.690977974521413, "time": 6.943167, "time_per_token": 0.08168431764705882}}
{"outputs": [{"text": "def get_filename_hash(path):\n        return md5(str(path.with_suffix('')).encode()).hexdigest()\n\n    def get_filename_size(path):\n        return os.stat(str(path)).st_size\n\n    def normalize_string(string):\n        normalized = unicodedata.normalize('NFD', string)\n        return normalized.encode('ascii', 'ignore').decode('utf-8')\n\n    def get_file_info(file):\n        if file.suffix not in ['.py', '.ipynb']:\n            return {'Size': get_filename_size(file), 'MD5 Hash': get_filename_hash(file)}\n\n    def process_file(path, file):\n        return normalize_string(file.name), get_file_info(file)\n\n    def process_directory(directory):\n        return {process_file(directory, file)[0]: process_file(directory, file)[1] for file in\n                pathlib.Path(directory).iterdir() if file.is_", "tokens": ["def", " get", "_", "filename", "_", "hash", "(", "path", "):", "\n", "        ", "return", " md", "5", "(", "str", "(", "path", ".", "with", "_", "suff", "ix", "('", "'))", ".", "encode", "())", ".", "hex", "dig", "est", "()", "\n", "\n", "    ", "def", " get", "_", "filename", "_", "size", "(", "path", "):", "\n", "        ", "return", " os", ".", "stat", "(", "str", "(", "path", "))", ".", "st", "_", "size", "\n", "\n", "    ", "def", " normalize", "_", "string", "(", "string", "):", "\n", "        ", "normalized", " =", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "D", "'", ",", " string", ")", "\n", "        ", "return", " normalized", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "('", "utf", "-", "8", "')", "\n", "\n", "    ", "def", " get", "_", "file", "_", "info", "(", "file", "):", "\n", "        ", "if", " file", ".", "suff", "ix", " not", " in", " ['", ".", "py", "'", ",", " '", ".", "ip", "yn", "b", "']", ":", "\n", "            ", "return", " {'", "Size", "':", " get", "_", "filename", "_", "size", "(", "file", ")", ",", " '", "MD", "5", " Hash", "':", " get", "_", "filename", "_", "hash", "(", "file", ")}", "\n", "\n", "    ", "def", " process", "_", "file", "(", "path", ",", " file", "):", "\n", "        ", "return", " normalize", "_", "string", "(", "file", ".", "name", ")", ",", " get", "_", "file", "_", "info", "(", "file", ")", "\n", "\n", "    ", "def", " process", "_", "directory", "(", "directory", "):", "\n", "        ", "return", " {", "process", "_", "file", "(", "directory", ",", " file", ")[", "0", "]:", " process", "_", "file", "(", "directory", ",", " file", ")[", "1", "]", " for", " file", " in", "\n", "                ", "path", "lib", ".", "Path", "(", "directory", ")", ".", "iter", "dir", "()", " if", " file", ".", "is", "_"], "logprobs": [-2.924858570098877, -2.2500901222229004, -0.03656727448105812, -3.058330774307251, -0.40087321400642395, -3.1897685527801514, -0.09158937633037567, -1.7197067737579346, -0.22131578624248505, -0.0018286664271727204, -0.007536431774497032, -3.5840818881988525, -0.13691332936286926, -6.6756979322235566e-06, -0.005530888680368662, -1.632086992263794, -0.055140119045972824, -0.032185912132263184, -1.9185831546783447, -2.900665283203125, -8.821448318485636e-06, -0.0004680253332480788, -1.1920928244535389e-07, -0.0248213279992342, -0.09331807494163513, -0.004243417643010616, -0.01257267128676176, -0.8256779313087463, -0.048013366758823395, -0.015335269272327423, -8.940656698541716e-06, -1.1920928244535389e-07, -0.003670266829431057, -0.09995333850383759, -0.03333577513694763, -9.965400386136025e-05, -0.28948095440864563, -0.7525104880332947, -0.0012303171679377556, -0.9609532356262207, -0.08451507240533829, -0.4271053671836853, -0.01837107352912426, -0.01824735477566719, -0.01522432453930378, -0.00029774048016406596, -0.0008640132145956159, -0.08466163277626038, -1.2290658950805664, -2.5033637939486653e-05, -1.1384955644607544, -0.00021562635083682835, -2.0260047912597656, -0.0002215855201939121, -0.008779851719737053, -0.07201559096574783, -0.0032078970689326525, -1.1444026313256472e-05, -1.1920922133867862e-06, -0.00024911639047786593, -0.011751826852560043, -0.004173854365944862, -0.000310730334604159, -0.3631841838359833, -0.4730883538722992, -0.27819642424583435, -2.8177428245544434, -0.027377992868423462, -1.0860562324523926, -0.062274686992168427, -0.0014498446835204959, -0.0029488196596503258, -1.443204641342163, -0.3247652053833008, -0.09811753779649734, -0.0013191340258345008, -2.3841855067985307e-07, -8.4638240878121e-06, -7.950943836476654e-05, -0.00017236177518498152, -3.433168603805825e-05, -0.045773666352033615, -0.006850565783679485, -0.7052275538444519, -0.00023195437097456306, -8.22540732769994e-06, -0.04581966996192932, -0.11184748262166977, -0.3321869373321533, -0.004711360204964876, -1.078519582748413, -0.025224877521395683, -0.010130653157830238, -0.0010032388381659985, -0.020973095670342445, -0.0776389092206955, -0.0001656871900195256, -4.887569048150908e-06, -0.013285093940794468, -0.0029431143775582314, -0.00014923889830242842, -0.0007033258443698287, -0.0004928089329041541, -0.6436877846717834, -1.150701642036438, -0.027818888425827026, -0.0003333727945573628, -0.0016218378441408277, -0.0246777031570673, -0.00404017511755228, -9.655486064730212e-05, -1.1861603260040283, -0.7101723551750183, -0.0009398810216225684, -0.9430253505706787, -0.028562359511852264, -0.18606005609035492, -0.034419938921928406, -2.39020037651062, -0.8311025500297546, -8.630380034446716e-05, -0.002833758248016238, -2.889085531234741, -0.40389516949653625, -0.01956685073673725, -2.1762259006500244, -1.311301275563892e-06, -2.334080934524536, -1.6927575416048057e-05, -0.8746059536933899, -0.0025991962756961584, -2.3151979446411133, -0.12880314886569977, -0.00013243274588603526, -0.014229382388293743, -0.018455572426319122, -2.706998586654663, -0.000388665939681232, -0.00012361239350866526, -0.3733178675174713, -0.09175731241703033, -0.012728520669043064, -0.0015900599537417293, -0.684440016746521, -1.7868422269821167, -0.1931784451007843, -0.008065511472523212, -0.1456538885831833, -7.390948667307384e-06, -0.00017867876158561558, -6.556489552167477e-06, -0.00021634146105498075, -0.00017808281700126827, -0.007630250882357359, -0.044460274279117584, -0.0017498909728601575, -0.2522788643836975, -0.017705248668789864, -0.00045599075383506715, -0.01757383532822132, -0.0005154472892172635, -0.007369949948042631, -3.814689989667386e-06, -2.586808113846928e-05, -2.145764938177308e-06, -7.867782187531702e-06, -0.00011300401820335537, -0.0006517431465908885, -0.010824769735336304, -0.0015864893794059753, -0.4090580642223358, -0.014957655221223831, -1.726025938987732, -1.644806146621704, -0.005163191817700863, -2.1649410724639893, -0.03358640894293785, -2.094902753829956, -1.4753448963165283, -1.506734848022461, -0.5652539134025574, -0.00012730741582345217, -0.00224861828610301, -1.8637588024139404, -1.0761263370513916, -9.715084888739511e-05, -0.0008451942121610045, -0.0034132099244743586, -0.6485435366630554, -0.12143096327781677, -0.9175596237182617, -0.032506879419088364, -0.08091574907302856, -0.015375417657196522, -3.3378546504536644e-06, -6.401333666872233e-05, -2.3841855067985307e-07, -1.1920922133867862e-06, -0.00016080040950328112, -0.18196052312850952, -0.005049215164035559, -0.0066261813044548035, -0.0013662775745615363, -0.0001134808044298552, -1.2117722034454346, -0.4911542534828186, -0.0017470349557697773, -0.3912302553653717, -0.03982444852590561, -1.02168869972229, -0.14387549459934235, -5.3881147323409095e-05, -0.0008237544680014253, -0.8397270441055298, -0.2393924593925476, -2.022352457046509, -0.0010839784517884254, -0.0007421599584631622, -0.0030455656815320253, -0.5436474680900574, -0.008329059928655624, -0.2778456211090088, -0.13533350825309753, -0.009036595933139324, -0.00563426036387682, -0.007144261617213488, -1.5497195136049413e-06, -3.099436753473128e-06, -2.002696055569686e-05, -0.0005667987279593945, -0.00015567521040793508, -0.0003965306677855551, -0.0014528206083923578, -0.00011860620725201443, -0.00020668754586949944, -0.6747412085533142, -0.017021987587213516, -0.035780735313892365, -2.1045684814453125, -0.044558558613061905, -0.6804548501968384, -0.0004103533865418285, -4.994744449504651e-05, -0.0057596671395003796, -0.002338652964681387, -0.009493798948824406, -0.0012207920663058758, -6.48477507638745e-05, -0.35323455929756165, -1.0728830375228426e-06, -0.04650413990020752, -0.03203121945261955, -0.09660127013921738, -0.0003736513026524335, -0.004994416609406471, -5.364403477869928e-06], "finish_reason": "length"}], "metrics": {"energy": 927.5584957494734, "energy_per_token": 3.6232753740213806, "time": 22.048397, "time_per_token": 0.08612655078125}}
{"outputs": [{"text": "info = {}\n    for filename in os.listdir(directory):\n        path = pathlib.Path(directory + '/' + filename)\n        if os.path.isfile(path):\n            normalized = unicodedata.normalize('NFKD', filename).encode('ascii', 'ignore').decode()\n            size = os.path.getsize(path)\n            with open(path, \"rb\") as file:\n                md5_hash = md5(file.read())\n            info[normalized] = {\n                'Size': size,\n                'MD5 Hash': md5_hash\n            }\n    return info", "tokens": ["info", " =", " {}", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "path", " =", " path", "lib", ".", "Path", "(", "directory", " +", " '/", "'", " +", " filename", ")", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "path", "):", "\n", "            ", "normalized", " =", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " filename", ")", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "()", "\n", "            ", "size", " =", " os", ".", "path", ".", "get", "size", "(", "path", ")", "\n", "            ", "with", " open", "(", "path", ",", " \"", "rb", "\"", ")", " as", " file", ":", "\n", "                ", "md", "5", "_", "hash", " =", " md", "5", "(", "file", ".", "read", "())", "\n", "            ", "info", "[", "normalized", "]", " =", " {", "\n", "                ", "'", "Size", "':", " size", ",", "\n", "                ", "'", "MD", "5", " Hash", "':", " md", "5", "_", "hash", "\n", "            ", "}", "\n", "    ", "return", " info", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.0510468482971191, -0.01756657287478447, -0.09746405482292175, -0.02451649308204651, -0.21110717952251434, -0.2669380009174347, -1.7332452535629272, -0.006494250148534775, -0.061774540692567825, -2.9205850296420977e-05, -0.006583074573427439, -1.1920928244535389e-07, -0.0006470970110967755, -0.02109040878713131, -0.0012256737099960446, -0.009354805573821068, -0.018032537773251534, -1.7881531715393066, -0.044886521995067596, -1.1890089511871338, -3.6954195820726454e-05, -8.940656698541716e-06, -0.004331611096858978, -0.004839255474507809, -0.5562366843223572, -2.433537006378174, -0.4502061903476715, -0.0020534161012619734, -0.0002079985715681687, -0.002118487609550357, -0.0010796914575621486, -0.04373674839735031, -0.07095912843942642, -0.7320444583892822, -2.0034327507019043, -4.434487345861271e-05, -0.005364902317523956, -2.47952248173533e-05, -0.019369037821888924, -0.0690954178571701, -0.00040368037298321724, -0.03684099763631821, -0.04229864105582237, -0.009430150501430035, -0.007080344948917627, -1.636333703994751, -1.1991270780563354, -0.33647674322128296, -0.005916581489145756, -4.172316494077677e-06, -9.536697689327411e-06, -0.00011300401820335537, -0.00014649749209638685, -4.541770613286644e-05, -0.09921771287918091, -0.006501001305878162, -0.9813600778579712, -7.4741430580616e-05, -3.969590397900902e-05, -0.2539792060852051, -0.07827141135931015, -0.15635763108730316, -0.004697122145444155, -0.1102878525853157, -0.08341141790151596, -0.0006438804557546973, -7.354942499659956e-05, -0.02487330511212349, -0.001853535301052034, -0.0022718114778399467, -0.05181651562452316, -0.0021244355011731386, -0.2963086664676666, -0.012464010156691074, -0.02811390906572342, -2.230463981628418, -0.014334679581224918, -0.27111029624938965, -1.2040065485052764e-05, -0.14561215043067932, -6.437280717364047e-06, -6.341733387671411e-05, -1.7046782886609435e-05, -0.0011367294937372208, -0.01982796937227249, -0.0039505306631326675, -0.013064148835837841, -0.006404707673937082, -2.2469100952148438, -0.031434617936611176, -0.0006473353132605553, -0.015633055940270424, -0.015827033668756485, -2.5357725620269775, -0.04922417178750038, -0.003469521179795265, -0.001585775287821889, -0.00017736769223120064, -0.8238548636436462, -0.059146568179130554, -0.0034285355359315872, -0.0009286858257837594, -1.0631706714630127, -0.008772051893174648, -0.3215622007846832, -0.03118598833680153, -0.003845203435048461, -0.008125463500618935, -1.597391747054644e-05, -0.07907569408416748, -0.00032586511224508286, -6.103329360485077e-05, -5.483612312673358e-06, -0.0011408970458433032, -2.8546018600463867, -0.18806999921798706, -0.05890383571386337, -0.05337380990386009, -0.00569056486710906, -0.0029658162966370583, -0.00032360086333937943, -1.3348684310913086, -0.15581539273262024, -0.004651322029531002, -0.39994025230407715, -0.028316838666796684, -0.022461645305156708, -0.06335680931806564, -0.005537527613341808, -0.011136752553284168, -0.0001932195882545784, -0.0037510290276259184, -0.0014449642039835453, -0.00011646069469861686, -0.006900408770889044, -0.0012382942950353026, -0.0056602200493216515, -1.4305104514278355e-06, -0.0002169373765354976, -8.344646857949556e-07, -1.6836133003234863, -0.023707494139671326, -3.0874729418428615e-05, -0.00044526674901135266, -0.05905802175402641, -0.008090107701718807, -0.003435188438743353, -1.2626748085021973, -1.9073468138230965e-06, -1.1920922133867862e-06, -1.9073468138230965e-06, -3.6000557884108275e-05, -0.142927348613739], "finish_reason": "stop"}], "metrics": {"energy": 539.0016927165982, "energy_per_token": 3.522886880500642, "time": 13.244507, "time_per_token": 0.08656540522875818}}
{"outputs": [{"text": "# Initialize a dictionary to store the file info\n    file_info = {}\n\n    # Get the absolute path of the directory\n    abs_dir = os.path.abspath(directory)\n\n    # Loop through the files in the directory\n    for filename in os.listdir(abs_dir):\n        # Get the full path of the file\n        file_path = os.path.join(abs_dir, filename)\n\n        # Check if it is a file and not a directory\n        if os.path.isfile(file_path):\n            # Get the file size\n            size = os.path.getsize(file_path)\n\n            # Open the file in read mode and calculate its MD5 hash\n            with open(file_path, 'rb') as f:\n                md5_hash = md5(f.read()).hexdigest()\n\n            # Convert the filename to ASCII\n            ascii_filename = unicodedata.normalize('NFKD', filename).encode(\n                'ascii', 'ignore').decode('ascii')\n\n            # Add the file info to the dictionary\n            ", "tokens": ["#", " Initialize", " a", " dictionary", " to", " store", " the", " file", " info", "\n", "    ", "file", "_", "info", " =", " {}", "\n", "\n", "    ", "#", " Get", " the", " absolute", " path", " of", " the", " directory", "\n", "    ", "abs", "_", "dir", " =", " os", ".", "path", ".", "ab", "sp", "ath", "(", "directory", ")", "\n", "\n", "    ", "#", " Loop", " through", " the", " files", " in", " the", " directory", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "abs", "_", "dir", "):", "\n", "        ", "#", " Get", " the", " full", " path", " of", " the", " file", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "abs", "_", "dir", ",", " filename", ")", "\n", "\n", "        ", "#", " Check", " if", " it", " is", " a", " file", " and", " not", " a", " directory", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "            ", "#", " Get", " the", " file", " size", "\n", "            ", "size", " =", " os", ".", "path", ".", "get", "size", "(", "file", "_", "path", ")", "\n", "\n", "            ", "#", " Open", " the", " file", " in", " read", " mode", " and", " calculate", " its", " MD", "5", " hash", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "md", "5", "_", "hash", " =", " md", "5", "(", "f", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "\n", "            ", "#", " Convert", " the", " filename", " to", " ASC", "II", "\n", "            ", "ascii", "_", "filename", " =", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " filename", ")", ".", "encode", "(", "\n", "                ", "'", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "('", "ascii", "')", "\n", "\n", "            ", "#", " Add", " the", " file", " info", " to", " the", " dictionary", "\n", "            "], "logprobs": [-2.2895398139953613, -1.6378742456436157, -1.5596897602081299, -0.09241095185279846, -0.10878374427556992, -0.2107725739479065, -0.5856307148933411, -0.6596978902816772, -1.4023456573486328, -0.1440044343471527, -0.00041929035796783864, -1.2850899696350098, -0.013047793880105019, -0.013683917932212353, -0.02211632952094078, -0.04247746244072914, -0.0008216104470193386, -0.15233653783798218, -0.00021872512297704816, -0.019375117495656013, -3.101774215698242, -0.7697345614433289, -1.863407015800476, -0.06351478397846222, -0.20787154138088226, -0.004777207970619202, -0.3802972435951233, -0.19540204107761383, -0.00036090059438720345, -1.1271344423294067, -0.0018477048724889755, -0.9784124493598938, -0.3218832314014435, -0.06612160801887512, -2.8609820219571702e-05, -0.0011868583969771862, -1.7523612768854946e-05, -0.034414295107126236, -1.1920928244535389e-07, -1.2516897186287679e-05, -0.00042441420373506844, -0.006450190674513578, -0.0006268443539738655, -0.002020343439653516, -0.01461114827543497, -0.00010847456724150106, -0.012247004546225071, -1.9497230052947998, -0.1325044184923172, -2.227172613143921, -0.31119468808174133, -0.08804221451282501, -0.0015591143164783716, -0.04652757942676544, -0.10727350413799286, -0.00011062010162277147, -0.009015921503305435, -1.2994191646575928, -0.0011454218765720725, -0.005729087628424168, -5.245195097813848e-06, -0.0006517431465908885, -1.1920928244535389e-07, -0.0002743821241892874, -0.18456141650676727, -8.344646857949556e-07, -2.3841855067985307e-07, -0.00017379203927703202, -0.0004920940846204758, -0.11849220842123032, -0.04949105158448219, -0.6223883628845215, -0.003617530455812812, -1.0658838748931885, -0.1329326331615448, -0.06171391159296036, -0.028332829475402832, -0.04353361576795578, -0.01028782781213522, -5.4834770708112046e-05, -0.3027738034725189, -0.18965423107147217, -0.0038563660345971584, -0.0001392267586197704, -0.013047205284237862, -7.152555099310121e-07, -2.7656173188006505e-05, -6.079655122448457e-06, -0.0010526598198339343, -1.8358061424805783e-05, -0.034763678908348083, -3.3378546504536644e-06, -1.6689160474925302e-05, -3.564294092939235e-05, -0.0002954761730507016, -0.00015233787416946143, -0.00034707720624282956, -0.06390224397182465, -0.000179036331246607, -0.021204087883234024, -0.6382176876068115, -0.02001797966659069, -0.534744918346405, -0.35926663875579834, -0.018052557483315468, -0.1841774582862854, -1.2498128414154053, -0.013776221312582493, -0.05474914237856865, -0.04135911166667938, -0.0477980338037014, -2.2291887944447808e-05, -0.0008572241058573127, -0.04815277084708214, -3.2186455882765586e-06, -8.821448318485636e-06, -4.291525328881107e-06, -8.201262971851975e-05, -0.006672838237136602, -1.7404405298293568e-05, -0.0002693767019081861, -1.311301275563892e-06, -7.152555099310121e-07, -0.012674140743911266, -0.00018869050836656243, -0.017409952357411385, -0.02463245950639248, -1.301047682762146, -0.017549237236380577, -1.2072312831878662, -0.7380459904670715, -0.9265015721321106, -0.00010990492592100054, -1.397219181060791, -0.03277686983346939, -0.05616811662912369, -1.6689286894688848e-06, -0.07393178343772888, -2.145764938177308e-06, -3.933898824470816e-06, -2.145764938177308e-06, -7.283422019099817e-05, -0.0006256530177779496, -5.483612312673358e-06, 0.0, -9.321732068201527e-05, -0.0030187058728188276, -0.018499106168746948, -0.00031668893643654883, -0.003231187118217349, -2.8197848796844482, -0.024447744712233543, -0.0006461439770646393, -0.1983957290649414, -2.2492330074310303, -0.8636672496795654, -0.5943654775619507, -0.4716370403766632, -0.5076131224632263, -0.06720481812953949, -8.451581379631534e-05, -0.008023176342248917, -0.009713172912597656, -0.00011979816190432757, -0.054177239537239075, -0.01334438007324934, -0.00014709345123264939, -0.0019487215904518962, -4.100715523236431e-05, -8.583032467868179e-06, -0.0020360471680760384, -0.2642580568790436, -0.07176109403371811, -0.0010022860951721668, -0.00011729506513802335, -0.45573610067367554, -0.012994960881769657, -0.0003399271226953715, -0.0006431656656786799, -0.7878413200378418, -0.0013178244698792696, -0.04397166892886162, -0.005063092336058617, -0.0018663860391825438, -0.017087146639823914, -5.125986263010418e-06, -0.012676023878157139, -0.0005476167425513268, -1.7881233361549675e-05, -2.50339189733495e-06, -0.00021240839851088822, -0.011686436831951141, -0.0030202509369701147, -1.1324817933200393e-05, 0.0, -9.65590606938349e-06, -0.004139070864766836, -0.005881384946405888, -0.015205656178295612, -0.003036533249542117, -2.809706926345825, -0.22238212823867798, -0.40425193309783936, -0.011440742760896683, -0.09761381149291992, -0.0002661589242052287, -0.7151103019714355, -0.00013171759201213717, -0.7259674072265625, -0.0004245333548169583, -0.24124839901924133, -0.000593962671700865, -0.1065821498632431, -0.002181057119742036, -3.3378546504536644e-06, -4.291525328881107e-06, -0.00012885693286079913, -0.00018666432879399508, -9.059865078597795e-06, -0.007262852042913437, -0.00046039948938414454, -0.539450466632843, -9.059865078597795e-06, -6.6756979322235566e-06, -0.06395122408866882, -0.011777039617300034, -0.010969690047204494, -0.0016302878502756357, -2.6302943229675293, -0.040634483098983765, -0.0019631178583949804, -0.008737428113818169, -0.022311851382255554, -0.0007307243067771196, -5.1020273531321436e-05, -0.045084480196237564, -0.000952267087996006, -0.01908569410443306, -0.022104086354374886, -0.0007624103454872966, -0.10095785558223724, -0.2259991616010666, -0.001404847833327949, -0.004711953457444906, -0.011401968076825142, -0.00018654513405635953, -0.00173049361910671, -0.7615441679954529, -0.026779770851135254, -0.09590975195169449, -0.12942443788051605, -0.005098436959087849, -0.0019388464279472828, -0.012123939581215382, -0.02150876633822918, -0.00015805903240107], "finish_reason": "length"}], "metrics": {"energy": 921.1089868717188, "energy_per_token": 3.5980819799676516, "time": 21.83423, "time_per_token": 0.0852899609375}}
{"outputs": [{"text": "info = {}\n    for file in pathlib.Path(directory).rglob('*'):\n        if file.is_dir():\n            continue\n        file_name = str(file)\n        normalized_name = file.name.encode('utf-8').decode(\"ascii\", \"ignore\")\n        hash_value = md5(file_name.encode('utf-8')).hexdigest()\n        size_value = os.stat(file_name).st_size\n        info[normalized_name] = {'Size': size_value, 'MD5 Hash': hash_value}\n    return info", "tokens": ["info", " =", " {}", "\n", "    ", "for", " file", " in", " path", "lib", ".", "Path", "(", "directory", ")", ".", "rg", "lob", "('", "*", "')", ":", "\n", "        ", "if", " file", ".", "is", "_", "dir", "():", "\n", "            ", "continue", "\n", "        ", "file", "_", "name", " =", " str", "(", "file", ")", "\n", "        ", "normalized", "_", "name", " =", " file", ".", "name", ".", "encode", "('", "utf", "-", "8", "')", ".", "decode", "(", "\"", "ascii", "\"", ",", " \"", "ignore", "\"", ")", "\n", "        ", "hash", "_", "value", " =", " md", "5", "(", "file", "_", "name", ".", "encode", "('", "utf", "-", "8", "'))", ".", "hex", "dig", "est", "()", "\n", "        ", "size", "_", "value", " =", " os", ".", "stat", "(", "file", "_", "name", ")", ".", "st", "_", "size", "\n", "        ", "info", "[", "normalized", "_", "name", "]", " =", " {'", "Size", "':", " size", "_", "value", ",", " '", "MD", "5", " Hash", "':", " hash", "_", "value", "}", "\n", "    ", "return", " info", "\n", "\n", "if"], "logprobs": [-1.0510468482971191, -0.01756657287478447, -0.09746405482292175, -0.02451649308204651, -0.21110717952251434, -0.2669380009174347, -0.8736041784286499, -0.21415051817893982, -2.1307480335235596, -0.0008708022069185972, -5.924526340095326e-05, -0.0017748808022588491, -0.002541171619668603, -0.012115225195884705, -0.0009663202799856663, -1.847726889536716e-05, -0.9054927229881287, -3.4689302992774174e-05, -0.5983526706695557, -0.03471198305487633, -0.01920720376074314, -0.00013553177996072918, -0.017966268584132195, -0.016066960990428925, -1.1779638528823853, -0.4623471796512604, -0.0025232164189219475, -0.01236746460199356, -6.794906312279636e-06, -2.531466484069824, -0.15775160491466522, -0.05672232434153557, -0.0008956949459388852, -0.19133026897907257, -0.021512966603040695, -0.2634436786174774, -1.7966270446777344, -0.12493044137954712, -0.9603220820426941, -0.0903664231300354, -1.6923421621322632, -0.0025258325040340424, -0.014154281467199326, -0.3775664269924164, -0.378395140171051, -0.040259551256895065, -1.9400527477264404, -0.1052321344614029, -0.7926632761955261, -0.009677755646407604, -2.684093952178955, -0.8117347359657288, -0.6851670145988464, -0.8151125907897949, -0.7073646783828735, -0.2685942053794861, -0.38625508546829224, -0.16817517578601837, -0.030150016769766808, -0.04789349064230919, -0.6324992775917053, -0.01419894304126501, -3.0462074279785156, -1.0490036010742188, -0.3150928020477295, -2.7179348762729205e-05, -0.04927206411957741, -0.3519779443740845, -0.05903330072760582, -1.7523612768854946e-05, -0.0022079392801970243, -0.1443737894296646, -0.0452977791428566, -4.003867149353027, -0.2805737257003784, -2.357733726501465, -0.005862896796315908, -0.1259946972131729, -3.0874729418428615e-05, -0.19095727801322937, -0.15403425693511963, -0.10962966829538345, -0.0009697740315459669, -0.002299404935911298, -0.0036808375734835863, -0.6677018404006958, -0.023172417655587196, -0.01402463298290968, -0.0006411403883248568, -0.0068522230722010136, -0.05698619410395622, -0.02454196661710739, -7.748573807475623e-06, -7.033323527139146e-06, -0.0005342725198715925, -0.011826872825622559, -0.008747827261686325, -0.7873988747596741, -2.2683184146881104, -0.30678656697273254, -0.0009140365873463452, -0.21633897721767426, -3.158996332786046e-05, -1.7834306955337524, -0.00030119650182314217, -0.041267719119787216, -0.32992300391197205, -0.00017021637177094817, -0.003512286813929677, -0.0016578990034759045, -1.7046782886609435e-05, -7.152555099310121e-07, -0.00021228920377325267, -0.012755473144352436, -0.039948735386133194, -0.11612948030233383, -0.06009502336382866, -0.030366871505975723, -4.0531076592742465e-06, -1.0728830375228426e-06, -0.004964643623679876, -0.0008840228547342122, -0.4472529888153076, -0.08527439087629318, -0.00556669058278203, -0.057996660470962524, -4.3748852476710454e-05, -4.768370445162873e-07, -0.00229119835421443, -0.05973966792225838, -0.0035839155316352844, -0.0001174142598756589, -0.012949422001838684, -0.0007183355046436191, -0.002659357851371169, -1.156323378381785e-05, -2.3841855067985307e-07, -0.004818138666450977, -0.0007284610182978213, -0.04882008954882622, -0.010535573586821556, -0.004951239563524723, -0.5417478680610657, -0.006570047698915005, -0.6625896096229553], "finish_reason": "stop"}], "metrics": {"energy": 496.43776859474156, "energy_per_token": 3.423708748929252, "time": 12.200144, "time_per_token": 0.08413892413793103}}
{"outputs": [{"text": "# List the files in the directory.\n    files = os.listdir(directory)\n\n    # Initialize the info dictionary.\n    info = {}\n\n    # Iterate over the file names.\n    for name in files:\n        # Get the file path and information.\n        path = pathlib.Path(os.path.join(directory, name))\n        file_info = {\n            'Size': path.stat().st_size,\n            'MD5 Hash': md5(path.read_bytes()).hexdigest()\n        }\n\n        # Normalize the file name to ASCII.\n        name = unicodedata.normalize('NFKD', pathlib.Path(name).stem).encode('ascii', 'ignore').decode()\n\n        # Add the file name and information to the dictionary.\n        info[name] = file_info\n\n    return info", "tokens": ["#", " List", " the", " files", " in", " the", " directory", ".", "\n", "    ", "files", " =", " os", ".", "list", "dir", "(", "directory", ")", "\n", "\n", "    ", "#", " Initialize", " the", " info", " dictionary", ".", "\n", "    ", "info", " =", " {}", "\n", "\n", "    ", "#", " Iter", "ate", " over", " the", " file", " names", ".", "\n", "    ", "for", " name", " in", " files", ":", "\n", "        ", "#", " Get", " the", " file", " path", " and", " information", ".", "\n", "        ", "path", " =", " path", "lib", ".", "Path", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " name", "))", "\n", "        ", "file", "_", "info", " =", " {", "\n", "            ", "'", "Size", "':", " path", ".", "stat", "()", ".", "st", "_", "size", ",", "\n", "            ", "'", "MD", "5", " Hash", "':", " md", "5", "(", "path", ".", "read", "_", "bytes", "())", ".", "hex", "dig", "est", "()", "\n", "        ", "}", "\n", "\n", "        ", "#", " Normal", "ize", " the", " file", " name", " to", " ASC", "II", ".", "\n", "        ", "name", " =", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " path", "lib", ".", "Path", "(", "name", ")", ".", "stem", ")", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "()", "\n", "\n", "        ", "#", " Add", " the", " file", " name", " and", " information", " to", " the", " dictionary", ".", "\n", "        ", "info", "[", "name", "]", " =", " file", "_", "info", "\n", "\n", "    ", "return", " info", "\n", "\n", "def"], "logprobs": [-2.2895398139953613, -4.420058727264404, -2.7470703125, -0.553251326084137, -0.21089905500411987, -0.03744884952902794, -0.2689281404018402, -2.8056106567382812, -0.06003822013735771, -0.0017014563782140613, -0.8776600360870361, -0.06325341761112213, -0.18994411826133728, -4.1483970562694594e-05, -0.006234245840460062, -4.887569048150908e-06, -0.00048780461656861007, -0.03994094580411911, -0.0018149822717532516, -0.002849924610927701, -0.5626590251922607, -0.00019929806876461953, -0.06691007316112518, -1.3723504543304443, -0.8381814360618591, -1.7047175168991089, -0.05431126803159714, -0.1366971731185913, -0.006846066564321518, -0.00010549465514486656, -0.020805684849619865, -0.008506729267537594, -0.1203346699476242, -0.0017279945313930511, -0.07444159686565399, -0.00011455356434453279, -0.04802791029214859, -1.1268969774246216, -0.002178321359679103, -0.44541192054748535, -0.45661821961402893, -2.6604394912719727, -0.5372140407562256, -0.2600418031215668, -0.0017665509367361665, -0.0001113352773245424, -0.0024201171472668648, -2.931730031967163, -0.001972754718735814, -0.0033458464313298464, -0.0001677133986959234, -0.0002022777043748647, -0.23238719999790192, -0.0580131970345974, -1.4547410011291504, -0.027146102860569954, -1.2914812564849854, -0.6341604590415955, -2.6519124507904053, -3.4881749153137207, -0.03900882974267006, -0.000821014866232872, -0.00020132421923335642, -0.2749588191509247, -0.008647258393466473, -1.552249550819397, -6.0794889577664435e-05, -1.7881233361549675e-05, -0.03059443272650242, -0.005405571311712265, -1.1446115970611572, -4.160317621426657e-05, -0.00045062878052704036, -1.2159273865108844e-05, -0.005581982899457216, -0.00043823651503771544, -0.0012519863666966558, -6.782778655178845e-05, -0.003398240776732564, -0.001341753639280796, -0.011492361314594746, -0.5759571194648743, -2.529672145843506, -0.22666536271572113, -0.24895603954792023, -0.0006660388899035752, -2.7811808586120605, -0.013507518917322159, -0.013126037083566189, -0.29936647415161133, -0.06548405438661575, -0.009228668175637722, -0.1990685611963272, -0.0019060078775510192, -0.009387754835188389, -0.0002233732520835474, -0.00010609064338495955, -3.158996332786046e-05, -7.152555099310121e-07, -2.372236667724792e-05, -0.017420144751667976, -0.19391243159770966, -0.02855147048830986, -0.018921123817563057, -0.0024915861431509256, -0.0001262346631847322, -0.006249409634619951, -0.00024256148026324809, -0.22411078214645386, -4.327203714638017e-05, -0.021927183493971825, -0.589838445186615, -0.0012279358925297856, -0.006146575324237347, -3.325883881188929e-05, -2.7179348762729205e-05, -0.00037245964631438255, -0.0028368488419800997, -0.007326165214180946, -0.00021669900161214173, 0.0, -0.004502397496253252, -0.42722535133361816, -0.015932515263557434, -4.2676016164477915e-05, -0.00018070495571009815, -0.11812746524810791, -0.0004899493651464581, -0.0015613758005201817, -0.43523675203323364, -0.0026222625747323036, -0.030818011611700058, -0.13697268068790436, -0.0181181188672781, -1.1430631875991821, -0.066717728972435, -0.00018285033002030104, -0.24735084176063538, -0.0054649715311825275, -0.0002698534226510674, -1.6784603595733643, -0.3985702395439148, -0.11659490317106247, -0.001091599464416504, -3.3378546504536644e-06, -1.311301275563892e-06, -5.769562994828448e-05, -0.0001102625101339072, -2.2053474822314456e-05, -0.012402198277413845, -0.0027183268684893847, -0.47228166460990906, -1.549708758830093e-05, -1.2993727978027891e-05, -2.543861150741577, -2.7228353023529053, -6.16293036728166e-05, -0.2204325944185257, -0.0022514727897942066, -0.30020737648010254, -0.018009239807724953, -0.0002157455455744639, -0.9027488231658936, -0.022493232041597366, -0.2865889370441437, -0.004603502340614796, -0.15847247838974, -0.08441998064517975, -0.0003277718205936253, -2.8013790142722428e-05, -0.026023706421256065, -0.0006349454633891582, -0.004255407024174929, -0.06731872260570526, -0.0016746795736253262, -0.28954556584358215, -0.21781599521636963, -0.22011888027191162, -0.0001429217227268964, -0.0037549480330199003, -0.38158077001571655, -0.043461598455905914, -0.5431566834449768, -1.079154372215271, -0.24223382771015167, -0.28146520256996155, -0.0027102427557110786, -0.0013902055798098445, -1.35397207736969, -0.0070941937156021595, -0.00046230596490204334, -6.329813186312094e-05, -0.017895428463816643, -0.01798137277364731, -0.042008690536022186, -0.04866738244891167, -8.546940807718784e-05, -0.0017240673769265413, -6.318072337307967e-06, 0.0, -0.0006854568491689861, -0.01176843885332346, -0.00444970466196537, -1.0345133543014526, -0.001437464845366776, -0.625851035118103, -0.004451603628695011, -1.7111059427261353], "finish_reason": "stop"}], "metrics": {"energy": 725.1088764162064, "energy_per_token": 3.4861003673856077, "time": 17.858837, "time_per_token": 0.08585979326923078}}
{"outputs": [{"text": "# Initialize variables to store the processed files.\n    files_info = {}\n\n    # Check if the given directory exists.\n    if not os.path.exists(directory):\n        raise ValueError(\"Directory does not exist.\")\n\n    # Traverse all files in the given directory and its subdirectories.\n    for current_dir, _, files in os.walk(directory):\n        for filename in files:\n            # Normalize the file name to ASCII.\n            ascii_filename = unicodedata.normalize(\"NFD\", filename).encode(\"ascii\", \"ignore\").decode()\n            ascii_filename = ascii_filename.replace(\" \", \"_\").replace(\".\", \"_\")\n\n            # Get the file path.\n            file_path = os.path.join(current_dir, filename)\n\n            # Calculate the file's size.\n            size = os.path.getsize(file_path)\n\n            # Calculate the file's MD5 hash.\n            with open(file_path, \"rb\") as file:", "tokens": ["#", " Initialize", " variables", " to", " store", " the", " processed", " files", ".", "\n", "    ", "files", "_", "info", " =", " {}", "\n", "\n", "    ", "#", " Check", " if", " the", " given", " directory", " exists", ".", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "directory", "):", "\n", "        ", "raise", " Value", "Error", "(", "\"", "Directory", " does", " not", " exist", ".", "\"", ")", "\n", "\n", "    ", "#", " Tra", "verse", " all", " files", " in", " the", " given", " directory", " and", " its", " sub", "direct", "ories", ".", "\n", "    ", "for", " current", "_", "dir", ",", " _", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " filename", " in", " files", ":", "\n", "            ", "#", " Normal", "ize", " the", " file", " name", " to", " ASC", "II", ".", "\n", "            ", "ascii", "_", "filename", " =", " un", "ic", "oded", "ata", ".", "normal", "ize", "(", "\"", "NF", "D", "\"", ",", " filename", ")", ".", "encode", "(", "\"", "ascii", "\"", ",", " \"", "ignore", "\"", ")", ".", "decode", "()", "\n", "            ", "ascii", "_", "filename", " =", " as", "ci", "i", "_", "filename", ".", "replace", "(", "\"", " \"", ",", " \"", "_", "\"", ")", ".", "replace", "(", "\"", ".", "\"", ",", " \"", "_", "\"", ")", "\n", "\n", "            ", "#", " Get", " the", " file", " path", ".", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "current", "_", "dir", ",", " filename", ")", "\n", "\n", "            ", "#", " Calculate", " the", " file", "'", "s", " size", ".", "\n", "            ", "size", " =", " os", ".", "path", ".", "get", "size", "(", "file", "_", "path", ")", "\n", "\n", "            ", "#", " Calculate", " the", " file", "'", "s", " MD", "5", " hash", ".", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " \"", "rb", "\"", ")", " as", " file", ":"], "logprobs": [-2.2895398139953613, -1.6378742456436157, -3.3968327045440674, -1.3441179990768433, -0.33246907591819763, -0.6596778035163879, -2.4370241165161133, -1.094865322113037, -2.6909584999084473, -0.01452808640897274, -0.0027358029037714005, -1.169081687927246, -1.0187324285507202, -0.4612677991390228, -0.024303950369358063, -0.11044862121343613, -0.046667758375406265, -0.569243311882019, -0.00024434918304905295, -0.03825736790895462, -2.9018263816833496, -0.16210779547691345, -0.09654033184051514, -1.9932854175567627, -0.17712938785552979, -0.2781992256641388, -0.3076304793357849, -0.050632644444704056, -0.00021550717065110803, -0.027676157653331757, -0.5263583660125732, -0.043397221714258194, -1.7404405298293568e-05, -0.0013738964917138219, -1.1205610462639015e-05, -0.4332469701766968, -0.00017033556650858372, -0.0021533414255827665, -0.010324639268219471, -0.0009773960337042809, -0.001572444918565452, -1.3443422317504883, -1.0137379169464111, -2.5748875486897305e-05, -0.10964077711105347, -0.6621858477592468, -0.7074876427650452, -0.4319068491458893, -0.0009278521756641567, -0.019739145413041115, -0.7336553931236267, -0.010162986814975739, -0.0011016021016985178, -0.0041479747742414474, -0.016123736277222633, -0.0003978414461016655, -0.02005782350897789, -3.1485249996185303, -0.0036879638209939003, -2.6603126525878906, -0.42162206768989563, -0.535720944404602, -0.01306155975908041, -1.418832778930664, -0.0033751921728253365, -1.442415475845337, -0.1266155242919922, -0.0032250082585960627, -0.07319426536560059, -2.253030106658116e-05, -0.09967046231031418, -0.0003203832311555743, -0.00036864637513644993, -0.02765551768243313, -3.11861515045166, -0.016437236219644547, -0.15042120218276978, -0.023776177316904068, -1.3785011768341064, -0.013037909753620625, -0.2571417987346649, -0.006528004538267851, -0.0003899767471011728, -4.768360213347478e-06, -2.6464111215318553e-05, -0.00012742661056108773, -0.016162563115358353, -0.004931548144668341, -0.0016925308154895902, -0.028909973800182343, -0.07872293889522552, -2.551750421524048, -0.0010324153117835522, -0.0006549597019329667, -4.100715523236431e-05, -0.0011270844843238592, -0.029924437403678894, -0.2784920632839203, -1.470941424369812, -0.0038523285184055567, -0.11952948570251465, -1.099498987197876, -0.24616868793964386, -0.19161318242549896, -0.051288459450006485, -0.0002809368306770921, -0.48672008514404297, -0.0032184727024286985, -0.00023314618738368154, -1.396888017654419, -0.0006319671520031989, -0.5581933856010437, -0.001033010776154697, -0.0829114243388176, -0.004052997566759586, -3.814689989667386e-06, -2.3841830625315197e-06, -0.00017534149810671806, -0.00017593742813915014, -1.9073468138230965e-06, -1.741370677947998, -0.18412816524505615, -0.0011251792311668396, -0.9856625199317932, -3.4570634852570947e-06, -5.364403477869928e-06, -0.02584993652999401, -0.019720444455742836, -0.013105211779475212, -0.0008815216715447605, -0.009688498452305794, -0.6224753260612488, -0.10661644488573074, -1.4305104514278355e-06, -8.34430247778073e-05, -0.0021635713055729866, -0.0010096696205437183, -1.5497195136049413e-06, -0.00035422726068645716, -0.029572894796729088, -0.0006437613046728075, -1.2952607870101929, -0.006641102023422718, -2.1757702827453613, -2.847658157348633, -5.400034933700226e-05, -0.061216846108436584, -0.037486858665943146, -1.1518261432647705, -1.0728830375228426e-06, -5.483612312673358e-06, -4.6491513785440475e-06, -3.3378044463461265e-05, -0.010118735022842884, -0.2131870985031128, -0.0935555249452591, -0.023028671741485596, -0.20579275488853455, -5.376194530981593e-05, -0.003002304583787918, -0.04679187759757042, -1.9907753085135482e-05, -0.00025412190007045865, -1.0052077770233154, -0.38016781210899353, -0.018677668645977974, -0.05256984755396843, -0.8826256394386292, -0.20883700251579285, -0.00014911970356479287, -0.003924407996237278, -0.06651441007852554, -0.004035425838083029, -0.0019418209558352828, -0.3749063014984131, -0.11597365885972977, -0.00019274283840786666, -0.03383997455239296, -1.8488211631774902, -0.044778011739254, -1.0686801671981812, -0.7666371464729309, -1.303491473197937, -0.00047398300375789404, -3.4450891689630225e-05, -0.05792814865708351, -0.16872727870941162, -0.0029696195852011442, -0.0004395472351461649, -0.09066108614206314, -1.311301275563892e-06, -5.602679812000133e-05, -2.264974000354414e-06, -0.007933770306408405, -2.074220174108632e-05, -0.007801302243024111, -7.152555099310121e-07, -3.576278118089249e-07, -0.0004768426588270813, -0.008776542730629444, -0.000542493537068367, -0.001049682730808854, -0.09296444803476334, -0.00016675988445058465, -0.03478889539837837, -0.5030908584594727, -0.08275044709444046, -1.1074450016021729, -0.24007785320281982, -5.495397272170521e-05, -1.7908968925476074, -1.1053521633148193, -0.0006338732782751322, -8.070142939686775e-05, -1.6987802982330322, -0.046617016196250916, -0.15669290721416473, -5.483612312673358e-06, -0.031510282307863235, -2.622600959512056e-06, -2.884823152271565e-05, -3.099436753473128e-06, -5.9602869441732764e-05, -0.0015462597366422415, -5.8412379075889476e-06, -3.576278118089249e-07, -0.00033444532891735435, -0.006265165749937296, -0.00654458487406373, -7.664863369427621e-05, -0.0026664913166314363, -0.10717573761940002, -0.008040323853492737, -0.10768184065818787, -0.0009246364934369922, -1.0967194612021558e-05, -0.051808591932058334, -0.00015662873920518905, -0.019877636805176735, -0.013749530538916588, -0.0005918181850574911, -0.00010430268594063818, -1.919835090637207, -0.0034938741009682417, -9.822363062994555e-05, -0.0015792291378602386, -1.5258672647178173e-05, -1.0728830375228426e-06, -0.000522357877343893, -0.20307202637195587, -0.0028754814993590117, -0.00022027450904715806, -0.00040344204171560705, -2.9802276912960224e-06, -0.7621314525604248, -0.023724956437945366], "finish_reason": "length"}], "metrics": {"energy": 913.0326485118873, "energy_per_token": 3.5665337832495596, "time": 21.834324, "time_per_token": 0.085290328125}}
{"outputs": [{"text": "info = {}\n    for filename in os.listdir(directory):\n        file_path = os.path.join(directory, filename)\n        file_name = _get_normalized_filename(file_path)\n        file_size = os.path.getsize(file_path)\n        md5_hash = _get_file_md5_hash(file_path)\n        info[file_name] = {'Size': file_size, 'MD5 Hash': md5_hash}\n    return info", "tokens": ["info", " =", " {}", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " filename", ")", "\n", "        ", "file", "_", "name", " =", " _", "get", "_", "normalized", "_", "filename", "(", "file", "_", "path", ")", "\n", "        ", "file", "_", "size", " =", " os", ".", "path", ".", "get", "size", "(", "file", "_", "path", ")", "\n", "        ", "md", "5", "_", "hash", " =", " _", "get", "_", "file", "_", "md", "5", "_", "hash", "(", "file", "_", "path", ")", "\n", "        ", "info", "[", "file", "_", "name", "]", " =", " {'", "Size", "':", " file", "_", "size", ",", " '", "MD", "5", " Hash", "':", " md", "5", "_", "hash", "}", "\n", "    ", "return", " info", "\n", "\n", "def"], "logprobs": [-1.0510468482971191, -0.01756657287478447, -0.09746405482292175, -0.02451649308204651, -0.21110717952251434, -0.2669380009174347, -1.7332452535629272, -0.006494250148534775, -0.061774540692567825, -2.9205850296420977e-05, -0.006583074573427439, -1.1920928244535389e-07, -0.0006470970110967755, -0.02109040878713131, -0.0012256737099960446, -0.009354805573821068, -0.018032537773251534, -1.1513867378234863, -0.48561549186706543, -0.0786038264632225, -0.0009919252479448915, -0.11133825778961182, -3.2186455882765586e-06, -0.0001716466504149139, -1.490105023549404e-05, -0.002504547592252493, -0.00014590153296012431, -0.0026653024833649397, -9.619726915843785e-05, -0.001929447171278298, -0.0008672290714457631, -0.002940618433058262, -0.11530879884958267, -2.582519292831421, -0.016475699841976166, -1.7931597232818604, -0.22470368444919586, -2.758514642715454, -2.9710845947265625, -0.0022050845436751842, -0.47211432456970215, -0.014496716670691967, -0.6732655763626099, -0.006482880096882582, -0.7201853394508362, -2.1576648578047752e-05, -6.556489552167477e-06, -0.017030542716383934, -0.010599741712212563, -0.12326379865407944, -0.7806134819984436, -0.0013587776338681579, -0.3080158531665802, -0.053498681634664536, -0.3492487668991089, -1.7881377516459906e-06, -0.059088025242090225, -5.006777428206988e-06, -3.611976353568025e-05, -8.702239938429557e-06, -0.0001481661747675389, -0.001610174193046987, -5.125986263010418e-06, -0.0001461399078834802, -0.00035720644518733025, -0.011893785558640957, -0.004970574285835028, -1.2762645483016968, -0.00282686366699636, -0.009854359552264214, -0.006373791955411434, -0.006725413724780083, -0.07034420222043991, -0.26746436953544617, -6.878139538457617e-05, -0.984947919845581, -0.0008064831490628421, -0.08444046229124069, -0.00020430385484360158, -0.15405142307281494, -0.0022741903085261583, -0.0002779574424494058, -0.000732868502382189, -2.9802276912960224e-06, -0.00024720950750634074, -0.0007254829397425056, -0.002026529749855399, -0.09321534633636475, -0.07185562700033188, -0.01688087172806263, -0.007886935956776142, -1.811964830267243e-05, -0.0009188005933538079, -0.0027694464661180973, -0.0001699779968475923, -0.349692702293396, -0.013814080506563187, -0.00318971648812294, -0.015472847037017345, -1.5497195136049413e-06, -0.00016175392374861985, -0.0016494491137564182, -0.014879085123538971, -0.0009857324184849858, -8.844937838148326e-05, -0.006543993018567562, -0.0002232540718978271, -0.0009782296838238835, -1.1920928244535389e-07, -5.2689116273541003e-05, -2.3841855067985307e-07, -0.005199955776333809, -0.0005161621957086027, -0.03086528740823269, -0.003918233327567577, -0.0016243371646851301, -0.003832378191873431, -0.0008917645900510252, -0.02020643651485443], "finish_reason": "stop"}], "metrics": {"energy": 427.5835478954314, "energy_per_token": 3.5931390579448017, "time": 10.096949, "time_per_token": 0.08484831092436976}}
{"outputs": [{"text": "def normalize(file_name):\n        # Remove special characters from file name\n        normalized_name = file_name.lower()\n        normalized_name = normalized_name.encode('ascii', 'ignore').decode('ascii')\n        normalized_name = ''.join(c for c in normalized_name if c.isalnum())\n        normalized_name = normalized_name.replace(' ', '_').strip('_')\n\n        # Ensure file name doesn't start with a number\n        if normalized_name[0].isdigit():\n            normalized_name = f'_{normalized_name}'\n        return normalized_name\n\n    def get_size(file_path):\n        \"\"\"Return size of file in bytes.\"\"\"\n        return os.path.getsize(file_path)\n\n    def get_hash(file_path):\n        \"\"\"Calculate md5 hash of file.\"\"\"\n        with open(file_path, 'rb') as file:\n            content = file.read()\n            return md5(content).hexdigest()\n\n    file_names = os.listdir", "tokens": ["def", " normalize", "(", "file", "_", "name", "):", "\n", "        ", "#", " Remove", " special", " characters", " from", " file", " name", "\n", "        ", "normalized", "_", "name", " =", " file", "_", "name", ".", "lower", "()", "\n", "        ", "normalized", "_", "name", " =", " normalized", "_", "name", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "('", "ascii", "')", "\n", "        ", "normalized", "_", "name", " =", " ''", ".", "join", "(", "c", " for", " c", " in", " normalized", "_", "name", " if", " c", ".", "isal", "num", "())", "\n", "        ", "normalized", "_", "name", " =", " normalized", "_", "name", ".", "replace", "('", " '", ",", " '_", "')", ".", "strip", "('", "_", "')", "\n", "\n", "        ", "#", " Ensure", " file", " name", " doesn", "'", "t", " start", " with", " a", " number", "\n", "        ", "if", " normalized", "_", "name", "[", "0", "]", ".", "is", "digit", "():", "\n", "            ", "normalized", "_", "name", " =", " f", "'_{", "normalized", "_", "name", "}'", "\n", "        ", "return", " normalized", "_", "name", "\n", "\n", "    ", "def", " get", "_", "size", "(", "file", "_", "path", "):", "\n", "        ", "\"", "\"", "\"", "Return", " size", " of", " file", " in", " bytes", ".", "\"", "\"", "\"", "\n", "        ", "return", " os", ".", "path", ".", "get", "size", "(", "file", "_", "path", ")", "\n", "\n", "    ", "def", " get", "_", "hash", "(", "file", "_", "path", "):", "\n", "        ", "\"", "\"", "\"", "Cal", "culate", " md", "5", " hash", " of", " file", ".", "\"", "\"", "\"", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " file", ":", "\n", "            ", "content", " =", " file", ".", "read", "()", "\n", "            ", "return", " md", "5", "(", "content", ")", ".", "hex", "dig", "est", "()", "\n", "\n", "    ", "file", "_", "names", " =", " os", ".", "list", "dir"], "logprobs": [-2.924858570098877, -0.7014469504356384, -0.7960282564163208, -1.852155327796936, -0.17893390357494354, -0.1087944358587265, -0.14961187541484833, -0.003510267473757267, -0.006365737412124872, -2.132202625274658, -1.7210019826889038, -3.149411201477051, -0.0518818236887455, -1.1881877183914185, -1.3771791458129883, -0.17912983894348145, -0.3013795018196106, -0.0010876698652282357, -1.8385834693908691, -0.26323920488357544, -0.5668584108352661, -0.001292227883823216, -1.959561824798584, -0.0008248264202848077, -0.0002451834443490952, -0.044117797166109085, -3.2501163482666016, -0.002622024854645133, -0.6393623352050781, -0.01915656588971615, -0.1344921737909317, -0.00026246439665555954, -0.0010078833438456059, -0.0015361425466835499, -2.385922431945801, -4.6132929128361866e-05, -0.000331704446580261, -0.0035154942888766527, -2.7448534965515137, -0.2291562855243683, -0.40252378582954407, -0.0018103414913639426, -4.053033626405522e-05, -0.4448668658733368, -0.0219286996871233, -0.0012694880133494735, -0.12362952530384064, -0.00264937081374228, -0.08848411589860916, -0.06982617825269699, -0.006522201467305422, -0.02069324254989624, -0.16649697721004486, -0.33514872193336487, -4.625213477993384e-05, -0.00028606137493625283, -0.0006551980040967464, -2.877120018005371, -0.0001267114421352744, -1.823885577323381e-05, -0.06025722250342369, -0.7515012621879578, -0.01787482015788555, -3.158996332786046e-05, -0.00020656836568377912, -0.7773581147193909, -1.9907753085135482e-05, -1.7523612768854946e-05, -0.00950596109032631, -0.2090614289045334, -0.03384562209248543, -0.03242079168558121, -8.821448318485636e-06, -0.4744887948036194, -0.011537495069205761, -0.4889363944530487, -1.7051846981048584, -0.00016866691294126213, -0.0049653551541268826, -0.04521768540143967, -0.3496665060520172, -1.1324817933200393e-05, -6.6756979322235566e-06, -0.052753739058971405, -0.3289043605327606, -0.1478877067565918, -0.20797882974147797, -0.00011514954530866817, -0.0644800066947937, -0.0001510267611593008, -3.056987762451172, -0.8678614497184753, -0.03960997983813286, -0.018775010481476784, -0.0061543951742351055, -0.07774446159601212, -1.0602630376815796, -0.0009887097403407097, -0.28650927543640137, -2.2693560123443604, -0.5799731612205505, -0.055213671177625656, -2.2400176525115967, -0.000553335587028414, -7.033323527139146e-06, -0.5320550799369812, -0.058277737349271774, -0.11360751837491989, -0.6280906200408936, -0.3208879232406616, -0.0001308832288486883, -0.14183835685253143, -0.017204446718096733, -5.602820692729438e-06, 0.0, -2.123910665512085, -0.00026425207033753395, -0.0018763808766379952, -0.00669794250279665, -0.00029762129997834563, -0.066295325756073, -0.003255189396440983, -0.00043478095903992653, -0.00039593485416844487, -0.011074741370975971, -3.4570634852570947e-06, -2.13382354559144e-05, -0.000446696620201692, -1.1669065952301025, -0.1574934720993042, -0.0012493670219555497, -2.634490556374658e-05, -2.622600959512056e-06, -0.0025914679281413555, -0.0007393010891973972, -1.9300804138183594, -0.032617077231407166, -0.004587008152157068, -5.8412379075889476e-06, -1.07287787614041e-05, -0.011439446359872818, -0.012562076561152935, -0.0005365362740121782, -0.8213931322097778, -0.6214231848716736, -0.0039823525585234165, -2.386335611343384, -0.12410862743854523, -0.2589583098888397, -0.13924504816532135, -0.13113825023174286, -0.018701303750276566, -0.0008538890979252756, -0.001073975581675768, -3.1856234073638916, -0.02539283037185669, -3.9457496313843876e-05, -3.014112949371338, -2.059201717376709, -0.32093775272369385, -0.48259884119033813, -0.35909464955329895, -0.05006348341703415, -0.9720890522003174, -0.0366586372256279, -0.00015984688070602715, -1.5139465176616795e-05, -0.00018189683032687753, -0.0024022788275033236, -0.24768245220184326, -0.08782113343477249, -2.1815061700181104e-05, -0.1585489809513092, -1.8000440832111053e-05, -7.652943895664066e-05, -1.1920858014491387e-05, -0.00021765247220173478, -0.026557376608252525, -4.95898348162882e-05, -3.099436753473128e-06, -0.000433112756581977, -0.010012992657721043, -0.0032858450431376696, -6.913899414939806e-05, -0.08479120582342148, -0.14622855186462402, -0.00021705655672121793, -2.0632424354553223, -0.009630647487938404, -0.00803157314658165, -0.0020503229461610317, -0.01181403174996376, -0.011389710940420628, -0.0001517419150331989, -0.00038342276820912957, -0.06144130602478981, -0.0019125519320368767, -8.4638240878121e-06, -1.740208625793457, -0.09612991660833359, -2.4388556480407715, -0.00012027494085486978, -0.057298287749290466, -0.15681560337543488, -0.11515496671199799, -0.34475481510162354, -0.015232308767735958, -8.702239938429557e-06, -4.6491513785440475e-06, -1.4066597032069694e-05, -0.0008515069494023919, -1.410106897354126, -0.0016264794394373894, -0.00033158526639454067, -0.001893633627332747, -8.821448318485636e-06, -1.0728830375228426e-06, -0.001082192175090313, -0.14742891490459442, -0.003965610638260841, -0.0012051946250721812, -0.00017963226127903908, -1.161445140838623, -0.07758817076683044, -0.0009290431626141071, -0.0006386386230587959, -2.1738624572753906, -0.008160700090229511, -0.0007778956205584109, -4.5060096454108134e-05, -2.861018856492592e-06, -0.0015337619697675109, -0.004140139557421207, -0.23618696630001068, -0.34138381481170654, -0.009877612814307213, -8.344646857949556e-07, -0.00017438798386137933, -0.005296010058373213, -0.0011817384511232376, -0.002765285549685359, -0.002087796339765191, -1.5258672647178173e-05, 0.0, -0.00010108436981681734, -0.0198319423943758, -0.008863982744514942, -0.00041940953815355897, -2.1673755645751953, -0.009057624265551567, -2.6978001594543457, -0.007956122979521751, -1.188323974609375, -6.6756979322235566e-06, -0.006627483759075403, -2.3841855067985307e-07], "finish_reason": "length"}], "metrics": {"energy": 921.8903288211833, "energy_per_token": 3.601134096957747, "time": 21.833515, "time_per_token": 0.08528716796875}}
{"outputs": [{"text": "result = {}\n\n    for file in os.listdir(directory):\n        file_path = os.path.join(directory, file)\n        if os.path.isfile(file_path):\n            file_size = os.path.getsize(file_path)\n            md5_hash = md5_file(file_path)\n            normalized_file = normalize_ascii(file)\n\n            result[normalized_file] = {\n                'Size': file_size,\n                'MD5 Hash': md5_hash\n            }\n\n    return result", "tokens": ["result", " =", " {}", "\n", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " file", ")", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "            ", "file", "_", "size", " =", " os", ".", "path", ".", "get", "size", "(", "file", "_", "path", ")", "\n", "            ", "md", "5", "_", "hash", " =", " md", "5", "_", "file", "(", "file", "_", "path", ")", "\n", "            ", "normalized", "_", "file", " =", " normalize", "_", "ascii", "(", "file", ")", "\n", "\n", "            ", "result", "[", "normalized", "_", "file", "]", " =", " {", "\n", "                ", "'", "Size", "':", " file", "_", "size", ",", "\n", "                ", "'", "MD", "5", " Hash", "':", " md", "5", "_", "hash", "\n", "            ", "}", "\n", "\n", "    ", "return", " result", "\n", "\n", "def"], "logprobs": [-3.3112988471984863, -0.07484076917171478, -0.14477932453155518, -0.012518871575593948, -1.7030494213104248, -0.00040618274942971766, -0.4399455487728119, -0.9997333884239197, -0.28973859548568726, -0.1300167590379715, -4.7444173105759546e-05, -0.05820418521761894, -5.960462772236497e-07, -0.0003361137059982866, -0.022501857951283455, -0.0018975600833073258, -0.007634864654392004, -0.07324523478746414, -1.1089954376220703, -0.1971123367547989, -0.12697140872478485, -0.001708239782601595, -0.18927152454853058, -4.172316494077677e-06, -0.0001532914029667154, -1.4305012882687151e-05, -0.004469168372452259, -0.0001821352052502334, -0.004863693844527006, -0.00011288482346571982, -0.002423090161755681, -0.0006899837171658874, -0.002714522648602724, -0.6442276835441589, -0.45947158336639404, -0.21489658951759338, -5.245195097813848e-06, -0.0006816447712481022, -1.9073468138230965e-06, -0.0027843061834573746, -0.03343181684613228, -0.00016032364510465413, -0.00020787939138244838, -0.0008183944155462086, -2.861018856492592e-06, -0.03457863628864288, -0.003598050447180867, -0.022640783339738846, -1.5376676321029663, -0.020845729857683182, -1.0058796405792236, -0.019022535532712936, -0.04637019708752632, -1.0847986231965479e-05, -0.06427042931318283, -5.006777428206988e-06, -1.1324817933200393e-05, -3.4570634852570947e-06, -0.0001323135511483997, -0.0007722970913164318, -0.003617767943069339, -2.264974000354414e-06, -0.0002015625941567123, -0.013062618672847748, -0.15758685767650604, -1.5303699970245361, -0.006005338858813047, -0.009295400232076645, -0.010267533361911774, -0.0078166788443923, -0.4797326624393463, -0.0003252692404203117, -1.2076432704925537, -0.6585112810134888, -0.656684398651123, -0.004256000276654959, -0.0030430699698626995, -8.666139910928905e-05, -0.005354823544621468, -0.01261057611554861, -0.1920698583126068, -0.41596144437789917, -0.01752592623233795, -0.46121495962142944, -0.8333568572998047, -0.2633228600025177, -0.0748719647526741, -3.259024143218994, -0.09332534670829773, -0.015618503093719482, -0.026533927768468857, -0.0036396230570971966, -1.5879374742507935, -0.00039426659350283444, -0.13020934164524078, -0.015306741930544376, -0.002466614358127117, -1.5497195136049413e-06, -9.536738616588991e-07, -0.004770445637404919, -0.0003177614707965404, -0.6923081874847412, -0.00647518178448081, -0.0020776845049113035, -0.26331615447998047, -0.019291747361421585, -0.004574548453092575, -0.02420877292752266, -4.887569048150908e-06, -2.4199192921514623e-05, -0.0030057511758059263, -0.011191570200026035, -0.00011562632425921038, -0.0018285474507138133, -0.002544263144955039, -8.904537389753386e-05, -0.00561695359647274, -0.00028951745480298996, -0.0020061859395354986, -3.2186455882765586e-06, -5.674201020156033e-05, -1.07287787614041e-05, -0.2337569296360016, -0.00773127656430006, -5.125986263010418e-06, -6.222531374078244e-05, -0.08610444515943527, -0.003615511115640402, -0.0060318815521895885, -0.0022046088706701994, -0.0020239122677594423, -0.0012266262201592326, -0.03741118684411049], "finish_reason": "stop"}], "metrics": {"energy": 474.214286457062, "energy_per_token": 3.565520950804977, "time": 11.3698015, "time_per_token": 0.08548722932330827}}
{"outputs": [{"text": "info = {}\n\n    # Normalize file paths and calculate MD5 hash and file size for each file\n    for filepath in os.listdir(directory):\n        filename = os.path.basename(filepath)\n        normalized_filename = unicodedata.normalize('NFKC', filename)\n        file_path = os.path.join(directory, filename)\n\n        if os.path.isfile(file_path):\n            with open(file_path, 'rb') as f:\n                data = f.read()\n                md5_hash = md5(data).hexdigest()\n                file_size = os.path.getsize(file_path)\n                info[normalized_filename] = {'Size': file_size, 'MD5 Hash': md5_hash}\n\n    return info", "tokens": ["info", " =", " {}", "\n", "\n", "    ", "#", " Normal", "ize", " file", " paths", " and", " calculate", " MD", "5", " hash", " and", " file", " size", " for", " each", " file", "\n", "    ", "for", " file", "path", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "filename", " =", " os", ".", "path", ".", "bas", "ename", "(", "file", "path", ")", "\n", "        ", "normalized", "_", "filename", " =", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "K", "C", "'", ",", " filename", ")", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " filename", ")", "\n", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "data", " =", " f", ".", "read", "()", "\n", "                ", "md", "5", "_", "hash", " =", " md", "5", "(", "data", ")", ".", "hex", "dig", "est", "()", "\n", "                ", "file", "_", "size", " =", " os", ".", "path", ".", "get", "size", "(", "file", "_", "path", ")", "\n", "                ", "info", "[", "normalized", "_", "filename", "]", " =", " {'", "Size", "':", " file", "_", "size", ",", " '", "MD", "5", " Hash", "':", " md", "5", "_", "hash", "}", "\n", "\n", "    ", "return", " info", "\n", "\n", "def"], "logprobs": [-1.0510468482971191, -0.01756657287478447, -0.09746405482292175, -0.02451649308204651, -1.6605852842330933, -0.0006343498243950307, -2.060391902923584, -2.78448224067688, -0.19564644992351532, -2.4739439487457275, -3.0105247497558594, -1.8031582832336426, -1.171156644821167, -0.9283283948898315, -0.00028046013903804123, -1.003476858139038, -0.2923237979412079, -1.3141142129898071, -0.03014758788049221, -1.0356265306472778, -0.016571497544646263, -0.04259330406785011, -0.29491573572158813, -0.002451630774885416, -0.05997411534190178, -0.632612943649292, -1.9821271896362305, -0.030000561848282814, -1.435548186302185, -7.617183291586116e-05, -0.1428186446428299, 0.0, -0.0003766304289456457, -0.01709781214594841, -0.0016369527438655496, -0.002242433140054345, -0.05968913435935974, -2.5732102394104004, -0.08671588450670242, -0.6448469161987305, -0.000176652567461133, -0.003981758840382099, -5.578839045483619e-05, -0.34889644384384155, -3.576278118089249e-07, -2.8371408916427754e-05, -0.01000957004725933, -1.2993727978027891e-05, -0.002188432030379772, -0.05991797894239426, -0.17905768752098083, -0.9368886947631836, -0.10332140326499939, -0.17741045355796814, -0.004128267522901297, -0.20286135375499725, -0.004598281346261501, -3.2186455882765586e-06, -3.933898824470816e-06, -9.119095193454996e-05, -0.00010215714428341016, -5.185469490243122e-05, -0.09545194357633591, -0.01294118445366621, -2.015048027038574, -1.6212332411669195e-05, -1.4305012882687151e-05, -3.707340147229843e-05, -0.008009695447981358, -0.026608915999531746, -0.1512611359357834, -0.33234477043151855, -1.7950462102890015, -0.6112594604492188, -0.4984963536262512, -0.10742288082838058, -0.41524121165275574, -1.3351351299206726e-05, -0.0002965487365145236, -1.4066597032069694e-05, -0.015012850053608418, -0.0009321396937593818, -0.02341838926076889, -0.00016699827392585576, -1.2018623352050781, -0.0006079017766751349, -0.004284844733774662, -1.3371405601501465, -0.0008877150830812752, -1.8508796691894531, -0.12091708183288574, -8.22540732769994e-06, -0.0011150578502565622, -2.622600959512056e-06, -0.034271348267793655, -0.04744783043861389, -0.0002470903273206204, -0.0032433071173727512, -0.004200564697384834, -3.933898824470816e-06, -0.03962189704179764, -0.0028267446905374527, -0.007012635935097933, -0.7261335253715515, -0.001780949649401009, -0.00011812942830147222, -0.0030702855437994003, -0.00368131254799664, -1.6689286894688848e-06, -0.001128156203776598, -0.1387891173362732, -0.008564173243939877, -0.0014512732159346342, -0.000518664310220629, -0.6275867819786072, -0.03543872758746147, -0.002033072989434004, -0.0014096095692366362, -1.9877108335494995, -0.004931904375553131, -0.003677749540656805, -1.6927575416048057e-05, -2.861018856492592e-06, -0.0006361367995850742, -0.005694239400327206, -0.13449499011039734, -0.3488205075263977, -0.002102547325193882, -0.1017262265086174, -0.016037514433264732, -0.003660883754491806, -0.0031867455691099167, -2.3841830625315197e-06, -0.0007895689341239631, -0.0009392855572514236, -0.0004574206250254065, -0.005005566403269768, -0.004530759993940592, -2.276871418871451e-05, -1.1920928244535389e-07, -4.136476854910143e-05, -0.018055368214845657, -0.22743511199951172, -0.8625229597091675, -0.0013768726494163275, -0.02803010679781437, -0.015674130991101265, -0.18105140328407288, -5.722029527532868e-06, -0.1478721797466278, -9.298280929215252e-06, -9.417489309271332e-06, -2.145764938177308e-06, -0.00011646069469861686, -0.005932105705142021, -0.002567211864516139, -3.814689989667386e-06, -0.00021360022947192192, -0.00602927478030324, -0.8508852124214172, -0.029096413403749466, -0.012069645337760448, -0.008339699357748032, -3.576278118089249e-07, -1.1920928244535389e-07, -0.005611974745988846, -0.00028200942324474454, -0.2379501909017563, -0.20933984220027924, -0.0030903699807822704, -0.013925299048423767, -4.410734163684538e-06, -6.437280717364047e-06, -0.001513408264145255, -0.02599722519516945, -0.001690864795818925, -6.615896563744172e-05, -0.008962048217654228, -0.0002094287920044735, -0.0009691785671748221, -4.768370445162873e-07, -0.00015662873920518905, -2.9802276912960224e-06, -0.00299089471809566, -0.00042798896902240813, -0.09750989824533463, -0.00974363088607788, -0.07401581108570099, -0.0010268182959407568, -0.2982988655567169, -0.008109737187623978, -1.1666529178619385], "finish_reason": "stop"}], "metrics": {"energy": 650.9939762382509, "energy_per_token": 3.39059362624089, "time": 16.18741, "time_per_token": 0.08430942708333333}}
{"outputs": [{"text": "# Normalize filenames to ASCII\n    ascii_filenames = {filename: normalize_ascii(filename) for filename in os.listdir(directory)}\n\n    info = {}\n    for filename, ascii_filename in ascii_filenames.items():\n        file_path = os.path.join(directory, filename)\n        if os.path.isfile(file_path):\n            with open(file_path, 'rb') as file:\n                content = file.read()\n                md5_hash = md5(content).hexdigest()\n            size = os.path.getsize(file_path)\n            info[ascii_filename] = {'Size': size, 'MD5 Hash': md5_hash}\n\n    return info", "tokens": ["#", " Normal", "ize", " fil", "en", "ames", " to", " ASC", "II", "\n", "    ", "ascii", "_", "fil", "en", "ames", " =", " {", "filename", ":", " normalize", "_", "ascii", "(", "filename", ")", " for", " filename", " in", " os", ".", "list", "dir", "(", "directory", ")}", "\n", "\n", "    ", "info", " =", " {}", "\n", "    ", "for", " filename", ",", " as", "ci", "i", "_", "filename", " in", " as", "ci", "i", "_", "fil", "en", "ames", ".", "items", "():", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " filename", ")", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " file", ":", "\n", "                ", "content", " =", " file", ".", "read", "()", "\n", "                ", "md", "5", "_", "hash", " =", " md", "5", "(", "content", ")", ".", "hex", "dig", "est", "()", "\n", "            ", "size", " =", " os", ".", "path", ".", "get", "size", "(", "file", "_", "path", ")", "\n", "            ", "info", "[", "ascii", "_", "filename", "]", " =", " {'", "Size", "':", " size", ",", " '", "MD", "5", " Hash", "':", " md", "5", "_", "hash", "}", "\n", "\n", "    ", "return", " info", "\n", "\n", "def"], "logprobs": [-2.2895398139953613, -3.6399035453796387, -0.20926518738269806, -0.7766156196594238, -0.0003321811091154814, -9.679325739853084e-05, -0.15105319023132324, -0.05041243135929108, -0.00015877417172305286, -0.2082148641347885, -0.013920243829488754, -3.2479023933410645, -0.0041281492449343204, -0.8038756251335144, -0.00022623363474849612, -3.8742269680369645e-05, -0.008173706009984016, -0.8932911157608032, -1.9210695028305054, -0.20265063643455505, -2.0768661499023438, -0.19135291874408722, -1.7104601860046387, -0.13382168114185333, -0.011751944199204445, -0.009146220982074738, -0.22884540259838104, -0.0018989879172295332, -0.020936790853738785, -0.2796081602573395, -0.00010692501382436603, -0.0016822961624711752, -7.152555099310121e-07, -0.0013098479248583317, -0.004018566105514765, -0.0260597113519907, -0.0004568248405121267, -0.2367575317621231, -0.00017641419253777713, -3.0860228538513184, -0.01725471392273903, -0.04499240219593048, -0.022532396018505096, -0.1664065569639206, -0.0959467962384224, -0.104342520236969, -0.1985476315021515, -0.18507273495197296, -7.378782902378589e-05, -0.0010680215200409293, -0.002252305392175913, -0.082245834171772, -0.00015484087634831667, -0.0005349873681552708, -1.1920928244535389e-07, 0.0, -2.3841855067985307e-07, -1.1920922133867862e-06, 0.0, -3.576278118089249e-07, -0.0004651656490750611, -0.0002172949316445738, -2.8013790142722428e-05, -0.001141492510214448, -0.008148876018822193, -1.0359690189361572, -0.4484812021255493, -0.028577188029885292, -0.0003071551618631929, -0.07086029648780823, -4.529942543740617e-06, -8.666139910928905e-05, -1.7165990357170813e-05, -0.0014434166951104999, -0.000144709600135684, -0.0008181562297977507, -3.099393507000059e-05, -0.004926566034555435, -0.00044276448898017406, -0.002123245969414711, -0.6493746042251587, -0.7073004245758057, -0.16817578673362732, -1.966933996300213e-05, -0.0013169910525903106, -1.7881377516459906e-06, -0.012299170717597008, -0.04987059161067009, -9.762764238985255e-05, -0.0013463966315612197, -1.3947389561508317e-05, -3.576278118089249e-07, -0.03346778452396393, -0.007856066338717937, -0.006511068437248468, -1.4074296951293945, -0.0008036244544200599, -0.0001282609737245366, -0.0014486543368548155, -4.029192859889008e-05, -5.960462772236497e-07, -0.0020019030198454857, -0.14291299879550934, -0.00913972407579422, -0.0009947833605110645, -4.136476854910143e-05, -0.6552208662033081, -0.01079693902283907, -0.001968947472050786, -0.00200130813755095, -1.8696980476379395, -0.007991483435034752, -0.00030632095877081156, -3.313963316031732e-05, -1.9073468138230965e-06, -6.329813186312094e-05, -0.007332200650125742, -0.37326937913894653, -0.9064740538597107, -0.0012023370945826173, -0.023008285090327263, -0.005887428764253855, -0.0010461101774126291, -0.015171254985034466, -6.318072337307967e-06, -0.0012336509535089135, -0.00013243274588603526, -0.0001932195882545784, -0.002542598405852914, -0.0027037039399147034, -9.894321920000948e-06, 0.0, -1.3947389561508317e-05, -0.10409515351057053, -2.4108505249023438, -0.9810265302658081, -0.016667520627379417, -0.0121683394536376, -2.264974000354414e-06, -0.051383357495069504, -2.3841830625315197e-06, -3.099436753473128e-06, -1.6689286894688848e-06, -5.2569914259947836e-05, -0.0012318650260567665, -0.00034374051028862596, 0.0, -6.270212179515511e-05, -0.008373628370463848, -0.05779235437512398, -0.032829247415065765, -0.011206776835024357, -0.006215883418917656, -1.1920928244535389e-07, -0.00013636612857226282, -0.007028024643659592, -7.652943895664066e-05, -0.2099917232990265, -0.051219601184129715, -0.002439501229673624, -0.011254871264100075, -0.0009652484441176057, -0.006617773324251175, -0.0007147617870941758, -3.218599158572033e-05, -0.006636365316808224, -9.63164638960734e-05, -0.000714404450263828, -1.1920928244535389e-07, -0.0001209901092806831, -1.6689286894688848e-06, -0.0036574392579495907, -0.000439428084064275, -0.5404809713363647, -0.0032007675617933273, -0.025591081008315086, -0.0012722263345494866, -0.010090883821249008, -0.0012843701988458633, -0.04976341500878334], "finish_reason": "stop"}], "metrics": {"energy": 624.3537320976259, "energy_per_token": 3.4686318449868105, "time": 15.140627, "time_per_token": 0.08411459444444444}}
{"outputs": [{"text": "info = {}\n    for file in os.listdir(directory):\n        filepath = os.path.join(directory, file)\n        with open(filepath, 'rb') as f:\n            data = f.read()\n            md5_hash = md5(data).hexdigest()\n            size = pathlib.Path(filepath).stat().st_size\n            info[ascii_filename(file)] = {'MD5 Hash': md5_hash, 'Size': size}\n    return info", "tokens": ["info", " =", " {}", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " file", ")", "\n", "        ", "with", " open", "(", "file", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "            ", "data", " =", " f", ".", "read", "()", "\n", "            ", "md", "5", "_", "hash", " =", " md", "5", "(", "data", ")", ".", "hex", "dig", "est", "()", "\n", "            ", "size", " =", " path", "lib", ".", "Path", "(", "file", "path", ")", ".", "stat", "()", ".", "st", "_", "size", "\n", "            ", "info", "[", "ascii", "_", "filename", "(", "file", ")]", " =", " {'", "MD", "5", " Hash", "':", " md", "5", "_", "hash", ",", " '", "Size", "':", " size", "}", "\n", "    ", "return", " info", "\n", "\n", "def"], "logprobs": [-1.0510468482971191, -0.01756657287478447, -0.09746405482292175, -0.02451649308204651, -0.21110717952251434, -0.2669380009174347, -0.8736041784286499, -0.21415051817893982, -0.1913062483072281, -3.7431014789035544e-05, -0.051884088665246964, -3.576278118089249e-07, -0.0004020121123176068, -0.018032537773251534, -0.001718117156997323, -0.005869533866643906, -0.016809485852718353, -1.1837561130523682, -2.179832696914673, -0.004161270800977945, -0.2792452275753021, -6.6756979322235566e-06, -0.0005594118847511709, -1.2278481335670222e-05, -0.015398778021335602, -0.00041500062798149884, -0.00853698793798685, -0.00017307691450696439, -0.009918099269270897, -0.0009527434594929218, -0.00432318402454257, -0.09564187377691269, -2.3778250217437744, -0.005645047407597303, -0.0001674750237725675, -0.001860198681242764, -0.0022904847282916307, -0.021693792194128036, -0.31673434376716614, -0.08310023695230484, -0.00635626120492816, -0.0001668790791882202, -0.1953534036874771, -0.09735222905874252, -0.0061007230542600155, -0.0033169749658554792, -1.9005554914474487, -0.005968960002064705, -0.012693562544882298, -0.0001760566228767857, -1.2040065485052764e-05, -0.0011460172245278955, -0.007606116589158773, -0.20270046591758728, -1.404013752937317, -0.0113455131649971, -0.2421489655971527, -0.04989520087838173, -0.001474246964789927, -0.005148011725395918, -5.125986263010418e-06, -0.0012437711702659726, -0.002163333585485816, -0.0007775382255204022, -0.017437482252717018, -0.007912718690931797, -2.47952248173533e-05, -0.0010126468259841204, -0.00023719835735391825, -0.016210652887821198, -0.4059616029262543, -0.6581017971038818, -0.018909074366092682, -1.6097813844680786, -0.00016127715934999287, -6.437280717364047e-06, -0.002630228642374277, -0.0018922057934105396, -0.006149656139314175, -0.018117768689990044, -8.368142152903602e-05, -0.0006179092451930046, -0.0023292573168873787, -6.83045873302035e-05, -4.95898348162882e-05, -3.886147169396281e-05, -5.245195097813848e-06, -6.794906312279636e-06, -0.005348776467144489, -0.3443780839443207, -1.196174144744873, -0.017508940771222115, -2.969783067703247, -0.017179137095808983, -0.6942777037620544, -0.011601598933339119, -0.011001642793416977, -0.04085010662674904, -0.001166735659353435, -0.36721980571746826, -2.2893030643463135, -0.000491855782456696, -0.026824915781617165, -0.004415168426930904, -0.008618658408522606, -1.9073468138230965e-06, -0.00014399446081370115, -1.8715683836489916e-05, -0.0020919598173350096, -0.04752194881439209, -0.003009435487911105, -0.007942048832774162, -0.007316343020647764, -0.0037638552021235228, -0.0012178155593574047, -0.028437230736017227, -0.005661523900926113, -0.0027947674971073866, -0.002657574601471424, -0.002009160118177533, -0.04773154854774475], "finish_reason": "stop"}], "metrics": {"energy": 417.1865239448547, "energy_per_token": 3.447822511940948, "time": 10.300547, "time_per_token": 0.08512848760330578}}
{"outputs": [{"text": "# Create an empty dictionary to hold the file info\n    info = {}\n\n    # Iterate through the directory and its subdirectories\n    for dirpath, dirnames, filenames in os.walk(directory):\n        # Iterate through the files in the current directory\n        for filename in filenames:\n            # Get the full path of the file\n            filepath = os.path.join(dirpath, filename)\n\n            # Normalize the filename to ASCII\n            ascii_filename = unicodedata.normalize('NFD', filepath).encode('ascii', 'ignore').decode('ascii')\n\n            # Calculate the MD5 hash and size of the file\n            md5_hash = calculate_md5_hash(filepath)\n            size = calculate_file_size(filepath)\n\n            # Add the file info to the dictionary\n            info[ascii_filename] = {'MD5 Hash': md5_hash, 'Size': size}\n\n    # Return the dictionary of file info\n    return info", "tokens": ["#", " Create", " an", " empty", " dictionary", " to", " hold", " the", " file", " info", "\n", "    ", "info", " =", " {}", "\n", "\n", "    ", "#", " Iter", "ate", " through", " the", " directory", " and", " its", " sub", "direct", "ories", "\n", "    ", "for", " dir", "path", ",", " dir", "names", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "#", " Iter", "ate", " through", " the", " files", " in", " the", " current", " directory", "\n", "        ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "            ", "#", " Get", " the", " full", " path", " of", " the", " file", "\n", "            ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "dir", "path", ",", " filename", ")", "\n", "\n", "            ", "#", " Normal", "ize", " the", " filename", " to", " ASC", "II", "\n", "            ", "ascii", "_", "filename", " =", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "D", "'", ",", " file", "path", ")", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "('", "ascii", "')", "\n", "\n", "            ", "#", " Calculate", " the", " MD", "5", " hash", " and", " size", " of", " the", " file", "\n", "            ", "md", "5", "_", "hash", " =", " calculate", "_", "md", "5", "_", "hash", "(", "file", "path", ")", "\n", "            ", "size", " =", " calculate", "_", "file", "_", "size", "(", "file", "path", ")", "\n", "\n", "            ", "#", " Add", " the", " file", " info", " to", " the", " dictionary", "\n", "            ", "info", "[", "ascii", "_", "filename", "]", " =", " {'", "MD", "5", " Hash", "':", " md", "5", "_", "hash", ",", " '", "Size", "':", " size", "}", "\n", "\n", "    ", "#", " Return", " the", " dictionary", " of", " file", " info", "\n", "    ", "return", " info", "\n", "\n", "def"], "logprobs": [-2.2895398139953613, -2.2586798667907715, -1.0997765064239502, -0.015551253221929073, -0.033155657351017, -0.14351369440555573, -2.012040853500366, -0.21548865735530853, -0.5743299722671509, -1.3356773853302002, -0.10771587491035461, -0.0007556205382570624, -0.6703735589981079, -0.019255381077528, -0.06673623621463776, -0.005065108649432659, -0.29309096932411194, -0.0002965487365145236, -0.02655876986682415, -1.2273441553115845, -0.001327467616647482, -0.967278778553009, -1.2927535772323608, -1.1906787157058716, -0.5852447152137756, -0.4865760803222656, -0.010411825962364674, -0.04630168154835701, -7.819823804311454e-05, -0.14242586493492126, -0.000163541772053577, -0.026867970824241638, -1.5436012744903564, -0.06154073774814606, -0.0004368066438473761, -0.275307297706604, -0.0008553183870390058, -2.682172998902388e-05, -0.006359459366649389, -1.0728830375228426e-06, -2.5629668016335927e-05, -0.00033182359766215086, -0.0014171091606840491, -1.168244216387393e-05, -1.2040065485052764e-05, -0.0005452338373288512, -0.00436377665027976, -0.012254894711077213, -0.0009585791267454624, -0.06681975722312927, -0.5231478214263916, -0.7061272859573364, -0.00015066919149830937, -0.02931002341210842, -0.40722888708114624, -0.22969163954257965, -0.16541023552417755, -0.10535251349210739, -0.2490633726119995, -0.015035397373139858, -0.008718520402908325, -0.00021002470748499036, -0.0019402741454541683, -0.20497362315654755, -0.00018463814922142774, -0.0004183370911050588, -0.0003219324571546167, -1.1920928244535389e-07, -0.00022027450904715806, -8.821098163025454e-05, -0.005530769936740398, -0.05264800041913986, -1.0558334589004517, -0.008075918070971966, -0.2818143963813782, -0.1648268848657608, -0.3251864016056061, -0.0030669579282402992, -0.045912470668554306, -0.024586865678429604, -8.391981828026474e-05, -0.34146296977996826, -0.29804521799087524, -0.00012718822108581662, -0.022766640409827232, -8.344646857949556e-07, -3.182837463100441e-05, -1.6689286894688848e-06, -0.002634627977386117, -1.9907753085135482e-05, -0.001747867907397449, -8.34461570775602e-06, -0.00011312322021694854, -8.034383063204587e-05, -7.450303382938728e-05, -0.00024923557066358626, -0.1687777191400528, -0.00026663561584427953, -0.023380659520626068, -0.822465181350708, -0.0006637753685936332, -0.01139030046761036, -0.5922547578811646, -0.04949910566210747, -0.022921839728951454, -9.107174992095679e-05, -0.1930866539478302, -0.0001515035255579278, -1.1896605491638184, -0.0015156697481870651, -0.13734111189842224, -0.0004469349514693022, -0.04742918536067009, -0.0030724245589226484, -4.172316494077677e-06, -7.510157047363464e-06, -0.00010787858627736568, -0.00021681819634977728, -5.2689116273541003e-05, -0.045287638902664185, -0.00042775063775479794, -1.0378496646881104, -4.458328112377785e-05, -7.152531907195225e-06, -1.9598429203033447, -1.728519782773219e-05, -0.0254366435110569, -0.008434388786554337, -0.00034564718953333795, -0.2791407108306885, -0.046523142606019974, -0.00038413776201196015, -3.933898824470816e-06, -0.0024171441327780485, -0.001213648240081966, -0.0016532575245946646, -0.04342929646372795, -0.00041738382424227893, -0.24206268787384033, -0.9337689876556396, -0.0004987664869986475, -0.0039800964295864105, -0.02802952751517296, -0.0001333863037871197, -0.002596104983240366, -0.4300294816493988, -0.010728184133768082, -0.25847116112709045, -6.8662193370983e-05, -0.007189592812210321, -2.2490737438201904, -0.5360420942306519, -0.03056182898581028, -0.0005432083853520453, -0.0007297713309526443, -0.009125666692852974, -0.00035744477645494044, -0.610821008682251, -0.0015892268856987357, -0.03189047425985336, -0.004544525872915983, -0.010143044404685497, -3.023669481277466, -0.0013999671209603548, -0.11374062299728394, -9.48860906646587e-05, -0.7277078032493591, -0.007406751159578562, -0.002177488524466753, -0.0029762755148112774, -5.018585216021165e-05, -0.002861217362806201, -0.002834590384736657, -0.009021946229040623, -0.33232587575912476, -0.028921902179718018, -1.0015254020690918, -4.0531076592742465e-06, -0.026644784957170486, -1.537788011773955e-05, -0.00020251607929822057, -0.0030999958980828524, -0.0007017772295512259, -1.9073468138230965e-06, -0.0010150285670533776, -0.0007989790174178779, -0.00509511586278677, -0.00021240839851088822, -0.002228278899565339, -0.24057383835315704, -0.01059183944016695, -0.10202359408140182, -0.12663348019123077, -0.0019587157294154167, -0.0010184821439906955, -0.045955054461956024, -0.027578404173254967, -0.00013207517622504383, -0.02686472237110138, -0.007252319250255823, -0.022056162357330322, -7.152555099310121e-07, -8.4638240878121e-06, -0.0029690254013985395, -6.663577369181439e-05, -0.2359093278646469, -0.9324495196342468, -0.00038342276820912957, -0.023132696747779846, -0.0012047183699905872, -0.002116941148415208, -8.344646857949556e-07, -6.151010165922344e-05, -2.0265558760002023e-06, -0.0037465158384293318, -0.009240125305950642, -0.0024953915271908045, -0.007680883165448904, -0.002580647822469473, -0.0026192902587354183, -0.00024828212917782366, -0.01997673325240612, -0.006867851130664349, -0.9867163896560669, -0.018313955515623093, -0.00035232058144174516, -0.6539990305900574, -0.6741483211517334, -0.021733220666646957, -0.0047979699447751045, -0.002434387570247054, -0.0002798642381094396, -0.0011219641892239451, -0.0019427727675065398, -0.003081932198256254, -0.0014368696138262749, -0.06129701808094978], "finish_reason": "stop"}], "metrics": {"energy": 878.5603179168704, "energy_per_token": 3.7070055608306767, "time": 20.170473, "time_per_token": 0.08510748101265823}}
{"outputs": [{"text": "info = {}\n    for path in pathlib.Path(directory).iterdir():\n        info[to_ascii(path.name)] = {\n            'Size': os.path.getsize(path),\n            'MD5 Hash': md5(open(path, 'rb').read()).hexdigest()\n        }\n    return info", "tokens": ["info", " =", " {}", "\n", "    ", "for", " path", " in", " path", "lib", ".", "Path", "(", "directory", ")", ".", "iter", "dir", "():", "\n", "        ", "info", "[", "to", "_", "ascii", "(", "path", ".", "name", ")]", " =", " {", "\n", "            ", "'", "Size", "':", " os", ".", "path", ".", "get", "size", "(", "path", ")", ",", "\n", "            ", "'", "MD", "5", " Hash", "':", " md", "5", "(", "open", "(", "path", ",", " '", "rb", "')", ".", "read", "())", ".", "hex", "dig", "est", "()", "\n", "        ", "}", "\n", "    ", "return", " info", "\n", "\n", "def"], "logprobs": [-1.0510468482971191, -0.01756657287478447, -0.09746405482292175, -0.02451649308204651, -0.21110717952251434, -0.2669380009174347, -2.434513568878174, -0.22296357154846191, -0.2754025161266327, -0.0002109781780745834, -2.276871418871451e-05, -0.0005855038180015981, -0.001149470335803926, -0.010452762246131897, -0.0010183630511164665, -1.3828182090946939e-05, -1.170366883277893, -4.529942543740617e-06, -7.021180499577895e-05, -0.007975872606039047, -0.01546216569840908, -3.5307767391204834, -0.03358433395624161, -3.1547603607177734, -0.042478833347558975, -0.0465637631714344, -0.023978590965270996, -0.049591679126024246, -0.06248379126191139, -0.23863327503204346, -0.025126881897449493, -0.001962641952559352, -0.4760286211967468, -0.0053130853921175, -0.02031133882701397, -0.37989887595176697, -0.051820363849401474, -0.008774415589869022, -1.4386210441589355, -0.00023636408150196075, -0.29279035329818726, -2.9682672902708873e-05, -5.23315102327615e-05, -5.578839045483619e-05, -0.0013062763027846813, -0.09743852913379669, -0.0480465441942215, -0.01292906329035759, -0.02017652802169323, -0.0011145814787596464, -0.005988749209791422, -0.0014936492079868913, -0.0001479277852922678, -0.007201073225587606, -0.0006727101281285286, -0.2785142660140991, -0.00021360022947192192, -0.15085965394973755, -1.878270149230957, -0.000912369170691818, -0.04113192856311798, -0.020559651777148247, -0.30133056640625, -0.007656631991267204, -0.0011182728921994567, -0.00019929806876461953, -2.5152843591058627e-05, -0.001061352901160717, -0.0031184160616248846, -0.014661546796560287, -0.00017796363681554794, -1.1920928244535389e-07, -0.03276187181472778, -0.5351686477661133, -0.03714853152632713, -5.543078441405669e-05, -0.0008144637104123831, -0.06201579421758652, -0.008282361552119255, -0.005160701461136341, -0.019344249740242958, -0.0021364500280469656, -0.06547567993402481], "finish_reason": "stop"}], "metrics": {"energy": 282.28689200973497, "energy_per_token": 3.4010468916835537, "time": 6.9487615, "time_per_token": 0.08372001807228915}}
{"outputs": [{"text": "def get_md5_hash(file_path):\n        with open(file_path, 'rb') as f:\n            file_bytes = f.read()\n            hash_object = md5(file_bytes)\n            return hash_object.hexdigest()\n\n    info = {}\n    for root, _, files in os.walk(directory):\n        for name in files:\n            if name.startswith('.'):\n                continue\n            file_path = os.path.join(root, name)\n            filename = unicodedata.normalize('NFKD', name).encode('ascii', 'ignore').decode('ascii')\n            info[filename] = {\n                'Size': os.path.getsize(file_path),\n                'MD5 Hash': get_md5_hash(file_path)\n            }\n    return info", "tokens": ["def", " get", "_", "md", "5", "_", "hash", "(", "file", "_", "path", "):", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "            ", "file", "_", "bytes", " =", " f", ".", "read", "()", "\n", "            ", "hash", "_", "object", " =", " md", "5", "(", "file", "_", "bytes", ")", "\n", "            ", "return", " hash", "_", "object", ".", "hex", "dig", "est", "()", "\n", "\n", "    ", "info", " =", " {}", "\n", "    ", "for", " root", ",", " _", ",", " files", " in", " os", ".", "walk", "(", "directory", "):", "\n", "        ", "for", " name", " in", " files", ":", "\n", "            ", "if", " name", ".", "start", "sw", "ith", "('", ".", "')", ":", "\n", "                ", "continue", "\n", "            ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "root", ",", " name", ")", "\n", "            ", "filename", " =", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " name", ")", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "('", "ascii", "')", "\n", "            ", "info", "[", "filename", "]", " =", " {", "\n", "                ", "'", "Size", "':", " os", ".", "path", ".", "get", "size", "(", "file", "_", "path", ")", ",", "\n", "                ", "'", "MD", "5", " Hash", "':", " get", "_", "md", "5", "_", "hash", "(", "file", "_", "path", ")", "\n", "            ", "}", "\n", "    ", "return", " info", "\n", "\n", "def"], "logprobs": [-2.924858570098877, -2.2500901222229004, -0.03656727448105812, -1.8990824222564697, -0.0008992680232040584, -0.8514829277992249, -0.12017051875591278, -0.03991127759218216, -0.5811955332756042, -0.3639654219150543, -0.04318146035075188, -0.04154130071401596, -0.0009365463047288358, -0.004192136228084564, -1.588179588317871, -0.0021115881390869617, -0.0006096888100728393, -0.006489157676696777, -0.00038556772051379085, -1.1920922133867862e-06, -0.0013144910335540771, -0.1061672642827034, -0.007629895582795143, -0.0006026597693562508, -9.42901024245657e-05, -0.602917492389679, -0.03741302341222763, -0.0008526980527676642, -0.0008690156391821802, -1.1858881711959839, -0.002693955088034272, -0.8246088624000549, -0.0003763920976780355, -0.003466075984761119, -7.271740287251305e-06, -3.2186455882765586e-06, -0.0016840812750160694, -0.013753646053373814, -0.8359176516532898, -2.168569564819336, -0.06677794456481934, -1.174085021018982, -0.0004323977918829769, -0.002667323686182499, -1.1920922133867862e-06, -0.051893822848796844, -0.0005346299149096012, -5.722029527532868e-06, 0.0, -0.0004291805380489677, -0.009136180393397808, -0.2072974294424057, -0.43976080417633057, -0.013353672809898853, -2.7179348762729205e-05, -2.3841830625315197e-06, -0.0031051060650497675, -0.00404017511755228, -5.245195097813848e-06, -1.7881377516459906e-06, -0.00015829740732442588, -0.009538787417113781, -0.032101064920425415, -0.0004060635983478278, -2.292985677719116, -0.01936272345483303, -0.03403171896934509, -0.008148402906954288, -0.15149526298046112, -0.2262677699327469, -1.1603870391845703, -0.00619834940880537, -2.175088405609131, -0.00783962570130825, -0.11787702143192291, -0.0007799206068739295, -0.0009846605826169252, -5.125986263010418e-06, -1.764281842042692e-05, -0.0003578022588044405, -0.004268107935786247, -0.009639857336878777, -0.002484332537278533, -0.0013828248484060168, -0.03674286976456642, -2.050225257873535, -0.0016525434330105782, -0.0013724679592996836, -5.495397272170521e-05, -0.0003943857445847243, -0.0019306369358673692, -3.1557583808898926, -0.6268288493156433, -0.23982830345630646, -0.4851858615875244, -2.1219027985353023e-05, -2.3841855067985307e-07, -0.11038830876350403, -0.037867654114961624, -0.03646865859627724, -0.26749902963638306, -0.09415005892515182, -0.00021860594279132783, -0.03341694548726082, -0.031557291746139526, -0.334050714969635, -0.809765636920929, -0.045045964419841766, -0.03909297659993172, -0.001303419005125761, -0.04896914213895798, -2.3841855067985307e-07, -3.6238969187252223e-05, -3.576278118089249e-07, -0.006496382411569357, -1.537788011773955e-05, -0.0019270675256848335, -0.0005172345554456115, -0.0008123196894302964, -0.0004128557338844985, -0.0007844470092095435, -0.041751928627491, -3.3347463607788086, -0.25270745158195496, -2.5108795166015625, -0.0026016931515187025, -1.168244216387393e-05, -1.4305104514278355e-06, -7.617183291586116e-05, -0.00011085849109804258, -1.156323378381785e-05, -0.014775020070374012, -0.006185790989547968, -0.8546821475028992, -6.556489552167477e-06, -1.728519782773219e-05, -0.32238882780075073, -0.034013744443655014, -0.03947293385863304, -0.002443901030346751, -0.04282563924789429, -0.0373050756752491, -0.0003588747640606016, -1.0728830375228426e-06, -0.020040415227413177, -0.001100768567994237, -0.00339443888515234, -0.013616889715194702, -0.0029407371766865253, -0.7034778594970703, -0.3007611036300659, -0.0009158230968751013, -0.023954499512910843, -0.040510401129722595, -0.9587505459785461, -0.007258946541696787, -0.011701046489179134, -0.011411750689148903, -0.00015829740732442588, -0.7494003772735596, -0.005859460216015577, -0.0012236495967954397, -0.06153064966201782, -0.07617664337158203, -0.004095975775271654, -0.25409644842147827, -6.6756979322235566e-06, -0.0558510459959507, -1.311301275563892e-06, -9.65590606938349e-06, -3.3378546504536644e-06, -6.210611172718927e-05, -0.0017149040941148996, -2.7894584491150454e-05, -8.344646857949556e-07, -0.0002748588449321687, -0.005974292289465666, -0.008717929944396019, -0.0009107018122449517, -0.0016614693449810147, -0.0024986020289361477, -6.270212179515511e-05, -0.007504249922931194, -0.00016664070426486433, -0.0015192406717687845, -5.245195097813848e-06, -1.07287787614041e-05, -7.152555099310121e-07, -9.536697689327411e-06, -3.576278118089249e-07, -0.00015293381875380874, -0.0011635207338258624, -1.6927575416048057e-05, 0.0, -0.004038750194013119, -0.3543034493923187, -0.004533014725893736, -1.0967194612021558e-05, -5.602679812000133e-05, -0.08475779742002487, -0.010250070132315159, -0.002559007378295064, -0.22375600039958954, -0.006082120817154646, -0.6732150316238403], "finish_reason": "stop"}], "metrics": {"energy": 733.0472410659783, "energy_per_token": 3.5758402003218452, "time": 17.420168, "time_per_token": 0.08497642926829269}}
{"outputs": [{"text": "info = {}\n    for file in os.listdir(directory):\n        if os.path.isfile(os.path.join(directory, file)):\n            filename = file.replace(' ', '_')\n            filename = unicodedata.normalize('NFD', filename).encode('ascii', 'ignore').decode('utf-8')\n            filename = filename.lower()\n            info[filename] = {'Size': os.path.getsize(os.path.join(directory, file))}\n            md5_hash = md5()\n            with open(os.path.join(directory, file), 'rb') as f:\n                md5_hash.update(f.read())\n            info[filename]['MD5 Hash'] = md5_hash.hexdigest()\n    return info", "tokens": ["info", " =", " {}", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " file", "))", ":", "\n", "            ", "filename", " =", " file", ".", "replace", "('", " '", ",", " '_", "')", "\n", "            ", "filename", " =", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "D", "'", ",", " filename", ")", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "('", "utf", "-", "8", "')", "\n", "            ", "filename", " =", " filename", ".", "lower", "()", "\n", "            ", "info", "[", "filename", "]", " =", " {'", "Size", "':", " os", ".", "path", ".", "get", "size", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " file", "))", "}", "\n", "            ", "md", "5", "_", "hash", " =", " md", "5", "()", "\n", "            ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "directory", ",", " file", ")", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "md", "5", "_", "hash", ".", "update", "(", "f", ".", "read", "())", "\n", "            ", "info", "[", "filename", "]['", "MD", "5", " Hash", "']", " =", " md", "5", "_", "hash", ".", "hex", "dig", "est", "()", "\n", "    ", "return", " info", "\n", "\n", "if"], "logprobs": [-1.0510468482971191, -0.01756657287478447, -0.09746405482292175, -0.02451649308204651, -0.21110717952251434, -0.2669380009174347, -0.8736041784286499, -0.21415051817893982, -0.1913062483072281, -3.7431014789035544e-05, -0.051884088665246964, -3.576278118089249e-07, -0.0004020121123176068, -0.018032537773251534, -0.001718117156997323, -0.005869533866643906, -0.016809485852718353, -2.635904550552368, -0.6064878106117249, -2.3483953555114567e-05, -0.0009108209051191807, -5.006777428206988e-06, -0.014465345069766045, -0.0783364474773407, -0.0012991330586373806, -0.21483495831489563, -2.288792165927589e-05, -6.663577369181439e-05, -1.7881377516459906e-06, -0.0005100856651552022, -0.0002681849291548133, -0.0009812070056796074, -0.00022289653134066612, -0.007679108530282974, -0.0002687808300834149, -0.014907155185937881, -0.00455864705145359, -0.007274331524968147, -2.533029079437256, -0.13252905011177063, -1.2538148164749146, -0.3250288963317871, -0.6958470940589905, -0.4727163016796112, -0.5672871470451355, -0.00037901371251791716, -0.13286155462265015, -0.002445090329274535, -0.29877203702926636, -0.017305096611380577, -0.8358379602432251, -0.05017868056893349, -0.16946031153202057, -0.007504960056394339, -2.0265558760002023e-06, -2.3841830625315197e-06, -4.017272294731811e-05, -0.00016664070426486433, -8.583032467868179e-06, -0.014729796908795834, -0.003917045891284943, -0.987489640712738, -0.00015186110977083445, -1.9311717551317997e-05, -0.013006963767111301, -0.01925666816532612, -0.34316161274909973, -0.0008052920456975698, -0.3631562292575836, -0.03029783070087433, -0.0005212855176068842, -1.0371154530730564e-05, -0.004205194301903248, -0.003762311302125454, -0.00285337190143764, -0.03300526738166809, -0.0008840228547342122, -0.40548035502433777, -0.15844866633415222, -0.044541798532009125, -5.722029527532868e-06, -0.007453016936779022, -0.02637510560452938, -0.07209512591362, -0.6484255194664001, -0.013293210417032242, -0.29477590322494507, -0.0059635089710354805, -0.5132893919944763, -7.116541382856667e-05, -0.0963977724313736, -0.19550871849060059, -1.2236874103546143, -0.012931887991726398, -0.008771933615207672, -0.007500108797103167, -0.00031549722189083695, -1.4472806453704834, -0.07434410601854324, -0.006455401889979839, -0.1736023724079132, -8.940656698541716e-06, -0.10167529433965683, -3.576272320060525e-06, -3.397406908334233e-05, -9.417489309271332e-06, -0.0016858663875609636, -0.04377063736319542, -9.65590606938349e-06, -3.814624506048858e-05, -2.9802276912960224e-06, -0.0003667397249955684, -0.0005931286723352969, -0.00146793806925416, -4.3987260141875595e-05, -0.004288761876523495, -0.00045468006283044815, -2.0359838008880615, -0.0030122878961265087, -0.03967803716659546, -2.030322790145874, -0.03183400630950928, -0.21920007467269897, -0.017225069925189018, -0.005041742697358131, -0.03860117122530937, -1.5020257706055418e-05, -0.15326885879039764, -0.0012662734370678663, -0.0066149309277534485, -0.04781723767518997, -0.0283848587423563, -0.0007420408655889332, -0.023579776287078857, -2.7418097943154862e-06, -0.00013422065239865333, -7.152555099310121e-07, -0.00025519452174194157, -0.00020382710499688983, -0.0007446615491062403, -7.009260298218578e-05, -0.0032246517948806286, -0.0009382136631757021, -0.00010132275929208845, -0.1145823672413826, -0.0076191299594938755, -0.0013190149329602718, -0.00013934595335740596, -0.07323935627937317, -0.015024006366729736, -0.0006177900941111147, -0.00042500998824834824, -2.487440586090088, -0.00012635385792236775, -0.0005667987279593945, -0.0047528864815831184, -0.0010913613950833678, -1.4781842764932662e-05, -0.00046993177966214716, -0.0051706633530557156, -2.13382354559144e-05, -7.271740287251305e-06, -0.00218129507265985, -0.000311802898067981, -0.2574734091758728, -0.03195328637957573, -0.00015877417172305286, -0.00038425691309385, -0.01640334725379944, -0.0036889140028506517, -8.618460560683161e-05, -0.011281746439635754, -0.0001864259538706392, -0.000301673193462193, -0.0050942855887115, -1.6689286894688848e-06, -6.0437283536884934e-05, -8.344646857949556e-07, -0.0004761277523357421, -0.003109503071755171, -1.0490362910786644e-05, 0.0, -0.0001833270798670128, -0.008078519254922867, -0.064717598259449, -0.012364520691335201, -0.0019999993965029716, -0.324106365442276, -0.009313352406024933, -0.9194949269294739], "finish_reason": "stop"}], "metrics": {"energy": 711.2332845611564, "energy_per_token": 3.7433330766376653, "time": 16.191227, "time_per_token": 0.08521698421052633}}
{"outputs": [{"text": "info = {}\n    for file in os.listdir(directory):\n        file_path = os.path.join(directory, file)\n        if os.path.isfile(file_path):\n            normalized_file = unicodedata.normalize('NFKD', file).encode('ascii', 'ignore').decode()\n            md5_hash = md5()\n            with open(file_path, 'rb') as f:\n                for chunk in iter(lambda: f.read(4096), b''):\n                    md5_hash.update(chunk)\n            info[normalized_file] = {\n                'Size': os.path.getsize(file_path),\n                'MD5 Hash': md5_hash.hexdigest()\n            }\n    return info", "tokens": ["info", " =", " {}", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " file", ")", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "            ", "normalized", "_", "file", " =", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " file", ")", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "()", "\n", "            ", "md", "5", "_", "hash", " =", " md", "5", "()", "\n", "            ", "with", " open", "(", "file", "_", "path", ",", " '", "rb", "')", " as", " f", ":", "\n", "                ", "for", " chunk", " in", " iter", "(", "lambda", ":", " f", ".", "read", "(", "4", "0", "9", "6", ")", ",", " b", "'')", ":", "\n", "                ", "    ", "md", "5", "_", "hash", ".", "update", "(", "chunk", ")", "\n", "            ", "info", "[", "normalized", "_", "file", "]", " =", " {", "\n", "                ", "'", "Size", "':", " os", ".", "path", ".", "get", "size", "(", "file", "_", "path", ")", ",", "\n", "                ", "'", "MD", "5", " Hash", "':", " md", "5", "_", "hash", ".", "hex", "dig", "est", "()", "\n", "            ", "}", "\n", "    ", "return", " info"], "logprobs": [-1.0510468482971191, -0.01756657287478447, -0.09746405482292175, -0.02451649308204651, -0.21110717952251434, -0.2669380009174347, -0.8736041784286499, -0.21415051817893982, -0.1913062483072281, -3.7431014789035544e-05, -0.051884088665246964, -3.576278118089249e-07, -0.0004020121123176068, -0.018032537773251534, -0.001718117156997323, -0.005869533866643906, -0.016809485852718353, -1.1837561130523682, -0.157028466463089, -0.16746468842029572, -0.002089104847982526, -0.13180354237556458, -5.245195097813848e-06, -0.0002019201492657885, -2.777537883957848e-05, -0.004984215367585421, -0.00022885564249008894, -0.006556072738021612, -0.0001679517881711945, -0.004050741903483868, -0.00052998325554654, -0.0034595420584082603, -0.08039062470197678, -0.34960219264030457, -0.1525496393442154, -5.125986263010418e-06, -0.0009717986104078591, -2.50339189733495e-06, -0.0038814221043139696, -0.027221743017435074, -0.00026008085114881396, -0.00035684893373399973, -0.0009373800130560994, -2.3841830625315197e-06, -0.03690487891435623, -0.0037392713129520416, -0.0059707374311983585, -1.7897145748138428, -0.105745330452919, -0.517377495765686, -0.5453839898109436, -0.3908502757549286, -0.010943868197500706, -3.814689989667386e-06, -6.437280717364047e-06, -0.00018821375851985067, -0.00015376816736534238, -2.634490556374658e-05, -0.054470907896757126, -0.0034789058845490217, -0.6764084696769714, -1.6689160474925302e-05, -2.3603161025675945e-05, -0.05973124876618385, -0.04278269410133362, -0.11962489783763885, -0.003280735807493329, -0.07084130495786667, -0.11038307845592499, -0.00029225845355540514, -2.4318398573086597e-05, -0.02043783850967884, -0.0009826361201703548, -0.003037959337234497, -0.03248876333236694, -0.00210564024746418, -0.764638364315033, -0.008317001163959503, -0.025540882721543312, -2.040843963623047, -0.013992424122989178, -0.027624672278761864, -0.015279505401849747, -0.0056793042458593845, -0.036146316677331924, -8.713819261174649e-05, -1.4785819053649902, -0.002442117314785719, -0.042747173458337784, -0.1664460152387619, -0.007276935037225485, -0.00019476900342851877, -0.003684281837195158, -0.004394991789013147, -2.3841830625315197e-06, -0.0004619484825525433, -0.14650288224220276, -0.010917573235929012, -0.000987637904472649, -2.276871418871451e-05, -0.17737890779972076, -0.024031544104218483, -0.0008852138998918235, -0.0004151197790633887, -0.5071144104003906, -0.3553954064846039, -5.07818695041351e-05, -0.0064809853211045265, -9.476689592702314e-05, -0.000356253091013059, -0.0008091036579571664, -0.001765955938026309, -1.0967194612021558e-05, -5.602820692729438e-06, -0.00786694698035717, -0.28564316034317017, -0.0008597253472544253, -0.0005610798834823072, -0.00013398226292338222, -0.0034931611735373735, -0.00011121608258690685, -0.0029736608266830444, -0.11961622536182404, -1.0609570381348021e-05, -0.00265162973664701, -1.9907753085135482e-05, -0.00030322244856506586, -0.0009827552130445838, -3.576278118089249e-07, -4.207999518257566e-05, -1.9907753085135482e-05, -1.3112935448589269e-05, -1.5497195136049413e-06, -2.658331868587993e-05, -0.00014578233822248876, -0.00022957073815632612, -7.164221460698172e-05, -0.07650499790906906, -0.28751274943351746, -0.008715211413800716, -0.0035260666627436876, -2.3841830625315197e-06, 0.0, -0.00334251974709332, -0.0001627074379939586, -1.0182690620422363, -0.015532003715634346, -0.0017370387213304639, -0.046534862369298935, -0.052928097546100616, -0.005370356608182192, -0.1195705309510231, -1.168244216387393e-05, -0.05090741813182831, -5.722029527532868e-06, -1.07287787614041e-05, -4.0531076592742465e-06, -9.011816291604191e-05, -0.003238554112613201, -0.0038077959325164557, -1.0371154530730564e-05, -0.0005255748401395977, -0.007189355790615082, -0.011177187785506248, -0.00018976318824570626, -0.0017463208641856909, -0.0010125277331098914, -4.207999518257566e-05, -0.006644773297011852, -0.0001802282058633864, -0.0013231817865744233, -4.768370445162873e-07, -4.470248313737102e-05, -1.4305104514278355e-06, -0.00043084874050691724, -0.0007493072189390659, -1.549708758830093e-05, 0.0, -0.005990645382553339, -0.1878463625907898, -0.0076280031353235245, -6.079655122448457e-06, -7.343022298300639e-05, -0.01998070627450943, -0.0053692893125116825, -0.0016473069554194808], "finish_reason": "stop"}], "metrics": {"energy": 705.1783019256594, "energy_per_token": 3.7912811931487065, "time": 16.019545, "time_per_token": 0.08612658602150539}}
{"outputs": [{"text": "info = {}\n    for filename in os.listdir(directory):\n        path = os.path.join(directory, filename)\n        normalized = unicodedata.normalize('NFD', filename).encode('ascii', 'ignore').decode()\n        info[normalized] = {\n            'Size': pathlib.Path(path).stat().st_size,\n            'MD5 Hash': md5(filename.encode()).hexdigest()\n        }\n    return info", "tokens": ["info", " =", " {}", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "):", "\n", "        ", "path", " =", " os", ".", "path", ".", "join", "(", "directory", ",", " filename", ")", "\n", "        ", "normalized", " =", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "D", "'", ",", " filename", ")", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "()", "\n", "        ", "info", "[", "normalized", "]", " =", " {", "\n", "            ", "'", "Size", "':", " path", "lib", ".", "Path", "(", "path", ")", ".", "stat", "()", ".", "st", "_", "size", ",", "\n", "            ", "'", "MD", "5", " Hash", "':", " md", "5", "(", "filename", ".", "encode", "())", ".", "hex", "dig", "est", "()", "\n", "        ", "}", "\n", "    ", "return", " info"], "logprobs": [-1.0510468482971191, -0.01756657287478447, -0.09746405482292175, -0.02451649308204651, -0.21110717952251434, -0.2669380009174347, -1.7332452535629272, -0.006494250148534775, -0.061774540692567825, -2.9205850296420977e-05, -0.006583074573427439, -1.1920928244535389e-07, -0.0006470970110967755, -0.02109040878713131, -0.0012256737099960446, -0.009354805573821068, -0.018032537773251534, -1.7881531715393066, -0.044886521995067596, -0.4159453213214874, -7.867782187531702e-06, -0.0005519058904610574, -1.490105023549404e-05, -0.005252490285784006, -0.00018773700867313892, -0.002763977972790599, -8.737658936297521e-05, -0.0034690459724515676, -0.0011435167398303747, -0.005623473320156336, -0.08327114582061768, -3.334503650665283, -1.4734923839569092, -0.261880487203598, -0.005354349501430988, -7.271740287251305e-06, -5.006777428206988e-06, -0.00011562632425921038, -0.00013684290752280504, -7.843663479434326e-05, -0.06707027554512024, -0.010729835368692875, -0.7626954913139343, -0.000863774970639497, -3.8265450712060556e-05, -0.13595502078533173, -0.043364573270082474, -0.1629016101360321, -0.0050297630950808525, -0.20118845999240875, -0.04176221787929535, -0.0010583758121356368, -2.861018856492592e-06, -0.004741140641272068, -0.007872624322772026, -0.004814342129975557, -0.0782284215092659, -0.0019556223414838314, -1.0893179178237915, -0.022044150158762932, -0.059277575463056564, -0.9590767621994019, -0.007705488707870245, -0.00548358540982008, -0.0035280860029160976, -0.00029118589009158313, -0.6695827841758728, -0.007209476083517075, -0.014417287893593311, -0.10057651996612549, -0.04778064414858818, -0.007145681884139776, -0.8608688116073608, -0.0005270045949146152, -4.291525328881107e-06, -0.0011784045491367579, -0.0011070796754211187, -0.006786038167774677, -0.00017486473370809108, -5.328513361746445e-05, -0.0041725486516952515, -8.022463589441031e-05, -6.5205356804654e-05, -1.3232143828645349e-05, -1.6689286894688848e-06, -2.4199192921514623e-05, -0.00801347941160202, -0.007419412489980459, -0.000653530121780932, -0.0026867028791457415, -0.0015376898227259517, -0.00015269544383045286, -0.00692325783893466, -0.00029559535323642194, -0.030779751017689705, -2.2411095415009186e-05, -0.0025894464924931526, -1.5713379383087158, -0.001465200330130756, -0.0007003477076068521, -0.2559516131877899, -0.00881754606962204, -0.009855893440544605, -0.0002004899288294837, -3.576278118089249e-07, -0.005449558608233929, -0.28347110748291016, -0.01704331673681736, -2.3007127310847864e-05, -0.00040344204171560705, -0.031603723764419556, -0.007350543048232794, -0.0014598437119275331], "finish_reason": "stop"}], "metrics": {"energy": 412.3573040342335, "energy_per_token": 3.6491796817188806, "time": 9.873734, "time_per_token": 0.08737817699115046}}
{"outputs": [{"text": "directory = pathlib.Path(directory)\n    info = {}\n\n    for file in directory.iterdir():\n        normalized_filename = unicodedata.normalize('NFKD', str(file)).encode('ascii', 'ignore').decode()\n\n        md5_hash = md5(file.read_bytes()).hexdigest()\n        file_size = file.stat().st_size\n        info[normalized_filename] = {\"Size\": file_size, \"MD5 Hash\": md5_hash}\n\n    return info", "tokens": ["directory", " =", " path", "lib", ".", "Path", "(", "directory", ")", "\n", "    ", "info", " =", " {}", "\n", "\n", "    ", "for", " file", " in", " directory", ".", "iter", "dir", "():", "\n", "        ", "normalized", "_", "filename", " =", " un", "ic", "oded", "ata", ".", "normal", "ize", "('", "NF", "KD", "'", ",", " str", "(", "file", "))", ".", "encode", "('", "ascii", "'", ",", " '", "ignore", "')", ".", "decode", "()", "\n", "\n", "        ", "md", "5", "_", "hash", " =", " md", "5", "(", "file", ".", "read", "_", "bytes", "())", ".", "hex", "dig", "est", "()", "\n", "        ", "file", "_", "size", " =", " file", ".", "stat", "()", ".", "st", "_", "size", "\n", "        ", "info", "[", "normalized", "_", "filename", "]", " =", " ", "{\"", "Size", "\":", " file", "_", "size", ",", " \"", "MD", "5", " Hash", "\":", " md", "5", "_", "hash", "}", "\n", "\n", "    ", "return", " info", "\n", "\n", "#"], "logprobs": [-2.8249669075012207, -0.10943756997585297, -0.45492687821388245, -0.0004430027911439538, -8.248942322097719e-05, -0.0376882366836071, -0.007868839427828789, -0.003497794270515442, -0.0015280486550182104, -0.12468390166759491, -0.1193656250834465, -0.8679741024971008, -0.01443138811737299, -0.14119575917720795, -0.009450933896005154, -1.5997214317321777, -0.00024232311989180744, -0.23446156084537506, -0.4918697476387024, -0.23434461653232574, -0.30149248242378235, -5.125868119648658e-05, -0.36137405037879944, -7.664863369427621e-05, -0.00013386306818574667, -0.003376023843884468, -0.05708899721503258, -2.940326452255249, -0.24563778936862946, -1.367784857749939, -0.0031119987834244967, -0.2823527753353119, -0.005191417410969734, -1.0490362910786644e-05, -2.861018856492592e-06, -0.0004120216181036085, -0.00014149141497910023, -5.411955135059543e-05, -0.1457388997077942, -0.004785750061273575, -0.6433541178703308, -2.312633478140924e-05, -3.0040289857424796e-05, -1.607722282409668, -0.00025614796322770417, -0.0009446449112147093, -0.3439462184906006, -0.16189925372600555, -0.00677040871232748, -0.16041481494903564, -0.08467138558626175, -0.00047362555051222444, -4.5298504119273275e-05, -0.023931918665766716, -0.0013630633475258946, -0.0026566232554614544, -0.07190832495689392, -0.004519605077803135, -0.45128291845321655, -0.005561237223446369, -1.5789480209350586, -0.0003234816831536591, -1.7296247482299805, -0.009853178635239601, -0.04090629518032074, -0.04398787021636963, -0.012918943539261818, -0.029784319922327995, -3.0040289857424796e-05, -1.321030616760254, -0.41479063034057617, -0.0009285667329095304, -0.018283523619174957, -2.13382354559144e-05, -9.298280929215252e-06, -0.001677297754213214, -0.03910570219159126, -0.009498640894889832, -4.1960789531003684e-05, -1.1920928244535389e-07, -8.177422569133341e-05, -0.011627993546426296, -0.3249915838241577, -0.7838560938835144, -0.0014575821114704013, -0.010980302467942238, -0.030491644516587257, -0.09087543934583664, -3.6238969187252223e-05, -0.007344507612287998, -0.0003805628512054682, -2.7894584491150454e-05, -3.766942609217949e-05, -4.768370445162873e-07, -8.34461570775602e-06, -0.012270438484847546, -1.719864845275879, -0.06108306720852852, -0.026943400502204895, -0.006484420038759708, -2.3841855067985307e-07, 0.0, -0.004018447361886501, -0.00022968991834204644, -2.9256606101989746, -0.0007049936102703214, -0.11709011346101761, -0.0069208899512887, -0.039668068289756775, -0.00046206763363443315, -8.821448318485636e-06, -0.0024628089740872383, -0.0334208644926548, -0.0016925308154895902, -0.00012957210128661245, -0.009736429899930954, -0.00046623803791590035, -0.0009557208395563066, -2.3841855067985307e-07, -0.0001567479339428246, -3.576278118089249e-07, -0.00311211752705276, -0.0005100856651552022, -0.10359099507331848, -0.011427778750658035, -0.012802904471755028, -0.0035835590679198503, -0.49322953820228577, -0.00534320343285799, -2.520235538482666], "finish_reason": "stop"}], "metrics": {"energy": 486.39553624725283, "energy_per_token": 3.741504124978868, "time": 12.402367, "time_per_token": 0.09540282307692308}}
