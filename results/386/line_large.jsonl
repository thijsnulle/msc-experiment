{"outputs": [{"text": " np.random.randint(min_value, max_value + 1, size=(length, len(COLUMNS)))", "tokens": [" np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", " +", " ", "1", ",", " size", "=(", "length", ",", " len", "(", "COL", "UM", "NS", ")))", "\n"], "logprobs": [-0.9264228343963623, -1.5258672647178173e-05, -0.006114941090345383, -3.766942609217949e-05, -0.08778531849384308, -0.09130782634019852, -0.00011944057769142091, -0.09610187262296677, -3.7788631743751466e-05, -1.311301275563892e-06, -0.0015575670404359698, -0.008064565248787403, -6.318072337307967e-06, -6.556489552167477e-06, -1.0767946243286133, -0.001280084135942161, -0.00018535325943958014, -0.00027771908207796514, -0.2810695767402649, -0.023299604654312134, -0.019908489659428596, -0.005175288766622543, -0.04156337305903435, -4.9232225137529895e-05, -0.0003641180810518563, -1.1920928244535389e-07, -5.0424259825376794e-05, -0.006955931894481182, -0.012178703211247921], "finish_reason": "stop"}, {"text": " pd.DataFrame(data=data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", "=", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.00027783826226368546, -2.145764938177308e-06, -0.00033384948619641364, -0.00048601735034026206, -0.006376279518008232, -2.707057476043701, -0.012051506899297237, -0.029596852138638496, -0.017031831666827202, -0.007982022128999233, -0.0020719743333756924, -5.960462772236497e-07, -6.9141146923357155e-06, -0.00462284404784441, -0.003429366974160075], "finish_reason": "stop"}, {"text": " df.apply(lambda x: np.cumsum(np.unique(x, return_counts=True)[1]) / length)", "tokens": [" df", ".", "apply", "(", "lambda", " x", ":", " np", ".", "cum", "sum", "(", "np", ".", "unique", "(", "x", ",", " return", "_", "counts", "=", "True", ")[", "1", "])", " /", " length", ")", "\n"], "logprobs": [-0.26681721210479736, -0.029044074937701225, -0.2870709002017975, -0.11759355664253235, -0.12478955835103989, -0.26360663771629333, -0.002516200765967369, -1.3622359037399292, -1.3112935448589269e-05, -1.0938819646835327, -0.004363302141427994, -0.005227942951023579, -1.1454534530639648, -5.960446742392378e-06, -1.3022005558013916, -0.003815752686932683, -0.33544138073921204, -0.11260177940130234, -0.0018046298064291477, -2.3841855067985307e-07, -1.847726889536716e-05, -0.010185997933149338, -0.0024871863424777985, -0.0007751559023745358, -0.008631303906440735, -0.30664804577827454, -0.2437133938074112, -0.3810875415802002, -0.9734852313995361, -0.026006748899817467], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.009373228996992111, -0.21825730800628662], "finish_reason": "stop"}], "metrics": {"energy": 468.17149174594874, "energy_per_token": 6.160151207183536, "time": 13.182426, "time_per_token": 0.17345297368421053}}
{"outputs": [{"text": " pd.DataFrame(np.random.rand(length, len(COLUMNS)) * (max_value - min_value) + min_value, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "(", "length", ",", " len", "(", "COL", "UM", "NS", "))", " *", " (", "max", "_", "value", " -", " min", "_", "value", ")", " +", " min", "_", "value", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-1.9379602670669556, -1.2516897186287679e-05, -0.016904549673199654, -0.2633496820926666, -0.0928073599934578, -1.3351351299206726e-05, -0.004217539913952351, -7.033323527139146e-06, -0.06410630792379379, -2.054941177368164, -0.028181711211800575, -0.053629979491233826, -0.07141020148992538, -4.6967357775429264e-05, -0.000527123745996505, -1.1920928244535389e-07, -2.5748875486897305e-05, -0.07305099815130234, -0.8622953295707703, -0.055480871349573135, -0.0030231033451855183, -2.8609820219571702e-05, -9.298280929215252e-06, -0.022501042112708092, -0.0012900849105790257, -1.4662635294371285e-05, -3.814689989667386e-06, -0.007307585794478655, -0.0025322535075247288, -0.0019538376946002245, -1.2993727978027891e-05, -3.576278118089249e-07, -0.02601325325667858, -0.026876559481024742, -0.06557906419038773, -0.0022852513939142227, -1.6689286894688848e-06, -5.722029527532868e-06, -0.0029848332051187754, -0.003790932474657893], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.00030191155383363366, -2.3841830625315197e-06, -0.00047743841423653066, -0.00041345154750160873, -0.004556986037641764, -0.06255602091550827, -0.0009728704462759197, -0.008555189706385136, -0.0007419217727147043, -1.1920922133867862e-06, -9.417489309271332e-06, -0.0015606615925207734, -0.001999404514208436], "finish_reason": "stop"}, {"text": " df.cumsum(axis=0)", "tokens": [" df", ".", "cum", "sum", "(", "axis", "=", "0", ")", "\n"], "logprobs": [-0.32457685470581055, -0.027578983455896378, -2.007662057876587, -0.009734304621815681, -1.919923186302185, -0.004456113558262587, -0.03478037193417549, -0.0588797852396965, -0.009012259542942047, -0.8256672024726868], "finish_reason": "stop"}, {"text": " df", "tokens": [" df"], "logprobs": [-0.010368293151259422], "finish_reason": "stop"}], "metrics": {"energy": 302.88911316585535, "energy_per_token": 4.73264239321649, "time": 7.999071, "time_per_token": 0.124985484375}}
{"outputs": [{"text": " np.random.randint(min_value, max_value, size=(length, len(COLUMNS)))", "tokens": [" np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", ",", " size", "=(", "length", ",", " len", "(", "COL", "UM", "NS", ")))", "\n"], "logprobs": [-0.880889892578125, -1.1920858014491387e-05, -0.007156097795814276, -3.516612196108326e-05, -0.11169951409101486, -0.09056951850652695, -0.00015317220822907984, -0.07551871240139008, -4.386805812828243e-05, -1.4305104514278355e-06, -0.0018587708473205566, -0.008837515488266945, -6.079655122448457e-06, -5.960446742392378e-06, -0.6034573912620544, -0.48725539445877075, -0.02541711926460266, -0.02344435825943947, -0.003918945789337158, -0.06825044751167297, -5.328513361746445e-05, -0.0004389514506328851, -1.1920928244535389e-07, -3.0874729418428615e-05, -0.011227641254663467, -0.007940985262393951], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.00037329382030293345, -2.7418097943154862e-06, -0.0002602000313345343, -0.00039748396375216544, -0.005312729626893997, -0.06337224692106247, -0.0007927850820124149, -0.007768537383526564, -0.0007782529573887587, -1.1920922133867862e-06, -9.775113539944869e-06, -0.0013056810712441802, -0.00224576354958117], "finish_reason": "stop"}, {"text": " df.cumsum() / length", "tokens": [" df", ".", "cum", "sum", "()", " /", " length", "\n"], "logprobs": [-0.2725713849067688, -0.025990953668951988, -1.8386690616607666, -0.009462270885705948, -0.1475079208612442, -1.3011722564697266, -0.3841516971588135, -0.021126357838511467], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.009753547608852386, -0.17651157081127167], "finish_reason": "stop"}], "metrics": {"energy": 190.62565677833555, "energy_per_token": 3.8903195260884806, "time": 5.4718122, "time_per_token": 0.11166963673469386}}
{"outputs": [{"text": " np.random.rand(length, 5) * (max_value - min_value) + min_value", "tokens": [" np", ".", "random", ".", "rand", "(", "length", ",", " ", "5", ")", " *", " (", "max", "_", "value", " -", " min", "_", "value", ")", " +", " min", "_", "value", "\n"], "logprobs": [-0.890537679195404, -1.2993727978027891e-05, -0.006076670717447996, -3.158996332786046e-05, -0.1298491656780243, -2.495090961456299, -0.012277974747121334, -0.164408877491951, -3.0192127227783203, -0.057197194546461105, -0.011334668844938278, -1.242443323135376, -0.04383019730448723, -0.007696734741330147, -7.56950321374461e-05, -1.0371154530730564e-05, -0.0183773934841156, -0.000834236154332757, -1.3470558769768104e-05, -1.0728830375228426e-06, -0.0030758711509406567, -0.0025412903632968664, -0.0008385241380892694, -1.07287787614041e-05, -3.933898824470816e-06, -0.0052891322411596775], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.0002873722987715155, -3.576272320060525e-06, -0.00041929035796783864, -0.0004481264913920313, -0.00669770548120141, -0.07698734849691391, -0.0007662221323698759, -0.009103694930672646, -0.0006993946735747159, -7.152555099310121e-07, -1.0847986231965479e-05, -0.0013567537534981966, -0.0019752532243728638], "finish_reason": "stop"}, {"text": " df.apply(lambda x: x.sort_values())", "tokens": [" df", ".", "apply", "(", "lambda", " x", ":", " x", ".", "sort", "_", "values", "())", "\n"], "logprobs": [-0.3050963580608368, -0.027705378830432892, -0.2872380018234253, -0.12617218494415283, -0.09552908688783646, -0.21975713968276978, -0.0026377192698419094, -1.3324909210205078, -0.034067552536726, -2.16953182220459, -0.00010096516780322418, -0.00062851223628968, -0.4230896532535553, -0.1809108555316925], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.00941739697009325, -0.20428940653800964], "finish_reason": "stop"}], "metrics": {"energy": 249.4734728555678, "energy_per_token": 4.535881324646687, "time": 6.739706, "time_per_token": 0.1225401090909091}}
{"outputs": [{"text": " np.random.randint(min_value, max_value, size=(length, len(COLUMNS)))", "tokens": [" np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", ",", " size", "=(", "length", ",", " len", "(", "COL", "UM", "NS", ")))", "\n"], "logprobs": [-0.9747173190116882, -1.7404405298293568e-05, -0.007593102753162384, -3.540453326422721e-05, -0.14465203881263733, -0.10397214442491531, -0.00015352977789007127, -0.07826920598745346, -3.85038583772257e-05, -1.311301275563892e-06, -0.0016335012624040246, -0.00990299042314291, -5.722029527532868e-06, -5.364403477869928e-06, -0.6829801797866821, -0.3945361077785492, -0.025417352095246315, -0.032252050936222076, -0.004403893370181322, -0.06064773350954056, -5.447716102935374e-05, -0.00044490929576568305, -1.1920928244535389e-07, -2.4914430468925275e-05, -0.01351210568100214, -0.006469141226261854], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.0003746046277228743, -2.861018856492592e-06, -0.0004011779965367168, -0.00046695294440723956, -0.0056471810676157475, -0.05798867344856262, -0.0006201728247106075, -0.007995858788490295, -0.0007215518853627145, -1.5497195136049413e-06, -5.8412379075889476e-06, -0.0013272295473143458, -0.0021074246615171432], "finish_reason": "stop"}, {"text": " df.apply(lambda col: col.value_counts(normalize=True).sort_index().cumsum())", "tokens": [" df", ".", "apply", "(", "lambda", " col", ":", " col", ".", "value", "_", "counts", "(", "normal", "ize", "=", "True", ")", ".", "sort", "_", "index", "()", ".", "cum", "sum", "())", "\n"], "logprobs": [-0.29701462388038635, -0.022591136395931244, -0.25783559679985046, -0.12082888185977936, -0.11104695498943329, -1.8760628700256348, -0.002304519060999155, -0.6307827830314636, -0.03811187297105789, -0.42459946870803833, -1.2278481335670222e-05, -4.2676016164477915e-05, -0.39001476764678955, -0.22563478350639343, -3.576278118089249e-07, -0.005272175185382366, -0.007879721000790596, -0.04734857752919197, -0.0017121669370681047, -0.0500047467648983, -3.576278118089249e-07, -0.0004471732536330819, -0.2796885371208191, -0.0008241117466241121, -0.0010457528987899423, -1.6689286894688848e-06, -0.2121337503194809, -0.010305171832442284], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.008892104029655457, -0.2197752296924591], "finish_reason": "stop"}], "metrics": {"energy": 280.0733097858429, "energy_per_token": 4.059033475157144, "time": 7.3630013, "time_per_token": 0.10671016376811594}}
{"outputs": [{"text": " {col: np.random.randint(min_value, max_value, size=length) for col in COLUMNS}", "tokens": [" {", "col", ":", " np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", ",", " size", "=", "length", ")", " for", " col", " in", " COL", "UM", "NS", "}", "\n"], "logprobs": [-1.0524189472198486, -1.3692067861557007, -0.038087546825408936, -0.0634835734963417, -1.9192511899746023e-05, -0.01260257139801979, -5.602820692729438e-06, -0.14448966085910797, -0.061987560242414474, -5.709961988031864e-05, -0.030963068827986717, -3.325883881188929e-05, -2.7418097943154862e-06, -0.0013049667468294501, -0.003418318461626768, -3.3378546504536644e-06, -2.861018856492592e-06, -0.46244657039642334, -1.8215267658233643, -0.12190763652324677, -0.0062825800850987434, -0.008652458898723125, -0.014490019530057907, -0.0001248043408850208, -0.00013815402053296566, -0.001835924806073308, -3.576278118089249e-07, -2.8609820219571702e-05, -0.0007254829397425056, -0.0010939810890704393], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.00033444532891735435, -2.861018856492592e-06, -0.0002901133266277611, -0.0004003438516519964, -0.005257233511656523, -0.06382988393306732, -0.0007295330869965255, -0.007607536390423775, -0.0008906926377676427, -1.0728830375228426e-06, -5.960446742392378e-06, -0.001549235312268138, -0.002187599427998066], "finish_reason": "stop"}, {"text": " df.apply(lambda x: [float(i) / sum(x) for i in x.cumsum()], axis=0)", "tokens": [" df", ".", "apply", "(", "lambda", " x", ":", " [", "float", "(", "i", ")", " /", " sum", "(", "x", ")", " for", " i", " in", " x", ".", "cum", "sum", "()", "]", ",", " axis", "=", "0", ")", "\n"], "logprobs": [-0.27107349038124084, -0.025526590645313263, -0.30804088711738586, -0.152489572763443, -0.07875478267669678, -0.21323612332344055, -0.002284775720909238, -3.3965401649475098, -1.8214267492294312, -0.025956688448786736, -0.2010229229927063, -0.2198774218559265, -0.0576581135392189, -3.1378157138824463, -0.0012938946019858122, -0.009136770851910114, -0.02615378238260746, -0.006690719164907932, -7.903263758635148e-05, -3.635817120084539e-05, -0.2521727979183197, -0.20305754244327545, -0.0015499495202675462, -4.172316494077677e-06, -0.00039319414645433426, -1.764707088470459, -0.002608351642265916, -0.01164142694324255, -0.014115964993834496, -0.371414452791214, -0.008461222052574158, -0.0714876651763916], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.007964519783854485, -0.19971252977848053], "finish_reason": "stop"}], "metrics": {"energy": 358.57055885124174, "energy_per_token": 4.656760504561581, "time": 8.846037, "time_per_token": 0.11488359740259742}}
{"outputs": [{"text": " np.random.randint(min_value, max_value + 1, size=(length, len(COLUMNS)))", "tokens": [" np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", " +", " ", "1", ",", " size", "=(", "length", ",", " len", "(", "COL", "UM", "NS", ")))", "\n"], "logprobs": [-0.8075991272926331, -1.0609570381348021e-05, -0.006423659157007933, -3.540453326422721e-05, -0.09700067341327667, -0.09530987590551376, -0.00014184899919200689, -0.06475301831960678, -2.9801878554280847e-05, -1.4305104514278355e-06, -0.0016417133156210184, -0.00972096435725689, -6.318072337307967e-06, -5.006777428206988e-06, -1.011974573135376, -0.001069331425242126, -0.0002097863471135497, -0.0002739054325502366, -0.20409375429153442, -0.021195217967033386, -0.019752586260437965, -0.003959673922508955, -0.04143677279353142, -4.637133679352701e-05, -0.00045217780279926956, -1.1920928244535389e-07, -4.851700214203447e-05, -0.0071220095269382, -0.011848903261125088], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.0002833203470800072, -2.3841830625315197e-06, -0.0003819928097072989, -0.000446696620201692, -0.005278460215777159, -0.06390481442213058, -0.0008665143977850676, -0.00813149381428957, -0.0006600823253393173, -1.0728830375228426e-06, -8.22540732769994e-06, -0.001493292162194848, -0.0022955990862101316], "finish_reason": "stop"}, {"text": " df.apply(lambda x: (x - np.min(x)) / (np.max(x) - np.min(x)))", "tokens": [" df", ".", "apply", "(", "lambda", " x", ":", " (", "x", " -", " np", ".", "min", "(", "x", "))", " /", " (", "np", ".", "max", "(", "x", ")", " -", " np", ".", "min", "(", "x", ")))", "\n"], "logprobs": [-0.32491374015808105, -0.025696583092212677, -0.33272331953048706, -0.0882653146982193, -0.1364094316959381, -0.24836301803588867, -0.0029068617150187492, -1.1547012329101562, -0.10706863552331924, -0.2026263028383255, -3.158662796020508, -6.067568756407127e-05, -0.10198042541742325, -0.00013648532330989838, -0.006252964027225971, -0.015647374093532562, -0.03291068598628044, -0.07937678694725037, -0.0026519864331930876, -5.960462772236497e-07, -0.005034270230680704, -5.495397272170521e-05, -0.00047505536349490285, -0.004885521717369556, -0.00040284625720232725, -0.0002461368858348578, -2.3841830625315197e-06, -0.00010752100206445903, -2.682172998902388e-05, -0.00015448330668732524, -0.10680951178073883, -0.2584247589111328], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.008173351176083088, -0.20794010162353516], "finish_reason": "stop"}], "metrics": {"energy": 322.83753013134003, "energy_per_token": 4.247862238570264, "time": 8.008824, "time_per_token": 0.10537926315789474}}
{"outputs": [{"text": " {col: np.random.randint(min_value, max_value + 1, length) for col in COLUMNS}", "tokens": [" {", "col", ":", " np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", " +", " ", "1", ",", " length", ")", " for", " col", " in", " COL", "UM", "NS", "}", "\n"], "logprobs": [-1.1745457649230957, -1.360999584197998, -0.045823998749256134, -0.07524918764829636, -1.9311717551317997e-05, -0.010325700975954533, -7.510157047363464e-06, -0.15150488913059235, -0.08369180560112, -8.272782724816352e-05, -0.03173423185944557, -3.790783375734463e-05, -2.9802276912960224e-06, -0.0014373458689078689, -0.004177771974354982, -3.814689989667386e-06, -3.2186455882765586e-06, -1.0448124408721924, -0.0010836211731657386, -0.00015746307326480746, -0.009363308548927307, -0.5064190626144409, -0.005567639134824276, -0.0175150316208601, -0.00013755806139670312, -0.00012981049076188356, -0.0021111122332513332, -2.3841855067985307e-07, -2.90866428258596e-05, -0.0008538890979252756, -0.0016317160334438086], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.00036507140612229705, -4.172316494077677e-06, -0.0003319427778478712, -0.0004741021548397839, -0.005312373861670494, -0.05968812480568886, -0.0007541911327280104, -0.00856700912117958, -0.0008430502493865788, -1.0728830375228426e-06, -1.168244216387393e-05, -0.0015094802947714925, -0.00217189802788198], "finish_reason": "stop"}, {"text": " pd.concat([df[col].value_counts(normalize=True, sort=False).cumsum() for col in COLUMNS], axis=1)", "tokens": [" pd", ".", "concat", "([", "df", "[", "col", "]", ".", "value", "_", "counts", "(", "normal", "ize", "=", "True", ",", " sort", "=", "False", ")", ".", "cum", "sum", "()", " for", " col", " in", " COL", "UM", "NS", "]", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-1.5714752674102783, -1.1444026313256472e-05, -0.49920526146888733, -0.02767534740269184, -0.1468275785446167, -0.8590685129165649, -0.6803790926933289, -0.007173378020524979, -0.01928742229938507, -0.8597682118415833, -8.583032467868179e-06, -1.0728830375228426e-06, -0.12067759037017822, -0.022049514576792717, -5.960462772236497e-07, -0.007452425081282854, -0.0034538398031145334, -2.0450148582458496, -0.10806731879711151, -0.0032414060551673174, -0.003959436435252428, -0.010411708615720272, -0.025019343942403793, -0.2090321183204651, -3.933898824470816e-06, -0.004055728204548359, -0.24714909493923187, -0.0028490927070379257, -0.00026341783814132214, -0.44183099269866943, -2.3841855067985307e-07, -1.9073468138230965e-06, -0.03791562840342522, -0.0007375142886303365, -0.0026844439562410116, -0.004528861492872238, -0.004206143785268068, -0.046682778745889664, -0.08009864389896393], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.009721909649670124, -0.20722699165344238], "finish_reason": "stop"}], "metrics": {"energy": 393.5399487409592, "energy_per_token": 4.629881749893637, "time": 9.682082, "time_per_token": 0.11390684705882352}}
{"outputs": [{"text": " np.random.randint(min_value, max_value + 1, size=(length, len(COLUMNS)))", "tokens": [" np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", " +", " ", "1", ",", " size", "=(", "length", ",", " len", "(", "COL", "UM", "NS", ")))", "\n"], "logprobs": [-0.8538059592247009, -1.6689160474925302e-05, -0.006115652155131102, -2.9444261599564925e-05, -0.11542478948831558, -0.11822798103094101, -0.00011848701251437888, -0.08139795064926147, -4.410646579344757e-05, -1.1920922133867862e-06, -0.0017229963559657335, -0.009362482465803623, -5.960446742392378e-06, -5.006777428206988e-06, -1.115045189857483, -0.001459605642594397, -0.00023266946664080024, -0.0003343261778354645, -0.32039058208465576, -0.020917411893606186, -0.025205930694937706, -0.004305854439735413, -0.04336514323949814, -4.7205765440594405e-05, -0.0004231034545227885, -1.1920928244535389e-07, -5.5549986427649856e-05, -0.007881613448262215, -0.011374388821423054], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.00034671969478949904, -2.861018856492592e-06, -0.0003873551613651216, -0.00043525759247131646, -0.005120852496474981, -0.061690934002399445, -0.000844479538500309, -0.009459554217755795, -0.0008528171456418931, -1.0728830375228426e-06, -8.4638240878121e-06, -0.0014717471785843372, -0.0021096847485750914], "finish_reason": "stop"}, {"text": " df.applymap(lambda x: sum(x < np.mean(df))) / length", "tokens": [" df", ".", "apply", "map", "(", "lambda", " x", ":", " sum", "(", "x", " <", " np", ".", "mean", "(", "df", ")))", " /", " length", "\n"], "logprobs": [-0.3623692989349365, -0.025167452171444893, -0.31991803646087646, -1.8119008541107178, -0.0006540066679008305, -0.13963006436824799, -0.0033728161361068487, -0.003560396144166589, -1.8302415609359741, -0.10026082396507263, -1.1624019145965576, -2.274979829788208, -2.167970657348633, -0.00018046658078674227, -2.7753612995147705, -0.012063520960509777, -0.2476903647184372, -0.9278827905654907, -0.13228949904441833, -0.32045313715934753, -0.012118993327021599], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.008093063719570637, -0.2168464958667755], "finish_reason": "stop"}], "metrics": {"energy": 276.19556813430785, "energy_per_token": 4.249162586681659, "time": 7.1645846, "time_per_token": 0.11022437846153847}}
{"outputs": [{"text": " {column: np.random.randint(min_value, max_value + 1, length) for column in COLUMNS}", "tokens": [" {", "column", ":", " np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", " +", " ", "1", ",", " length", ")", " for", " column", " in", " COL", "UM", "NS", "}", "\n"], "logprobs": [-1.0524189472198486, -0.4579557478427887, -0.03256295993924141, -0.06406516581773758, -1.597391747054644e-05, -0.007844711653888226, -6.437280717364047e-06, -0.18216899037361145, -0.05382101610302925, -6.05564855504781e-05, -0.03374858200550079, -3.4927710657939315e-05, -2.264974000354414e-06, -0.0017105009173974395, -0.0036468682810664177, -4.172316494077677e-06, -3.576272320060525e-06, -1.2959108352661133, -0.0012029323261231184, -0.00017677174764685333, -0.00744272256270051, -0.5947570204734802, -0.003750316333025694, -0.025592127814888954, -0.0008976006065495312, -0.0001333863037871197, -0.002703465986996889, -1.1920928244535389e-07, -7.510157047363464e-06, -0.000734297966118902, -0.0014610340585932136], "finish_reason": "stop"}, {"text": " pd.DataFrame(data=data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", "=", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.00033444532891735435, -2.861018856492592e-06, -0.0002901133266277611, -0.0004003438516519964, -0.005257233511656523, -2.8715271949768066, -0.014497773721814156, -0.03245656564831734, -0.017365433275699615, -0.00890415534377098, -0.002069951966404915, -5.960462772236497e-07, -7.510157047363464e-06, -0.003972972277551889, -0.003418080974370241], "finish_reason": "stop"}, {"text": " df.apply(lambda x: np.linspace(0, 1, len(x)), axis=1).stack()", "tokens": [" df", ".", "apply", "(", "lambda", " x", ":", " np", ".", "l", "inspace", "(", "0", ",", " ", "1", ",", " len", "(", "x", "))", ",", " axis", "=", "1", ")", ".", "stack", "()", "\n"], "logprobs": [-0.2429143637418747, -0.021631615236401558, -0.36179688572883606, -0.10901327431201935, -0.12323028594255447, -0.22525914013385773, -0.002227684250101447, -1.7064327001571655, -9.894321920000948e-06, -3.4055979251861572, -0.01842479221522808, -0.004044567700475454, -0.08697479963302612, -0.03550166264176369, -0.03162740170955658, -0.0014690094394609332, -0.008093655109405518, -0.5274919271469116, -0.00011693747364915907, -0.0909338966012001, -0.41025614738464355, -0.054529834538698196, -0.031007448211312294, -0.02518581971526146, -2.7743711471557617, -0.04748739302158356, -2.5308287143707275, -3.4490036964416504, -0.0033308761194348335, -2.1468937397003174], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.00973702035844326, -0.19728879630565643], "finish_reason": "stop"}], "metrics": {"energy": 397.53513579940784, "energy_per_token": 5.096604305120613, "time": 9.678549, "time_per_token": 0.12408396153846155}}
{"outputs": [{"text": " np.random.randint(low=min_value, high=max_value+1, size=(length, len(COLUMNS)))", "tokens": [" np", ".", "random", ".", "rand", "int", "(", "low", "=", "min", "_", "value", ",", " high", "=", "max", "_", "value", "+", "1", ",", " size", "=(", "length", ",", " len", "(", "COL", "UM", "NS", ")))", "\n"], "logprobs": [-0.890537679195404, -1.2993727978027891e-05, -0.006076670717447996, -3.158996332786046e-05, -0.1298491656780243, -0.08883322030305862, -0.00012718822108581662, -2.596759080886841, -0.24469172954559326, -0.009863566607236862, -2.992108420585282e-05, -2.622600959512056e-06, -0.001983462367206812, -0.006796694360673428, -0.007030273787677288, -0.001191025716252625, -4.172316494077677e-06, -3.814689989667386e-06, -2.6363539695739746, -0.0008303055074065924, -0.00031382881570607424, -0.010793165303766727, -0.03650670498609543, -0.037550006061792374, -0.005517966579645872, -0.06627558171749115, -4.851700214203447e-05, -0.0003424296446610242, -1.1920928244535389e-07, -3.7431014789035544e-05, -0.03176795318722725, -0.013318384066224098], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.00031716562807559967, -2.861018856492592e-06, -0.0003979606262873858, -0.00043811736395582557, -0.0064635747112333775, -0.062196388840675354, -0.000685576000250876, -0.008572564460337162, -0.0008031480247154832, -8.344646857949556e-07, -7.986990567587782e-06, -0.0013438966125249863, -0.0018297373317182064], "finish_reason": "stop"}, {"text": " pd.DataFrame([df[col].value_counts(normalize=True).sort_index().cumsum() for col in COLUMNS]).T", "tokens": [" pd", ".", "DataFrame", "([", "df", "[", "col", "]", ".", "value", "_", "counts", "(", "normal", "ize", "=", "True", ")", ".", "sort", "_", "index", "()", ".", "cum", "sum", "()", " for", " col", " in", " COL", "UM", "NS", "])", ".", "T", "\n"], "logprobs": [-1.7061076164245605, -9.059865078597795e-06, -0.976335346698761, -0.9661316275596619, -1.2726408243179321, -0.01991678588092327, -0.5009053945541382, -0.0036745427642017603, -0.0058928802609443665, -0.1384967714548111, -5.8412379075889476e-06, -1.9073468138230965e-06, -0.1882583498954773, -0.06317664682865143, -3.576278118089249e-07, -0.008158216252923012, -0.0058088540099561214, -0.1205238476395607, -0.010159682482481003, -0.07810483872890472, -4.768370445162873e-07, -0.0014083001296967268, -0.00496416911482811, -0.032664962112903595, -0.0006656814948655665, -7.152531907195225e-06, -0.0005882440018467605, -0.05840233713388443, -0.000362807244528085, -0.0004914983292110264, -0.39719516038894653, -1.1920928244535389e-07, -5.722029527532868e-06, -2.160611152648926, -0.060981567949056625, -0.512678325176239, -0.04350907728075981], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.010450049303472042, -0.2282201200723648], "finish_reason": "stop"}], "metrics": {"energy": 403.8638271884917, "energy_per_token": 4.807902704624901, "time": 10.3019285, "time_per_token": 0.12264200595238096}}
{"outputs": [{"text": " np.random.randint(min_value, max_value, (length, len(COLUMNS)))", "tokens": [" np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", ",", " (", "length", ",", " len", "(", "COL", "UM", "NS", ")))", "\n"], "logprobs": [-0.890537679195404, -1.2993727978027891e-05, -0.006076670717447996, -3.158996332786046e-05, -0.1298491656780243, -0.08883322030305862, -0.00012718822108581662, -0.08414769172668457, -3.790783375734463e-05, -1.5497195136049413e-06, -0.0018355678766965866, -0.008755272254347801, -5.722029527532868e-06, -5.006777428206988e-06, -0.5803967714309692, -1.1304937601089478, -0.02396799996495247, -0.008851103484630585, -0.06366490572690964, -7.128461584215984e-05, -0.0004144048143643886, -1.1920928244535389e-07, -2.52720492426306e-05, -0.01766659878194332, -0.007376931607723236], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.0003351603518240154, -4.291525328881107e-06, -0.00036638224264606833, -0.0004142856632824987, -0.006247751414775848, -0.07465404272079468, -0.0007121411035768688, -0.007967712357640266, -0.0006684214458800852, -1.0728830375228426e-06, -5.8412379075889476e-06, -0.001358658540993929, -0.0023359174374490976], "finish_reason": "stop"}, {"text": " df.apply(lambda x: x.rank(method='dense') / len(x), axis=0)", "tokens": [" df", ".", "apply", "(", "lambda", " x", ":", " x", ".", "rank", "(", "method", "='", "dense", "')", " /", " len", "(", "x", ")", ",", " axis", "=", "0", ")", "\n"], "logprobs": [-0.34950563311576843, -0.023553812876343727, -0.3236611783504486, -0.1151907742023468, -0.11859555542469025, -0.252797931432724, -0.00296106212772429, -1.2520517110824585, -0.029293354600667953, -0.7894938588142395, -0.011101975105702877, -0.3489120900630951, -0.02287663333117962, -1.0419807434082031, -0.6931674480438232, -0.01016499288380146, -1.2324202060699463, -9.63164638960734e-05, -0.11026148498058319, -1.2601256370544434, -0.008769097737967968, -0.005398931913077831, -0.02440028078854084, -0.003438514657318592, -0.003988764248788357, -0.05008105933666229], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.01078974548727274, -0.23721012473106384], "finish_reason": "stop"}], "metrics": {"energy": 283.6780793666839, "energy_per_token": 4.298152717677029, "time": 7.157749, "time_per_token": 0.10845074242424242}}
{"outputs": [{"text": " {column: np.random.randint(min_value, max_value, length) for column in COLUMNS}", "tokens": [" {", "column", ":", " np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", ",", " length", ")", " for", " column", " in", " COL", "UM", "NS", "}", "\n"], "logprobs": [-1.2308144569396973, -0.5351054668426514, -0.03228044509887695, -0.07697344571352005, -1.4305012882687151e-05, -0.009598532691597939, -5.245195097813848e-06, -0.14257389307022095, -0.05896643549203873, -7.462222856702283e-05, -0.04206207022070885, -3.182837463100441e-05, -1.7881377516459906e-06, -0.0018239067867398262, -0.00406344560906291, -3.933898824470816e-06, -3.814689989667386e-06, -0.4545544683933258, -0.2026342749595642, -0.010655649937689304, -0.017350437119603157, -0.0006125480867922306, -0.00017355366435367614, -0.0026782616041600704, -2.3841855067985307e-07, -5.018585216021165e-05, -0.0008744944934733212, -0.0011368485866114497], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.00038580605178140104, -2.861018856492592e-06, -0.0003651905863080174, -0.0004553949984256178, -0.006062215194106102, -0.055910903960466385, -0.0006586528033949435, -0.008340763859450817, -0.0007626485894434154, -1.311301275563892e-06, -7.510157047363464e-06, -0.0013773487880825996, -0.0018468719208613038], "finish_reason": "stop"}, {"text": " df.apply(lambda x: (x - min_value) / (max_value - min_value))", "tokens": [" df", ".", "apply", "(", "lambda", " x", ":", " (", "x", " -", " min", "_", "value", ")", " /", " (", "max", "_", "value", " -", " min", "_", "value", "))", "\n"], "logprobs": [-0.32819706201553345, -0.026519764214754105, -0.3348865807056427, -0.11475010216236115, -0.11587546020746231, -0.27820733189582825, -0.0025870685931295156, -1.1820306777954102, -0.12741313874721527, -0.18715961277484894, -0.8138079047203064, -0.006721979938447475, -4.51792984677013e-05, -0.019750598818063736, -0.0011645924532786012, -0.02874782308936119, -0.0028877246659249067, -0.00020382710499688983, -4.172316494077677e-06, -0.0019302800064906478, -0.0011045790743082762, -1.5139465176616795e-05, -1.3947389561508317e-05, -0.17616499960422516, -0.14534179866313934], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.009656503796577454, -0.24862447381019592], "finish_reason": "stop"}], "metrics": {"energy": 303.2537848415374, "energy_per_token": 4.459614482963786, "time": 7.5642567, "time_per_token": 0.11123906911764705}}
{"outputs": [{"text": " np.random.randint(min_value, max_value, size=(length, len(COLUMNS)))", "tokens": [" np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", ",", " size", "=(", "length", ",", " len", "(", "COL", "UM", "NS", ")))", "\n"], "logprobs": [-0.9747173190116882, -1.7404405298293568e-05, -0.007593102753162384, -3.540453326422721e-05, -0.14465203881263733, -0.10397214442491531, -0.00015352977789007127, -0.07826920598745346, -3.85038583772257e-05, -1.311301275563892e-06, -0.0016335012624040246, -0.00990299042314291, -5.722029527532868e-06, -5.364403477869928e-06, -0.6829801797866821, -0.3945361077785492, -0.025417352095246315, -0.032252050936222076, -0.004403893370181322, -0.06064773350954056, -5.447716102935374e-05, -0.00044490929576568305, -1.1920928244535389e-07, -2.4914430468925275e-05, -0.01351210568100214, -0.006469141226261854], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.0003746046277228743, -2.861018856492592e-06, -0.0004011779965367168, -0.00046695294440723956, -0.0056471810676157475, -0.05798867344856262, -0.0006201728247106075, -0.007995858788490295, -0.0007215518853627145, -1.5497195136049413e-06, -5.8412379075889476e-06, -0.0013272295473143458, -0.0021074246615171432], "finish_reason": "stop"}, {"text": " df.apply(lambda col: col.value_counts(normalize=True).sort_index())", "tokens": [" df", ".", "apply", "(", "lambda", " col", ":", " col", ".", "value", "_", "counts", "(", "normal", "ize", "=", "True", ")", ".", "sort", "_", "index", "())", "\n"], "logprobs": [-0.29701462388038635, -0.022591136395931244, -0.25783559679985046, -0.12082888185977936, -0.11104695498943329, -1.8760628700256348, -0.002304519060999155, -0.6307827830314636, -0.03811187297105789, -0.42459946870803833, -1.2278481335670222e-05, -4.2676016164477915e-05, -0.39001476764678955, -0.22563478350639343, -3.576278118089249e-07, -0.005272175185382366, -0.007879721000790596, -0.04734857752919197, -0.0017121669370681047, -0.0500047467648983, -3.576278118089249e-07, -0.0004471732536330819, -1.4518916606903076, -0.539203941822052], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.008892104029655457, -0.2197752296924591], "finish_reason": "stop"}], "metrics": {"energy": 272.693091293335, "energy_per_token": 4.195278327589769, "time": 7.1560893, "time_per_token": 0.11009368153846154}}
{"outputs": [{"text": " np.random.randint(min_value, max_value + 1, (length, len(COLUMNS)))", "tokens": [" np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", " +", " ", "1", ",", " (", "length", ",", " len", "(", "COL", "UM", "NS", ")))", "\n"], "logprobs": [-0.890537679195404, -1.2993727978027891e-05, -0.006076670717447996, -3.158996332786046e-05, -0.1298491656780243, -0.08883322030305862, -0.00012718822108581662, -0.08414769172668457, -3.790783375734463e-05, -1.5497195136049413e-06, -0.0018355678766965866, -0.008755272254347801, -5.722029527532868e-06, -5.006777428206988e-06, -1.1625653505325317, -0.0012532960390672088, -0.00021264675888232887, -0.0002964295563288033, -1.3399854898452759, -0.021542368456721306, -0.009511275216937065, -0.04354126378893852, -6.735097849741578e-05, -0.0005092516075819731, -1.1920928244535389e-07, -6.222531374078244e-05, -0.00928016472607851, -0.01233637984842062], "finish_reason": "stop"}, {"text": " pd.DataFrame(data=data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", "=", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.00035339308669790626, -3.2186455882765586e-06, -0.00024148885859176517, -0.0004542034293990582, -0.006332925520837307, -2.730628728866577, -0.012432928197085857, -0.030290082097053528, -0.022444743663072586, -0.008848149329423904, -0.0023319926112890244, -8.344646857949556e-07, -8.22540732769994e-06, -0.003880472155287862, -0.0036056526005268097], "finish_reason": "stop"}, {"text": " df.apply(lambda x: np.cumsum(x) / length, axis=0)", "tokens": [" df", ".", "apply", "(", "lambda", " x", ":", " np", ".", "cum", "sum", "(", "x", ")", " /", " length", ",", " axis", "=", "0", ")", "\n"], "logprobs": [-0.39328762888908386, -0.023973004892468452, -0.3561200499534607, -0.12222849577665329, -0.15713758766651154, -0.209433913230896, -0.002557461615651846, -1.4500879049301147, -1.4305012882687151e-05, -0.9407525658607483, -0.003965373151004314, -0.005264348816126585, -0.549227237701416, -0.7003071904182434, -0.18225006759166718, -1.7791402339935303, -0.8839941620826721, -0.002388245891779661, -0.0208175927400589, -0.011681841686367989, -0.0034319807309657335, -0.05224134027957916], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.008277987129986286, -0.21467839181423187], "finish_reason": "stop"}], "metrics": {"energy": 308.3909243507385, "energy_per_token": 4.602849617175202, "time": 7.5817075, "time_per_token": 0.11315981343283582}}
{"outputs": [{"text": " {column: np.random.randint(min_value, max_value, length) for column in COLUMNS}", "tokens": [" {", "column", ":", " np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", ",", " length", ")", " for", " column", " in", " COL", "UM", "NS", "}", "\n"], "logprobs": [-1.1599127054214478, -0.4202278256416321, -0.026860196143388748, -0.06688220053911209, -1.597391747054644e-05, -0.008749599568545818, -6.198863957251888e-06, -0.17090316116809845, -0.05780439078807831, -7.354942499659956e-05, -0.0317331925034523, -3.886147169396281e-05, -1.7881377516459906e-06, -0.0016943159280344844, -0.0033235095907002687, -3.576272320060525e-06, -5.006777428206988e-06, -0.4152757525444031, -0.24890649318695068, -0.011123431846499443, -0.017385585233569145, -0.0005822870298288763, -0.00012694983161054552, -0.0026207170449197292, -2.3841855067985307e-07, -3.731181277544238e-05, -0.0007976687629707158, -0.0008649660157971084], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.00030191155383363366, -2.3841830625315197e-06, -0.00047743841423653066, -0.00041345154750160873, -0.004556986037641764, -0.06255602091550827, -0.0009728704462759197, -0.008555189706385136, -0.0007419217727147043, -1.1920922133867862e-06, -9.417489309271332e-06, -0.0015606615925207734, -0.001999404514208436], "finish_reason": "stop"}, {"text": " df.apply(lambda col: col.cumsum() / length, axis=0)", "tokens": [" df", ".", "apply", "(", "lambda", " col", ":", " col", ".", "cum", "sum", "()", " /", " length", ",", " axis", "=", "0", ")", "\n"], "logprobs": [-0.32457685470581055, -0.027578983455896378, -0.3174040615558624, -0.1265815943479538, -0.1556175798177719, -1.8631399869918823, -0.0025819556321948767, -0.5856620669364929, -0.020023472607135773, -2.1620352268218994, -0.002385629341006279, -0.045665934681892395, -0.24261091649532318, -1.4668867588043213, -0.916577935218811, -0.0010116941994056106, -0.025935199111700058, -0.004919211380183697, -0.011631057597696781, -0.08832851052284241], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.008220645599067211, -0.21534141898155212], "finish_reason": "stop"}], "metrics": {"energy": 283.64922928810114, "energy_per_token": 4.502368718858748, "time": 7.358209, "time_per_token": 0.11679696825396826}}
{"outputs": [{"text": " pd.DataFrame({column: np.random.rand(length) * (max_value - min_value) + min_value for column in COLUMNS})", "tokens": [" pd", ".", "DataFrame", "({", "column", ":", " np", ".", "random", ".", "rand", "(", "length", ")", " *", " (", "max", "_", "value", " -", " min", "_", "value", ")", " +", " min", "_", "value", " for", " column", " in", " COL", "UM", "NS", "})", "\n"], "logprobs": [-1.9039082527160645, -9.775113539944869e-06, -0.014545592479407787, -1.7382036447525024, -0.789472758769989, -0.061548810452222824, -0.08282440900802612, -1.6689286894688848e-06, -0.011236482299864292, -3.6954811548639555e-06, -0.18318261206150055, -2.5302183628082275, -0.005100690294057131, -0.04177525267004967, -0.6690273284912109, -0.07261663675308228, -0.0028247239533811808, -4.470248313737102e-05, -9.179073458653875e-06, -0.03217124938964844, -0.0014317509485408664, -1.6331539882230572e-05, -4.529942543740617e-06, -0.0027526842895895243, -0.007105912081897259, -0.001599105424247682, -8.583032467868179e-06, -4.6491513785440475e-06, -0.027419747784733772, -0.001073261140845716, -0.0003352795320097357, -0.0034780744463205338, -3.576278118089249e-07, -0.0001062098381225951, -0.02546651102602482, -0.0019595485646277666], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.00036507140612229705, -4.172316494077677e-06, -0.0003319427778478712, -0.0004741021548397839, -0.005312373861670494, -0.05968812480568886, -0.0007541911327280104, -0.00856700912117958, -0.0008430502493865788, -1.0728830375228426e-06, -1.168244216387393e-05, -0.0015094802947714925, -0.00217189802788198], "finish_reason": "stop"}, {"text": " pd.concat([df, pd.DataFrame({col: df[col].rank(method='dense', ascending=True) / len(df) for col in COLUMNS})], axis=1)", "tokens": [" pd", ".", "concat", "([", "df", ",", " pd", ".", "DataFrame", "({", "col", ":", " df", "[", "col", "]", ".", "rank", "(", "method", "='", "dense", "'", ",", " ascending", "=", "True", ")", " /", " len", "(", "df", ")", " for", " col", " in", " COL", "UM", "NS", "})]", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-1.5714752674102783, -1.1444026313256472e-05, -0.49920526146888733, -0.02767534740269184, -0.1468275785446167, -1.0394350290298462, -1.3381530046463013, -0.00012015574611723423, -0.10203327983617783, -1.2984485626220703, -0.515093982219696, -0.07949602603912354, -0.6372309327125549, -0.009204808622598648, -0.0004151197790633887, -0.0021034989040344954, -0.023807955905795097, -0.7954229712486267, -0.02201196551322937, -0.07578618079423904, -0.03024798259139061, -1.484981656074524, -0.20747928321361542, -1.6093124941107817e-05, -0.14932720363140106, -0.0019336113473400474, -0.06799053400754929, -0.0767824724316597, -0.030112076550722122, -1.8051661252975464, -0.0002768848498817533, -0.0012534151319414377, -0.08985953778028488, -0.030230402946472168, -7.688703772146255e-05, -0.00013004888023715466, -0.6721043586730957, -1.1920928244535389e-07, -1.2278481335670222e-05, -0.029086917638778687, -0.00022933237778488547, -0.009419758804142475, -0.007211488205939531, -0.008156916126608849, -0.006560336332768202, -0.005288064945489168], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.009721909649670124, -2.2091457843780518, -2.0265558760002023e-06, -1.0728830375228426e-06, -3.4570634852570947e-06, -2.8013790142722428e-05, -0.1630234569311142], "finish_reason": "stop"}], "metrics": {"energy": 449.5266174983977, "energy_per_token": 4.407123700964683, "time": 11.157116, "time_per_token": 0.10938349019607843}}
{"outputs": [{"text": " {", "tokens": [" {", "\n"], "logprobs": [-1.2308144569396973, -2.237074613571167], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.00038580605178140104, -2.861018856492592e-06, -0.0003651905863080174, -0.0004553949984256178, -0.006062215194106102, -0.055910903960466385, -0.0006586528033949435, -0.008340763859450817, -0.0007626485894434154, -1.311301275563892e-06, -7.510157047363464e-06, -0.0013773487880825996, -0.0018468719208613038], "finish_reason": "stop"}, {"text": " pd.concat([df[column].value_counts(normalize=True).sort_index().cumsum() for column in COLUMNS], axis=1, keys=COLUMNS)", "tokens": [" pd", ".", "concat", "([", "df", "[", "column", "]", ".", "value", "_", "counts", "(", "normal", "ize", "=", "True", ")", ".", "sort", "_", "index", "()", ".", "cum", "sum", "()", " for", " column", " in", " COL", "UM", "NS", "]", ",", " axis", "=", "1", ",", " keys", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-1.4994425773620605, -7.510157047363464e-06, -0.4567529261112213, -0.02632494643330574, -0.10772915184497833, -0.8118305206298828, -1.146780252456665, -0.02460419572889805, -0.009263982996344566, -0.7066152095794678, -1.0490362910786644e-05, -2.145764938177308e-06, -0.14595691859722137, -0.022158421576023102, -3.576278118089249e-07, -0.009810801595449448, -0.004533845465630293, -0.18112123012542725, -0.017649265006184578, -0.22100408375263214, -4.768370445162873e-07, -0.002099573379382491, -0.003052458632737398, -0.021233849227428436, -0.00041654970846138895, -2.264974000354414e-06, -0.0033324207179248333, -0.11482130736112595, -0.0015581621555611491, -0.00028451209072954953, -0.22942934930324554, 0.0, -1.549708758830093e-05, -0.02291857823729515, -0.000614335120189935, -0.004332561045885086, -0.0044450764544308186, -0.0060169510543346405, -2.7350873947143555, -0.018271584063768387, -0.005797120276838541, -0.004390363115817308, -3.099436753473128e-06, -3.6000557884108275e-05, -0.005215728189796209, -0.034348294138908386], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.010500185191631317, -0.19973108172416687], "finish_reason": "stop"}], "metrics": {"energy": 314.57248875617984, "energy_per_token": 4.9932141072409495, "time": 7.5758085, "time_per_token": 0.12025092857142856}}
{"outputs": [{"text": " np.random.randint(low = min_value, high = max_value, size = (length, len(COLUMNS)))", "tokens": [" np", ".", "random", ".", "rand", "int", "(", "low", " =", " min", "_", "value", ",", " high", " =", " max", "_", "value", ",", " size", " =", " (", "length", ",", " len", "(", "COL", "UM", "NS", ")))", "\n"], "logprobs": [-0.8588815927505493, -1.4424220353248529e-05, -0.006919232662767172, -3.576214658096433e-05, -0.11708756536245346, -0.11256226152181625, -0.0001419681793777272, -2.4886059761047363, -1.554186224937439, -0.005608299747109413, -2.276871418871451e-05, -3.099436753473128e-06, -0.0018196230521425605, -0.015282205305993557, -0.011258878745138645, -0.0025928947143256664, -5.483612312673358e-06, -1.07287787614041e-05, -0.11923643946647644, -0.009280518628656864, -0.08305328339338303, -0.03809156268835068, -0.03654888644814491, -0.009950557723641396, -0.042999912053346634, -0.00048232366680167615, -0.0006858142442069948, -1.1920928244535389e-07, -3.433168603805825e-05, -0.057592280209064484, -0.005805179942399263], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.0003564914222806692, -2.622600959512056e-06, -0.0005420169327408075, -0.00043466180795803666, -0.0055276877246797085, -0.0698087215423584, -0.0007227431051433086, -0.007446035742759705, -0.0007692000363022089, -9.536738616588991e-07, -7.510157047363464e-06, -0.0016211237525567412, -0.0022230453323572874], "finish_reason": "stop"}, {"text": " df.apply(lambda x: np.sort(np.hstack((x, np.arange(length)))))", "tokens": [" df", ".", "apply", "(", "lambda", " x", ":", " np", ".", "sort", "(", "np", ".", "h", "stack", "((", "x", ",", " np", ".", "ar", "ange", "(", "length", "))", ")))", "\n"], "logprobs": [-0.3722476065158844, -0.025151992216706276, -0.32191771268844604, -0.1729690432548523, -0.12882955372333527, -0.21586692333221436, -0.002586117247119546, -1.4212565422058105, -1.0490362910786644e-05, -0.6109442710876465, -0.004945308435708284, -0.04790939763188362, -6.079655122448457e-06, -3.2150352001190186, -1.2636104656849056e-05, -0.6492952108383179, -1.2301304340362549, -0.11746063828468323, -0.29597392678260803, -3.3378546504536644e-06, -1.529246211051941, -1.7881233361549675e-05, -0.004998212214559317, -2.9684789180755615, -0.5836533308029175, -1.623687744140625, -0.22865602374076843], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.009429795667529106, -0.2244981825351715], "finish_reason": "stop"}], "metrics": {"energy": 331.18025031280524, "energy_per_token": 4.536715757709661, "time": 7.986829, "time_per_token": 0.10940861643835617}}
{"outputs": [{"text": " pd.DataFrame(np.random.randint(min_value, max_value, (length, len(COLUMNS))), columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", ",", " (", "length", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-1.9039082527160645, -9.775113539944869e-06, -0.014545592479407787, -0.22727452218532562, -0.09890979528427124, -2.264974000354414e-06, -0.003918945789337158, -8.34461570775602e-06, -0.06080692633986473, -0.10542665421962738, -0.000164018536452204, -0.03574623167514801, -3.421248038648628e-05, -1.311301275563892e-06, -0.003161672269925475, -0.011145948432385921, -6.556489552167477e-06, -4.410734163684538e-06, -0.40416330099105835, -0.5115212202072144, -0.02157631888985634, -0.011453471146523952, -0.03530363738536835, -5.3165931603871286e-05, -0.0007134514744393528, -1.1920928244535389e-07, -2.0503786799963564e-05, -0.3967992961406708, -0.0034016859717667103, -0.02188403159379959, -0.039898909628391266, -0.002188313053920865, -2.3841855067985307e-07, -3.576272320060525e-06, -0.0023356794845312834, -0.0036471060011535883], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.00036507140612229705, -4.172316494077677e-06, -0.0003319427778478712, -0.0004741021548397839, -0.005312373861670494, -0.05968812480568886, -0.0007541911327280104, -0.00856700912117958, -0.0008430502493865788, -1.0728830375228426e-06, -1.168244216387393e-05, -0.0015094802947714925, -0.00217189802788198], "finish_reason": "stop"}, {"text": " pd.concat([df, df.apply(lambda x: x.value_counts(normalize=True).sort_index().cumsum())], axis=1)", "tokens": [" pd", ".", "concat", "([", "df", ",", " df", ".", "apply", "(", "lambda", " x", ":", " x", ".", "value", "_", "counts", "(", "normal", "ize", "=", "True", ")", ".", "sort", "_", "index", "()", ".", "cum", "sum", "()", ")]", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-1.5714752674102783, -1.1444026313256472e-05, -0.49920526146888733, -0.02767534740269184, -0.1468275785446167, -1.0394350290298462, -0.43986430764198303, -0.03173654153943062, -0.9686171412467957, -0.01811683177947998, -0.3822162449359894, -0.2771447002887726, -0.002331873867660761, -1.5307559967041016, -0.043342430144548416, -0.9387897253036499, -6.19869097135961e-05, -3.1470757676288486e-05, -0.22570441663265228, -0.168443962931633, -4.768370445162873e-07, -0.006270259618759155, -0.009354687295854092, -0.018372008576989174, -0.0038174153305590153, -0.048171401023864746, -1.0728830375228426e-06, -0.0007295330869965255, -0.011826872825622559, -0.0024227334652096033, -0.0004814896092284471, -8.344646857949556e-07, -0.037870753556489944, -0.2446378767490387, -0.006945277564227581, -0.003877741051837802, -0.002394429873675108, -0.00600948603823781, -0.009420230984687805, -0.005805179942399263], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.009721909649670124, -0.20722699165344238], "finish_reason": "stop"}], "metrics": {"energy": 422.0995494880678, "energy_per_token": 4.638456587780965, "time": 10.102037, "time_per_token": 0.1110113956043956}}
{"outputs": [{"text": " np.random.randint(min_value, max_value + 1, size=(length, len(COLUMNS)))", "tokens": [" np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", " +", " ", "1", ",", " size", "=(", "length", ",", " len", "(", "COL", "UM", "NS", ")))", "\n"], "logprobs": [-0.8538059592247009, -1.6689160474925302e-05, -0.006115652155131102, -2.9444261599564925e-05, -0.11542478948831558, -0.11822798103094101, -0.00011848701251437888, -0.08139795064926147, -4.410646579344757e-05, -1.1920922133867862e-06, -0.0017229963559657335, -0.009362482465803623, -5.960446742392378e-06, -5.006777428206988e-06, -1.115045189857483, -0.001459605642594397, -0.00023266946664080024, -0.0003343261778354645, -0.32039058208465576, -0.020917411893606186, -0.025205930694937706, -0.004305854439735413, -0.04336514323949814, -4.7205765440594405e-05, -0.0004231034545227885, -1.1920928244535389e-07, -5.5549986427649856e-05, -0.007881613448262215, -0.011374388821423054], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.00034671969478949904, -2.861018856492592e-06, -0.0003873551613651216, -0.00043525759247131646, -0.005120852496474981, -0.061690934002399445, -0.000844479538500309, -0.009459554217755795, -0.0008528171456418931, -1.0728830375228426e-06, -8.4638240878121e-06, -0.0014717471785843372, -0.0021096847485750914], "finish_reason": "stop"}, {"text": " pd.concat([df[col].rank(pct=True) for col in df], axis=1)", "tokens": [" pd", ".", "concat", "([", "df", "[", "col", "]", ".", "rank", "(", "p", "ct", "=", "True", ")", " for", " col", " in", " df", "]", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-1.3943288326263428, -1.0609570381348021e-05, -0.5865873098373413, -0.02765122801065445, -0.13670185208320618, -0.7228883504867554, -0.7352492809295654, -0.00784518476575613, -0.025079218670725822, -0.9431251883506775, -0.007567784748971462, -0.32164067029953003, -2.3245540432981215e-05, -0.031114691868424416, -0.000964295701123774, -0.035442061722278595, -0.05448806658387184, -0.0007223857101053, -0.0001991788885788992, -0.9674637913703918, -1.0251471996307373, -0.00032872517476789653, -0.002806892851367593, -0.02302459441125393, -0.008244291879236698, -0.050196025520563126, -0.062116291373968124], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.009515762329101562, -0.17429910600185394], "finish_reason": "stop"}], "metrics": {"energy": 293.7659322414399, "energy_per_token": 4.13754834142873, "time": 7.979656, "time_per_token": 0.11238952112676057}}
{"outputs": [{"text": " {col: np.random.randint(min_value, max_value + 1, length) for col in COLUMNS}", "tokens": [" {", "col", ":", " np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", " +", " ", "1", ",", " length", ")", " for", " col", " in", " COL", "UM", "NS", "}", "\n"], "logprobs": [-1.2461203336715698, -1.2021287679672241, -0.03950616344809532, -0.06271032243967056, -1.9907753085135482e-05, -0.011219154112040997, -5.245195097813848e-06, -0.12247078120708466, -0.06368045508861542, -5.602679812000133e-05, -0.032088134437799454, -3.58813522325363e-05, -1.6689286894688848e-06, -0.001158996019512415, -0.0038171776104718447, -4.172316494077677e-06, -2.622600959512056e-06, -1.2039762735366821, -0.0008547228644602001, -0.00016509123088326305, -0.012177643366158009, -0.40311017632484436, -0.0056412541307508945, -0.021748850122094154, -0.00013731967192143202, -0.0001102625101339072, -0.0021435872185975313, -2.3841855067985307e-07, -2.1219027985353023e-05, -0.0008981961291283369, -0.0016607552533969283], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.0003748429589904845, -2.622600959512056e-06, -0.00042715485324151814, -0.000359351426595822, -0.006949183996766806, -0.053372904658317566, -0.0008394769974984229, -0.008077099919319153, -0.0007664603181183338, -1.0728830375228426e-06, -8.106198947643861e-06, -0.0013294914970174432, -0.0020816102623939514], "finish_reason": "stop"}, {"text": " df.apply(lambda x: x.rank(method='min') / len(x))", "tokens": [" df", ".", "apply", "(", "lambda", " x", ":", " x", ".", "rank", "(", "method", "='", "min", "')", " /", " len", "(", "x", "))", "\n"], "logprobs": [-0.3121553063392639, -0.02322087064385414, -0.3728604018688202, -0.14713364839553833, -0.10062632709741592, -0.2613292336463928, -0.002368147252127528, -1.3314907550811768, -0.029600555077195168, -0.8897017240524292, -0.011168582364916801, -0.21938809752464294, -0.02030082605779171, -0.5015721321105957, -0.044960375875234604, -0.016774436458945274, -1.6032061576843262, -0.00011801023356383666, -0.1847194880247116, -0.2969174385070801, -0.011507327668368816], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.00738142803311348, -0.19912873208522797], "finish_reason": "stop"}], "metrics": {"energy": 316.1231070232392, "energy_per_token": 4.718255328705062, "time": 7.9924016, "time_per_token": 0.11928957611940298}}
{"outputs": [{"text": " {column: np.random.randint(min_value, max_value + 1, length) for column in COLUMNS}", "tokens": [" {", "column", ":", " np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", " +", " ", "1", ",", " length", ")", " for", " column", " in", " COL", "UM", "NS", "}", "\n"], "logprobs": [-1.1745457649230957, -0.46379798650741577, -0.031413476914167404, -0.06934870034456253, -1.585470999998506e-05, -0.011731915175914764, -6.794906312279636e-06, -0.18448172509670258, -0.05625613033771515, -6.55629628454335e-05, -0.02921891212463379, -3.40932747349143e-05, -1.7881377516459906e-06, -0.001408776268362999, -0.0035129995085299015, -4.410734163684538e-06, -4.172316494077677e-06, -1.1774230003356934, -0.0011185110779479146, -0.00018439977429807186, -0.0071184588596224785, -0.647706151008606, -0.004629489034414291, -0.023585015907883644, -0.0007631250191479921, -0.00012814177898690104, -0.0023450751323252916, -1.1920928244535389e-07, -8.821448318485636e-06, -0.0007543102256022394, -0.0012728216825053096], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.00036507140612229705, -4.172316494077677e-06, -0.0003319427778478712, -0.0004741021548397839, -0.005312373861670494, -0.05968812480568886, -0.0007541911327280104, -0.00856700912117958, -0.0008430502493865788, -1.0728830375228426e-06, -1.168244216387393e-05, -0.0015094802947714925, -0.00217189802788198], "finish_reason": "stop"}, {"text": " df.apply(lambda col: np.cumsum(np.bincount(col.astype(np.int64), minlength=max_value) / length), axis=0)", "tokens": [" df", ".", "apply", "(", "lambda", " col", ":", " np", ".", "cum", "sum", "(", "np", ".", "b", "inc", "ount", "(", "col", ".", "ast", "ype", "(", "np", ".", "int", "6", "4", ")", ",", " min", "length", "=", "max", "_", "value", ")", " /", " length", ")", ",", " axis", "=", "0", ")", "\n"], "logprobs": [-0.30311518907546997, -0.02060764841735363, -0.28618064522743225, -0.16673271358013153, -0.10751131176948547, -1.9290707111358643, -0.00258421478793025, -2.1101162433624268, -1.597391747054644e-05, -1.6949682235717773, -0.010128174908459187, -0.006270851939916611, -2.1636040210723877, -5.364403477869928e-06, -2.51041841506958, -7.629365427419543e-06, -1.1920922133867862e-06, -0.00031835734262131155, -0.05105604603886604, -1.4402631521224976, -0.5089817047119141, 0.0, -0.1452367603778839, -2.042290449142456, -5.364403477869928e-06, -0.04350896179676056, -0.6166059374809265, -1.1920922133867862e-06, -0.30215370655059814, -0.02593531459569931, -0.001086717238649726, -0.0001726001501083374, -0.00601552939042449, -0.08781665563583374, -0.004381224047392607, -4.446407547220588e-05, -1.114729642868042, -0.06056975573301315, -0.15203697979450226, -0.41673797369003296, -0.037549663335084915, -0.02606133744120598, -0.012963895685970783, -0.009108302183449268, -0.009511156938970089, -0.08814362436532974], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.009600894525647163, -0.20716546475887299], "finish_reason": "stop"}], "metrics": {"energy": 420.15736384010336, "energy_per_token": 4.566927867827211, "time": 10.309008, "time_per_token": 0.1120544347826087}}
{"outputs": [{"text": " np.random.randint(min_value, max_value + 1, size=(length, len(COLUMNS)))", "tokens": [" np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", " +", " ", "1", ",", " size", "=(", "length", ",", " len", "(", "COL", "UM", "NS", ")))", "\n"], "logprobs": [-0.8075991272926331, -1.0609570381348021e-05, -0.006423659157007933, -3.540453326422721e-05, -0.09700067341327667, -0.09530987590551376, -0.00014184899919200689, -0.06475301831960678, -2.9801878554280847e-05, -1.4305104514278355e-06, -0.0016417133156210184, -0.00972096435725689, -6.318072337307967e-06, -5.006777428206988e-06, -1.011974573135376, -0.001069331425242126, -0.0002097863471135497, -0.0002739054325502366, -0.20409375429153442, -0.021195217967033386, -0.019752586260437965, -0.003959673922508955, -0.04143677279353142, -4.637133679352701e-05, -0.00045217780279926956, -1.1920928244535389e-07, -4.851700214203447e-05, -0.0071220095269382, -0.011848903261125088], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.0002833203470800072, -2.3841830625315197e-06, -0.0003819928097072989, -0.000446696620201692, -0.005278460215777159, -0.06390481442213058, -0.0008665143977850676, -0.00813149381428957, -0.0006600823253393173, -1.0728830375228426e-06, -8.22540732769994e-06, -0.001493292162194848, -0.0022955990862101316], "finish_reason": "stop"}, {"text": " df.apply(lambda col: (col - min_value) / (max_value - min_value))", "tokens": [" df", ".", "apply", "(", "lambda", " col", ":", " (", "col", " -", " min", "_", "value", ")", " /", " (", "max", "_", "value", " -", " min", "_", "value", "))", "\n"], "logprobs": [-0.32491374015808105, -0.025696583092212677, -0.33272331953048706, -0.0882653146982193, -0.1364094316959381, -1.7395663261413574, -0.0030164476484060287, -1.5904548168182373, -0.14302468299865723, -0.09845691919326782, -0.6950562596321106, -0.0035383019130676985, -2.455681169521995e-05, -0.013827131129801273, -0.0011948358733206987, -0.024104511365294456, -0.004736157599836588, -0.00013755806139670312, -4.529942543740617e-06, -0.0015842280117794871, -0.0009753713966347277, -8.4638240878121e-06, -1.4662635294371285e-05, -0.14783208072185516, -0.14570747315883636], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.007848851382732391, -0.20828184485435486], "finish_reason": "stop"}], "metrics": {"energy": 286.21418406295777, "energy_per_token": 4.148031653086345, "time": 7.591387, "time_per_token": 0.11002010144927536}}
{"outputs": [{"text": " np.random.randint(min_value, max_value, (length, len(COLUMNS)))", "tokens": [" np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", ",", " (", "length", ",", " len", "(", "COL", "UM", "NS", ")))", "\n"], "logprobs": [-0.808240532875061, -1.6689160474925302e-05, -0.007101177237927914, -3.0874729418428615e-05, -0.106265127658844, -0.09489960223436356, -0.00011419598013162613, -0.06995512545108795, -4.2437604861333966e-05, -1.9073468138230965e-06, -0.0015764916315674782, -0.008537815883755684, -6.318072337307967e-06, -5.245195097813848e-06, -0.6859803199768066, -1.2069817781448364, -0.022075168788433075, -0.008790840394794941, -0.05109512433409691, -7.652943895664066e-05, -0.0003962923656217754, -1.1920928244535389e-07, -2.5152843591058627e-05, -0.0144360875710845, -0.007316816598176956], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.00032395837479270995, -3.099436753473128e-06, -0.0003592322755139321, -0.0004967409186065197, -0.006124419625848532, -0.07200172543525696, -0.0007986216805875301, -0.00810335110872984, -0.0008677055011503398, -1.0728830375228426e-06, -9.179073458653875e-06, -0.0014112761709839106, -0.001796776195988059], "finish_reason": "stop"}, {"text": " df.cumsum() / length", "tokens": [" df", ".", "cum", "sum", "()", " /", " length", "\n"], "logprobs": [-0.3332664966583252, -0.023384269326925278, -1.9488838911056519, -0.016711601987481117, -0.16200388967990875, -1.2166270017623901, -0.3312548100948334, -0.020518193021416664], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.008278341963887215, -0.2195393294095993], "finish_reason": "stop"}], "metrics": {"energy": 208.3481664676666, "energy_per_token": 4.340586801409721, "time": 5.9127855, "time_per_token": 0.12318303125}}
{"outputs": [{"text": " np.random.randint(min_value, max_value+1, size=(length, len(COLUMNS)))", "tokens": [" np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", "+", "1", ",", " size", "=(", "length", ",", " len", "(", "COL", "UM", "NS", ")))", "\n"], "logprobs": [-0.9747173190116882, -1.7404405298293568e-05, -0.007593102753162384, -3.540453326422721e-05, -0.14465203881263733, -0.10397214442491531, -0.00015352977789007127, -0.07826920598745346, -3.85038583772257e-05, -1.311301275563892e-06, -0.0016335012624040246, -0.00990299042314291, -5.722029527532868e-06, -5.364403477869928e-06, -2.0658459663391113, -0.0009083197801373899, -0.0003871168300975114, -0.26739877462387085, -0.027073821052908897, -0.019006861373782158, -0.004109510220587254, -0.0631035715341568, -4.494089080253616e-05, -0.00048232366680167615, 0.0, -1.6927575416048057e-05, -0.010425393469631672, -0.00985908042639494], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.00035208225017413497, -2.861018856492592e-06, -0.00048530244384892285, -0.0004935238393954933, -0.005438769701868296, -0.059747304767370224, -0.0008216104470193386, -0.007018199656158686, -0.0007400158210657537, -1.1920922133867862e-06, -8.702239938429557e-06, -0.0013729440979659557, -0.00218414980918169], "finish_reason": "stop"}, {"text": " pd.concat([df[c].rank(pct=True) for c in COLUMNS], axis=1)", "tokens": [" pd", ".", "concat", "([", "df", "[", "c", "]", ".", "rank", "(", "p", "ct", "=", "True", ")", " for", " c", " in", " COL", "UM", "NS", "]", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-1.4441291093826294, -7.867782187531702e-06, -0.48427578806877136, -0.025365633890032768, -0.14448945224285126, -0.9363335967063904, -3.0476574897766113, -0.005697202868759632, -0.05317239835858345, -0.6348406672477722, -0.007117156405001879, -0.2967950999736786, -3.7788631743751466e-05, -0.0310076791793108, -0.0011311330599710345, -0.06216703727841377, -0.059491127729415894, -0.00017653337272349745, -0.00010382589971413836, -0.5115344524383545, 0.0, -2.3841830625315197e-06, -0.03214827924966812, -0.0012396040838211775, -0.0042177774012088776, -0.018291015177965164, -0.006058897357434034, -0.13396860659122467, -0.036227717995643616], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.009692630730569363, -0.21947930753231049], "finish_reason": "stop"}], "metrics": {"energy": 320.02594744491574, "energy_per_token": 4.44480482562383, "time": 8.008264, "time_per_token": 0.1112258888888889}}
{"outputs": [{"text": " pd.DataFrame(np.random.rand(length, len(COLUMNS)), columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "(", "length", ",", " len", "(", "COL", "UM", "NS", "))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-1.9039082527160645, -9.775113539944869e-06, -0.014545592479407787, -0.22727452218532562, -0.09890979528427124, -2.264974000354414e-06, -0.003918945789337158, -8.34461570775602e-06, -0.06080692633986473, -2.326446294784546, -0.033938270062208176, -0.04831237345933914, -0.07073179632425308, -4.541770613286644e-05, -0.0004135706985834986, -1.1920928244535389e-07, -2.4914430468925275e-05, -0.0911368727684021, -0.5379000902175903, -0.05704193189740181, -0.07819247990846634, -0.0035453103482723236, -5.960462772236497e-07, -3.576272320060525e-06, -0.003584271762520075, -0.06529735028743744], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.00036507140612229705, -4.172316494077677e-06, -0.0003319427778478712, -0.0004741021548397839, -0.005312373861670494, -0.05968812480568886, -0.0007541911327280104, -0.00856700912117958, -0.0008430502493865788, -1.0728830375228426e-06, -1.168244216387393e-05, -0.0015094802947714925, -0.00217189802788198], "finish_reason": "stop"}, {"text": " df.cumsum() / length", "tokens": [" df", ".", "cum", "sum", "()", " /", " length", "\n"], "logprobs": [-0.30311518907546997, -0.02060764841735363, -2.0748445987701416, -0.010147292166948318, -0.16678236424922943, -1.0580384731292725, -0.3819803297519684, -0.021430127322673798], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.00858261063694954, -0.19965961575508118], "finish_reason": "stop"}], "metrics": {"energy": 237.63121640968325, "energy_per_token": 4.8496166614221075, "time": 6.3210244, "time_per_token": 0.12900049795918367}}
{"outputs": [{"text": " np.random.randint(min_value, max_value, (length, len(COLUMNS)))", "tokens": [" np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", ",", " (", "length", ",", " len", "(", "COL", "UM", "NS", ")))", "\n"], "logprobs": [-0.9747173190116882, -1.7404405298293568e-05, -0.007593102753162384, -3.540453326422721e-05, -0.14465203881263733, -0.10397214442491531, -0.00015352977789007127, -0.07826920598745346, -3.85038583772257e-05, -1.311301275563892e-06, -0.0016335012624040246, -0.00990299042314291, -5.722029527532868e-06, -5.364403477869928e-06, -0.6829801797866821, -1.157979130744934, -0.021864788606762886, -0.007896870374679565, -0.07153338938951492, -8.11782301752828e-05, -0.00041547726141288877, -1.1920928244535389e-07, -1.6689160474925302e-05, -0.015821635723114014, -0.006755963433533907], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.00033706706017255783, -2.861018856492592e-06, -0.00037448544753715396, -0.0004673104267567396, -0.005450862925499678, -0.052481282502412796, -0.0008120815036818385, -0.009728874079883099, -0.0007659838884137571, -1.0728830375228426e-06, -8.106198947643861e-06, -0.001378896413370967, -0.0022684813011437654], "finish_reason": "stop"}, {"text": " pd.DataFrame({column: df[column].value_counts().sort_index().cumsum() / length for column in df.columns})", "tokens": [" pd", ".", "DataFrame", "({", "column", ":", " df", "[", "column", "]", ".", "value", "_", "counts", "()", ".", "sort", "_", "index", "()", ".", "cum", "sum", "()", " /", " length", " for", " column", " in", " df", ".", "columns", "})", "\n"], "logprobs": [-1.4974247217178345, -7.629365427419543e-06, -1.029329538345337, -1.652154564857483, -0.9989542961120605, -0.025301940739154816, -0.46455782651901245, -0.006704573519527912, -0.0007515705074183643, -0.0023289003875106573, -0.009964012540876865, -0.815930187702179, -5.960446742392378e-06, -2.47952248173533e-05, -1.5287365913391113, -0.05960850045084953, -0.04231303930282593, -9.536738616588991e-07, -0.008039141073822975, -0.028694191947579384, -0.060570430010557175, -0.03119615651667118, -4.768258077092469e-05, -0.002041638595983386, -0.2797729969024658, -0.22303634881973267, -0.12052786350250244, -0.00037865620106458664, -0.00025042734341695905, -0.9616712331771851, -0.6158505082130432, -8.356221951544285e-05, -0.032974474132061005, -0.10872118920087814], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.010716035962104797, -0.21010206639766693], "finish_reason": "stop"}], "metrics": {"energy": 330.3107063398363, "energy_per_token": 4.463658193781572, "time": 8.412012, "time_per_token": 0.11367583783783784}}
{"outputs": [{"text": " [np.random.randint(min_value, max_value+1, length) for _ in COLUMNS]", "tokens": [" [", "np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", "+", "1", ",", " length", ")", " for", " _", " in", " COL", "UM", "NS", "]", "\n"], "logprobs": [-3.1773552894592285, -0.11484310030937195, -2.8371408916427754e-05, -0.01770923100411892, -4.8040190449682996e-05, -0.21709397435188293, -0.06526117026805878, -0.0001212284987559542, -0.025037365034222603, -2.90866428258596e-05, -1.6689286894688848e-06, -0.0031551364809274673, -0.0065177008509635925, -6.556489552167477e-06, -7.629365427419543e-06, -1.9305083751678467, -0.000809818331617862, -0.0231389869004488, -0.5854407548904419, -0.0026680370792746544, -0.03005770780146122, -0.4226379990577698, -0.001002047909423709, -0.7144209146499634, -3.576278118089249e-07, -0.0001902399235405028, -0.0012912754900753498, -0.004550696350634098], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.00036507140612229705, -4.172316494077677e-06, -0.0003319427778478712, -0.0004741021548397839, -0.005312373861670494, -0.05968812480568886, -0.0007541911327280104, -0.00856700912117958, -0.0008430502493865788, -1.0728830375228426e-06, -1.168244216387393e-05, -0.0015094802947714925, -0.00217189802788198], "finish_reason": "stop"}, {"text": " df.apply(lambda x: np.cumsum(np.unique(np.sort(x))) / x.max(), axis=0)", "tokens": [" df", ".", "apply", "(", "lambda", " x", ":", " np", ".", "cum", "sum", "(", "np", ".", "unique", "(", "np", ".", "sort", "(", "x", ")))", " /", " x", ".", "max", "()", ",", " axis", "=", "0", ")", "\n"], "logprobs": [-0.30311518907546997, -0.02060764841735363, -0.28618064522743225, -0.16673271358013153, -0.10751131176948547, -0.2003186196088791, -0.002657931065186858, -1.3209701776504517, -1.156323378381785e-05, -1.1237621307373047, -0.005253438837826252, -0.004813155625015497, -0.8808056116104126, -5.483612312673358e-06, -1.4329774379730225, -0.003238910576328635, -1.3305705785751343, -1.2397689715726301e-05, -0.7908933162689209, -0.003338717622682452, -0.048121415078639984, -1.0793652534484863, -0.604640543460846, -3.6445274353027344, -0.0029005620162934065, -0.733989953994751, -0.13632798194885254, -0.022408723831176758, -0.01105234120041132, -0.014047437347471714, -0.019752468913793564, -0.005016241688281298, -0.05292685702443123], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.008363579399883747, -0.20386657118797302], "finish_reason": "stop"}], "metrics": {"energy": 362.3325107498169, "energy_per_token": 4.767533036181801, "time": 8.866985, "time_per_token": 0.11667085526315789}}
{"outputs": [{"text": " {column: np.random.uniform(min_value, max_value, length) for column in COLUMNS}", "tokens": [" {", "column", ":", " np", ".", "random", ".", "uniform", "(", "min", "_", "value", ",", " max", "_", "value", ",", " length", ")", " for", " column", " in", " COL", "UM", "NS", "}", "\n"], "logprobs": [-1.1745457649230957, -0.46379798650741577, -0.031413476914167404, -0.06934870034456253, -1.585470999998506e-05, -0.011731915175914764, -6.794906312279636e-06, -1.9787131547927856, -0.0014192519010975957, -0.195872962474823, -5.721882189391181e-05, -3.4570634852570947e-06, -0.0005986090400256217, -0.002701207296922803, -7.152531907195225e-06, -3.6954811548639555e-06, -0.009002690203487873, -0.05071321502327919, -0.0014871024759486318, -0.015268821269273758, -0.0005285535007715225, -0.00016616393986623734, -0.002869894728064537, -3.576278118089249e-07, -7.033323527139146e-06, -0.0006868863711133599, -0.0012371037155389786], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.00036507140612229705, -4.172316494077677e-06, -0.0003319427778478712, -0.0004741021548397839, -0.005312373861670494, -0.05968812480568886, -0.0007541911327280104, -0.00856700912117958, -0.0008430502493865788, -1.0728830375228426e-06, -1.168244216387393e-05, -0.0015094802947714925, -0.00217189802788198], "finish_reason": "stop"}, {"text": " df.apply(lambda x: (x.rank(method='min') / len(x)), axis=0)", "tokens": [" df", ".", "apply", "(", "lambda", " x", ":", " (", "x", ".", "rank", "(", "method", "='", "min", "')", " /", " len", "(", "x", "))", ",", " axis", "=", "0", ")", "\n"], "logprobs": [-0.30311518907546997, -0.02060764841735363, -0.28618064522743225, -0.16673271358013153, -0.10751131176948547, -0.2003186196088791, -0.002657931065186858, -1.2181392908096313, -0.1308724284172058, -1.885285496711731, -0.5069894790649414, -0.028791258111596107, -0.04738166183233261, -0.019933847710490227, -0.7334057092666626, -0.00613271351903677, -0.1567387729883194, -1.2720065116882324, -0.00015710550360381603, -0.09152976423501968, -0.2418680191040039, -0.7718158960342407, -0.01264506671577692, -0.03007320873439312, -0.002612869720906019, -0.0018610315164551139, -0.05288897827267647], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.008363579399883747, -0.20386657118797302], "finish_reason": "stop"}], "metrics": {"energy": 331.4090076217651, "energy_per_token": 4.80302909596761, "time": 8.417259, "time_per_token": 0.12198926086956521}}
