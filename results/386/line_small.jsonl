{"outputs": [{"text": " np.random.uniform(min_value, max_value, length)", "tokens": [" np", ".", "random", ".", "uniform", "(", "min", "_", "value", ",", " max", "_", "value", ",", " length", ")", "\n"], "logprobs": [-0.6383947134017944, -0.00856346357613802, -0.017837582156062126, -0.00014673586701974273, -0.9997847080230713, -0.001963593764230609, -0.37060049176216125, -0.0011099375551566482, -2.777537883957848e-05, -0.000797192333266139, -0.007715425454080105, -4.529942543740617e-06, -1.156323378381785e-05, -0.0028393452521413565, -0.45249542593955994, -0.005219167564064264, -0.0501968190073967], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.004709342960268259, -0.0002734287118073553, -0.001359730027616024, -0.014308708719909191, -0.04316193610429764, -0.1481899619102478, -0.00924768391996622, -0.01956007070839405, -0.002659357851371169, -1.5735502529423684e-05, -0.0002522150462027639, -0.009334610775113106, -0.049931492656469345], "finish_reason": "stop"}, {"text": " df.apply(lambda col: np.cumsum(col > 0) / col.size)", "tokens": [" df", ".", "apply", "(", "lambda", " col", ":", " np", ".", "cum", "sum", "(", "col", " >", " ", "0", ")", " /", " col", ".", "size", ")", "\n"], "logprobs": [-0.1393686681985855, -0.011816506274044514, -1.552807092666626, -0.016934437677264214, -0.16168580949306488, -1.9134539365768433, -0.00287239090539515, -0.48668792843818665, -0.00023040501400828362, -0.03536381945014, -0.02676955796778202, -0.007173140998929739, -0.035698264837265015, -3.1113641262054443, -0.3686329126358032, -0.01595398411154747, -0.8217228651046753, -0.18183192610740662, -1.8367443084716797, -0.0018869704799726605, -0.4201749861240387, -0.7268652319908142, -0.031554751098155975], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.008828180842101574, -0.3797385096549988], "finish_reason": "stop"}], "metrics": {"energy": 55.56896516799926, "energy_per_token": 1.0103448212363502, "time": 2.9560053, "time_per_token": 0.05374555090909091}}
{"outputs": [{"text": " np.random.randint(low=min_value, high=max_value, size=length)", "tokens": [" np", ".", "random", ".", "rand", "int", "(", "low", "=", "min", "_", "value", ",", " high", "=", "max", "_", "value", ",", " size", "=", "length", ")", "\n"], "logprobs": [-0.5813431739807129, -0.0069189961068332195, -0.018459316343069077, -0.00015031162183731794, -0.5684022903442383, -0.21038135886192322, -0.0012819890398532152, -0.9849183559417725, -0.164833664894104, -0.025692632421851158, -0.000900101731531322, -4.410734163684538e-06, -0.0005920564290136099, -0.002581598935648799, -0.00892010610550642, -0.0016434985445812345, -0.001471152063459158, -6.318072337307967e-06, -0.14179697632789612, -0.0034502758644521236, -0.6755247712135315, -0.006752884481102228, -0.07525283098220825, -0.03362836688756943], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.004945189692080021, -0.00035661060246638954, -0.001260320539586246, -0.014277801848948002, -0.03577590733766556, -0.13511306047439575, -0.00854337029159069, -0.018873045220971107, -0.003386954078450799, -2.002696055569686e-05, -0.0002127659390680492, -0.007593812886625528, -0.05939733237028122], "finish_reason": "stop"}, {"text": " df.cumsum()", "tokens": [" df", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.14360210299491882, -0.01280431728810072, -0.2712426483631134, -0.05677773803472519, -0.2628048360347748, -1.0048781633377075], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.011481518857181072, -2.0422747135162354, -1.4305104514278355e-06, -8.344646857949556e-07, -2.8013790142722428e-05, -8.976056415122002e-05, -0.10992426425218582], "finish_reason": "stop"}], "metrics": {"energy": 60.97472916793823, "energy_per_token": 1.2194945833587645, "time": 2.961299, "time_per_token": 0.05922598}}
{"outputs": [{"text": " pd.DataFrame(index=range(length), columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "index", "=", "range", "(", "length", ")", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-1.060481071472168, -0.0001728385395836085, -0.11479399353265762, -0.36018306016921997, -3.5011324882507324, -0.25704723596572876, -0.4115753471851349, -0.0004303721070755273, -0.07491476833820343, -0.5830743312835693, -0.001327824778854847, -0.07846122235059738, -0.04077938199043274, -0.00608555693179369, -4.410734163684538e-06, -0.00023922442051116377, -0.13114233314990997, -0.05571519210934639], "finish_reason": "stop"}, {"text": " pd.DataFrame(data)", "tokens": [" pd", ".", "DataFrame", "(", "data", ")", "\n"], "logprobs": [-0.0043445490300655365, -0.0004319211875554174, -0.0012169820256531239, -0.01418531034141779, -0.04482885077595711, -2.411097288131714, -0.03483770787715912], "finish_reason": "stop"}, {"text": " df.cumsum() / df.sum().astype(float)", "tokens": [" df", ".", "cum", "sum", "()", " /", " df", ".", "sum", "()", ".", "ast", "ype", "(", "float", ")", "\n"], "logprobs": [-0.11845175921916962, -0.013425423763692379, -0.2574183940887451, -0.05043940991163254, -0.2530270218849182, -0.7827823162078857, -0.5513955950737, -0.020433984696865082, -1.1303431987762451, -0.27110084891319275, -1.1969795227050781, -1.7846790552139282, -0.0011816193582490087, -0.1273868978023529, -0.5872480273246765, -0.003802214516326785, -0.23565319180488586], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.010970162227749825, -2.093498706817627, -1.5497195136049413e-06, -8.344646857949556e-07, -3.0874729418428615e-05, -5.924526340095326e-05, -0.13099928200244904], "finish_reason": "stop"}], "metrics": {"energy": 60.532638216018675, "energy_per_token": 1.235359963592218, "time": 2.9585512, "time_per_token": 0.06037859591836735}}
{"outputs": [{"text": " pd.DataFrame(np.random.random(length))", "tokens": [" pd", ".", "DataFrame", "(", "np", ".", "random", ".", "random", "(", "length", "))", "\n"], "logprobs": [-1.060481071472168, -0.0001728385395836085, -0.11479399353265762, -0.36018306016921997, -0.5732835531234741, -0.00010084597306558862, -0.009318194352090359, -0.00020430385484360158, -3.067187786102295, -0.5477507710456848, -0.14338171482086182, -1.472445011138916, -0.054263509809970856], "finish_reason": "stop"}, {"text": " pd.DataFrame(data=data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", "=", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.0043445490300655365, -0.0004319211875554174, -0.0012169820256531239, -0.01418531034141779, -0.04482885077595711, -2.9708564281463623, -0.011936428025364876, -0.055958136916160583, -0.008960158564150333, -0.010887150652706623, -0.003239861223846674, -1.2278481335670222e-05, -0.00021240839851088822, -0.013124742545187473, -0.04473571851849556], "finish_reason": "stop"}, {"text": " df.cumsum().cumsum()", "tokens": [" df", ".", "cum", "sum", "()", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.11845175921916962, -0.013425423763692379, -0.2574183940887451, -0.05043940991163254, -0.2530270218849182, -2.013960599899292, -1.270729422569275, -0.14047878980636597, -0.31503668427467346, -0.9086561799049377], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.010970162227749825, -0.4185281991958618], "finish_reason": "stop"}], "metrics": {"energy": 74.51430347061157, "energy_per_token": 1.8628575867652892, "time": 2.5263302, "time_per_token": 0.063158255}}
{"outputs": [{"text": " np.random.randint(low=min_value, high=max_value, size=length)", "tokens": [" np", ".", "random", ".", "rand", "int", "(", "low", "=", "min", "_", "value", ",", " high", "=", "max", "_", "value", ",", " size", "=", "length", ")", "\n"], "logprobs": [-0.6789692044258118, -0.006986119318753481, -0.020919397473335266, -0.0001599660754436627, -0.7056904435157776, -0.1553877890110016, -0.0013858010061085224, -0.913869321346283, -0.21979981660842896, -0.0227213092148304, -0.0011538759572431445, -5.125986263010418e-06, -0.0007870675181038678, -0.0022958368062973022, -0.01140397135168314, -0.0017665509367361665, -0.000819347333163023, -5.722029527532868e-06, -0.1767028123140335, -0.0036973466631025076, -0.6622269153594971, -0.007470055483281612, -0.072146475315094, -0.03226475045084953], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.005248339846730232, -0.0003844952443614602, -0.0013583013787865639, -0.012981075793504715, -0.04222344607114792, -0.1778448224067688, -0.008073434233665466, -0.01712464727461338, -0.0030896568205207586, -1.597391747054644e-05, -0.0002213471452705562, -0.00857291929423809, -0.05293024703860283], "finish_reason": "stop"}, {"text": " df.cumsum() / df.cumsum().sum()", "tokens": [" df", ".", "cum", "sum", "()", " /", " df", ".", "cum", "sum", "()", ".", "sum", "()", "\n"], "logprobs": [-0.15568940341472626, -0.012925415299832821, -0.2880481481552124, -0.05689588189125061, -0.2728165090084076, -0.8431017398834229, -0.5863499045372009, -0.01766999624669552, -0.5297609567642212, -5.7338023907504976e-05, -0.002721180208027363, -0.00015770144818816334, -1.196349859237671, -0.03998493030667305, -0.2592574954032898], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.010853779502213001, -2.096505641937256, -1.6689286894688848e-06, -7.152555099310121e-07, -3.361645576660521e-05, -6.09140915912576e-05, -0.11980045586824417], "finish_reason": "stop"}], "metrics": {"energy": 58.90452682304383, "energy_per_token": 0.9983818105600649, "time": 3.1707885, "time_per_token": 0.053742177966101694}}
{"outputs": [{"text": " np.random.rand(length) * (max_value - min_value) + min_value", "tokens": [" np", ".", "random", ".", "rand", "(", "length", ")", " *", " (", "max", "_", "value", " -", " min", "_", "value", ")", " +", " min", "_", "value", "\n"], "logprobs": [-0.6164880394935608, -0.008204566314816475, -0.018320392817258835, -0.00014780859055463225, -0.6340615749359131, -1.8239946365356445, -0.039903029799461365, -0.6419098973274231, -0.4329650402069092, -0.056762535125017166, -0.0027086972258985043, -0.0010378933511674404, -8.702239938429557e-06, -0.04560910165309906, -0.00104301399551332, -4.768360213347478e-06, -1.6689286894688848e-06, -0.023560915142297745, -0.006535110529512167, -0.0011120808776468039, -4.017272294731811e-05, -4.887569048150908e-06, -0.018919017165899277], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.005388379096984863, -0.00028391621890477836, -0.0010679024271667004, -0.013662398792803288, -0.039637938141822815, -0.14523902535438538, -0.008464649319648743, -0.017823997884988785, -0.0031718919053673744, -2.0265373677830212e-05, -0.00023767507809679955, -0.009443612769246101, -0.05882808193564415], "finish_reason": "stop"}, {"text": " df.cumsum() / df.cumsum().iloc[-1]", "tokens": [" df", ".", "cum", "sum", "()", " /", " df", ".", "cum", "sum", "()", ".", "il", "oc", "[-", "1", "]", "\n"], "logprobs": [-0.14392195641994476, -0.013688739389181137, -0.2934858798980713, -0.05256475880742073, -0.25606873631477356, -0.8151127696037292, -0.5796747207641602, -0.018819116055965424, -0.4971889555454254, -6.19869097135961e-05, -0.002071736380457878, -0.0001479277852922678, -2.7166285514831543, -0.00031263710116036236, -0.12313427776098251, -0.003144084708765149, -0.021271193400025368, -0.15912368893623352], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.010042497888207436, -1.8999675512313843, -1.6689286894688848e-06, -7.152555099310121e-07, -3.707340147229843e-05, -8.129743218887597e-05, -0.11179237067699432], "finish_reason": "stop"}], "metrics": {"energy": 91.2916337471008, "energy_per_token": 1.4965841597885379, "time": 3.376199, "time_per_token": 0.05534752459016394}}
{"outputs": [{"text": " np.random.randint(min_value, max_value, length)", "tokens": [" np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", ",", " length", ")", "\n"], "logprobs": [-0.6353579163551331, -0.008076272904872894, -0.01885467953979969, -0.00016080040950328112, -0.6441717743873596, -0.19290895760059357, -0.0015595904551446438, -0.6707257032394409, -0.0013856819132342935, -2.002696055569686e-05, -0.001538523007184267, -0.008530369028449059, -1.9907753085135482e-05, -1.1205610462639015e-05, -0.3446124196052551, -0.6452353000640869, -0.035921163856983185, -0.04829760640859604], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.004310127347707748, -0.00033122775494121015, -0.0015960109885782003, -0.013767285272479057, -0.034252919256687164, -0.12766213715076447, -0.008341945707798004, -0.01817934401333332, -0.0026958573143929243, -1.5139465176616795e-05, -0.0002536452084314078, -0.008993946947157383, -0.045348022133111954], "finish_reason": "stop"}, {"text": " df.apply(lambda x: np.cumsum(x.notna().astype(int)) / x.count(), axis=0)", "tokens": [" df", ".", "apply", "(", "lambda", " x", ":", " np", ".", "cum", "sum", "(", "x", ".", "not", "na", "()", ".", "ast", "ype", "(", "int", "))", " /", " x", ".", "count", "()", ",", " axis", "=", "0", ")", "\n"], "logprobs": [-0.13436535000801086, -0.011239429004490376, -1.7020739316940308, -0.029302267357707024, -0.16484791040420532, -0.20430436730384827, -0.0009190387791022658, -0.43832719326019287, -0.00014602071314584464, -0.043885305523872375, -0.0249467920511961, -0.007814786396920681, -0.059650614857673645, -0.7428174614906311, -1.6362791061401367, -0.8319141864776611, -1.480560064315796, -0.5308595299720764, -0.8164440989494324, -2.7179348762729205e-05, -0.011148777790367603, -0.3912650942802429, -0.212690532207489, -0.2191242277622223, -1.94854736328125, -0.0009572691051289439, -1.039988398551941, -0.2897643744945526, -0.3500801920890808, -0.012245827354490757, -0.04427279904484749, -0.11535319685935974, -0.016452481970191002, -0.0271266121417284], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.011296833865344524, -0.4324618875980377], "finish_reason": "stop"}], "metrics": {"energy": 74.36924487686157, "energy_per_token": 1.1099887295053965, "time": 3.5772808, "time_per_token": 0.05339225074626866}}
{"outputs": [{"text": " np.random.uniform(min_value, max_value, length)", "tokens": [" np", ".", "random", ".", "uniform", "(", "min", "_", "value", ",", " max", "_", "value", ",", " length", ")", "\n"], "logprobs": [-0.6012068390846252, -0.008741564117372036, -0.01782505214214325, -0.00015901254664640874, -1.0268611907958984, -0.0020866068080067635, -0.4595823585987091, -0.0010840974282473326, -2.0861407392658293e-05, -0.0008313775178976357, -0.007691056467592716, -5.245195097813848e-06, -1.2397689715726301e-05, -0.0023401989601552486, -0.43284595012664795, -0.004932853393256664, -0.05884021893143654], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.005774601362645626, -0.00030560590676032007, -0.00128020322881639, -0.01445982325822115, -0.03487616032361984, -0.14059002697467804, -0.006912958342581987, -0.018064148724079132, -0.0028679927345365286, -1.4662635294371285e-05, -0.0002531684876885265, -0.007343442644923925, -0.05961108207702637], "finish_reason": "stop"}, {"text": " df.cumsum() / length", "tokens": [" df", ".", "cum", "sum", "()", " /", " length", "\n"], "logprobs": [-0.13367599248886108, -0.011821689084172249, -0.29499515891075134, -0.05614963173866272, -0.2499508112668991, -0.7595533132553101, -1.3797214031219482, -0.09159111976623535], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.011866808868944645, -0.4253213107585907], "finish_reason": "stop"}], "metrics": {"energy": 45.77827271080017, "energy_per_token": 1.144456817770004, "time": 2.5310843, "time_per_token": 0.0632771075}}
{"outputs": [{"text": " pd.DataFrame(", "tokens": [" pd", ".", "DataFrame", "(", "\n"], "logprobs": [-0.9216468930244446, -0.00014780859055463225, -0.13089512288570404, -0.4137361943721771, -1.4804534912109375], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.004959068261086941, -0.0003398079425096512, -0.0016826532082632184, -0.013335440307855606, -0.03941895812749863, -0.1265089064836502, -0.008561218157410622, -0.015607119537889957, -0.00335119292140007, -2.109982233378105e-05, -0.0002240883477497846, -0.007877591997385025, -0.045280005782842636], "finish_reason": "stop"}, {"text": " df.apply(lambda x: np.cumsum(x.notnull()) / x.count().values)", "tokens": [" df", ".", "apply", "(", "lambda", " x", ":", " np", ".", "cum", "sum", "(", "x", ".", "not", "null", "())", " /", " x", ".", "count", "()", ".", "values", ")", "\n"], "logprobs": [-0.16065025329589844, -0.013593370094895363, -1.5791194438934326, -0.026722434908151627, -0.1661723554134369, -0.19731111824512482, -0.0010247938334941864, -0.42678239941596985, -0.00011228884250158444, -0.04315291717648506, -0.021837962791323662, -0.00815561506897211, -0.06934714317321777, -0.7636426091194153, -1.4219996929168701, -0.7107529640197754, -0.5259756445884705, -0.045047104358673096, -1.3364660739898682, -0.00014733182615600526, -0.7135392427444458, -1.1349164247512817, -1.8867158889770508, -2.9279799461364746, -1.0537809133529663, -0.0405314639210701], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.011628229171037674, -0.4574524760246277], "finish_reason": "stop"}], "metrics": {"energy": 85.51994173049926, "energy_per_token": 1.8591291680543316, "time": 2.7501729, "time_per_token": 0.05978636739130434}}
{"outputs": [{"text": " np.random.normal(0, 1, length)", "tokens": [" np", ".", "random", ".", "normal", "(", "0", ",", " ", "1", ",", " length", ")", "\n"], "logprobs": [-0.5898898839950562, -0.008729392662644386, -0.017801513895392418, -0.00015364897262770683, -3.4939584732055664, -0.0027304531540721655, -0.5795384645462036, -0.06460126489400864, -0.09772517532110214, -0.12153009325265884, -0.10370039939880371, -0.5973569750785828, -0.02261805720627308, -0.07037553936243057], "finish_reason": "stop"}, {"text": " pd.DataFrame(data=data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", "=", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.0051773046143352985, -0.0003073934931308031, -0.001423537265509367, -0.013222156092524529, -0.03434956446290016, -3.022733211517334, -0.014180843718349934, -0.08099622279405594, -0.008788359351456165, -0.010020546615123749, -0.002968787681311369, -1.1920858014491387e-05, -0.00019262365822214633, -0.011856206692755222, -0.04919103533029556], "finish_reason": "stop"}, {"text": " df.cumsum()/df.cumsum().max()", "tokens": [" df", ".", "cum", "sum", "()", "/", "df", ".", "cum", "sum", "()", ".", "max", "()", "\n"], "logprobs": [-0.12839171290397644, -0.012941890396177769, -0.2819185256958008, -0.04792167246341705, -0.24132856726646423, -3.4207661151885986, -0.22080479562282562, -0.019298763945698738, -0.6278306841850281, -4.100715523236431e-05, -0.001794396317563951, -0.0002996472467202693, -0.4165702760219574, -0.02087946981191635, -0.17481479048728943], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.011693505570292473, -0.4794272184371948], "finish_reason": "stop"}], "metrics": {"energy": 75.617828250885, "energy_per_token": 1.6438658315409782, "time": 3.355923, "time_per_token": 0.07295484782608697}}
{"outputs": [{"text": " np.random.uniform(low=min_value, high=max_value, size=length)", "tokens": [" np", ".", "random", ".", "uniform", "(", "low", "=", "min", "_", "value", ",", " high", "=", "max", "_", "value", ",", " size", "=", "length", ")", "\n"], "logprobs": [-0.6012068390846252, -0.008741564117372036, -0.01782505214214325, -0.00015901254664640874, -1.0268611907958984, -0.0020866068080067635, -1.2289762496948242, -0.19429424405097961, -0.01164272241294384, -0.0011731653939932585, -4.0531076592742465e-06, -0.0011219641892239451, -0.005237311124801636, -0.009441959671676159, -0.0009153467253781855, -0.0001515035255579278, -1.1801649634435307e-05, -0.0027465024031698704, -0.005753385368734598, -0.653010904788971, -0.00885984767228365, -0.005625014193356037, -0.04626355320215225], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.005774601362645626, -0.00030560590676032007, -0.00128020322881639, -0.01445982325822115, -0.03487616032361984, -0.14059002697467804, -0.006912958342581987, -0.018064148724079132, -0.0028679927345365286, -1.4662635294371285e-05, -0.0002531684876885265, -0.007343442644923925, -0.05961108207702637], "finish_reason": "stop"}, {"text": " df.cumsum() / df.sum()", "tokens": [" df", ".", "cum", "sum", "()", " /", " df", ".", "sum", "()", "\n"], "logprobs": [-0.13367599248886108, -0.011821689084172249, -0.29499515891075134, -0.05614963173866272, -0.2499508112668991, -0.7595533132553101, -0.5641181468963623, -0.015378352254629135, -0.9148547053337097, -0.2822910249233246, -0.8312755227088928], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.011866808868944645, -0.4253213107585907], "finish_reason": "stop"}], "metrics": {"energy": 73.04302357292174, "energy_per_token": 1.4906739504677906, "time": 3.383967, "time_per_token": 0.06906055102040817}}
{"outputs": [{"text": " pd.DataFrame(", "tokens": [" pd", ".", "DataFrame", "(", "\n"], "logprobs": [-0.9216468930244446, -0.00014780859055463225, -0.13089512288570404, -0.4137361943721771, -1.4804534912109375], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.004959068261086941, -0.0003398079425096512, -0.0016826532082632184, -0.013335440307855606, -0.03941895812749863, -0.1265089064836502, -0.008561218157410622, -0.015607119537889957, -0.00335119292140007, -2.109982233378105e-05, -0.0002240883477497846, -0.007877591997385025, -0.045280005782842636], "finish_reason": "stop"}, {"text": " df.cumsum()", "tokens": [" df", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.16065025329589844, -0.013593370094895363, -0.27703356742858887, -0.06002317741513252, -0.26910704374313354, -0.8608273267745972], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.009309808723628521, -0.42545071244239807], "finish_reason": "stop"}], "metrics": {"energy": 59.2900557193756, "energy_per_token": 2.280386758437523, "time": 2.342576, "time_per_token": 0.09009907692307693}}
{"outputs": [{"text": " np.random.random(length)", "tokens": [" np", ".", "random", ".", "random", "(", "length", ")", "\n"], "logprobs": [-0.5898898839950562, -0.008729392662644386, -0.017801513895392418, -0.00015364897262770683, -3.079350471496582, -0.6906986236572266, -0.08887641131877899, -0.03488226234912872, -0.342384934425354], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.0051773046143352985, -0.0003073934931308031, -0.001423537265509367, -0.013222156092524529, -0.03434956446290016, -0.1544833928346634, -0.008480843156576157, -0.015931107103824615, -0.0028114099986851215, -2.098061486321967e-05, -0.0002444683632347733, -0.009233983233571053, -0.05897093191742897], "finish_reason": "stop"}, {"text": " df.cumsum(axis=0) / len(df)", "tokens": [" df", ".", "cum", "sum", "(", "axis", "=", "0", ")", " /", " len", "(", "df", ")", "\n"], "logprobs": [-0.15046335756778717, -0.010616019368171692, -0.3163076639175415, -0.0473589226603508, -1.503143548965454, -0.07731302082538605, -0.05646029859781265, -0.07678534090518951, -0.1140233725309372, -1.2055363655090332, -2.396167516708374, -0.0001289761275984347, -0.2641493082046509, -0.041645705699920654, -0.07391916215419769], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.010289715602993965, -0.41055959463119507], "finish_reason": "stop"}], "metrics": {"energy": 73.2034011631012, "energy_per_token": 1.8770102862333642, "time": 2.3263774, "time_per_token": 0.05965070256410257}}
{"outputs": [{"text": " np.random.randint(low=min_value, high=max_value, size=(length, len(COLUMNS)))", "tokens": [" np", ".", "random", ".", "rand", "int", "(", "low", "=", "min", "_", "value", ",", " high", "=", "max", "_", "value", ",", " size", "=(", "length", ",", " len", "(", "COL", "UM", "NS", ")))", "\n"], "logprobs": [-0.6353579163551331, -0.008076272904872894, -0.01885467953979969, -0.00016080040950328112, -0.6441717743873596, -0.19290895760059357, -0.0015595904551446438, -0.873860239982605, -0.1848389059305191, -0.023857077583670616, -0.000894027529284358, -5.483612312673358e-06, -0.0006208876147866249, -0.002462571021169424, -0.009339098818600178, -0.001671228208579123, -0.0011647114297375083, -5.125986263010418e-06, -0.1464710682630539, -0.0038599285762757063, -0.8192936182022095, -0.059073418378829956, -0.03691430017352104, -0.2595743238925934, -8.11782301752828e-05, -0.00043478095903992653, -1.0847986231965479e-05, -0.0001752223033690825, -0.03472591191530228, -0.01409516017884016], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.005073055624961853, -0.00037877538125030696, -0.0015525680501013994, -0.013888032175600529, -0.04459139332175255, -0.13560740649700165, -0.006878979969769716, -0.020820511505007744, -0.003089062636718154, -2.0265373677830212e-05, -0.00024768622824922204, -0.00731953838840127, -0.054179608821868896], "finish_reason": "stop"}, {"text": " df.cumsum() / length", "tokens": [" df", ".", "cum", "sum", "()", " /", " length", "\n"], "logprobs": [-0.14289315044879913, -0.011205951683223248, -0.2826763987541199, -0.05383513867855072, -0.22516758739948273, -0.940142810344696, -1.2910451889038086, -0.0784287080168724], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.010018185712397099, -0.37195780873298645], "finish_reason": "stop"}], "metrics": {"energy": 58.90623954963683, "energy_per_token": 1.1114384820686194, "time": 3.1763246, "time_per_token": 0.05993065283018868}}
{"outputs": [{"text": " pd.DataFrame(np.random.randint(0, 100, size = (length, len(COLUMNS))), columns = COLUMNS).values", "tokens": [" pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "0", ",", " ", "1", "0", "0", ",", " size", " =", " (", "length", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", " =", " COL", "UM", "NS", ")", ".", "values", "\n"], "logprobs": [-0.9993239045143127, -0.00013207517622504383, -0.1401696354150772, -0.47655704617500305, -0.5751771926879883, -0.00015352977789007127, -0.011050808243453503, -0.00018153927521780133, -0.48454833030700684, -0.12890951335430145, -0.002126219915226102, -2.9614226818084717, -0.0008326877141371369, -0.28947070240974426, -0.16716963052749634, -0.025330882519483566, -0.37107157707214355, -0.0639374628663063, -1.3516815900802612, -2.788940906524658, -1.0044481754302979, -0.21979312598705292, -0.022467589005827904, -0.5057145953178406, -0.0003077510336879641, -0.001019911258481443, -2.1457441107486375e-05, -0.00019643761334009469, -0.27939000725746155, -0.017553336918354034, -0.09562746435403824, -0.1833917200565338, -0.007940630428493023, -1.5020257706055418e-05, -0.00019774865359067917, -0.026303930208086967, -2.928886890411377, -3.2716708183288574, -0.0699767991900444], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.0051252408884465694, -0.0002924968139268458, -0.0011364913079887629, -0.014381214044988155, -0.03652980551123619, -0.13099102675914764, -0.0077280825935304165, -0.016652395948767662, -0.003143015317618847, -2.002696055569686e-05, -0.00026592056383378804, -0.009555908851325512, -0.05845361202955246], "finish_reason": "stop"}, {"text": " df.cumsum().cumsum(axis=0)", "tokens": [" df", ".", "cum", "sum", "()", ".", "cum", "sum", "(", "axis", "=", "0", ")", "\n"], "logprobs": [-0.13308468461036682, -0.010007563978433609, -0.23926512897014618, -0.05278133228421211, -0.24867764115333557, -2.0439674854278564, -1.1748967170715332, -0.19072185456752777, -1.2907482385635376, -0.1183265894651413, -0.06531544029712677, -0.23722057044506073, -0.02299838326871395, -0.1902078092098236], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.010001072660088539, -2.088355541229248, -1.6689286894688848e-06, -9.536738616588991e-07, -2.777537883957848e-05, -6.985420623095706e-05, -0.12925128638744354], "finish_reason": "stop"}], "metrics": {"energy": 80.47649250030518, "energy_per_token": 1.1024177054836326, "time": 3.7903612, "time_per_token": 0.05192275616438356}}
{"outputs": [{"text": " np.random.uniform(min_value, max_value, length)", "tokens": [" np", ".", "random", ".", "uniform", "(", "min", "_", "value", ",", " max", "_", "value", ",", " length", ")", "\n"], "logprobs": [-0.6012068390846252, -0.008741564117372036, -0.01782505214214325, -0.00015901254664640874, -1.0268611907958984, -0.0020866068080067635, -0.4595823585987091, -0.0010840974282473326, -2.0861407392658293e-05, -0.0008313775178976357, -0.007691056467592716, -5.245195097813848e-06, -1.2397689715726301e-05, -0.0023401989601552486, -0.43284595012664795, -0.004932853393256664, -0.05884021893143654], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.005774601362645626, -0.00030560590676032007, -0.00128020322881639, -0.01445982325822115, -0.03487616032361984, -0.14059002697467804, -0.006912958342581987, -0.018064148724079132, -0.0028679927345365286, -1.4662635294371285e-05, -0.0002531684876885265, -0.007343442644923925, -0.05961108207702637], "finish_reason": "stop"}, {"text": " df.cumsum() / df.cumsum().iloc[-1]", "tokens": [" df", ".", "cum", "sum", "()", " /", " df", ".", "cum", "sum", "()", ".", "il", "oc", "[-", "1", "]", "\n"], "logprobs": [-0.13367599248886108, -0.011821689084172249, -0.29499515891075134, -0.05614963173866272, -0.2499508112668991, -0.7595533132553101, -0.5641181468963623, -0.015378352254629135, -0.5735861659049988, -7.068861305015162e-05, -0.002369931200519204, -0.00016592556494288146, -2.8405661582946777, -0.00042167355422861874, -0.11587131768465042, -0.0032272657845169306, -0.020444730296730995, -0.15703529119491577], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.011866808868944645, -0.4253213107585907], "finish_reason": "stop"}], "metrics": {"energy": 82.09320564270017, "energy_per_token": 1.6418641128540035, "time": 2.7506332, "time_per_token": 0.055012663999999996}}
{"outputs": [{"text": " np.random.randint(min_value, max_value, (length, len(COLUMNS)))", "tokens": [" np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", ",", " (", "length", ",", " len", "(", "COL", "UM", "NS", ")))", "\n"], "logprobs": [-0.5898898839950562, -0.008729392662644386, -0.017801513895392418, -0.00015364897262770683, -0.6616276502609253, -0.16760745644569397, -0.0012873465893790126, -0.6516164541244507, -0.0017786887474358082, -1.6093124941107817e-05, -0.0015413797227665782, -0.008427414111793041, -1.847726889536716e-05, -1.1920858014491387e-05, -0.32237422466278076, -1.5379066467285156, -0.059322062879800797, -0.007696616463363171, -0.19486576318740845, -0.00010632903286023065, -0.0004502712981775403, -1.4185804502631072e-05, -0.00019441144831944257, -0.025507764890789986, -0.011765021830797195], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.0048837424255907536, -0.00032264748006127775, -0.0011798333143815398, -0.010791749693453312, -0.041210293769836426, -0.13676850497722626, -0.008437935262918472, -0.016198571771383286, -0.0026112052146345377, -1.6569954823353328e-05, -0.00022218143567442894, -0.009759332053363323, -0.04759754240512848], "finish_reason": "stop"}, {"text": " df.apply(lambda x: np.cumsum(x.value_counts() / len(df)), axis=0)", "tokens": [" df", ".", "apply", "(", "lambda", " x", ":", " np", ".", "cum", "sum", "(", "x", ".", "value", "_", "counts", "()", " /", " len", "(", "df", "))", ",", " axis", "=", "0", ")", "\n"], "logprobs": [-0.13522157073020935, -0.011774800717830658, -1.5169837474822998, -0.022029925137758255, -0.15111981332302094, -0.16187787055969238, -0.0010631391778588295, -0.4376172721385956, -0.00013124081306159496, -0.04229727014899254, -0.028358902782201767, -0.010132777504622936, -0.07733000814914703, -0.747487485408783, -0.6800060868263245, -0.00037400881410576403, -0.0011081513948738575, -0.3584096431732178, -0.5940040349960327, -0.9188617467880249, -8.809178689261898e-05, -1.5894434452056885, -0.45250922441482544, -0.2154635637998581, -0.007587542291730642, -0.0783783346414566, -0.011892018839716911, -0.013884269632399082, -0.026652097702026367], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.009841492399573326, -0.44373831152915955], "finish_reason": "stop"}], "metrics": {"energy": 70.73041569709777, "energy_per_token": 1.0250784883637358, "time": 3.580621, "time_per_token": 0.05189305797101449}}
{"outputs": [{"text": " pd.DataFrame(np.random.randint(min_value, max_value, size=length), columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", ",", " size", "=", "length", ")", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-1.060481071472168, -0.0001728385395836085, -0.11479399353265762, -0.36018306016921997, -0.5732835531234741, -0.00010084597306558862, -0.009318194352090359, -0.00020430385484360158, -0.46188127994537354, -0.10682183504104614, -0.0018641252536326647, -0.5635692477226257, -0.001909934333525598, -2.288792165927589e-05, -0.002136925933882594, -0.01353821437805891, -2.932505594799295e-05, -1.6093124941107817e-05, -0.3273344933986664, -1.2493853569030762, -1.703355073928833, -0.025278346613049507, -0.22425977885723114, -0.03538384288549423, -0.09588365256786346, -0.04136940464377403, -0.003592349123209715, -2.145764938177308e-06, -0.0002681849291548133, -0.016891539096832275, -0.05182987079024315], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.0043445490300655365, -0.0004319211875554174, -0.0012169820256531239, -0.01418531034141779, -0.04482885077595711, -0.16546125710010529, -0.008890331722795963, -0.01757149212062359, -0.002423565834760666, -2.0265373677830212e-05, -0.000243634101934731, -0.00903612282127142, -0.05337471514940262], "finish_reason": "stop"}, {"text": " df.apply(lambda x: np.cumsum(x / x.sum()), axis=1)", "tokens": [" df", ".", "apply", "(", "lambda", " x", ":", " np", ".", "cum", "sum", "(", "x", " /", " x", ".", "sum", "())", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.13975249230861664, -0.011784225702285767, -1.4631301164627075, -0.01758952997624874, -0.16065940260887146, -0.20795907080173492, -0.0011797142215073109, -0.45491477847099304, -0.0001662831346038729, -0.04592863842844963, -0.023923072963953018, -0.007037376053631306, -0.09089427441358566, -2.7665557861328125, -0.54835045337677, -0.00033408781746402383, -0.09894100576639175, -0.13271667063236237, -0.07108515501022339, -0.0055082449689507484, -0.06456204503774643, -2.68607234954834, -0.021668246015906334, -0.04233589395880699], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.012659073807299137, -0.40645676851272583], "finish_reason": "stop"}], "metrics": {"energy": 71.50900652885437, "energy_per_token": 1.021557236126491, "time": 3.5797875, "time_per_token": 0.05113982142857143}}
{"outputs": [{"text": " np.random.uniform(min_value, max_value, length)", "tokens": [" np", ".", "random", ".", "uniform", "(", "min", "_", "value", ",", " max", "_", "value", ",", " length", ")", "\n"], "logprobs": [-0.6789692044258118, -0.006986119318753481, -0.020919397473335266, -0.0001599660754436627, -0.8887673020362854, -0.0020281951874494553, -0.410576194524765, -0.0010056205792352557, -2.098061486321967e-05, -0.0009058186551555991, -0.007807216607034206, -5.125986263010418e-06, -1.2397689715726301e-05, -0.0029534550849348307, -0.4452611207962036, -0.005212882068008184, -0.057368531823158264], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.005284744780510664, -0.00032264748006127775, -0.0017896364443004131, -0.015643032267689705, -0.03815123438835144, -0.17027616500854492, -0.009217092767357826, -0.019765792414546013, -0.002973423106595874, -1.4305012882687151e-05, -0.0002205128694185987, -0.00899170245975256, -0.05369381234049797], "finish_reason": "stop"}, {"text": " df.apply(lambda x: pd.Series(x.apply(lambda y: y.cumsum())), axis=1)", "tokens": [" df", ".", "apply", "(", "lambda", " x", ":", " pd", ".", "Series", "(", "x", ".", "apply", "(", "lambda", " y", ":", " y", ".", "cum", "sum", "()))", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.13393908739089966, -0.011536316946148872, -1.5676311254501343, -0.01905762404203415, -0.15546227991580963, -0.16252759099006653, -0.0009129646932706237, -2.5792510509490967, -3.194758028257638e-05, -0.07369338721036911, -0.03342363238334656, -1.3981900215148926, -0.21796277165412903, -3.249192714691162, -0.0027041793800890446, -0.24291427433490753, -0.24048836529254913, -0.0015744682168588042, -2.078415870666504, -1.409921646118164, -0.3580667972564697, -0.01335626095533371, -1.3947670459747314, -0.30103859305381775, -0.01610262133181095, -0.06132706627249718, -0.509824812412262, -0.007952692918479443, -0.0765409991145134], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.009939226321876049, -0.35386571288108826], "finish_reason": "stop"}], "metrics": {"energy": 92.13082266235351, "energy_per_token": 1.5103413551205493, "time": 3.169635, "time_per_token": 0.05196122950819672}}
{"outputs": [{"text": " np.random.randint(low=min_value, high=max_value, size=length)", "tokens": [" np", ".", "random", ".", "rand", "int", "(", "low", "=", "min", "_", "value", ",", " high", "=", "max", "_", "value", ",", " size", "=", "length", ")", "\n"], "logprobs": [-0.6353579163551331, -0.008076272904872894, -0.01885467953979969, -0.00016080040950328112, -0.6441717743873596, -0.19290895760059357, -0.0015595904551446438, -0.873860239982605, -0.1848389059305191, -0.023857077583670616, -0.000894027529284358, -5.483612312673358e-06, -0.0006208876147866249, -0.002462571021169424, -0.009339098818600178, -0.001671228208579123, -0.0011647114297375083, -5.125986263010418e-06, -0.1464710682630539, -0.0038599285762757063, -0.621076226234436, -0.006246211007237434, -0.07508431375026703, -0.03424739092588425], "finish_reason": "stop"}, {"text": " pd.DataFrame(data)", "tokens": [" pd", ".", "DataFrame", "(", "data", ")", "\n"], "logprobs": [-0.005073055624961853, -0.00037877538125030696, -0.0015525680501013994, -0.013888032175600529, -0.04459139332175255, -2.5942046642303467, -0.035756006836891174], "finish_reason": "stop"}, {"text": " df.cumsum()", "tokens": [" df", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.1433878093957901, -0.012099914252758026, -0.2615748345851898, -0.04997016116976738, -0.23274874687194824, -0.9047005772590637], "finish_reason": "stop"}, {"text": " df", "tokens": [" df"], "logprobs": [-0.010671454481780529], "finish_reason": "stop"}], "metrics": {"energy": 76.70381281089783, "energy_per_token": 2.018521389760469, "time": 2.336781, "time_per_token": 0.06149423684210527}}
{"outputs": [{"text": " np.random.randint(min_value, max_value, (length, 5))", "tokens": [" np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", ",", " (", "length", ",", " ", "5", "))", "\n"], "logprobs": [-0.6012068390846252, -0.008741564117372036, -0.01782505214214325, -0.00015901254664640874, -0.619422972202301, -0.16328613460063934, -0.0013580633094534278, -0.6410731077194214, -0.0011326810345053673, -1.8954096958623268e-05, -0.0013822296168655157, -0.009058096446096897, -2.002696055569686e-05, -1.1801649634435307e-05, -0.374602735042572, -1.4286835193634033, -0.04512402042746544, -0.008524104952812195, -2.3999922275543213, -0.09698228538036346, -0.009569605812430382, -0.016780180856585503], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.005160938482731581, -0.00034231049357913435, -0.001492934999987483, -0.013756702654063702, -0.04765505716204643, -0.17411872744560242, -0.00858178362250328, -0.017696699127554893, -0.0030906074680387974, -1.4305012882687151e-05, -0.00021991695393808186, -0.007526730187237263, -0.05672885850071907], "finish_reason": "stop"}, {"text": " df.cumsum() / df.cumsum().sum()", "tokens": [" df", ".", "cum", "sum", "()", " /", " df", ".", "cum", "sum", "()", ".", "sum", "()", "\n"], "logprobs": [-0.17020829021930695, -0.014234201051294804, -0.282850056886673, -0.07093403488397598, -0.23782558739185333, -0.7720431089401245, -0.5533989667892456, -0.01765371672809124, -0.4239867627620697, -7.199982064776123e-05, -0.0021176550071686506, -0.00015877417172305286, -1.0984060764312744, -0.043454404920339584, -0.30105817317962646], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.011127321980893612, -0.3873194754123688], "finish_reason": "stop"}], "metrics": {"energy": 56.58026725006103, "energy_per_token": 1.0880820625011736, "time": 2.9558513, "time_per_token": 0.05684329423076923}}
{"outputs": [{"text": " np.random.randint(min_value, max_value+1, (length, len(COLUMNS)))", "tokens": [" np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", "+", "1", ",", " (", "length", ",", " len", "(", "COL", "UM", "NS", ")))", "\n"], "logprobs": [-0.6789692044258118, -0.006986119318753481, -0.020919397473335266, -0.0001599660754436627, -0.7056904435157776, -0.1553877890110016, -0.0013858010061085224, -0.6561731696128845, -0.0013767535565420985, -1.8358061424805783e-05, -0.0013306819600984454, -0.009433338418602943, -2.038458114839159e-05, -1.6212332411669195e-05, -2.5052921772003174, -0.0010852882405743003, -0.0021333571057766676, -1.8802709579467773, -0.05562645569443703, -0.006328897550702095, -0.19538861513137817, -0.00012206286191940308, -0.000428108120104298, -1.2874520507466514e-05, -0.0001641377166379243, -0.040588125586509705, -0.02933630347251892], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.005118717905133963, -0.000359351426595822, -0.0013502062065526843, -0.01475610863417387, -0.03413817659020424, -0.14492906630039215, -0.008820145390927792, -0.019518336281180382, -0.002607875969260931, -2.13382354559144e-05, -0.0002559096028562635, -0.010133485309779644, -0.06055045500397682], "finish_reason": "stop"}, {"text": " df.apply(lambda x: np.cumsum(x.notna()) / x.notna().size)", "tokens": [" df", ".", "apply", "(", "lambda", " x", ":", " np", ".", "cum", "sum", "(", "x", ".", "not", "na", "())", " /", " x", ".", "not", "na", "()", ".", "size", ")", "\n"], "logprobs": [-0.16533799469470978, -0.012811261229217052, -1.408095359802246, -0.01880437508225441, -0.16889069974422455, -0.17421738803386688, -0.0009666775586083531, -0.4260101914405823, -0.00015007323236204684, -0.05040891841053963, -0.02399977296590805, -0.008532614447176456, -0.05569794028997421, -0.7897165417671204, -1.4803478717803955, -0.7816242575645447, -0.3842734694480896, -0.05044655129313469, -1.7685880661010742, -0.00030357998912222683, -1.5240789651870728, -0.0008796160109341145, -0.00022742546570952982, -0.001757030957378447, -0.7403877377510071, -0.7082314491271973, -0.023927612230181694], "finish_reason": "stop"}, {"text": " df", "tokens": [" df"], "logprobs": [-0.010589126497507095], "finish_reason": "stop"}], "metrics": {"energy": 101.37464145088195, "energy_per_token": 1.490803550748264, "time": 3.591988, "time_per_token": 0.052823352941176474}}
{"outputs": [{"text": " pd.DataFrame(np.random.uniform(min_value, max_value, size=(length, len(COLUMNS))), columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "np", ".", "random", ".", "uniform", "(", "min", "_", "value", ",", " max", "_", "value", ",", " size", "=(", "length", ",", " len", "(", "COL", "UM", "NS", ")))", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-1.0476783514022827, -0.00010859376925509423, -0.1127408817410469, -0.3842787444591522, -0.5470988750457764, -0.00012408917245920748, -0.008393014781177044, -0.0002233732520835474, -1.238439917564392, -0.002554964739829302, -0.2913258671760559, -0.0011206544004380703, -2.706014311115723e-05, -0.0009385710000060499, -0.01217222586274147, -4.529942543740617e-06, -1.3351351299206726e-05, -0.004806512035429478, -1.2889773845672607, -0.29394757747650146, -0.10047949850559235, -0.004946020431816578, -0.296562522649765, -8.976056415122002e-05, -0.0005289109540171921, -2.1815061700181104e-05, -0.00022146634000819176, -0.47061002254486084, -0.011616799980401993, -0.16740217804908752, -0.029330052435398102, -0.004082322586327791, -6.318072337307967e-06, -0.0002169373765354976, -0.0222272127866745, -0.04262129217386246], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.005323638673871756, -0.0002910667099058628, -0.0015163839561864734, -0.013930471614003181, -0.04064341261982918, -0.13675446808338165, -0.008385331369936466, -0.01951494626700878, -0.0029318227898329496, -1.9550132492440753e-05, -0.00025519452174194157, -0.008625276386737823, -0.05793692544102669], "finish_reason": "stop"}, {"text": " df.cumsum()", "tokens": [" df", ".", "cum", "sum", "()", "\n"], "logprobs": [-0.13637135922908783, -0.013084269128739834, -0.2631088197231293, -0.06644793599843979, -0.21233004331588745, -0.9567304849624634], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.008847440592944622, -0.38047605752944946], "finish_reason": "stop"}], "metrics": {"energy": 92.12221145439148, "energy_per_token": 1.6161791483226575, "time": 3.1839645, "time_per_token": 0.05585902631578948}}
{"outputs": [{"text": " pd.DataFrame()", "tokens": [" pd", ".", "DataFrame", "()", "\n"], "logprobs": [-1.060481071472168, -0.0001728385395836085, -0.11479399353265762, -2.2637531757354736, -0.0063424017280340195], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.0043445490300655365, -0.0004319211875554174, -0.0012169820256531239, -0.01418531034141779, -0.04482885077595711, -0.16546125710010529, -0.008890331722795963, -0.01757149212062359, -0.002423565834760666, -2.0265373677830212e-05, -0.000243634101934731, -0.00903612282127142, -0.05337471514940262], "finish_reason": "stop"}, {"text": " df.apply(lambda x: np.cumsum(x.value_counts(normalize=True)), axis=0)", "tokens": [" df", ".", "apply", "(", "lambda", " x", ":", " np", ".", "cum", "sum", "(", "x", ".", "value", "_", "counts", "(", "normal", "ize", "=", "True", "))", ",", " axis", "=", "0", ")", "\n"], "logprobs": [-0.13975249230861664, -0.011784225702285767, -1.4631301164627075, -0.01758952997624874, -0.16065940260887146, -0.20795907080173492, -0.0011797142215073109, -0.45491477847099304, -0.0001662831346038729, -0.04592863842844963, -0.023923072963953018, -0.007037376053631306, -0.09089427441358566, -0.6130048036575317, -0.7869200110435486, -0.00046885941992513835, -0.0011954312212765217, -1.5124307870864868, -0.247221902012825, -0.003144084708765149, -0.03006962314248085, -0.0018216458847746253, -0.7757419943809509, -0.18958055973052979, -0.006317762657999992, -0.03702757507562637, -0.022766290232539177, -0.01603211835026741, -0.03517313674092293], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.012659073807299137, -0.40645676851272583], "finish_reason": "stop"}], "metrics": {"energy": 87.14694008255003, "energy_per_token": 1.7785089812765313, "time": 2.744028, "time_per_token": 0.056000571428571434}}
{"outputs": [{"text": " np.random.uniform(min_value, max_value, length)", "tokens": [" np", ".", "random", ".", "uniform", "(", "min", "_", "value", ",", " max", "_", "value", ",", " length", ")", "\n"], "logprobs": [-0.6353579163551331, -0.008076272904872894, -0.01885467953979969, -0.00016080040950328112, -0.9746695160865784, -0.0021779644303023815, -0.4781111180782318, -0.0011987651232630014, -2.1576648578047752e-05, -0.0009029601933434606, -0.007724297232925892, -5.006777428206988e-06, -1.4543427823809907e-05, -0.0028840398881584406, -0.4152553677558899, -0.0054662758484482765, -0.042387768626213074], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.005041031166911125, -0.0004972175229340792, -0.0014249657979235053, -0.014634056948125362, -0.03581547364592552, -0.13458356261253357, -0.009140786714851856, -0.01784706860780716, -0.003296063281595707, -2.0146166207268834e-05, -0.0002479245886206627, -0.011289643123745918, -0.058606408536434174], "finish_reason": "stop"}, {"text": " df.cumsum() / len(df)", "tokens": [" df", ".", "cum", "sum", "()", " /", " len", "(", "df", ")", "\n"], "logprobs": [-0.1303042620420456, -0.01194750051945448, -0.28208136558532715, -0.046156782656908035, -0.2668881416320801, -0.8216726779937744, -2.7581968307495117, -0.0002366024418734014, -0.2727767825126648, -0.039938539266586304, -0.181291401386261], "finish_reason": "stop"}, {"text": " df", "tokens": [" df"], "logprobs": [-0.010248064063489437], "finish_reason": "stop"}], "metrics": {"energy": 44.194135178565986, "energy_per_token": 1.0522413137753805, "time": 2.5380657, "time_per_token": 0.06043013571428572}}
{"outputs": [{"text": " np.random.randint(low=min_value, high=max_value, size=(length, 5))", "tokens": [" np", ".", "random", ".", "rand", "int", "(", "low", "=", "min", "_", "value", ",", " high", "=", "max", "_", "value", ",", " size", "=(", "length", ",", " ", "5", "))", "\n"], "logprobs": [-0.5722283124923706, -0.008150530979037285, -0.01920439675450325, -0.000164018536452204, -0.7049376368522644, -0.1721889078617096, -0.0014209183864295483, -0.8867878317832947, -0.18343865871429443, -0.027430998161435127, -0.0011317284079268575, -4.410734163684538e-06, -0.0007057083421386778, -0.002580172149464488, -0.011899793520569801, -0.001852464396506548, -0.0010675451485440135, -6.556489552167477e-06, -0.1444787234067917, -0.003685350762680173, -0.8549330830574036, -0.06611547619104385, -0.027503138408064842, -2.021790027618408, -0.13884027302265167, -0.03167106211185455, -0.02339475043118], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.004652627278119326, -0.0004135706985834986, -0.0013581824023276567, -0.013260272331535816, -0.03990704193711281, -0.13246223330497742, -0.009058096446096897, -0.01890755444765091, -0.0031234072521328926, -2.002696055569686e-05, -0.00025769727653823793, -0.010894225910305977, -0.04971248656511307], "finish_reason": "stop"}, {"text": " df.cumsum(axis=0)", "tokens": [" df", ".", "cum", "sum", "(", "axis", "=", "0", ")", "\n"], "logprobs": [-0.12996578216552734, -0.01263247150927782, -0.27592435479164124, -0.056733813136816025, -1.4090828895568848, -0.07017674297094345, -0.05329108238220215, -0.09740813821554184, -0.11171390861272812, -0.4176413416862488], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.009976287372410297, -0.4167521297931671], "finish_reason": "stop"}], "metrics": {"energy": 56.526758077621466, "energy_per_token": 1.087053039954259, "time": 2.9658089, "time_per_token": 0.057034786538461536}}
{"outputs": [{"text": " np.random.randint(min_value, max_value + 1, length)", "tokens": [" np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", " +", " ", "1", ",", " length", ")", "\n"], "logprobs": [-0.6012068390846252, -0.008741564117372036, -0.01782505214214325, -0.00015901254664640874, -0.619422972202301, -0.16328613460063934, -0.0013580633094534278, -0.6410731077194214, -0.0011326810345053673, -1.8954096958623268e-05, -0.0013822296168655157, -0.009058096446096897, -2.002696055569686e-05, -1.1801649634435307e-05, -1.521430492401123, -0.003544003702700138, -0.00035339308669790626, -0.001920642564073205, -0.6426121592521667, -0.044962771236896515, -0.06158299744129181], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.0049957213923335075, -0.00032789100077934563, -0.0015120989410206676, -0.013483643531799316, -0.046895962208509445, -0.1361224353313446, -0.007514070253819227, -0.02212437614798546, -0.0026702960021793842, -2.002696055569686e-05, -0.0002531684876885265, -0.008826407603919506, -0.052382417023181915], "finish_reason": "stop"}, {"text": " df.apply(lambda x: np.cumsum(x != x.shift(1)) / len(x))", "tokens": [" df", ".", "apply", "(", "lambda", " x", ":", " np", ".", "cum", "sum", "(", "x", " ", "!", "=", " x", ".", "shift", "(", "1", "))", " /", " len", "(", "x", "))", "\n"], "logprobs": [-0.14948099851608276, -0.014437028206884861, -1.4815213680267334, -0.021869570016860962, -0.1830742210149765, -0.19764262437820435, -0.0010083595989271998, -0.4487990438938141, -0.00014029949670657516, -0.04042762890458107, -0.02515326999127865, -0.009218510240316391, -0.06504024565219879, -3.057222366333008, -1.7762025890988298e-05, -3.6954811548639555e-06, -1.8678364753723145, -0.06212009862065315, -0.227239191532135, -0.6357703804969788, -0.008525168523192406, -0.7011938691139221, -0.35475969314575195, -1.1285077333450317, -0.0001597276859683916, -0.07369814813137054, -0.4074123501777649, -0.03597383573651314], "finish_reason": "stop"}, {"text": " df", "tokens": [" df"], "logprobs": [-0.009862739592790604], "finish_reason": "stop"}], "metrics": {"energy": 108.60906015777587, "energy_per_token": 1.7239533358377122, "time": 3.1704476, "time_per_token": 0.05032456507936508}}
{"outputs": [{"text": " np.random.uniform(low = min_value, high = max_value, size = (length, COLUMNS))", "tokens": [" np", ".", "random", ".", "uniform", "(", "low", " =", " min", "_", "value", ",", " high", " =", " max", "_", "value", ",", " size", " =", " (", "length", ",", " COL", "UM", "NS", "))", "\n"], "logprobs": [-0.5898898839950562, -0.008729392662644386, -0.017801513895392418, -0.00015364897262770683, -0.9729851484298706, -0.0019183820113539696, -1.3304646015167236, -1.764451503753662, -0.011555053293704987, -0.0025148927234113216, -7.986990567587782e-06, -0.0018184330547228456, -0.0065964567475020885, -0.015810254961252213, -0.0024474686942994595, -0.00012563870404846966, -1.9788545614574105e-05, -0.006159608252346516, -0.004806986544281244, -0.11606930196285248, -1.5932095050811768, -0.06428540498018265, -0.018847309052944183, -2.60127592086792, -3.1709168979432434e-05, -0.00045277358731254935, -1.7577648162841797, -0.028662219643592834], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.0051773046143352985, -0.0003073934931308031, -0.001423537265509367, -0.013222156092524529, -0.03434956446290016, -0.1544833928346634, -0.008480843156576157, -0.015931107103824615, -0.0028114099986851215, -2.098061486321967e-05, -0.0002444683632347733, -0.009233983233571053, -0.05897093191742897], "finish_reason": "stop"}, {"text": " df.apply(lambda x: np.cumsum(x.value_counts().divide(length)) * 100)", "tokens": [" df", ".", "apply", "(", "lambda", " x", ":", " np", ".", "cum", "sum", "(", "x", ".", "value", "_", "counts", "()", ".", "div", "ide", "(", "length", "))", " *", " ", "1", "0", "0", ")", "\n"], "logprobs": [-0.15046335756778717, -0.010616019368171692, -1.4383131265640259, -0.016297446563839912, -0.1752241849899292, -0.21215611696243286, -0.0009501233580522239, -0.4156772494316101, -0.0001541257370263338, -0.04332587495446205, -0.02297508344054222, -0.008402235805988312, -0.08860719203948975, -0.7772558331489563, -0.5827242136001587, -0.0004104725376237184, -0.0018141493201255798, -0.309918612241745, -0.9806191325187683, -2.454484224319458, -0.8683263659477234, -0.002933486830443144, -2.0611133575439453, -1.1088420152664185, -2.2402257919311523, -0.10500311851501465, -0.004442821256816387, -0.006536176428198814, -0.0042457920499145985, -0.4055890738964081, -0.05922926589846611], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.010373012162744999, -1.939979076385498, -1.311301275563892e-06, -8.344646857949556e-07, -2.4914430468925275e-05, -7.629103492945433e-05, -0.1074831560254097], "finish_reason": "stop"}], "metrics": {"energy": 82.7404105043411, "energy_per_token": 1.047346968409381, "time": 4.01143, "time_per_token": 0.05077759493670886}}
{"outputs": [{"text": " pd.DataFrame(index = range(length))", "tokens": [" pd", ".", "DataFrame", "(", "index", " =", " range", "(", "length", "))", "\n"], "logprobs": [-1.060481071472168, -0.0001728385395836085, -0.11479399353265762, -0.36018306016921997, -3.5011324882507324, -1.644711971282959, -0.4818684458732605, -0.0008249455713666975, -0.1092662662267685, -0.7459461092948914, -0.05011552944779396], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.0043445490300655365, -0.0004319211875554174, -0.0012169820256531239, -0.01418531034141779, -0.04482885077595711, -0.16546125710010529, -0.008890331722795963, -0.01757149212062359, -0.002423565834760666, -2.0265373677830212e-05, -0.000243634101934731, -0.00903612282127142, -0.05337471514940262], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-2.799923896789551, -0.0009899006690829992, -0.09234660863876343, -0.5327884554862976, -2.5254790782928467, -0.34625667333602905, -0.03589620813727379, -0.015889102593064308, -0.004450654145330191, -0.00021443451987579465, -0.0003526780928950757, -0.011676657013595104, -0.009409012272953987], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.011819686740636826, -0.4528261125087738], "finish_reason": "stop"}], "metrics": {"energy": 82.6615371980667, "energy_per_token": 2.119526594822223, "time": 2.7421207, "time_per_token": 0.07031078717948717}}
{"outputs": [{"text": " np.random.randint(min_value, max_value, size=(1, length))", "tokens": [" np", ".", "random", ".", "rand", "int", "(", "min", "_", "value", ",", " max", "_", "value", ",", " size", "=(", "1", ",", " length", "))", "\n"], "logprobs": [-0.6012068390846252, -0.008741564117372036, -0.01782505214214325, -0.00015901254664640874, -0.619422972202301, -0.16328613460063934, -0.0013580633094534278, -0.6410731077194214, -0.0011326810345053673, -1.8954096958623268e-05, -0.0013822296168655157, -0.009058096446096897, -2.002696055569686e-05, -1.1801649634435307e-05, -0.374602735042572, -1.272456407546997, -0.9171773195266724, -2.8864965438842773, -0.11916956305503845, -0.09718327969312668, -0.02294374443590641, -0.1562640368938446], "finish_reason": "stop"}, {"text": " pd.DataFrame(data, columns=COLUMNS)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "COL", "UM", "NS", ")", "\n"], "logprobs": [-0.005367510952055454, -0.0003828269545920193, -0.0012544866185635328, -0.014193889684975147, -0.04218710586428642, -0.15803031623363495, -0.00756932282820344, -0.019079027697443962, -0.0030637490563094616, -1.847726889536716e-05, -0.00022075122979003936, -0.009574091993272305, -0.059153422713279724], "finish_reason": "stop"}, {"text": " df.cumsum() / length", "tokens": [" df", ".", "cum", "sum", "()", " /", " length", "\n"], "logprobs": [-0.13085977733135223, -0.012835740111768246, -0.204854354262352, -0.060475725680589676, -0.24097666144371033, -0.8152827024459839, -1.3569810390472412, -0.08450072258710861], "finish_reason": "stop"}, {"text": " df", "tokens": [" df", "\n"], "logprobs": [-0.00886563677340746, -0.38564974069595337], "finish_reason": "stop"}], "metrics": {"energy": 50.359763030052186, "energy_per_token": 1.1191058451122708, "time": 2.5357785, "time_per_token": 0.05635063333333334}}
