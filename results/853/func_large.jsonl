{"outputs": [{"text": "summary = {}\n\n    invalid_dir_path = os.path.join(directory_path, \"Invalid\")\n    os.makedirs(invalid_dir_path, exist_ok=True)\n\n    for filename in os.listdir(directory_path):\n        if filename.startswith('.'):\n            continue\n\n        file_path = os.path.join(directory_path, filename)\n        if not os.path.isfile(file_path):\n            continue\n\n        ending = os.path.splitext(filename)[1]\n        if not any(char in INVALID_CHARACTERS for char in filename):\n            if ending in summary:\n                summary[ending] += 1\n            else:\n                summary[ending] = 1\n        else:\n            shutil.move(file_path, invalid_dir_path)\n            summary['Invalid'] = summary.get('Invalid', 0) + 1\n\n    return summary", "tokens": ["summary", " =", " {}", "\n", "\n", "    ", "invalid", "_", "dir", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " \"", "Invalid", "\"", ")", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "invalid", "_", "dir", "_", "path", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "if", " filename", ".", "start", "sw", "ith", "('", ".", "')", ":", "\n", "            ", "continue", "\n", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", "\n", "        ", "if", " not", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "            ", "continue", "\n", "\n", "        ", "ending", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")[", "1", "]", "\n", "        ", "if", " not", " any", "(", "char", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", " for", " char", " in", " filename", "):", "\n", "            ", "if", " ending", " in", " summary", ":", "\n", "                ", "summary", "[", "ending", "]", " +=", " ", "1", "\n", "            ", "else", ":", "\n", "                ", "summary", "[", "ending", "]", " =", " ", "1", "\n", "        ", "else", ":", "\n", "            ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " invalid", "_", "dir", "_", "path", ")", "\n", "            ", "summary", "['", "Invalid", "']", " =", " summary", ".", "get", "('", "Invalid", "'", ",", " ", "0", ")", " +", " ", "1", "\n", "\n", "    ", "return", " summary", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.9261104464530945, -0.003763380227610469, -0.09414701908826828, -0.10688643157482147, -1.2042943239212036, -0.0014755562879145145, -3.3502907752990723, -0.01233508437871933, -1.0498011112213135, -1.7572776079177856, -0.045530054718256, -0.0007780147134326398, -0.13624529540538788, -5.1616290875244886e-05, -0.00036221143091097474, -1.3351351299206726e-05, -0.004024621564894915, -0.0005934861255809665, -0.006819427013397217, -0.0002795067266561091, -7.152555099310121e-07, -0.0005936052766628563, -1.0002555847167969, -0.026921236887574196, -0.0033639054745435715, -0.0005210472736507654, -0.010501128621399403, -0.164372056722641, -0.593018114566803, -2.634490556374658e-05, -0.03334465250372887, -2.5987286790041253e-05, -3.2186455882765586e-06, -8.821448318485636e-06, -0.005410195793956518, -5.245195097813848e-06, -1.4662635294371285e-05, -0.00025340684805996716, -8.106198947643861e-06, -0.0411224327981472, -0.0002847504511009902, -2.7418097943154862e-06, -8.34461570775602e-06, -0.003831072011962533, -0.0006261295638978481, -7.56950321374461e-05, -0.06917417794466019, -0.03435106202960014, -0.0005211663665249944, -0.12678533792495728, -0.8681347370147705, -0.000288087350782007, -0.01230788417160511, -8.344646857949556e-07, -0.0003532739356160164, 0.0, -0.00014935807848814875, -0.0002650863316375762, -4.8993817472364753e-05, -4.768370445162873e-07, -0.00044383687782101333, -0.0009893052047118545, -0.006919114384800196, -0.5315492749214172, -1.3549866676330566, -0.21506956219673157, -0.04948980361223221, -0.033852651715278625, -0.008432024158537388, -2.0763299465179443, -0.019744638353586197, -0.00653807120397687, -0.16114117205142975, -0.23783263564109802, -0.0021663072984665632, -0.13360048830509186, -0.1254771649837494, -0.21742138266563416, -0.001261034864000976, -0.7723374366760254, -0.1507800966501236, -0.04291198030114174, -0.00039664984797127545, -0.00022671037004329264, 0.0, -2.2291887944447808e-05, -8.344646857949556e-07, -0.00019464982324279845, -9.298280929215252e-06, -0.0001677133986959234, -7.033323527139146e-06, -6.198863957251888e-06, -1.2397689715726301e-05, -0.00011872540198964998, -3.9457496313843876e-05, -0.0010509926360100508, -0.6090209484100342, -0.23200368881225586, -1.6607969999313354, -0.009318312630057335, -7.152555099310121e-07, -6.8662193370983e-05, -4.768370445162873e-07, -9.667406266089529e-05, -0.021103831008076668, -3.075552376685664e-05, -0.00030393750057555735, -2.3841830625315197e-06, -3.576278118089249e-07, -0.05793546140193939, -0.002654007636010647, -0.0005734706646762788, -0.006888925097882748, -0.0052400389686226845, -0.002488137688487768, -0.0004374024283606559, -3.0626258850097656, -0.001867694896645844, -0.3013416826725006, -3.576272320060525e-06, -7.033323527139146e-06, -3.576278118089249e-07, -0.00016711745411157608, -7.152555099310121e-07, 0.0, -2.7417760065873154e-05, -0.02249463088810444, -0.10754343122243881, -0.0009957361035048962, -0.6778615713119507, -1.3536779880523682, -0.29182958602905273, -0.10929971933364868, -0.7881397008895874, -2.4406933784484863, -0.030345940962433815, -0.8367627263069153, -0.11507464200258255, -0.15280219912528992, -9.536738616588991e-07, -1.311301275563892e-06, -1.9073468138230965e-06, -6.198863957251888e-06, -7.152531907195225e-06, -0.00045253525604493916, -2.1934269170742482e-05, -3.909988299710676e-05, -0.008785168640315533, -0.04543926939368248, -0.0014190138317644596, -0.002366838976740837, -0.3626279830932617, -0.21074321866035461, -1.4440853595733643, -0.0008010039455257356, -0.009342405013740063, -0.00042226933874189854, -0.00036113892565481365, -0.002918985905125737, -0.00013302871957421303, -0.0004220310365781188, -0.0009883524617180228, -0.00148781668394804, -0.00020895205670967698, -5.8412379075889476e-06, -0.0004040378553327173, -0.0020080895628780127, -0.0009376181988045573, -2.5748875486897305e-05, -1.6093124941107817e-05, -8.40390202938579e-05, -0.0027835930231958628, -3.158996332786046e-05, -8.821448318485636e-06, -6.174850568640977e-05, -2.4914430468925275e-05, -6.997340824455023e-05, -0.00014232576359063387, -0.0002019201492657885, -0.7776458263397217, -0.0023430532310158014, -4.410734163684538e-06, -0.000316927267704159, -0.000683074293192476, -0.8107356429100037, -1.6689286894688848e-06, -2.3841830625315197e-06, -0.0006269635050557554, -1.9192511899746023e-05, -0.0033179253805428743, -2.8490614567999728e-05, -1.5497195136049413e-06, -5.113947918289341e-05, -1.0544878244400024, -4.0531076592742465e-06, -4.911301948595792e-05, -0.00010013079008786008, 0.0, -0.00994996726512909, -0.0021793919149786234, -0.22634030878543854, -0.5672417879104614, -0.9298010468482971, -0.004735208116471767, -0.00108624086715281, -0.02015666849911213, -0.0060846093110740185, -0.0005153281381353736, -0.012352628633379936, -0.0027986904606223106, -9.393251093570143e-05, -0.00044610086479224265, -4.529942543740617e-06, -0.00020013237372040749, -0.0015667318366467953, -0.00018785618885885924, -0.00034814971149899065, -9.154854342341423e-05, -2.0146166207268834e-05, -0.003503496292978525, -0.01567753404378891, -0.0031762884464114904, -0.08446972072124481, -0.0003859252028632909, -1.237753987312317, -2.264974000354414e-06, -1.1920922133867862e-06, -1.6689286894688848e-06, -3.2186455882765586e-06, -0.1303752064704895], "finish_reason": "stop"}], "metrics": {"energy": 847.614849626541, "energy_per_token": 3.685281954898004, "time": 19.752407, "time_per_token": 0.08588003043478261}}
{"outputs": [{"text": "# Initialize empty summary dictionary\n    summary = {}\n\n    # Create \"Invalid\" directory if it doesn't exist\n    if not os.path.exists('Invalid'):\n        os.mkdir('Invalid')\n\n    # Initialize counts for valid and invalid files\n    valid_count = 0\n    invalid_count = 0\n\n    # Loop through all files in the directory\n    for file in os.listdir(directory_path):\n        if os.path.isfile(os.path.join(directory_path, file)):\n            # Check if filename contains invalid characters\n            if all(c not in INVALID_CHARACTERS for c in file):\n                # If filename is valid, move the file to the appropriate directory\n                ending = file.split('.')[-1]\n                if not os.path.exists(ending):\n                    os.mkdir(ending)\n                shutil.move(file, f'{ending}/{file}')\n                valid_count += 1\n                summary[ending] = summary.get(ending, 0) + 1\n            else:\n                # If filename contains invalid characters,", "tokens": ["#", " Initialize", " empty", " summary", " dictionary", "\n", "    ", "summary", " =", " {}", "\n", "\n", "    ", "#", " Create", " \"", "Invalid", "\"", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "('", "Invalid", "')", ":", "\n", "        ", "os", ".", "mk", "dir", "('", "Invalid", "')", "\n", "\n", "    ", "#", " Initialize", " counts", " for", " valid", " and", " invalid", " files", "\n", "    ", "valid", "_", "count", " =", " ", "0", "\n", "    ", "invalid", "_", "count", " =", " ", "0", "\n", "\n", "    ", "#", " Loop", " through", " all", " files", " in", " the", " directory", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " file", "))", ":", "\n", "            ", "#", " Check", " if", " filename", " contains", " invalid", " characters", "\n", "            ", "if", " all", "(", "c", " not", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", " for", " c", " in", " file", "):", "\n", "                ", "#", " If", " filename", " is", " valid", ",", " move", " the", " file", " to", " the", " appropriate", " directory", "\n", "                ", "ending", " =", " file", ".", "split", "('", ".", "')", "[-", "1", "]", "\n", "                ", "if", " not", " os", ".", "path", ".", "exists", "(", "ending", "):", "\n", "                ", "    ", "os", ".", "mk", "dir", "(", "ending", ")", "\n", "                ", "sh", "util", ".", "move", "(", "file", ",", " f", "'{", "ending", "}/{", "file", "}", "')", "\n", "                ", "valid", "_", "count", " +=", " ", "1", "\n", "                ", "summary", "[", "ending", "]", " =", " summary", ".", "get", "(", "ending", ",", " ", "0", ")", " +", " ", "1", "\n", "            ", "else", ":", "\n", "                ", "#", " If", " filename", " contains", " invalid", " characters", ","], "logprobs": [-0.8680583834648132, -1.1121305227279663, -3.8159995079040527, -2.2398738861083984, -0.11921326816082001, -0.12861700356006622, -0.0005988473421894014, -0.005207782611250877, -0.00553290406242013, -0.06358638405799866, -0.0008255410939455032, -0.12786336243152618, -0.00043049128726124763, -0.02978397347033024, -1.685249924659729, -1.1490718126296997, -0.04373195767402649, -0.002098026918247342, -0.040486015379428864, -0.17894895374774933, -0.06975524872541428, -0.14310486614704132, -0.000291662581730634, -4.8397800128441304e-05, -0.03895838186144829, -0.08499608933925629, -0.00011801023356383666, -1.649004578590393, -0.04478941112756729, -0.0016624215058982372, -1.1801649634435307e-05, -0.0001928620331455022, -8.34461570775602e-06, -0.06220041960477829, -1.7435634136199951, -0.009492499753832817, -0.002241600537672639, -0.0009996660519391298, -0.0008017186191864312, -0.0023516162764281034, -0.008609085343778133, -3.576272320060525e-06, -0.690409243106842, -3.576278118089249e-07, -0.001749057904817164, -9.97731985989958e-05, -3.397406908334233e-05, -0.00019631843315437436, -0.06598903983831406, -0.0011629253858700395, -0.01434078998863697, -3.563300132751465, -3.9036147594451904, -0.3148048222064972, -1.6066515445709229, -0.061242636293172836, -0.003596268827095628, -0.3969894349575043, -0.05726935714483261, -0.00010918975021922961, -0.08867908269166946, -0.03178354352712631, -0.15218810737133026, -0.05620880052447319, -0.02801167592406273, -0.0006847421173006296, -0.001761909923516214, -0.00046433156239800155, -0.0011362532386556268, -4.017272294731811e-05, -0.00020716428116429597, -7.176141662057489e-05, -8.809178689261898e-05, -0.0012155532604083419, -2.3841574147809297e-05, -0.007734233979135752, -0.00019047829846385866, -0.016764355823397636, -1.0094914436340332, -0.17943157255649567, -0.7246456742286682, -0.10199301689863205, -0.10007619112730026, -0.12269066274166107, -0.05492078512907028, -0.08351461589336395, -6.5205356804654e-05, -0.01128940749913454, -0.5786762833595276, -0.7173995971679688, -0.0058239055797457695, -6.6756979322235566e-06, -0.006760226096957922, 0.0, -0.0006562701892107725, -0.0006358985556289554, -0.00017629499780014157, -1.0728830375228426e-06, -0.0002762889489531517, -0.0001896439935080707, -0.039658788591623306, -2.44295072555542, -0.2939446270465851, -1.2755313036905136e-05, -2.539125671319198e-05, -3.576278118089249e-07, -0.0007469248375855386, -0.04703495278954506, -0.00045694399159401655, -0.030918803066015244, -5.722029527532868e-06, -5.483612312673358e-06, -3.576278118089249e-07, -2.0861407392658293e-05, -5.972207145532593e-05, -0.00019453064305707812, -1.811964830267243e-05, -3.576278118089249e-07, -9.643566590966657e-05, -0.002522027352824807, -2.312633478140924e-05, -0.00884484127163887, -0.0070434133522212505, -0.019924381747841835, -0.1433173567056656, -0.5860221982002258, -0.10409429669380188, -3.3697080612182617, -0.24075722694396973, -0.11324449628591537, -0.0023247378412634134, -0.018985457718372345, -0.0002196785935666412, -0.11517207324504852, -2.7944257259368896, -0.11501843482255936, -0.5761598348617554, -0.092359758913517, -7.152555099310121e-07, -0.07016696780920029, -8.344646857949556e-07, -1.0728830375228426e-06, -1.7881377516459906e-06, -8.702239938429557e-06, -2.3841855067985307e-07, -0.0009386900928802788, -4.100715523236431e-05, -2.7417760065873154e-05, -0.008147929795086384, -0.017807135358452797, -0.0011705459328368306, -0.0017114529618993402, -0.23848527669906616, -2.4781808853149414, -0.7086566686630249, -0.11256109178066254, -0.0013067525578662753, -0.006379240658134222, -1.0226922035217285, -1.3893415927886963, -0.0004670721245929599, -0.03608928620815277, -0.6060658097267151, -1.9174575805664062, -0.10992778837680817, -0.314961701631546, -0.000617432699073106, -1.288040280342102, -0.0025981261860579252, -0.19773262739181519, -0.003607671707868576, -0.019701626151800156, -0.2683713436126709, -0.0004934046883136034, -0.001697053201496601, -0.009936157613992691, -4.4225667807040736e-05, -0.0003280101518612355, -0.15549850463867188, -0.018315477296710014, -0.16743020713329315, -1.0885648727416992, -0.010587829165160656, -1.311301275563892e-06, -7.152531907195225e-06, -9.536738616588991e-07, -0.0017151420470327139, -0.008682476356625557, -0.02813767082989216, -0.003832021960988641, -0.0030027797911316156, -4.053033626405522e-05, -0.0010553987231105566, -0.026768861338496208, 0.0, -0.005968841258436441, -1.4305104514278355e-06, -0.00046695294440723956, -0.0005415403284132481, -5.8887653722194955e-05, -0.001405086019076407, -0.029293470084667206, -0.05763842165470123, -4.768370445162873e-07, -7.152555099310121e-07, -0.000776347063947469, -0.0002653246629051864, -1.4570993185043335, -0.0002252801787108183, -1.6500835418701172, -0.378873348236084, -0.08188662678003311, -0.03829534351825714, -0.024164672940969467, -0.0037206250708550215, -8.40390202938579e-05, -0.00017569905321579427, -0.035583920776844025, -0.7458842992782593, -3.3378546504536644e-06, -3.111314072157256e-05, -0.0006798578542657197, -0.00027307120035402477, -2.0265373677830212e-05, -0.014499536715447903, -0.9058084487915039, -0.5811313390731812, -0.15630033612251282, -0.02023342251777649, -0.0015662556979805231, -0.0005017452058382332, -0.04031931981444359, -0.0012038849527016282, -0.013487995602190495, -6.997340824455023e-05, -0.0007316772826015949, -0.0001280225842492655, -0.000621840707026422, -0.00034290633630007505, -0.0002836778585333377, -0.00013636612857226282, -0.000788258679676801, -1.0847986231965479e-05, -0.006979963276535273, -0.012314360588788986, -0.002357800491154194, -1.3232143828645349e-05, -0.000377583724912256, -0.0003252692404203117, -0.008364643901586533, -0.0058569712564349174, -0.004758344031870365, -0.8111048340797424, -0.0005142558366060257, -0.0006740205571986735, -0.0004371640970930457], "finish_reason": "length"}], "metrics": {"energy": 926.0388502101898, "energy_per_token": 3.617339258633554, "time": 22.473026, "time_per_token": 0.0877852578125}}
{"outputs": [{"text": "summary = {}\n    invalid_directory = directory_path + '/Invalid'\n    os.makedirs(invalid_directory, exist_ok=True)\n\n    for filename in os.listdir(directory_path):\n        file_path = directory_path + '/' + filename\n        if os.path.isfile(file_path):\n            if any(char in INVALID_CHARACTERS for char in filename):\n                shutil.move(file_path, invalid_directory)\n                summary.setdefault('Invalid', 0)\n                summary['Invalid'] += 1\n            else:\n                ending = filename.split('.')[-1]\n                if ending in summary:\n                    summary[ending] += 1\n                else:\n                    new_directory = directory_path + '/' + ending\n                    os.makedirs(new_directory, exist_ok=True)\n                    summary[ending] = 1\n                shutil.move(file_path, directory_path + '/' + ending)\n\n    return summary", "tokens": ["summary", " =", " {}", "\n", "    ", "invalid", "_", "directory", " =", " directory", "_", "path", " +", " '/", "Invalid", "'", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "invalid", "_", "directory", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "file", "_", "path", " =", " directory", "_", "path", " +", " '/", "'", " +", " filename", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "            ", "if", " any", "(", "char", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", " for", " char", " in", " filename", "):", "\n", "                ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " invalid", "_", "directory", ")", "\n", "                ", "summary", ".", "set", "default", "('", "Invalid", "'", ",", " ", "0", ")", "\n", "                ", "summary", "['", "Invalid", "']", " +=", " ", "1", "\n", "            ", "else", ":", "\n", "                ", "ending", " =", " filename", ".", "split", "('", ".", "')", "[-", "1", "]", "\n", "                ", "if", " ending", " in", " summary", ":", "\n", "                ", "    ", "summary", "[", "ending", "]", " +=", " ", "1", "\n", "                ", "else", ":", "\n", "                ", "    ", "new", "_", "directory", " =", " directory", "_", "path", " +", " '/", "'", " +", " ending", "\n", "                ", "    ", "os", ".", "m", "aked", "irs", "(", "new", "_", "directory", ",", " exist", "_", "ok", "=", "True", ")", "\n", "                ", "    ", "summary", "[", "ending", "]", " =", " ", "1", "\n", "                ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " directory", "_", "path", " +", " '/", "'", " +", " ending", ")", "\n", "\n", "    ", "return", " summary", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.9261104464530945, -0.003763380227610469, -0.09414701908826828, -0.10688643157482147, -0.3570042848587036, -0.42816224694252014, -0.041889119893312454, -1.072547197341919, -0.09083527326583862, -1.1344640254974365, -0.0005808573332615197, -2.9205850296420977e-05, -0.24273258447647095, -1.0477995872497559, -0.052100129425525665, -0.12920384109020233, -0.02874087356030941, -0.38683950901031494, -0.7138956785202026, -5.2569914259947836e-05, -0.14585039019584656, -3.5523738915799186e-05, -1.2874520507466514e-05, -0.0001212284987559542, -0.01608080230653286, -4.291525328881107e-06, -4.8397800128441304e-05, -0.04987694323062897, -0.0007090438157320023, -4.172316494077677e-06, -9.536738616588991e-07, -0.007199652958661318, -0.0005585778853856027, -0.00018320789968129247, -0.16095811128616333, -0.3823787569999695, -0.0004124982515349984, -0.15475566685199738, -0.5257761478424072, -0.00026770823751576245, -0.008784813806414604, -9.536738616588991e-07, -0.0036077904514968395, 0.0, -0.00025996167096309364, -0.0005637010326609015, -0.00015496007108595222, -1.5497195136049413e-06, -0.0006835508393123746, -0.0007439468172378838, -0.005471255164593458, -1.3290807008743286, -0.16569450497627258, -0.23528139293193817, -0.00030048147891648114, -3.0174195766448975, -1.7523612768854946e-05, -3.576278118089249e-07, -0.0034502758644521236, -0.050379447638988495, -0.0004294188693165779, -7.152301259338856e-05, -0.0003326578007545322, -0.001450797077268362, -0.5491353273391724, -0.33098146319389343, -0.10966609418392181, -1.311301275563892e-06, -6.460934673668817e-05, -4.768370445162873e-07, -0.0006132629350759089, -0.05124463140964508, -4.3987260141875595e-05, -0.000276765669696033, -7.748573807475623e-06, -1.1920928244535389e-07, -0.16634325683116913, -0.0035780949983745813, -0.007902074605226517, -1.379108190536499, -0.23132409155368805, -0.019784025847911835, -0.9755064845085144, -0.007456921506673098, -0.031259935349226, -1.0728830375228426e-06, -1.6689286894688848e-06, -1.5497195136049413e-06, -6.556489552167477e-06, -8.344646857949556e-07, -0.0009048658539541066, -1.847726889536716e-05, -2.7656173188006505e-05, -0.00158791767898947, -0.013925769366323948, -0.001713952049612999, -0.0006294653285294771, -0.3021608293056488, -2.622600959512056e-06, -1.6689286894688848e-06, -0.0003034608089365065, -3.611976353568025e-05, -0.002169875893741846, -1.2278481335670222e-05, -9.536738616588991e-07, -0.00015424491721205413, -0.0784679427742958, -3.099436753473128e-06, -0.00010990492592100054, -0.16793332993984222, -0.0012488907668739557, -0.04471565783023834, -0.18988703191280365, -0.8801745176315308, -0.001370087033137679, -7.748573807475623e-06, -0.04340098798274994, -0.0024452093057334423, -0.00041940953815355897, -2.5033637939486653e-05, -0.002442236291244626, -0.00034588552080094814, -2.062299427052494e-05, -0.017444511875510216, -0.15764814615249634, -0.000734297966118902, -0.0009803733555600047, -6.8662193370983e-05, -2.9802276912960224e-06, -0.001790588372386992, -0.00036090059438720345, -1.823885577323381e-05, -0.0008064831490628421, -0.03443318232893944, -0.007081291638314724, -1.3232143828645349e-05, -0.00027807659353129566, -0.00020883286197204143, -2.1121745109558105, -0.0018778087105602026, -0.1474437266588211, -0.002397997537627816, -0.09499186277389526, -0.0666753500699997, -0.0003849719068966806, -0.0035949621815234423, -0.005396797321736813, -3.957670196541585e-05, -0.0002610342635307461, -0.07823745906352997, -0.0019345632754266262, -3.04693603515625, -0.4912751019001007, -1.8243827819824219, -0.017280960455536842, -0.030763451009988785, -0.0009956170106306672, -0.00029845553217455745, -0.0005031750188209116, -0.027081826701760292, -0.0008887869771569967, -0.00017414960893802345, -0.0006294653285294771, -0.004168512299656868, -0.000506511190906167, -1.9550132492440753e-05, -0.0012880609137937427, -0.00031716562807559967, -0.007499398663640022, -1.9073304429184645e-05, -0.00012313561455812305, -0.0002047805901383981, -0.0006780709372833371, -2.212630271911621, -0.0003513672563713044, -0.014645804651081562, -0.0155266048386693, -0.006287436932325363, -4.160317621426657e-05, -3.2186455882765586e-06, -0.001148755894973874, -0.0036684852093458176, -0.003370321122929454, -9.190614218823612e-05, -0.005132356658577919, -0.011460777372121811, -0.0002719986077863723, -1.1801649634435307e-05, -0.01009572297334671, -5.006777428206988e-06, -0.030611196532845497, -1.5497195136049413e-06, -4.768370445162873e-07, -1.2636104656849056e-05, -0.0004219118563923985, -1.9073468138230965e-06, -1.0490362910786644e-05, -0.020522279664874077, -0.00016139635408762842, -7.152555099310121e-07, -2.3841855067985307e-07, -6.031808152329177e-05, -0.0006266061100177467, -7.271740287251305e-06, -0.0006412595394067466, -0.0014806747203692794, -2.7179348762729205e-05, -1.5187489986419678, -0.053167201578617096, -0.00010287232726113871, -0.0003583981015253812, -4.7205765440594405e-05, -0.00032550760079175234, -0.0071138422936201096, -0.002394429873675108, -0.19046993553638458, -0.5320301055908203, -7.152555099310121e-07, -7.152555099310121e-07, -0.00028796817059628665, -1.847726889536716e-05, -0.0005628670332953334, -3.933898824470816e-06, -3.576278118089249e-07, -5.221230458118953e-05, -1.3535759449005127, -3.909988299710676e-05, -4.291525328881107e-06, -0.004248877987265587, -0.0015254301251843572, -0.00028546550311148167, -4.7205765440594405e-05, -0.005463785957545042, -0.24548271298408508, -0.004073418211191893, -0.1711130440235138, -0.0021080193109810352, -0.037355948239564896, -0.0006065912893973291, -1.2897136211395264, -1.1920922133867862e-06, -1.311301275563892e-06, -2.0265558760002023e-06, -4.172316494077677e-06, -1.8761578798294067, -0.0035912799648940563], "finish_reason": "stop"}], "metrics": {"energy": 861.6595482997893, "energy_per_token": 3.50268109064955, "time": 21.030184, "time_per_token": 0.08548855284552845}}
{"outputs": [{"text": "# Initialize a summary dictionary\n    summary = {}\n\n    # List all files in the directory\n    all_files = os.listdir(directory_path)\n\n    # Create the \"Invalid\" directory if it doesn't exist\n    invalid_path = os.path.join(directory_path, 'Invalid')\n    if not os.path.exists(invalid_path):\n        os.makedirs(invalid_path)\n\n    # Iterate over all files and move them based on their endings\n    for file in all_files:\n        # Get the file extension and its name without the extension\n        file_extension = os.path.splitext(file)[1]\n        file_without_extension = os.path.splitext(file)[0]\n\n        # Check if the file name has invalid characters\n        if any(char in INVALID_CHARACTERS for char in file_without_extension):\n            # Move to \"Invalid\" directory if it has invalid characters\n            shutil.move(os.path.join(directory_path, file), os.path.join(invalid_path, file))\n            summary", "tokens": ["#", " Initialize", " a", " summary", " dictionary", "\n", "    ", "summary", " =", " {}", "\n", "\n", "    ", "#", " List", " all", " files", " in", " the", " directory", "\n", "    ", "all", "_", "files", " =", " os", ".", "list", "dir", "(", "directory", "_", "path", ")", "\n", "\n", "    ", "#", " Create", " the", " \"", "Invalid", "\"", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "invalid", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " '", "Invalid", "')", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "invalid", "_", "path", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "invalid", "_", "path", ")", "\n", "\n", "    ", "#", " Iter", "ate", " over", " all", " files", " and", " move", " them", " based", " on", " their", " end", "ings", "\n", "    ", "for", " file", " in", " all", "_", "files", ":", "\n", "        ", "#", " Get", " the", " file", " extension", " and", " its", " name", " without", " the", " extension", "\n", "        ", "file", "_", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ")[", "1", "]", "\n", "        ", "file", "_", "without", "_", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ")[", "0", "]", "\n", "\n", "        ", "#", " Check", " if", " the", " file", " name", " has", " invalid", " characters", "\n", "        ", "if", " any", "(", "char", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", " for", " char", " in", " file", "_", "without", "_", "extension", "):", "\n", "            ", "#", " Move", " to", " \"", "Invalid", "\"", " directory", " if", " it", " has", " invalid", " characters", "\n", "            ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " file", ")", ",", " os", ".", "path", ".", "join", "(", "invalid", "_", "path", ",", " file", "))", "\n", "            ", "summary"], "logprobs": [-0.8680583834648132, -1.1121305227279663, -1.7170977592468262, -0.9129718542098999, -0.04535200819373131, -0.8470239639282227, -0.0004447901446837932, -0.009766179136931896, -0.0027155925054103136, -0.08140212297439575, -0.0010483728256076574, -0.18202362954616547, -0.0003594706067815423, -0.028055259957909584, -3.6123781204223633, -0.2688208818435669, -0.22910718619823456, -0.09639734029769897, -0.02888912707567215, -0.08700834959745407, -0.15792812407016754, -0.0001232548092957586, -2.165672540664673, -0.0077684191055595875, -0.02702021598815918, -0.007732341066002846, -0.032235316932201385, -5.722029527532868e-06, -0.0017370387213304639, -5.960462772236497e-07, -0.00019274283840786666, -0.0014229421503841877, -0.00014959646796341985, -1.1920928244535389e-07, -0.00010322991875000298, -0.0005304598016664386, -0.05291950702667236, -0.0002512616047170013, -0.032232314348220825, -1.6366870403289795, -1.400492787361145, -0.37943682074546814, -0.02528253011405468, -0.002181770745664835, -0.045577894896268845, -0.09516984969377518, -0.021812302991747856, -0.15362530946731567, -0.00023445718397852033, -3.6477376852417365e-05, -0.012302467599511147, -0.05235617235302925, -8.129743218887597e-05, -0.15736809372901917, -0.000582525331992656, -1.8574488162994385, -0.0002320735511602834, -0.03436776250600815, -2.50339189733495e-06, -3.2543604902457446e-05, -9.536738616588991e-07, -0.000720956246368587, -0.00020787939138244838, -0.00028224775451235473, -4.637133679352701e-05, -1.0728830375228426e-06, -0.00033778208307921886, -0.8599525690078735, -0.004254219587892294, -0.0006261295638978481, -0.0006038511055521667, -0.007681592833250761, -0.5604835152626038, -0.004575260449200869, -0.00010489867418073118, -1.1920922133867862e-06, -4.2676016164477915e-05, -9.536738616588991e-07, -0.04703188315033913, -8.05822346592322e-05, -0.00015555603022221476, -1.0728830375228426e-06, -2.3841855067985307e-07, -0.0003716255014296621, -0.00018165845540352166, -0.001090289675630629, -0.0028105778619647026, -5.960462772236497e-07, -0.7278617024421692, -0.00022659118985757232, -2.0265558760002023e-06, -0.00020549570035655051, -6.007967749610543e-05, -2.9802276912960224e-06, 0.0, -0.0002898749662563205, -0.0004029654082842171, -0.09060675650835037, -0.001260201446712017, -0.05356399342417717, -0.8076158165931702, -0.00035398892941884696, -0.5699777007102966, -0.8163981437683105, -0.04420596361160278, -1.7793323993682861, -1.117159128189087, -0.08579618483781815, -2.5782315731048584, -7.497983460780233e-05, -0.0899621769785881, -0.396543949842453, -4.7444173105759546e-05, -0.03551799803972244, -0.00010573305189609528, -0.0025311834178864956, -0.33464333415031433, -0.8674986958503723, -0.0016980052459985018, -2.622600959512056e-06, -1.1920928244535389e-07, -0.00012361239350866526, -0.00011073929636040702, -0.00918968953192234, -0.6544089913368225, -2.5012149810791016, -0.08405694365501404, -0.2434541881084442, -0.5226414799690247, -1.8867640495300293, -3.3436403274536133, -3.753849744796753, -0.5055464506149292, -0.2711917459964752, -0.022434718906879425, -0.024705149233341217, -0.00011491115583339706, -0.5101044774055481, -0.0025912299752235413, -0.2901231348514557, -0.004273805767297745, -0.27815064787864685, -1.311301275563892e-06, -3.504691630951129e-05, -2.3841855067985307e-07, -8.105902816168964e-05, -2.3841855067985307e-07, 0.0, -2.0503786799963564e-05, -0.000976919662207365, -0.09741311520338058, -0.0006943913758732378, -0.41066086292266846, -0.20909634232521057, -0.009554846212267876, -0.14148131012916565, -0.0004297763225622475, -3.0752782821655273, -0.00021765247220173478, -0.19600144028663635, -0.0016611122991889715, -0.04439333826303482, -1.2040065485052764e-05, -7.510157047363464e-06, -1.1920928244535389e-07, -0.017627714201807976, 0.0, 0.0, -1.0847986231965479e-05, -0.005743429530411959, -0.0004158347437623888, -0.00023362292267847806, -9.274052717955783e-05, -0.003977484069764614, -0.03376460075378418, -0.0007307243067771196, -0.012687559239566326, -0.263987272977829, -0.10048768669366837, -0.1394144892692566, -0.08959689736366272, -0.3446907103061676, -2.4723188877105713, -0.32748839259147644, -0.0003455280384514481, -0.07179471850395203, -0.00015484087634831667, -0.39440658688545227, -0.28281304240226746, -0.017270416021347046, -0.4141457974910736, -0.004665086045861244, -0.04745112732052803, -1.4305104514278355e-06, -1.5497195136049413e-06, -1.1920922133867862e-06, -9.65590606938349e-06, -8.344646857949556e-07, -0.0010896942112594843, -1.5616295058862306e-05, -1.7404405298293568e-05, -0.002853728597983718, -0.0239848755300045, -0.01137273944914341, 0.0, -3.6954811548639555e-06, -0.00964209996163845, -0.00013195598148740828, -0.0031701093539595604, -0.5139092206954956, -0.11768342554569244, -2.3713977336883545, -1.8750739097595215, -0.0026463984977453947, -0.0005303407087922096, -0.10079921782016754, -2.5853607654571533, -0.8675423264503479, -0.3039851486682892, -0.0166404377669096, -0.011796713806688786, -0.012807965278625488, -0.00030155404238030314, -0.14903536438941956, -1.6689286894688848e-06, -1.0728830375228426e-06, -0.0002935693773906678, -0.00013684290752280504, -0.03234127163887024, -3.814689989667386e-06, -6.6756979322235566e-06, -1.0251946150674485e-05, -1.537788011773955e-05, -2.6702524337451905e-05, -0.00036054308293387294, -4.4225667807040736e-05, -1.0728830375228426e-06, -0.00010871296399272978, -0.0012137673329561949, -0.0002232540718978271, -7.199982064776123e-05, -0.2974076271057129, -5.722029527532868e-06, -2.145764938177308e-06, -3.3378546504536644e-06, -1.3112935448589269e-05, -0.00022492263815365732, -0.020756762474775314, -3.3378546504536644e-06, -4.029192859889008e-05, -0.0009508379152975976, -0.0007552632014267147, -0.0011597104603424668, -0.000259365770034492, -0.3755759298801422, -0.24992090463638306], "finish_reason": "length"}], "metrics": {"energy": 903.6338437662126, "energy_per_token": 3.529819702211768, "time": 22.049486, "time_per_token": 0.0861308046875}}
{"outputs": [{"text": "summary = {}\n    invalid_files = []\n\n    # Recursively iterate over files in directory and its subdirectories\n    for dirpath, dirnames, filenames in os.walk(directory_path):\n        for filename in filenames:\n            # Check if filename contains any invalid characters\n            if any(char in INVALID_CHARACTERS for char in filename):\n                invalid_files.append(os.path.join(dirpath, filename))\n                continue\n\n            # Split filename into name and extension\n            name, extension = os.path.splitext(filename)\n            extension = extension[1:] # remove the dot in extension\n\n            # Create new directory for file if necessary and move file there\n            if extension not in summary:\n                os.mkdir(os.path.join(dirpath, extension))\n                summary[extension] = 0\n            shutil.move(os.path.join(dirpath, filename), os.path.join(dirpath, extension))\n            summary[extension] += 1\n\n    # Create a new directory for invalid files if any are found\n    if invalid_", "tokens": ["summary", " =", " {}", "\n", "    ", "invalid", "_", "files", " =", " []", "\n", "\n", "    ", "#", " Rec", "urs", "ively", " iterate", " over", " files", " in", " directory", " and", " its", " sub", "direct", "ories", "\n", "    ", "for", " dir", "path", ",", " dir", "names", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "directory", "_", "path", "):", "\n", "        ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "            ", "#", " Check", " if", " filename", " contains", " any", " invalid", " characters", "\n", "            ", "if", " any", "(", "char", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", " for", " char", " in", " filename", "):", "\n", "                ", "invalid", "_", "files", ".", "append", "(", "os", ".", "path", ".", "join", "(", "dir", "path", ",", " filename", "))", "\n", "                ", "continue", "\n", "\n", "            ", "#", " Split", " filename", " into", " name", " and", " extension", "\n", "            ", "name", ",", " extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")", "\n", "            ", "extension", " =", " extension", "[", "1", ":]", " #", " remove", " the", " dot", " in", " extension", "\n", "\n", "            ", "#", " Create", " new", " directory", " for", " file", " if", " necessary", " and", " move", " file", " there", "\n", "            ", "if", " extension", " not", " in", " summary", ":", "\n", "                ", "os", ".", "mk", "dir", "(", "os", ".", "path", ".", "join", "(", "dir", "path", ",", " extension", "))", "\n", "                ", "summary", "[", "extension", "]", " =", " ", "0", "\n", "            ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "dir", "path", ",", " filename", ")", ",", " os", ".", "path", ".", "join", "(", "dir", "path", ",", " extension", "))", "\n", "            ", "summary", "[", "extension", "]", " +=", " ", "1", "\n", "\n", "    ", "#", " Create", " a", " new", " directory", " for", " invalid", " files", " if", " any", " are", " found", "\n", "    ", "if", " invalid", "_"], "logprobs": [-0.9261104464530945, -0.003763380227610469, -0.09414701908826828, -0.10688643157482147, -0.3570042848587036, -0.42816224694252014, -0.041889119893312454, -2.3384010791778564, -0.21413926780223846, -0.13609382510185242, -0.017762165516614914, -0.49382132291793823, -0.0007700338610447943, -1.1240214109420776, -3.7880477905273438, -0.03388272970914841, -0.02999524027109146, -2.4890565872192383, -1.0587761402130127, -2.0391557216644287, -0.41841012239456177, -1.1119284629821777, -1.058523416519165, -0.7570118308067322, -0.007599254604429007, -0.07985302060842514, -7.557583012385294e-05, -0.043923527002334595, -0.00042274597217328846, -0.014031333848834038, -1.617856502532959, -0.06178193539381027, -0.00049650261644274, -0.18561667203903198, -0.00042358008795417845, -1.7523612768854946e-05, -0.009529577568173409, -1.1920928244535389e-07, -5.960446742392378e-06, -0.00018451895448379219, -0.0006970121758058667, -7.748573807475623e-06, -7.271740287251305e-06, -0.00034791138023138046, -0.001443892833776772, -0.00022027450904715806, -2.3841855067985307e-07, -0.011090539395809174, -0.00046171018038876355, -0.007457631640136242, -0.06072200462222099, -0.14589613676071167, -2.706014311115723e-05, -0.00015948931104503572, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.00013255194062367082, -0.00028391621890477836, -0.012432928197085857, -0.3837454617023468, -0.5087444186210632, -0.21762201189994812, -1.4816663265228271, -0.2565024197101593, -2.3053040504455566, -0.024279633536934853, -0.004946850705891848, -0.043353043496608734, -0.00015186110977083445, -0.09752211719751358, -0.04385894909501076, -0.019608231261372566, -0.4510309398174286, -0.003255902323871851, -0.037627849727869034, -2.0265558760002023e-06, -1.1920922133867862e-06, -2.622600959512056e-06, -1.168244216387393e-05, -1.5497195136049413e-06, -0.0013344916515052319, -5.125986263010418e-06, -1.168244216387393e-05, -0.00040356122190132737, -0.011082993820309639, -0.00016425691137555987, -0.0004573014739435166, -0.1399482786655426, -6.568216485902667e-05, -0.004484596196562052, -0.00017724849749356508, -0.0005644158809445798, -0.010661075823009014, -0.31769847869873047, -5.8412379075889476e-06, -4.2437604861333966e-05, -1.7881377516459906e-06, -0.00135318236425519, -4.088794958079234e-05, -0.0016751555958762765, -2.622600959512056e-06, -3.755022044060752e-05, -0.0006517431465908885, -0.00026425207033753395, -0.000726197671610862, -1.236863613128662, -0.06489311903715134, -0.011223161593079567, -0.07523923367261887, -0.002053178148344159, -0.09735817462205887, -2.749457359313965, -0.29471883177757263, -0.10481807589530945, -0.6094568967819214, -0.009590031579136848, -0.10547953844070435, -0.24039772152900696, -0.00011884459672728553, -0.2795957922935486, -0.011753711849451065, -0.5311349034309387, -0.00015889335190877318, -0.0035053968895226717, -4.768370445162873e-07, -1.4781842764932662e-05, 0.0, -7.70062324590981e-05, -5.1973900554003194e-05, -1.1920922133867862e-06, -5.1377883210079744e-05, -0.0038935344200581312, -0.012521461583673954, -0.00127877457998693, -1.0271347761154175, -0.5161771774291992, -0.0016984812682494521, -0.00036530973738990724, -0.9102854132652283, -9.047575440490618e-05, -0.00044764988706447184, -1.8308261632919312, -1.253221869468689, -1.0595465898513794, -0.44686654210090637, -3.4625518321990967, -2.400489568710327, -0.03728692978620529, -0.04899286851286888, -0.0005731132114306092, -0.01959303580224514, -0.6619248390197754, -1.3372145891189575, -0.0894186794757843, -0.8671020865440369, -1.0307557582855225, -0.5992610454559326, -1.4766652584075928, -1.9183851480484009, -0.1325959861278534, -0.5702658891677856, -1.625920295715332, -0.006276419851928949, -0.00014244495832826942, -0.07348107546567917, -0.10592517256736755, -0.03137651085853577, -4.768370445162873e-07, -0.010799415409564972, -0.021233264356851578, -0.0024418795946985483, -0.000339569611242041, -1.1469759941101074, -1.3589766240329482e-05, -0.9358673095703125, -1.1920928244535389e-07, -0.0005236684810370207, -0.019611036404967308, -6.556489552167477e-06, -2.2411095415009186e-05, -7.152555099310121e-07, -0.00011300401820335537, -0.0004627825692296028, -1.1508890390396118, -0.00011276562872808427, -0.0003200257197022438, -0.0008954567601904273, -0.005077799782156944, -0.007757773622870445, -0.026639677584171295, -0.0011514945654198527, -0.0007552632014267147, -2.634490556374658e-05, -0.0005433275364339352, -1.3828182090946939e-05, -0.000934045237954706, -0.1756305992603302, -0.002818899229168892, -0.19867098331451416, -0.05350354313850403, -5.960462772236497e-07, -3.576278118089249e-07, -0.00020466140995267779, -4.1960789531003684e-05, -0.018994580954313278, -1.7881377516459906e-06, -7.152555099310121e-07, 0.0, -7.986990567587782e-06, -5.602820692729438e-06, -0.0001250427303602919, -8.344646857949556e-07, -6.9141146923357155e-06, -0.00017712931730784476, -1.4662635294371285e-05, -3.075552376685664e-05, -0.026712337508797646, -5.125986263010418e-06, -1.9073468138230965e-06, -8.583032467868179e-06, -1.4781842764932662e-05, -4.815939246327616e-05, -0.0008544846205040812, -4.410734163684538e-06, -6.627816765103489e-05, -0.00016735584358684719, -1.7189090251922607, -0.000390215078368783, -0.12548159062862396, -0.003141232766211033, -7.986703712958843e-05, -1.7165990357170813e-05, -0.0003094194398727268, -0.0007303669699467719, -0.00025149996508844197, -8.702239938429557e-06, -0.0036457993555814028, -0.009427433833479881, -0.01535076554864645, -0.021465014666318893, -1.1496896743774414, -2.3883533477783203, -0.2546927332878113, -0.03846868872642517, -0.134405255317688, -0.060673873871564865, -0.053483765572309494, -1.678391933441162, -0.7596057057380676, -1.4030053615570068, -0.05642886459827423, -0.07831859588623047, -6.353653589030728e-05, -0.015430471859872341, -0.07606539875268936, -1.4185804502631072e-05], "finish_reason": "length"}], "metrics": {"energy": 915.9098293418887, "energy_per_token": 3.5777727708667526, "time": 22.272049, "time_per_token": 0.08700019140625}}
{"outputs": [{"text": "summary = {}  # A dictionary to store the count of files moved to each directory\n\n    for filename in os.listdir(directory_path):\n        # Ignore directories\n        if not os.path.isfile(os.path.join(directory_path, filename)):\n            continue\n\n        # Check if the filename contains invalid characters\n        for char in filename:\n            if char in INVALID_CHARACTERS:\n                # Move the file to the \"Invalid\" directory\n                invalid_directory = os.path.join(directory_path, 'Invalid')\n                if not os.path.exists(invalid_directory):\n                    os.mkdir(invalid_directory)\n                shutil.move(\n                    os.path.join(directory_path, filename),\n                    invalid_directory\n                )\n                summary['Invalid'] = summary.get('Invalid', 0) + 1\n                break\n        else:\n            # Organize the file by its extension\n            extension = os.path.splitext(filename)[1][1:]  # Extract the extension without the dot\n            organized_directory = os.", "tokens": ["summary", " =", " {}", "  ", "#", " A", " dictionary", " to", " store", " the", " count", " of", " files", " moved", " to", " each", " directory", "\n", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "#", " Ign", "ore", " directories", "\n", "        ", "if", " not", " os", ".", "path", ".", "is", "file", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", "))", ":", "\n", "            ", "continue", "\n", "\n", "        ", "#", " Check", " if", " the", " filename", " contains", " invalid", " characters", "\n", "        ", "for", " char", " in", " filename", ":", "\n", "            ", "if", " char", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", ":", "\n", "                ", "#", " Move", " the", " file", " to", " the", " \"", "Invalid", "\"", " directory", "\n", "                ", "invalid", "_", "directory", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " '", "Invalid", "')", "\n", "                ", "if", " not", " os", ".", "path", ".", "exists", "(", "invalid", "_", "directory", "):", "\n", "                ", "    ", "os", ".", "mk", "dir", "(", "invalid", "_", "directory", ")", "\n", "                ", "sh", "util", ".", "move", "(", "\n", "                ", "    ", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", ",", "\n", "                ", "    ", "invalid", "_", "directory", "\n", "                ", ")", "\n", "                ", "summary", "['", "Invalid", "']", " =", " summary", ".", "get", "('", "Invalid", "'", ",", " ", "0", ")", " +", " ", "1", "\n", "                ", "break", "\n", "        ", "else", ":", "\n", "            ", "#", " Organ", "ize", " the", " file", " by", " its", " extension", "\n", "            ", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")[", "1", "][", "1", ":]", "  ", "#", " Ext", "ract", " the", " extension", " without", " the", " dot", "\n", "            ", "organized", "_", "directory", " =", " os", "."], "logprobs": [-0.9261104464530945, -0.003763380227610469, -0.09414701908826828, -2.354261875152588, -0.00018261195509694517, -3.4818849563598633, -0.19470515847206116, -0.07743272930383682, -0.6743097901344299, -0.066739022731781, -0.3140905201435089, -0.024106256663799286, -0.04350017383694649, -0.11231531947851181, -0.02194887585937977, -0.000935950840357691, -0.005988512188196182, -0.25642016530036926, -0.334867388010025, -0.0007052318542264402, -1.283545970916748, -0.7926199436187744, -0.0009419057168997824, -0.020212627947330475, -1.168244216387393e-05, -0.011032061651349068, 0.0, -0.00013696208770852536, -0.001909815357066691, -0.00015615197480656207, 0.0, -0.00017331528943032026, -0.04140692204236984, -0.010371950455009937, -1.2881885766983032, -3.1003010272979736, -0.007149351295083761, -0.3921114504337311, -0.38488128781318665, -0.0001991788885788992, -0.009119878523051739, -2.2507307529449463, -0.013484349474310875, -6.556489552167477e-06, -1.585470999998506e-05, -2.3841855067985307e-07, -0.00010477947944309562, -0.046130262315273285, -9.464769391342998e-05, -0.0465523861348629, -2.3841830625315197e-06, -1.1324817933200393e-05, -1.1920922133867862e-06, -4.625213477993384e-05, -1.823885577323381e-05, -0.00018189683032687753, -8.106198947643861e-06, -3.576278118089249e-07, -2.4914430468925275e-05, -0.0005584587925113738, -2.0265373677830212e-05, -0.0009141556802205741, -0.0014386551920324564, -0.0004217927053105086, -0.003321014577522874, -0.0009492897079326212, -0.01962529867887497, -0.001260439632460475, -0.33201006054878235, -0.4248121976852417, -0.2853618860244751, -0.2719462513923645, -0.7740079760551453, -0.1244545727968216, -0.3352218568325043, -0.00040880427695810795, -0.05174780637025833, -0.00021145492792129517, -3.0496201515197754, -0.19932867586612701, -0.000580499938223511, -0.9988377094268799, -0.003907190170139074, -0.0013040142366662621, -0.00019751029321923852, -0.0050934553146362305, -0.0020375936292111874, -0.003920964431017637, -0.005629874300211668, -5.960462772236497e-07, -3.576272320060525e-06, -2.50339189733495e-06, -3.814689989667386e-06, -2.3841855067985307e-07, -0.019719859585165977, -0.0007611000328324735, -0.003883084747940302, -0.6847418546676636, -0.5518010258674622, -0.4521312713623047, -0.01702292636036873, -0.017932899296283722, -0.2471625953912735, -0.2051241397857666, -0.005243596155196428, -0.000785161682870239, -0.02611708454787731, -0.10043906420469284, -0.0014184186002239585, -2.119792938232422, -0.0005342725198715925, -1.161424160003662, -0.03682399168610573, -0.0196407288312912, -5.960462772236497e-07, -2.634490556374658e-05, -9.536738616588991e-07, -0.0010530170984566212, -0.0005747812101617455, -0.008405900560319424, -3.9934315282152966e-05, -5.722029527532868e-06, -0.00024005869636312127, -0.8837884664535522, -0.006818479858338833, -0.0009729895391501486, -0.005607944447547197, -0.04413536190986633, -0.6340376138687134, -0.003053290769457817, -3.9457496313843876e-05, -3.576278118089249e-07, -1.8715683836489916e-05, -1.5497195136049413e-06, -0.1034318059682846, -2.2172682292875834e-05, -8.40390202938579e-05, -5.960462772236497e-07, -8.344646857949556e-07, -0.00010096516780322418, -0.005328974686563015, -3.766942609217949e-05, -0.00034290633630007505, -0.018769511952996254, 0.0, -1.3845652341842651, -2.7418097943154862e-06, -0.0004213160718791187, -2.288792165927589e-05, -8.344646857949556e-07, -2.7418097943154862e-06, -6.794698856538162e-05, -0.009935331530869007, -0.1737556904554367, -0.1148127019405365, -7.152555099310121e-07, -7.152555099310121e-07, -0.00011157367407577112, -3.218599158572033e-05, -1.8104599714279175, -0.00013207517622504383, -0.001430798671208322, -0.0007830176036804914, -1.5497195136049413e-06, -4.410734163684538e-06, -4.482168878894299e-05, -5.960446742392378e-06, -2.4318398573086597e-05, -0.0007441850611940026, -1.6093124941107817e-05, -1.1920922133867862e-06, -7.629365427419543e-06, -0.00019798702851403505, -3.85038583772257e-05, -9.274052717955783e-05, -0.5099815726280212, -3.2782016205601394e-05, -8.713819261174649e-05, -2.932828903198242, -1.1920928244535389e-07, -6.556489552167477e-06, -0.4277278780937195, -0.00013839241000823677, -0.011837475933134556, -0.0010436094598844647, -0.23298947513103485, -0.4871668517589569, -0.658808708190918, -0.0009265420376323164, -0.0001501924270996824, -0.010784320533275604, -0.01384817622601986, -0.0014142522122710943, -0.011182375252246857, -0.027186360210180283, -0.0002177716523874551, -8.95221673999913e-05, -3.2186455882765586e-06, -0.003031898057088256, -0.0006768796010874212, -0.00032074074260890484, -0.0003000047872774303, -0.0002796259068418294, -2.002696055569686e-05, -0.15429562330245972, -0.009950557723641396, -0.01045807171612978, -0.04355473071336746, -0.22163407504558563, -0.014603512361645699, -1.1444026313256472e-05, -0.06911399960517883, -0.0008522216230630875, -0.1962800920009613, -1.3341766595840454, -0.0010374169796705246, -0.18956191837787628, -0.2095513790845871, -1.1236107349395752, -0.3222154676914215, -0.907200813293457, -0.04246809333562851, -0.00015793983766343445, -0.4147900640964508, -0.0009507188224233687, -0.4311528503894806, -3.4570634852570947e-06, -8.940656698541716e-06, 0.0, -8.105902816168964e-05, -1.1920928244535389e-07, 0.0, -8.583032467868179e-06, -0.0001902399235405028, -0.023053020238876343, -0.0015482831513509154, -0.626385509967804, -0.0001479277852922678, -0.00013684290752280504, -0.5231743454933167, -1.0728830375228426e-06, -1.908646821975708, -0.06997746974229813, -0.1388361155986786, -0.03480086848139763, -0.2646722197532654, -0.07180126011371613, -0.19777458906173706, -0.06330869346857071, -0.05552507936954498, -2.1465659141540527, -1.5139465176616795e-05, -0.003956824075430632, -0.0005977750988677144, -0.0004316828562878072, -1.4305104514278355e-06], "finish_reason": "length"}], "metrics": {"energy": 914.1522885379791, "energy_per_token": 3.5709073771014808, "time": 22.461786, "time_per_token": 0.0877413515625}}
{"outputs": [{"text": "summary = {}\n    invalid_directory = directory_path + '/Invalid'\n    for filename in os.listdir(directory_path):\n        file_path = os.path.join(directory_path, filename)\n        # Skip directories\n        if os.path.isdir(file_path):\n            continue\n\n        # Check if file name contains invalid characters\n        if any(char in INVALID_CHARACTERS for char in filename):\n            if not os.path.isdir(invalid_directory):\n                os.makedirs(invalid_directory)\n            shutil.move(file_path, os.path.join(invalid_directory, filename))\n            if 'Invalid' not in summary:\n                summary['Invalid'] = 0\n            summary['Invalid'] += 1\n            continue\n\n        # Get file extension without the dot\n        file_extension = os.path.splitext(filename)[1][1:]\n        # Create directory for file extension if it doesn't exist\n        extension_directory = directory_path + '/' + file_extension\n        if not os.path.isdir(extension_directory):\n", "tokens": ["summary", " =", " {}", "\n", "    ", "invalid", "_", "directory", " =", " directory", "_", "path", " +", " '/", "Invalid", "'", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", "\n", "        ", "#", " Skip", " directories", "\n", "        ", "if", " os", ".", "path", ".", "is", "dir", "(", "file", "_", "path", "):", "\n", "            ", "continue", "\n", "\n", "        ", "#", " Check", " if", " file", " name", " contains", " invalid", " characters", "\n", "        ", "if", " any", "(", "char", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", " for", " char", " in", " filename", "):", "\n", "            ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "invalid", "_", "directory", "):", "\n", "                ", "os", ".", "m", "aked", "irs", "(", "invalid", "_", "directory", ")", "\n", "            ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " os", ".", "path", ".", "join", "(", "invalid", "_", "directory", ",", " filename", "))", "\n", "            ", "if", " '", "Invalid", "'", " not", " in", " summary", ":", "\n", "                ", "summary", "['", "Invalid", "']", " =", " ", "0", "\n", "            ", "summary", "['", "Invalid", "']", " +=", " ", "1", "\n", "            ", "continue", "\n", "\n", "        ", "#", " Get", " file", " extension", " without", " the", " dot", "\n", "        ", "file", "_", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")[", "1", "][", "1", ":]", "\n", "        ", "#", " Create", " directory", " for", " file", " extension", " if", " it", " doesn", "'", "t", " exist", "\n", "        ", "extension", "_", "directory", " =", " directory", "_", "path", " +", " '/", "'", " +", " file", "_", "extension", "\n", "        ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "extension", "_", "directory", "):", "\n"], "logprobs": [-0.9261104464530945, -0.003763380227610469, -0.09414701908826828, -0.10688643157482147, -0.3570042848587036, -0.42816224694252014, -0.041889119893312454, -1.072547197341919, -0.09083527326583862, -1.1344640254974365, -0.0005808573332615197, -2.9205850296420977e-05, -0.24273258447647095, -1.0477995872497559, -0.052100129425525665, -0.12920384109020233, -0.02874087356030941, -0.38683950901031494, -3.306570053100586, -0.9309003353118896, -0.0010509926360100508, -0.01824384368956089, -3.1709168979432434e-05, -0.02061360329389572, -1.0728830375228426e-06, -0.0002113357331836596, -0.0025321345310658216, -0.00032074074260890484, -3.576278118089249e-07, -0.0010589712765067816, -0.003502308391034603, -0.006476010661572218, -1.6023776531219482, -0.1386842131614685, -0.44244351983070374, -0.000582525331992656, -0.18816502392292023, -2.0265558760002023e-06, -0.00018737945356406271, -1.311301275563892e-06, -0.0010904086520895362, -3.7788631743751466e-05, -0.0012630588607862592, -3.433168603805825e-05, -6.556489552167477e-06, -0.00014911970356479287, -0.0025668551679700613, -7.676783570786938e-05, -0.004810545593500137, -0.07855147868394852, -2.889336585998535, -1.673872709274292, -0.38852182030677795, -0.2804006338119507, -0.00026854246971197426, -0.0005993238883093, -0.13559356331825256, -2.3007127310847864e-05, -0.0002383901592111215, -9.536697689327411e-06, -0.00015925093612167984, -0.023659178987145424, -5.1020273531321436e-05, -0.002962963655591011, -6.556489552167477e-06, -7.152555099310121e-07, -0.0029655785765498877, -0.015055594965815544, -0.001166854752227664, -0.003685113275423646, -0.000530936405993998, -1.4929519891738892, -0.0027594605926424265, -0.39204153418540955, -0.6096960306167603, -0.8143733143806458, -1.456789255142212, -0.6889442205429077, -0.2503693401813507, -0.034574951976537704, -0.0037025725468993187, -0.0369550846517086, -0.00035851728171110153, -0.2701972424983978, -0.12275940924882889, -0.02808910608291626, -0.7371009588241577, -0.00289556966163218, -0.03999935835599899, -1.0728830375228426e-06, -1.9073468138230965e-06, -4.410734163684538e-06, -1.2278481335670222e-05, -7.152555099310121e-07, -0.0012305553536862135, -1.9430925021879375e-05, -1.5735502529423684e-05, -0.0034362575970590115, -0.010163694620132446, -0.00016282663273159415, -0.004325320478528738, -1.0655122995376587, -0.12666258215904236, -0.003383271163329482, -7.033323527139146e-06, -4.7205765440594405e-05, -3.576278118089249e-07, -2.1654434204101562, -7.60526381782256e-05, -0.0002112165529979393, -0.0020295039284974337, -5.006777428206988e-06, -2.634490556374658e-05, -0.0003817544784396887, -0.0021793919149786234, -0.0005164004978723824, -0.042837172746658325, -2.3841855067985307e-07, -1.0187397003173828, -0.00018737945356406271, -0.00010013079008786008, -0.00011062010162277147, -5.674201020156033e-05, -3.4570634852570947e-06, -9.298280929215252e-06, -0.001374134561046958, -0.006488328333944082, -0.15828627347946167, -0.1445116400718689, -1.0728830375228426e-06, -1.311301275563892e-06, -0.00033063191222026944, -2.8967437174287625e-05, -0.002445684978738427, -9.536697689327411e-06, -2.3841830625315197e-06, -7.128461584215984e-05, -0.2922748327255249, -4.768370445162873e-07, -7.748573807475623e-06, -8.344646857949556e-07, -3.266281055402942e-05, -0.00024732868769206107, -0.007836195640265942, -2.145764938177308e-06, -3.480850500636734e-05, -0.0004917366313748062, -0.0017627429915592074, -0.000506511190906167, -0.00034791138023138046, -0.04734073206782341, -1.573960304260254, -0.11800055205821991, -0.0012834176886826754, -0.0001481661747675389, -0.10791986435651779, -3.6954811548639555e-06, -8.964136941358447e-05, -0.02871793694794178, -0.000754786713514477, -0.00025281094713136554, -0.001105769770219922, -0.000715833914000541, -7.462222856702283e-05, -2.002696055569686e-05, -0.00021610308613162488, -0.0002562671434134245, -0.3411102592945099, -0.0004107108688913286, -0.002792033366858959, -0.0008222059695981443, -0.000388665939681232, -6.294052582234144e-05, -6.9141146923357155e-06, -0.0023291383404284716, -0.0003203832311555743, -3.218599158572033e-05, -0.0007736074039712548, -0.8910406827926636, -0.04227087274193764, -0.00770832784473896, -0.01128316018730402, -0.0011149387573823333, -0.22849467396736145, -1.3483232259750366, -0.5579885244369507, -0.2755461633205414, -2.8280928134918213, -0.5808979272842407, -0.6027337312698364, -0.09518686681985855, -0.0002320735511602834, -0.6480680704116821, -0.0068987514823675156, -0.15908393263816833, -0.000331704446580261, -0.10308528691530228, -5.364403477869928e-06, -5.602820692729438e-06, 0.0, -4.7801782784517854e-05, -3.576278118089249e-07, 0.0, -1.1205610462639015e-05, -0.04270342364907265, -0.022002752870321274, -0.0002992897352669388, -0.08156529814004898, -6.210611172718927e-05, -0.00046885941992513835, -0.011585102416574955, -0.35866984724998474, -0.6612579226493835, -0.545288622379303, -1.0428218841552734, -1.320399522781372, -0.6165594458580017, -0.03227733075618744, -0.04683681204915047, -0.08190342783927917, -0.045763418078422546, -0.00041500062798149884, -2.9444261599564925e-05, -0.0045393044129014015, -0.02396753430366516, -0.00041845624218694866, -1.2211041450500488, -0.0001045410826918669, -0.006595627870410681, -0.0027878726832568645, -0.6591674089431763, -3.2543604902457446e-05, -1.4305104514278355e-06, -0.002884871792048216, -0.025451751425862312, -0.006420698016881943, -4.5536911784438416e-05, -0.001986317802220583, -1.0728830375228426e-06, -8.106198947643861e-06, -0.017626307904720306, -0.009344649501144886, -0.010467980988323689, -0.00464016804471612, -0.0005909841856919229, -1.1920928244535389e-07, -7.629365427419543e-06, 0.0, -0.07611400634050369, -5.960462772236497e-07, -9.298280929215252e-06, -0.00010799778101500124, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.00013433984713628888, -5.280832192511298e-05], "finish_reason": "length"}], "metrics": {"energy": 904.4479402170177, "energy_per_token": 3.5329997664727255, "time": 22.245356, "time_per_token": 0.086895921875}}
{"outputs": [{"text": "summary = {}\n    invalid_files = 0\n\n    for dirpath, dirnames, filenames in os.walk(directory_path):\n        for file in filenames:\n            # Check if file contains invalid characters\n            if any(char in INVALID_CHARACTERS for char in file):\n                invalid_files += 1\n                invalid_dir = os.path.join(directory_path, \"Invalid\")\n\n                if not os.path.exists(invalid_dir):\n                    os.mkdir(invalid_dir)\n\n                shutil.move(os.path.join(dirpath, file), invalid_dir)\n\n            # Move files to respective directories\n            else:\n                file_extension = os.path.splitext(file)[1]\n                dir_path = os.path.join(dirpath, file_extension[1:])\n\n                if not os.path.exists(dir_path):\n                    os.mkdir(dir_path)\n\n                shutil.move(os.path.join(dirpath, file), dir_path)\n\n                #", "tokens": ["summary", " =", " {}", "\n", "    ", "invalid", "_", "files", " =", " ", "0", "\n", "\n", "    ", "for", " dir", "path", ",", " dir", "names", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "directory", "_", "path", "):", "\n", "        ", "for", " file", " in", " fil", "en", "ames", ":", "\n", "            ", "#", " Check", " if", " file", " contains", " invalid", " characters", "\n", "            ", "if", " any", "(", "char", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", " for", " char", " in", " file", "):", "\n", "                ", "invalid", "_", "files", " +=", " ", "1", "\n", "                ", "invalid", "_", "dir", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " \"", "Invalid", "\"", ")", "\n", "\n", "                ", "if", " not", " os", ".", "path", ".", "exists", "(", "invalid", "_", "dir", "):", "\n", "                ", "    ", "os", ".", "mk", "dir", "(", "invalid", "_", "dir", ")", "\n", "\n", "                ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "dir", "path", ",", " file", ")", ",", " invalid", "_", "dir", ")", "\n", "\n", "            ", "#", " Move", " files", " to", " respective", " directories", "\n", "            ", "else", ":", "\n", "                ", "file", "_", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ")[", "1", "]", "\n", "                ", "dir", "_", "path", " =", " os", ".", "path", ".", "join", "(", "dir", "path", ",", " file", "_", "extension", "[", "1", ":", "])", "\n", "\n", "                ", "if", " not", " os", ".", "path", ".", "exists", "(", "dir", "_", "path", "):", "\n", "                ", "    ", "os", ".", "mk", "dir", "(", "dir", "_", "path", ")", "\n", "\n", "                ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "dir", "path", ",", " file", ")", ",", " dir", "_", "path", ")", "\n", "\n", "                ", "#"], "logprobs": [-0.9261104464530945, -0.003763380227610469, -0.09414701908826828, -0.10688643157482147, -0.3570042848587036, -0.42816224694252014, -0.041889119893312454, -2.3384010791778564, -0.21413926780223846, -2.608505964279175, -0.005585657898336649, -0.024410169571638107, -0.5192286968231201, -0.00041166413575410843, -0.3814229965209961, -3.6448421478271484, -0.10191023349761963, -0.0008225633064284921, -0.11257046461105347, -0.000408327643526718, -2.884823152271565e-05, -0.004818138666450977, -2.3841855067985307e-07, -1.311301275563892e-06, -0.00023958197562023997, -0.0006254147156141698, -2.861018856492592e-06, -1.6569954823353328e-05, -0.0004129749140702188, -0.0017830915749073029, -0.00018714107864070684, 0.0, -0.014443020336329937, -0.0027712297160178423, -0.009770900942385197, -0.07451983541250229, -2.046576976776123, -0.29842570424079895, -8.856858039507642e-05, -2.3841855067985307e-07, 0.0, -0.00023755589791107923, -0.0008166077313944697, -0.00766692403703928, -1.5781886577606201, -0.510274350643158, -0.3644861876964569, -1.238560438156128, -1.395394206047058, -0.061487603932619095, -0.004784919787198305, -0.05804615467786789, -0.0005449955351650715, -0.1141142025589943, -0.10563743859529495, -0.018478509038686752, -0.511401355266571, -0.003655895357951522, -0.07689528912305832, -2.9802276912960224e-06, -1.7881377516459906e-06, -5.483612312673358e-06, -5.125986263010418e-06, -8.821448318485636e-06, -0.0011539950501173735, -1.5020257706055418e-05, -2.0146166207268834e-05, -0.0025833826512098312, -0.010345757938921452, -0.0001429217227268964, -0.0010031197452917695, -0.5285719037055969, -0.0002549561613705009, -0.061691608279943466, -0.0011799524072557688, -0.0006652049487456679, -4.327203714638017e-05, -0.0017936823423951864, -0.19698801636695862, -2.1014516353607178, -0.0003777029050979763, -0.800433874130249, -0.08714263886213303, -0.03341452404856682, -2.3841830625315197e-06, -3.099393507000059e-05, -3.576272320060525e-06, -0.0013984196120873094, -0.0010546842822805047, -1.1795375347137451, -0.0006280356901697814, -9.536697689327411e-06, -0.0007272697403095663, -0.7058188319206238, -0.023457515984773636, -0.003973209764808416, -0.0005820487276650965, -0.004569445736706257, -2.1042842864990234, -0.0036747802514582872, -2.0042920112609863, -0.008900610730051994, -0.00019774865359067917, -9.536697689327411e-06, -0.00012420836719684303, -1.4305012882687151e-05, -0.04765937477350235, -3.611976353568025e-05, -0.0006777135422453284, -7.748573807475623e-06, -2.038458114839159e-05, -0.0006484074983745813, -0.002594083547592163, -0.0002184867626056075, -0.0015899409772828221, -0.03583605960011482, -2.3841855067985307e-07, -1.4694029092788696, -4.529942543740617e-06, -0.0003939091111533344, -0.00015209948469419032, -6.437280717364047e-06, -3.4570634852570947e-06, -0.00015925093612167984, -0.0013852057745680213, -0.040420759469270706, -0.000979539705440402, -0.4385511875152588, -2.50339189733495e-06, -9.536738616588991e-07, -0.0012219827622175217, -8.439661905867979e-05, -0.07584452629089355, -5.006777428206988e-06, -8.702239938429557e-06, -5.722029527532868e-06, -2.2291887944447808e-05, -1.0967194612021558e-05, -0.005710952449589968, -7.867782187531702e-06, -0.00011169286881340668, -0.0008334023877978325, -8.701899787411094e-05, -9.119095193454996e-05, -0.3986726701259613, -1.5497195136049413e-06, -0.0003216941258870065, -0.0023738557938486338, -0.0008071978809311986, -1.2196462154388428, -0.2462780922651291, -0.7168390154838562, -0.8892050385475159, -1.7800817489624023, -0.12757033109664917, -3.7794477939605713, -0.28577232360839844, -0.5577675700187683, -0.00048673225683160126, -0.5615808367729187, -2.9682672902708873e-05, -8.475421054754406e-05, -0.00041607304592616856, -1.3479331731796265, -0.034682851284742355, -1.2114136219024658, -0.00036745471879839897, -0.41855862736701965, -4.887569048150908e-06, -2.312633478140924e-05, -1.311301275563892e-06, -0.0005834784242324531, -2.3841855067985307e-07, 0.0, -1.8954096958623268e-05, -0.0012248402927070856, -0.10434295237064362, -0.001511027687229216, -0.4680835008621216, -0.7276182770729065, -0.2560264468193054, -3.591714382171631, -0.042059555649757385, -1.1183661222457886, -0.007852399721741676, -0.004957882221788168, -1.9073468138230965e-06, -1.2993727978027891e-05, -7.152555099310121e-07, -0.0008071978809311986, -8.165503095369786e-05, -1.99932861328125, -6.985420623095706e-05, -0.0012188870459794998, -0.019590113312005997, -0.00271547376178205, -2.9682672902708873e-05, -0.06679745763540268, -0.00011550712952157483, -0.027951514348387718, -0.0002094287920044735, -0.13047879934310913, -0.1548340916633606, -0.0006111184484325349, -0.10426153987646103, -0.052700474858284, -0.003187577472999692, -1.9073468138230965e-06, -1.3589766240329482e-05, -4.768370445162873e-07, -0.012175522744655609, -2.074220174108632e-05, -0.0005838358192704618, -5.352353764465079e-05, -2.861018856492592e-06, -0.00112791801802814, -0.00044252615771256387, -0.00010168035078095272, -0.00044860312482342124, -0.004681341350078583, -4.768370445162873e-07, -0.021939663216471672, -3.099436753473128e-06, -4.589452510117553e-05, -0.0003897384158335626, -9.417489309271332e-06, -2.861018856492592e-06, -0.00013648532330989838, -0.0001209901092806831, -0.01821153610944748, -0.00027021096320822835, -0.25822967290878296, -3.576278118089249e-07, -4.768370445162873e-07, -3.969590397900902e-05, -3.0636318115284666e-05, -0.03025677241384983, -2.7418097943154862e-06, -2.0265558760002023e-06, -8.344646857949556e-07, -1.6569954823353328e-05, -2.861018856492592e-06, -0.00045265440712682903, -9.775113539944869e-06, -1.7523612768854946e-05, -0.00028427375946193933, -8.940297266235575e-05, -1.7165990357170813e-05, -0.010786089114844799, -8.928377064876258e-05, -1.0371154530730564e-05, -0.0004128557338844985, -0.0002857038634829223, -0.23979519307613373, -0.16462336480617523, -1.156995415687561], "finish_reason": "length"}], "metrics": {"energy": 922.7600411243452, "energy_per_token": 3.6045314106419735, "time": 21.852524, "time_per_token": 0.085361421875}}
{"outputs": [{"text": "# Initialize counters\n    summary = {}\n\n    # Get a list of all files in the directory\n    files = os.listdir(directory_path)\n\n    # Iterate through each file\n    for file_name in files:\n        # Check if the file name has any invalid characters\n        if any(char in INVALID_CHARACTERS for char in file_name):\n            # Create the \"Invalid\" directory if it doesn't exist\n            if \"Invalid\" not in summary:\n                summary[\"Invalid\"] = 0\n                invalid_dir = os.path.join(directory_path, \"Invalid\")\n                os.makedirs(invalid_dir, exist_ok=True)\n            # Move the file to the \"Invalid\" directory\n            shutil.move(os.path.join(directory_path, file_name), invalid_dir)\n            # Increment the Invalid count\n            summary[\"Invalid\"] += 1\n        else:\n            # Extract the file extension (without the period)\n            file_extension = os.path.splitext(file_name)[1][1:]\n            ", "tokens": ["#", " Initialize", " counters", "\n", "    ", "summary", " =", " {}", "\n", "\n", "    ", "#", " Get", " a", " list", " of", " all", " files", " in", " the", " directory", "\n", "    ", "files", " =", " os", ".", "list", "dir", "(", "directory", "_", "path", ")", "\n", "\n", "    ", "#", " Iter", "ate", " through", " each", " file", "\n", "    ", "for", " file", "_", "name", " in", " files", ":", "\n", "        ", "#", " Check", " if", " the", " file", " name", " has", " any", " invalid", " characters", "\n", "        ", "if", " any", "(", "char", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", " for", " char", " in", " file", "_", "name", "):", "\n", "            ", "#", " Create", " the", " \"", "Invalid", "\"", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "            ", "if", " \"", "Invalid", "\"", " not", " in", " summary", ":", "\n", "                ", "summary", "[", "\"", "Invalid", "\"", "]", " =", " ", "0", "\n", "                ", "invalid", "_", "dir", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " \"", "Invalid", "\"", ")", "\n", "                ", "os", ".", "m", "aked", "irs", "(", "invalid", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "            ", "#", " Move", " the", " file", " to", " the", " \"", "Invalid", "\"", " directory", "\n", "            ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " file", "_", "name", ")", ",", " invalid", "_", "dir", ")", "\n", "            ", "#", " In", "crement", " the", " Invalid", " count", "\n", "            ", "summary", "[", "\"", "Invalid", "\"", "]", " +=", " ", "1", "\n", "        ", "else", ":", "\n", "            ", "#", " Ext", "ract", " the", " file", " extension", " (", "without", " the", " period", ")", "\n", "            ", "file", "_", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", "_", "name", ")[", "1", "][", "1", ":]", "\n", "            "], "logprobs": [-0.8680583834648132, -1.1121305227279663, -3.346404552459717, -0.6426830291748047, -0.001057542278431356, -0.6445627808570862, -0.006173825357109308, -0.23445947468280792, -0.008784578181803226, -0.8567323088645935, -0.0005484507419168949, -0.030838239938020706, -3.0329043865203857, -1.1034365892410278, -0.009622619487345219, -0.0009465504554100335, -0.34363457560539246, -0.20322225987911224, -0.08249504119157791, -0.005328026134520769, -0.03379030153155327, -0.14446954429149628, -0.000243634101934731, -0.4052991569042206, -0.035774871706962585, -0.07346013933420181, -7.867782187531702e-06, -0.002184625482186675, -4.768370445162873e-07, -9.655486064730212e-05, -0.0012663925299420953, -0.0002177716523874551, -1.1920928244535389e-07, -7.188061863416806e-05, -0.00032586511224508286, -0.03203491121530533, -0.00038723601028323174, -0.0489300936460495, -0.9306042790412903, -0.000291662581730634, -0.5886629223823547, -0.4538988173007965, -0.001430917764082551, -0.26946499943733215, -6.139089964563027e-05, -0.0006860524881631136, -0.1494806855916977, -1.222216248512268, -0.007993257604539394, -0.00012265883560758084, -0.00047910655848681927, -9.452849917579442e-05, -5.4596363042946905e-05, -0.032224927097558975, -0.08200106769800186, -0.5839186906814575, -0.0442047081887722, -0.061867665499448776, -0.01779519021511078, -0.4264005720615387, -2.4138498306274414, -0.9890174865722656, -0.013957745395600796, -0.0011606630869209766, -0.027087047696113586, -0.0002324311062693596, -0.26190516352653503, -0.14252014458179474, -0.020406069234013557, -0.466461181640625, -0.0022759742569178343, -0.06615832448005676, -3.814689989667386e-06, -1.7881377516459906e-06, -8.344646857949556e-07, -2.861018856492592e-06, -5.125986263010418e-06, -0.0012310316087678075, -7.986990567587782e-06, -2.074220174108632e-05, -0.000950004265177995, -3.933898824470816e-06, -1.1086402082582936e-05, -0.01003824919462204, -0.00017641419253777713, -0.003024529432877898, -0.14958252012729645, -1.8266388177871704, -0.6296265125274658, -0.42334964871406555, -0.008957086130976677, -0.0009550062823109329, -0.02514234371483326, -0.04511559009552002, -0.0305193942040205, -0.04182715713977814, -0.0003295593778602779, -3.325883881188929e-05, -0.008053923025727272, -0.033265553414821625, -9.131014667218551e-05, -0.9940314292907715, -1.1170134544372559, -0.0015900599537417293, -0.0002456601650919765, -0.0010095505276694894, -4.768360213347478e-06, -0.043727848678827286, -0.01847909390926361, -0.00013326710904948413, -0.00025507534155622125, -1.1485519409179688, -0.004715394228696823, -0.00017069313616957515, -0.00011193125828867778, -2.002696055569686e-05, -0.00010227633902104571, -2.729855441430118e-05, -0.003665040945634246, -0.10619920492172241, -0.0003968881501350552, -0.6131811141967773, -1.7605149745941162, -9.786603914108127e-05, -0.6117858290672302, -0.0897858738899231, -0.018334906548261642, -2.145764938177308e-06, -5.173549288883805e-05, -6.079655122448457e-06, -0.0006526962388306856, -4.935142715112306e-05, -0.0016382618341594934, -1.7046782886609435e-05, -4.887569048150908e-06, -0.00013469743134919554, -0.0018374717328697443, -0.0023023784160614014, -0.0002536452084314078, -2.6940935640595853e-05, -0.001134586171247065, -0.0012431758223101497, -0.03245506435632706, -4.768370445162873e-07, -0.7068057656288147, -3.3378546504536644e-06, -2.074220174108632e-05, -6.198863957251888e-06, -0.00020644917094614357, -2.622600959512056e-06, -9.536738616588991e-07, -1.128519892692566, -0.0005041282274760306, -2.7418097943154862e-06, -1.4305104514278355e-06, -0.001260915887542069, -0.0005266471416689456, -4.851700214203447e-05, -0.015182056464254856, -0.8301185965538025, -0.02101231925189495, -0.00684547470882535, -0.015084716491401196, -0.011945969425141811, -0.015218102373182774, -0.015552074648439884, -0.030365021899342537, -0.00036376056959852576, -0.00011729506513802335, -0.0034849646035581827, -0.23950909078121185, -0.0004776767164003104, -0.16855445504188538, -1.0728830375228426e-06, -8.344646857949556e-07, -0.0001774868869688362, -4.470248313737102e-05, -0.4274446964263916, -4.410734163684538e-06, -1.0490362910786644e-05, -9.65590606938349e-06, -1.1444026313256472e-05, -1.3828182090946939e-05, -0.0006765222642570734, -1.0132738680113107e-05, -4.0531076592742465e-06, -3.290122185717337e-05, -0.0005750194541178644, -4.017272294731811e-05, -4.768370445162873e-07, -9.274052717955783e-05, -0.00014578233822248876, -1.0509611368179321, -2.0265558760002023e-06, -6.6756979322235566e-06, -0.0014119903789833188, -0.00021550717065110803, -0.004319979343563318, -2.519752025604248, -0.8059890270233154, -0.00010275312524754554, -0.019089553505182266, -2.97119140625, -0.9274250864982605, -0.7777163982391357, -0.00021801002731081098, -0.00021431533969007432, -0.006912839598953724, -4.5298504119273275e-05, -2.8132995794294402e-05, -5.364403477869928e-06, -0.00016246906307060272, -0.003105700248852372, -0.00011872540198964998, -1.3708974620385561e-05, -0.0002217047003796324, -0.06676501035690308, -0.054720815271139145, -3.635817120084539e-05, -0.0026240460574626923, -0.001545426552183926, -0.027481334283947945, -1.2386019229888916, -0.00025674383505247533, -0.016489652916789055, -0.17502696812152863, -0.1980607658624649, -1.660090446472168, -0.4728059768676758, -0.05360184609889984, -2.258640766143799, -0.013022495433688164, -0.011535020545125008, -0.00011669908417388797, -0.7049872279167175, -0.0005292683490552008, -0.39317435026168823, -0.00024863966973498464, -0.4400012195110321, -2.622600959512056e-06, -1.0609570381348021e-05, -1.1920928244535389e-07, -0.0001006075763143599, -1.1920928244535389e-07, 0.0, -1.2397689715726301e-05, -7.986703712958843e-05, -8.583032467868179e-06, -5.125986263010418e-06, -0.015326933935284615, -0.0006019449210725725, -0.050411298871040344, -6.329813186312094e-05, -0.00020883286197204143, -0.011364134959876537, -0.04897947236895561], "finish_reason": "length"}], "metrics": {"energy": 891.5582760791775, "energy_per_token": 3.482649515934287, "time": 22.052198, "time_per_token": 0.0861413984375}}
{"outputs": [{"text": "# Create a summary dictionary to store the count of files moved to each directory\n    summary = {}\n\n    # Loop through each file in the directory\n    for filename in os.listdir(directory_path):\n        # Remove invalid characters from the filename\n        new_filename = ''.join(c for c in filename if c not in INVALID_CHARACTERS)\n\n        # Get the file extension and create a directory for it if it doesn't exist\n        ext = os.path.splitext(new_filename)[1].lower()\n        if not ext:\n            ext = 'none'\n        if ext not in summary:\n            summary[ext] = 0\n        if ext not in os.listdir(directory_path):\n            os.mkdir(os.path.join(directory_path, ext))\n\n        # Move the file to the appropriate directory\n        src_path = os.path.join(directory_path, filename)\n        dst_path = os.path.join(directory_path, ext, new_filename)\n        if os.path.exists(dst_path):\n            # If the destination file", "tokens": ["#", " Create", " a", " summary", " dictionary", " to", " store", " the", " count", " of", " files", " moved", " to", " each", " directory", "\n", "    ", "summary", " =", " {}", "\n", "\n", "    ", "#", " Loop", " through", " each", " file", " in", " the", " directory", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "#", " Remove", " invalid", " characters", " from", " the", " filename", "\n", "        ", "new", "_", "filename", " =", " ''", ".", "join", "(", "c", " for", " c", " in", " filename", " if", " c", " not", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", ")", "\n", "\n", "        ", "#", " Get", " the", " file", " extension", " and", " create", " a", " directory", " for", " it", " if", " it", " doesn", "'", "t", " exist", "\n", "        ", "ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "new", "_", "filename", ")[", "1", "]", ".", "lower", "()", "\n", "        ", "if", " not", " ext", ":", "\n", "            ", "ext", " =", " '", "none", "'", "\n", "        ", "if", " ext", " not", " in", " summary", ":", "\n", "            ", "summary", "[", "ext", "]", " =", " ", "0", "\n", "        ", "if", " ext", " not", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "            ", "os", ".", "mk", "dir", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " ext", "))", "\n", "\n", "        ", "#", " Move", " the", " file", " to", " the", " appropriate", " directory", "\n", "        ", "src", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", "\n", "        ", "dst", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " ext", ",", " new", "_", "filename", ")", "\n", "        ", "if", " os", ".", "path", ".", "exists", "(", "dst", "_", "path", "):", "\n", "            ", "#", " If", " the", " destination", " file"], "logprobs": [-0.8680583834648132, -1.34231698513031, -1.2660026550292969, -1.4406102895736694, -0.08881358802318573, -0.8490303754806519, -1.2899543046951294, -0.22918784618377686, -0.264132559299469, -0.02704017423093319, -0.03698277100920677, -0.05526285246014595, -0.033179644495248795, -0.0006368515896610916, -0.006686811335384846, -0.1168673038482666, -0.0009860896971076727, -0.011643076315522194, -0.002576724160462618, -0.06294462829828262, -0.0008582960581406951, -0.11656180024147034, -0.00045074793160893023, -0.03006395511329174, -2.210052490234375, -0.1603533774614334, -1.3776506185531616, -0.08161880820989609, -0.0848810076713562, -0.0032806170638650656, -0.05746994540095329, -0.05490589141845703, -0.00013362467871047556, -0.013172038830816746, -1.0860437154769897, -0.00033539868309162557, -0.006401154212653637, -1.8596476365928538e-05, -0.005349843762814999, 0.0, -0.0001951265730895102, -0.0006208876147866249, -0.0001793938863556832, 0.0, -0.00020275443966966122, -0.0004447901446837932, -0.028596768155694008, -0.2885687053203583, -2.287403106689453, -0.3229031264781952, -0.001347468001767993, -0.05428857356309891, -0.05303414538502693, -0.15288619697093964, -0.11377689987421036, -0.0004942387458868325, -1.639068841934204, -0.0010208638850599527, -0.02195214107632637, -0.000699156429618597, -0.512850284576416, -0.0343797393143177, -6.151010165922344e-05, -0.04704871401190758, -0.7981377243995667, -0.004362945910543203, -8.583032467868179e-06, -1.3947389561508317e-05, -0.0002574589161667973, -0.0014031813479959965, -0.00031013446277938783, -0.001354134758003056, -5.602820692729438e-06, -0.0014482972910627723, -7.152555099310121e-07, -1.4305104514278355e-06, -4.768370445162873e-07, -9.65590606938349e-06, -2.3841855067985307e-07, -0.001764765940606594, -0.0012316268403083086, -0.12164768576622009, -0.0005297449533827603, -0.029808156192302704, -1.6059129238128662, -0.011691031977534294, -0.3126796782016754, -0.10039269924163818, -2.103562355041504, -0.5655050873756409, -0.5914790630340576, -0.3421747386455536, -1.138290286064148, -0.04419684037566185, -0.3072350323200226, -0.36968663334846497, -0.028341984376311302, -0.0007602662080898881, -9.059865078597795e-06, -0.021775444969534874, -0.04103696718811989, -0.000169382052263245, -2.5452394485473633, -0.0007937379996292293, -0.13462106883525848, -2.3841830625315197e-06, -2.3364747903542593e-05, -1.1920928244535389e-07, -1.2636104656849056e-05, 0.0, 0.0, -1.7404405298293568e-05, -0.1989799588918686, -3.2186455882765586e-06, -5.960462772236497e-07, -0.03361395746469498, -0.0005447572330012918, -0.32827913761138916, -0.6346968412399292, -0.9804477095603943, -0.045533813536167145, -0.21436142921447754, -0.07765082269906998, -0.36422327160835266, -1.2802155017852783, -0.11734478175640106, -0.09250213205814362, -0.010513043031096458, -0.0022159088402986526, -1.2413053512573242, -0.0020655503030866385, -0.6139398217201233, -3.7668681144714355, -0.010124399326741695, -0.07878167182207108, -0.1095525324344635, -1.1933753490447998, -0.07917492836713791, -0.08962152898311615, -1.311301275563892e-06, -0.0018078426364809275, -0.012165865860879421, -0.0003084660565946251, -0.0007047553663142025, -0.5492987036705017, -0.00032062159152701497, -9.154854342341423e-05, -0.0005004345439374447, -1.0132738680113107e-05, -0.005398694425821304, -0.11217105388641357, -0.0004493180604185909, -1.9262398481369019, -0.39671504497528076, -1.936880111694336, -0.6668938994407654, -1.0132738680113107e-05, -0.020109232515096664, -0.00014506718434859067, -0.000592890428379178, 0.0, -0.007287586107850075, -0.0014152044896036386, -6.139089964563027e-05, -1.4305104514278355e-06, -0.007441066205501556, -0.0012186489766463637, -0.0015769677702337503, -0.0076672788709402084, -7.510157047363464e-06, -0.38813915848731995, -1.1920922133867862e-06, -0.0018798314267769456, -0.023359930142760277, -2.0265558760002023e-06, -6.0437283536884934e-05, -7.152555099310121e-07, -0.00014673586701974273, -8.368142152903602e-05, -0.00018976318824570626, -8.702239938429557e-06, -5.960462772236497e-07, -0.00011526874004630372, -0.002016298472881317, -0.007137041538953781, -0.0006709231529384851, -0.0290056299418211, -0.002314033918082714, -0.0031439659651368856, -0.3308999538421631, -0.0058937096036970615, -0.00392345804721117, -0.01625768654048443, -0.34891477227211, -0.5532003045082092, -0.0009467886411584914, -0.3846263587474823, -0.00015555603022221476, -2.588702440261841, -1.800735354423523, -0.15855751931667328, -0.0006102845072746277, -0.00031013446277938783, -1.0728830375228426e-06, -4.172316494077677e-06, -1.1920928244535389e-07, -0.0001445904199499637, -2.539125671319198e-05, -0.0002559096028562635, -4.768360213347478e-06, -7.152555099310121e-07, -2.7179348762729205e-05, -0.018209194764494896, -0.00016068121476564556, -0.0006107610533945262, -0.00035315475543029606, -0.25101080536842346, -0.00015662873920518905, -0.0008058876264840364, -0.00017331528943032026, -0.0002299282787134871, -6.6756979322235566e-06, -4.768360213347478e-06, -4.768370445162873e-07, -7.843663479434326e-05, -2.658331868587993e-05, -0.0006282739923335612, -2.3841830625315197e-06, -2.3841855067985307e-07, -5.1973900554003194e-05, -0.0015312624163925648, -0.02609826996922493, -0.014141940511763096, -2.861018856492592e-06, -3.814689989667386e-06, -0.0044486369006335735, -0.0005371319712139666, -0.05460106208920479, -1.256320834159851, -0.5684261918067932, -9.775113539944869e-06, -0.00031025364296510816, -1.1920922133867862e-06, -0.42774179577827454, -1.9073304429184645e-05, -0.02667287364602089, -1.1920858014491387e-05, -1.4305104514278355e-06, -0.02686646394431591, -0.015058178454637527, -0.002371001522988081, -0.6610984802246094, -0.46224573254585266, -0.15863320231437683, -0.15614952147006989, -0.08976332098245621], "finish_reason": "length"}], "metrics": {"energy": 903.7964558382035, "energy_per_token": 3.5304549056179826, "time": 22.03441, "time_per_token": 0.0860719140625}}
{"outputs": [{"text": "# Check if the directory exists\n    if not os.path.exists(directory_path):\n        print(\"Directory not found.\")\n        return\n\n    # Create a summary dictionary\n    summary = {}\n\n    # Create the Invalid directory\n    invalid_dir = os.path.join(directory_path, \"Invalid\")\n    os.makedirs(invalid_dir, exist_ok=True)\n\n    # Iterate through the files in the directory\n    for filename in os.listdir(directory_path):\n        # Skip directories\n        if os.path.isdir(os.path.join(directory_path, filename)):\n            continue\n\n        # Check if the filename contains invalid characters\n        if any(char in INVALID_CHARACTERS for char in filename):\n            # Move the file to the Invalid directory\n            shutil.move(\n                os.path.join(directory_path, filename),\n                os.path.join(invalid_dir, filename),\n            )\n            summary.setdefault(\"Invalid\", 0)\n            summary[\"Invalid\"] += 1\n        ", "tokens": ["#", " Check", " if", " the", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "directory", "_", "path", "):", "\n", "        ", "print", "(", "\"", "Directory", " not", " found", ".", "\"", ")", "\n", "        ", "return", "\n", "\n", "    ", "#", " Create", " a", " summary", " dictionary", "\n", "    ", "summary", " =", " {}", "\n", "\n", "    ", "#", " Create", " the", " Invalid", " directory", "\n", "    ", "invalid", "_", "dir", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " \"", "Invalid", "\"", ")", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "invalid", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Iter", "ate", " through", " the", " files", " in", " the", " directory", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "#", " Skip", " directories", "\n", "        ", "if", " os", ".", "path", ".", "is", "dir", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", "))", ":", "\n", "            ", "continue", "\n", "\n", "        ", "#", " Check", " if", " the", " filename", " contains", " invalid", " characters", "\n", "        ", "if", " any", "(", "char", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", " for", " char", " in", " filename", "):", "\n", "            ", "#", " Move", " the", " file", " to", " the", " Invalid", " directory", "\n", "            ", "sh", "util", ".", "move", "(", "\n", "                ", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", ",", "\n", "                ", "os", ".", "path", ".", "join", "(", "invalid", "_", "dir", ",", " filename", ")", ",", "\n", "            ", ")", "\n", "            ", "summary", ".", "set", "default", "(", "\"", "Invalid", "\"", ",", " ", "0", ")", "\n", "            ", "summary", "[", "\"", "Invalid", "\"", "]", " +=", " ", "1", "\n", "        "], "logprobs": [-0.8680583834648132, -2.487025737762451, -0.30461764335632324, -0.3826649785041809, -0.14327996969223022, -0.37959399819374084, -0.12861186265945435, -0.0009155849111266434, -0.01098938100039959, -0.026005703955888748, -0.005420510657131672, -3.814624506048858e-05, -0.0002307625545654446, -1.3708974620385561e-05, -0.3498212695121765, -0.00010287232726113871, -0.00037651124875992537, -0.00013243274588603526, 0.0, -0.0054578580893576145, -0.00025042734341695905, -0.001446868758648634, -0.7529932856559753, -0.01977689564228058, -0.7334502935409546, -0.4539344906806946, -1.537993311882019, -0.0012499623699113727, -0.3164994716644287, -0.08167582750320435, -0.00022825974156148732, -0.00032085992279462516, -0.003905290039256215, -0.017304979264736176, -0.9017103910446167, -0.03194497153162956, -0.0006445952458307147, -0.13633328676223755, -0.5696641802787781, -1.2821013927459717, -1.6356357336044312, -0.04754377529025078, -0.5676653981208801, -0.00014828535495325923, -0.004354637581855059, -0.00146246247459203, -0.0729428380727768, -0.000971917703282088, -0.04117586091160774, -0.00014530557382386178, -0.014895410276949406, -1.3612390756607056, -0.8614303469657898, -1.58473801612854, -0.023246144875884056, -1.8094267845153809, -7.354942499659956e-05, -0.06129477545619011, -0.0009613183210603893, -0.5248551964759827, -0.06935025751590729, -0.03442051261663437, -9.536738616588991e-07, -3.099393507000059e-05, -3.2186455882765586e-06, -0.0008779485360719264, -0.00015186110977083445, -0.0008266131044365466, -1.9192511899746023e-05, -7.152555099310121e-07, -0.0002356490003876388, -0.33544921875, -0.008231996558606625, -0.0027835930231958628, -0.00018809456378221512, -0.00022671037004329264, -0.001968947472050786, -0.4667603671550751, -1.9073468138230965e-06, -0.012340853922069073, -0.0011462554102763534, -2.0265558760002023e-06, -4.410734163684538e-06, -0.0008335214806720614, -2.9802276912960224e-06, -4.768370445162873e-07, -0.00530395470559597, -6.878139538457617e-05, -1.7881377516459906e-06, -7.152555099310121e-07, -0.0012643685331568122, -0.00031251792097464204, -6.067568756407127e-05, -0.009550949558615685, -0.05018559470772743, -0.00019894051365554333, -0.01782025210559368, -1.2384164333343506, -0.00028606137493625283, -0.7183220982551575, -0.5225111246109009, -0.2578580677509308, -0.1796588897705078, -0.0022452878765761852, -0.004490767139941454, -0.02119346708059311, -6.8662193370983e-05, -0.02027828060090542, -0.8448216319084167, -8.105902816168964e-05, -0.003681550268083811, -2.6225699912174605e-05, -9.595887240720913e-05, 0.0, -5.507317473529838e-05, -8.248942322097719e-05, -2.3483953555114567e-05, -1.1920928244535389e-07, -0.0001387499796692282, -0.00022218143567442894, -0.007921943441033363, -0.3674525320529938, -0.9830699563026428, -0.1528685986995697, -0.28642335534095764, -4.2676016164477915e-05, -0.009154961444437504, -0.06419754028320312, -1.311301275563892e-06, -4.017272294731811e-05, -1.1920928244535389e-07, -2.634490556374658e-05, -0.006179867312312126, -4.494089080253616e-05, -0.07015896588563919, -8.344646857949556e-07, -3.933898824470816e-06, -1.6689286894688848e-06, -4.625213477993384e-05, -3.814689989667386e-06, -3.1709168979432434e-05, -1.1920858014491387e-05, 0.0, -8.106198947643861e-06, -0.0002775999018922448, -1.168244216387393e-05, -0.001110890181735158, -0.0008401916129514575, -0.0001784403866622597, -0.003941862843930721, -0.00016473367577418685, -0.03140989691019058, -0.0009349980391561985, -0.01784554496407509, -0.23329511284828186, -0.3943741023540497, -0.08999595046043396, -0.9642114639282227, -0.2261865735054016, -0.15612515807151794, -0.0002522150462027639, -0.019361553713679314, -8.892617915989831e-05, -0.2591809630393982, -0.05927993357181549, -0.017279906198382378, -0.5759161114692688, -0.0015115038258954883, -0.04100916534662247, -5.960462772236497e-07, -7.152555099310121e-07, -5.960462772236497e-07, -2.861018856492592e-06, -1.311301275563892e-06, -0.0005832401220686734, -4.0531076592742465e-06, -1.1801649634435307e-05, -0.0003885467885993421, -0.006202377378940582, -8.272782724816352e-05, -0.0014603198505938053, -0.45874375104904175, -0.03425787389278412, -0.29186972975730896, -0.010421263985335827, -0.0021421597339212894, -0.019545340910553932, -0.030101435258984566, -0.009120823815464973, -0.0749051496386528, -7.724463648628443e-05, -0.04507855698466301, -9.536738616588991e-07, -5.960462772236497e-07, -0.00010322991875000298, -3.1709168979432434e-05, -0.3156159222126007, -0.0003175231395289302, -0.0005850272136740386, -8.344646857949556e-07, -9.536738616588991e-07, -1.4305104514278355e-06, -4.768360213347478e-06, -5.364403477869928e-06, -0.00021789084712509066, -2.0265558760002023e-06, -2.3841855067985307e-07, -4.887569048150908e-06, -4.0649541915627196e-05, -1.764281842042692e-05, -2.074220174108632e-05, -0.34083613753318787, -4.994744449504651e-05, -0.0105351023375988, -4.768370445162873e-07, -2.3841855067985307e-07, -3.576278118089249e-07, -1.1205610462639015e-05, -1.585470999998506e-05, -0.011788113974034786, -2.9802276912960224e-06, -5.745722592109814e-05, -6.782778655178845e-05, -0.0005376085755415261, -0.003805064596235752, -0.03548382595181465, -9.822363062994555e-05, -0.0018347349250689149, -2.8490614567999728e-05, -9.941560711013153e-05, -0.31423628330230713, -0.2930842936038971, -0.893068790435791, -0.0005550036439672112, -1.5497195136049413e-06, -0.0013754441170021892, -0.0024165494833141565, -0.0016399280866608024, -0.0001720042055239901, -3.611976353568025e-05, -0.0028160461224615574, -0.0004262015863787383, -2.3841830625315197e-06, -0.012008633464574814, -0.17368966341018677, -0.005032847169786692, -0.0004577780782710761, -0.00011312322021694854, -7.581423415103927e-05, -6.079655122448457e-06, -6.318072337307967e-06, -0.0006092122639529407, -4.792098479811102e-05, -1.966933996300213e-05, -0.0006852186052128673, -0.23127613961696625], "finish_reason": "length"}], "metrics": {"energy": 917.7819409103384, "energy_per_token": 3.5850857066810096, "time": 22.056149, "time_per_token": 0.08615683203125}}
{"outputs": [{"text": "# Create a summary dictionary to track the count of files moved to each directory\n    summary = {}\n\n    # Create the \"Invalid\" directory if it doesn't exist\n    if not os.path.exists('Invalid'):\n        os.mkdir('Invalid')\n\n    # Loop through all files in the directory\n    for filename in os.listdir(directory_path):\n        # Get the file extension\n        file_ext = os.path.splitext(filename)[1]\n\n        # Check if the file has an extension\n        if file_ext != '':\n            # Create a directory for the file extension if it doesn't exist\n            if not os.path.exists(file_ext[1:]):\n                os.mkdir(file_ext[1:])\n\n            # Check if the file name contains invalid characters\n            if set(filename) & set(INVALID_CHARACTERS):\n                # Move the file to the \"Invalid\" directory\n                shutil.move(os.path.join(directory_path, filename), 'Invalid')\n                # Update the summary dictionary\n                summary['Invalid'] = summary.", "tokens": ["#", " Create", " a", " summary", " dictionary", " to", " track", " the", " count", " of", " files", " moved", " to", " each", " directory", "\n", "    ", "summary", " =", " {}", "\n", "\n", "    ", "#", " Create", " the", " \"", "Invalid", "\"", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "('", "Invalid", "')", ":", "\n", "        ", "os", ".", "mk", "dir", "('", "Invalid", "')", "\n", "\n", "    ", "#", " Loop", " through", " all", " files", " in", " the", " directory", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "#", " Get", " the", " file", " extension", "\n", "        ", "file", "_", "ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")[", "1", "]", "\n", "\n", "        ", "#", " Check", " if", " the", " file", " has", " an", " extension", "\n", "        ", "if", " file", "_", "ext", " ", "!", "=", " '", "':", "\n", "            ", "#", " Create", " a", " directory", " for", " the", " file", " extension", " if", " it", " doesn", "'", "t", " exist", "\n", "            ", "if", " not", " os", ".", "path", ".", "exists", "(", "file", "_", "ext", "[", "1", ":]", "):", "\n", "                ", "os", ".", "mk", "dir", "(", "file", "_", "ext", "[", "1", ":", "])", "\n", "\n", "            ", "#", " Check", " if", " the", " file", " name", " contains", " invalid", " characters", "\n", "            ", "if", " set", "(", "filename", ")", " &", " set", "(", "INVALID", "_", "CHAR", "ACT", "ERS", "):", "\n", "                ", "#", " Move", " the", " file", " to", " the", " \"", "Invalid", "\"", " directory", "\n", "                ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", ",", " '", "Invalid", "')", "\n", "                ", "#", " Update", " the", " summary", " dictionary", "\n", "                ", "summary", "['", "Invalid", "']", " =", " summary", "."], "logprobs": [-0.8680583834648132, -1.34231698513031, -1.2660026550292969, -1.4406102895736694, -0.08881358802318573, -0.8490303754806519, -1.682761311531067, -0.31821510195732117, -0.2954706847667694, -0.04108227416872978, -0.06522196531295776, -0.04112803936004639, -0.10788466036319733, -0.0007819455349817872, -0.008187539875507355, -0.14479468762874603, -0.0008237544680014253, -0.014898229390382767, -0.0020881532691419125, -0.07854729145765305, -0.0009265420376323164, -0.12626738846302032, -0.0003906917118001729, -0.042438387870788574, -1.2115281820297241, -1.1437581777572632, -0.33155083656311035, -0.028158416971564293, -0.0013244913425296545, -0.01241620909422636, -0.15546737611293793, -0.01079163234680891, -0.07726700603961945, -0.0001705739414319396, -4.172316494077677e-06, -0.024909934028983116, -0.07364422082901001, -0.00012051333033014089, -1.8845354318618774, -0.07198874652385712, -0.0013335392577573657, -1.2993727978027891e-05, -0.0002752163854893297, -9.417489309271332e-06, -0.050652701407670975, -1.2628843784332275, -0.006456349510699511, -0.002577794250100851, -0.000773488252889365, -0.0006652049487456679, -0.0012974663404747844, -0.005723516456782818, -8.702239938429557e-06, -0.9048053026199341, -2.3841855067985307e-07, -0.0012188870459794998, -0.00010489867418073118, -3.2305197237292305e-05, -0.00015448330668732524, -0.0872458815574646, -0.001687889569438994, -0.020284121856093407, -1.1296197175979614, -0.09827692806720734, -0.45881158113479614, -0.1347189098596573, -0.1552685797214508, -0.004012510646134615, -0.08513448387384415, -0.079767607152462, -7.652943895664066e-05, -0.009160631336271763, -0.6818293333053589, -0.00012051333033014089, -0.002890696283429861, -3.099436753473128e-06, -0.00030083899036981165, -1.1920928244535389e-07, -0.0005317704635672271, -0.000440262199845165, -0.00017724849749356508, -8.344646857949556e-07, -0.00016842853801790625, -0.0002553137019276619, -0.01388897281140089, -0.18987639248371124, -1.53388249874115, -0.02623019553720951, -0.2303827553987503, -0.14437957108020782, -0.7704573273658752, -0.00014208737411536276, -0.8915798664093018, -0.005257589276880026, -1.690221905708313, -0.0007014198345132172, -0.3065318167209625, -3.576278118089249e-07, -4.851700214203447e-05, -1.1920928244535389e-07, -6.913899414939806e-05, 0.0, 0.0, -1.9073304429184645e-05, -0.0005847889697179198, -0.04849500209093094, -0.00043811736395582557, -0.24607957899570465, -0.512631356716156, -0.16319753229618073, -0.0004037995240651071, -0.005827816668897867, -0.9629531502723694, -0.026394959539175034, -0.03225020691752434, -0.20498624444007874, -1.5042107105255127, -0.6672689318656921, -0.23476183414459229, -0.5797169208526611, -4.935142715112306e-05, -0.00498646916821599, -0.06527769565582275, -5.960462772236497e-07, -1.8000440832111053e-05, -1.8818341493606567, -3.576278118089249e-07, -1.9073468138230965e-06, -0.05042920634150505, -0.0033905182499438524, -0.00039283663500100374, -0.0036362973041832447, -0.044575661420822144, -2.750081777572632, -0.6653029918670654, -0.2635861933231354, -0.32045140862464905, -0.1510140299797058, -0.33350369334220886, -0.05793163925409317, -0.02536795847117901, -0.009512810036540031, -0.0060702720656991005, -7.390703103737906e-05, -8.34461570775602e-06, -0.004816477652639151, -0.030836274847388268, -0.00011729506513802335, -0.25715047121047974, -0.2137032449245453, -0.006351049058139324, -8.344646857949556e-07, -1.0132738680113107e-05, -2.3841855067985307e-07, -0.004194985143840313, -0.04273015260696411, -0.48049014806747437, -3.2186455882765586e-06, -6.318072337307967e-06, -0.5821838974952698, -2.753696753643453e-05, -0.002546165604144335, -0.005315931048244238, -0.07674305886030197, -0.0001931004080688581, -0.011361188255250454, -3.2186455882765586e-06, -0.008100868202745914, -2.3841855067985307e-07, -0.00028427375946193933, -0.0016061275964602828, -9.536738616588991e-07, -4.768370445162873e-07, -0.00015853578224778175, -2.0265558760002023e-06, -9.989239333663136e-05, -1.1801649634435307e-05, -0.00026663561584427953, -0.029579374939203262, -0.008495855145156384, -0.003957061562687159, -0.7545732259750366, -0.049371689558029175, -0.06481324136257172, -0.4034115672111511, -0.543470561504364, -0.1022670567035675, -0.4926556646823883, -0.00016604475968051702, -0.01110044214874506, -0.0001578206429257989, -0.20877788960933685, -2.800405502319336, -0.0017855905462056398, -0.14001740515232086, -0.08319579064846039, -0.2514623701572418, -0.004693681374192238, -0.0001805857609724626, -0.0007415643776766956, -4.768370445162873e-07, -2.9802276912960224e-06, -6.6756979322235566e-06, -1.311301275563892e-06, -0.04116911068558693, -0.0015650654677301645, -0.0008772339206188917, -0.05987801030278206, -0.04032092168927193, -0.052782122045755386, -0.015621320344507694, -0.015727292746305466, -0.006129040382802486, -0.053458452224731445, -0.00028081765049137175, -0.00011085849109804258, -0.005004736129194498, -0.14787402749061584, -5.7338023907504976e-05, -0.04950205609202385, -8.344646857949556e-07, -4.768370445162873e-07, -0.00023398046323563904, -0.0007780147134326398, -0.20746038854122162, -4.291525328881107e-06, -4.410734163684538e-06, -1.311301275563892e-06, -2.729855441430118e-05, -0.00028308198670856655, -0.0005457103834487498, -2.5748875486897305e-05, -2.3841855067985307e-07, -0.0001110968878492713, -0.0006214833119884133, -7.378782902378589e-05, -3.9457496313843876e-05, -0.8006797432899475, -0.0009808497270569205, -0.012607751414179802, -0.00017498392844572663, -0.39180809259414673, -1.0619409084320068, -0.4434072971343994, -0.03641463816165924, -0.04239862412214279, -0.44413772225379944, -0.15590107440948486, -0.00015662873920518905, -0.20470787584781647, -0.6202491521835327, -0.0006550788530148566, -0.00013851160474587232, -0.005630822852253914, -0.002693003974854946, -0.0007915939204394817], "finish_reason": "length"}], "metrics": {"energy": 878.3382917470931, "energy_per_token": 3.4310089521370823, "time": 21.853409, "time_per_token": 0.08536487890625}}
{"outputs": [{"text": "summary = {}\n    invalid_directory_path = directory_path + '/Invalid'\n\n    # Check if directory_path exists. If it doesn't, raise FileNotFoundError.\n    if not os.path.exists(directory_path):\n        raise FileNotFoundError(f'Directory {directory_path} not found.')\n\n    # Create the Invalid directory if it doesn't exist\n    if not os.path.exists(invalid_directory_path):\n        os.makedirs(invalid_directory_path)\n\n    # Iterate over the files in the directory_path directory\n    for filename in os.listdir(directory_path):\n        file_path = os.path.join(directory_path, filename)\n        extension = os.path.splitext(filename)[1].lower()\n\n        # Check if the file_path is a file. If it's not, skip it.\n        if not os.path.isfile(file_path):\n            continue\n\n        # Check if the file has invalid characters in its name. If it does, move it to the Invalid directory.\n        if any(char", "tokens": ["summary", " =", " {}", "\n", "    ", "invalid", "_", "directory", "_", "path", " =", " directory", "_", "path", " +", " '/", "Invalid", "'", "\n", "\n", "    ", "#", " Check", " if", " directory", "_", "path", " exists", ".", " If", " it", " doesn", "'", "t", ",", " raise", " File", "NotFound", "Error", ".", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "directory", "_", "path", "):", "\n", "        ", "raise", " File", "NotFound", "Error", "(", "f", "'", "Directory", " {", "directory", "_", "path", "}", " not", " found", ".", "')", "\n", "\n", "    ", "#", " Create", " the", " Invalid", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "invalid", "_", "directory", "_", "path", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "invalid", "_", "directory", "_", "path", ")", "\n", "\n", "    ", "#", " Iter", "ate", " over", " the", " files", " in", " the", " directory", "_", "path", " directory", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", "\n", "        ", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")[", "1", "]", ".", "lower", "()", "\n", "\n", "        ", "#", " Check", " if", " the", " file", "_", "path", " is", " a", " file", ".", " If", " it", "'", "s", " not", ",", " skip", " it", ".", "\n", "        ", "if", " not", " os", ".", "path", ".", "is", "file", "(", "file", "_", "path", "):", "\n", "            ", "continue", "\n", "\n", "        ", "#", " Check", " if", " the", " file", " has", " invalid", " characters", " in", " its", " name", ".", " If", " it", " does", ",", " move", " it", " to", " the", " Invalid", " directory", ".", "\n", "        ", "if", " any", "(", "char"], "logprobs": [-0.9261104464530945, -0.003763380227610469, -0.09414701908826828, -0.10688643157482147, -0.3570042848587036, -0.42816224694252014, -0.041889119893312454, -1.072547197341919, -2.448056936264038, -0.17169946432113647, -0.0009591746493242681, -2.036588430404663, -0.0002456601650919765, -3.58813522325363e-05, -0.11337445676326752, -0.8838949203491211, -0.061089906841516495, -0.09436637908220291, -0.021197669208049774, -0.9335383772850037, -0.0008871195605024695, -0.7007472515106201, -2.1308000087738037, -0.0729154646396637, -2.595257520675659, -1.6155388355255127, -0.0010087168775498867, -0.48046478629112244, -2.854835271835327, -0.6261992454528809, -1.293766975402832, -0.2904127836227417, -0.000514851592015475, -0.00014447122521232814, -0.12571898102760315, -3.2002358436584473, -2.2479827404022217, -0.004590805619955063, -0.001960857305675745, -0.14101718366146088, -0.04991878941655159, -0.0008399534272029996, -0.02621939592063427, -0.02054213359951973, -0.003293092828243971, -1.3828182090946939e-05, -0.0005411829333752394, -2.169585604860913e-05, -0.11312878131866455, -0.000161038784426637, -0.0007020154735073447, -1.8000440832111053e-05, 0.0, -0.0023129635956138372, -0.00139639584813267, -0.003999687731266022, -0.016073646023869514, -0.002381110331043601, -0.00011824862303910777, -4.0531076592742465e-06, -0.18160031735897064, -0.4106084406375885, -2.242234945297241, -0.1947965919971466, -1.195552945137024, -0.0012380562257021666, -7.343022298300639e-05, -2.50339189733495e-06, -0.002358989790081978, -0.7845718860626221, -0.0002470903273206204, -0.3536408543586731, -0.022323742508888245, -0.000399033073335886, -0.020078154280781746, -0.001167807262390852, -0.042834777384996414, -1.2179017066955566, -0.5150598883628845, -1.1694563627243042, -0.012063049711287022, -0.11082674562931061, -0.004584753420203924, -0.053558457642793655, -0.0001941730733960867, -2.2411095415009186e-05, -0.05122198164463043, -1.6771817207336426, -0.00010048838157672435, -0.11628517508506775, -0.004597925115376711, -0.0002917817619163543, -1.6689286894688848e-06, -4.029192859889008e-05, -2.3841830625315197e-06, -0.027121854946017265, -0.0003259842633269727, -0.0015050761867314577, -4.768370445162873e-07, -5.602820692729438e-06, -2.729855441430118e-05, 0.0, -0.0004668337933253497, -0.00016318420239258558, -0.001495434669777751, -0.0156425628811121, -3.6954811548639555e-06, -1.1257911920547485, -1.6212332411669195e-05, -5.722029527532868e-06, -0.00032085992279462516, -0.00028391621890477836, -8.344646857949556e-07, -3.4689302992774174e-05, -1.0013530300057027e-05, 0.0, -0.002976037794724107, -0.0005049622268415987, -0.04525027051568031, -0.0018970841774716973, -0.10214629769325256, -0.9584037065505981, -0.0015398323303088546, -0.5153594017028809, -0.7589288353919983, -0.197092667222023, -0.1275874376296997, -0.06683347374200821, -0.03634991869330406, -1.8626707792282104, -0.00022516099852509797, -2.4988911151885986, -0.18396592140197754, -0.00023815179883968085, -0.01803581602871418, -0.9930297136306763, -0.0005048430757597089, -0.0025217896327376366, -4.875540980719961e-05, -0.0005863377591595054, 0.0, -8.082063141046092e-05, -0.0002094287920044735, -8.940656698541716e-06, 0.0, -0.00033158526639454067, -0.00040951924165710807, -0.05393408611416817, -1.6365840435028076, -0.20611001551151276, -0.03769225627183914, -0.0004403813509270549, -0.01910814829170704, -3.576278118089249e-07, -0.00014137222024146467, -4.291525328881107e-06, -0.00041571559268049896, -1.4543427823809907e-05, -0.00023993951617740095, -5.8412379075889476e-06, -3.2186455882765586e-06, -3.957670196541585e-05, -0.0005156855913810432, -3.290122185717337e-05, -0.008166729472577572, -1.7119736671447754, -2.802039623260498, -0.0033718657214194536, -0.15097005665302277, -1.5497195136049413e-06, -1.5020257706055418e-05, -4.768370445162873e-07, -5.6980417866725475e-05, -3.576278118089249e-07, -3.576278118089249e-07, -1.8596476365928538e-05, -0.03394956514239311, -0.029167043045163155, -0.000557267339900136, -0.5252525806427002, -0.6058057546615601, -1.275078535079956, -0.10736516863107681, -0.560136079788208, -0.1891828328371048, -0.0010206258157268167, -0.021790724247694016, -0.8087790608406067, -0.03205234557390213, -0.20316320657730103, -0.14378629624843597, -1.9851412773132324, -0.0013403251068666577, -0.08125409483909607, -0.08519666641950607, -0.1547500491142273, -3.0632286071777344, -0.11974715441465378, -0.16767117381095886, -0.5189805626869202, -3.731181277544238e-05, -0.4814051389694214, -0.0644989013671875, -0.3193589746952057, -0.7375478148460388, -0.04362879693508148, -0.009706089273095131, -8.570780482841656e-05, -0.0035531502217054367, -0.20273639261722565, -0.0006069486844353378, -1.1920928244535389e-07, -1.1205610462639015e-05, -1.1920928244535389e-07, -4.8040190449682996e-05, -0.0004359725280664861, -5.9126061387360096e-05, -0.0007834940915927291, -7.510157047363464e-06, -4.768370445162873e-07, -0.017231866717338562, -0.003465125570073724, -0.0007951673469506204, -0.007635456044226885, -0.00048458753735758364, -0.004304192494601011, -0.0013261580606922507, -0.017669878900051117, -0.24104420840740204, -0.04018202796578407, -0.19312842190265656, -1.6530048847198486, -1.7246975898742676, -1.9419316053390503, -0.0026987106539309025, -0.07931666076183319, -0.3776141405105591, -0.06004349887371063, -0.5484466552734375, -0.10366063565015793, -0.04705997556447983, -0.04034988954663277, -0.0011198208667337894, -0.017310837283730507, -0.011800955049693584, -0.0011132716899737716, -0.060643021017313004, -0.06555160135030746, -0.005773060489445925, -0.2582213878631592, -0.05516459792852402, -0.00038366109947673976, -0.20061254501342773, -0.06884529441595078, -0.022851932793855667, -0.5609716773033142], "finish_reason": "length"}], "metrics": {"energy": 1005.7612426757814, "energy_per_token": 3.928754854202271, "time": 24.324968, "time_per_token": 0.09501940625}}
{"outputs": [{"text": "# Create a new directory for invalid files\n    invalid_dir = os.path.join(directory_path, \"Invalid\")\n    if not os.path.exists(invalid_dir):\n        os.mkdir(invalid_dir)\n\n    # Initialize a summary dictionary\n    summary = {}\n\n    # Loop through all files in the directory\n    for filename in os.listdir(directory_path):\n        # Skip directories\n        if os.path.isdir(os.path.join(directory_path, filename)):\n            continue\n\n        # Check if the filename has any invalid characters\n        if any(c in INVALID_CHARACTERS for c in filename):\n            # Move the file to the Invalid directory\n            shutil.move(os.path.join(directory_path, filename), invalid_dir)\n            summary.setdefault(\"Invalid\", 0)\n        else:\n            # Get the file extension\n            _, extension = os.path.splitext(filename)\n\n            # Create a new directory if it doesn't exist\n            new_dir = os.path.join(directory_path", "tokens": ["#", " Create", " a", " new", " directory", " for", " invalid", " files", "\n", "    ", "invalid", "_", "dir", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " \"", "Invalid", "\"", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "invalid", "_", "dir", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "invalid", "_", "dir", ")", "\n", "\n", "    ", "#", " Initialize", " a", " summary", " dictionary", "\n", "    ", "summary", " =", " {}", "\n", "\n", "    ", "#", " Loop", " through", " all", " files", " in", " the", " directory", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "#", " Skip", " directories", "\n", "        ", "if", " os", ".", "path", ".", "is", "dir", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", "))", ":", "\n", "            ", "continue", "\n", "\n", "        ", "#", " Check", " if", " the", " filename", " has", " any", " invalid", " characters", "\n", "        ", "if", " any", "(", "c", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", " for", " c", " in", " filename", "):", "\n", "            ", "#", " Move", " the", " file", " to", " the", " Invalid", " directory", "\n", "            ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", ",", " invalid", "_", "dir", ")", "\n", "            ", "summary", ".", "set", "default", "(", "\"", "Invalid", "\"", ",", " ", "0", ")", "\n", "        ", "else", ":", "\n", "            ", "#", " Get", " the", " file", " extension", "\n", "            ", "_", ",", " extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")", "\n", "\n", "            ", "#", " Create", " a", " new", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "            ", "new", "_", "dir", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path"], "logprobs": [-0.8680583834648132, -1.34231698513031, -1.2660026550292969, -1.2267259359359741, -0.10579874366521835, -0.9106911420822144, -0.2590670585632324, -0.1779819130897522, -0.3955989181995392, -0.0006373281357809901, -0.13137944042682648, -0.0018070096848532557, -0.40041738748550415, -0.12902824580669403, -0.23073017597198486, -2.8609820219571702e-05, -0.00020251607929822057, -2.9802276912960224e-06, -0.002848854986950755, -0.0009510761592537165, -0.0038500723894685507, -0.0006549597019329667, -7.152555099310121e-07, -0.00044800734031014144, -0.8994269371032715, -0.03481122851371765, -0.003743665525689721, -0.00024351492174901068, -0.0005757343024015427, -0.007811474613845348, -1.2425220012664795, -0.018186835572123528, -0.0001045410826918669, -7.867782187531702e-06, -0.00016246906307060272, -4.172316494077677e-06, -0.04247220605611801, -2.1457441107486375e-05, -0.0003090619284193963, -1.6689286894688848e-06, -5.960462772236497e-07, -0.000720956246368587, -0.0009997851448133588, -0.0012972281547263265, -0.004968795459717512, -9.536738616588991e-07, -0.6291292309761047, -1.311301275563892e-06, -7.974783511599526e-05, -0.0003361137059982866, -1.5497195136049413e-06, -3.576278118089249e-07, -7.164221460698172e-05, -0.0004469349514693022, -0.03879957273602486, -0.0007065422250889242, -0.173643559217453, -0.6629809737205505, -1.0094972848892212, -0.7465935349464417, -0.04965066537261009, -0.4275573492050171, -0.00011812942830147222, -0.002551397541537881, -0.0017058596713468432, -0.08191188424825668, -0.0009885906474664807, -0.02531786449253559, -0.00014768941036891192, -0.018014272674918175, -1.3117079734802246, -0.20913434028625488, -0.5036237239837646, -0.1000819057226181, -0.10381527245044708, -0.014204232022166252, -0.03473512455821037, -0.08299941569566727, -7.855583680793643e-05, -0.020822029560804367, -0.9459468126296997, -0.00010156115604331717, -0.004246979020535946, -2.50339189733495e-06, -0.00017510310863144696, -2.3841855067985307e-07, -8.475421054754406e-05, -0.0002526917669456452, -2.634490556374658e-05, -4.768370445162873e-07, -0.0002256377338198945, -0.00027044929447583854, -0.015079432167112827, -0.25795313715934753, -1.4774949550628662, -0.1309611201286316, -0.19995422661304474, -6.639736966462806e-05, -0.011130858212709427, -0.07912833988666534, -2.50339189733495e-06, -6.437094270950183e-05, -4.768370445162873e-07, -4.935142715112306e-05, -0.017612721771001816, -0.00010001159535022452, -0.10432383418083191, -4.410734163684538e-06, -9.536697689327411e-06, -9.536738616588991e-07, -9.655486064730212e-05, -8.583032467868179e-06, -8.070142939686775e-05, -0.00015114595589693636, -2.3841855067985307e-07, -1.1444026313256472e-05, -0.0006744970451109111, -2.0861407392658293e-05, -0.000899982638657093, -0.001940036192536354, -0.0002172949316445738, -0.0030089602805674076, -0.0003567297535482794, -0.032055579125881195, -0.0008501967531628907, -0.013429304584860802, -0.340410441160202, -0.27969396114349365, -0.20484085381031036, -0.7725639343261719, -2.4256458282470703, -1.3585128784179688, -0.005601424258202314, -0.0004542034293990582, -0.02149849943816662, -9.667406266089529e-05, -0.503601610660553, -0.04177365079522133, -0.016784634441137314, -0.7330998182296753, -0.0010065733222290874, -0.05620609596371651, -1.311301275563892e-06, -1.0728830375228426e-06, -2.0265558760002023e-06, -1.6689160474925302e-05, -1.1920928244535389e-07, -0.0008924792055040598, -1.728519782773219e-05, -1.0490362910786644e-05, -0.0006836699321866035, -0.005843816325068474, -9.858122211880982e-05, -0.0014810318825766444, -0.4124191403388977, -0.049466658383607864, -0.34416839480400085, -0.021692976355552673, -0.0037480599712580442, -0.009288904257118702, -2.14784836769104, -0.011987785808742046, -0.12249894440174103, -8.630380034446716e-05, -0.051340099424123764, -2.0265558760002023e-06, -1.1920922133867862e-06, -0.00016091958968900144, -5.602679812000133e-05, -0.9270551800727844, -7.033323527139146e-06, -8.583032467868179e-06, -5.960446742392378e-06, -6.556489552167477e-06, -1.6569954823353328e-05, -0.000516757951118052, -1.597391747054644e-05, -1.5497195136049413e-06, -1.7046782886609435e-05, -0.00019369633810129017, -7.128461584215984e-05, -5.4238757002167404e-05, -0.39719241857528687, -5.602820692729438e-06, -3.099436753473128e-06, -0.0007512131123803556, -0.00025602878304198384, -0.18786098062992096, -0.2699998915195465, -0.8402089476585388, -0.0004366874636616558, -8.702239938429557e-06, -0.12996076047420502, -0.0005722792120650411, -0.0016195764765143394, -0.00020704510097857565, -7.009260298218578e-05, -0.002552348654717207, -0.00039521988946944475, -1.4662635294371285e-05, -0.028615649789571762, -1.6843082904815674, -0.007085434626787901, -2.062299427052494e-05, -0.000916418619453907, -0.0007665794692002237, -0.043147891759872437, -0.3362739682197571, -0.00450477097183466, -0.19572457671165466, -0.21954210102558136, -0.5392975211143494, -4.410646579344757e-05, -2.641685724258423, -0.00248659192584455, -1.0991160869598389, -0.00016056202002801, -0.00027938754647038877, -5.960462772236497e-07, -1.5497195136049413e-06, -1.1920928244535389e-07, -1.1920858014491387e-05, -1.1920928244535389e-07, 0.0, -1.7165990357170813e-05, -0.002508352743461728, -0.003273487789556384, -0.0016248131869360805, -1.3588130474090576, -0.00022682955022901297, -0.0024776733480393887, -0.558941125869751, -0.10695423930883408, -0.2975827753543854, -0.08580220490694046, -2.140547037124634, -1.4440662860870361, -0.055000558495521545, -0.00032431588624604046, -4.589452510117553e-05, -0.009464041329920292, -0.0993943065404892, -3.0278701160568744e-05, -0.8599708080291748, -0.0001705739414319396, -0.039419300854206085, -0.0030027797911316156, -0.01313074305653572, -1.4305104514278355e-06, -1.1920922133867862e-06, -7.152555099310121e-07, -0.000163541772053577, -9.775113539944869e-06, -0.0007086864789016545, -1.0251946150674485e-05, -4.768370445162873e-07], "finish_reason": "length"}], "metrics": {"energy": 891.4498049259195, "energy_per_token": 3.482225800491873, "time": 22.280262, "time_per_token": 0.0870322734375}}
{"outputs": [{"text": "# Initialize variables\n    summary = {}\n    invalid_dir = directory_path / 'Invalid'\n\n    # Create the \"Invalid\" directory if it doesn't exist\n    if not invalid_dir.exists():\n        invalid_dir.mkdir()\n\n    # Walk the directory tree and move files to the appropriate directory\n    for dirpath, dirnames, filenames in os.walk(directory_path):\n        for filename in filenames:\n            # Get the file extension and directory name\n            ext = os.path.splitext(filename)[1]\n            directory_name = ext[1:] if ext else 'NoExtension'\n\n            # Check if the file extension is valid\n            if any(char in INVALID_CHARACTERS for char in directory_name):\n                shutil.move(os.path.join(dirpath, filename), invalid_dir)\n\n                # Update summary to count files in \"Invalid\" directory\n                if 'Invalid' in summary:\n                    summary['Invalid'] += 1\n                else:\n                    summary['Invalid'] = 1\n            else:\n                # Create the directory if", "tokens": ["#", " Initialize", " variables", "\n", "    ", "summary", " =", " {}", "\n", "    ", "invalid", "_", "dir", " =", " directory", "_", "path", " /", " '", "Invalid", "'", "\n", "\n", "    ", "#", " Create", " the", " \"", "Invalid", "\"", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " invalid", "_", "dir", ".", "exists", "():", "\n", "        ", "invalid", "_", "dir", ".", "mk", "dir", "()", "\n", "\n", "    ", "#", " Walk", " the", " directory", " tree", " and", " move", " files", " to", " the", " appropriate", " directory", "\n", "    ", "for", " dir", "path", ",", " dir", "names", ",", " fil", "en", "ames", " in", " os", ".", "walk", "(", "directory", "_", "path", "):", "\n", "        ", "for", " filename", " in", " fil", "en", "ames", ":", "\n", "            ", "#", " Get", " the", " file", " extension", " and", " directory", " name", "\n", "            ", "ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")[", "1", "]", "\n", "            ", "directory", "_", "name", " =", " ext", "[", "1", ":]", " if", " ext", " else", " '", "No", "Extension", "'", "\n", "\n", "            ", "#", " Check", " if", " the", " file", " extension", " is", " valid", "\n", "            ", "if", " any", "(", "char", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", " for", " char", " in", " directory", "_", "name", "):", "\n", "                ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "dir", "path", ",", " filename", ")", ",", " invalid", "_", "dir", ")", "\n", "\n", "                ", "#", " Update", " summary", " to", " count", " files", " in", " \"", "Invalid", "\"", " directory", "\n", "                ", "if", " '", "Invalid", "'", " in", " summary", ":", "\n", "                ", "    ", "summary", "['", "Invalid", "']", " +=", " ", "1", "\n", "                ", "else", ":", "\n", "                ", "    ", "summary", "['", "Invalid", "']", " =", " ", "1", "\n", "            ", "else", ":", "\n", "                ", "#", " Create", " the", " directory", " if"], "logprobs": [-0.8680583834648132, -1.1121305227279663, -1.9440836906433105, -0.07806128263473511, -0.0015735160559415817, -0.3311607241630554, -0.004182164557278156, -0.07704485207796097, -0.05625331029295921, -0.29497119784355164, -0.1193421334028244, -0.035063449293375015, -1.294986367225647, -0.11823169142007828, -1.2073726654052734, -0.0003816353273577988, -1.6212332411669195e-05, -1.9922491312026978, -1.1583058834075928, -0.018409578129649162, -0.0031911423429846764, -0.02798524685204029, -0.5008144974708557, -0.00046361665590666234, -0.014689622446894646, -0.5575772523880005, -0.3295344114303589, -1.4094913005828857, -0.011025813408195972, -0.0006550788530148566, -0.014728034846484661, -0.10014402866363525, -0.007424500305205584, -0.10404455661773682, -0.0003093002596870065, -6.508615479106084e-05, -0.023311367258429527, -0.033620066940784454, -0.00014423283573705703, -0.21790601313114166, -0.004235345870256424, -0.14947986602783203, -6.079655122448457e-06, -2.861018856492592e-06, -0.00026425207033753395, -0.04437531903386116, -0.001328420010395348, -0.0005389191792346537, -0.0017640519654378295, -0.05987699702382088, -1.4543427823809907e-05, -3.40932747349143e-05, -0.0003190723655279726, -0.00013743886665906757, -5.722029527532868e-06, -0.048982199281454086, -0.0004629017203114927, -0.021594516932964325, -0.0011270844843238592, -0.006037806160748005, -3.108259916305542, -1.6734369993209839, -0.01773698627948761, -0.31781256198883057, -0.8570796847343445, -1.2976999282836914, -0.24650795757770538, -0.9415781497955322, -1.2258459329605103, -0.1796499341726303, -0.5937691330909729, -0.02080673538148403, -0.0001740304142003879, -0.004403300117701292, -1.425539493560791, -0.09702469408512115, -0.0002965487365145236, -0.14096221327781677, -0.00017975145601667464, -1.5020257706055418e-05, -0.0009302341495640576, 0.0, -5.364403477869928e-06, -0.00022897482267580926, -0.001165664056316018, -6.794906312279636e-06, -1.4662635294371285e-05, -0.0005551227368414402, -0.1941460222005844, -7.343022298300639e-05, -1.6689286894688848e-06, -0.024354558438062668, -0.0014693664852529764, -0.002984357764944434, -0.09665008634328842, -0.15693320333957672, -1.9550132492440753e-05, -0.00014888131408952177, 0.0, -2.3841855067985307e-07, -9.417090768693015e-05, -0.00028951745480298996, -0.00357512547634542, -0.46434804797172546, -1.9309237003326416, -0.03368980064988136, -0.41046154499053955, -0.13614261150360107, -0.8164036870002747, -2.900496482849121, -0.901308536529541, -0.18310797214508057, -0.00014149141497910023, -2.4589121341705322, -0.002740914933383465, -1.041150450706482, -3.4570634852570947e-06, -0.0001264730526600033, -1.1920928244535389e-07, -2.5152843591058627e-05, -3.576278118089249e-07, 0.0, -1.3708974620385561e-05, -0.00034338299883529544, -0.04348807781934738, -0.0008660380262881517, -0.3442308306694031, -1.0864472389221191, -0.009334729053080082, -1.6600394248962402, -0.36805036664009094, -0.00472619105130434, -0.001191263902001083, -0.06729409843683243, -0.625377357006073, -0.0004580163804348558, -0.0002903516869992018, -0.31253570318222046, -0.007418465800583363, -0.03743438050150871, -0.19363656640052795, -0.6894963383674622, -0.7850293517112732, -0.0013578252401202917, -0.06289459019899368, -0.09217865765094757, -0.0003716255014296621, -0.00334251974709332, -0.7011903524398804, -0.16177839040756226, -0.07950648665428162, -0.4475869834423065, -2.7734732627868652, -0.9341384172439575, -0.29663243889808655, -0.14370793104171753, -0.0001161031104857102, -0.09688913077116013, -1.1022412776947021, -0.012281389907002449, -0.38572755455970764, -0.007584821432828903, -0.14214378595352173, -1.4305104514278355e-06, -8.344646857949556e-07, -3.814689989667386e-06, -1.3589766240329482e-05, -3.933898824470816e-06, -0.0015238827327266335, -3.313963316031732e-05, -2.169585604860913e-05, -0.582012951374054, -4.291525328881107e-06, -0.00010251473577227443, -0.018365221098065376, -0.00023910524032544345, -0.0007114263135008514, -1.406633734703064, -1.5497195136049413e-06, -7.152555099310121e-07, -0.00011944057769142091, -0.0004948345012962818, -0.02539515309035778, -3.075552376685664e-05, -2.539125671319198e-05, -2.622600959512056e-06, -5.709961988031864e-05, -2.706014311115723e-05, -0.003993751015514135, -3.2186455882765586e-06, -3.611976353568025e-05, -0.00024828212917782366, -6.723177648382261e-05, -3.075552376685664e-05, -0.8918697834014893, -7.152531907195225e-06, -4.5060096454108134e-05, -0.026327501982450485, -0.0005292683490552008, -2.0413575172424316, -0.03162936493754387, -0.05475117266178131, -0.08939164131879807, -2.1484458446502686, -3.8084449768066406, -2.841299057006836, -1.5801005363464355, -1.9129899740219116, -1.131104588508606, -0.0034824698232114315, -0.0010058587649837136, -0.09163832664489746, -0.02452591434121132, -0.000226472009671852, -1.14542818069458, -0.18132570385932922, -0.0010780243901535869, -0.00012027494085486978, -1.195204496383667, -0.0002882065309677273, -0.027554050087928772, -0.00010835537250386551, -7.676783570786938e-05, -0.0019120759097859263, -0.0003150205302517861, -0.0008131535141728818, -2.753696753643453e-05, -2.2411095415009186e-05, -0.0022230453323572874, -0.00015770144818816334, -1.1086402082582936e-05, -0.0002012050390476361, -0.000285584683297202, -0.0004797023138962686, -1.5735502529423684e-05, -3.302042750874534e-05, -4.386805812828243e-05, -0.0009504806366749108, -2.109982233378105e-05, -0.00037174468161538243, -5.709961988031864e-05, -4.768360213347478e-06, -6.747018051100895e-05, -5.1020273531321436e-05, -0.0007469248375855386, -0.00020823694649152458, -0.33599942922592163, -0.019400138407945633, -3.85038583772257e-05, -0.0009650102583691478, -0.0036079094279557467, -0.024652116000652313, -0.11102145910263062, -0.13127928972244263, -0.394466370344162, -0.0808999165892601], "finish_reason": "length"}], "metrics": {"energy": 937.2739805250163, "energy_per_token": 3.661226486425845, "time": 21.83918, "time_per_token": 0.085309296875}}
{"outputs": [{"text": "# Initialize summary dictionary and invalid directory\n    summary = {}\n    invalid_dir = os.path.join(directory_path, \"Invalid\")\n    os.makedirs(invalid_dir, exist_ok=True)\n\n    # Iterate over each file in the directory\n    for file in os.listdir(directory_path):\n        if os.path.isfile(os.path.join(directory_path, file)):\n            # Check if any invalid characters are in the filename\n            has_invalid = any(c in INVALID_CHARACTERS for c in file)\n            if has_invalid:\n                # Move file to Invalid directory if it has invalid characters\n                shutil.move(\n                    os.path.join(directory_path, file),\n                    os.path.join(invalid_dir, file),\n                )\n                summary.setdefault(\"Invalid\", 0)\n            else:\n                # Extract file extension and add it to summary if it exists\n                ext = os.path.splitext(file)[1]\n                if ext:\n                    summary.setdefault(", "tokens": ["#", " Initialize", " summary", " dictionary", " and", " invalid", " directory", "\n", "    ", "summary", " =", " {}", "\n", "    ", "invalid", "_", "dir", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " \"", "Invalid", "\"", ")", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "invalid", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Iter", "ate", " over", " each", " file", " in", " the", " directory", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " file", "))", ":", "\n", "            ", "#", " Check", " if", " any", " invalid", " characters", " are", " in", " the", " filename", "\n", "            ", "has", "_", "invalid", " =", " any", "(", "c", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", " for", " c", " in", " file", ")", "\n", "            ", "if", " has", "_", "invalid", ":", "\n", "                ", "#", " Move", " file", " to", " Invalid", " directory", " if", " it", " has", " invalid", " characters", "\n", "                ", "sh", "util", ".", "move", "(", "\n", "                ", "    ", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " file", ")", ",", "\n", "                ", "    ", "os", ".", "path", ".", "join", "(", "invalid", "_", "dir", ",", " file", ")", ",", "\n", "                ", ")", "\n", "                ", "summary", ".", "set", "default", "(", "\"", "Invalid", "\"", ",", " ", "0", ")", "\n", "            ", "else", ":", "\n", "                ", "#", " Ext", "ract", " file", " extension", " and", " add", " it", " to", " summary", " if", " it", " exists", "\n", "                ", "ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ")[", "1", "]", "\n", "                ", "if", " ext", ":", "\n", "                ", "    ", "summary", ".", "set", "default", "("], "logprobs": [-0.8680583834648132, -1.1121305227279663, -1.4780001640319824, -0.13691186904907227, -2.6124701499938965, -0.4009506404399872, -0.3124578893184662, -0.21803897619247437, -0.002203538315370679, -0.01109820231795311, -0.0031395689584314823, -0.13333959877490997, -0.0017365626990795135, -0.02504236437380314, -0.012116520665585995, -0.0376107431948185, -0.5808195471763611, -0.027829786762595177, -0.892107367515564, -2.825220326485578e-05, -0.0004970983718521893, -1.2993727978027891e-05, -0.003377568442374468, -0.0011836434714496136, -0.0037108862306922674, -0.00038246947224251926, -4.768370445162873e-07, -0.00036161558819003403, -1.1323039531707764, -0.02429184876382351, -0.0026983539573848248, -0.0002379134384682402, -0.0018297373317182064, -0.6329662203788757, -0.5887374877929688, -2.2649508537142538e-05, -0.03210164234042168, -0.00039843725971877575, -2.9802276912960224e-06, -1.8715683836489916e-05, -0.0030513890087604523, -1.823885577323381e-05, -9.894321920000948e-06, -0.012265374884009361, -0.00014447122521232814, -2.264974000354414e-06, -8.344646857949556e-07, -0.003888665698468685, -0.00037293630884960294, -6.258291978156194e-05, -0.13804839551448822, -0.0206155888736248, -0.00030870441696606576, -0.026976704597473145, -0.9446552395820618, -0.000557267339900136, -0.6021293997764587, -3.400355815887451, -0.07793161273002625, -0.11959633976221085, -0.08130783587694168, -0.017290567979216576, -0.06427590548992157, -9.48860906646587e-05, -0.005978202912956476, -0.5189066529273987, -0.9506450295448303, -0.007020211778581142, -5.483612312673358e-06, -0.005860882345587015, 0.0, -7.64102369430475e-05, -0.00021038226259406656, -1.2397689715726301e-05, -1.1920922133867862e-06, -0.00048315772437490523, -0.00021443451987579465, -0.007363796699792147, -1.5618062019348145, -0.25732311606407166, -5.722029527532868e-06, -1.07287787614041e-05, -9.536738616588991e-07, -0.00040725519647821784, -0.03890758752822876, -0.00017975145601667464, -0.0067904191091656685, -1.7881377516459906e-06, -8.4638240878121e-06, -7.152555099310121e-07, -1.3112935448589269e-05, -8.702239938429557e-06, -6.41325386823155e-05, -5.793403761344962e-05, -1.1920928244535389e-07, -2.992108420585282e-05, -0.0005237876321189106, -1.9430925021879375e-05, -0.014010997489094734, -0.0037735935766249895, -0.00849207304418087, -0.16461831331253052, -0.33401015400886536, -0.44084423780441284, -3.420872211456299, -0.15399716794490814, -0.008106071501970291, -0.7489750981330872, -0.5353623032569885, -0.03164542093873024, -1.6184002161026, -0.04830271750688553, -0.00015066919149830937, -3.146341323852539, -0.0008531744824722409, -0.004009186290204525, -1.9088561534881592, -0.5741186738014221, -0.04966609179973602, -0.9538128972053528, -0.007358944974839687, -0.10266280919313431, -2.0265558760002023e-06, -2.9802276912960224e-06, -1.7881377516459906e-06, -8.4638240878121e-06, -2.3841855067985307e-07, -0.0006735440110787749, -3.266281055402942e-05, -3.0636318115284666e-05, -0.0066926134750247, -0.007840926758944988, -0.001519954763352871, -1.3500958681106567, -0.2042224407196045, -0.07292000949382782, -1.7881377516459906e-06, -1.168244216387393e-05, -0.010542533360421658, -0.0013972291490063071, -0.0005517867393791676, -0.5690692663192749, -0.0962396040558815, -0.34327149391174316, -0.011586516164243221, -1.377197265625, -0.03679296746850014, -3.1234123706817627, -0.6002072691917419, -0.2539929747581482, -0.10398772358894348, -0.01172802783548832, -0.05487598478794098, -9.023735765367746e-05, -0.10760647803544998, -2.145764938177308e-06, -5.960462772236497e-07, -0.0001399419124936685, -5.066266385256313e-05, -0.4934583008289337, -2.3603161025675945e-05, -0.0014729375252500176, -0.0016299308044835925, -8.344646857949556e-07, -3.099436753473128e-06, -1.6689286894688848e-06, -6.198863957251888e-06, -7.152531907195225e-06, -0.0003146630187984556, -8.34461570775602e-06, -1.311301275563892e-06, -1.0251946150674485e-05, -0.0002910667099058628, -5.829164365422912e-05, -3.075552376685664e-05, -0.7040762901306152, -7.033323527139146e-06, -9.202533692587167e-05, -0.009245912544429302, -7.152555099310121e-07, -8.344646857949556e-07, -1.0728830375228426e-06, -1.4305012882687151e-05, -2.9682672902708873e-05, -0.009777157567441463, -5.8412379075889476e-06, -2.5152843591058627e-05, -0.0001567479339428246, -0.0022952421568334103, -0.007093957159668207, -0.02390456758439541, -0.00029559535323642194, -3.2782016205601394e-05, -0.001978941261768341, -0.0002681849291548133, -0.14428576827049255, -0.1899040937423706, -0.7975563406944275, -0.0011299422476440668, -2.9802276912960224e-06, -0.0044563510455191135, -0.0029037713538855314, -0.0015476880362257361, -0.00017033556650858372, -5.400034933700226e-05, -0.003002661047503352, -0.0004611144249793142, -4.887569048150908e-06, -0.014542068354785442, -2.04341197013855, -0.008428242057561874, -4.6491513785440475e-06, -0.0005301024066284299, -0.0002240883477497846, -0.06488608568906784, -2.386046886444092, -0.0015393561916425824, -1.019275188446045, -0.21346667408943176, -0.3963364064693451, -1.8656483888626099, -1.6943483352661133, -0.030283721163868904, -0.7374274730682373, -2.73819637298584, -0.29220667481422424, -2.3709628582000732, -0.041971541941165924, -3.361645576660521e-05, -0.9877836108207703, -0.0007102350937202573, -0.066408671438694, -6.437280717364047e-06, -8.821448318485636e-06, -7.152555099310121e-07, -1.6927575416048057e-05, 0.0, 0.0, -1.9907753085135482e-05, -0.0008499585674144328, -0.1266487091779709, -0.0010209829779341817, -0.29435208439826965, -0.8539886474609375, -0.0008261366747319698, -0.01095188595354557, -0.007018673233687878, -0.09071552008390427, -0.0007425173535011709, -1.6093124941107817e-05, -7.438383181579411e-05, -0.05167003720998764, -0.029258275404572487, -5.722029527532868e-06, -2.7418097943154862e-06, -0.00015805903240107], "finish_reason": "length"}], "metrics": {"energy": 926.9577329645156, "energy_per_token": 3.620928644392639, "time": 21.846855, "time_per_token": 0.08533927734375}}
{"outputs": [{"text": "# Check if the directory path exists\n    if not os.path.isdir(directory_path):\n        print(\"Invalid directory path.\")\n        return\n\n    # Create a summary dictionary\n    summary = {}\n\n    # Get all the files in the directory\n    for file in os.listdir(directory_path):\n        # Check if the file path is valid\n        if os.path.isfile(os.path.join(directory_path, file)):\n            # Check if the file contains invalid characters\n            if any(c in INVALID_CHARACTERS for c in file):\n                invalid_directory = os.path.join(directory_path, \"Invalid\")\n                # Create the invalid directory if it doesn't exist\n                if not os.path.isdir(invalid_directory):\n                    os.mkdir(invalid_directory)\n                # Move the file to the invalid directory\n                shutil.move(\n                    os.path.join(directory_path, file), invalid_directory\n                )\n                if \"Invalid\" not in summary:\n                    summary[\"Invalid\"] = 0", "tokens": ["#", " Check", " if", " the", " directory", " path", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "print", "(", "\"", "Invalid", " directory", " path", ".", "\"", ")", "\n", "        ", "return", "\n", "\n", "    ", "#", " Create", " a", " summary", " dictionary", "\n", "    ", "summary", " =", " {}", "\n", "\n", "    ", "#", " Get", " all", " the", " files", " in", " the", " directory", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "#", " Check", " if", " the", " file", " path", " is", " valid", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " file", "))", ":", "\n", "            ", "#", " Check", " if", " the", " file", " contains", " invalid", " characters", "\n", "            ", "if", " any", "(", "c", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", " for", " c", " in", " file", "):", "\n", "                ", "invalid", "_", "directory", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " \"", "Invalid", "\"", ")", "\n", "                ", "#", " Create", " the", " invalid", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "                ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "invalid", "_", "directory", "):", "\n", "                ", "    ", "os", ".", "mk", "dir", "(", "invalid", "_", "directory", ")", "\n", "                ", "#", " Move", " the", " file", " to", " the", " invalid", " directory", "\n", "                ", "sh", "util", ".", "move", "(", "\n", "                ", "    ", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " file", ")", ",", " invalid", "_", "directory", "\n", "                ", ")", "\n", "                ", "if", " \"", "Invalid", "\"", " not", " in", " summary", ":", "\n", "                ", "    ", "summary", "[", "\"", "Invalid", "\"", "]", " =", " ", "0"], "logprobs": [-0.8680583834648132, -2.487025737762451, -0.30461764335632324, -0.3826649785041809, -0.14327996969223022, -1.5423442125320435, -0.8199597597122192, -0.09654174000024796, -0.0008892634068615735, -0.010458661243319511, -0.02538422867655754, -0.0056602200493216515, -2.5033637939486653e-05, -0.00022909401741344482, -1.4662635294371285e-05, -1.6716837882995605, -0.00016080040950328112, -0.00012373158824630082, -0.00039545822073705494, -6.663577369181439e-05, 0.0, -0.0005229535745456815, -0.00021419614495243877, -0.0011535187950357795, -0.950863242149353, -0.020539797842502594, -0.6104283332824707, -1.3201937675476074, -0.005314389709383249, -0.03882055729627609, -0.3472706973552704, -0.08861678838729858, -0.00023898606013972312, -0.000266278104390949, -0.005089778918772936, -0.01587185636162758, -1.1341416835784912, -0.030607497319579124, -0.0006521005416288972, -0.1369953453540802, -0.6824614405632019, -1.1777697801589966, -1.6844879388809204, -0.029075803235173225, -0.7288033366203308, -0.00014518637908622622, -0.003704472677782178, -0.0010831448016688228, -0.06189052388072014, -0.0007819455349817872, -0.033032603561878204, -0.00020656836568377912, -0.011585456319153309, -2.9703378677368164, -1.7338097095489502, -1.3128290176391602, -0.43880870938301086, -0.034942928701639175, -0.0007771808886900544, -0.02164456434547901, -0.08485943078994751, -6.687417771900073e-05, -2.242929458618164, -0.6463771462440491, -0.9101529121398926, -0.0030440206173807383, -4.291525328881107e-06, -0.005841446109116077, 0.0, -8.105902816168964e-05, -0.00015209948469419032, -1.3351351299206726e-05, 0.0, -8.868777513271198e-05, -0.00014685506175737828, -0.01075059175491333, -0.1922902911901474, -0.6759521961212158, -0.01841507852077484, -0.03721296414732933, -0.06660230457782745, -3.6282191276550293, -0.07051152735948563, -1.261704921722412, -0.16875718533992767, -0.00019762947340495884, -0.1780618280172348, -0.8487609624862671, -2.062299427052494e-05, -0.0012669878778979182, -5.125986263010418e-06, -0.0439138300716877, -0.07123714685440063, -0.0005918181850574911, -0.11642524600028992, -1.4424220353248529e-05, -1.5616295058862306e-05, 0.0, -0.00032014489988796413, -5.1377883210079744e-05, -0.00012003655137959868, -6.437280717364047e-06, -4.768370445162873e-07, -6.890059739816934e-05, -0.0010765953920781612, -0.0002699726028367877, -0.027625832706689835, -0.00028796817059628665, -0.004375289659947157, -0.0421009324491024, -0.5498653054237366, -0.05411354824900627, -0.06749390810728073, -0.032475605607032776, -2.1427900791168213, -0.1781531125307083, -0.0005544078885577619, -0.1160627156496048, -0.00010835537250386551, -0.08754900842905045, -0.15220734477043152, -0.01543493289500475, -1.1548861265182495, -0.0028169972356408834, -0.09845508635044098, -1.9073468138230965e-06, -1.311301275563892e-06, -8.344646857949556e-07, -4.768360213347478e-06, -2.3841855067985307e-07, -0.0005986090400256217, -2.6940935640595853e-05, -8.940656698541716e-06, -0.013054264709353447, -0.012086251750588417, -0.00013052565918769687, -0.0010970771545544267, -3.007429838180542, -0.0012024560710415244, -1.3000011444091797, -0.06275208294391632, -0.04187677428126335, -2.622600959512056e-06, -1.549708758830093e-05, -4.529942543740617e-06, -0.001370206126011908, -0.00021300431399140507, -0.005653937812894583, -1.2636104656849056e-05, -1.6689286894688848e-06, -0.0001551984460093081, -0.39049094915390015, -0.012512397021055222, -0.0017764277290552855, -0.00012957210128661245, -0.0007932615117169917, -0.10264720767736435, -0.6823380589485168, -0.11587598919868469, -0.18809103965759277, -1.5823719501495361, -0.004747310187667608, -0.00640281243249774, -0.008537697605788708, -0.0733208954334259, -0.0002177716523874551, -1.0967194612021558e-05, -0.002818542532622814, -0.006284830626100302, -3.3378044463461265e-05, -0.027306193485856056, -0.000506511190906167, -3.862306402879767e-05, -1.1920928244535389e-07, -1.4066597032069694e-05, -6.6756979322235566e-06, -0.5930519104003906, -8.344646857949556e-07, -1.645074735279195e-05, -0.00020287363440729678, -4.768370445162873e-07, -1.4305104514278355e-06, -7.211902266135439e-05, -2.90866428258596e-05, -2.634490556374658e-05, -0.00036376056959852576, -0.009408303536474705, -1.1920928244535389e-07, -0.5014521479606628, -5.006777428206988e-06, -3.421248038648628e-05, -7.998623186722398e-05, -2.622600959512056e-06, -4.768370445162873e-07, -3.1470757676288486e-05, -1.728519782773219e-05, -0.044473614543676376, -0.3331175744533539, -0.00745278038084507, -0.0032768147066235542, -0.013882271014153957, -0.004773174412548542, -0.002849211450666189, -0.029599744826555252, -0.0007875440060161054, -0.041752271354198456, -3.218599158572033e-05, -0.01607998088002205, -4.768370445162873e-07, -4.768370445162873e-07, -5.340433563105762e-05, -3.755022044060752e-05, -0.8382290601730347, -6.282132380874828e-05, -0.0017450118903070688, -0.0006211258587427437, -8.344646857949556e-07, -2.0265558760002023e-06, -3.4570634852570947e-06, -6.794906312279636e-06, -7.510157047363464e-06, -0.0002343380037928, -3.576272320060525e-06, 0.0, -5.960446742392378e-06, -0.00010513706365600228, -5.173549288883805e-05, -2.2291887944447808e-05, -0.7952183485031128, -1.1920928244535389e-07, -1.7881377516459906e-06, -1.2893192768096924, -0.00015960850578267127, -0.002978414995595813, -0.0012148389359936118, -0.05735884979367256, -3.124927043914795, -0.012589976191520691, -0.0014104428701102734, -8.40390202938579e-05, -0.1883552223443985, -7.152555099310121e-07, -2.372236667724792e-05, -0.01652400940656662, -0.00027569307712838054, -2.7179348762729205e-05, -0.00021824838768225163, -0.0008025524439290166, -0.0001573438785271719, -0.00027450130437500775, -9.369411418447271e-05, -1.537788011773955e-05, -3.85038583772257e-05, -4.291525328881107e-06, -0.0002097863471135497, -0.7758926749229431], "finish_reason": "length"}], "metrics": {"energy": 897.7950294189454, "energy_per_token": 3.5070118336677556, "time": 22.065153, "time_per_token": 0.08619200390625}}
{"outputs": [{"text": "# Check if the directory exists and is accessible\n    if not os.path.isdir(directory_path):\n        raise ValueError(f\"Directory not found or not accessible: {directory_path}\")\n\n    # Create the \"Invalid\" directory if it doesn't exist\n    invalid_dir = os.path.join(directory_path, \"Invalid\")\n    if not os.path.isdir(invalid_dir):\n        os.makedirs(invalid_dir)\n\n    # Initialize counts for each ending\n    summary = {ending: 0 for ending in set(os.path.splitext(filename)[1][1:] for filename in os.listdir(directory_path)) if ending}\n\n    # Iterate over the files in the directory\n    for filename in os.listdir(directory_path):\n        filepath = os.path.join(directory_path, filename)\n\n        # Skip directories\n        if not os.path.isfile(filepath):\n            continue\n\n        # Get the base name of the file (without the extension)\n        basename = os.path.splitext(filename", "tokens": ["#", " Check", " if", " the", " directory", " exists", " and", " is", " accessible", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "raise", " Value", "Error", "(", "f", "\"", "Directory", " not", " found", " or", " not", " accessible", ":", " {", "directory", "_", "path", "}\"", ")", "\n", "\n", "    ", "#", " Create", " the", " \"", "Invalid", "\"", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "invalid", "_", "dir", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " \"", "Invalid", "\"", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "is", "dir", "(", "invalid", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "invalid", "_", "dir", ")", "\n", "\n", "    ", "#", " Initialize", " counts", " for", " each", " ending", "\n", "    ", "summary", " =", " {", "ending", ":", " ", "0", " for", " ending", " in", " set", "(", "os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")[", "1", "][", "1", ":]", " for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "))", " if", " ending", "}", "\n", "\n", "    ", "#", " Iter", "ate", " over", " the", " files", " in", " the", " directory", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", "\n", "\n", "        ", "#", " Skip", " directories", "\n", "        ", "if", " not", " os", ".", "path", ".", "is", "file", "(", "file", "path", "):", "\n", "            ", "continue", "\n", "\n", "        ", "#", " Get", " the", " base", " name", " of", " the", " file", " (", "without", " the", " extension", ")", "\n", "        ", "bas", "ename", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename"], "logprobs": [-0.8680583834648132, -2.487025737762451, -0.30461764335632324, -0.3826649785041809, -0.14327996969223022, -0.37959399819374084, -2.8277523517608643, -0.3540654480457306, -2.402186155319214, -0.10778608918190002, -0.0015788720920681953, -0.06346321105957031, -0.049563657492399216, -0.016544530168175697, -4.386805812828243e-05, -0.36080995202064514, -2.0503786799963564e-05, -0.8353778719902039, -0.0003861635341309011, -0.0001892864383989945, -0.0004898302140645683, -0.00015627116954419762, 0.0, -0.10792404413223267, -0.0002803409588523209, -0.0010027624666690826, -0.4489530026912689, -0.5161546468734741, -1.1086402082582936e-05, -0.06045451760292053, -1.357795000076294, -0.03194993734359741, -0.6988678574562073, -2.495340347290039, -0.005774957127869129, -1.2648134231567383, -0.3470986783504486, -0.014237727038562298, -0.1516972780227661, -0.006273102946579456, -0.00019405389321036637, -1.8954096958623268e-05, -7.033323527139146e-06, -0.004708749707788229, -8.976056415122002e-05, -0.0003393312799744308, -0.030843673273921013, -0.0006507901125587523, -0.29829442501068115, -1.0531485080718994, -0.7534287571907043, -0.4215480089187622, -0.02113872952759266, -0.0013427060330286622, -0.027794193476438522, -0.09243746846914291, -0.010380562394857407, -0.04756094142794609, -0.0001357701694360003, -3.1470757676288486e-05, -0.008066694252192974, -0.056155040860176086, -7.462222856702283e-05, -0.07723180204629898, -0.00014852374442853034, -0.5052193403244019, -0.11766328662633896, -0.01532928179949522, -1.6689286894688848e-06, -6.794906312279636e-06, -2.0265558760002023e-06, -0.0008585343020968139, -5.328513361746445e-05, -0.000608854868914932, -8.34461570775602e-06, 0.0, -9.989239333663136e-05, -0.1656472384929657, -0.007197404280304909, -0.0014725804794579744, -0.00012158608296886086, -0.0007818264421075583, -0.004212910309433937, -0.5714911818504333, -0.0013672299683094025, -5.1377883210079744e-05, -2.622600959512056e-06, -2.8132995794294402e-05, 0.0, -1.1866366863250732, -4.768370445162873e-07, -6.318072337307967e-06, -7.843663479434326e-05, -8.344646857949556e-07, -8.344646857949556e-07, -0.0007264359155669808, -0.00025519452174194157, -0.00027176024741493165, -0.010924884118139744, -2.3841855067985307e-07, -0.7374873161315918, -6.079655122448457e-06, -1.0728830375228426e-06, -1.0132738680113107e-05, -8.34430247778073e-05, -8.344646857949556e-07, -1.1920928244535389e-07, -0.015078023076057434, -0.0012991330586373806, -0.012710158713161945, -0.0002562671434134245, -0.3351750671863556, -0.38837534189224243, -3.5278048515319824, -0.1702319234609604, -0.19547714293003082, -2.755176305770874, -0.553613543510437, -9.42901024245657e-05, -1.0275766849517822, -0.0021048076450824738, -2.6324450969696045, -0.33723095059394836, -0.048428453505039215, -0.002497650682926178, -0.0001370812824461609, -0.00023934361524879932, -0.0022205475252121687, -0.002348286332562566, -2.332740306854248, -1.274205207824707, -0.47351622581481934, -3.4570634852570947e-06, -0.009857782162725925, -1.2636104656849056e-05, -0.00045265440712682903, -4.6491513785440475e-06, 0.0, -0.0005665604257956147, -2.755922794342041, -0.04893872141838074, -0.0009243983076885343, -0.8069500923156738, -0.0001823735801735893, -0.00012170527770649642, -0.20006021857261658, -0.00041929035796783864, -9.238292841473594e-05, -0.001010741456411779, -8.344646857949556e-07, -1.7165990357170813e-05, 0.0, -6.758938252460212e-05, -0.0005200940649956465, -5.3165931603871286e-05, -3.576278118089249e-07, -0.3415411710739136, -0.641208291053772, -0.028708787634968758, -0.1168588176369667, -0.06212782859802246, -0.3983863294124603, -0.00011789103882620111, -0.0870012417435646, -1.3699133396148682, -0.0003135904553346336, -0.697303831577301, -1.2001051902770996, -0.02442040666937828, -0.09799206256866455, -0.0018241447396576405, -0.003921083174645901, -0.026122543960809708, -5.1377883210079744e-05, -0.006118732504546642, -0.011197463609278202, -0.0001012035645544529, -0.0009610801353119314, -2.3841855067985307e-07, -8.583032467868179e-06, 0.0, -6.556489552167477e-06, -2.5510462364763953e-05, -7.867782187531702e-06, 0.0, -6.186770770000294e-05, -0.00017998983094003052, -0.001923617091961205, -0.9555574655532837, -0.7779492735862732, -0.00024768622824922204, -0.00011276562872808427, 0.0, -2.264974000354414e-06, -1.1920928244535389e-07, -0.00011288482346571982, -2.0265558760002023e-06, -3.0040289857424796e-05, -3.576272320060525e-06, 0.0, -3.933898824470816e-06, -1.4424220353248529e-05, -1.2993727978027891e-05, -0.0010486110113561153, -0.35653451085090637, -0.00018773700867313892, -0.11857893317937851, -0.7392701506614685, -0.12229674309492111, -0.3418044149875641, -1.1444026313256472e-05, -5.793403761344962e-05, -2.1146469116210938, -0.0005657264264300466, -2.3841855067985307e-07, -9.536738616588991e-07, 0.0, -3.2186455882765586e-06, -0.0006453100359067321, -1.2874520507466514e-05, -0.0001494772732257843, -3.576278118089249e-07, -0.01510326936841011, -0.0003768687602132559, -9.321732068201527e-05, -0.0010344398906454444, -0.00010954733443213627, -0.0010203876299783587, -0.0004135706985834986, -0.132297545671463, -1.9449381828308105, -0.0783069059252739, -3.4769275188446045, -0.3730337917804718, -2.5375308990478516, -0.0017387047410011292, -0.0026985916774719954, -2.512660503387451, -0.052930474281311035, -0.6054820418357849, -2.322889566421509, -0.029116328805685043, -0.18265214562416077, -0.00010930894495686516, -0.3651955723762512, -2.145764938177308e-06, -0.23469217121601105, -0.014664600603282452, -8.344646857949556e-07, -5.960462772236497e-07, 0.0, -0.16341805458068848, 0.0, -1.1920928244535389e-07, -7.033323527139146e-06, -0.016737978905439377], "finish_reason": "length"}], "metrics": {"energy": 945.8600826740269, "energy_per_token": 3.6947659479454176, "time": 22.056139, "time_per_token": 0.08615679296875}}
{"outputs": [{"text": "# Create a dictionary to count files moved to each directory\n    summary = {}\n\n    # Loop through all files in the directory\n    for filename in os.listdir(directory_path):\n        # Check if the filename contains invalid characters\n        if any(c in INVALID_CHARACTERS for c in filename):\n            # Move the file to the \"Invalid\" directory and update the summary\n            if 'Invalid' not in summary:\n                summary['Invalid'] = 0\n            summary['Invalid'] += 1\n            shutil.move(os.path.join(directory_path, filename), os.path.join(directory_path, 'Invalid'))\n        else:\n            # Get the ending of the filename\n            ending = os.path.splitext(filename)[-1][1:]\n\n            # Move the file to the corresponding directory and update the summary\n            if ending not in summary:\n                summary[ending] = 0\n            summary[ending] += 1\n            shutil.move(os.path.join(directory_path, filename), os.path.join(directory_path, ending))\n\n    return summary", "tokens": ["#", " Create", " a", " dictionary", " to", " count", " files", " moved", " to", " each", " directory", "\n", "    ", "summary", " =", " {}", "\n", "\n", "    ", "#", " Loop", " through", " all", " files", " in", " the", " directory", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "#", " Check", " if", " the", " filename", " contains", " invalid", " characters", "\n", "        ", "if", " any", "(", "c", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", " for", " c", " in", " filename", "):", "\n", "            ", "#", " Move", " the", " file", " to", " the", " \"", "Invalid", "\"", " directory", " and", " update", " the", " summary", "\n", "            ", "if", " '", "Invalid", "'", " not", " in", " summary", ":", "\n", "                ", "summary", "['", "Invalid", "']", " =", " ", "0", "\n", "            ", "summary", "['", "Invalid", "']", " +=", " ", "1", "\n", "            ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", ",", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " '", "Invalid", "'))", "\n", "        ", "else", ":", "\n", "            ", "#", " Get", " the", " ending", " of", " the", " filename", "\n", "            ", "ending", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")", "[-", "1", "][", "1", ":]", "\n", "\n", "            ", "#", " Move", " the", " file", " to", " the", " corresponding", " directory", " and", " update", " the", " summary", "\n", "            ", "if", " ending", " not", " in", " summary", ":", "\n", "                ", "summary", "[", "ending", "]", " =", " ", "0", "\n", "            ", "summary", "[", "ending", "]", " +=", " ", "1", "\n", "            ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", ",", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " ending", "))", "\n", "\n", "    ", "return", " summary"], "logprobs": [-0.8680583834648132, -1.34231698513031, -1.2660026550292969, -1.270926833152771, -0.09214484691619873, -1.8145534992218018, -1.4446799755096436, -0.4672054648399353, -0.031435079872608185, -0.0035209585912525654, -0.027446076273918152, -0.03763163834810257, -0.0006872437661513686, -0.1741955578327179, -0.0040730624459683895, -0.08696398138999939, -0.0012318650260567665, -0.19509881734848022, -0.00045813556062057614, -0.04224424436688423, -2.319035291671753, -0.12092215567827225, -0.5707764625549316, -0.1381596028804779, -0.19172556698322296, -0.03298335522413254, -0.07635822892189026, -0.0867995023727417, -0.00015400654228869826, -0.017718717455863953, -0.762902557849884, -0.00025614796322770417, -0.006404115352779627, -1.6093124941107817e-05, -0.004683239851146936, -1.1920928244535389e-07, -0.00020072828920092434, -0.0005797850899398327, -0.00021002470748499036, -2.3841855067985307e-07, -0.00018594920402392745, -0.000539634027518332, -0.032763488590717316, -0.3442927598953247, -0.7506693601608276, -0.029465600848197937, -0.1609940379858017, -1.3863478899002075, -0.34232449531555176, -0.534123420715332, -0.00054058717796579, -0.02524254471063614, -0.0002892790944315493, -0.07452625036239624, -0.08600261807441711, -0.02067093923687935, -0.8221238255500793, -0.0015811334596946836, -0.05949224904179573, -3.2186455882765586e-06, -1.1920922133867862e-06, -1.1920922133867862e-06, -5.364403477869928e-06, -2.3841830625315197e-06, -0.0008056493825279176, -2.455681169521995e-05, -7.867782187531702e-06, -0.0006635371246375144, -0.013044381514191628, -0.0002681849291548133, -0.0022586092818528414, -0.22268205881118774, -0.4570615291595459, -0.5779572129249573, -0.010296794585883617, -0.008121088147163391, -0.29303422570228577, -0.2162102907896042, -0.009601720608770847, -0.0007489498239010572, -0.0321694053709507, -2.8399763107299805, -0.5944388508796692, -0.11778483539819717, -0.19505900144577026, -0.2097989320755005, -0.00033384948619641364, -3.241560459136963, -0.9283473491668701, -0.0009864469757303596, -0.00015507926582358778, -0.02374393120408058, -1.0371154530730564e-05, -0.0010519453790038824, -0.014214457012712955, -0.006717953830957413, -0.0006802152493037283, -0.08440124243497849, -0.0006127863889560103, -5.98412734689191e-05, -1.168244216387393e-05, -0.00015293381875380874, -0.0010334871476516128, -0.22060604393482208, -0.000916418619453907, -0.08581335842609406, -0.46711018681526184, -0.000377583724912256, -2.777537883957848e-05, -3.2186455882765586e-06, -0.0010221739066764712, -0.010870760306715965, -4.1960789531003684e-05, -0.0006703275139443576, -0.2093716561794281, -0.3745083212852478, -2.7418097943154862e-06, -3.099436753473128e-06, -0.0002658013836480677, -0.0003090619284193963, -0.09198220074176788, -3.0517112463712692e-05, -5.98412734689191e-05, -1.9311717551317997e-05, -3.2305197237292305e-05, -6.09140915912576e-05, -0.0009673921740613878, -4.255681051290594e-05, -5.483612312673358e-06, -4.994744449504651e-05, -0.0007060657371766865, -0.00020382710499688983, -0.0001995364436879754, -0.05031970888376236, -5.722029527532868e-06, -2.074220174108632e-05, -4.6491513785440475e-06, -6.723177648382261e-05, -0.0069626797921955585, -0.008508975617587566, -2.0503786799963564e-05, -4.529942543740617e-06, -0.0016991952434182167, -0.047211337834596634, -0.004360097460448742, -0.5967366099357605, -0.002302735112607479, -0.11484288424253464, -0.03849805146455765, -3.528532761265524e-05, -0.0010890988633036613, -0.001415918697603047, -0.02223840542137623, -0.653774619102478, -0.003275745315477252, -2.1226730346679688, -0.03278898447751999, -0.002421425189822912, -1.1187257766723633, -0.3684483766555786, -8.332382276421413e-05, -0.11771797388792038, -0.0004959068610332906, -1.313281774520874, -2.145764938177308e-06, -0.00011216964776394889, -2.3841855067985307e-07, -0.00027855331427417696, -4.768370445162873e-07, 0.0, -1.7881233361549675e-05, -0.00046492734691128135, -2.8892977237701416, -0.0037241880781948566, -3.969590397900902e-05, -0.6539015173912048, -0.00013767725613433868, -0.0005293875001370907, -0.18229924142360687, -1.3117365837097168, -0.000797192333266139, -0.001829380402341485, -1.2522151470184326, -0.0016612313920632005, -0.000285584683297202, -0.0015974391717463732, -0.4622303545475006, -1.4365369081497192, -0.026010697707533836, -0.09872005134820938, -0.0018046298064291477, -0.0002747396647464484, -0.0007425173535011709, -0.0017379907658323646, -0.000276765669696033, -0.05925566703081131, -0.016992805525660515, -0.012423627078533173, -8.344646857949556e-07, -0.0004379982128739357, -0.0005737089086323977, -3.814624506048858e-05, -0.0004751745145767927, -0.07136313617229462, -0.00012563870404846966, -6.174850568640977e-05, -0.0001902399235405028, -1.4662635294371285e-05, -0.00040665941196493804, -0.008665813133120537, -0.0005113962688483298, -0.01516655832529068, -0.02067561075091362, -3.135155202471651e-05, -9.298280929215252e-06, -0.0001510267611593008, -5.5549986427649856e-05, -0.00011383838864276186, -3.4570634852570947e-06, -0.0005620330339297652, -0.013903902843594551, -0.14416223764419556, -4.768370445162873e-07, -3.933898824470816e-06, -2.9682672902708873e-05, -2.2411095415009186e-05, -0.001279131742194295, -4.768360213347478e-06, -3.6954811548639555e-06, -2.0265558760002023e-06, -3.814689989667386e-06, -1.1086402082582936e-05, -1.7523612768854946e-05, -1.4066597032069694e-05, -2.3841830625315197e-06, -3.0040289857424796e-05, -2.9205850296420977e-05, -4.386805812828243e-05, -2.288792165927589e-05, -0.0010476582683622837, -1.7881377516459906e-06, -2.50339189733495e-06, -1.311301275563892e-06, -6.6756979322235566e-06, -3.6238969187252223e-05, -0.00024768622824922204, -7.390948667307384e-06, -7.152555099310121e-07, -0.00016008525562938303, -0.0033908747136592865, -0.025994669646024704, -0.0029145879670977592, -0.019970187917351723, -0.003013595240190625, -0.39608052372932434, -0.0005212855176068842], "finish_reason": "length"}], "metrics": {"energy": 926.8502277545924, "energy_per_token": 3.6205087021663767, "time": 21.841682, "time_per_token": 0.0853190703125}}
{"outputs": [{"text": "summary = {}\n    invalid_directory = directory_path + \"/Invalid\"\n    if not os.path.exists(invalid_directory):\n        os.makedirs(invalid_directory)\n\n    for root, dirs, files in os.walk(directory_path):\n        for file in files:\n            filename, extension = os.path.splitext(file)\n            extension = extension.lstrip(\".\")\n\n            if any(char in INVALID_CHARACTERS for char in filename):\n                shutil.move(os.path.join(root, file), os.path.join(invalid_directory, file))\n                if \"Invalid\" not in summary:\n                    summary[\"Invalid\"] = 1\n                else:\n                    summary[\"Invalid\"] += 1\n            elif extension not in summary:\n                summary[extension] = 1\n            else:\n                summary[extension] += 1\n\n    return summary", "tokens": ["summary", " =", " {}", "\n", "    ", "invalid", "_", "directory", " =", " directory", "_", "path", " +", " \"/", "Invalid", "\"", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "invalid", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "invalid", "_", "directory", ")", "\n", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "_", "path", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "filename", ",", " extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ")", "\n", "            ", "extension", " =", " extension", ".", "lst", "rip", "(", "\"", ".", "\"", ")", "\n", "\n", "            ", "if", " any", "(", "char", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", " for", " char", " in", " filename", "):", "\n", "                ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "root", ",", " file", ")", ",", " os", ".", "path", ".", "join", "(", "invalid", "_", "directory", ",", " file", "))", "\n", "                ", "if", " \"", "Invalid", "\"", " not", " in", " summary", ":", "\n", "                ", "    ", "summary", "[", "\"", "Invalid", "\"", "]", " =", " ", "1", "\n", "                ", "else", ":", "\n", "                ", "    ", "summary", "[", "\"", "Invalid", "\"", "]", " +=", " ", "1", "\n", "            ", "elif", " extension", " not", " in", " summary", ":", "\n", "                ", "summary", "[", "extension", "]", " =", " ", "1", "\n", "            ", "else", ":", "\n", "                ", "summary", "[", "extension", "]", " +=", " ", "1", "\n", "\n", "    ", "return", " summary", "\n", "\n", "if"], "logprobs": [-0.9261104464530945, -0.003763380227610469, -0.09414701908826828, -0.10688643157482147, -0.3570042848587036, -0.42816224694252014, -0.041889119893312454, -1.072547197341919, -0.09083527326583862, -1.1344640254974365, -0.0005808573332615197, -2.9205850296420977e-05, -0.24273258447647095, -0.9218192100524902, -0.025534259155392647, -0.07619685679674149, -0.027550803497433662, -0.3496248126029968, -1.6527553796768188, -0.033148739486932755, -0.0023569681216031313, -5.411955135059543e-05, -0.0013380631571635604, -2.288792165927589e-05, -0.10005871951580048, -7.676783570786938e-05, -0.0172995887696743, -2.0265558760002023e-06, -1.311301275563892e-06, -0.0012373419012874365, -0.010475530289113522, -0.0038149214815348387, -0.015618621371686459, -3.71926071238704e-05, -0.6181511282920837, -0.005334191955626011, -3.576278118089249e-07, -5.9126061387360096e-05, -0.000586695212405175, -8.344646857949556e-07, -4.291525328881107e-06, -0.002842911286279559, -0.023199789226055145, -0.5917975902557373, -0.001611721352674067, -0.15053986012935638, -2.49112606048584, -0.0015232876176014543, -0.2673202157020569, -8.606540359323844e-05, -0.00010871296399272978, -0.010203579440712929, -0.00035529976594261825, -0.00027640812913887203, -2.1934269170742482e-05, -1.7165990357170813e-05, -0.00015484087634831667, -0.0012979424791410565, -6.925819616299123e-05, -1.0728830375228426e-06, -0.04464714229106903, -0.0021305023692548275, -0.002965697320178151, -0.027577940374612808, -0.211509108543396, -0.21501553058624268, -0.0007764662150293589, -0.00022027450904715806, -0.00019476900342851877, -0.002614653203636408, -2.059445858001709, -0.6229450702667236, -0.5797458291053772, -0.0001820160250645131, -0.001791778369806707, 0.0, -2.4318398573086597e-05, -4.768370445162873e-07, -5.6622808187967166e-05, -3.4689302992774174e-05, -3.8980677345534787e-05, -0.00012957210128661245, -0.0062612565234303474, -0.0005071069463156164, -0.004501566756516695, -0.18606896698474884, -0.6520175337791443, -0.004304192494601011, -0.0002548369811847806, -1.0460569858551025, -1.2931560277938843, -0.00015639036428183317, -0.643354594707489, -0.0038165838923305273, -0.0005440423847176135, -0.00015948931104503572, -0.00010394509445177391, -0.3953890800476074, -0.32326382398605347, -0.0008454324561171234, -0.4383664131164551, -0.49186229705810547, -0.015610522590577602, -0.3831963539123535, -0.0060850828886032104, -0.010879131965339184, -1.311301275563892e-06, -1.4305104514278355e-06, -8.34461570775602e-06, -9.417489309271332e-06, -1.4305104514278355e-06, -0.0008829509024508297, -1.0013530300057027e-05, -4.410646579344757e-05, -0.0807158499956131, -0.023630771785974503, -0.0006123098428361118, -0.0010191967012360692, -0.6535929441452026, -2.145764938177308e-06, -1.5497195136049413e-06, -0.0009296386269852519, -0.00020096666412428021, -0.06508135050535202, -9.536738616588991e-07, -6.9141146923357155e-06, -1.6689286894688848e-06, -1.5616295058862306e-05, -1.811964830267243e-05, -0.008098148740828037, -1.9192511899746023e-05, -0.000800408364739269, -5.531158240046352e-05, -3.683499380713329e-05, -0.5421282649040222, -4.172316494077677e-06, -3.814689989667386e-06, -2.0265558760002023e-06, -1.6331539882230572e-05, -5.221230458118953e-05, -0.011296126060187817, -7.033323527139146e-06, -5.817244164063595e-05, -0.0023036866914480925, -0.0026940738316625357, -0.001013718661852181, -0.00023183519078884274, -0.07778438925743103, -1.0118696689605713, -0.01937558501958847, -0.0006242233794182539, -5.400034933700226e-05, -0.19652202725410461, -1.4305104514278355e-06, -5.2569914259947836e-05, -0.025343898683786392, -0.00046957432641647756, -4.5536911784438416e-05, -0.002291911980137229, -4.446407547220588e-05, -0.0008837846689857543, -0.00021205084340181202, -0.00020037073409184813, -3.635817120084539e-05, -0.00012957210128661245, -7.510157047363464e-06, -0.00041559641249477863, -0.7043044567108154, -0.00039176418795250356, -0.001542688929475844, -0.004043618217110634, -4.637133679352701e-05, -9.929640509653836e-05, -3.4689302992774174e-05, -0.0002609150833450258, -6.0794889577664435e-05, -0.0003933132975362241, -1.6689160474925302e-05, -3.93382906622719e-05, -4.887569048150908e-06, -0.0004659997357521206, -0.002146442187950015, -0.000262106885202229, -7.629365427419543e-06, -0.00020704510097857565, -0.11800744384527206, -1.6750593185424805, -0.02412313036620617, -0.4065568745136261, -2.3841830625315197e-06, -0.002214838284999132, -0.0030266689136624336, -0.0003685271949507296, -0.00011121608258690685, -0.05690263584256172, -0.00027223696815781295, -0.00012718822108581662, -0.0005192600074224174, -9.894321920000948e-06, -0.00022575691400561482, -0.0005411829333752394, -0.00023779425828251988, -0.019103938713669777, -0.00496132206171751, -1.1205610462639015e-05, -3.8742269680369645e-05, -0.000105375460407231, -0.0001081169830285944, -1.966933996300213e-05, -1.0132738680113107e-05, -2.6464111215318553e-05, -0.0001012035645544529, -0.00010907054820563644, -5.125986263010418e-06, -0.00024077377747744322, -0.1023743525147438, -0.009007887914776802, -0.06812228262424469, -0.000506511190906167, -0.5200515985488892, -0.010405691340565681, -1.0740889310836792], "finish_reason": "stop"}], "metrics": {"energy": 809.3643139104843, "energy_per_token": 3.6457851977949742, "time": 18.89725, "time_per_token": 0.08512274774774775}}
{"outputs": [{"text": "summary = {}\n\n    for root, dirs, files in os.walk(directory_path):\n        for file in files:\n            # Check if the file name contains invalid characters\n            if any(char in INVALID_CHARACTERS for char in file):\n                # Move the file to the \"Invalid\" directory\n                move_file(root, file, 'Invalid')\n                summary['Invalid'] = summary.get('Invalid', 0) + 1\n            else:\n                # Get the file extension\n                ext = os.path.splitext(file)[1].lstrip('.')\n\n                # Move the file to the appropriate directory\n                if ext:\n                    move_file(root, file, ext)\n                    summary[ext] = summary.get(ext, 0) + 1\n\n    return summary", "tokens": ["summary", " =", " {}", "\n", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "_", "path", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "#", " Check", " if", " the", " file", " name", " contains", " invalid", " characters", "\n", "            ", "if", " any", "(", "char", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", " for", " char", " in", " file", "):", "\n", "                ", "#", " Move", " the", " file", " to", " the", " \"", "Invalid", "\"", " directory", "\n", "                ", "move", "_", "file", "(", "root", ",", " file", ",", " '", "Invalid", "')", "\n", "                ", "summary", "['", "Invalid", "']", " =", " summary", ".", "get", "('", "Invalid", "'", ",", " ", "0", ")", " +", " ", "1", "\n", "            ", "else", ":", "\n", "                ", "#", " Get", " the", " file", " extension", "\n", "                ", "ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ")[", "1", "]", ".", "lst", "rip", "('", ".", "')", "\n", "\n", "                ", "#", " Move", " the", " file", " to", " the", " appropriate", " directory", "\n", "                ", "if", " ext", ":", "\n", "                ", "    ", "move", "_", "file", "(", "root", ",", " file", ",", " ext", ")", "\n", "                ", "    ", "summary", "[", "ext", "]", " =", " summary", ".", "get", "(", "ext", ",", " ", "0", ")", " +", " ", "1", "\n", "\n", "    ", "return", " summary", "\n", "\n", "def"], "logprobs": [-0.9261104464530945, -0.003763380227610469, -0.09414701908826828, -0.10688643157482147, -1.2042943239212036, -0.0014755562879145145, -1.0509401559829712, -1.9811596870422363, -0.004472135100513697, -0.3982096016407013, -2.52720492426306e-05, -0.00011646069469861686, -0.021040916442871094, -0.0005169962532818317, -0.0004175029753241688, -1.0967194612021558e-05, -6.3774932641536e-05, -0.00022980909852776676, -0.001696696155704558, -0.00020489977032411844, 0.0, -0.043059974908828735, -0.003454077523201704, -0.012422802858054638, -0.11241281032562256, -0.16793252527713776, -0.25694093108177185, -0.0005060345865786076, -7.152301259338856e-05, -0.00044705410255119205, -0.006779288873076439, -1.6104145050048828, -0.608585774898529, -0.30448174476623535, -0.5738016366958618, -0.14043475687503815, -0.5622244477272034, -0.14671382308006287, -0.3025205731391907, -0.0006673493189737201, -0.07441659271717072, -0.0007322729215957224, -0.07573036849498749, -0.1465452015399933, -0.017059020698070526, -0.5243228673934937, -0.0039285640232264996, -0.03816729784011841, -2.145764938177308e-06, -1.4305104514278355e-06, -2.264974000354414e-06, -1.9073468138230965e-06, -5.960462772236497e-07, -0.0009525052737444639, -1.1205610462639015e-05, -1.4066597032069694e-05, -0.003631665138527751, -0.015426833182573318, -0.00016807096835691482, -0.003816465148702264, -0.8418732285499573, -0.4019739627838135, -0.3472617566585541, -0.025365866720676422, -0.019042769446969032, -0.24393486976623535, -0.4557332396507263, -0.007137396838515997, -0.0010003806091845036, -0.056105341762304306, -0.06736553460359573, -0.0007877822499722242, -3.668076276779175, -0.010824534110724926, -0.6124658584594727, -0.08176250010728836, -0.9680509567260742, -0.009001271799206734, -0.01063123531639576, -0.018797239288687706, -0.826727032661438, -0.009206579998135567, -0.11260316520929337, -0.0007359656738117337, -0.07507070899009705, -0.14005689322948456, -1.3733378648757935, -0.002286321949213743, -0.00026306029758416116, -0.014891652390360832, -0.007350543048232794, -0.001280560391023755, -0.010647393763065338, -0.002554608043283224, -0.00025459862081333995, -7.92710343375802e-05, -7.390948667307384e-06, -0.0004415729199536145, -0.0002466136065777391, -0.00017414960893802345, -0.00011777184408856556, -0.00011312322021694854, -8.22540732769994e-06, -0.02336621843278408, -0.07730849087238312, -0.016033174470067024, -3.0040289857424796e-05, -0.0009377372916787863, -0.0005486889858730137, -0.20460198819637299, -0.7497730851173401, -0.018537839874625206, -0.10183422267436981, -0.18782126903533936, -0.45536595582962036, -0.00010525626566959545, -2.2625579833984375, -0.0007609808817505836, -0.4078976809978485, -1.6689286894688848e-06, -1.9192511899746023e-05, 0.0, -3.135155202471651e-05, -2.3841855067985307e-07, 0.0, -1.4185804502631072e-05, -0.0006428082706406713, -0.061221893876791, -0.0003275334893260151, -0.4076590836048126, -0.5356988310813904, -1.8433575630187988, -1.4305104514278355e-06, -0.019332438707351685, -9.059495641849935e-05, -1.537788011773955e-05, -0.042908668518066406, -1.0080736875534058, -0.000356253091013059, -0.02467944659292698, -0.7912654876708984, -0.0040039620362222195, -0.00021753329201601446, -0.003720268839970231, -0.24160291254520416, -1.374398946762085, -0.021859657019376755, -0.6172261834144592, -0.00010644822759786621, -1.8285150527954102, -0.027440741658210754, -2.4897139072418213, -0.006612088996917009, -4.3748852476710454e-05, -0.00029583368450403214, -0.11531038582324982, -4.172316494077677e-06, -3.540453326422721e-05, -0.00013422065239865333, -0.00025078488397412, -1.3232143828645349e-05, -8.797258487902582e-05, -2.4676019165781327e-05, -0.00150079105515033, -0.07477506250143051, -0.0007695574313402176, -0.012376648373901844, -0.014460880309343338, -0.004390363115817308, -0.0011199399596080184, -0.0002632986579556018, -0.0025536566972732544, -3.6954811548639555e-06, -2.8132995794294402e-05, -1.9073468138230965e-06, -1.764281842042692e-05, -0.0002090712368953973, -2.3007127310847864e-05, -0.00013374387344811112, -5.94836674281396e-05, -1.585470999998506e-05, -2.539125671319198e-05, -9.667406266089529e-05, -4.029192859889008e-05, -2.0265558760002023e-06, -0.002642831765115261, -0.15427212417125702, -0.00720983138307929, -0.04841697961091995, -0.0003987947420682758, -0.008794976398348808, -0.002092197770252824, -0.0312800407409668], "finish_reason": "stop"}], "metrics": {"energy": 666.9167104701999, "energy_per_token": 3.4555269972549216, "time": 16.381771, "time_per_token": 0.08487964248704663}}
{"outputs": [{"text": "summary = {}\n\n    for root, dirs, files in os.walk(directory_path):\n        for file in files:\n            if any(char in INVALID_CHARACTERS for char in file):\n                move_file(root, file, 'Invalid')\n                summary.setdefault('Invalid', 0)\n                summary['Invalid'] += 1\n            else:\n                ext = os.path.splitext(file)[1][1:]  # Extract extension without dot\n                move_file(root, file, ext)\n                summary.setdefault(ext, 0)\n                summary[ext] += 1\n\n    return summary", "tokens": ["summary", " =", " {}", "\n", "\n", "    ", "for", " root", ",", " d", "irs", ",", " files", " in", " os", ".", "walk", "(", "directory", "_", "path", "):", "\n", "        ", "for", " file", " in", " files", ":", "\n", "            ", "if", " any", "(", "char", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", " for", " char", " in", " file", "):", "\n", "                ", "move", "_", "file", "(", "root", ",", " file", ",", " '", "Invalid", "')", "\n", "                ", "summary", ".", "set", "default", "('", "Invalid", "'", ",", " ", "0", ")", "\n", "                ", "summary", "['", "Invalid", "']", " +=", " ", "1", "\n", "            ", "else", ":", "\n", "                ", "ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ")[", "1", "][", "1", ":]", "  ", "#", " Ext", "ract", " extension", " without", " dot", "\n", "                ", "move", "_", "file", "(", "root", ",", " file", ",", " ext", ")", "\n", "                ", "summary", ".", "set", "default", "(", "ext", ",", " ", "0", ")", "\n", "                ", "summary", "[", "ext", "]", " +=", " ", "1", "\n", "\n", "    ", "return", " summary", "\n", "\n", "def"], "logprobs": [-0.9261104464530945, -0.003763380227610469, -0.09414701908826828, -0.10688643157482147, -1.2042943239212036, -0.0014755562879145145, -1.0509401559829712, -1.9811596870422363, -0.004472135100513697, -0.3982096016407013, -2.52720492426306e-05, -0.00011646069469861686, -0.021040916442871094, -0.0005169962532818317, -0.0004175029753241688, -1.0967194612021558e-05, -6.3774932641536e-05, -0.00022980909852776676, -0.001696696155704558, -0.00020489977032411844, 0.0, -0.043059974908828735, -0.003454077523201704, -0.012422802858054638, -0.11241281032562256, -0.16793252527713776, -0.25694093108177185, -0.0005060345865786076, -7.152301259338856e-05, -0.00044705410255119205, -0.006779288873076439, -1.4743366241455078, -0.30836910009384155, -0.019901243969798088, -0.7840022444725037, -0.006864062510430813, -0.03545322269201279, -2.264974000354414e-06, -2.0265558760002023e-06, -1.1920922133867862e-06, -7.152555099310121e-07, -2.264974000354414e-06, -0.0009211826254613698, -1.156323378381785e-05, -2.3364747903542593e-05, -0.004740309901535511, -0.021152501925826073, -0.0052945869974792, -0.0024743436370044947, -3.845884084701538, -0.018693581223487854, -0.5657128095626831, -0.18492431938648224, -2.5746357440948486, -0.02730526402592659, -0.016065670177340508, -0.0073348041623830795, -0.6168874502182007, -0.01798078790307045, -0.1254039853811264, -0.0024085817858576775, -0.0229768306016922, -0.16279961168766022, -0.17496612668037415, -0.0004502712981775403, -6.437280717364047e-06, -0.005993963219225407, -0.0023695745039731264, -0.00032789100077934563, -7.73638384998776e-05, -0.0018390186596661806, -0.0008504349971190095, -4.3748852476710454e-05, -0.007594877388328314, -0.044694337993860245, -0.0003649522550404072, -0.0014066335279494524, -3.015949550899677e-05, -4.291525328881107e-06, -0.0008279233006760478, -0.0005388000281527638, -5.376194530981593e-05, -0.0009332115878351033, -0.07255610078573227, -0.005700047593563795, -2.062299427052494e-05, -0.0002833203470800072, -0.0002138386043952778, -1.9335249662399292, -0.0019840572495013475, -0.4034401476383209, -6.437280717364047e-06, -2.7417760065873154e-05, 0.0, -3.397406908334233e-05, -2.3841855067985307e-07, 0.0, -2.396077979938127e-05, -0.0011208925861865282, -0.0818590521812439, -0.0005497612874023616, -0.5539455413818359, -6.4490144723095e-05, -0.00016616393986623734, -1.4329755306243896, -3.71926071238704e-05, -1.8112998008728027, -0.10824716836214066, -1.654223084449768, -0.14306943118572235, -1.5654056072235107, -0.013460826128721237, -0.021121688187122345, -0.33147671818733215, -3.814689989667386e-06, -7.974783511599526e-05, -0.00024768622824922204, -0.0005011494504287839, -1.3589766240329482e-05, -8.272782724816352e-05, -3.1470757676288486e-05, -0.0012707976857200265, -0.029814867302775383, -0.0148579441010952, -0.003532005939632654, -0.0016163630643859506, -0.0011635207338258624, -2.145764938177308e-06, 0.0, -0.00013648532330989838, -0.00011717586312443018, -0.0013499680208042264, -3.0397906812140718e-05, -4.637133679352701e-05, -7.629365427419543e-06, -0.0037290574982762337, -0.0001820160250645131, -1.0967194612021558e-05, -1.6093124941107817e-05, -1.0728830375228426e-06, -8.904537389753386e-05, -3.3854863431770355e-05, -2.4676019165781327e-05, -2.622600959512056e-06, -0.0004991239402443171, -0.03915969282388687, -0.0031343402806669474, -0.04446392133831978, -0.0004415729199536145, -0.0029483442194759846, -0.0017802356742322445, -0.022070271894335747], "finish_reason": "stop"}], "metrics": {"energy": 524.1687705726624, "energy_per_token": 3.448478753767516, "time": 12.821085, "time_per_token": 0.08434924342105263}}
{"outputs": [{"text": "summary = {}\n\n    # Step 1: Scan the directory and collect files\n    files = [file for file in os.listdir(directory_path) if os.path.isfile(os.path.join(directory_path, file))]\n\n    # Step 2: Check if the directory already exists and create if necessary\n    invalid_directory = os.path.join(directory_path, 'Invalid')\n    if not os.path.exists(invalid_directory):\n        os.makedirs(invalid_directory)\n\n    # Step 3: Iterate over the files and categorize them\n    for file in files:\n        file_extension = os.path.splitext(file)[1].lower()\n\n        # Check if the file name contains invalid characters\n        if any(char in INVALID_CHARACTERS for char in file):\n            # Move files with invalid characters to the Invalid directory\n            shutil.move(os.path.join(directory_path, file), os.path.join(invalid_directory, file))\n            summary['Invalid'] = summary.get('Invalid', 0) +", "tokens": ["summary", " =", " {}", "\n", "\n", "    ", "#", " Step", " ", "1", ":", " Scan", " the", " directory", " and", " collect", " files", "\n", "    ", "files", " =", " [", "file", " for", " file", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", ")", " if", " os", ".", "path", ".", "is", "file", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " file", "))", "]", "\n", "\n", "    ", "#", " Step", " ", "2", ":", " Check", " if", " the", " directory", " already", " exists", " and", " create", " if", " necessary", "\n", "    ", "invalid", "_", "directory", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " '", "Invalid", "')", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "invalid", "_", "directory", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "invalid", "_", "directory", ")", "\n", "\n", "    ", "#", " Step", " ", "3", ":", " Iter", "ate", " over", " the", " files", " and", " categor", "ize", " them", "\n", "    ", "for", " file", " in", " files", ":", "\n", "        ", "file", "_", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ")[", "1", "]", ".", "lower", "()", "\n", "\n", "        ", "#", " Check", " if", " the", " file", " name", " contains", " invalid", " characters", "\n", "        ", "if", " any", "(", "char", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", " for", " char", " in", " file", "):", "\n", "            ", "#", " Move", " files", " with", " invalid", " characters", " to", " the", " Invalid", " directory", "\n", "            ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " file", ")", ",", " os", ".", "path", ".", "join", "(", "invalid", "_", "directory", ",", " file", "))", "\n", "            ", "summary", "['", "Invalid", "']", " =", " summary", ".", "get", "('", "Invalid", "'", ",", " ", "0", ")", " +"], "logprobs": [-0.9261104464530945, -0.003763380227610469, -0.09414701908826828, -0.10688643157482147, -1.2042943239212036, -0.0014755562879145145, -0.8026090860366821, -4.147275924682617, -0.005486312322318554, -0.08125585317611694, -0.12690432369709015, -2.1519041061401367, -0.5387666821479797, -0.022625632584095, -1.3311885595321655, -3.2620792388916016, -1.8177237510681152, -0.6798819899559021, -0.0015101945027709007, -0.43768399953842163, -0.046465106308460236, -0.9878275394439697, -0.64229416847229, -0.032432448118925095, -0.0017077637603506446, -0.00013100242358632386, -0.00221519498154521, -1.1801649634435307e-05, -0.0036013764329254627, 0.0, -8.701899787411094e-05, -0.009360828436911106, -0.00044550508027896285, 0.0, -0.013570791110396385, -0.053191956132650375, -0.04801825433969498, -5.8412379075889476e-06, -1.3470558769768104e-05, -4.529942543740617e-06, -8.141662692651153e-05, -0.00033790123416110873, -0.0002733095607254654, -0.056138474494218826, -1.7881377516459906e-06, -1.2993727978027891e-05, -1.311301275563892e-06, -2.2053474822314456e-05, -1.07287787614041e-05, -0.0001559135998832062, -9.298280929215252e-06, -1.5497195136049413e-06, -3.969590397900902e-05, -0.0004563482361845672, -6.651657167822123e-05, -0.01933629810810089, -0.0018788794986903667, -0.021145032718777657, -0.00038378025055862963, -0.03003966249525547, -0.03315681219100952, -8.546940807718784e-05, -0.00367881846614182, -0.005437465384602547, -2.4339547157287598, -1.1660041809082031, -0.6398475170135498, -0.12572865188121796, -2.26425838470459, -0.03143773600459099, -2.1035099029541016, -0.1118604838848114, -2.0445034503936768, -0.7559938430786133, -0.011003883555531502, -0.0031247143633663654, -0.3710334300994873, -0.002497650682926178, -1.1438812017440796, -0.11994986981153488, -0.018374701961874962, -7.152555099310121e-07, -9.298280929215252e-06, -7.152555099310121e-07, -0.0008472190820612013, -0.0006426891195587814, -0.0012080521555617452, -3.1470757676288486e-05, -7.152555099310121e-07, -0.0002953569928649813, -0.7965202331542969, -0.009632891044020653, -0.0018534163245931268, -0.0036847570445388556, -0.06897993385791779, -0.09952953457832336, -0.014139941893517971, -0.0006606780225411057, -8.344646857949556e-07, -1.2159273865108844e-05, -1.1920922133867862e-06, -0.05066097527742386, -0.00031716562807559967, -0.001392824575304985, -1.1920928244535389e-07, -1.1920922133867862e-06, -0.0011980506824329495, -0.00044526674901135266, -0.0011944787111133337, -0.0055129872635006905, -3.576278118089249e-07, -0.6632659435272217, -2.145764938177308e-06, -1.0967194612021558e-05, -0.0005302215577103198, -7.199982064776123e-05, -7.152555099310121e-07, -3.099436753473128e-06, -0.0008017186191864312, -0.0010661162668839097, -0.12836718559265137, -0.0006946296198293567, -0.0059277210384607315, -0.0024569821543991566, -0.00011729506513802335, -0.002283705398440361, -0.004023315384984016, -1.7917028665542603, -0.00047636605449952185, -0.7759073972702026, -0.8754562735557556, -0.09547123312950134, -0.27095866203308105, -2.785672903060913, -0.0002115741081070155, -0.1931525021791458, -0.15435917675495148, -0.00042429505265317857, -0.009488957934081554, -0.014628653414547443, -0.14093714952468872, -0.0007644353318028152, -3.576214658096433e-05, -8.809178689261898e-05, -0.007525546941906214, -1.7574920654296875, -0.02325255051255226, -2.061293601989746, -0.00038068200228735805, -0.10856923460960388, -4.768370445162873e-07, -1.0490362910786644e-05, 0.0, -2.13382354559144e-05, -1.1920928244535389e-07, 0.0, -1.2278481335670222e-05, -0.0006030171643942595, -0.0371582955121994, -0.0003070359816774726, -0.3710801303386688, -0.5116634368896484, -0.33576276898384094, -0.044233907014131546, -0.386010080575943, -0.6306899785995483, -0.0006283930852077901, -0.09495186060667038, -0.8081603050231934, -0.24781420826911926, -0.13181953132152557, -0.08205224573612213, -0.6234177947044373, -0.20229624211788177, -0.09027624130249023, -0.00022492263815365732, -0.022037038579583168, -0.0001618731184862554, -0.1266487091779709, -0.0770706832408905, -0.01007117610424757, -0.1883178949356079, -0.0035501806996762753, -0.038152266293764114, -1.4305104514278355e-06, -7.152555099310121e-07, -4.172316494077677e-06, -1.597391747054644e-05, -9.536738616588991e-07, -0.000888191512785852, -2.658331868587993e-05, -1.823885577323381e-05, -0.05552192032337189, -0.039519112557172775, -0.00019631843315437436, -0.002739607123658061, -1.4434385299682617, -0.22828255593776703, -2.721583127975464, -0.02491191029548645, -0.001498291501775384, -0.12916234135627747, -0.030341429635882378, -0.14135649800300598, -1.7178940773010254, -0.04300973191857338, -0.030806105583906174, -0.00031883400515653193, -0.20357495546340942, -1.311301275563892e-06, -5.960462772236497e-07, -0.00023231192608363926, -4.2437604861333966e-05, -0.0031708222813904285, -2.145764938177308e-06, -5.602820692729438e-06, -2.7418097943154862e-06, -2.3841830625315197e-06, -8.702239938429557e-06, -3.8265450712060556e-05, -1.7523612768854946e-05, -8.344646857949556e-07, -1.8596476365928538e-05, -0.00019012074335478246, -3.683499380713329e-05, -1.6093124941107817e-05, -0.19202862679958344, -1.6689286894688848e-06, -5.960462772236497e-07, -2.861018856492592e-06, -4.0531076592742465e-06, -6.615896563744172e-05, -0.011496839113533497, -1.1920922133867862e-06, -4.7205765440594405e-05, -0.00038521020906046033, -0.0009604846709407866, -0.0009190387791022658, -0.0001436368766007945, -0.24028468132019043, -0.13242380321025848, -1.2690895795822144, -0.0014394884929060936, -0.00025602878304198384, -0.002448776736855507, -0.001962879905477166, -0.0008605591137893498, -0.011342683807015419, -0.0013898485340178013, -0.0001234931987710297, -4.482168878894299e-05, -1.6689286894688848e-06, -0.00030310326837934554, -0.00035720644518733025, -6.8662193370983e-05, -0.00011002412065863609], "finish_reason": "length"}], "metrics": {"energy": 1007.9756082086561, "energy_per_token": 3.937404719565063, "time": 24.344824, "time_per_token": 0.09509696875}}
{"outputs": [{"text": "summary = {}\n    invalid_files_directory = os.path.join(directory_path, 'Invalid')\n\n    for filename in os.listdir(directory_path):\n        # Skip the \"Invalid\" directory\n        if filename == 'Invalid':\n            continue\n\n        # Move files with invalid characters to \"Invalid\" directory\n        if any(char in INVALID_CHARACTERS for char in filename):\n            shutil.move(os.path.join(directory_path, filename), invalid_files_directory)\n            summary.setdefault('Invalid', 0)\n            summary['Invalid'] += 1\n        else:\n            extension = os.path.splitext(filename)[1][1:]\n            shutil.move(os.path.join(directory_path, filename), os.path.join(directory_path, extension, filename))\n            summary.setdefault(extension, 0)\n            summary[extension] += 1\n\n    return summary", "tokens": ["summary", " =", " {}", "\n", "    ", "invalid", "_", "files", "_", "directory", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " '", "Invalid", "')", "\n", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "#", " Skip", " the", " \"", "Invalid", "\"", " directory", "\n", "        ", "if", " filename", " ==", " '", "Invalid", "':", "\n", "            ", "continue", "\n", "\n", "        ", "#", " Move", " files", " with", " invalid", " characters", " to", " \"", "Invalid", "\"", " directory", "\n", "        ", "if", " any", "(", "char", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", " for", " char", " in", " filename", "):", "\n", "            ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", ",", " invalid", "_", "files", "_", "directory", ")", "\n", "            ", "summary", ".", "set", "default", "('", "Invalid", "'", ",", " ", "0", ")", "\n", "            ", "summary", "['", "Invalid", "']", " +=", " ", "1", "\n", "        ", "else", ":", "\n", "            ", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")[", "1", "][", "1", ":]", "\n", "            ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", ",", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " extension", ",", " filename", "))", "\n", "            ", "summary", ".", "set", "default", "(", "extension", ",", " ", "0", ")", "\n", "            ", "summary", "[", "extension", "]", " +=", " ", "1", "\n", "\n", "    ", "return", " summary"], "logprobs": [-0.9261104464530945, -0.003763380227610469, -0.09414701908826828, -0.10688643157482147, -0.3570042848587036, -0.42816224694252014, -0.041889119893312454, -2.3384010791778564, -1.6494057178497314, -1.2381480932235718, -0.024271605536341667, -0.6229761838912964, -2.610649426060263e-05, -0.00024291902082040906, -3.182837463100441e-05, -0.003071236191317439, -0.0015088851796463132, -0.011117536574602127, -0.0004318020073696971, -8.344646857949556e-07, -0.0004805363714694977, -0.5273628830909729, -0.019347989931702614, -0.0041937981732189655, -0.012926709838211536, -1.1142243146896362, -0.0006403064471669495, -1.6192395687103271, -0.5946182608604431, -0.0007564543629996479, -0.010813802480697632, -3.2186455882765586e-06, -0.0005032941699028015, 0.0, -0.00018892886873800308, -0.0005044856225140393, -2.1934269170742482e-05, -4.768370445162873e-07, -0.00021526881027966738, -0.001950506237335503, -0.012441405095160007, -1.7670438289642334, -1.2363061904907227, -2.5180294513702393, -1.2124980688095093, -0.005602254066616297, -0.0004138090298511088, -0.033543527126312256, -0.8331570029258728, -0.00021526881027966738, -0.005793801974505186, -0.05962264910340309, -0.07557453215122223, -0.09643988311290741, -0.000248043768806383, -0.004645626526325941, -0.009092590771615505, -0.0004175029753241688, -0.0018828060710802674, -0.00023946279543451965, -0.02947254665195942, -0.0004930472350679338, -0.8619890213012695, -2.098925828933716, -0.47868776321411133, -0.047853149473667145, -0.008162946440279484, -0.01296236552298069, -0.44882774353027344, -1.0956506729125977, -0.0007304860628210008, -0.002301902510225773, -0.07873230427503586, -0.03041948936879635, -0.0001250427303602919, -0.1358652114868164, -0.02682085521519184, -0.01064173225313425, -0.4821591377258301, -0.0035675233229994774, -0.050962816923856735, -7.152555099310121e-07, -1.4305104514278355e-06, -1.4305104514278355e-06, -1.0490362910786644e-05, -1.9073468138230965e-06, -0.0010252702049911022, -1.5139465176616795e-05, -1.7881233361549675e-05, -0.0017389428103342652, -0.012501801364123821, -0.00014411364099942148, -0.00220104050822556, -0.953671395778656, -4.410734163684538e-06, -2.3841830625315197e-06, -0.0007260785205289721, -0.00012444675667211413, -0.05006257817149162, -2.0265558760002023e-06, -2.372236667724792e-05, -1.4305104514278355e-06, -3.182837463100441e-05, -2.7894584491150454e-05, -0.000474936212413013, -2.2649508537142538e-05, -8.821448318485636e-06, -4.7205765440594405e-05, -0.0003262225945945829, -0.0001282609737245366, -6.997340824455023e-05, -0.7851341366767883, -5.245195097813848e-06, -7.748573807475623e-06, -3.3378546504536644e-06, -9.059865078597795e-06, -0.0012332937913015485, -0.0006040894077159464, -0.20919372141361237, -0.16663029789924622, -0.4547366499900818, -0.001157329068519175, -6.794906312279636e-06, -0.047145381569862366, -0.0011892396723851562, -0.00038115866482257843, -2.455681169521995e-05, -0.0032548329327255487, -0.0008551992941647768, -1.2397689715726301e-05, -0.026028353720903397, -0.04570317268371582, -0.0020866068080067635, -0.000773488252889365, -3.40932747349143e-05, -8.344646857949556e-07, -0.0008293526479974389, -0.00018523407925385982, -1.4662635294371285e-05, -0.0011238694423809648, -0.7410116791725159, -0.02864333800971508, -2.610649426060263e-05, -0.0012838939437642694, -0.003254357725381851, -1.9591675996780396, -0.0012843701988458633, -0.2340048849582672, -2.0265558760002023e-06, -2.288792165927589e-05, 0.0, -5.1020273531321436e-05, -1.1920928244535389e-07, 0.0, -1.8358061424805783e-05, -0.0001292145170737058, -0.026920540258288383, -0.0004188137245364487, -0.7477854490280151, -8.535020606359467e-05, -0.00012313561455812305, -0.6106736063957214, -0.072120301425457, -1.907404899597168, -1.1920922133867862e-06, -1.5497195136049413e-06, -9.154854342341423e-05, -1.8954096958623268e-05, -0.010698109865188599, -8.344646857949556e-07, -2.0265558760002023e-06, -3.4570634852570947e-06, -3.814689989667386e-06, -8.821448318485636e-06, -2.932505594799295e-05, -8.4638240878121e-06, -1.1920928244535389e-07, -1.4781842764932662e-05, -5.400034933700226e-05, -3.564294092939235e-05, -3.790783375734463e-05, -0.030819052830338478, -4.0531076592742465e-06, -2.658331868587993e-05, -2.9802276912960224e-06, -1.966933996300213e-05, -0.0002422039397060871, -0.0018254535971209407, -4.887569048150908e-06, -1.6689286894688848e-06, -5.543078441405669e-05, -0.0038448472041636705, -0.6559767127037048, -0.007291728165000677, -0.0004903068183921278, -0.0019201666582375765, -0.0495486818253994, -0.005442919209599495, -0.0014062763657420874, -5.483612312673358e-06, -8.344646857949556e-07, -0.0001517419150331989, -0.00031919151660986245, -0.0010625437134876847, -5.495397272170521e-05, -9.905801562126726e-05, -9.894321920000948e-06, -0.0006090931710787117, -0.00025519452174194157, -1.537788011773955e-05, -3.302042750874534e-05, -6.318072337307967e-06, -8.463501580990851e-05, -5.566918844124302e-05, -2.6702524337451905e-05, -2.50339189733495e-06, -0.0013068715343251824, -0.013918480835855007, -0.001476984703913331, -0.0800330638885498, -0.0006107610533945262], "finish_reason": "stop"}], "metrics": {"energy": 774.3282984809866, "energy_per_token": 3.5037479569275414, "time": 18.924553, "time_per_token": 0.08563146153846153}}
{"outputs": [{"text": "# Initialize the summary dictionary\n    summary = {}\n\n    # Initialize the invalid directory\n    invalid_dir = os.path.join(directory_path, 'Invalid')\n    os.makedirs(invalid_dir, exist_ok=True)\n\n    # Iterate through the files in the directory\n    for file_name in os.listdir(directory_path):\n        if os.path.isfile(os.path.join(directory_path, file_name)):\n            # Check if the file name contains invalid characters\n            if any(c in INVALID_CHARACTERS for c in file_name):\n                # Move the file to the invalid directory\n                shutil.move(os.path.join(directory_path, file_name), invalid_dir)\n\n                # Update the summary\n                summary.setdefault('Invalid', 0)\n                summary['Invalid'] += 1\n\n            else:\n                # Extract the file extension\n                file_ext = os.path.splitext(file_name)[1].replace('.', '')\n\n                # Create the destination directory if it doesn", "tokens": ["#", " Initialize", " the", " summary", " dictionary", "\n", "    ", "summary", " =", " {}", "\n", "\n", "    ", "#", " Initialize", " the", " invalid", " directory", "\n", "    ", "invalid", "_", "dir", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " '", "Invalid", "')", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "invalid", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Iter", "ate", " through", " the", " files", " in", " the", " directory", "\n", "    ", "for", " file", "_", "name", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " file", "_", "name", "))", ":", "\n", "            ", "#", " Check", " if", " the", " file", " name", " contains", " invalid", " characters", "\n", "            ", "if", " any", "(", "c", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", " for", " c", " in", " file", "_", "name", "):", "\n", "                ", "#", " Move", " the", " file", " to", " the", " invalid", " directory", "\n", "                ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " file", "_", "name", ")", ",", " invalid", "_", "dir", ")", "\n", "\n", "                ", "#", " Update", " the", " summary", "\n", "                ", "summary", ".", "set", "default", "('", "Invalid", "'", ",", " ", "0", ")", "\n", "                ", "summary", "['", "Invalid", "']", " +=", " ", "1", "\n", "\n", "            ", "else", ":", "\n", "                ", "#", " Ext", "ract", " the", " file", " extension", "\n", "                ", "file", "_", "ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", "_", "name", ")[", "1", "]", ".", "replace", "('", ".", "'", ",", " '", "')", "\n", "\n", "                ", "#", " Create", " the", " destination", " directory", " if", " it", " doesn"], "logprobs": [-0.8680583834648132, -1.1121305227279663, -1.7353510856628418, -0.10817164182662964, -0.04212310537695885, -0.23792049288749695, -0.0005706112715415657, -0.010277326218783855, -0.0031369547359645367, -0.1219162866473198, -0.0010403940686956048, -0.16313809156417847, -0.0003588747640606016, -0.01797153800725937, -2.5897445678710938, -0.4711621403694153, -1.0257949829101562, -0.38527846336364746, -0.5230701565742493, -0.00020168177434243262, -0.06008828803896904, -0.006919350940734148, -0.614921510219574, -0.03574899211525917, -0.5121152997016907, -1.9430925021879375e-05, -0.00024816294899210334, -1.156323378381785e-05, -0.0040076426230371, -0.0008615119731985033, -0.005730983801186085, -0.0009926398051902652, -3.814689989667386e-06, -0.00035494225448928773, -0.43813714385032654, -0.019756676629185677, -0.001384491566568613, -0.0010795724811032414, -0.1821390837430954, -0.6373838782310486, -7.271740287251305e-06, -0.06256800144910812, -0.0022318472620099783, -1.6689286894688848e-06, -1.4066597032069694e-05, -0.0013666347367689013, -1.883488948806189e-05, -7.152531907195225e-06, -0.014058839529752731, -8.987976616481319e-05, -2.9802276912960224e-06, -1.5497195136049413e-06, -0.0026434261817485094, -0.00019059749320149422, -6.341733387671411e-05, -0.03456804156303406, -0.058907318860292435, -0.0002926159941125661, -0.013662281446158886, -1.325789451599121, -0.000406301929615438, -0.8695369958877563, -0.5336527824401855, -0.17124433815479279, -0.08901318162679672, -0.003908021375536919, -0.011172590777277946, -0.040999095886945724, -7.819823804311454e-05, -0.01667584478855133, -0.6159921288490295, -0.4208008944988251, -0.012299052439630032, -0.00025138078490272164, -0.004089802503585815, -7.152555099310121e-07, -0.0002299282787134871, 0.0, -8.737658936297521e-05, -0.00019441144831944257, -1.1801649634435307e-05, -8.344646857949556e-07, -0.0005015069036744535, -0.00019786784832831472, -0.017993900924921036, -2.208202600479126, -0.29613742232322693, -8.821448318485636e-06, -1.4305012882687151e-05, -1.1920928244535389e-07, -0.0005239067832008004, -0.048353489488363266, -0.00014685506175737828, -0.009186027571558952, -1.1920922133867862e-06, -9.298280929215252e-06, -3.576278118089249e-07, -2.396077979938127e-05, -1.1920858014491387e-05, -8.105902816168964e-05, -3.85038583772257e-05, -3.576278118089249e-07, -4.386805812828243e-05, -0.001019673072732985, -6.9141146923357155e-06, -1.7881377516459906e-06, -2.3603161025675945e-05, -0.01204962283372879, -0.002912804950028658, -0.015473551116883755, -0.11779161542654037, -0.36252495646476746, -0.26296594738960266, -0.11315624415874481, -0.01588089019060135, -0.2057981938123703, -0.17563799023628235, -0.22838786244392395, -0.0002798642381094396, -0.021298151463270187, -0.00015221867943182588, -0.08443717658519745, -0.08999050408601761, -0.01425864640623331, -0.7863186597824097, -0.0014013956533744931, -0.0799291804432869, -1.6689286894688848e-06, -1.1920922133867862e-06, -1.311301275563892e-06, -5.364403477869928e-06, -3.576278118089249e-07, -0.0006474544061347842, -1.9073304429184645e-05, -1.3232143828645349e-05, -0.0019747773185372353, -2.861018856492592e-06, -5.125986263010418e-06, -0.009714353829622269, -0.0001267114421352744, -0.0010619483655318618, -0.4324573278427124, -0.035664673894643784, -0.09772009402513504, -0.014191304333508015, -0.004511891398578882, -0.0053452192805707455, -0.1187085211277008, -0.003156087128445506, -0.10217267274856567, -7.962863310240209e-05, -0.03558690845966339, -1.311301275563892e-06, -5.960462772236497e-07, -0.00010132275929208845, -6.210611172718927e-05, -0.236031636595726, -2.861018856492592e-06, -6.556489552167477e-06, -2.9802276912960224e-06, -9.298280929215252e-06, -2.706014311115723e-05, -0.0017005043337121606, -1.9550132492440753e-05, -9.536738616588991e-07, -2.4318398573086597e-05, -0.0005558376433327794, -1.2159273865108844e-05, -2.7418097943154862e-06, -0.00011014331539627165, -4.4225667807040736e-05, -0.6588869690895081, -2.7418097943154862e-06, -1.0251946150674485e-05, -0.0008229206432588398, -0.0001392267586197704, -2.0646586418151855, -0.0983954519033432, -0.045632220804691315, -0.17793002724647522, -0.010635952465236187, -0.031971413642168045, -1.355750560760498, -6.90197994117625e-05, -0.262846440076828, -0.643159806728363, -0.0006138585740700364, -8.34461570775602e-06, -0.024584073573350906, -0.0011235122801735997, -0.00023874769976828247, -1.7046782886609435e-05, -0.002039615996181965, -0.0005096090608276427, -1.1920858014491387e-05, -0.004394279792904854, -0.008643122389912605, -0.00016616393986623734, -0.0006479309522546828, -4.088794958079234e-05, -1.9073468138230965e-06, -0.0011598295532166958, -0.00024256148026324809, -2.3841574147809297e-05, -0.00026222606538794935, -2.291127920150757, -0.09806890785694122, -0.15247175097465515, -7.974783511599526e-05, -0.00040058218291960657, -0.001444607158191502, -0.016640085726976395, -1.446686863899231, -0.00045408427831716835, -0.0037542355712503195, -0.2232324331998825, -0.2055777907371521, -0.14935214817523956, -0.00011181206355104223, -0.573245108127594, -0.00014494798961095512, -1.2142928838729858, -0.0003567297535482794, -0.1265665739774704, -1.311301275563892e-06, -1.0132738680113107e-05, -8.344646857949556e-07, -1.966933996300213e-05, -1.1920928244535389e-07, 0.0, -1.1801649634435307e-05, -0.0003923600015696138, -1.9073468138230965e-06, -1.0132738680113107e-05, -0.05808372423052788, -0.000501030299346894, -0.2977083623409271, -0.6920389533042908, -2.3823111057281494, -0.0359242707490921, -0.00025948495022021234, -2.777537883957848e-05, -3.135155202471651e-05, -0.006139229983091354, -0.00013040646445006132, -0.036403488367795944, -0.02328609488904476, -0.0002549561613705009, -0.0014252038672566414, -0.29062551259994507, -0.46398359537124634, -0.887861430644989, -0.023121515288949013, -0.3648039996623993, -0.04801495745778084, -0.10096798837184906], "finish_reason": "length"}], "metrics": {"energy": 973.5680292959217, "energy_per_token": 3.8030001144371943, "time": 24.747923, "time_per_token": 0.09667157421875}}
{"outputs": [{"text": "# Create the summary dictionary\n    summary = {}\n\n    # Check if the directory exists\n    if not os.path.exists(directory_path):\n        print(f\"Error: Directory '{directory_path}' does not exist.\")\n        return summary\n\n    # Scan the directory for files\n    file_list = os.listdir(directory_path)\n\n    # Move the files to the appropriate directories\n    for filename in file_list:\n        # Get the extension of the file\n        extension = os.path.splitext(filename)[1].lstrip('.')\n\n        # Check if the filename contains invalid characters\n        if any(char in INVALID_CHARACTERS for char in filename):\n            # Move the file to the Invalid directory\n            invalid_dir = os.path.join(directory_path, \"Invalid\")\n            if not os.path.exists(invalid_dir):\n                os.makedirs(invalid_dir)\n            shutil.move(os.path.join(directory_path, filename), os.path.join(invalid_dir, filename))\n\n            # Update the", "tokens": ["#", " Create", " the", " summary", " dictionary", "\n", "    ", "summary", " =", " {}", "\n", "\n", "    ", "#", " Check", " if", " the", " directory", " exists", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "directory", "_", "path", "):", "\n", "        ", "print", "(", "f", "\"", "Error", ":", " Directory", " '", "{", "directory", "_", "path", "}'", " does", " not", " exist", ".", "\"", ")", "\n", "        ", "return", " summary", "\n", "\n", "    ", "#", " Scan", " the", " directory", " for", " files", "\n", "    ", "file", "_", "list", " =", " os", ".", "list", "dir", "(", "directory", "_", "path", ")", "\n", "\n", "    ", "#", " Move", " the", " files", " to", " the", " appropriate", " directories", "\n", "    ", "for", " filename", " in", " file", "_", "list", ":", "\n", "        ", "#", " Get", " the", " extension", " of", " the", " file", "\n", "        ", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")[", "1", "]", ".", "lst", "rip", "('", ".", "')", "\n", "\n", "        ", "#", " Check", " if", " the", " filename", " contains", " invalid", " characters", "\n", "        ", "if", " any", "(", "char", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", " for", " char", " in", " filename", "):", "\n", "            ", "#", " Move", " the", " file", " to", " the", " Invalid", " directory", "\n", "            ", "invalid", "_", "dir", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " \"", "Invalid", "\"", ")", "\n", "            ", "if", " not", " os", ".", "path", ".", "exists", "(", "invalid", "_", "dir", "):", "\n", "                ", "os", ".", "m", "aked", "irs", "(", "invalid", "_", "dir", ")", "\n", "            ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", ",", " os", ".", "path", ".", "join", "(", "invalid", "_", "dir", ",", " filename", "))", "\n", "\n", "            ", "#", " Update", " the"], "logprobs": [-0.8680583834648132, -1.34231698513031, -0.9551868438720703, -1.069287896156311, -0.060745228081941605, -0.1927443891763687, -0.0005972985527478158, -0.009601248428225517, -0.004473677836358547, -0.11689455807209015, -0.0015253110323101282, -0.23338696360588074, -0.0005173536483198404, -0.01681945100426674, -2.6609668731689453, -0.1780862808227539, -0.21882209181785583, -0.07594773173332214, -0.22668246924877167, -0.0910026803612709, -0.00018261195509694517, -0.006936280056834221, -0.22446209192276, -0.003252931870520115, -1.847726889536716e-05, -0.000285584683297202, -1.168244216387393e-05, -0.28529924154281616, -7.366862701019272e-05, -0.0002615109842736274, -0.00020680672605521977, -2.3841855067985307e-07, -0.0030529340729117393, -0.0001674750237725675, -0.001574111171066761, -0.4283939003944397, -0.025611184537410736, -0.551668107509613, -0.053481847047805786, -1.3187894821166992, -0.0031163957901299, -0.32495689392089844, -0.3658633232116699, -9.274052717955783e-05, -0.00030322244856506586, -1.1444026313256472e-05, -7.033323527139146e-06, -0.0009242791566066444, -0.3083689212799072, -7.295342220459133e-05, -0.0005508335889317095, -0.06826414167881012, -0.004490767139941454, -0.0001174142598756589, -0.00020776021119672805, -0.0071766916662454605, -0.009529341012239456, -0.07685389369726181, -0.007272438146173954, -0.010713323950767517, -0.0005819296347908676, -0.0073090060614049435, -2.9971187114715576, -0.06116526573896408, -0.0051482487469911575, -1.8207749128341675, -0.03776492178440094, -0.14256882667541504, -7.068861305015162e-05, -2.545222282409668, -0.004670781549066305, -0.28242728114128113, -0.0002640137099660933, -0.24259847402572632, -7.271740287251305e-06, -0.0015936305280774832, -2.264974000354414e-06, -8.093983342405409e-05, -0.00010001159535022452, -1.2636104656849056e-05, 0.0, -5.495397272170521e-05, -0.00030596344731748104, -0.261760950088501, -0.0002261144545627758, -0.052716080099344254, -1.77768874168396, -1.3692872524261475, -0.03429323807358742, -0.3736818730831146, -0.7403427362442017, -0.27020663022994995, -0.4310668706893921, -0.0511927604675293, -0.00019143179815728217, -0.052215542644262314, -2.0509321689605713, -0.0001081169830285944, -0.0006841464783065021, -9.536738616588991e-07, -1.3708974620385561e-05, -0.00018046658078674227, -9.250213042832911e-05, -0.004067600704729557, -0.7315036654472351, -2.1351702213287354, -0.014579781331121922, -2.0349667072296143, -0.40010014176368713, -0.007509337738156319, -0.020638009533286095, -0.0918077751994133, -0.00016640232934150845, -0.291329950094223, -0.0010673070792108774, -0.07232125848531723, -3.576278118089249e-07, -2.407998726994265e-05, 0.0, -2.706014311115723e-05, 0.0, 0.0, -1.4543427823809907e-05, -0.0005178302526473999, -0.024791790172457695, -0.000521523819770664, -0.37072309851646423, -0.5097522139549255, -2.1739883422851562, -4.136476854910143e-05, -0.058172132819890976, -0.00012408917245920748, -1.5616295058862306e-05, -0.04541090503334999, -0.07750311493873596, -0.00044288364006206393, -0.0070048230700194836, -0.260952353477478, -0.12965482473373413, -0.040345195680856705, -1.1345734596252441, -0.23501849174499512, -0.09783370792865753, -0.00018380382971372455, -0.011630586348474026, -0.00010632903286023065, -0.11543052643537521, -0.17583918571472168, -0.01266013365238905, -0.42954936623573303, -0.0023136769887059927, -0.026866231113672256, -1.7881377516459906e-06, -1.1920922133867862e-06, -1.2278481335670222e-05, -8.22540732769994e-06, -2.0265558760002023e-06, -0.0009652484441176057, -3.099436753473128e-06, -6.9141146923357155e-06, -0.0014460355741903186, -0.007543057668954134, -5.07818695041351e-05, -0.002486353972926736, -0.5040102601051331, -1.1506460905075073, -0.2864341735839844, -0.00826048944145441, -0.003774543758481741, -0.05176467448472977, -1.680396556854248, -0.021078385412693024, -0.06397637724876404, -0.0005354639724828303, -1.3005506992340088, -9.786603914108127e-05, -0.824446976184845, -0.025518223643302917, -0.018088383600115776, -5.960462772236497e-07, -1.3828182090946939e-05, -5.960462772236497e-07, -0.0007270314963534474, -0.000763244170229882, -0.002141327131539583, -5.8410845667822286e-05, -2.50339189733495e-06, -0.00022504181833937764, -1.6234978437423706, -0.006878032814711332, -0.0016126735135912895, -0.00028308198670856655, -0.0005277194431982934, -0.034204188734292984, -0.5699257850646973, -0.0012441283324733377, -2.062299427052494e-05, -1.1920928244535389e-07, -1.1086402082582936e-05, -9.536738616588991e-07, -0.0040397001430392265, -1.1086402082582936e-05, -4.184158387943171e-05, -1.0728830375228426e-06, -3.576278118089249e-07, -0.00018153927521780133, -0.000459565402707085, -0.00022575691400561482, -0.018662575632333755, 0.0, -0.3292720913887024, -4.529942543740617e-06, -5.245195097813848e-06, -1.597391747054644e-05, -9.298280929215252e-06, -9.536738616588991e-07, -1.1920928244535389e-07, -0.0004462200158741325, -0.002780977636575699, -0.03027990460395813, -0.05068647116422653, -2.3841855067985307e-07, -3.576278118089249e-07, -4.017272294731811e-05, -1.6927575416048057e-05, -0.011163395829498768, -1.7881377516459906e-06, -3.3378546504536644e-06, -1.0728830375228426e-06, -2.3841830625315197e-06, -8.821448318485636e-06, -0.000176652567461133, -1.1324817933200393e-05, -1.1920928244535389e-07, -1.3470558769768104e-05, -0.00012706902634818107, -3.325883881188929e-05, -6.97350042173639e-05, -1.1290950775146484, -1.1920922133867862e-06, -4.6491513785440475e-06, -2.622600959512056e-06, -5.364403477869928e-06, -3.8742269680369645e-05, -0.009941822849214077, -2.9802276912960224e-06, -2.264974000354414e-06, -0.0003135904553346336, -0.0002826052950695157, -0.00030489088385365903, -5.2927523938706145e-05, -0.9170120358467102, -0.00845542922616005, -0.018401268869638443, -0.09619477391242981, -0.03290734067559242], "finish_reason": "length"}], "metrics": {"energy": 954.4256042070391, "energy_per_token": 3.7282250164337465, "time": 22.687885, "time_per_token": 0.08862455078125}}
{"outputs": [{"text": "# Create a summary dictionary to count the files moved\n    summary = {}\n\n    # Create a list to store invalid file names\n    invalid_files = []\n\n    # Loop over all files in the directory\n    for file in os.listdir(directory_path):\n        # Get the file extension (without the period)\n        ext = os.path.splitext(file)[1][1:]\n\n        # Check if the file name contains invalid characters\n        if any(char in INVALID_CHARACTERS for char in file):\n            # Add the file to the invalid list\n            invalid_files.append(file)\n        else:\n            # Increment the count for this file type\n            summary[ext] = summary.get(ext, 0) + 1\n\n    # Create a new directory for invalid files\n    invalid_directory = os.path.join(directory_path, 'Invalid')\n    os.mkdir(invalid_directory)\n\n    # Move the invalid files to the new directory\n    for file in invalid_files:\n        # Move the file\n        shutil.move(os.path.join(directory_", "tokens": ["#", " Create", " a", " summary", " dictionary", " to", " count", " the", " files", " moved", "\n", "    ", "summary", " =", " {}", "\n", "\n", "    ", "#", " Create", " a", " list", " to", " store", " invalid", " file", " names", "\n", "    ", "invalid", "_", "files", " =", " []", "\n", "\n", "    ", "#", " Loop", " over", " all", " files", " in", " the", " directory", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "#", " Get", " the", " file", " extension", " (", "without", " the", " period", ")", "\n", "        ", "ext", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ")[", "1", "][", "1", ":]", "\n", "\n", "        ", "#", " Check", " if", " the", " file", " name", " contains", " invalid", " characters", "\n", "        ", "if", " any", "(", "char", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", " for", " char", " in", " file", "):", "\n", "            ", "#", " Add", " the", " file", " to", " the", " invalid", " list", "\n", "            ", "invalid", "_", "files", ".", "append", "(", "file", ")", "\n", "        ", "else", ":", "\n", "            ", "#", " In", "crement", " the", " count", " for", " this", " file", " type", "\n", "            ", "summary", "[", "ext", "]", " =", " summary", ".", "get", "(", "ext", ",", " ", "0", ")", " +", " ", "1", "\n", "\n", "    ", "#", " Create", " a", " new", " directory", " for", " invalid", " files", "\n", "    ", "invalid", "_", "directory", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " '", "Invalid", "')", "\n", "    ", "os", ".", "mk", "dir", "(", "invalid", "_", "directory", ")", "\n", "\n", "    ", "#", " Move", " the", " invalid", " files", " to", " the", " new", " directory", "\n", "    ", "for", " file", " in", " invalid", "_", "files", ":", "\n", "        ", "#", " Move", " the", " file", "\n", "        ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "directory", "_"], "logprobs": [-0.8680583834648132, -1.34231698513031, -1.2660026550292969, -1.4406102895736694, -0.08881358802318573, -0.8490303754806519, -2.0560922622680664, -0.435039222240448, -1.3148339986801147, -0.05974281206727028, -2.973194122314453, -0.0010002615163102746, -0.01908230222761631, -0.0032484165858477354, -0.09100659936666489, -0.001576372655108571, -0.18206030130386353, -0.0005247407825663686, -0.03802477568387985, -1.3414455652236938, -0.5807297229766846, -2.002595901489258, -1.8123060464859009, -0.6494957804679871, -1.3921948671340942, -0.6996865272521973, -0.1611480861902237, -0.03774712607264519, -0.00011896379146492109, -0.004771750420331955, -0.047628119587898254, -0.46808433532714844, -0.002986497012898326, -0.0033500047866255045, -0.00024482590379193425, -0.007311727851629257, -0.00026067672297358513, -0.05502086877822876, -0.9412237405776978, -1.7975503206253052, -0.8580631017684937, -0.2489182949066162, -0.09973034262657166, -0.015730226412415504, -0.08944244682788849, -0.10367579013109207, -0.00011848701251437888, -0.012864338234066963, -0.5884255170822144, -1.0254751443862915, -0.012670256197452545, -1.3828182090946939e-05, -0.01928660273551941, 0.0, -0.00016044282529037446, -0.0005509527400135994, -0.00025054652360267937, 0.0, -0.00023278864682652056, -0.00036864637513644993, -0.05459090322256088, -0.1423427313566208, -1.4318363666534424, -0.02960541471838951, -0.279131144285202, -0.3885501027107239, -1.9314045906066895, -1.6849883794784546, -0.08686660975217819, -1.6840201616287231, -0.02561873570084572, -0.023554859682917595, -0.0003860443539451808, -1.9554119110107422, -0.0017076447838917375, -0.952395498752594, -4.291525328881107e-06, -0.00013958434283267707, -1.1920928244535389e-07, -0.00024375328212045133, -4.768370445162873e-07, 0.0, -2.4437606043647975e-05, -0.0011947167804464698, -0.036018453538417816, -0.0006106419023126364, -0.0979035422205925, -9.727005090098828e-05, -0.0006095697171986103, -0.023399291560053825, -0.09227399528026581, -0.000773488252889365, -0.005156669300049543, -0.3075927793979645, -0.03417124226689339, -0.06802595406770706, -0.09804339706897736, -1.352218508720398, -0.2198982834815979, -0.5684994459152222, -0.0003449321957305074, -0.02765830047428608, -0.000161038784426637, -0.27356407046318054, -0.14046335220336914, -0.01976018399000168, -0.2954768240451813, -0.0021843877620995045, -0.06558285653591156, -1.6689286894688848e-06, -1.0728830375228426e-06, -1.5497195136049413e-06, -5.960446742392378e-06, -5.722029527532868e-06, -0.0012702024541795254, -5.364403477869928e-06, -8.821448318485636e-06, -0.03763129562139511, -0.018686678260564804, -0.0002181292074965313, -0.0024889700580388308, -0.5894924998283386, -0.9746212363243103, -0.12634776532649994, -0.0633188784122467, -0.8611441254615784, -0.004035782068967819, -0.9082393646240234, -0.9757444262504578, -0.25445401668548584, -6.305972783593461e-05, -0.0007970731821842492, -3.0278701160568744e-05, -0.00011181206355104223, -0.00015507926582358778, -8.701899787411094e-05, -0.005084560252726078, -0.008133621886372566, -0.0003682888636831194, -7.879423355916515e-05, -0.4854431748390198, -0.29354074597358704, -8.070142939686775e-05, -0.002620598068460822, -0.0016052944120019674, -0.003668366465717554, -1.4609301090240479, -0.0005071069463156164, -0.021897094324231148, -0.19300055503845215, -0.6807824373245239, -1.1035699844360352, -0.46666908264160156, -0.9709161520004272, -1.5754802227020264, -9.107174992095679e-05, -0.21964164078235626, -0.12833908200263977, -0.00024339574156329036, -0.000916537712328136, -3.755022044060752e-05, -0.0014498446835204959, -0.0004119024670217186, -0.0060733528807759285, -2.455681169521995e-05, -2.074220174108632e-05, -8.987976616481319e-05, -0.0006272017490118742, -0.0001245659514097497, -0.00022885564249008894, -0.00013779645087197423, -7.676783570786938e-05, -9.65590606938349e-06, -0.0009365463047288358, -0.033538106828927994, -0.12358622997999191, -0.0037506725639104843, -0.9919087886810303, -0.2929278612136841, -1.1179444789886475, -0.056883156299591064, -0.16488522291183472, -0.040801241993904114, -0.07270897924900055, -0.37317466735839844, -0.00010132275929208845, -0.1853722780942917, -0.0008116050157696009, -2.1173014640808105, -0.018621739000082016, -0.03129089996218681, -2.7418097943154862e-06, -9.023735765367746e-05, -8.22540732769994e-06, -0.0006195771275088191, -0.0010513499146327376, -0.0040609524585306644, -0.0003333727945573628, -5.125986263010418e-06, -0.00035065223346464336, -0.47057047486305237, -0.014123957604169846, -0.0016470688860863447, -0.000289159914245829, -0.011386646889150143, -0.2594665586948395, -1.7881377516459906e-06, -0.6152294278144836, -5.960462772236497e-07, -0.00013195598148740828, -0.00012396997772157192, -3.576272320060525e-06, -1.9907753085135482e-05, -0.00021669900161214173, -0.0011632826644927263, -0.010472109541296959, -0.00031120702624320984, -0.0022149572614580393, -0.047884855419397354, -0.46935129165649414, -0.02350490912795067, -0.0028464775532484055, -0.057086408138275146, -0.011120365932583809, -0.36034703254699707, -0.0029181537684053183, -0.00880348403006792, -2.8729025871143676e-05, -0.0036819064989686012, -0.023879775777459145, -0.003574056550860405, -0.00020144341397099197, -2.062299427052494e-05, -1.6569954823353328e-05, -4.2199197196168825e-05, -1.9073304429184645e-05, -0.0006287504802457988, -2.01438045501709, -1.8196063041687012, -0.02186747081577778, -0.007117748260498047, -0.946707546710968, -0.0002867764269467443, -0.05592488497495651, -2.861018856492592e-06, -1.5497195136049413e-06, -0.00021026308240834624, -0.00011383838864276186, -0.026755282655358315, -6.318072337307967e-06, -1.8715683836489916e-05, -3.3378546504536644e-06, -8.4638240878121e-06, -2.4199192921514623e-05, -0.00032419670606032014, -8.701899787411094e-05], "finish_reason": "length"}], "metrics": {"energy": 899.1420512886054, "energy_per_token": 3.512273637846115, "time": 21.861547, "time_per_token": 0.08539666796875}}
{"outputs": [{"text": "# Create a new directory for invalid files\n    invalid_dir = os.path.join(directory_path, 'Invalid')\n    if not os.path.exists(invalid_dir):\n        os.makedirs(invalid_dir)\n\n    # Initialize summary dictionary\n    summary = {}\n\n    # Loop through all files in the directory\n    for filename in os.listdir(directory_path):\n        # Skip directories and hidden files\n        if os.path.isfile(os.path.join(directory_path, filename)) and not filename.startswith('.'):\n            # Check if file name contains invalid characters\n            if any(c in INVALID_CHARACTERS for c in filename):\n                # Move file to Invalid directory\n                shutil.move(os.path.join(directory_path, filename), invalid_dir)\n                summary['Invalid'] = summary.get('Invalid', 0) + 1\n            else:\n                # Get file extension\n                extension = os.path.splitext(filename)[1]\n                # Create directory if it doesn't exist\n                if extension not in summary:", "tokens": ["#", " Create", " a", " new", " directory", " for", " invalid", " files", "\n", "    ", "invalid", "_", "dir", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " '", "Invalid", "')", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "invalid", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "invalid", "_", "dir", ")", "\n", "\n", "    ", "#", " Initialize", " summary", " dictionary", "\n", "    ", "summary", " =", " {}", "\n", "\n", "    ", "#", " Loop", " through", " all", " files", " in", " the", " directory", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "#", " Skip", " directories", " and", " hidden", " files", "\n", "        ", "if", " os", ".", "path", ".", "is", "file", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", "))", " and", " not", " filename", ".", "start", "sw", "ith", "('", ".", "')", ":", "\n", "            ", "#", " Check", " if", " file", " name", " contains", " invalid", " characters", "\n", "            ", "if", " any", "(", "c", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", " for", " c", " in", " filename", "):", "\n", "                ", "#", " Move", " file", " to", " Invalid", " directory", "\n", "                ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", ",", " invalid", "_", "dir", ")", "\n", "                ", "summary", "['", "Invalid", "']", " =", " summary", ".", "get", "('", "Invalid", "'", ",", " ", "0", ")", " +", " ", "1", "\n", "            ", "else", ":", "\n", "                ", "#", " Get", " file", " extension", "\n", "                ", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")[", "1", "]", "\n", "                ", "#", " Create", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "                ", "if", " extension", " not", " in", " summary", ":"], "logprobs": [-0.8680583834648132, -1.34231698513031, -1.2660026550292969, -1.2267259359359741, -0.10579874366521835, -0.9106911420822144, -0.2590670585632324, -0.1779819130897522, -0.3955989181995392, -0.0006373281357809901, -0.13137944042682648, -0.0018070096848532557, -0.40041738748550415, -0.12902824580669403, -0.23073017597198486, -2.8609820219571702e-05, -0.00020251607929822057, -2.9802276912960224e-06, -0.002848854986950755, -0.0009510761592537165, -0.0038500723894685507, -0.0006549597019329667, -7.152555099310121e-07, -0.00044800734031014144, -0.5253119468688965, -0.02158145047724247, -0.002029028022661805, -0.0011267272057011724, -0.0053864819929003716, -1.3460533618927002, -0.01918463222682476, -7.259582343976945e-05, -4.887569048150908e-06, -0.00018451895448379219, -5.602820692729438e-06, -0.053796954452991486, -4.970903682988137e-05, -0.00022098960471339524, -1.7881377516459906e-06, -7.152555099310121e-07, -0.0007469248375855386, -0.0010586139978840947, -0.0018874465022236109, -0.006080699153244495, -1.1920922133867862e-06, -0.7866208553314209, -2.0265558760002023e-06, -2.622600959512056e-06, -0.00029416524921543896, -4.0411134250462055e-05, -7.152555099310121e-07, -1.1920928244535389e-07, -0.0016797969583421946, -0.0004881620698142797, -0.03327293321490288, -0.0006187431863509119, -0.1654948890209198, -0.4839155375957489, -1.4296711683273315, -0.10508103668689728, -0.07045086473226547, -0.00012885693286079913, -0.0030762276146560907, -0.0012076949933543801, -0.12626098096370697, -0.0009899006690829992, -0.02832309529185295, -0.00019000156316906214, -0.01667127199470997, -1.134197473526001, -0.12144436687231064, -0.44749584794044495, -0.09348832815885544, -0.11900278180837631, -0.06960592418909073, -0.029195409268140793, -0.059889573603868484, -7.998623186722398e-05, -0.014047320000827312, -0.8770542144775391, -7.402622577501461e-05, -0.005101876333355904, -3.576272320060525e-06, -0.00018845213344320655, -1.1920928244535389e-07, -0.0001705739414319396, -0.0001854724541772157, -4.625213477993384e-05, -7.152555099310121e-07, -0.00017832119192462415, -0.00023541064001619816, -0.01763813942670822, -0.3019677400588989, -1.33139967918396, -0.13393691182136536, -1.9707577228546143, -0.8677492737770081, -0.0016607552533969283, -0.09735017269849777, -8.594620157964528e-05, -0.0042304787784814835, -0.17974594235420227, -3.2186455882765586e-06, -9.536697689327411e-06, -2.3841855067985307e-07, -3.755022044060752e-05, -2.847598075866699, -0.0001677133986959234, -0.017468644306063652, -1.7881377516459906e-06, -4.529942543740617e-06, -2.3841855067985307e-07, -6.723177648382261e-05, -1.4305012882687151e-05, -9.047575440490618e-05, -2.396077979938127e-05, -1.1920928244535389e-07, -2.169585604860913e-05, -0.0013088955311104655, -0.0005728749092668295, -0.02590685710310936, -0.027960440143942833, -0.0038558910600841045, -0.0015587572706863284, -2.825220326485578e-05, -2.3841855067985307e-07, -3.3854863431770355e-05, -0.017524637281894684, -0.00016962042718660086, -9.941560711013153e-05, -0.0026937173679471016, -0.0004601611872203648, -0.0030990452505648136, -0.05498182773590088, -0.17561888694763184, -0.3933962881565094, -1.3145432472229004, -0.6339322924613953, -0.1427919864654541, -0.05052622780203819, -0.0009784678695723414, -0.018723532557487488, -7.879423355916515e-05, -0.11676940321922302, -0.08295629918575287, -0.023300768807530403, -0.5402818322181702, -0.001940036192536354, -0.05310717597603798, -1.1920922133867862e-06, -9.536738616588991e-07, -9.536738616588991e-07, -3.3378546504536644e-06, -4.0531076592742465e-06, -0.0012178155593574047, -2.2649508537142538e-05, -9.298280929215252e-06, -0.0005734706646762788, -0.008727147243916988, -0.00015746307326480746, -0.0004936429904773831, -0.6262394785881042, -0.044039659202098846, -0.22328630089759827, -0.004311314318329096, -2.0144689083099365, -0.03011913225054741, -0.26041048765182495, -6.12716976320371e-05, -0.04467815160751343, -1.9073468138230965e-06, -4.768370445162873e-07, -0.00013851160474587232, -6.01988795096986e-05, -0.03913378715515137, -3.933898824470816e-06, -3.4570634852570947e-06, -1.7881377516459906e-06, -8.22540732769994e-06, -1.597391747054644e-05, -0.000538680877070874, -2.4199192921514623e-05, -2.622600959512056e-06, -1.645074735279195e-05, -0.00018904806347563863, -3.707340147229843e-05, -4.053033626405522e-05, -0.6159058809280396, -3.933898824470816e-06, -4.0531076592742465e-06, -0.0014662717003375292, -0.00025900822947733104, -0.2298683226108551, -0.24600790441036224, -0.6448560953140259, -0.0012143626809120178, -0.0001932195882545784, -0.012423038482666016, -0.0026444962713867426, -0.001035987981595099, -0.014341377653181553, -0.001719426247291267, -0.00012885693286079913, -8.153582894010469e-05, -6.556489552167477e-06, -0.0003090619284193963, -0.0005936052766628563, -9.953480184776708e-05, -0.00014923889830242842, -8.642300235806033e-05, -1.2278481335670222e-05, -0.010685489512979984, -0.057010065764188766, -0.021279478445649147, -1.2278481335670222e-05, -0.000916418619453907, -0.00044276448898017406, -0.02205406315624714, -0.46939989924430847, -0.19853337109088898, -0.09225073456764221, -0.6749383807182312, -8.809178689261898e-05, -0.7948289513587952, -0.00023934361524879932, -0.14487658441066742, -1.0728830375228426e-06, -5.483612312673358e-06, -1.1920928244535389e-07, -2.5510462364763953e-05, 0.0, 0.0, -9.179073458653875e-06, -0.0003022690652869642, -0.01519051007926464, -0.0004122599493712187, -0.3836798071861267, -0.8591012954711914, -0.08460424095392227, -0.051641058176755905, -0.35592958331108093, -1.4163093566894531, -1.4439570903778076, -0.0685175284743309, -0.07704507559537888, -0.0005721600609831512, -2.47952248173533e-05, -0.0043694740161299706, -0.061844803392887115, -5.757642793469131e-05, -0.3944963216781616, -1.0049980878829956, -0.0783020555973053, -3.576278118089249e-07, -0.006020742934197187, -0.019641779363155365], "finish_reason": "length"}], "metrics": {"energy": 909.333337743759, "energy_per_token": 3.5520833505615586, "time": 22.069109, "time_per_token": 0.08620745703125}}
{"outputs": [{"text": "# Initialize summary dictionary\n    summary = {}\n\n    # Loop through all files in the directory\n    for file in os.listdir(directory_path):\n        # Get the extension of the file\n        extension = os.path.splitext(file)[1][1:]\n\n        # Check if the extension is empty or has invalid characters\n        if not extension or any(char in INVALID_CHARACTERS for char in file):\n            # Create a new directory for invalid files if it doesn't exist\n            invalid_dir = os.path.join(directory_path, 'Invalid')\n            if not os.path.exists(invalid_dir):\n                os.makedirs(invalid_dir)\n\n            # Move the file to the invalid directory\n            shutil.move(os.path.join(directory_path, file), invalid_dir)\n\n            # Update the summary dictionary\n            summary['Invalid'] = summary.get('Invalid', 0) + 1\n\n        # If the extension is valid and not empty, create a directory for it and move the file there\n        else:\n            # Create a directory for the extension", "tokens": ["#", " Initialize", " summary", " dictionary", "\n", "    ", "summary", " =", " {}", "\n", "\n", "    ", "#", " Loop", " through", " all", " files", " in", " the", " directory", "\n", "    ", "for", " file", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "#", " Get", " the", " extension", " of", " the", " file", "\n", "        ", "extension", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "file", ")[", "1", "][", "1", ":]", "\n", "\n", "        ", "#", " Check", " if", " the", " extension", " is", " empty", " or", " has", " invalid", " characters", "\n", "        ", "if", " not", " extension", " or", " any", "(", "char", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", " for", " char", " in", " file", "):", "\n", "            ", "#", " Create", " a", " new", " directory", " for", " invalid", " files", " if", " it", " doesn", "'", "t", " exist", "\n", "            ", "invalid", "_", "dir", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " '", "Invalid", "')", "\n", "            ", "if", " not", " os", ".", "path", ".", "exists", "(", "invalid", "_", "dir", "):", "\n", "                ", "os", ".", "m", "aked", "irs", "(", "invalid", "_", "dir", ")", "\n", "\n", "            ", "#", " Move", " the", " file", " to", " the", " invalid", " directory", "\n", "            ", "sh", "util", ".", "move", "(", "os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " file", ")", ",", " invalid", "_", "dir", ")", "\n", "\n", "            ", "#", " Update", " the", " summary", " dictionary", "\n", "            ", "summary", "['", "Invalid", "']", " =", " summary", ".", "get", "('", "Invalid", "'", ",", " ", "0", ")", " +", " ", "1", "\n", "\n", "        ", "#", " If", " the", " extension", " is", " valid", " and", " not", " empty", ",", " create", " a", " directory", " for", " it", " and", " move", " the", " file", " there", "\n", "        ", "else", ":", "\n", "            ", "#", " Create", " a", " directory", " for", " the", " extension"], "logprobs": [-0.8680583834648132, -1.1121305227279663, -1.4780001640319824, -0.13691186904907227, -0.16713473200798035, -0.000486970558995381, -0.008407673798501492, -0.0030791987664997578, -0.13116732239723206, -0.0009514334378764033, -0.2507548928260803, -0.00042000532266683877, -0.020836390554904938, -1.8540773391723633, -0.13350661098957062, -0.4225158989429474, -0.13600507378578186, -0.12961608171463013, -0.1228361651301384, -0.06065211072564125, -0.06985852867364883, -0.0001392267586197704, -0.015481297858059406, -0.5585532188415527, -0.709721028804779, -0.008757753297686577, -1.8000440832111053e-05, -0.014278506860136986, -1.1920928244535389e-07, -0.0001494772732257843, -0.0007924277451820672, -0.00024041623692028224, -1.1920928244535389e-07, -0.00030882356804795563, -0.0003053675754927099, -0.032830167561769485, -0.23615232110023499, -1.9544589519500732, -0.7607597708702087, -2.215416431427002, -0.11378541588783264, -0.04021546617150307, -0.047170739620923996, -0.16774475574493408, -0.0003337303060106933, -0.5216110944747925, -0.0004353767435532063, -0.3793361783027649, -3.2186455882765586e-06, -5.066266385256313e-05, -4.768370445162873e-07, -8.511180931236595e-05, -2.3841855067985307e-07, 0.0, -2.2291887944447808e-05, -0.0011426832061260939, -0.04228881374001503, -0.0006728292210027575, -0.8196994066238403, -0.00014745102089364082, -0.00041214076918549836, -0.08359893411397934, -0.16013838350772858, -0.0006236277404241264, -0.011184025555849075, -0.3930118978023529, -0.025256842374801636, -0.16508181393146515, -0.6997540593147278, -0.08258647471666336, -2.303480625152588, -1.040219783782959, -3.0565719604492188, -0.30833467841148376, -0.0017381097422912717, -0.059738997370004654, -0.00016091958968900144, -0.02711373381316662, -0.1302935928106308, -0.003608859609812498, -0.015292653813958168, -0.054894041270017624, -0.02906711772084236, -0.63981032371521, -0.0040710438042879105, -0.1944945603609085, -9.536738616588991e-07, -3.2186455882765586e-06, -4.768360213347478e-06, -1.3947389561508317e-05, -8.702239938429557e-06, -0.001167331007309258, -8.22540732769994e-06, -5.030505417380482e-05, -2.302722930908203, -0.005314389709383249, -0.0004166688595432788, -0.002444376703351736, -0.17110079526901245, -1.0046467781066895, -1.307653784751892, -0.2582310438156128, -0.11609243601560593, -0.6181002259254456, -0.09849148988723755, -0.014808026142418385, -0.36093518137931824, -0.13184919953346252, -0.06388971209526062, -0.00035553809721022844, -2.7417760065873154e-05, -0.0312952920794487, -0.030437180772423744, -0.0001230164198204875, -0.8880293965339661, -0.0014119903789833188, -0.3138296902179718, -0.03197822347283363, -0.01323262695223093, -7.152555099310121e-07, -1.9192511899746023e-05, -1.311301275563892e-06, -0.00039593485416844487, -0.0006194579764269292, -0.001965259201824665, -2.169585604860913e-05, -4.768370445162873e-07, -0.0004159538948442787, -0.4394046366214752, -0.007161068730056286, -0.0016498061595484614, -0.00013064485392533243, -0.007279656827449799, -0.05593987554311752, -0.0006609162664972246, -7.879423355916515e-05, -7.152555099310121e-07, -1.0967194612021558e-05, -1.311301275563892e-06, -0.07104429602622986, -5.376194530981593e-05, -4.005352093372494e-05, -9.536738616588991e-07, -1.1920928244535389e-07, -0.0001896439935080707, -0.00019691436318680644, -0.00030179237364791334, -0.006769461557269096, -1.1920928244535389e-07, -0.8349897861480713, -1.1920928244535389e-07, -2.074220174108632e-05, -0.00019643761334009469, -1.1205610462639015e-05, -4.529942543740617e-06, -3.576278118089249e-07, -0.0005611990345641971, -3.45700973412022e-05, -0.4684183895587921, -0.007004586048424244, -0.0014806747203692794, -0.006984106730669737, -0.03367804363369942, -0.0641762986779213, -0.0025952726136893034, -0.0078066252171993256, -0.3877980411052704, -0.004365319851785898, -0.10442134737968445, -0.00035720644518733025, -0.04509006440639496, -7.152555099310121e-07, -5.960462772236497e-07, -3.838465272565372e-05, -4.184158387943171e-05, -0.02197989635169506, -4.0531076592742465e-06, -4.768360213347478e-06, -1.7881377516459906e-06, -5.364403477869928e-06, -1.2040065485052764e-05, -0.00043525759247131646, -5.364403477869928e-06, 0.0, -2.8371408916427754e-05, -0.0002694958820939064, -2.8609820219571702e-05, -5.006664650863968e-05, -0.6615350246429443, -5.960462772236497e-07, -1.5497195136049413e-06, -0.0012896086554974318, -9.858122211880982e-05, -0.26486000418663025, -0.008915497921407223, -0.02229786291718483, -0.18210957944393158, -0.37493211030960083, -0.04270890727639198, -0.23525604605674744, -0.13368715345859528, -8.737658936297521e-05, -0.18636661767959595, -0.31480640172958374, -0.0012559153838083148, -9.357491217087954e-05, -0.0013340153964236379, -0.0020443748217076063, -0.0010761191369965672, -0.02384951151907444, -0.0017914213240146637, -0.00015245705435518175, -4.9470632802695036e-05, -3.4570634852570947e-06, -0.00037555795279331505, -0.00043764073052443564, -0.00010346830822527409, -0.00022682955022901297, -0.00015400654228869826, -8.4638240878121e-06, -0.0010617101797834039, -0.901528537273407, -0.0134924640879035, -0.9722251892089844, -2.193073272705078, -0.0467386394739151, -0.027082523331046104, -0.0839451476931572, -0.18914297223091125, -2.4778454303741455, -0.6678691506385803, -1.2823138236999512, -1.4009418487548828, -0.9393191337585449, -0.04499126225709915, -0.6443533897399902, -0.1335505247116089, -0.05865103751420975, -1.3849754333496094, -0.0035125245340168476, -0.0012837749673053622, -0.001334372558631003, -1.7270658016204834, -0.010395309887826443, -0.00010513706365600228, -0.7810303568840027, -2.002696055569686e-05, -7.30726242181845e-05, -0.0006162413046695292, -0.3972989320755005, -0.051960933953523636, -0.0162852481007576, -0.572393000125885, -0.04996585100889206, -0.005852230824530125, -0.029575208202004433], "finish_reason": "length"}], "metrics": {"energy": 889.0654967441558, "energy_per_token": 3.4729120966568585, "time": 21.638903, "time_per_token": 0.08452696484375}}
{"outputs": [{"text": "# Create the invalid directory if it doesn't exist\n    invalid_directory = os.path.join(directory_path, \"Invalid\")\n    if not os.path.exists(invalid_directory):\n        os.mkdir(invalid_directory)\n\n    # Create a dictionary to store the count of files for each ending\n    file_counts = {}\n\n    # Loop through all files in the directory\n    for filename in os.listdir(directory_path):\n        file_path = os.path.join(directory_path, filename)\n\n        # Skip directories\n        if os.path.isdir(file_path):\n            continue\n\n        # Check for invalid characters in the filename\n        if any(char in INVALID_CHARACTERS for char in filename):\n            shutil.move(file_path, os.path.join(invalid_directory, filename))\n            file_counts[\"Invalid\"] = file_counts.get(\"Invalid\", 0) + 1\n            continue\n\n        # Get the ending of the file and increment the count in the dictionary\n        ending = os.path.splitext(", "tokens": ["#", " Create", " the", " invalid", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "invalid", "_", "directory", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " \"", "Invalid", "\"", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "invalid", "_", "directory", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "invalid", "_", "directory", ")", "\n", "\n", "    ", "#", " Create", " a", " dictionary", " to", " store", " the", " count", " of", " files", " for", " each", " ending", "\n", "    ", "file", "_", "counts", " =", " {}", "\n", "\n", "    ", "#", " Loop", " through", " all", " files", " in", " the", " directory", "\n", "    ", "for", " filename", " in", " os", ".", "list", "dir", "(", "directory", "_", "path", "):", "\n", "        ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "directory", "_", "path", ",", " filename", ")", "\n", "\n", "        ", "#", " Skip", " directories", "\n", "        ", "if", " os", ".", "path", ".", "is", "dir", "(", "file", "_", "path", "):", "\n", "            ", "continue", "\n", "\n", "        ", "#", " Check", " for", " invalid", " characters", " in", " the", " filename", "\n", "        ", "if", " any", "(", "char", " in", " IN", "VALID", "_", "CHAR", "ACT", "ERS", " for", " char", " in", " filename", "):", "\n", "            ", "sh", "util", ".", "move", "(", "file", "_", "path", ",", " os", ".", "path", ".", "join", "(", "invalid", "_", "directory", ",", " filename", "))", "\n", "            ", "file", "_", "counts", "[", "\"", "Invalid", "\"", "]", " =", " file", "_", "counts", ".", "get", "(", "\"", "Invalid", "\"", ",", " ", "0", ")", " +", " ", "1", "\n", "            ", "continue", "\n", "\n", "        ", "#", " Get", " the", " ending", " of", " the", " file", " and", " increment", " the", " count", " in", " the", " dictionary", "\n", "        ", "ending", " =", " os", ".", "path", ".", "spl", "ite", "xt", "("], "logprobs": [-0.8680583834648132, -1.34231698513031, -0.9551868438720703, -4.039163112640381, -0.07517244666814804, -0.26057934761047363, -0.014099509455263615, -0.13502296805381775, -0.0003632839070633054, -4.827859811484814e-05, -0.013295328244566917, -0.06579294800758362, -0.0008632985409349203, -0.1440509855747223, -0.0007552632014267147, -1.1527669429779053, -0.051048003137111664, -0.18027456104755402, -2.8013790142722428e-05, -5.4834770708112046e-05, -1.0132738680113107e-05, -0.0009473841637372971, -0.0005097282119095325, -0.0024738681968301535, -0.0003475538978818804, -3.576278118089249e-07, -0.00035720644518733025, -0.9044493436813354, -0.027888333424925804, -0.0038020957726985216, -0.0001958416833076626, -0.0005253365379758179, -0.02003983035683632, -0.4624801278114319, -0.002328186994418502, -7.223821739898995e-05, -2.3841830625315197e-06, -9.929640509653836e-05, -7.152555099310121e-07, -0.043397221714258194, -2.8013790142722428e-05, -0.0006572232232429087, 0.0, -1.5497195136049413e-06, -0.0004847066884394735, -0.00021562635083682835, -0.0010704031446948647, -0.005095234606415033, -1.9073468138230965e-06, -0.9045082330703735, -7.152555099310121e-07, -7.855583680793643e-05, -0.00031454383861273527, -4.768370445162873e-07, -3.576278118089249e-07, -4.482168878894299e-05, -0.0002015625941567123, -0.03422964736819267, -0.0010621865512803197, -0.18516169488430023, -1.446152925491333, -0.3040008842945099, -0.3894093334674835, -0.04919387400150299, -0.6195653080940247, -0.08084604144096375, -0.7748293876647949, -0.032334115356206894, -0.05796235054731369, -2.8596384525299072, -0.0003488647344056517, -1.3154637813568115, -0.04768051579594612, -0.0001389883691444993, -2.485887289047241, -0.004734614863991737, -0.6387317180633545, -0.0012423424050211906, -0.04014366492629051, -0.0008518642862327397, -0.023839501664042473, -0.00010275312524754554, -0.04110492765903473, -0.9071661233901978, -0.14528077840805054, -0.5223656892776489, -0.18825429677963257, -0.10926028341054916, -0.008695948868989944, -0.02624436281621456, -0.12087208777666092, -0.00010168035078095272, -0.02088063769042492, -0.844144344329834, -9.667406266089529e-05, -0.0035930618178099394, -1.2993727978027891e-05, -9.846202738117427e-05, 0.0, -8.21318244561553e-05, -0.0003700763627421111, -2.2649508537142538e-05, -1.1920928244535389e-07, -0.00012742661056108773, -0.000192504478036426, -0.008772643283009529, -1.441016435623169, -0.47992071509361267, -0.019186854362487793, -0.00020323118951637298, -0.00023731753753963858, -5.960462772236497e-07, -1.0013530300057027e-05, -3.576278118089249e-07, -0.00013422065239865333, -4.887569048150908e-06, -8.105902816168964e-05, -9.298280929215252e-06, -1.0967194612021558e-05, -7.033323527139146e-06, -5.543078441405669e-05, -2.3483953555114567e-05, -0.002638908103108406, -0.4108394682407379, -0.00038187362952157855, -0.05724954605102539, -0.7807132005691528, -0.323901504278183, -0.4493567943572998, -4.255681051290594e-05, -0.00011824862303910777, -0.12931162118911743, -5.960462772236497e-07, -6.48477507638745e-05, -4.6491513785440475e-06, -1.1444026313256472e-05, -0.00550670363008976, -3.313963316031732e-05, -0.000922969076782465, -3.576272320060525e-06, -1.0728830375228426e-06, -0.001259844284504652, -0.0013406822690740228, -0.000161038784426637, -0.0019104102393612266, -0.0002683041093405336, -0.0012940136948600411, -0.0009438112610951066, -0.028186462819576263, -0.31146031618118286, -1.9995768070220947, -0.01685895398259163, -0.004118532873690128, -0.1872570812702179, -0.07839343696832657, -0.37708580493927, -0.052102167159318924, -0.00013267113536130637, -0.38258588314056396, -0.03555147722363472, -0.01885128766298294, -0.5883199572563171, -0.002063052263110876, -0.05480162054300308, -8.344646857949556e-07, -1.5497195136049413e-06, -3.576278118089249e-07, -1.07287787614041e-05, -3.576278118089249e-07, -0.0005843124235980213, -5.006777428206988e-06, -1.0967194612021558e-05, -0.0010781434830278158, -0.007574646733701229, -0.00010132275929208845, -0.00460575707256794, -0.929100751876831, -1.0728830375228426e-06, -7.152555099310121e-07, -5.9602869441732764e-05, -9.65590606938349e-06, -0.0023054706398397684, -2.861018856492592e-06, -1.1920922133867862e-06, -3.4450891689630225e-05, -1.09408438205719, -3.576272320060525e-06, -4.6491513785440475e-06, -4.172316494077677e-06, -1.1444026313256472e-05, -5.066266385256313e-05, -0.013093093410134315, -2.9802276912960224e-06, -5.328513361746445e-05, -0.0008687774534337223, -0.0012335318606346846, -0.0003408804477658123, -0.0003970073303207755, -0.05807360261678696, -0.7348689436912537, -4.0411134250462055e-05, -0.001980725908651948, -0.46087050437927246, -0.0024346255231648684, -0.003244138788431883, -0.0003399271226953715, -6.985420623095706e-05, -0.0003494605771265924, -0.0029265929479151964, -1.0728830375228426e-06, -1.764281842042692e-05, -0.00031192204914987087, -0.005266245920211077, -0.0003625689132604748, -0.0019338493002578616, -8.463501580990851e-05, -5.722029527532868e-06, -0.00011145447206217796, -0.0002619877050165087, -0.0005221195751801133, -4.7205765440594405e-05, -0.00034683887497521937, -5.07818695041351e-05, -1.8000440832111053e-05, -0.0038104087579995394, -0.6529666185379028, -0.050546515733003616, -0.0012691308511421084, -0.0008834273321554065, -0.0005519058904610574, -0.030690275132656097, -0.5421488881111145, -0.01675146073102951, -1.5625900030136108, -0.13886703550815582, -0.0043760016560554504, -0.34925079345703125, -1.836139440536499, -1.6326149702072144, -0.38100048899650574, -0.09572961926460266, -1.013549566268921, -0.0022946475073695183, -0.0065177008509635925, -0.0016074366867542267, -5.125868119648658e-05, -0.2741154432296753, -0.000426439888542518, -0.7579285502433777, -2.264974000354414e-06, -1.4185804502631072e-05, -2.3841855067985307e-07, -3.075552376685664e-05, -4.768370445162873e-07, 0.0, -8.821448318485636e-06], "finish_reason": "length"}], "metrics": {"energy": 1008.0229791584001, "energy_per_token": 3.9375897623375002, "time": 24.359182, "time_per_token": 0.0951530546875}}
