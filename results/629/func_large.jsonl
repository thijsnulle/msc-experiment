{"outputs": [{"text": "if not os.path.exists(output_dir):\n        os.makedirs(output_dir)\n\n    path = os.path.join(output_dir, filename)\n    with open(path, 'w') as file:\n        for i in range(len(dataset)):\n            df = dataset[i]\n            if i != 0:\n                file.write('------\\n')\n            df.to_csv(file, index=False)\n\n    return", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "output", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "output", "_", "dir", ")", "\n", "\n", "    ", "path", " =", " os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", "\n", "    ", "with", " open", "(", "path", ",", " '", "w", "')", " as", " file", ":", "\n", "        ", "for", " i", " in", " range", "(", "len", "(", "dataset", "))", ":", "\n", "            ", "df", " =", " dataset", "[", "i", "]", "\n", "            ", "if", " i", " ", "!", "=", " ", "0", ":", "\n", "                ", "file", ".", "write", "('", "---", "---", "\\", "n", "')", "\n", "            ", "df", ".", "to", "_", "csv", "(", "file", ",", " index", "=", "False", ")", "\n", "\n", "    ", "return", "\n", "\n", "def"], "logprobs": [-1.9865838289260864, -0.20879869163036346, -0.042863212525844574, -2.169585604860913e-05, -0.0026385514065623283, -1.3351351299206726e-05, -0.1747117042541504, -0.002238270128145814, -0.01560653280466795, -4.756337511935271e-05, -4.172316494077677e-06, -0.0020053531043231487, -0.018315594643354416, -0.024649672210216522, -0.04584073647856712, -1.728519782773219e-05, -0.148239403963089, -2.0265558760002023e-06, -6.556489552167477e-06, -0.0009504806366749108, -0.003473322605714202, -0.00010513706365600228, -0.00013040646445006132, -0.006915444042533636, -0.022287137806415558, -1.0464370250701904, -0.002104093786329031, -2.311131000518799, -0.06287746876478195, -0.039207953959703445, -1.4305104514278355e-06, -0.00025602878304198384, -1.0132738680113107e-05, -0.004681104328483343, -0.001025627483613789, -0.0071984692476689816, -1.823885577323381e-05, -1.0609570381348021e-05, -0.001128989621065557, -0.08293073624372482, -0.01259833388030529, -0.006331740878522396, -0.767870306968689, -0.6775793433189392, -0.0023987111635506153, -0.00048303857329301536, -0.0029061485547572374, -0.001585775287821889, -0.24197199940681458, -0.03304402157664299, -0.15282604098320007, -0.00027938754647038877, -1.6229896545410156, -0.011192159727215767, -0.007064128294587135, -0.014019225724041462, -0.11112099140882492, -0.8826436996459961, -2.7837071418762207, -0.05575701966881752, -0.002375758718699217, -0.03026660345494747, -0.00010561384988250211, -0.0012246021069586277, -0.01747860200703144, -0.0003967689990531653, -0.003773237345740199, -0.008527177385985851, -2.618772506713867, -0.029220417141914368, -0.008821799419820309, -0.002678974997252226, -0.00027307120035402477, -0.0014394884929060936, -0.03790828585624695, -0.0474071279168129, -2.8423049449920654, -0.10346642136573792, -1.260695219039917, -3.576278118089249e-07, -4.6491513785440475e-06, -0.012943890877068043, -0.0001431601122021675, -0.0074901701882481575, -0.06019739806652069, -0.0016430224059149623, -0.1165534183382988, -0.00033766290289349854, -0.0013473490253090858, -0.27587053179740906, -0.8548091053962708, -0.03842945396900177, -0.5538667440414429, -0.0022819212172180414, -0.06352776288986206, -0.0915290042757988, -0.082780621945858, -0.11391253769397736, -0.004064158070832491, -0.004527318757027388, -2.0146166207268834e-05, -0.0010306290350854397, -7.080780778778717e-05, -0.054329220205545425, -0.020194754004478455, -0.4657049775123596, -0.005053959786891937, -0.042459867894649506, -0.2389453500509262, -0.016106726601719856, -0.2652647793292999, -1.9962941408157349, -1.041419506072998, -1.3683816194534302, -0.046822819858789444, -0.6024037003517151], "finish_reason": "stop"}], "metrics": {"energy": 482.5389652347565, "energy_per_token": 4.159818665816866, "time": 10.64819, "time_per_token": 0.09179474137931035}}
{"outputs": [{"text": "if output_dir and not os.path.exists(output_dir):\n        os.makedirs(output_dir)\n    start = time.perf_counter()\n    with open(os.path.join(output_dir,filename), \"w\", encoding=\"utf-8\") as file:\n        for i, data in enumerate(dataset):\n            if i != 0:\n                file.write(\"\\n------\\n\\n\")\n            data.to_csv(file, index=False)\n        end = time.perf_counter()\n        return end - start", "tokens": ["if", " output", "_", "dir", " and", " not", " os", ".", "path", ".", "exists", "(", "output", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "output", "_", "dir", ")", "\n", "    ", "start", " =", " time", ".", "perf", "_", "counter", "()", "\n", "    ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", "filename", ")", ",", " \"", "w", "\"", ",", " encoding", "=", "\"", "utf", "-", "8", "\"", ")", " as", " file", ":", "\n", "        ", "for", " i", ",", " data", " in", " enumerate", "(", "dataset", "):", "\n", "            ", "if", " i", " ", "!", "=", " ", "0", ":", "\n", "                ", "file", ".", "write", "(", "\"", "\\", "n", "---", "---", "\\", "n", "\\", "n", "\"", ")", "\n", "            ", "data", ".", "to", "_", "csv", "(", "file", ",", " index", "=", "False", ")", "\n", "        ", "end", " =", " time", ".", "perf", "_", "counter", "()", "\n", "        ", "return", " end", " -", " start", "\n", "\n", "def"], "logprobs": [-1.9865838289260864, -2.7300922870635986, -0.0002760506176855415, -0.00023636408150196075, -2.015239715576172, -0.1451798379421234, -0.004778750240802765, -6.794906312279636e-06, -0.0007413261337205768, -1.9073304429184645e-05, -0.1398433893918991, -0.0006690170848742127, -0.005276206880807877, -2.9444261599564925e-05, -2.3841830625315197e-06, -0.0012702024541795254, -0.015534351579844952, -0.03314516320824623, -0.06845329701900482, -1.3708974620385561e-05, -0.14601244032382965, -5.125986263010418e-06, -2.0265558760002023e-06, -0.001328062848187983, -0.003045684425160289, -2.753696753643453e-05, -0.00019393471302464604, -0.018010994419455528, -0.025555524975061417, -0.44149160385131836, -3.657745838165283, -0.8299279808998108, -0.02379910834133625, -0.00020561488054227084, -1.2987802028656006, -2.5510462364763953e-05, -1.9073468138230965e-06, -0.032271675765514374, -0.0688980370759964, -0.12384346127510071, -1.2939237356185913, -0.0036162238102406263, -0.005772942211478949, -0.15664765238761902, -6.556489552167477e-06, -0.00043764073052443564, -6.794906312279636e-06, -0.0017564359586685896, -0.0011226787464693189, -0.021469565108418465, -7.450303382938728e-05, -1.6927575416048057e-05, -0.006441544275730848, -3.063007354736328, -0.01934495009481907, -0.009815169498324394, -1.852538824081421, -0.05857526510953903, -0.01997533068060875, -1.0339584350585938, -0.6379950642585754, -0.5327619314193726, -0.002451511798426509, -0.10647981613874435, -0.029497895389795303, -0.000687958556227386, -0.004501210525631905, -0.06986286491155624, -0.0005646541831083596, -1.2884304523468018, -0.03124087117612362, -0.01153124962002039, -0.018959607928991318, -0.1117580458521843, -0.8355469703674316, -0.12500503659248352, -1.5210113525390625, -0.5453360676765442, -0.0006058764411136508, -0.00018749863374978304, -0.003290478838607669, -0.02628140337765217, -0.006510949693620205, -0.007225098554044962, -1.8507862091064453, -0.059271395206451416, -2.0461456775665283, -1.5497195136049413e-06, -4.0531076592742465e-06, -0.013155568391084671, -0.00014506718434859067, -0.011284103617072105, -0.03569630905985832, -0.0013429442187771201, -0.06038292124867439, -0.0001134808044298552, -0.001999285537749529, -0.021274344995617867, -0.03498080372810364, -1.499213695526123, -0.0013259199913591146, -1.0661286115646362, -0.014050023630261421, -0.6060211062431335, -6.48477507638745e-05, -0.8730083107948303, -0.00012134769349358976, -0.0019791792146861553, -0.008595730178058147, -0.08085868507623672, -0.024780509993433952, -0.08952823281288147, -0.008611330762505531, -0.005558629520237446, -4.434487345861271e-05, -0.0016905077500268817, -2.777537883957848e-05, -0.0867915228009224, -0.010943985544145107, -0.447310209274292, -0.0033887361641973257, -0.04518726095557213, -0.35573408007621765, -0.004760598298162222, -2.4793779850006104, -1.218446969985962, -0.018715577200055122, -0.005013394635170698, -1.7762025890988298e-05, -0.0013365155318751931, -5.960446742392378e-06, -0.0001546025014249608, -0.0004637358069885522, -0.032671306282281876, -0.3207930326461792, -3.2155256271362305, -1.0232595205307007, -0.40949514508247375, -0.014014876447618008, -0.8167830109596252, -0.09761922061443329, -0.9503517746925354], "finish_reason": "stop"}], "metrics": {"energy": 578.9356770153046, "energy_per_token": 4.077011809966933, "time": 12.928855, "time_per_token": 0.09104827464788733}}
{"outputs": [{"text": "path = os.path.join(output_dir, filename)\n    with open(path, \"w\") as f:\n        for i, df in enumerate(dataset):\n            df.to_csv(f, index=False)\n            if i < len(dataset) - 1:\n                f.write(\"------\\n\")", "tokens": ["path", " =", " os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", "\n", "    ", "with", " open", "(", "path", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "        ", "for", " i", ",", " df", " in", " enumerate", "(", "dataset", "):", "\n", "            ", "df", ".", "to", "_", "csv", "(", "f", ",", " index", "=", "False", ")", "\n", "            ", "if", " i", " <", " len", "(", "dataset", ")", " -", " ", "1", ":", "\n", "                ", "f", ".", "write", "(", "\"", "---", "---", "\\", "n", "\"", ")", "\n", "\n", "if"], "logprobs": [-2.318084716796875, -0.05094265192747116, -0.05042274668812752, -2.2291887944447808e-05, -0.0012866322649642825, -5.8530047681415454e-05, -0.016246426850557327, -0.0025825502816587687, -0.02357698231935501, -9.655486064730212e-05, -4.291525328881107e-06, -0.007963691838085651, -0.09532179683446884, -0.014641928486526012, -0.020014241337776184, -0.15263929963111877, -0.4390549659729004, -0.003618955845013261, -0.0008147019543685019, -0.005951066501438618, -0.002316412515938282, -1.7541491985321045, -0.061165712773799896, -0.025175590068101883, -0.38324615359306335, -0.00010883215873036534, -0.576738178730011, -0.03874383866786957, -0.008133858442306519, -0.010386697016656399, -0.14736461639404297, -0.7481142282485962, -0.08259756118059158, -0.2683601379394531, -0.005154652986675501, -0.00029952809563837945, -0.000105375460407231, -0.0023371067363768816, -0.005673496052622795, -0.006200363393872976, -0.004622606560587883, -0.3839211165904999, -0.011784225702285767, -0.00827786885201931, -2.3007127310847864e-05, -0.0005796659388579428, -3.4450891689630225e-05, -0.010595849715173244, -0.07440541684627533, -0.4476873278617859, -0.011471384204924107, -0.03864406421780586, -0.11153510957956314, -0.005139354150742292, -0.020570045337080956, -0.13173697888851166, -0.007659352850168943, -0.147266685962677, -0.007059867028146982, -3.397406908334233e-05, -0.004770682659000158, -0.06141787767410278, -4.0411134250462055e-05, -0.004185607191175222, -0.0001565095444675535, -0.0006943913758732378, -0.048878103494644165, -0.0012368656462058425, -0.2675432860851288, -8.618460560683161e-05, -0.00017712931730784476, -0.06216222047805786, -0.02755057066679001, -0.5870510339736938, -0.034887559711933136, -0.3575274348258972, -0.001016814960166812, -0.014372400939464569, -0.05491085350513458, -0.049647603183984756, -0.4013036787509918, -2.282022714614868], "finish_reason": "stop"}], "metrics": {"energy": 362.69172699356074, "energy_per_token": 4.423069841384887, "time": 7.947909, "time_per_token": 0.09692571951219513}}
{"outputs": [{"text": "path = os.path.join(output_dir, filename)\n    # print(f\"start writing {path}...\")\n    with open(path, \"w\", encoding='UTF8') as f:\n        for df in dataset:\n            df.to_csv(f, sep=',', index=False)\n            f.write('\\n')\n            f.write('\\n')\n            df.to_csv(f, sep=',', index=False)\n            f.write('\\n')\n            df.to_csv(f, sep=',', index=False)\n            f.write('\\n')\n            f.write('\\n')\n            f.write('\\n')\n            df.to_csv(f, sep=',', index=False)\n            f.write('\\n')\n            f.write('\\n')\n            df.to_csv(f, sep=',', index=False)\n            f.write('\\n')\n            f.write('\\n')\n            df.to_csv(f, sep=','", "tokens": ["path", " =", " os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", "\n", "    ", "#", " print", "(", "f", "\"", "start", " writing", " {", "path", "}", ".", ".", ".", "\"", ")", "\n", "    ", "with", " open", "(", "path", ",", " \"", "w", "\"", ",", " encoding", "='", "UTF", "8", "')", " as", " f", ":", "\n", "        ", "for", " df", " in", " dataset", ":", "\n", "            ", "df", ".", "to", "_", "csv", "(", "f", ",", " sep", "='", ",", "'", ",", " index", "=", "False", ")", "\n", "            ", "f", ".", "write", "('", "\\", "n", "')", "\n", "            ", "f", ".", "write", "('", "\\", "n", "')", "\n", "            ", "df", ".", "to", "_", "csv", "(", "f", ",", " sep", "='", ",", "'", ",", " index", "=", "False", ")", "\n", "            ", "f", ".", "write", "('", "\\", "n", "')", "\n", "            ", "df", ".", "to", "_", "csv", "(", "f", ",", " sep", "='", ",", "'", ",", " index", "=", "False", ")", "\n", "            ", "f", ".", "write", "('", "\\", "n", "')", "\n", "            ", "f", ".", "write", "('", "\\", "n", "')", "\n", "            ", "f", ".", "write", "('", "\\", "n", "')", "\n", "            ", "df", ".", "to", "_", "csv", "(", "f", ",", " sep", "='", ",", "'", ",", " index", "=", "False", ")", "\n", "            ", "f", ".", "write", "('", "\\", "n", "')", "\n", "            ", "f", ".", "write", "('", "\\", "n", "')", "\n", "            ", "df", ".", "to", "_", "csv", "(", "f", ",", " sep", "='", ",", "'", ",", " index", "=", "False", ")", "\n", "            ", "f", ".", "write", "('", "\\", "n", "')", "\n", "            ", "f", ".", "write", "('", "\\", "n", "')", "\n", "            ", "df", ".", "to", "_", "csv", "(", "f", ",", " sep", "='", ",", "'"], "logprobs": [-2.318084716796875, -0.05094265192747116, -0.05042274668812752, -2.2291887944447808e-05, -0.0012866322649642825, -5.8530047681415454e-05, -0.016246426850557327, -0.0025825502816587687, -0.02357698231935501, -9.655486064730212e-05, -4.291525328881107e-06, -0.007963691838085651, -0.09532179683446884, -0.014641928486526012, -0.020014241337776184, -0.15263929963111877, -3.002554416656494, -3.360933303833008, -0.2471216320991516, -1.6161384582519531, -0.6155226826667786, -3.84736967086792, -1.5411666631698608, -0.7143988609313965, -1.1248472929000854, -1.3046787977218628, -1.7285950183868408, -0.23149481415748596, -0.042280927300453186, -0.0703224241733551, -0.019787298515439034, -0.009029271081089973, -0.12552301585674286, -0.4258174002170563, -0.0036320213694125414, -0.0006249382277019322, -0.006191833410412073, -0.0013524680398404598, -1.5838007926940918, -0.0813378393650055, -0.04570886865258217, -1.1942358016967773, -0.5359212756156921, -1.3024399280548096, -1.9847218990325928, -0.11851455271244049, -0.01509786769747734, -0.000226472009671852, -0.44719740748405457, -0.049174919724464417, -0.015904473140835762, -0.011282688938081264, -0.29060250520706177, -1.0503405332565308, -0.004825256764888763, -0.00511610833927989, -0.009272369556128979, -0.0074848453514277935, -0.003267190419137478, -0.18300940096378326, -0.011070143431425095, -0.007480822503566742, -1.2516897186287679e-05, -0.000589792791288346, -2.47952248173533e-05, -0.0070315757766366005, -0.00617809034883976, -0.9442155957221985, -0.7412629127502441, -0.26510384678840637, -0.030616285279393196, -0.0008144637104123831, -0.2824472486972809, -0.022320011630654335, -0.27334126830101013, -0.3504202365875244, -0.008799112401902676, -0.025760482996702194, -0.4295107424259186, -9.381330892210826e-05, -0.004436175338923931, -1.5743520259857178, -0.9065724015235901, -0.001100054127164185, -0.5626274943351746, -0.0766386091709137, -0.05960434302687645, -0.23079518973827362, -7.688703772146255e-05, -0.011359184980392456, -0.3326985239982605, -1.4806493520736694, -0.0055153584107756615, -0.2999095320701599, -0.010775947012007236, -0.05918196216225624, -2.4681386947631836, -0.2946762144565582, -0.07435838133096695, -5.507317473529838e-05, -0.23543475568294525, -0.003475460922345519, -0.16818787157535553, -0.013719193637371063, -0.020652489736676216, -0.010426809079945087, -0.027301205322146416, -0.048425838351249695, -0.00017009719158522785, -0.006291464436799288, -0.0010798105504363775, -0.028248466551303864, -0.017689906060695648, -0.02531902678310871, -0.03777054324746132, -0.18014295399188995, -0.0001541257370263338, -0.007944532670080662, -0.05821768194437027, -0.1838022768497467, -0.00023672162205912173, -0.09199155122041702, -0.006292056757956743, -0.03375941514968872, -2.625645637512207, -0.008285317569971085, -0.004957170691341162, -1.2993727978027891e-05, -0.00253700977191329, -5.6265202147187665e-05, -0.0006148116663098335, -0.0002535260282456875, -0.0003225283289793879, -0.00025555206229910254, -0.00015877417172305286, -0.0007700338610447943, -3.802703940891661e-05, -0.001157805323600769, -9.548207890475169e-05, -0.0032276222482323647, -0.00518145551905036, -0.0015461406437680125, -0.060279108583927155, -0.10449684411287308, -3.969590397900902e-05, -0.00038425691309385, -0.03936154022812843, -0.033576495945453644, -0.0010912423022091389, -0.04463927820324898, -0.0016964580863714218, -0.10665673017501831, -0.8654399514198303, -0.0008026715368032455, -0.0022255433723330498, -0.06362888962030411, -0.3811911344528198, -0.0010131231974810362, -0.05422963201999664, -0.006517226807773113, -0.19392745196819305, -0.6673149466514587, -0.0006221981020644307, -0.0061508407816290855, -0.12843291461467743, -0.46380382776260376, -0.001095529063604772, -0.03410683944821358, -0.006504317279905081, -0.1323665827512741, -1.0442266464233398, -0.0021437061950564384, -0.0003389737685211003, -2.3841855067985307e-07, -0.001312348060309887, -2.0265373677830212e-05, -0.00019238528329879045, -7.438383181579411e-05, -0.0001821352052502334, -0.00010632903286023065, -0.0003358753747306764, -0.00041333239641971886, -1.9073304429184645e-05, -0.0011231550015509129, -3.7431014789035544e-05, -0.0007863528444431722, -0.001148755894973874, -0.0005315321614034474, -0.014138061553239822, -0.05300271883606911, -2.3603161025675945e-05, -0.00033945043105632067, -0.008573509752750397, -0.0047086309641599655, -8.583032467868179e-06, -0.0059571098536252975, -0.0005951540661044419, -0.025657661259174347, -0.8824963569641113, -0.00019834458362311125, -0.0010399178136140108, -0.013562323525547981, -0.031539157032966614, -9.07141511561349e-05, -0.0012536532012745738, -0.0010517071932554245, -0.04635187238454819, -0.5030057430267334, -0.0013062763027846813, -0.0007522851810790598, -7.152555099310121e-07, -0.002754824236035347, -4.529942543740617e-06, -3.3378044463461265e-05, -4.5298504119273275e-05, -8.260862523457035e-05, -0.00014757021563127637, -2.5987286790041253e-05, -0.0004544417606666684, -2.002696055569686e-05, -0.0008280424517579377, -1.597391747054644e-05, -0.0008419782971031964, -0.0009317824151366949, -0.00030501006403937936, -0.01003175787627697, -0.014521154575049877, -9.298280929215252e-06, -0.00012730741582345217, -0.005416835192590952, -0.0020590072963386774, -2.1219027985353023e-05, -0.0012274596374481916, -0.0014813889283686876, -0.02364218235015869, -0.5029183030128479, -7.974783511599526e-05, -0.001117201172746718, -0.022808821871876717, -0.019088733941316605, -0.00016664070426486433, -0.0005504761938937008, -0.0021048076450824738, -0.04083649069070816, -0.4365326464176178, -0.0005210472736507654, -0.0002849888114724308, -9.536738616588991e-07, -2.1815061700181104e-05, -2.861018856492592e-06, -3.8265450712060556e-05, -9.48860906646587e-05, -2.2411095415009186e-05, -5.495397272170521e-05, -4.589452510117553e-05, -0.0002503081923350692], "finish_reason": "length"}], "metrics": {"energy": 1043.984880815507, "energy_per_token": 4.078065940685574, "time": 23.827087, "time_per_token": 0.09307455859375}}
{"outputs": [{"text": "path = os.path.join(output_dir, filename)\n    if os.path.exists(path):\n        print(f\"{filename} already exists.\")\n    else:\n        with open(path, 'w') as f:\n            for df in dataset:\n                df.to_csv(f, sep=';', header=True, index=False)\n                f.write(\"\\n\"+\"-\" * 150 + \"\\n\")", "tokens": ["path", " =", " os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", "\n", "    ", "if", " os", ".", "path", ".", "exists", "(", "path", "):", "\n", "        ", "print", "(", "f", "\"", "{", "filename", "}", " already", " exists", ".", "\"", ")", "\n", "    ", "else", ":", "\n", "        ", "with", " open", "(", "path", ",", " '", "w", "')", " as", " f", ":", "\n", "            ", "for", " df", " in", " dataset", ":", "\n", "                ", "df", ".", "to", "_", "csv", "(", "f", ",", " sep", "='", ";", "'", ",", " header", "=", "True", ",", " index", "=", "False", ")", "\n", "                ", "f", ".", "write", "(", "\"", "\\", "n", "\"", "+", "\"", "-", "\"", " *", " ", "1", "5", "0", " +", " \"", "\\", "n", "\"", ")", "\n", "\n", "def"], "logprobs": [-2.318084716796875, -0.05094265192747116, -0.05042274668812752, -2.2291887944447808e-05, -0.0012866322649642825, -5.8530047681415454e-05, -0.016246426850557327, -0.0025825502816587687, -0.02357698231935501, -9.655486064730212e-05, -4.291525328881107e-06, -0.007963691838085651, -0.09532179683446884, -0.014641928486526012, -0.020014241337776184, -0.15263929963111877, -2.553488254547119, -0.748224139213562, -1.8000440832111053e-05, -0.0046732728369534016, -1.3351351299206726e-05, -0.24086442589759827, -0.0004357342259027064, -0.042598675936460495, -0.04829647019505501, -0.02739829197525978, -0.024850746616721153, -1.2417205572128296, -0.1355082094669342, -0.19895416498184204, -0.3148348331451416, -1.4928847551345825, -0.5734083652496338, -0.03297124430537224, -0.32113730907440186, -0.04074287414550781, -1.2896580696105957, -1.8290683031082153, -0.008188958279788494, -0.0034746292512863874, -1.394212245941162, -0.18316176533699036, -0.0007936188485473394, -0.001096005435101688, -0.01263152901083231, -0.354221373796463, -0.004074249416589737, -0.001023007556796074, -0.031712520867586136, -0.0019163592951372266, -0.17458446323871613, -0.045525044202804565, -0.12865222990512848, -0.00036864637513644993, -0.3629269003868103, -0.024968767538666725, -0.010465267114341259, -0.00754932826384902, -0.1599484235048294, -0.6012867093086243, -0.003731314092874527, -0.005006040912121534, -0.01225713174790144, -0.0053990501910448074, -0.0013336582342162728, -0.15053790807724, -0.010167352855205536, -0.005519507452845573, -2.4318398573086597e-05, -0.0005639393348246813, -5.924526340095326e-05, -0.005854364018887281, -0.02873288094997406, -0.5928061604499817, -0.5641078948974609, -1.37711501121521, -0.08522381633520126, -0.0037677744403481483, -2.4428210258483887, -0.017398355528712273, -0.04375489056110382, -0.12051349133253098, -0.03567755967378616, -0.008161645382642746, -0.2488822340965271, -0.1781463325023651, -0.018347665667533875, -0.02263425663113594, -0.2632615566253662, -0.000380324519937858, -0.003885103389620781, -0.9204638600349426, -0.20807719230651855, -1.1662300825119019, -0.001963474787771702, -0.3743188679218292, -2.7511982917785645, -0.2243151217699051, -0.19553890824317932, -0.002209128811955452, -1.2820804119110107, -0.010022434405982494, -0.8159801959991455, -1.912065029144287, -0.8566308617591858, -1.0147360563278198, -0.14844073355197906, -0.011177895590662956, -0.0009471459779888391, -0.09645601361989975, -0.11117570847272873, -0.06393992900848389, -1.0104542970657349, -0.566166341304779], "finish_reason": "stop"}], "metrics": {"energy": 479.512174987793, "energy_per_token": 4.206247149015728, "time": 10.881922, "time_per_token": 0.09545545614035088}}
{"outputs": [{"text": "os.makedirs(output_dir, exist_ok=True)\n    with open(os.path.join(output_dir, filename), 'w') as f:\n        for i, data in enumerate(dataset):\n            data.to_csv(f, index=False)\n            if i < len(dataset)-1:\n                f.write('------\\n')", "tokens": ["os", ".", "m", "aked", "irs", "(", "output", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "for", " i", ",", " data", " in", " enumerate", "(", "dataset", "):", "\n", "            ", "data", ".", "to", "_", "csv", "(", "f", ",", " index", "=", "False", ")", "\n", "            ", "if", " i", " <", " len", "(", "dataset", ")-", "1", ":", "\n", "                ", "f", ".", "write", "('", "---", "---", "\\", "n", "')", "\n", "\n", "def"], "logprobs": [-2.398678779602051, -0.004549747332930565, -0.05447576195001602, -1.3232143828645349e-05, -7.128461584215984e-05, -0.0008818790083751082, -0.03556424751877785, -5.566918844124302e-05, -8.821448318485636e-06, -0.011648260988295078, -0.006485485937446356, -2.9802276912960224e-06, -1.490105023549404e-05, -0.012737465091049671, -0.0008956949459388852, -0.0006849803612567484, -0.10378734022378922, -0.12078165262937546, -1.300238013267517, -0.0021714221220463514, -0.005705618765205145, -0.2159515619277954, -5.245195097813848e-06, -0.0008903353591449559, -2.0265558760002023e-06, -0.0008956949459388852, -0.0006288696313276887, -0.008034410886466503, -2.407998726994265e-05, -2.861018856492592e-06, -0.0013871104456484318, -0.11972886323928833, -0.008903446607291698, -0.0019936938770115376, -0.17441566288471222, -0.021746400743722916, -0.24842391908168793, -0.00040415700641460717, -0.3373053967952728, -0.034924741834402084, -0.014117962680757046, -0.01475176215171814, -0.11309439688920975, -0.8769795298576355, -0.04187357425689697, -2.022610664367676, -0.39788150787353516, -0.00044324109330773354, -0.00018606838420964777, -0.0034490879625082016, -0.01179930567741394, -0.005090727470815182, -0.003959080204367638, -0.5373379588127136, -0.012638120912015438, -0.006958181504160166, -0.00013457823661156, -0.000821014866232872, -6.425174069590867e-05, -0.0024667331017553806, -0.032732222229242325, -0.5777020454406738, -0.009383031167089939, -0.034376055002212524, -0.23826605081558228, -0.004339444916695356, -0.011411750689148903, -0.08881086111068726, -0.010291366837918758, -0.1808139532804489, -0.009820480830967426, -2.455681169521995e-05, -0.0024114358238875866, -2.3026320934295654, -0.0008123196894302964, -0.0014578201808035374, -0.07572418451309204, -0.002526545897126198, -0.24799515306949615, -0.0001003691868390888, -0.000542493537068367, -0.1693827211856842, -0.9922174215316772, -0.04873720929026604, -0.3656871020793915, -0.0020367607939988375, -0.02664211392402649, -0.0823386088013649, -0.29350003600120544, -0.43792060017585754], "finish_reason": "stop"}], "metrics": {"energy": 360.4830406436919, "energy_per_token": 4.005367118263243, "time": 8.346095, "time_per_token": 0.0927343888888889}}
{"outputs": [{"text": "filepath = os.path.join(output_dir, filename)\n\n    with open(filepath, 'w') as f:\n        for i, df in enumerate(dataset):\n            df.to_csv(f, sep=';', encoding='utf-8', index=False, header=False if i != 0 else True)\n            f.write('\\n')\n            f.write('------\\n')\n            f.write('\\n')", "tokens": ["file", "path", " =", " os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", "\n", "\n", "    ", "with", " open", "(", "file", "path", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "for", " i", ",", " df", " in", " enumerate", "(", "dataset", "):", "\n", "            ", "df", ".", "to", "_", "csv", "(", "f", ",", " sep", "='", ";", "'", ",", " encoding", "='", "utf", "-", "8", "'", ",", " index", "=", "False", ",", " header", "=", "False", " if", " i", " ", "!", "=", " ", "0", " else", " True", ")", "\n", "            ", "f", ".", "write", "('", "\\", "n", "')", "\n", "            ", "f", ".", "write", "('", "---", "---", "\\", "n", "')", "\n", "            ", "f", ".", "write", "('", "\\", "n", "')", "\n", "\n", "def"], "logprobs": [-2.736722946166992, -0.6077775359153748, -0.0073806000873446465, -0.036990925669670105, -2.0861407392658293e-05, -0.0020341435447335243, -1.3828182090946939e-05, -0.014460057951509953, -0.0016944350209087133, -0.019613375887274742, -0.00010382589971413836, -4.0531076592742465e-06, -0.0028912907000631094, -0.09961856156587601, -0.010954362340271473, -0.018519936129450798, -1.9072322845458984, -0.0024894457310438156, -0.7255434989929199, -0.0032921424135565758, -0.0007030876004137099, -0.0038239466957747936, -7.521823135903105e-05, -0.0019474128494039178, -0.26960331201553345, -0.031066041439771652, -0.3064292371273041, -0.00020632999076042324, -0.5217224359512329, -0.03503156453371048, -0.011888720095157623, -0.030123643577098846, -0.17310310900211334, -0.5674867630004883, -0.07418561726808548, -0.2714720368385315, -0.006355905439704657, -0.0001436368766007945, -5.328513361746445e-05, -0.0016352864913642406, -0.00459460262209177, -0.007754224818199873, -0.007403082679957151, -0.27311185002326965, -0.014622426591813564, -0.007141775917261839, -2.1815061700181104e-05, -0.0006922471220605075, -3.9457496313843876e-05, -0.004479730501770973, -0.06404973566532135, -0.965381383895874, -0.4964648485183716, -1.929661750793457, -0.2792784869670868, -0.009364962577819824, -1.6683435440063477, -0.0076081277802586555, -0.035550788044929504, -0.020597489550709724, -0.002232917817309499, -0.34737512469291687, -0.0005547653418034315, -0.019087564200162888, -0.009773734025657177, -0.05092112347483635, -2.4002864360809326, -1.1760601997375488, -0.14882633090019226, -1.7752270698547363, -0.9282266497612, -0.02894587442278862, -2.0029067993164062, -7.152555099310121e-07, -2.3841830625315197e-06, -0.021408656612038612, -0.0005768066039308906, -0.004265140276402235, -0.0014787701657041907, -0.02215574122965336, -0.03386993706226349, -0.048284657299518585, -0.41019755601882935, -5.876845170860179e-05, -0.0025991962756961584, -0.1820688396692276, -0.5471639633178711, -0.0012490098597481847, -0.9156124591827393, -0.0864139273762703, -0.15524980425834656, -0.1290885955095291, -2.47952248173533e-05, -0.0035321249160915613, -0.06645763665437698, -0.2063799500465393, -0.020909590646624565, -0.6691397428512573, -0.0006450717919506133, -0.12460286915302277, -0.04840743914246559, -0.5185115337371826, -0.09595101326704025, -3.671578815556131e-05, -0.0032884590327739716, -0.0028173536993563175, -0.01553235575556755, -0.00041059168870560825, -0.01092853955924511, -0.0466727651655674, -0.2605131268501282, -0.8068151473999023], "finish_reason": "stop"}], "metrics": {"energy": 477.65555054664605, "energy_per_token": 4.26478170130934, "time": 10.239231, "time_per_token": 0.09142170535714286}}
{"outputs": [{"text": "# Check if the output directory exists. If not, create it\n    if not os.path.exists(output_dir):\n        os.makedirs(output_dir)\n\n    # Construct the file path using the output directory and the filename\n    file_path = os.path.join(output_dir, filename)\n\n    # Initialize an empty string to store the formatted DataFrames\n    formatted_dataframes = ''\n\n    # Iterate through the DataFrames in the dataset list\n    for dataframe in dataset:\n        # Convert the DataFrame to a string, including the index and header\n        formatted_dataframes += dataframe.to_string(index=True, header=True)\n\n        # Add a separator line to the formatted DataFrame\n        formatted_dataframes += \"\\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------", "tokens": ["#", " Check", " if", " the", " output", " directory", " exists", ".", " If", " not", ",", " create", " it", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "output", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "output", "_", "dir", ")", "\n", "\n", "    ", "#", " Construct", " the", " file", " path", " using", " the", " output", " directory", " and", " the", " filename", "\n", "    ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", "\n", "\n", "    ", "#", " Initialize", " an", " empty", " string", " to", " store", " the", " formatted", " Data", "F", "rames", "\n", "    ", "form", "atted", "_", "data", "frames", " =", " ''", "\n", "\n", "    ", "#", " Iter", "ate", " through", " the", " Data", "F", "rames", " in", " the", " dataset", " list", "\n", "    ", "for", " data", "frame", " in", " dataset", ":", "\n", "        ", "#", " Convert", " the", " Data", "Frame", " to", " a", " string", ",", " including", " the", " index", " and", " header", "\n", "        ", "form", "atted", "_", "data", "frames", " +=", " data", "frame", ".", "to", "_", "string", "(", "index", "=", "True", ",", " header", "=", "True", ")", "\n", "\n", "        ", "#", " Add", " a", " separ", "ator", " line", " to", " the", " formatted", " Data", "Frame", "\n", "        ", "form", "atted", "_", "data", "frames", " +=", " \"", "\\", "nlogprobs": [-1.4896069765090942, -2.190518856048584, -0.29031336307525635, -0.5668047070503235, -0.2569136321544647, -0.1594107747077942, -0.08448932319879532, -2.014151096343994, -0.2258153259754181, -0.22506564855575562, -0.0063437046483159065, -0.06332413852214813, -0.06139186769723892, -1.7331717014312744, -0.008137878961861134, -0.0767287090420723, -0.0246012881398201, -0.0023974028881639242, -4.291525328881107e-06, -0.00125698687043041, -2.5510462364763953e-05, -0.16396479308605194, -0.0017447738209739327, -0.023702487349510193, -5.090107151772827e-05, -1.8715683836489916e-05, -0.0012487717904150486, -0.004320098087191582, -0.014914906583726406, -0.03867767006158829, -7.986990567587782e-06, -0.0928044319152832, -3.4570634852570947e-06, -2.4437606043647975e-05, -0.0005144941387698054, -0.004268820397555828, -0.00027366707217879593, -0.008471623994410038, -0.0025844527408480644, -0.004469880368560553, -0.44972631335258484, -0.003707560710608959, -0.12969085574150085, -1.075229287147522, -0.019424689933657646, -1.696298599243164, -0.19268541038036346, -3.29252290725708, -0.7329387664794922, -0.4214728772640228, -0.047454651445150375, -0.04124518483877182, -0.9751317501068115, -0.7231876254081726, -0.06441965699195862, -0.0010994586627930403, -0.17525239288806915, -0.7996525764465332, -0.00518774101510644, -0.0011681645410135388, -0.02977309748530388, -2.145764938177308e-06, -6.401333666872233e-05, -2.50339189733495e-06, -0.0010596857173368335, -0.0004363300104159862, -0.006464166566729546, -1.0013530300057027e-05, -3.099436753473128e-06, -0.0004563482361845672, -0.01679108291864395, -0.005258775316178799, -0.0026666102930903435, -0.06840831786394119, -0.001698124222457409, -0.09375113993883133, -2.5686254501342773, -1.0552242994308472, -0.009947370737791061, -0.8323590159416199, -0.5870987176895142, -0.4861530363559723, -0.029442105442285538, -2.8491883277893066, -1.5646041631698608, -0.20634211599826813, -5.364403477869928e-06, -0.05915263667702675, -0.0005519058904610574, -0.2622896730899811, -0.0033092519734054804, -0.04965123534202576, -0.9780575633049011, -1.0297226905822754, -0.005596801172941923, -0.7215346693992615, -0.002120985882356763, -0.03533332794904709, -0.0011162485461682081, -0.03052748739719391, -0.492902934551239, -0.0005667987279593945, -0.9831371307373047, -0.4963721036911011, -0.6203722953796387, -0.004957882221788168, -8.940656698541716e-06, -0.13521835207939148, -0.0046833585947752, -0.7013492584228516, -0.748009979724884, -0.033076200634241104, -0.00029774048016406596, -0.00365043175406754, -2.5933573246002197, -0.1274864822626114, -0.01317521557211876, -0.0011014830088242888, -0.00564801087602973, -0.0025254758074879646, -0.0772930458188057, -0.01938037760555744, -0.30726301670074463, -0.09172055125236511, -0.08784089982509613, -0.003919539507478476, -0.06697596609592438, -0.03204137831926346, -0.28187230229377747, -3.4603185653686523, -1.4623850584030151, -0.6244683861732483, -0.687294065952301, -1.2581219673156738, -1.4646766185760498, -0.2291058450937271, -0.000346362212439999, -1.279340147972107, -0.0009841842111200094, -0.027344588190317154, -0.16282321512699127, -0.4088224470615387, -0.004382767248898745, -0.06318392604589462, -2.6464111215318553e-05, -0.00010227633902104571, -0.0004615910293068737, -2.622600959512056e-06, -0.5185949802398682, -0.005870363209396601, -0.06289806216955185, -0.006793142296373844, -0.008573746308684349, -0.007821528241038322, -0.0031691587064415216, -0.001602795091457665, -0.002173920162022114, -0.023048359900712967, -0.24310995638370514, -1.7650772333145142, -0.009385157376527786, -0.0006575806182809174, -0.4179867208003998, -0.1697567105293274, -1.4558440446853638, -5.9602869441732764e-05, -0.5513132810592651, -1.5061615705490112, -0.32996585965156555, -0.13873982429504395, -0.2867298126220703, -2.52651047706604, -0.8276478052139282, -0.00015233787416946143, -0.08733808249235153, -7.152555099310121e-07, -1.5735502529423684e-05, -0.00013767725613433868, -8.594620157964528e-05, -0.0015944637125357985, -1.487779140472412, -0.13182036578655243, -0.0037561357021331787, -0.36977484822273254, -0.003185794921591878, -0.8105125427246094, -0.09866788238286972, -0.08571302890777588, -0.08541810512542725, -0.07033531367778778, -0.04323215037584305, -0.0443398542702198, -0.10935422033071518, -0.1373615860939026, -0.0849815309047699, -0.08000312745571136, -0.0944429561495781, -0.05857391655445099, -0.08088155090808868, -0.15983261168003082, -0.08515758812427521, -0.10046310722827911, -0.14206714928150177, -0.13652727007865906, -0.10436518490314484, -0.15375298261642456, -0.19454775750637054, -0.08369849622249603, -0.0666823759675026, -0.2506004273891449, -0.13265350461006165, -0.09307089447975159, -0.06923569738864899, -0.1313372105360031, -0.10048197209835052, -0.16555611789226532, -0.11808689683675766, -0.13167773187160492, -0.1742095649242401, -0.07994579523801804, -0.22933703660964966, -0.21403859555721283, -0.12853869795799255, -0.11080188304185867, -0.09554143995046616, -0.11455972492694855, -0.06660553812980652, -0.07687564194202423, -0.0775609239935875, -0.09686846286058426, -0.08821336925029755, -0.07002248615026474, -0.05986823886632919, -0.060010265558958054, -0.07947786152362823, -0.07508497685194016, -0.08432356268167496, -0.09003517031669617, -0.048239562660455704, -0.04047674313187599, -0.05978110432624817, -0.03971721976995468, -0.0581161193549633, -0.05495666712522507, -0.0552792102098465, -0.05041254684329033, -0.04936567693948746, -0.04256942868232727, -0.029650550335645676, -0.036800552159547806, -0.03429058566689491, -0.04844832792878151, -0.06918508559465408, -0.046537935733795166, -0.027067556977272034, -0.032425407320261], "finish_reason": "length"}], "metrics": {"energy": 1047.0950180225366, "energy_per_token": 4.0902149141505335, "time": 23.765099, "time_per_token": 0.09283241796875}}
{"outputs": [{"text": "os.makedirs(output_dir, exist_ok=True)\n\n    with open(os.path.join(output_dir, filename), 'w') as f:\n        for df in dataset:\n            df.to_csv(f, sep=\";\", index=False)\n            f.write('\\n')\n            f.write('-' * 5 + '\\n')\n            f.write('\\n')", "tokens": ["os", ".", "m", "aked", "irs", "(", "output", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "for", " df", " in", " dataset", ":", "\n", "            ", "df", ".", "to", "_", "csv", "(", "f", ",", " sep", "=", "\"", ";", "\"", ",", " index", "=", "False", ")", "\n", "            ", "f", ".", "write", "('", "\\", "n", "')", "\n", "            ", "f", ".", "write", "('", "-'", " *", " ", "5", " +", " '\\", "n", "')", "\n", "            ", "f", ".", "write", "('", "\\", "n", "')", "\n", "\n", "def"], "logprobs": [-2.398678779602051, -0.004549747332930565, -0.05447576195001602, -1.3232143828645349e-05, -7.128461584215984e-05, -0.0008818790083751082, -0.03556424751877785, -5.566918844124302e-05, -8.821448318485636e-06, -0.011648260988295078, -0.006485485937446356, -2.9802276912960224e-06, -1.490105023549404e-05, -0.012737465091049671, -0.0008956949459388852, -0.0006849803612567484, -0.10378734022378922, -2.177536725997925, -0.0021799865644425154, -0.9340490102767944, -0.0021303833927959204, -0.0048772175796329975, -0.2725738286972046, -6.318072337307967e-06, -0.000757645582780242, -1.5497195136049413e-06, -0.001022531185299158, -0.0005416594794951379, -0.009747054427862167, -2.0861407392658293e-05, -2.861018856492592e-06, -0.0018397325184196234, -0.11111586540937424, -0.010372658260166645, -0.0021297885105013847, -0.1715373992919922, -0.02738669142127037, -0.3184579908847809, -0.0004936429904773831, -0.3871295750141144, -0.041996460407972336, -0.011791530065238476, -0.027403278276324272, -0.16179755330085754, -0.9625424742698669, -0.010209007188677788, -0.003973922226577997, -0.013585020788013935, -0.005347827915102243, -0.0067422278225421906, -0.30205270648002625, -0.015805209055542946, -0.008149584755301476, -2.098061486321967e-05, -0.0007539528887718916, -8.105902816168964e-05, -0.0037316703237593174, -0.016401352360844612, -1.0841999053955078, -1.153122901916504, -1.1834697723388672, -1.5452948808670044, -0.0004923323867842555, -0.05394752696156502, -0.27327975630760193, -0.01333861704915762, -0.07021119445562363, -0.24019533395767212, -0.019182059913873672, -0.07258370518684387, -0.29798635840415955, -6.651657167822123e-05, -0.001290918211452663, -0.42444849014282227, -0.5558958053588867, -0.0013467537937685847, -0.6537479162216187, -0.11148520559072495, -0.10027042031288147, -0.12732990086078644, -0.00014172980445437133, -0.005043521989136934, -0.14826253056526184, -2.0506186485290527, -0.1695885956287384, -0.007246875204145908, -1.9081265926361084, -0.9865193367004395, -0.026725221425294876, -0.0038854596205055714, -0.16353639960289001, -0.04455707594752312, -0.07694894075393677, -0.010968983173370361, -1.728519782773219e-05, -0.000505677133332938, -0.0006995138246566057, -0.023963693529367447, -7.426462980220094e-05, -0.008250085636973381, -0.027093546465039253, -0.22491124272346497, -0.6236943602561951], "finish_reason": "stop"}], "metrics": {"energy": 426.0807987365725, "energy_per_token": 4.136706783850219, "time": 9.406312, "time_per_token": 0.09132341747572816}}
{"outputs": [{"text": "# Create the output directory if it doesn't exist\n    os.makedirs(output_dir, exist_ok=True)\n\n    # Construct the output path with the current timestamp\n    timestamp = time.strftime('%Y%m%d_%H%M%S')\n    output_path = os.path.join(output_dir, timestamp + '.csv')\n\n    # Initialize an empty string to store the DataFrames\n    dataframes_string = ''\n\n    # Iterate through the DataFrames\n    for df in dataset:\n        # Convert the DataFrame to a string and append it to the dataframes_string\n        df_string = df.to_csv(header=True, index=False)\n        dataframes_string += df_string + '------\\n'\n\n    # Write the dataframes_string to the file\n    with open(output_path, 'a') as file:\n        file.write(dataframes_string)\n\n    print(f\"DataFrame written to {output_path}\")", "tokens": ["#", " Create", " the", " output", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "output", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "#", " Construct", " the", " output", " path", " with", " the", " current", " timestamp", "\n", "    ", "timestamp", " =", " time", ".", "str", "ftime", "('", "%", "Y", "%", "m", "%", "d", "_", "%", "H", "%", "M", "%", "S", "')", "\n", "    ", "output", "_", "path", " =", " os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " timestamp", " +", " '", ".", "csv", "')", "\n", "\n", "    ", "#", " Initialize", " an", " empty", " string", " to", " store", " the", " Data", "F", "rames", "\n", "    ", "data", "frames", "_", "string", " =", " ''", "\n", "\n", "    ", "#", " Iter", "ate", " through", " the", " Data", "F", "rames", "\n", "    ", "for", " df", " in", " dataset", ":", "\n", "        ", "#", " Convert", " the", " Data", "Frame", " to", " a", " string", " and", " append", " it", " to", " the", " data", "frames", "_", "string", "\n", "        ", "df", "_", "string", " =", " df", ".", "to", "_", "csv", "(", "header", "=", "True", ",", " index", "=", "False", ")", "\n", "        ", "data", "frames", "_", "string", " +=", " df", "_", "string", " +", " '", "---", "---", "\\", "n", "'", "\n", "\n", "    ", "#", " Write", " the", " data", "frames", "_", "string", " to", " the", " file", "\n", "    ", "with", " open", "(", "output", "_", "path", ",", " '", "a", "')", " as", " file", ":", "\n", "        ", "file", ".", "write", "(", "data", "frames", "_", "string", ")", "\n", "\n", "    ", "print", "(", "f", "\"", "DataFrame", " written", " to", " {", "output", "_", "path", "}\"", ")", "\n", "\n", "if"], "logprobs": [-1.4896069765090942, -1.6443589925765991, -0.22492961585521698, -0.23621247708797455, -0.055281803011894226, -0.01743759959936142, -0.004437955562025309, -0.3082602322101593, -0.001991552533581853, -3.361645576660521e-05, -0.04157286509871483, -0.06732496619224548, -0.009558506309986115, -1.247867465019226, -0.000219321038457565, -0.0021271714940667152, -2.3841855067985307e-07, -2.4676019165781327e-05, -0.0003069168305955827, -0.016960691660642624, -2.8371408916427754e-05, -5.9602869441732764e-05, -0.0016073177102953196, -0.0005896736984141171, -2.145764938177308e-06, -2.3483953555114567e-05, -0.0032467530108988285, -0.0004920940846204758, -0.00045980370487086475, -0.0033060437999665737, -0.33992910385131836, -0.0017606009496375918, -0.10253779590129852, -1.0458722114562988, -0.01509281899780035, -2.1355667114257812, -1.7078793048858643, -2.74164080619812, -0.38207006454467773, -1.7747514247894287, -1.2943048477172852, -0.17552898824214935, -0.0012379371328279376, -0.6313681602478027, -0.04985607787966728, -0.12308230996131897, -1.6331539882230572e-05, -0.010700586251914501, -8.344646857949556e-07, -0.43031272292137146, -0.016380010172724724, -0.009557089768350124, -0.25955721735954285, -0.000514851592015475, -8.618460560683161e-05, -0.0014172281371429563, -0.6551682949066162, -7.1403817855753e-05, -0.0003352795320097357, -0.011940550990402699, -4.207999518257566e-05, -0.013116036541759968, -8.201262971851975e-05, -0.10819999128580093, -0.01813930831849575, -0.009521784260869026, -0.2570669651031494, -0.0030270253773778677, -0.0506642609834671, -0.0025206005666404963, -0.07359593361616135, -8.4638240878121e-06, -0.0001389883691444993, -2.8729025871143676e-05, -0.0012375799706205726, -0.002745432546362281, -0.018953407183289528, -1.5258672647178173e-05, -2.13382354559144e-05, -0.0007141662063077092, -2.765305280685425, -0.3822390139102936, -2.2900538444519043, -1.0878316164016724, -0.041532497853040695, -0.001866623992100358, -0.004122331738471985, -0.04935762286186218, -0.001488054753281176, -0.20379316806793213, -2.4604291915893555, -0.7424798607826233, -0.007126625627279282, -1.054989218711853, -0.39465710520744324, -0.6026462316513062, -0.06121135130524635, -2.9298925399780273, -0.29031944274902344, -5.960446742392378e-06, -0.9536077380180359, -0.0002727136597968638, -0.7177906632423401, -1.0584442615509033, -1.983270525932312, -2.3661279678344727, -0.0012855607783421874, -0.6012436151504517, -0.0004551566671580076, -0.04359889775514603, -0.0003638797497842461, -0.029698343947529793, -0.825056791305542, -0.0008694920688867569, -1.050926685333252, -0.2814456820487976, -0.42298924922943115, -0.003980690147727728, -5.960462772236497e-07, -1.2365217208862305, -5.638440416078083e-05, -0.0025849281810224056, -0.5031154751777649, -0.011153846979141235, -0.0012273406609892845, -0.0034563345834612846, -0.0009742995607666671, -0.023117320612072945, -0.03253215178847313, -0.21779891848564148, -0.12243323773145676, -0.057237498462200165, -0.0018876844551414251, -0.02014147862792015, -0.04136139899492264, -0.17381270229816437, -1.7437350749969482, -0.332319051027298, -0.09105068445205688, -0.03542675822973251, -0.03146696463227272, -0.8686486482620239, -0.010007563978433609, -0.0171370692551136, -0.0003682888636831194, -0.18106882274150848, -0.00046528480015695095, -2.8682568073272705, -0.006639325991272926, -0.19432584941387177, -0.001279607880860567, -0.0228724405169487, -0.00020847532141488045, -0.0037228816654533148, -4.6491513785440475e-06, -0.04083671793341637, -0.19206129014492035, -1.647368311882019, -0.00534747214987874, -0.053702060133218765, -0.09206167608499527, -0.006125011947005987, -0.0010144332190975547, -0.21014535427093506, -0.10498917102813721, -0.1596543788909912, -0.008742273785173893, -0.020743684843182564, -1.966933996300213e-05, -3.099436753473128e-06, -5.364403477869928e-06, -0.002070070942863822, -0.018846256658434868, -0.0005110388156026602, -0.00012337400403339416, -0.5067947506904602, -1.4313483238220215, -0.04546262323856354, -0.03837106376886368, -0.260986864566803, -0.01109160017222166, -0.036657605320215225, -0.17843617498874664, -0.008083722554147243, -0.00748780369758606, -0.01594201847910881, -0.3078736364841461, -0.0053137969225645065, -0.5081139802932739, -0.002786683849990368, -0.0061767869628965855, -0.0005571481888182461, -0.0029797223396599293, -0.023118602111935616, -1.5605337619781494, -0.1336388736963272, -0.0005467826849780977, -0.01440365705639124, -0.0005494038923643529, -0.0009847796754911542, -0.008849803358316422, -9.536738616588991e-07, -2.9682672902708873e-05, -0.0016089839627966285, -0.06525681167840958, -2.8051371574401855, -0.21049870550632477, -0.00015448330668732524, -0.4551107585430145, -0.0010645681759342551, -0.01698729768395424, -0.0065605733543634415, -0.025144435465335846, -2.706014311115723e-05, -0.0008245882345363498, -0.013175921514630318, -0.021906891837716103, -2.6940935640595853e-05, -1.9788545614574105e-05, -3.886147169396281e-05, -0.1263105720281601, -0.013196744956076145, -0.08642596006393433, -1.6234490871429443, -1.0154976844787598, -0.08762829005718231, -0.1485549956560135, -0.432006299495697, -2.5333070755004883, -0.788274884223938, -0.03147343173623085, -0.4132894277572632, -0.05164298042654991, -3.3378546504536644e-06, -0.017163434997200966, -0.17605054378509521, -0.17201828956604004, -0.026435131207108498, -0.11710993945598602, -1.4279652833938599], "finish_reason": "stop"}], "metrics": {"energy": 984.5543873329163, "energy_per_token": 4.102309947220485, "time": 22.31961, "time_per_token": 0.09299837500000001}}
{"outputs": [{"text": "# Check if the output directory exists and create it if necessary\n    if not os.path.exists(output_dir):\n        os.makedirs(output_dir)\n\n    # Build the output file path using os.path.join\n    filepath = os.path.join(output_dir, filename)\n\n    # Initialize an empty string to store the file content\n    file_content = \"\"\n\n    # Loop through each DataFrame in the input dataset\n    for df in dataset:\n        # Convert the DataFrame to a CSV string using to_csv and concatenate the resulting CSV to the file_content\n        file_content += df.to_csv(index=False)\n        # Add the separator line (------) to the file_content\n        file_content += \"------\\n\"\n\n    # Write the file_content to the specified file using a context manager (with)\n    with open(filepath, 'w') as file:\n        file.write(file_content)", "tokens": ["#", " Check", " if", " the", " output", " directory", " exists", " and", " create", " it", " if", " necessary", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "output", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "output", "_", "dir", ")", "\n", "\n", "    ", "#", " Build", " the", " output", " file", " path", " using", " os", ".", "path", ".", "join", "\n", "    ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", "\n", "\n", "    ", "#", " Initialize", " an", " empty", " string", " to", " store", " the", " file", " content", "\n", "    ", "file", "_", "content", " =", " \"", "\"", "\n", "\n", "    ", "#", " Loop", " through", " each", " Data", "Frame", " in", " the", " input", " dataset", "\n", "    ", "for", " df", " in", " dataset", ":", "\n", "        ", "#", " Convert", " the", " Data", "Frame", " to", " a", " CS", "V", " string", " using", " to", "_", "csv", " and", " concaten", "ate", " the", " resulting", " CS", "V", " to", " the", " file", "_", "content", "\n", "        ", "file", "_", "content", " +=", " df", ".", "to", "_", "csv", "(", "index", "=", "False", ")", "\n", "        ", "#", " Add", " the", " separ", "ator", " line", " (", "---", "---", ")", " to", " the", " file", "_", "content", "\n", "        ", "file", "_", "content", " +=", " \"", "---", "---", "\\", "n", "\"", "\n", "\n", "    ", "#", " Write", " the", " file", "_", "content", " to", " the", " specified", " file", " using", " a", " context", " manager", " (", "with", ")", "\n", "    ", "with", " open", "(", "file", "path", ",", " '", "w", "')", " as", " file", ":", "\n", "        ", "file", ".", "write", "(", "file", "_", "content", ")", "\n", "\n", "def"], "logprobs": [-1.4896069765090942, -2.190518856048584, -0.29031336307525635, -0.5668047070503235, -0.2569136321544647, -0.1594107747077942, -0.08448932319879532, -2.0455079078674316, -0.09528115391731262, -0.029054611921310425, -0.0014726994559168816, -1.7034201622009277, -0.09108866751194, -0.011241433210670948, -0.1129702553153038, -0.01874845288693905, -0.0019508631667122245, -2.861018856492592e-06, -0.0008238735608756542, -3.0397906812140718e-05, -0.09743474423885345, -0.0016614693449810147, -0.025057129561901093, -4.95898348162882e-05, -4.2437604861333966e-05, -0.0007917130133137107, -0.0015648273983970284, -0.007520104292780161, -0.02634515054523945, -6.079655122448457e-06, -0.08389625698328018, -3.099436753473128e-06, -6.198863957251888e-06, -0.0005497612874023616, -0.0027926277834922075, -0.00012659224739763886, -0.0029530986212193966, -0.002271930454298854, -0.0026153665967285633, -0.3382341265678406, -0.0033959834836423397, -0.11336051672697067, -3.303511619567871, -0.03001999668776989, -2.310004949569702, -0.3924029767513275, -0.09727586805820465, -2.0548534393310547, -1.3049492835998535, -0.06273897737264633, -0.026779189705848694, -0.007935662753880024, -0.002142040990293026, -0.6234835982322693, -0.0010211020708084106, -0.6215941905975342, -0.5207314491271973, -0.0014078239910304546, -0.0009778724052011967, -2.3841855067985307e-07, -0.00010334911348763853, -1.07287787614041e-05, -0.0020009512081742287, -0.00040165462996810675, -0.007315041497349739, -1.8715683836489916e-05, -2.264974000354414e-06, -0.000376034586224705, -0.019917253404855728, -0.005878066644072533, -0.0028169972356408834, -0.052369292825460434, -0.0016215997748076916, -0.11389530450105667, -2.5261940956115723, -0.9922134280204773, -0.014108442701399326, -1.143128514289856, -0.6445106267929077, -0.4768740236759186, -0.04854429140686989, -2.2308883666992188, -1.0534191131591797, -0.015824217349290848, -0.0007048744591884315, -0.3864409923553467, -0.028351949527859688, -0.0528678335249424, -0.0013547299895435572, -0.6617912650108337, -0.0021591701079159975, -0.0008505540899932384, -0.033575572073459625, -0.0005783553933724761, -0.0193469375371933, -0.856529951095581, -0.4870266616344452, -0.3924725353717804, -0.09103631228208542, -0.0008519833791069686, -0.07340763509273529, -0.009218273684382439, -1.5919716358184814, -1.3303569555282593, -0.1693580597639084, -0.0002317160106031224, -0.0037074419669806957, -0.9666562676429749, -0.008259662427008152, -0.0011544713051989675, -0.003644967917352915, -0.0014122284483164549, -0.03814595565199852, -0.01109961699694395, -0.38719499111175537, -0.06090518832206726, -0.17685315012931824, -0.00039772229501977563, -0.04538208618760109, -0.07848910242319107, -1.997420072555542, -7.152531907195225e-06, -0.07478612661361694, -0.6903088688850403, -0.8637397289276123, -0.00012218205665703863, -0.06418971717357635, -3.0589206218719482, -3.472365379333496, -7.915183232398704e-05, -2.890305995941162, -1.8505678176879883, -2.5714240074157715, -0.00024029705673456192, -2.202908515930176, -0.47593146562576294, -0.12069851160049438, -0.901340126991272, -0.0009977606823667884, -0.32671576738357544, -0.00032395837479270995, -0.06893909722566605, -7.152531907195225e-06, -3.45700973412022e-05, -0.007960616610944271, -0.025523800402879715, -0.00010716341057559475, -0.0013084192760288715, -2.50339189733495e-06, -0.0006759266252629459, -0.19344156980514526, -0.1767638474702835, -0.0036918832920491695, -0.01779378578066826, -0.0738934725522995, -0.3231058418750763, -0.3237431049346924, -0.012028186582028866, -0.2215930074453354, -2.9286632537841797, -0.3286745548248291, -0.00041166413575410843, -0.6675540208816528, -2.033259868621826, -1.6605024337768555, -0.014759750105440617, -0.08321015536785126, -0.5319598913192749, -0.09917809814214706, -0.019567551091313362, -0.04488321766257286, -1.2278481335670222e-05, -0.21271471679210663, -0.00043478095903992653, -0.006597049068659544, -1.5497195136049413e-06, -2.264974000354414e-06, -0.00017975145601667464, -0.03646693751215935, -0.37552785873413086, -0.0116349458694458, -0.10758036375045776, -0.0013256819220259786, -0.01201216783374548, -0.012595743872225285, -0.0178923849016428, -0.0027655235026031733, -0.006333043798804283, -0.8460245728492737, -0.004873896017670631, -0.24897053837776184, -0.33466261625289917, -0.0004140473320148885, -0.05357789248228073, -0.015822457149624825, -1.548771619796753, -0.06715075671672821, -0.8680062294006348, -1.7945057153701782, -0.21893031895160675, -0.01414511352777481, -0.8574063777923584, -0.23789559304714203, -1.4843764305114746, -0.18030303716659546, -0.0006814065272919834, -0.10904331505298615, -0.00018404220463708043, -0.0003591130953282118, -0.0018560340395197272, -2.95634672511369e-05, -0.0003381395654287189, -0.8803750872612, -0.0090486453846097, -0.20461802184581757, -0.00017128908075392246, -1.2078347206115723, -0.007668343838304281, -0.0007427555974572897, -0.004696054384112358, -0.3016301989555359, -0.00030322244856506586, -0.00033122775494121015, -0.0003551805857568979, -0.0007306052139028907, -3.302042750874534e-05, -4.172316494077677e-06, -0.06631005555391312, -0.02245255373418331, -0.07315681874752045, -1.0132019519805908], "finish_reason": "stop"}], "metrics": {"energy": 1013.8939517993928, "energy_per_token": 4.389151306490878, "time": 21.452488, "time_per_token": 0.09286791341991342}}
{"outputs": [{"text": "path = os.path.join(output_dir, filename)\n    with open(path, 'w') as f:\n        for i in range(len(dataset)):\n            df = dataset[i]\n            df.to_csv(f, index=False)\n            if i < len(dataset) - 1:\n                f.write('\\n' + '-'*6 + '\\n')", "tokens": ["path", " =", " os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", "\n", "    ", "with", " open", "(", "path", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "for", " i", " in", " range", "(", "len", "(", "dataset", "))", ":", "\n", "            ", "df", " =", " dataset", "[", "i", "]", "\n", "            ", "df", ".", "to", "_", "csv", "(", "f", ",", " index", "=", "False", ")", "\n", "            ", "if", " i", " <", " len", "(", "dataset", ")", " -", " ", "1", ":", "\n", "                ", "f", ".", "write", "('", "\\", "n", "'", " +", " '", "-'", "*", "6", " +", " '\\", "n", "')", "\n", "\n", "def"], "logprobs": [-2.318084716796875, -0.05094265192747116, -0.05042274668812752, -2.2291887944447808e-05, -0.0012866322649642825, -5.8530047681415454e-05, -0.016246426850557327, -0.0025825502816587687, -0.02357698231935501, -9.655486064730212e-05, -4.291525328881107e-06, -0.007963691838085651, -0.09532179683446884, -0.014641928486526012, -0.020014241337776184, -0.15263929963111877, -0.4390549659729004, -0.003618955845013261, -0.0008147019543685019, -0.005951066501438618, -0.002316412515938282, -0.33278921246528625, -0.050017789006233215, -0.21118497848510742, -0.0002420847595203668, -0.4785771369934082, -0.030833616852760315, -0.01401029247790575, -0.013509988784790039, -0.1739121824502945, -0.8929300308227539, -1.929370403289795, -0.17651547491550446, -0.002267529722303152, -0.03179405257105827, -0.00010632903286023065, -0.0013309201458469033, -0.022439731284976006, -0.0005918181850574911, -0.004746716935187578, -0.008617948740720749, -3.346436023712158, -0.038546688854694366, -0.01140621118247509, -0.0047608353197574615, -0.0003551805857568979, -0.001212100381962955, -0.04307025298476219, -0.017829619348049164, -0.20234844088554382, -0.009757325053215027, -0.014277919195592403, -6.97350042173639e-05, -0.0002636561985127628, -5.018585216021165e-05, -0.010364163666963577, -0.08026532828807831, -0.9769493341445923, -0.01432245783507824, -0.0605100616812706, -0.19013743102550507, -0.008388877846300602, -0.030386416241526604, -0.3684898614883423, -0.02173345349729061, -0.4538763463497162, -0.018134860321879387, -2.634490556374658e-05, -0.002451749751344323, -0.12777723371982574, -0.00010239553375868127, -0.010900593362748623, -0.00021944021864328533, -0.0012972281547263265, -0.08108009397983551, -0.0016655157087370753, -0.24570491909980774, -0.00013982271775603294, -0.0004058252670802176, -0.2019277960062027, -0.6245115399360657, -0.0006426891195587814, -2.2786903381347656, -0.06165742129087448, -0.38831639289855957, -0.11135926842689514, -1.585739254951477, -1.6729847192764282, -0.021382052451372147, -0.005904138553887606, -0.0007102350937202573, -0.02934996224939823, -0.06277939677238464, -0.385296493768692, -0.5479251742362976], "finish_reason": "stop"}], "metrics": {"energy": 399.6009480171203, "energy_per_token": 4.206325768601266, "time": 8.773484, "time_per_token": 0.09235246315789473}}
{"outputs": [{"text": "output_path = os.path.join(output_dir, filename)\n\n    # Open the output file for writing and use the \"append\" mode.\n    with open(output_path, 'a') as f:\n\n        # Iterate through each DataFrame in the list\n        for i, df in enumerate(dataset):\n            # If it is not the first DataFrame, add a separator line before writing the next DataFrame\n            if i != 0:\n                f.write(\"--------------------------------------------------------------------------------------------------\\n\")\n            # Write the current DataFrame to the file\n            df.to_csv(f, index=False, mode='a')\n\n    # Print a message indicating that the DataFrames have been written to the file\n    print(f\"Data has been saved in {filename}\")\n    return", "tokens": ["output", "_", "path", " =", " os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", "\n", "\n", "    ", "#", " Open", " the", " output", " file", " for", " writing", " and", " use", " the", " \"", "append", "\"", " mode", ".", "\n", "    ", "with", " open", "(", "output", "_", "path", ",", " '", "a", "')", " as", " f", ":", "\n", "\n", "        ", "#", " Iter", "ate", " through", " each", " Data", "Frame", " in", " the", " list", "\n", "        ", "for", " i", ",", " df", " in", " enumerate", "(", "dataset", "):", "\n", "            ", "#", " If", " it", " is", " not", " the", " first", " Data", "Frame", ",", " add", " a", " separ", "ator", " line", " before", " writing", " the", " next", " Data", "Frame", "\n", "            ", "if", " i", " ", "!", "=", " ", "0", ":", "\n", "                ", "f", ".", "write", "(", "\"", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "--\\", "n", "\"", ")", "\n", "            ", "#", " Write", " the", " current", " Data", "Frame", " to", " the", " file", "\n", "            ", "df", ".", "to", "_", "csv", "(", "f", ",", " index", "=", "False", ",", " mode", "='", "a", "')", "\n", "\n", "    ", "#", " Print", " a", " message", " indicating", " that", " the", " Data", "F", "rames", " have", " been", " written", " to", " the", " file", "\n", "    ", "print", "(", "f", "\"", "Data", " has", " been", " saved", " in", " {", "filename", "}\"", ")", "\n", "    ", "return", "\n", "\n", "#"], "logprobs": [-2.6591882705688477, -0.03246764466166496, -0.51011723279953, -0.005678711924701929, -0.018543807789683342, -1.1920858014491387e-05, -0.00047541281674057245, -2.5033637939486653e-05, -0.012759946286678314, -0.00214406312443316, -0.02745036780834198, -3.802703940891661e-05, -9.179073458653875e-06, -0.004145837854593992, -0.07036075741052628, -0.009767832234501839, -0.018213408067822456, -1.548291563987732, -0.002768138889223337, -1.2893245220184326, -1.475982904434204, -0.12700122594833374, -2.0885963439941406, -0.06394518166780472, -1.3790202140808105, -0.004530641250312328, -3.094752788543701, -0.6619851589202881, -0.33217179775238037, -2.30576753616333, -1.9845423698425293, -0.05302973836660385, -0.20583806931972504, -3.890678882598877, -0.18427293002605438, -0.0027550619561225176, -0.500741720199585, -0.0005771639989688993, -0.0005889588501304388, -0.0024813597556203604, -1.311301275563892e-06, -2.658331868587993e-05, -0.0005096090608276427, -0.3251364529132843, -0.02537435106933117, -0.11756885796785355, -0.0009263038518838584, -0.7910281419754028, -0.015099864453077316, -0.009506669826805592, -1.7021138668060303, -0.009336736053228378, -0.09231127798557281, -1.1910078525543213, -0.003316855989396572, -1.1213111877441406, -0.5785143971443176, -0.055954981595277786, -0.0010418231831863523, -0.03715220466256142, -0.011944673955440521, -1.3149480819702148, -2.059006929397583, -0.0008812834857963026, -0.006030459422618151, -0.978330135345459, -0.11282245069742203, -0.13463346660137177, -0.005694358143955469, -0.000196556793525815, -6.770858453819528e-05, -0.0011025547282770276, -0.006489512976258993, -0.002946917898952961, -1.2335528135299683, -0.45377418398857117, -1.113227128982544, -1.0737895965576172, -2.3524911403656006, -0.033100418746471405, -0.0007727735792286694, -0.0025852848775684834, -0.01492453645914793, -0.0017356107709929347, -0.14355996251106262, -1.589437484741211, -0.0725751742720604, -1.1630560159683228, -0.00036566724884323776, -0.20770429074764252, -0.9724985361099243, -0.5275401473045349, -0.13677474856376648, -1.3102562427520752, -0.11456716805696487, -0.00030596344731748104, -0.4219394326210022, -0.0035253537353128195, -0.021835163235664368, -0.0009148702956736088, -2.063917875289917, -5.960462772236497e-07, -3.576272320060525e-06, -0.003193875541910529, -0.00015925093612167984, -0.002233036793768406, -0.0014296083245426416, -0.004046586342155933, -0.1170840635895729, -7.426462980220094e-05, -0.000918681500479579, -1.0152251720428467, -0.0833146870136261, -0.2921093702316284, -0.022419799119234085, -1.1712234020233154, -0.12559819221496582, -0.11569029092788696, -0.08179611712694168, -0.08155925571918488, -0.04680268466472626, -0.059972770512104034, -0.09635133296251297, -0.11159130185842514, -0.08624585717916489, -0.09061655402183533, -0.09403807669878006, -0.061045944690704346, -0.0743185430765152, -0.17171724140644073, -0.10794340819120407, -0.08470161259174347, -0.08082272857427597, -0.09996972978115082, -0.07550986856222153, -0.06280369311571121, -0.13130667805671692, -0.1028638556599617, -0.06870218366384506, -0.2937188446521759, -0.1293329894542694, -0.14745885133743286, -0.11027408391237259, -0.1454852819442749, -0.1339133381843567, -2.6300127506256104, -0.01091014500707388, -0.05075230821967125, -0.00792726594954729, -0.008692876435816288, -1.1601256132125854, -0.06946559250354767, -0.32495370507240295, -0.01276124082505703, -1.74492609500885, -0.0007444233051501215, -0.0003797286772169173, -0.0593501515686512, -0.009518596343696117, -0.31618931889533997, -1.1046780347824097, -0.004789309576153755, -0.03134508430957794, -0.0014355602907016873, -0.0023467401042580605, -1.7881233361549675e-05, -0.0009447640040889382, -6.890059739816934e-05, -0.023642297834157944, -0.015684107318520546, -0.6299487948417664, -0.011284928768873215, -0.06319097429513931, -1.3728529214859009, -1.7248820066452026, -0.05048837512731552, -0.012863985262811184, -0.08957335352897644, -0.09338333457708359, -0.39725661277770996, -1.3586480617523193, -0.8815413117408752, -0.9468209743499756, -0.5041989684104919, -0.2883705794811249, -0.5292927622795105, -0.39152050018310547, -0.04299454391002655, -2.069866180419922, -0.024454956874251366, -6.05564855504781e-05, -0.21788761019706726, -0.0015964870108291507, -0.17662188410758972, -0.113152414560318, -0.07490448653697968, -0.1447189897298813, -0.19415004551410675, -0.009990332648158073, -0.0912732258439064, -0.04964170604944229, -0.139304980635643, -0.1837112009525299, -1.5344643592834473, -1.7264811992645264, -0.019027214497327805, -2.555634021759033, -1.4133962392807007, -0.4855588674545288, -1.3403137922286987, -0.6997991800308228, -0.13379833102226257, -0.04730753228068352, -2.076871156692505, -0.9974559545516968, -1.063964605331421, -0.07304811477661133, -1.7503974437713623], "finish_reason": "stop"}], "metrics": {"energy": 903.564702913284, "energy_per_token": 4.14479221519855, "time": 20.047113, "time_per_token": 0.09195923394495413}}
{"outputs": [{"text": "start_time = time.time()\n    os.makedirs(output_dir, exist_ok=True)\n    with open(os.path.join(output_dir, filename), 'w') as f:\n        for df in dataset:\n            df.to_csv(f, sep=',', index=False)\n            f.write('\\n' + '-' * 100 + '\\n')\n\n    print(f\"Writing to file: {filename} took {time.time() - start_time} seconds\")", "tokens": ["start", "_", "time", " =", " time", ".", "time", "()", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "output", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "for", " df", " in", " dataset", ":", "\n", "            ", "df", ".", "to", "_", "csv", "(", "f", ",", " sep", "='", ",", "'", ",", " index", "=", "False", ")", "\n", "            ", "f", ".", "write", "('", "\\", "n", "'", " +", " '", "-'", " *", " ", "1", "0", "0", " +", " '\\", "n", "')", "\n", "\n", "    ", "print", "(", "f", "\"", "W", "riting", " to", " file", ":", " {", "filename", "}", " took", " {", "time", ".", "time", "()", " -", " start", "_", "time", "}", " seconds", "\"", ")", "\n", "\n", "if"], "logprobs": [-2.749692916870117, -0.41413524746894836, -0.052472010254859924, -0.014317874796688557, -0.012668373063206673, -0.0006443570018745959, -0.19276288151741028, -0.018091777339577675, -0.06406371295452118, -0.19119931757450104, -2.136509656906128, -0.002244574250653386, -0.05223919078707695, -8.821448318485636e-06, -6.675497570540756e-05, -0.0011735226726159453, -0.03156861290335655, -3.45700973412022e-05, -5.8412379075889476e-06, -0.01007388997823, -0.004255169536918402, -1.7881377516459906e-06, -1.823885577323381e-05, -0.00769779970869422, -0.0014724613865837455, -0.00042000532266683877, -0.07627417892217636, -0.12293368577957153, -1.4492144584655762, -0.0017625049222260714, -0.0046996138989925385, -0.22969400882720947, -4.410734163684538e-06, -0.0002076410164590925, -2.3841830625315197e-06, -0.0005970602505840361, -0.0005235493299551308, -0.00888513308018446, -2.6464111215318553e-05, -9.65590606938349e-06, -0.001542688929475844, -0.05111052840948105, -0.006362420506775379, -0.002089461777359247, -0.16047674417495728, -0.013688033446669579, -0.17794519662857056, -0.0005578630371019244, -0.31325599551200867, -0.025383764877915382, -0.014715583063662052, -0.01184006780385971, -0.10969750583171844, -0.9027001261711121, -0.007166513241827488, -0.0037965141236782074, -0.010706247761845589, -0.005866333842277527, -0.004250183701515198, -0.1231096088886261, -0.007797044236212969, -0.00657975859940052, -4.732496745418757e-05, -0.0006505518686026335, -8.844937838148326e-05, -0.0018661479698494077, -0.008742391131818295, -0.6664055585861206, -0.378118634223938, -0.42371389269828796, -0.02109881117939949, -0.0009813260985538363, -0.2439410388469696, -0.015922660008072853, -0.15485462546348572, -0.31784042716026306, -0.016206664964556694, -0.021450312808156013, -0.1948457509279251, -2.992108420585282e-05, -0.0017245433991774917, -0.2479456663131714, -0.6996920108795166, -0.0004048719711136073, -1.105051875114441, -0.1402449607849121, -0.14086322486400604, -0.21109241247177124, -0.12424855679273605, -0.002371834125369787, -0.6918498277664185, -0.19674530625343323, -1.6482172012329102, -0.12754210829734802, -0.03573104739189148, -0.001077786204405129, -0.1015610322356224, -0.0723770409822464, -2.407348871231079, -0.08350211381912231, -1.569676399230957, -0.10383730381727219, -0.3392631709575653, -0.19279561936855316, -2.475313663482666, -1.023970603942871, -1.3878772258758545, -2.1368374824523926, -2.0312535762786865, -0.22624532878398895, -0.17701295018196106, -0.17171995341777802, -0.9837870597839355, -0.2713538110256195, -0.13753946125507355, -0.00022682955022901297, -0.00031025364296510816, -0.00010501786891836673, -0.06705712527036667, -0.0012165057705715299, -5.245195097813848e-06, -3.4570634852570947e-06, -1.0310704708099365, -0.061325717717409134, -0.3238048553466797, -0.2057047337293625, -0.040733374655246735, -0.2548844516277313, -1.229827642440796], "finish_reason": "stop"}], "metrics": {"energy": 514.7711783714294, "energy_per_token": 3.9904742509413134, "time": 11.896607, "time_per_token": 0.09222175968992248}}
{"outputs": [{"text": "start = time.time()\n\n    output_filepath = os.path.join(output_dir, filename)\n    with open(output_filepath, 'w') as file:\n        for i, df in enumerate(dataset):\n            df.to_csv(file, index=False)\n            if i < len(dataset) - 1:\n                file.write('--------\\n')\n\n    # Log the elapsed time\n    elapsed_time = time.time() - start\n    print(f\"Writing {filename} to {output_dir} took {elapsed_time:.2f} seconds\")\n\n    # Log the operation completion\n    print(\"DataFrame written to file successfully.\")\n    print(\"-\" * 50)", "tokens": ["start", " =", " time", ".", "time", "()", "\n", "\n", "    ", "output", "_", "file", "path", " =", " os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", "\n", "    ", "with", " open", "(", "output", "_", "file", "path", ",", " '", "w", "')", " as", " file", ":", "\n", "        ", "for", " i", ",", " df", " in", " enumerate", "(", "dataset", "):", "\n", "            ", "df", ".", "to", "_", "csv", "(", "file", ",", " index", "=", "False", ")", "\n", "            ", "if", " i", " <", " len", "(", "dataset", ")", " -", " ", "1", ":", "\n", "                ", "file", ".", "write", "('", "---", "---", "--\\", "n", "')", "\n", "\n", "    ", "#", " Log", " the", " el", "apsed", " time", "\n", "    ", "el", "apsed", "_", "time", " =", " time", ".", "time", "()", " -", " start", "\n", "    ", "print", "(", "f", "\"", "W", "riting", " {", "filename", "}", " to", " {", "output", "_", "dir", "}", " took", " {", "el", "apsed", "_", "time", ":", ".", "2", "f", "}", " seconds", "\"", ")", "\n", "\n", "    ", "#", " Log", " the", " operation", " completion", "\n", "    ", "print", "(", "\"", "DataFrame", " written", " to", " file", " successfully", ".", "\"", ")", "\n", "    ", "print", "(", "\"", "-", "\"", " *", " ", "5", "0", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-2.749692916870117, -1.135723352432251, -0.012544653378427029, -0.0008694920688867569, -0.36483636498451233, -0.003303786274045706, -0.045891065150499344, -2.165168523788452, -0.0013519919011741877, -2.351043224334717, -0.025921376422047615, -1.3665777444839478, -2.2938764095306396, -0.007062234450131655, -0.02841011807322502, -6.6756979322235566e-06, -0.0031293490901589394, -1.728519782773219e-05, -0.012295049615204334, -0.002628326416015625, -0.0359240397810936, -7.450303382938728e-05, -2.2411095415009186e-05, -0.002679926110431552, -0.06833183765411377, -0.011376864276826382, -0.020337270572781563, -0.6201765537261963, -0.8617784976959229, -0.005147892981767654, -0.0006562701892107725, -0.004134322516620159, -4.887569048150908e-06, -1.9907753085135482e-05, -0.000309657771140337, -0.0021652367431670427, -0.19263683259487152, -0.02081303857266903, -0.1913004368543625, -0.0005393957253545523, -1.616114616394043, -0.014946968294680119, -0.012412087991833687, -0.02124248445034027, -0.088973268866539, -0.6196416020393372, -0.05806201696395874, -0.4218049645423889, -0.004614063072949648, -0.00019429226813372225, -8.022463589441031e-05, -0.0014384171226993203, -0.007836668752133846, -0.010367113165557384, -0.00488445395603776, -0.16751953959465027, -0.014500241726636887, -0.00637900410220027, -5.757642793469131e-05, -0.00048029806930571795, -8.260862523457035e-05, -0.02353832684457302, -0.019200654700398445, -0.5420412421226501, -0.006322027184069157, -0.020833004266023636, -0.10154466331005096, -0.008128064684569836, -0.03603673726320267, -0.08322485536336899, -0.005969671066850424, -0.11024418473243713, -0.005782898049801588, -2.7179348762729205e-05, -0.003662546630948782, -0.0452863872051239, -2.372236667724792e-05, -0.004148093517869711, -0.00013314791431184858, -0.0007655074005015194, -0.10897564888000488, -0.0013100859941914678, -0.06655021756887436, -0.0001720042055239901, -0.00022432672267314047, -0.08401145786046982, -1.1436129808425903, -0.033197175711393356, -2.1647119522094727, -0.011854675598442554, -0.0173965971916914, -0.06889481097459793, -0.5972936749458313, -0.018308455124497414, -3.4172892570495605, -3.1119117736816406, -0.5946998000144958, -1.8636400699615479, -0.0023228349164128304, -0.01014752872288227, -0.6199226379394531, -0.010429522022604942, -0.36886879801750183, -0.00015567521040793508, -0.0674862191081047, -0.006120983976870775, -0.00664051016792655, -0.03275102749466896, -3.2066785934148356e-05, -0.00023624490131624043, -3.1470757676288486e-05, -0.0010253892978653312, -0.00018404220463708043, -0.004191423766314983, -0.028512079268693924, -0.2812834680080414, -0.013758349232375622, -0.0649670735001564, -0.14220139384269714, -3.042874813079834, -0.2284390926361084, -1.15980863571167, -0.7845500707626343, -0.0101409200578928, -2.8494491577148438, -0.24563387036323547, -0.02051714062690735, -5.829164365422912e-05, -0.11201982945203781, -0.07265443354845047, -0.26597505807876587, -0.16473053395748138, -0.010941745713353157, -1.5497195136049413e-06, -4.410734163684538e-06, -3.3378546504536644e-06, -0.4151651859283447, -0.006959483493119478, -0.1877225637435913, -0.0018482997547835112, -0.0008657997823320329, -0.009029271081089973, -0.4298524260520935, -0.23209725320339203, -0.05719123035669327, -0.11970506608486176, -2.5211493968963623, -1.026822566986084, -2.224177837371826, -0.14825142920017242, -4.053070545196533, -3.8982911109924316, -0.3662128448486328, -0.005768912378698587, -0.3109138011932373, -0.032780908048152924, -2.6496481895446777, -4.299134731292725, -1.1560485363006592, -0.3837478756904602, -1.2267107963562012, -0.6157637238502502, -0.40583544969558716, -0.01307768002152443, -0.35696691274642944, -0.08773432672023773, -2.0034568309783936, -1.3222635984420776, -0.35650989413261414, -0.5903133749961853, -1.907833218574524, -0.01232919655740261, -0.276746541261673, -0.01860875077545643, -0.7447025179862976, -0.00793518964201212, -1.2340977191925049, -1.2397689715726301e-05, -6.079655122448457e-06, -3.099436753473128e-06, -1.1920858014491387e-05, -0.1461656093597412], "finish_reason": "stop"}], "metrics": {"energy": 772.110190738678, "energy_per_token": 4.242363685377352, "time": 16.896173, "time_per_token": 0.09283611538461539}}
{"outputs": [{"text": "output_path = os.path.join(output_dir, filename)\n    with open(output_path, 'w', newline='') as outfile:\n        for df in dataset:\n            df.to_csv(outfile, index=False)\n            outfile.write('\\n' + \"------\"*4 + '\\n')", "tokens": ["output", "_", "path", " =", " os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", "\n", "    ", "with", " open", "(", "output", "_", "path", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " out", "file", ":", "\n", "        ", "for", " df", " in", " dataset", ":", "\n", "            ", "df", ".", "to", "_", "csv", "(", "out", "file", ",", " index", "=", "False", ")", "\n", "            ", "out", "file", ".", "write", "('", "\\", "n", "'", " +", " \"", "---", "---", "\"", "*", "4", " +", " '\\", "n", "')", "\n", "\n", "def"], "logprobs": [-2.6591882705688477, -0.03246764466166496, -0.51011723279953, -0.005678711924701929, -0.018543807789683342, -1.1920858014491387e-05, -0.00047541281674057245, -2.5033637939486653e-05, -0.012759946286678314, -0.00214406312443316, -0.02745036780834198, -3.802703940891661e-05, -9.179073458653875e-06, -0.004145837854593992, -0.07036075741052628, -0.009767832234501839, -0.018213408067822456, -0.24053514003753662, -0.34547436237335205, -0.00472619105130434, -0.0006226746481843293, -0.004154978785663843, -3.2186455882765586e-06, -0.00017915551143232733, -0.0016600412782281637, -0.2093999832868576, -0.02375941351056099, -1.8618335723876953, -0.0004040378553327173, -0.4241165816783905, -9.536738616588991e-07, -0.09215398132801056, -8.082063141046092e-05, -0.00029059001826681197, -3.5563924312591553, -0.32023561000823975, -0.0074418941512703896, -0.028183218091726303, -0.012814085930585861, -0.2543485462665558, -0.8544628620147705, -0.006119324825704098, -0.004326626192778349, -0.01779671385884285, -0.00646677240729332, -0.004414812196046114, -0.12392444908618927, -0.009267998859286308, -0.005960902199149132, -1.883488948806189e-05, -0.0008556757238693535, -3.9457496313843876e-05, -0.004642304033041, -4.446407547220588e-05, -0.011608315631747246, -0.678509533405304, -0.009466403163969517, -0.03672540560364723, -0.30228835344314575, -0.006700429134070873, -0.018129825592041016, -0.09647030383348465, -0.0006291079334914684, -5.113947918289341e-05, -0.0011548285838216543, -0.14967571198940277, -0.3714621365070343, -0.00034350217902101576, -1.4811756610870361, -0.2363385111093521, -2.8836724758148193, -0.8132649660110474, -0.020731892436742783, -0.353293776512146, -2.2993557453155518, -2.6060757637023926, -0.2724120616912842, -0.026383813470602036, -0.0004761277523357421, -0.05910712853074074, -0.07017185539007187, -0.4857189953327179, -0.44423216581344604], "finish_reason": "stop"}], "metrics": {"energy": 332.39960024452216, "energy_per_token": 4.004814460777375, "time": 7.530236, "time_per_token": 0.09072573493975904}}
{"outputs": [{"text": "# Get the current date and time\n    timestamp = time.strftime(\"%Y-%m-%d-%H-%M-%S\")\n\n    # Append the date and time to the file name\n    filename = f\"{timestamp}_{filename}\"\n    # Create the output directory if it doesn't exist\n    if not os.path.exists(output_dir):\n        os.makedirs(output_dir)\n\n    # Construct the full path to the file with the date and time\n    full_path = os.path.join(output_dir, filename)\n    # Check if there are any DataFrames in the list\n    if len(dataset) == 0:\n        return\n\n    # Get the first DataFrame and write it to the file\n    df = dataset[0]\n    df.to_csv(full_path, index=False)\n\n    # Write each subsequent DataFrame to the file with an additional separator line\n    for df in dataset[1:]:\n        with open(full_path, 'a') as f:\n            f.write('---------------------------------", "tokens": ["#", " Get", " the", " current", " date", " and", " time", "\n", "    ", "timestamp", " =", " time", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", "-%", "H", "-%", "M", "-%", "S", "\"", ")", "\n", "\n", "    ", "#", " App", "end", " the", " date", " and", " time", " to", " the", " file", " name", "\n", "    ", "filename", " =", " f", "\"", "{", "timestamp", "}_{", "filename", "}\"", "\n", "    ", "#", " Create", " the", " output", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "output", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "output", "_", "dir", ")", "\n", "\n", "    ", "#", " Construct", " the", " full", " path", " to", " the", " file", " with", " the", " date", " and", " time", "\n", "    ", "full", "_", "path", " =", " os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", "\n", "    ", "#", " Check", " if", " there", " are", " any", " Data", "F", "rames", " in", " the", " list", "\n", "    ", "if", " len", "(", "dataset", ")", " ==", " ", "0", ":", "\n", "        ", "return", "\n", "\n", "    ", "#", " Get", " the", " first", " Data", "Frame", " and", " write", " it", " to", " the", " file", "\n", "    ", "df", " =", " dataset", "[", "0", "]", "\n", "    ", "df", ".", "to", "_", "csv", "(", "full", "_", "path", ",", " index", "=", "False", ")", "\n", "\n", "    ", "#", " Write", " each", " subsequent", " Data", "Frame", " to", " the", " file", " with", " an", " additional", " separ", "ator", " line", "\n", "    ", "for", " df", " in", " dataset", "[", "1", ":", "]:", "\n", "        ", "with", " open", "(", "full", "_", "path", ",", " '", "a", "')", " as", " f", ":", "\n", "            ", "f", ".", "write", "('", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---"], "logprobs": [-1.4896069765090942, -2.917354106903076, -0.18472236394882202, -0.7018781304359436, -0.9044575095176697, -0.21524615585803986, -0.04520514979958534, -0.7215648293495178, -0.006494960747659206, -2.779172897338867, -0.0075503927655518055, -0.04425671696662903, -5.4238757002167404e-05, -0.011874348856508732, -8.749579137656838e-05, -0.6146138906478882, -0.010332779958844185, -0.0031836561392992735, -0.01968047022819519, -0.8924124836921692, -0.0010090741561725736, -0.00022492263815365732, -0.003469164716079831, -1.281189203262329, -0.0007902836659923196, -0.06313692033290863, -0.00018654513405635953, -0.0170753113925457, -0.00020668754586949944, -0.03364899754524231, -0.06344005465507507, -0.007498097140341997, -0.39694783091545105, -0.0010808822698891163, -0.06280066817998886, -2.9479737281799316, -0.003013238776475191, -0.17993944883346558, -1.949860692024231, -0.03836429491639137, -0.0013731822837144136, -0.0421639047563076, -0.00563402334228158, -1.6834042072296143, -0.03539891541004181, -0.09187161177396774, -0.0010380124440416694, -0.6038390398025513, -0.22055469453334808, -0.2150830328464508, -0.020090188831090927, -0.007060221862047911, -1.0810881853103638, -0.7998215556144714, -0.00176214799284935, -0.018341461196541786, -0.008395024575293064, -2.840343952178955, -1.055462121963501, -1.1592390537261963, -0.1571517437696457, -0.7389735579490662, -0.18790405988693237, -0.022105136886239052, -0.0023748071398586035, -0.21125629544258118, -0.0014355602907016873, -3.6477376852417365e-05, -0.026847779750823975, -0.015884879976511, -0.012236288748681545, -1.260406494140625, -0.012320601381361485, -0.0007493072189390659, -2.264974000354414e-06, -0.0011474461061879992, -1.2397689715726301e-05, -0.09402169287204742, -0.001453653909265995, -0.023972073569893837, -2.47952248173533e-05, -1.883488948806189e-05, -0.0006020640721544623, -0.0013410394312813878, -0.009393187239766121, -0.010005439631640911, -9.059865078597795e-06, -0.11406028270721436, -2.3841855067985307e-07, -7.510157047363464e-06, -0.00044550508027896285, -0.000543446687515825, -0.00028713393840007484, -0.018635429441928864, -0.0018598416354507208, -0.00029738296871073544, -0.3236362338066101, -0.0037093423306941986, -0.05466020479798317, -0.8978536128997803, -0.007018673233687878, -0.44805410504341125, -0.5479364991188049, -0.3730452060699463, -0.0019086254760622978, -1.130151629447937, -3.133162260055542, -0.4530811309814453, -1.5719716548919678, -0.056459058076143265, -0.03734653443098068, -0.8789006471633911, -0.0022947664838284254, -1.800827145576477, -0.021519383415579796, -0.12912756204605103, -0.01029384508728981, -0.017455289140343666, -2.0265558760002023e-06, -1.6927575416048057e-05, -1.07287787614041e-05, -0.00242594419978559, -0.0004391897819004953, -0.008576701395213604, -1.6331539882230572e-05, -1.7881377516459906e-06, -0.0007103541865944862, -0.011528421193361282, -0.0050900159403681755, -0.0029369338881224394, -1.8771603107452393, -0.8367579579353333, -2.4292707443237305, -0.07649826258420944, -2.9143707752227783, -0.7930546402931213, -0.8510106801986694, -0.22111713886260986, -0.0024780300445854664, -7.271740287251305e-06, -0.402051717042923, -0.004918144084513187, -0.6094864010810852, -0.08310144394636154, -0.007959906943142414, -0.035506721585989, -1.1665053367614746, -7.724463648628443e-05, -0.0015735160559415817, -0.010838567279279232, -0.24438433349132538, -0.0004159538948442787, -0.0032587540335953236, -0.00130282377358526, -0.002832807367667556, -0.009753311984241009, -1.3731809854507446, -0.20595993101596832, -0.38933464884757996, -0.0032515060156583786, -0.04809676110744476, -3.798274517059326, -0.011631293222308159, -0.12441867589950562, -0.004326982423663139, -0.00033849707688204944, -1.5289206504821777, -0.059470683336257935, -0.022858457639813423, -0.002812123391777277, -0.03113260306417942, -0.028506632894277573, -0.17547667026519775, -0.0009470268851146102, -0.2694113850593567, -0.018012985587120056, -0.0011063652345910668, -0.2089359611272812, -0.00015448330668732524, -4.410646579344757e-05, -0.006683258805423975, -0.015868453308939934, -0.08321256935596466, -0.0015395942609757185, -0.0025384367909282446, -1.7881377516459906e-06, -0.0001472126314183697, -9.190614218823612e-05, -0.006829609628766775, -2.0503786799963564e-05, -1.311301275563892e-06, -0.002679807133972645, -0.889519453048706, -0.005716167856007814, -0.027726134285330772, -0.1340029090642929, -0.0033877857495099306, -0.07174500823020935, -0.0012203158112242818, -0.007390657905489206, -0.7854445576667786, -0.5860298871994019, -0.13754995167255402, -0.00021050144277978688, -0.0005738280597142875, -0.12853240966796875, -0.004940445069223642, -0.004623674787580967, -1.037562370300293, -1.705562710762024, -1.0736737251281738, -1.2404839992523193, -0.00014244495832826942, -0.30187273025512695, -0.0719672292470932, -0.0007152383332140744, -0.17313127219676971, -0.8107207417488098, -0.003954686690121889, -0.00021419614495243877, -0.0011587579501792789, -0.000196556793525815, -0.0010935047175735235, -5.113947918289341e-05, -0.0002076410164590925, -0.006502896081656218, -0.7017233967781067, -0.0001995364436879754, -0.0003231241717003286, -0.0019179059891030192, -8.106198947643861e-06, -5.006777428206988e-06, -0.00022265815641731024, -0.5024858713150024, -0.00020644917094614357, -0.19220992922782898, -0.00019059749320149422, -0.23956528306007385, -0.0021893836092203856, -0.007262496743351221, -0.004085409455001354, -0.22542481124401093, -3.7788631743751466e-05, -0.002389316214248538, -0.30971553921699524, -1.2291887998580933, -0.0202606413513422, -2.0123074054718018, -0.15032099187374115, -0.08373314142227173, -0.06534101068973541, -0.06471748650074005, -0.028360987082123756, -0.06571615487337112, -0.11492078006267548, -0.1201741099357605], "finish_reason": "length"}], "metrics": {"energy": 1048.3104889907834, "energy_per_token": 4.0949628476202475, "time": 23.811045, "time_per_token": 0.09301189453125}}
{"outputs": [{"text": "if not os.path.exists(output_dir):\n        os.mkdir(output_dir)\n\n    start = time.time()\n    path = os.path.join(output_dir, filename)\n    with open(path, 'w') as f:\n        for i, data in enumerate(dataset):\n            data.to_csv(f, index=False)\n            if i < len(dataset) - 1:\n                print(\"------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------", "tokens": ["if", " not", " os", ".", "path", ".", "exists", "(", "output", "_", "dir", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "output", "_", "dir", ")", "\n", "\n", "    ", "start", " =", " time", ".", "time", "()", "\n", "    ", "path", " =", " os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", "\n", "    ", "with", " open", "(", "path", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "for", " i", ",", " data", " in", " enumerate", "(", "dataset", "):", "\n", "            ", "data", ".", "to", "_", "csv", "(", "f", ",", " index", "=", "False", ")", "\n", "            ", "if", " i", " <", " len", "(", "dataset", ")", " -", " ", "1", ":", "\n", "                ", "printlogprobs": [-1.9865838289260864, -0.20879869163036346, -0.042863212525844574, -2.169585604860913e-05, -0.0026385514065623283, -1.3351351299206726e-05, -0.1747117042541504, -0.002238270128145814, -0.01560653280466795, -4.756337511935271e-05, -4.172316494077677e-06, -0.0020053531043231487, -0.018315594643354416, -0.024649672210216522, -0.04584073647856712, -1.728519782773219e-05, -1.9851610660552979, -6.603976362384856e-05, -0.004203413613140583, -0.0035513683687895536, -5.340433563105762e-05, -7.867782187531702e-06, -0.0006473353132605553, -0.010160626843571663, -1.1068274974822998, -0.002071617403998971, -3.3131356239318848, -1.1328965425491333, -0.020287157967686653, -0.00019608005823101848, -0.3972069323062897, -0.005171968135982752, -0.03348000720143318, -0.19072028994560242, -2.284900188446045, -0.06499344110488892, -0.09949122369289398, -2.145764938177308e-06, -0.0007229813490994275, -2.2291887944447808e-05, -0.003918114583939314, -0.002218763343989849, -0.013420718722045422, -4.732496745418757e-05, -6.079655122448457e-06, -0.002303091809153557, -0.12683512270450592, -0.01904662884771824, -0.010293019004166126, -0.3093184232711792, -0.5466313362121582, -0.0038355845026671886, -0.0005949157639406621, -0.004669357556849718, -0.001821169862523675, -0.2276027947664261, -0.03447994217276573, -0.2314864844083786, -0.00042358008795417845, -0.43401142954826355, -0.030729003250598907, -0.01402192935347557, -0.014389321208000183, -0.19932721555233002, -0.7650820016860962, -0.12483111768960953, -1.9882668256759644, -0.21403349936008453, -0.0005944392178207636, -0.00016509123088326305, -0.002732593100517988, -0.018786709755659103, -0.005489157512784004, -0.006213868968188763, -0.2650391757488251, -0.014669064432382584, -0.016802921891212463, -0.0001778444420779124, -0.0008200620068237185, -0.00012110930401831865, -0.00876531656831503, -0.032889921218156815, -1.0645356178283691, -0.01753365807235241, -0.06408730149269104, -0.19021578133106232, -0.005777801387012005, -0.020311105996370316, -0.11606568843126297, -0.011363545432686806, -0.2084856778383255, -0.013782335445284843, -3.182837463100441e-05, -0.0014838885981589556, -0.14075666666030884, -4.5060096454108134e-05, -0.007932350970804691, -0.00017557987303007394, -0.0011436357162892818, -0.06812406331300735, -0.001611959422007203, -1.8823411464691162, -1.3739221096038818, -0.24026554822921753, -0.12440541386604309, -0.015347360633313656, -1.2228147983551025, -0.14542004466056824, -0.20124606788158417, -0.12368567287921906, -0.10739311575889587, -0.07947103679180145, -0.07000547647476196, -0.10745125263929367, -0.11670809239149094, -0.11477582156658173, -0.08629277348518372, -0.09266676753759384, -0.1074417233467102, -0.0936121940612793, -0.12691019475460052, -0.11441641300916672, -0.09782884269952774, -0.07301243394613266, -0.06245613098144531, -0.0812632143497467, -0.1058473214507103, -0.09904789924621582, -0.07963860034942627, -0.06087310612201691, -0.10972410440444946, -0.1640762835741043, -0.17585179209709167, -0.1304319202899933, -0.14393486082553864, -0.1251063346862793, -0.158534437417984, -0.25849178433418274, -0.1533082276582718, -0.11771966516971588, -0.16123107075691223, -0.07476145774126053, -0.055404182523489, -0.06212570145726204, -0.10802623629570007, -0.10170619934797287, -0.09811429679393768, -0.08873395621776581, -0.05600987374782562, -0.04552094265818596, -0.05706771835684776, -0.07154526561498642, -0.09769057482481003, -0.0666797012090683, -0.07243558019399643, -0.06439729779958725, -0.08512014150619507, -0.09304363280534744, -0.08204136788845062, -0.05020691081881523, -0.049991365522146225, -0.04731981083750725, -0.030574893578886986, -0.04247049242258072, -0.032067470252513885, -0.04449014738202095, -0.037752751260995865, -0.044478174299001694, -0.030441690236330032, -0.03635038062930107, -0.03451760113239288, -0.03199427202343941, -0.030176736414432526, -0.027742018923163414, -0.03665461763739586, -0.04715368151664734, -0.0393151231110096, -0.0399659164249897, -0.034498024731874466, -0.027485858649015427, -0.03293825313448906, -0.03523700684309006, -0.04180646315217018, -0.04683590307831764, -0.034442972391843796, -0.0243949294090271, -0.01975691132247448, -0.019184866920113564, -0.02805607207119465, -0.0277930349111557, -0.02807450108230114, -0.024396905675530434, -0.027075445279479027, -0.019468532875180244, -0.02967415750026703, -0.025979802012443542, -0.03370006009936333, -0.02487330511212349, -0.021830031648278236, -0.03595152497291565, -0.02759614586830139, -0.02393634244799614, -0.029797280207276344, -0.021099278703331947, -0.015508412383496761, -0.019317589700222015, -0.028486009687185287, -0.021842744201421738, -0.029379481449723244, -0.030991384759545326, -0.0190952830016613, -0.021847642958164215, -0.02020445093512535, -0.01845252886414528, -0.01477325800806284, -0.023333260789513588, -0.02018657512962818, -0.015337147749960423, -0.01994810439646244, -0.01715734228491783, -0.01780818961560726, -0.017703726887702942, -0.01923445053398609, -0.016625547781586647, -0.022371655330061913, -0.01872364990413189, -0.019344482570886612, -0.020575067028403282, -0.01668030023574829, -0.015196498483419418, -0.013895908370614052, -0.01450834795832634, -0.015036454424262047, -0.013820194639265537, -0.014292021282017231, -0.013985253870487213, -0.010556806810200214, -0.01202806830406189, -0.01125050988048315, -0.012805023230612278, -0.01308309193700552, -0.013042145408689976, -0.015566393733024597, -0.016988234594464302, -0.016560358926653862, -0.01315839122980833, -0.012819381430745125, -0.015054303221404552, -0.015555595979094505, -0.018827421590685844, -0.015983080491423607, -0.01405507791787386, -0.01063854806125164, -0.012313653714954853, -0.012289043515920639, -0.012794431298971176], "finish_reason": "length"}], "metrics": {"energy": 1047.9984889659881, "energy_per_token": 4.093744097523391, "time": 23.795128, "time_per_token": 0.09294971875}}
{"outputs": [{"text": "os.makedirs(output_dir, exist_ok=True)\n    path = os.path.join(output_dir, filename)\n    with open(path, \"w\") as f:\n        for i, dataframe in enumerate(dataset):\n            dataframe.to_csv(f, sep=\",\", encoding=\"utf-8\", index=False)\n            if i < len(dataset) - 1:\n                f.write(\"------\\n\")", "tokens": ["os", ".", "m", "aked", "irs", "(", "output", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "path", " =", " os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", "\n", "    ", "with", " open", "(", "path", ",", " \"", "w", "\"", ")", " as", " f", ":", "\n", "        ", "for", " i", ",", " data", "frame", " in", " enumerate", "(", "dataset", "):", "\n", "            ", "data", "frame", ".", "to", "_", "csv", "(", "f", ",", " sep", "=", "\"", ",", "\"", ",", " encoding", "=", "\"", "utf", "-", "8", "\"", ",", " index", "=", "False", ")", "\n", "            ", "if", " i", " <", " len", "(", "dataset", ")", " -", " ", "1", ":", "\n", "                ", "f", ".", "write", "(", "\"", "---", "---", "\\", "n", "\"", ")", "\n", "\n", "def"], "logprobs": [-2.398678779602051, -0.004549747332930565, -0.05447576195001602, -1.3232143828645349e-05, -7.128461584215984e-05, -0.0008818790083751082, -0.03556424751877785, -5.566918844124302e-05, -8.821448318485636e-06, -0.011648260988295078, -0.006485485937446356, -2.9802276912960224e-06, -1.490105023549404e-05, -0.012737465091049671, -0.0008956949459388852, -0.0006849803612567484, -0.10378734022378922, -0.12078165262937546, -2.414024829864502, -0.09357083588838577, -0.06787135452032089, -1.9073468138230965e-06, -0.000608854868914932, -2.9205850296420977e-05, -0.005829120520502329, -0.0012156723532825708, -0.007209357805550098, -2.1457441107486375e-05, -2.145764938177308e-06, -0.0010905277449637651, -0.12989355623722076, -0.01779952459037304, -0.006988131906837225, -0.2793889343738556, -0.4687648117542267, -0.004472965840250254, -0.0006405447493307292, -0.004448043182492256, -0.0017021704697981477, -1.6757649183273315, -0.06133872643113136, -0.02502376213669777, -0.30861908197402954, -8.666139910928905e-05, -0.6015109419822693, -0.04094657301902771, -0.012727813795208931, -0.010124634951353073, -0.21137750148773193, -0.740393877029419, -0.06286738812923431, -2.0889573097229004, -1.4681341648101807, -0.0020818482153117657, -0.0006461439770646393, -0.00011264643399044871, -0.0018490137299522758, -0.008572682738304138, -0.00518145551905036, -0.004537168424576521, -0.38430625200271606, -0.0026613790541887283, -0.003123525995761156, -0.011508741416037083, -5.519237674889155e-05, -0.0005261705373413861, -2.5033637939486653e-05, -0.012829856015741825, -0.017615649849176407, -1.1607944965362549, -0.5920342803001404, -0.16962994635105133, -0.47947025299072266, -0.0040037245489656925, -0.04588218405842781, -1.6075198650360107, -0.06442032754421234, -0.0005314130103215575, -0.04595869779586792, -0.00970278400927782, -0.0014075858052819967, -0.0055434550158679485, -0.038796134293079376, -0.0055441660806536674, -0.005400829017162323, -0.044953878968954086, -0.08700310438871384, -0.0038161089178174734, -0.017476843670010567, -0.13652965426445007, -0.015271874144673347, -0.22623221576213837, -0.01608678512275219, -6.01988795096986e-05, -0.004371491726487875, -0.07274976372718811, -6.711257447022945e-05, -0.004572293721139431, -0.0002131234941771254, -0.0009286858257837594, -0.06264045089483261, -0.0012853225925937295, -0.2876104712486267, -7.354942499659956e-05, -0.001456510741263628, -0.03413575887680054, -0.049989212304353714, -0.43125635385513306, -0.021586118265986443, -0.6286417245864868, -0.002641286002472043, -0.01402145903557539, -0.0730200782418251, -0.03786925971508026, -0.5903462171554565, -0.5976443290710449], "finish_reason": "stop"}], "metrics": {"energy": 506.78668728065486, "energy_per_token": 4.368850752419439, "time": 11.720009, "time_per_token": 0.10103456034482758}}
{"outputs": [{"text": "os.makedirs(output_dir, exist_ok=True)\n    file_path = os.path.join(output_dir, filename)\n    with open(file_path, 'w', newline='') as file:\n        for df in dataset:\n            df.to_csv(file, index=False)\n            file.write('\\n' + '-' * 8 + '\\n' + '\\n')\n            print(f'{filename}: {dataset.index(df)}: {df}')\n        time.sleep(10)\n    print(f'{filename} written successfully!')", "tokens": ["os", ".", "m", "aked", "irs", "(", "output", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", "\n", "    ", "with", " open", "(", "file", "_", "path", ",", " '", "w", "'", ",", " new", "line", "='", "')", " as", " file", ":", "\n", "        ", "for", " df", " in", " dataset", ":", "\n", "            ", "df", ".", "to", "_", "csv", "(", "file", ",", " index", "=", "False", ")", "\n", "            ", "file", ".", "write", "('", "\\", "n", "'", " +", " '", "-'", " *", " ", "8", " +", " '\\", "n", "'", " +", " '\\", "n", "')", "\n", "            ", "print", "(", "f", "'{", "filename", "}:", " {", "dataset", ".", "index", "(", "df", ")}", ":", " {", "df", "}", "')", "\n", "        ", "time", ".", "sleep", "(", "1", "0", ")", "\n", "    ", "print", "(", "f", "'{", "filename", "}", " written", " successfully", "!", "')", "<", "|", "end", "of", "text", "|>"], "logprobs": [-2.398678779602051, -0.004549747332930565, -0.05447576195001602, -1.3232143828645349e-05, -7.128461584215984e-05, -0.0008818790083751082, -0.03556424751877785, -5.566918844124302e-05, -8.821448318485636e-06, -0.011648260988295078, -0.006485485937446356, -2.9802276912960224e-06, -1.490105023549404e-05, -0.012737465091049671, -0.0008956949459388852, -0.0006849803612567484, -0.10378734022378922, -0.12078165262937546, -1.2469485998153687, -1.0199456214904785, -0.03290757164359093, -0.004096094518899918, -0.051429785788059235, -1.5497195136049413e-06, -0.0003045333724003285, -1.5616295058862306e-05, -0.004045161418616772, -0.0007453762227669358, -0.008128301240503788, -8.22540732769994e-06, -2.0265558760002023e-06, -0.0010070496937260032, -0.09582775831222534, -0.01426017377525568, -0.006117073819041252, -0.31056827306747437, -0.3584718704223633, -0.0025928947143256664, -0.0005218812730163336, -0.0034303173888474703, -6.282132380874828e-05, -7.152555099310121e-07, -0.0014986485475674272, -0.19895689189434052, -0.028012951835989952, -1.8201243877410889, -0.0006167178507894278, -0.6290764212608337, -1.1920922133867862e-06, -0.1132097914814949, -0.00010489867418073118, -0.0002985746832564473, -0.9974827766418457, -0.012886345386505127, -0.015043969266116619, -0.007897225208580494, -0.15816375613212585, -1.1237618923187256, -0.006082831881940365, -0.0027254601009190083, -0.012401609681546688, -0.004960966296494007, -0.003638672875240445, -0.11129570007324219, -0.007070046849548817, -0.00636336812749505, -1.9550132492440753e-05, -0.0006436422117985785, -4.756337511935271e-05, -0.004993230104446411, -0.003087517572566867, -0.7011264562606812, -0.004690952133387327, -0.021545985713601112, -0.24742195010185242, -0.007170655764639378, -0.007845657877624035, -0.17465583980083466, -9.214453893946484e-05, -0.0002646096108946949, -0.1689874529838562, -0.5047020316123962, -0.00031764229061082006, -0.8746078610420227, -0.11475881934165955, -0.10836943984031677, -0.12837012112140656, -0.11504064500331879, -0.002249212935566902, -1.477191686630249, -0.44784510135650635, -0.01053227111697197, -0.0015103134792298079, -1.3193552494049072, -0.09203308820724487, -0.32241255044937134, -0.0007541911327280104, -0.044949665665626526, -0.12318539619445801, -2.9422497749328613, -2.416537284851074, -0.3109697103500366, -0.45280542969703674, -2.362605571746826, -1.3428683280944824, -1.8906434774398804, -0.9397720694541931, -3.6059627532958984, -0.8185890316963196, -0.01541544683277607, -0.09109954535961151, -0.0009004590683616698, -0.3606627583503723, -4.137092590332031, -0.6783257126808167, -1.9475879669189453, -0.8446589112281799, -0.17601515352725983, -0.09959449619054794, -2.3922817707061768, -1.509751319885254, -0.00335962837561965, -0.0021658313926309347, -0.004417660646140575, -0.9427297711372375, -1.7613611221313477, -0.160770446062088, -0.13133302330970764, -1.5773379802703857, -0.786401093006134, -0.11102508753538132, -0.06749948114156723, -1.7505486011505127, -0.29294103384017944, -0.5553402900695801, -2.1450233459472656, -1.0889354944229126, -2.000885248184204, -0.04641367122530937, -2.4111409187316895, -3.85038583772257e-05, -4.0531076592742465e-06, -4.768360213347478e-06, -1.2278481335670222e-05, -0.23448003828525543], "finish_reason": "stop"}], "metrics": {"energy": 598.7674867000579, "energy_per_token": 4.12943094275902, "time": 13.182036, "time_per_token": 0.09091059310344828}}
{"outputs": [{"text": "# Create the output directory if it doesn't exist\n    if not os.path.exists(output_dir):\n        os.makedirs(output_dir)\n\n    # Generate the timestamp\n    timestamp = time.strftime('%Y%m%d%H%M%S')\n    timestamp_str = 'Timestamp: {}'.format(timestamp)\n\n    # Get the current date and time\n    now = time.localtime(time.time())\n\n    # Convert the date and time to a string with the format 'YYYY-MM-DD HH:MM'\n    now_str = time.strftime('%Y-%m-%d %H:%M', now)\n\n    # Create the output file path\n    filepath = os.path.join(output_dir, now_str + ' ' + filename)\n\n    # Create a list containing the timestamp and the separator line\n    output = [timestamp_str, '']\n\n    # Iterate over the DataFrames and append them to the output list\n    for df in dataset:\n        # Convert the DataFrame to a list of its rows\n        rows", "tokens": ["#", " Create", " the", " output", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "output", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "output", "_", "dir", ")", "\n", "\n", "    ", "#", " Generate", " the", " timestamp", "\n", "    ", "timestamp", " =", " time", ".", "str", "ftime", "('", "%", "Y", "%", "m", "%", "d", "%", "H", "%", "M", "%", "S", "')", "\n", "    ", "timestamp", "_", "str", " =", " '", "Timestamp", ":", " {", "}'", ".", "format", "(", "timestamp", ")", "\n", "\n", "    ", "#", " Get", " the", " current", " date", " and", " time", "\n", "    ", "now", " =", " time", ".", "local", "time", "(", "time", ".", "time", "())", "\n", "\n", "    ", "#", " Convert", " the", " date", " and", " time", " to", " a", " string", " with", " the", " format", " '", "YY", "YY", "-", "MM", "-", "DD", " HH", ":", "MM", "'", "\n", "    ", "now", "_", "str", " =", " time", ".", "str", "ftime", "('", "%", "Y", "-%", "m", "-%", "d", " %", "H", ":%", "M", "'", ",", " now", ")", "\n", "\n", "    ", "#", " Create", " the", " output", " file", " path", "\n", "    ", "file", "path", " =", " os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " now", "_", "str", " +", " '", " '", " +", " filename", ")", "\n", "\n", "    ", "#", " Create", " a", " list", " containing", " the", " timestamp", " and", " the", " separ", "ator", " line", "\n", "    ", "output", " =", " [", "timestamp", "_", "str", ",", " '", "']", "\n", "\n", "    ", "#", " Iter", "ate", " over", " the", " Data", "F", "rames", " and", " append", " them", " to", " the", " output", " list", "\n", "    ", "for", " df", " in", " dataset", ":", "\n", "        ", "#", " Convert", " the", " Data", "Frame", " to", " a", " list", " of", " its", " rows", "\n", "        ", "rows"], "logprobs": [-1.4896069765090942, -1.6443589925765991, -0.22492961585521698, -0.23621247708797455, -0.055281803011894226, -0.01743759959936142, -0.004437955562025309, -0.3082602322101593, -0.001991552533581853, -3.361645576660521e-05, -0.04157286509871483, -0.06732496619224548, -0.009558506309986115, -0.47372618317604065, -0.028608236461877823, -0.0014909114688634872, -6.318072337307967e-06, -0.0009966888464987278, -1.7762025890988298e-05, -0.07901830226182938, -0.001613506581634283, -0.015748649835586548, -2.992108420585282e-05, -2.8609820219571702e-05, -0.000888191512785852, -0.0020874394103884697, -0.008300095796585083, -0.021977446973323822, -3.7788631743751466e-05, -0.08209078758955002, -3.6238969187252223e-05, -4.887569048150908e-06, -0.0006242233794182539, -0.0022278032265603542, -7.045020902296528e-05, -0.0023097521625459194, -0.0022521864157170057, -0.0014609150821343064, -0.21698227524757385, -0.0026443772949278355, -0.1564253270626068, -2.743112087249756, -1.194564700126648, -2.6782174110412598, -1.1062371730804443, -0.0016696811653673649, -0.09228801727294922, -0.010404040105640888, -0.07513894140720367, -5.173549288883805e-05, -0.028706932440400124, -2.50339189733495e-06, -0.6477528810501099, -0.014409179799258709, -0.024257177487015724, -0.3428388833999634, -0.0012948471121490002, -0.00023398046323563904, -0.00416696909815073, -0.9848713278770447, -0.0016677769599482417, -0.00360802817158401, -0.0035165634471923113, -0.05074732005596161, -0.0005218812730163336, -0.09665538370609283, -0.015920430421829224, -2.298349380493164, -2.8922014236450195, -1.1788616180419922, -1.2421218156814575, -0.0027242712676525116, -2.714439868927002, -3.548341751098633, -0.13224460184574127, -1.5626524686813354, -0.06909675151109695, -0.000865561596583575, -0.0002146728802472353, -0.0004338276921771467, -0.0025397446006536484, -0.0007525234250351787, -0.02114514820277691, -0.05842819809913635, -0.0006804534932598472, -0.05099170282483101, -3.3924505710601807, -0.06466295570135117, -1.209861397743225, -1.3478853702545166, -0.6236290335655212, -0.4019945561885834, -0.33500078320503235, -0.000871040450874716, -0.52202308177948, -0.02307736687362194, -0.044094640761613846, -1.5020257706055418e-05, -2.5644638538360596, -5.960462772236497e-07, -1.8135384321212769, -0.04197108373045921, -0.00013302871957421303, -0.005457383580505848, -0.0022985723335295916, -0.01314521487802267, -0.9342955350875854, -0.0005931286723352969, -0.01713402196764946, -2.5147905349731445, -0.1475425809621811, -0.2816516160964966, -0.06540365517139435, -0.0004889961564913392, -0.0858020931482315, -0.32134464383125305, -0.30716708302497864, -1.6827986240386963, -0.17529600858688354, -0.9029352068901062, -1.6646323204040527, -0.26427003741264343, -0.009525444358587265, -0.32394900918006897, -0.09377110749483109, -0.0022280411794781685, -0.0010720703285187483, -0.2482469528913498, -0.01553423423320055, -0.030893489718437195, -2.6273257732391357, -0.01406107284128666, -0.0005497612874023616, -1.953934669494629, -0.02780660055577755, -0.00853840634226799, -0.00047994061606004834, -0.1234855055809021, -1.6689286894688848e-06, -7.819823804311454e-05, -2.145764938177308e-06, -0.03590954840183258, -0.01195527520030737, -0.0014132998185232282, -0.003225127002224326, -0.00037055302527733147, -2.8013790142722428e-05, -0.00029738296871073544, -0.0026846816763281822, -0.0007319155265577137, -0.0007233387441374362, -0.0011261318577453494, -0.029050327837467194, -0.0009606037638150156, -0.00511587131768465, -0.0003361137059982866, -0.005047198850661516, -0.29230135679244995, -0.0007724162423983216, -0.11227206140756607, -1.8148326873779297, -0.17153941094875336, -1.8608932495117188, -0.4764208197593689, -0.2938931882381439, -0.38769078254699707, -0.0013600870734080672, -0.7178508043289185, -0.6175320744514465, -0.002341031562536955, -0.010827246122062206, -1.6689286894688848e-06, -0.00019751029321923852, -7.867782187531702e-06, -0.003410833887755871, -0.0019432486733421683, -0.015773175284266472, -1.8000440832111053e-05, -6.318072337307967e-06, -0.0009157040040008724, -2.7997348308563232, -9.667406266089529e-05, -2.0265558760002023e-06, -0.8442559242248535, -1.1714324951171875, -0.9572611451148987, -0.01685449853539467, -0.06538300216197968, -0.03404496982693672, -0.009285478852689266, -0.05489979684352875, -0.0011528043542057276, -0.07800064235925674, -2.649733543395996, -0.8081798553466797, -1.5226414203643799, -3.4083213806152344, -0.1933366358280182, -0.8069069385528564, -0.6670379638671875, -0.46556130051612854, -2.0564675331115723, -0.023125825449824333, -0.7676612734794617, -0.15924152731895447, -0.00162588432431221, -1.2091697454452515, -0.5135138630867004, -0.02310788631439209, -0.024406561627984047, -0.0008884296985343099, -3.0040289857424796e-05, -0.0353013351559639, -0.2155977189540863, -2.9843921661376953, -0.05929352715611458, -0.039313290268182755, -0.0008060067193582654, -0.021557534113526344, -1.038460612297058, -0.0006252956227399409, -0.19553910195827484, -0.14590385556221008, -0.26370471715927124, -0.003932482097297907, -3.2186455882765586e-06, -1.0088660717010498, -0.33501705527305603, -0.394960880279541, -0.0849757269024849, -0.007942640222609043, -0.08154552429914474, -0.11464051157236099, -0.6306077241897583, -0.0004180987598374486, -0.03845847770571709, -0.19391930103302002, -0.0020657882560044527, -0.0013508014380931854, -0.0024362902622669935, -0.0009127265075221658, -0.011276441626250744, -1.3653314113616943, -0.35311004519462585, -0.026214053854346275, -0.011258524842560291, -0.001683605252765119, -0.018577391281723976, -0.013713432475924492, -1.454965591430664, -0.004161983262747526, -3.760564088821411, -0.3160080313682556, -0.802026629447937, -0.0009026029147207737, -0.7942622303962708], "finish_reason": "length"}], "metrics": {"energy": 1082.7618986816403, "energy_per_token": 4.2295386667251575, "time": 23.778374, "time_per_token": 0.0928842734375}}
{"outputs": [{"text": "output_path = os.path.join(output_dir, filename)\n\n    # Ensure output_path is a directory\n    output_dir = os.path.dirname(output_path)\n    if not os.path.exists(output_dir):\n        os.makedirs(output_dir)\n\n    # Open file in append mode\n    with open(output_path, 'a') as f:\n        for i, df in enumerate(dataset):\n            df.to_csv(f, header=i==0, index=False)\n\n            # Add a line of hyphens to separate the DataFrames\n            if i < len(dataset)-1:\n                print(\"------\", file=f)\n\n    print(f'Successfully wrote {len(dataset)} DataFrames to {output_path}')", "tokens": ["output", "_", "path", " =", " os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", "\n", "\n", "    ", "#", " Ensure", " output", "_", "path", " is", " a", " directory", "\n", "    ", "output", "_", "dir", " =", " os", ".", "path", ".", "dirname", "(", "output", "_", "path", ")", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "output", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "output", "_", "dir", ")", "\n", "\n", "    ", "#", " Open", " file", " in", " append", " mode", "\n", "    ", "with", " open", "(", "output", "_", "path", ",", " '", "a", "')", " as", " f", ":", "\n", "        ", "for", " i", ",", " df", " in", " enumerate", "(", "dataset", "):", "\n", "            ", "df", ".", "to", "_", "csv", "(", "f", ",", " header", "=", "i", "==", "0", ",", " index", "=", "False", ")", "\n", "\n", "            ", "#", " Add", " a", " line", " of", " hyp", "hens", " to", " separate", " the", " Data", "F", "rames", "\n", "            ", "if", " i", " <", " len", "(", "dataset", ")-", "1", ":", "\n", "                ", "print", "(", "\"", "---", "---", "\"", ",", " file", "=", "f", ")", "\n", "\n", "    ", "print", "(", "f", "'", "Success", "fully", " wrote", " {", "len", "(", "dataset", ")}", " Data", "F", "rames", " to", " {", "output", "_", "path", "}", "')", "\n", "\n", "def"], "logprobs": [-2.6591882705688477, -0.03246764466166496, -0.51011723279953, -0.005678711924701929, -0.018543807789683342, -1.1920858014491387e-05, -0.00047541281674057245, -2.5033637939486653e-05, -0.012759946286678314, -0.00214406312443316, -0.02745036780834198, -3.802703940891661e-05, -9.179073458653875e-06, -0.004145837854593992, -0.07036075741052628, -0.009767832234501839, -0.018213408067822456, -1.548291563987732, -0.002768138889223337, -1.2893245220184326, -3.3659727573394775, -1.508694052696228, -2.5911214351654053, -2.9935994148254395, -0.9543644785881042, -0.43297940492630005, -2.4032955169677734, -0.3643292784690857, -0.0023426965344697237, -1.254486322402954, -0.00037865620106458664, -0.4796297252178192, -0.18980707228183746, -0.008129129186272621, -3.099436753473128e-06, -0.00011443436960689723, -1.2159273865108844e-05, -0.021343894302845, -3.2066785934148356e-05, -0.005223910789936781, -4.887569048150908e-06, -0.00023827097902540118, -0.0003292018664069474, -0.004563868511468172, -0.06912022829055786, -0.6167687773704529, -0.07444890588521957, -0.0006482883472926915, -1.9073468138230965e-06, -0.00045813556062057614, -1.2874520507466514e-05, -0.2210722267627716, -6.580135959666222e-05, -0.0006332775810733438, -1.5497195136049413e-06, -0.0007256020326167345, -0.0021344278939068317, -0.0009203489171341062, -0.0035147815942764282, -0.012618345208466053, -9.059865078597795e-06, -0.013091210275888443, -5.960462772236497e-07, -5.602820692729438e-06, -5.924526340095326e-05, -0.0009333306807093322, -1.0609570381348021e-05, -0.00011574551899684593, -0.009693221189081669, -0.012157858349382877, -0.026761896908283234, -0.002329376293346286, -1.0777318477630615, -1.507112741470337, -1.5860333442687988, -0.31713610887527466, -0.8204308152198792, -0.010490983724594116, -1.2799553871154785, -0.0018517505377531052, -0.06299108266830444, -0.0005715643637813628, -0.0005026984144933522, -0.004458724521100521, -3.576278118089249e-07, -0.00039057256071828306, -0.0004557524516712874, -0.19596831500530243, -0.060851458460092545, -0.31838011741638184, -0.0010244365548714995, -0.48116180300712585, -0.01453360915184021, -0.010867222212255001, -0.07034031301736832, -0.593510627746582, -0.9044061303138733, -0.028154706582427025, -0.2461160272359848, -0.003136717015877366, -8.439661905867979e-05, -4.970903682988137e-05, -0.0010637345258146524, -0.008816600777208805, -0.01234744768589735, -0.014366642571985722, -1.0651288032531738, -0.020204216241836548, -0.007427813485264778, -4.2676016164477915e-05, -0.0005112771177664399, -7.795983401592821e-05, -0.004032695200294256, -0.007830518297851086, -2.6526384353637695, -0.06271972507238388, -0.41591039299964905, -1.8505150079727173, -0.0008420973899774253, -0.6089512705802917, -0.11317764222621918, -0.0018375907093286514, -0.03499335050582886, -0.3966846466064453, -0.2942679822444916, -1.5753066539764404, -0.06800723820924759, -0.05467860400676727, -0.7486382126808167, -0.7619490623474121, -0.7591474652290344, -0.012100267224013805, -0.008955078199505806, -0.004754428751766682, -1.4196420907974243, -0.011756186373531818, -1.8423553705215454, -0.07850706577301025, -0.032616615295410156, -6.270212179515511e-05, -0.18456141650676727, -0.0014249657979235053, -1.1921954154968262, -0.015973929315805435, -0.19095294177532196, -0.0031272100750356913, -1.680836794548668e-05, -0.0020609109196811914, -2.342505693435669, -0.0004253674705978483, -0.0037273948546499014, -0.003147293347865343, -0.002253137994557619, -2.132352828979492, -0.8268330097198486, -0.15480999648571014, -0.10304915904998779, -0.014174849726259708, -0.21981914341449738, -0.019077973440289497, -0.015132037922739983, -0.0015072186943143606, -0.00035386974923312664, -0.16928982734680176, -0.08128365874290466, -0.19701337814331055, -1.5782248973846436, -1.133676290512085, -0.03332608938217163, -0.0903608649969101, -2.1569488048553467, -3.187373638153076, -0.16133110225200653, -0.9964969754219055, -0.2551878094673157, -0.1695391982793808, -4.207999518257566e-05, -0.0010318199638277292, -0.0030774159822613, -0.10034666210412979, -0.13538743555545807, -2.1457441107486375e-05, -0.01875617541372776, -0.10182937979698181, -0.5828697681427002, -3.325883881188929e-05, -0.004729513078927994, -0.008555426262319088, -0.09128454327583313, -0.1438218206167221, -0.1571171134710312, -0.6902129054069519], "finish_reason": "stop"}], "metrics": {"energy": 827.9437485542303, "energy_per_token": 4.3122070237199495, "time": 18.581005, "time_per_token": 0.09677606770833334}}
{"outputs": [{"text": "# Create output directory if it doesn't exist\n    if not os.path.exists(output_dir):\n        os.makedirs(output_dir)\n\n    # Generate the absolute path for the output file\n    output_path = os.path.join(output_dir, filename)\n\n    # Check if the file already exists\n    if os.path.isfile(output_path):\n        # If it exists, append \" (1)\" to the file name\n        filename = os.path.splitext(filename)\n        filename = f'{filename[0]} (1){filename[1]}'\n        output_path = os.path.join(output_dir, filename)\n\n    # Open the file in append mode (\"a\") to avoid overwriting existing data\n    with open(output_path, 'a') as output_file:\n        # Iterate over each DataFrame in the list\n        for i, df in enumerate(dataset):\n            # If it's not the first DataFrame, write a line of hyphens followed by a newline\n            if i > 0:\n                output_file.write", "tokens": ["#", " Create", " output", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "output", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "output", "_", "dir", ")", "\n", "\n", "    ", "#", " Generate", " the", " absolute", " path", " for", " the", " output", " file", "\n", "    ", "output", "_", "path", " =", " os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", "\n", "\n", "    ", "#", " Check", " if", " the", " file", " already", " exists", "\n", "    ", "if", " os", ".", "path", ".", "is", "file", "(", "output", "_", "path", "):", "\n", "        ", "#", " If", " it", " exists", ",", " append", " \"", " (", "1", ")\"", " to", " the", " file", " name", "\n", "        ", "filename", " =", " os", ".", "path", ".", "spl", "ite", "xt", "(", "filename", ")", "\n", "        ", "filename", " =", " f", "'{", "filename", "[", "0", "]}", " (", "1", "){", "filename", "[", "1", "]", "}'", "\n", "        ", "output", "_", "path", " =", " os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", "\n", "\n", "    ", "#", " Open", " the", " file", " in", " append", " mode", " (", "\"", "a", "\"", ")", " to", " avoid", " over", "writing", " existing", " data", "\n", "    ", "with", " open", "(", "output", "_", "path", ",", " '", "a", "')", " as", " output", "_", "file", ":", "\n", "        ", "#", " Iter", "ate", " over", " each", " Data", "Frame", " in", " the", " list", "\n", "        ", "for", " i", ",", " df", " in", " enumerate", "(", "dataset", "):", "\n", "            ", "#", " If", " it", "'", "s", " not", " the", " first", " Data", "Frame", ",", " write", " a", " line", " of", " hyp", "hens", " followed", " by", " a", " new", "line", "\n", "            ", "if", " i", " >", " ", "0", ":", "\n", "                ", "output", "_", "file", ".", "write"], "logprobs": [-1.4896069765090942, -1.6443589925765991, -2.229635000228882, -0.20963692665100098, -0.0384395495057106, -0.03550028055906296, -0.37319231033325195, -0.0034680955577641726, -0.00010263393050990999, -0.020147789269685745, -0.05764494836330414, -0.00708164693787694, -0.3115968406200409, -0.023303797468543053, -0.00126151111908257, -5.006777428206988e-06, -0.0006061147432774305, -1.3947389561508317e-05, -0.07973480969667435, -0.001987150404602289, -0.01904475875198841, -2.5987286790041253e-05, -2.407998726994265e-05, -0.000914393924176693, -0.0017257335130125284, -0.008842832408845425, -0.01661839708685875, -3.516612196108326e-05, -0.08693130314350128, -3.755022044060752e-05, -5.960446742392378e-06, -0.0005388000281527638, -0.001921832445077598, -7.497983460780233e-05, -0.0003798478574026376, -0.002271335804834962, -0.0016000575851649046, -0.20778758823871613, -0.0022394596599042416, -0.25126537680625916, -2.9294655323028564, -2.0830628871917725, -3.495779037475586, -0.16752518713474274, -0.7464859485626221, -0.009328351356089115, -0.4120175838470459, -0.0422409325838089, -0.043348364531993866, -0.000809818331617862, -0.8812949061393738, -0.002732593100517988, -0.6904248595237732, -0.0022639615926891565, -0.010387877002358437, -1.1920922133867862e-06, -9.572047565598041e-05, -6.556489552167477e-06, -0.023583736270666122, -0.0012391278287395835, -0.01350152026861906, -1.5735502529423684e-05, -8.4638240878121e-06, -0.0006430465145967901, -0.04288925230503082, -0.010592310689389706, -0.0025046665687114, -0.0542030967772007, -0.0016012478154152632, -0.18706735968589783, -2.4553980827331543, -0.08891960233449936, -0.31910496950149536, -0.8360617160797119, -0.3548634648323059, -0.001687889569438994, -0.9975522756576538, -0.0008086272282525897, -0.0430624857544899, -0.0319739505648613, -7.152555099310121e-07, -0.00014995403762441128, -6.079655122448457e-06, -2.1268327236175537, -0.0004966217675246298, -0.00021205084340181202, -0.002615247620269656, -2.861018856492592e-06, -0.00019870213873218745, -0.006809481419622898, -0.0008391196606680751, -0.018403610214591026, -0.624729335308075, -0.8272804021835327, -2.4325199127197266, -1.3558669090270996, -0.0329449437558651, -1.000449299812317, -1.1800930500030518, -2.6905932426452637, -1.0604113340377808, -0.007646103389561176, -0.5772877931594849, -0.011882830411195755, -1.3112146854400635, -0.005897975992411375, -1.3676267862319946, -0.0011555430246517062, -1.9392993450164795, -1.471198320388794, -0.48384374380111694, -3.4927710657939315e-05, -1.1920858014491387e-05, -2.3841830625315197e-06, -0.41341298818588257, -8.344646857949556e-07, 0.0, -4.8636207793606445e-05, -0.013758349232375622, -0.9553295969963074, -0.1180284172296524, -0.001492696930654347, -0.14097163081169128, -0.030964456498622894, -0.327953964471817, -2.5813467502593994, -0.0034420788288116455, -0.004665560554713011, -6.031808152329177e-05, -0.032506417483091354, -0.48617759346961975, -0.007586714345961809, -0.03665289282798767, -0.0009541726321913302, -0.022446025162935257, -0.000259365770034492, -0.0002536452084314078, -6.854299135738984e-05, -0.010151658207178116, -0.3495389223098755, -0.3707129657268524, -1.2636104656849056e-05, -0.000580499938223511, -0.0011550667695701122, -0.00041976699139922857, -1.4305104514278355e-06, -4.768360213347478e-06, -9.059865078597795e-06, -0.0002748588449321687, -0.00010466027742950246, -0.004635659046471119, -1.0728830375228426e-06, -0.0014629386132583022, -4.815939246327616e-05, -0.0008361419313587248, -0.0001919085334520787, -0.0014396075857803226, -0.08517728745937347, -0.04143059626221657, -0.227511927485466, -1.0215126276016235, -0.07000492513179779, -0.338130921125412, -0.31806880235671997, -0.7393193244934082, -0.024829816073179245, -3.775505304336548, -1.1675013303756714, -0.007569677662104368, -0.057289622724056244, -0.02292335405945778, -1.9356253147125244, -0.8767362833023071, -0.04330841079354286, -0.0049104331992566586, -0.7237014770507812, -0.8847573399543762, -0.03822856768965721, -0.0008789013954810798, -0.027392376214265823, -0.00031549722189083695, -0.0003505330823827535, -0.0011192255187779665, -4.768370445162873e-07, -3.576272320060525e-06, -0.00031287543242797256, -0.5432466864585876, -0.007475734688341618, -0.33409491181373596, -0.0006943913758732378, -3.383702278137207, -0.0802423357963562, -0.012719221413135529, -0.0010224120924249291, -0.0011707840021699667, -0.08204027265310287, -0.6478270888328552, -1.027799367904663, -0.000501983508002013, -0.5407560467720032, -0.4863649606704712, -0.06295973807573318, -0.0008275659638457, -0.14296001195907593, -0.006326884031295776, -0.7406247854232788, -0.044878773391246796, -0.0007540719816461205, -0.0068972124718129635, -0.8470020890235901, -0.0435781255364418, -0.19520317018032074, -0.0034761736169457436, -9.512448741588742e-05, -5.1973900554003194e-05, -0.000692842761054635, -0.011430017650127411, -0.001546973828226328, -0.01387604046612978, -0.15567849576473236, -1.3057860136032104, -0.6668891310691833, -0.06860824674367905, -2.5152843591058627e-05, -0.03532630577683449, -0.0001262346631847322, -0.0006308949086815119, -0.009237290360033512, -0.0004938812926411629, -0.03684145584702492, -0.7613601088523865, -0.0767199844121933, -0.3573992848396301, -0.03135710209608078, -0.005892287474125624, -0.0016918168403208256, -2.299060583114624, -0.00040987672400660813, -0.19996964931488037, -0.023047195747494698, -0.1797536164522171, -0.43976572155952454, -0.00030250742565840483, -0.024195043370127678, -0.0005526207387447357, -0.08599178493022919, -8.320462075062096e-05, -0.00015925093612167984, -0.0006348263123072684, -0.00040928093949332833, -0.0004953111056238413, -0.023922957479953766, -1.2040065485052764e-05, -6.294052582234144e-05, -5.3165931603871286e-05, -0.0011539950501173735], "finish_reason": "length"}], "metrics": {"energy": 1074.8467926445012, "energy_per_token": 4.198620283767583, "time": 24.429642, "time_per_token": 0.0954282890625}}
{"outputs": [{"text": "path = os.path.join(output_dir, filename)\n    with open(path, 'w') as file:\n        for df in dataset:\n            df.to_csv(file, index=False)\n            file.write('\\n')\n            file.write('---------\\n')\n            file.write('\\n')\n            file.write('---------\\n')", "tokens": ["path", " =", " os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", "\n", "    ", "with", " open", "(", "path", ",", " '", "w", "')", " as", " file", ":", "\n", "        ", "for", " df", " in", " dataset", ":", "\n", "            ", "df", ".", "to", "_", "csv", "(", "file", ",", " index", "=", "False", ")", "\n", "            ", "file", ".", "write", "('", "\\", "n", "')", "\n", "            ", "file", ".", "write", "('", "---", "---", "---", "\\", "n", "')", "\n", "            ", "file", ".", "write", "('", "\\", "n", "')", "\n", "            ", "file", ".", "write", "('", "---", "---", "---", "\\", "n", "')", "\n", "\n", "if"], "logprobs": [-2.318084716796875, -0.05094265192747116, -0.05042274668812752, -2.2291887944447808e-05, -0.0012866322649642825, -5.8530047681415454e-05, -0.016246426850557327, -0.0025825502816587687, -0.02357698231935501, -9.655486064730212e-05, -4.291525328881107e-06, -0.007963691838085651, -0.09532179683446884, -0.014641928486526012, -0.020014241337776184, -0.15263929963111877, -0.4390549659729004, -0.003618955845013261, -0.0008147019543685019, -0.005951066501438618, -0.002316412515938282, -0.33278921246528625, -0.050017789006233215, -0.21118497848510742, -0.0002420847595203668, -1.3369641304016113, -0.022673415020108223, -0.006403523031622171, -0.013499991968274117, -0.1179734319448471, -0.8386646509170532, -0.005317235365509987, -0.003501357976347208, -0.007932942360639572, -0.006121339276432991, -0.004210654646158218, -0.1559954285621643, -0.02033306658267975, -0.006295965984463692, -2.932505594799295e-05, -0.0007472821744158864, -5.519237674889155e-05, -0.019043589010834694, -0.02940506301820278, -0.3766258656978607, -0.010138323530554771, -0.025128625333309174, -0.10552781075239182, -0.00761984009295702, -0.011994617059826851, -0.17929446697235107, -9.97731985989958e-05, -0.0007832558476366103, -0.22983118891716003, -0.9075458645820618, -0.00042524831951595843, -0.5017780065536499, -0.0749955102801323, -0.03588631749153137, -0.08207541704177856, -4.5060096454108134e-05, -0.0004612335760612041, -0.05470580235123634, -0.24682532250881195, -0.012762182392179966, -1.2009239196777344, -3.1676902770996094, -0.00032789100077934563, -0.05882875621318817, -0.0436294823884964, -0.12897427380084991, -0.016990695148706436, -3.4450891689630225e-05, -0.0006937957368791103, -0.0006360176485031843, -0.002666015876457095, -8.666139910928905e-05, -0.0037176560144871473, -0.0240772794932127, -3.1754884719848633, -1.0290412902832031, -0.00034528967808000743, -1.384904384613037, -0.09113415330648422, -1.4921878576278687, -0.012898466549813747, -0.02424088679254055, -0.02074345201253891, -6.758938252460212e-05, -0.001608150894753635, -0.010024912655353546, -1.9357110261917114, -2.2794783115386963], "finish_reason": "stop"}], "metrics": {"energy": 384.13284276390084, "energy_per_token": 4.130460674880654, "time": 8.355547, "time_per_token": 0.08984459139784946}}
{"outputs": [{"text": "if not os.path.isdir(output_dir):\n        os.mkdir(output_dir)\n    file_path = os.path.join(output_dir, filename)\n    # write first DataFrame to file\n    dataset[0].to_csv(file_path, index=False)\n    # write subsequent DataFrames to file with separator\n    for df in dataset[1:]:\n        with open(file_path, 'a', newline='') as file:\n            df.to_csv(file, index=False, header=False)\n            print(f'DataFrame with index {df.index} written to {filename}', file=file)\n            file.write('\\n-------------------------------------------------------------------------------------------------\\n')\n    print('all dataframes written to file')", "tokens": ["if", " not", " os", ".", "path", ".", "is", "dir", "(", "output", "_", "dir", "):", "\n", "        ", "os", ".", "mk", "dir", "(", "output", "_", "dir", ")", "\n", "    ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", "\n", "    ", "#", " write", " first", " Data", "Frame", " to", " file", "\n", "    ", "dataset", "[", "0", "]", ".", "to", "_", "csv", "(", "file", "_", "path", ",", " index", "=", "False", ")", "\n", "    ", "#", " write", " subsequent", " Data", "F", "rames", " to", " file", " with", " separ", "ator", "\n", "    ", "for", " df", " in", " dataset", "[", "1", ":", "]:", "\n", "        ", "with", " open", "(", "file", "_", "path", ",", " '", "a", "'", ",", " new", "line", "='", "')", " as", " file", ":", "\n", "            ", "df", ".", "to", "_", "csv", "(", "file", ",", " index", "=", "False", ",", " header", "=", "False", ")", "\n", "            ", "print", "(", "f", "'", "DataFrame", " with", " index", " {", "df", ".", "index", "}", " written", " to", " {", "filename", "}'", ",", " file", "=", "file", ")", "\n", "            ", "file", ".", "write", "('", "\\", "n", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "-\\", "n", "')", "\n", "    ", "print", "('", "all", " data", "frames", " written", " to", " file", "')", "\n", "\n", "#"], "logprobs": [-1.9865838289260864, -0.20879869163036346, -0.042863212525844574, -2.169585604860913e-05, -0.0026385514065623283, -1.3351351299206726e-05, -1.8336663246154785, -0.0032222752925008535, -0.003709461074322462, -0.014132772572338581, -4.3987260141875595e-05, -3.0397906812140718e-05, -0.0021729685831815004, -0.03315819799900055, -0.02877121977508068, -0.11340265721082687, -2.777537883957848e-05, -0.7392909526824951, -0.0001102625101339072, -0.004801647737622261, -0.005304073449224234, -2.682172998902388e-05, -9.536738616588991e-07, -0.0010342017048969865, -0.013698381371796131, -0.4425116777420044, -1.161550521850586, -1.1477633714675903, -0.04321639612317085, -0.005882333032786846, -0.03936921805143356, -2.0265558760002023e-06, -0.0003466005437076092, -1.3708974620385561e-05, -0.0032377224415540695, -0.0012403184082359076, -0.008967955596745014, -1.7762025890988298e-05, -3.933898824470816e-06, -0.0016496871830895543, -0.06454639881849289, -0.010679002851247787, -0.0076759145595133305, -0.23566797375679016, -2.9761486053466797, -3.9760241508483887, -2.308830738067627, -0.5123205780982971, -0.005079934373497963, -0.4571927785873413, -0.2531282901763916, -0.2941121757030487, -0.006610075477510691, -0.1595195233821869, -0.004219795111566782, -0.00023135847004596144, -6.270212179515511e-05, -6.937739817658439e-05, -0.0025250001344829798, -2.062299427052494e-05, -0.00013839241000823677, -0.00019643761334009469, -0.016366170719265938, -0.0006606780225411057, -3.3378546504536644e-06, -0.004467031918466091, -0.8226515054702759, -0.012490028515458107, -0.033899322152137756, -0.10970679670572281, -0.0025195302441716194, -0.606494665145874, -0.21463000774383545, -0.5250441431999207, -1.6757813692092896, -0.00047743841423653066, -0.0004724340105894953, -3.099436753473128e-06, -0.12146633118391037, -0.012025594711303711, -0.9440299272537231, -0.7008894681930542, -0.01304673496633768, -0.5267510414123535, -0.002200921531766653, -0.16469211876392365, -0.45067209005355835, -0.002159646013751626, -0.0005872909096069634, -0.0013441346818581223, -0.000311802898067981, -0.0031240014359354973, -0.00019834458362311125, -0.0016582560492679477, -0.005826394539326429, -1.994911789894104, -0.000739658426027745, -0.0003620922507252544, -0.0022320852149277925, -7.891343557275832e-05, -9.536738616588991e-07, -0.00024828212917782366, -0.16952107846736908, -0.00044764988706447184, -1.6321194171905518, -0.0005704921204596758, -0.08144575357437134, -3.576278118089249e-07, -0.0750696063041687, -6.12716976320371e-05, -0.0001677133986959234, -1.147526741027832, -0.006229981314390898, -0.013207568787038326, -0.003544003702700138, -0.9330750703811646, -0.00039104922325350344, -0.0002821285743266344, -2.3841855067985307e-07, -6.341733387671411e-05, -3.373566141817719e-05, -0.003548042383044958, -0.0015788720920681953, -0.89567631483078, -0.0003579214389901608, -0.000993711524643004, -0.06943367421627045, -0.018906734883785248, -0.0024240415077656507, -0.3469615876674652, -0.0806417316198349, -0.01582668162882328, -0.20752984285354614, -1.7704205513000488, -0.4758453071117401, -1.8219045400619507, -1.8754476308822632, -2.7731316089630127, -3.0119075775146484, -1.431772232055664, -0.07436922937631607, -1.5228912830352783, -0.013545858673751354, -0.04994135722517967, -0.5590304136276245, -0.7989444136619568, -0.03557506203651428, -1.0313825607299805, -0.739960789680481, -2.4954748153686523, -0.15511587262153625, -0.5602619647979736, -0.011997444555163383, -0.012117580510675907, -0.0661296471953392, -0.05121292173862457, -0.2566835582256317, -2.6999011039733887, -0.007981667295098305, -0.007154085673391819, -0.23353911936283112, -0.46213895082473755, -0.0010737375123426318, -1.3520400524139404, -0.010804250836372375, -1.3445028066635132, -0.16208407282829285, -0.13498495519161224, -0.11601590365171432, -0.09827541559934616, -0.060375962406396866, -0.08951340615749359, -0.12179704010486603, -0.16596324741840363, -0.12975703179836273, -0.10422008484601974, -0.11746541410684586, -0.09981697797775269, -0.08620277047157288, -0.13158263266086578, -0.11764230579137802, -0.08375440537929535, -0.09523888677358627, -0.10561512410640717, -0.07284896820783615, -0.08249394595623016, -0.06514881551265717, -0.04828454181551933, -0.06454628705978394, -0.10937152802944183, -0.10008633136749268, -0.12859991192817688, -0.11122669279575348, -0.10812541842460632, -0.1672808676958084, -3.0285768508911133, -0.0023111794143915176, -0.20488019287586212, -0.05657081678509712, -1.5266485214233398, -0.47391000390052795, -2.197843313217163, -4.446069717407227, -0.9220392107963562, -0.3115740716457367, -0.6216221451759338, -0.4480486214160919, -0.9520819187164307, -0.49338269233703613, -0.0684746727347374, -0.31669890880584717, -2.3155429363250732], "finish_reason": "stop"}], "metrics": {"energy": 871.3437088527678, "energy_per_token": 4.110111834211169, "time": 19.791348, "time_per_token": 0.09335541509433962}}
{"outputs": [{"text": "start_time = time.perf_counter()\n    os.makedirs(output_dir, exist_ok=True)\n    file_path = os.path.join(output_dir, filename)\n    with open(file_path, 'w') as f:\n        for i, df in enumerate(dataset):\n            df.to_csv(f, index=False)\n            if i < len(dataset) - 1:\n                f.write('\\n')\n                f.write('--------------------------------------------------\\n')\n                f.write('--------------------------------------------------\\n')\n                f.write('--------------------------------------------------\\n')\n                f.write('--------------------------------------------------\\n')\n                f.write('--------------------------------------------------\\n')\n                f.write('\\n')\n    end_time = time.perf_counter()\n    ", "tokens": ["start", "_", "time", " =", " time", ".", "perf", "_", "counter", "()", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "output", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "    ", "file", "_", "path", " =", " os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", "\n", "    ", "with", " open", "(", "file", "_", "path", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "for", " i", ",", " df", " in", " enumerate", "(", "dataset", "):", "\n", "            ", "df", ".", "to", "_", "csv", "(", "f", ",", " index", "=", "False", ")", "\n", "            ", "if", " i", " <", " len", "(", "dataset", ")", " -", " ", "1", ":", "\n", "                ", "f", ".", "write", "('", "\\", "n", "')", "\n", "                ", "f", ".", "write", "('", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "--\\", "n", "')", "\n", "                ", "f", ".", "write", "('", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "--\\", "n", "')", "\n", "                ", "f", ".", "write", "('", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "--\\", "n", "')", "\n", "                ", "f", ".", "write", "('", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "--\\", "n", "')", "\n", "                ", "f", ".", "write", "('", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "---", "--\\", "n", "')", "\n", "                ", "f", ".", "write", "('", "\\", "n", "')", "\n", "    ", "end", "_", "time", " =", " time", ".", "perf", "_", "counter", "()", "\n", "    "], "logprobs": [-2.749692916870117, -0.41413524746894836, -0.052472010254859924, -0.014317874796688557, -0.012668373063206673, -0.0006443570018745959, -1.869307041168213, -4.124556289752945e-05, -2.706014311115723e-05, -0.05541658774018288, -0.1048775389790535, -0.19846855103969574, -1.8307571411132812, -0.0022967883851379156, -0.05646627023816109, -2.861018856492592e-06, -3.290122185717337e-05, -0.000806602300144732, -0.03199588879942894, -2.95634672511369e-05, -4.0531076592742465e-06, -0.00729279313236475, -0.0066351811401546, -1.4305104514278355e-06, -2.396077979938127e-05, -0.007354093249887228, -0.001292942208237946, -0.00047469791024923325, -0.09173654019832611, -0.13021907210350037, -1.2438395023345947, -1.0735859870910645, -0.023191869258880615, -0.0038567224983125925, -0.03617356717586517, -5.960462772236497e-07, -0.00020489977032411844, -2.3245540432981215e-05, -0.003243901301175356, -0.0007109498255886137, -0.008617476560175419, -9.775113539944869e-06, -3.6954811548639555e-06, -0.000696654780767858, -0.027797672897577286, -0.007325928658246994, -0.004323065280914307, -0.2798089385032654, -0.37703076004981995, -0.0018126023933291435, -0.0004673104267567396, -0.002577794250100851, -5.149708886165172e-05, -5.960462772236497e-07, -0.0010944573441520333, -0.21558493375778198, -0.014540893025696278, -0.243605375289917, -0.0006115949945524335, -0.5278681516647339, -0.01646643504500389, -0.014915846288204193, -0.008541951887309551, -0.1250409036874771, -0.6737744212150574, -0.016640203073620796, -0.2500709295272827, -0.003495418466627598, -0.00013386306818574667, -5.185469490243122e-05, -0.0012222208315506577, -0.005902834702283144, -0.008576583117246628, -0.00313564739190042, -0.19568027555942535, -0.012511690147221088, -0.007523298729211092, -7.1403817855753e-05, -0.0003960540343541652, -7.164221460698172e-05, -0.0021044507157057524, -0.017906904220581055, -0.9560176134109497, -0.007412785664200783, -0.030990805476903915, -0.1447308510541916, -0.005720434710383415, -0.005710715427994728, -0.06814154237508774, -0.0043580797500908375, -0.09539277851581573, -0.0043351720087230206, -2.038458114839159e-05, -0.002188194077461958, -0.08184323459863663, -2.658331868587993e-05, -0.003360341303050518, -5.745722592109814e-05, -0.000832449528388679, -0.08406691998243332, -0.0013168720761314034, -0.10500172525644302, -3.373566141817719e-05, -9.42901024245657e-05, -0.06148390471935272, -0.45099523663520813, -0.00025376438861712813, -0.8586271405220032, -0.07484409213066101, -0.054161202162504196, -0.07084064185619354, -5.94836674281396e-05, -0.0002090712368953973, -0.06697897613048553, -0.5395005941390991, -0.012309649959206581, -1.0284242630004883, -0.13815253973007202, -0.08086714893579483, -0.07362062484025955, -0.10303259640932083, -0.04605672135949135, -0.04560443386435509, -0.09002024680376053, -0.1001657098531723, -0.09740154445171356, -0.13791267573833466, -0.07871545106172562, -0.07243536412715912, -0.08579202741384506, -2.757551670074463, -0.0014187756460160017, -0.020196039229631424, -0.018221836537122726, -0.1827898770570755, -0.019019026309251785, -2.3364747903542593e-05, -0.00023958197562023997, -0.0009006972541101277, -1.0910007953643799, -0.000727508042473346, -0.003184844274073839, -0.001807366730645299, -0.0017714299028739333, -0.0012272215681150556, -0.00242380378767848, -0.0010511117288842797, -0.000542493537068367, -0.00019262365822214633, -0.0002320735511602834, -0.00013660451804753393, -7.247662142617628e-05, -0.00011538793478393927, -9.798523387871683e-05, -0.00014602071314584464, -0.0012987758964300156, -0.00011097769311163574, -0.00994394812732935, -0.0006283930852077901, -0.2513885796070099, -0.006392862647771835, -1.645074735279195e-05, -7.724463648628443e-05, -0.000773369160015136, -0.657706081867218, -0.0004646890447475016, -0.0011545903980731964, -0.0006437613046728075, -0.0004303721070755273, -0.0003203832311555743, -0.0013090145075693727, -0.0004138090298511088, -0.0005016260547563434, -0.0002256377338198945, -0.000163541772053577, -0.0001081169830285944, -2.1576648578047752e-05, -5.98412734689191e-05, -0.00012885693286079913, -0.0001174142598756589, -0.0003268184664193541, -1.2755313036905136e-05, -0.026461834087967873, -0.0006891497760079801, -0.24414771795272827, -0.0029693818651139736, -1.3947389561508317e-05, -0.00030417583184316754, -0.00215798057615757, -1.2647302150726318, -0.002476127352565527, -0.0017372767906636, -0.0028023754712194204, -0.0016162439715117216, -0.001419847016222775, -0.006426383275538683, -0.0015544723719358444, -0.0015489972429350019, -0.0007569308509118855, -0.0004085659747943282, -0.00030489088385365903, -7.486063259420916e-05, -0.00017331528943032026, -9.345571743324399e-05, -0.00010477947944309562, -0.0001908358681248501, -1.847726889536716e-05, -0.01637074537575245, -0.001128989621065557, -0.1055838018655777, -0.00446453969925642, -1.5258672647178173e-05, -0.0004301338049117476, -0.00100192881654948, -0.3330821990966797, -0.0004505096294451505, -0.0015279296785593033, -0.0012511529494076967, -0.001630882965400815, -0.0010812395485118032, -0.0046088420785963535, -0.001261273049749434, -0.0007832558476366103, -0.0005230727256275713, -0.00028725311858579516, -0.00018869050836656243, -4.279521817807108e-05, -8.439661905867979e-05, -4.410646579344757e-05, -5.328513361746445e-05, -7.92710343375802e-05, -3.0636318115284666e-05, -0.0159563310444355, -0.0014144902816042304, -0.11457737535238266, -0.004257899709045887, -2.6702524337451905e-05, -0.0007848043460398912, -0.0018878034316003323, -0.46349430084228516, -6.246371776796877e-05, -0.0021785590797662735, -0.0017460829112678766, -0.13336306810379028, -0.49946701526641846, -0.0014432977186515927, -0.00030596344731748104, -0.00268729729577899, -0.0008298290777020156, -6.318072337307967e-06, -0.0007715824176557362, -1.1920928244535389e-07, -4.279521817807108e-05, -8.618460560683161e-05, -0.0026066871359944344, -0.03042781352996826], "finish_reason": "length"}], "metrics": {"energy": 973.3580720548624, "energy_per_token": 3.8021799689643063, "time": 23.330053, "time_per_token": 0.09113301953125}}
{"outputs": [{"text": "# Create the output directory if it doesn't exist\n    if not os.path.exists(output_dir):\n        os.makedirs(output_dir)\n    # Get the current date and time as the file name\n    timestamp = time.strftime(\"%Y-%m-%d_%H-%M-%S\")\n    # Join the output directory and filename with the current date and time\n    full_filename = os.path.join(output_dir, f\"{timestamp}_{filename}\")\n    # Use the `to_csv` method to write the DataFrames to the CSV file\n    # Use the `mode='a'` argument to append to an existing file instead of overwriting it\n    # Use the `encoding='utf-8'` argument to use the UTF-8 encoding\n    # Use the `header=True` argument to write the header row for each DataFrame\n    # Use the `index=False` argument to exclude the index row for each DataFrame\n    # Use the `mode='a'` argument to append to an existing file instead of overwriting it\n    # Use the `encoding='utf-8'", "tokens": ["#", " Create", " the", " output", " directory", " if", " it", " doesn", "'", "t", " exist", "\n", "    ", "if", " not", " os", ".", "path", ".", "exists", "(", "output", "_", "dir", "):", "\n", "        ", "os", ".", "m", "aked", "irs", "(", "output", "_", "dir", ")", "\n", "    ", "#", " Get", " the", " current", " date", " and", " time", " as", " the", " file", " name", "\n", "    ", "timestamp", " =", " time", ".", "str", "ftime", "(", "\"", "%", "Y", "-%", "m", "-%", "d", "_", "%", "H", "-%", "M", "-%", "S", "\"", ")", "\n", "    ", "#", " Join", " the", " output", " directory", " and", " filename", " with", " the", " current", " date", " and", " time", "\n", "    ", "full", "_", "filename", " =", " os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " f", "\"", "{", "timestamp", "}_{", "filename", "}\"", ")", "\n", "    ", "#", " Use", " the", " `", "to", "_", "csv", "`", " method", " to", " write", " the", " Data", "F", "rames", " to", " the", " CS", "V", " file", "\n", "    ", "#", " Use", " the", " `", "mode", "='", "a", "'", "`", " argument", " to", " append", " to", " an", " existing", " file", " instead", " of", " over", "writing", " it", "\n", "    ", "#", " Use", " the", " `", "encoding", "='", "utf", "-", "8", "'", "`", " argument", " to", " use", " the", " U", "TF", "-", "8", " encoding", "\n", "    ", "#", " Use", " the", " `", "header", "=", "True", "`", " argument", " to", " write", " the", " header", " row", " for", " each", " Data", "Frame", "\n", "    ", "#", " Use", " the", " `", "index", "=", "False", "`", " argument", " to", " exclude", " the", " index", " row", " for", " each", " Data", "Frame", "\n", "    ", "#", " Use", " the", " `", "mode", "='", "a", "'", "`", " argument", " to", " append", " to", " an", " existing", " file", " instead", " of", " over", "writing", " it", "\n", "    ", "#", " Use", " the", " `", "encoding", "='", "utf", "-", "8", "'"], "logprobs": [-1.4896069765090942, -1.6443589925765991, -0.22492961585521698, -0.23621247708797455, -0.055281803011894226, -0.01743759959936142, -0.004437955562025309, -0.3082602322101593, -0.001991552533581853, -3.361645576660521e-05, -0.04157286509871483, -0.06732496619224548, -0.009558506309986115, -0.47372618317604065, -0.028608236461877823, -0.0014909114688634872, -6.318072337307967e-06, -0.0009966888464987278, -1.7762025890988298e-05, -0.07901830226182938, -0.001613506581634283, -0.015748649835586548, -2.992108420585282e-05, -2.8609820219571702e-05, -0.000888191512785852, -0.0020874394103884697, -0.008300095796585083, -0.021977446973323822, -3.7788631743751466e-05, -0.08209078758955002, -3.6238969187252223e-05, -4.887569048150908e-06, -0.0006242233794182539, -0.0022278032265603542, -7.045020902296528e-05, -0.0023097521625459194, -0.0022521864157170057, -0.0014609150821343064, -1.6722816228866577, -0.26916077733039856, -2.8171300888061523, -0.16697344183921814, -0.1649894267320633, -1.0558784008026123, -0.09833775460720062, -0.03977736830711365, -2.3586111068725586, -2.3943212032318115, -0.8276435136795044, -1.2286275625228882, -0.2812824845314026, -0.02406121976673603, -1.9136886596679688, -0.02003527246415615, -0.04819366708397865, -3.015949550899677e-05, -0.006758686620742083, -2.9802276912960224e-06, -0.7862602472305298, -0.011300605721771717, -0.003983539994806051, -0.01964890956878662, -0.7547985315322876, -0.0010052633006125689, -0.0002983363519888371, -0.0004363300104159862, -0.8284705877304077, -0.00020632999076042324, -0.0005608416395261884, -0.0968722477555275, -6.329813186312094e-05, -0.01251098420470953, -0.00032109825406223536, -0.010473289526998997, -0.09632307291030884, -0.00963537022471428, -0.10123971849679947, -0.6994158029556274, -2.470482349395752, -0.04088295251131058, -0.29166626930236816, -0.3016950190067291, -0.1389675736427307, -0.9242222905158997, -0.5751805901527405, -0.2122349888086319, -1.7503399848937988, -0.5374892950057983, -0.056141968816518784, -0.00109576724935323, -0.11865770071744919, -0.0020901754032820463, -2.498619794845581, -0.0468679815530777, -0.7703843712806702, -0.0013716346584260464, -0.018942996859550476, -9.65590606938349e-06, -8.248942322097719e-05, -7.152531907195225e-06, -0.00022194306075107306, -0.001327467616647482, -0.015471085906028748, -2.634490556374658e-05, -1.2636104656849056e-05, -0.0011847150744870305, -0.323907732963562, -0.20274309813976288, -0.009963068179786205, -1.4239729642868042, -0.05864238366484642, -0.0010880271438509226, -0.04496140405535698, -0.003453127108514309, -0.0022361292503774166, -0.18867865204811096, -0.2490340918302536, -3.474489450454712, -0.6738153100013733, -3.338001012802124, -0.7714589238166809, -9.703165414975956e-05, -0.008404599502682686, -0.23486760258674622, -0.038563892245292664, -1.375953197479248, -0.047001972794532776, -0.3794895112514496, -0.14517180621623993, -0.12399553507566452, -8.284702198579907e-05, -0.008870481513440609, -0.6032680869102478, -1.3707387447357178, -8.082063141046092e-05, -0.0010305099422112107, -0.6993489861488342, -0.0038750097155570984, -0.7003893256187439, -1.205774188041687, -0.5939669609069824, -0.07901158183813095, -0.4528336226940155, -1.1120638847351074, -0.004574310965836048, -0.004772818181663752, -0.008040678687393665, -0.9034587144851685, -0.05840211361646652, -0.013526923954486847, -0.24419759213924408, -1.5517048835754395, -0.0013613966293632984, -0.05005384609103203, -0.6927267909049988, -0.0037219314835965633, -0.014362881891429424, -0.002092435723170638, -0.1017037183046341, -0.09416763484477997, -0.003588310442864895, -0.3031232953071594, -0.12016057968139648, -0.03599637374281883, -0.0034610864240676165, -3.3566699028015137, -0.010704006999731064, -0.008963820524513721, -0.01029018685221672, -0.0018711454467847943, -0.019204864278435707, -0.0015112657565623522, -0.012268907390534878, -0.02284901961684227, -2.66695499420166, -0.6000829935073853, -0.20082800090312958, -2.50339189733495e-06, -0.0006700892699882388, -6.139089964563027e-05, -0.03266219049692154, -0.7605489492416382, -0.0031670196913182735, -0.28555238246917725, -0.21656161546707153, -0.05318845063447952, -0.004543338902294636, -0.7878690958023071, -0.014490136876702309, -0.48695796728134155, -0.021530933678150177, -0.0807996392250061, -0.009013913571834564, -0.40178918838500977, -0.14301683008670807, -1.5381437540054321, -0.6687606573104858, -1.1582609415054321, -0.17736782133579254, -0.018046822398900986, -0.00022492263815365732, -0.05361156165599823, -0.0049055698327720165, -0.12868283689022064, -0.054776228964328766, -0.021886948496103287, -0.005035456735640764, -0.14145584404468536, -0.000169382052263245, -0.012109806761145592, -0.0004400238685775548, -0.000811366830021143, -0.030004842206835747, -2.2132835388183594, -0.013638175092637539, -0.7024064660072327, -1.8774055242538452, -0.395453542470932, -0.004026877228170633, -0.0002474478678777814, -0.0001554368354845792, -0.005056687630712986, -0.02490481734275818, -0.3408604562282562, -0.18172229826450348, -0.059715636074543, -0.007684431970119476, -0.3331763744354248, -0.022876868024468422, -0.19759878516197205, -0.0036351096350699663, -0.1358756273984909, -0.18127776682376862, -0.015220802277326584, -0.008062792010605335, -0.058095984160900116, -0.07934022694826126, -0.0004209585895296186, -0.0029362207278609276, -0.008453183807432652, -0.00038246947224251926, -0.0034557406324893236, -0.0004232226056046784, -0.00398888299241662, -0.0170462466776371, -0.014301775954663754, -0.45733410120010376, -0.14496567845344543, -0.015156459994614124, -0.004967016167938709, -0.0770779624581337, -0.0006295844214037061, -0.001809746609069407, -0.0002153879904653877, -9.917721035890281e-05, -0.0002335037279408425], "finish_reason": "length"}], "metrics": {"energy": 975.8979399471281, "energy_per_token": 3.812101327918469, "time": 23.341265, "time_per_token": 0.09117681640625}}
{"outputs": [{"text": "import os\n    import time\n\n    os.makedirs(output_dir, exist_ok=True)\n\n    with open(os.path.join(output_dir, filename), 'w') as f:\n        for idx, df in enumerate(dataset):\n            if idx > 0:\n                f.write('\\n')\n                f.write('------\\n')\n            df.to_csv(f, index=False)", "tokens": ["import", " os", "\n", "    ", "import", " time", "\n", "\n", "    ", "os", ".", "m", "aked", "irs", "(", "output", "_", "dir", ",", " exist", "_", "ok", "=", "True", ")", "\n", "\n", "    ", "with", " open", "(", "os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "for", " idx", ",", " df", " in", " enumerate", "(", "dataset", "):", "\n", "            ", "if", " idx", " >", " ", "0", ":", "\n", "                ", "f", ".", "write", "('", "\\", "n", "')", "\n", "                ", "f", ".", "write", "('", "---", "---", "\\", "n", "')", "\n", "            ", "df", ".", "to", "_", "csv", "(", "f", ",", " index", "=", "False", ")", "\n", "\n", "def"], "logprobs": [-3.924736976623535, -0.1782236397266388, -0.04845264181494713, -0.034941550344228745, -0.17880600690841675, -0.033044714480638504, -0.002939548809081316, -1.2855111360549927, -0.002548900432884693, -3.224435329437256, -0.003993869759142399, -0.0894283801317215, -2.312633478140924e-05, -5.3165931603871286e-05, -0.0010149095905944705, -0.03747594729065895, -4.351044481154531e-05, -4.6491513785440475e-06, -0.005696728825569153, -0.003834159579128027, -2.0265558760002023e-06, -1.0013530300057027e-05, -0.011538909748196602, -0.001755483914166689, -0.00048160876031033695, -0.11680790781974792, -1.3512331247329712, -0.0018111744429916143, -1.1702288389205933, -0.0012687736889347434, -0.003086566925048828, -0.0592149943113327, -5.8412379075889476e-06, -0.00013851160474587232, -1.9073468138230965e-06, -0.0005701346672140062, -0.0005206898204050958, -0.006913431454449892, -1.585470999998506e-05, -5.006777428206988e-06, -0.0014832934830337763, -0.07017052173614502, -0.005822720471769571, -0.001416156766936183, -0.13961854577064514, -0.019242752343416214, -0.23453322052955627, -0.0003716255014296621, -0.30478614568710327, -0.03176264092326164, -0.008654349483549595, -0.0299298744648695, -0.1484365165233612, -3.451939105987549, -0.008945271372795105, -0.27764007449150085, -0.004402113147079945, -0.00041166413575410843, -5.328513361746445e-05, -0.0015455455286428332, -0.021614816039800644, -0.00990629568696022, -0.008494436740875244, -1.0332139730453491, -0.011483404785394669, -0.22593192756175995, -0.0007076143519952893, -0.00044228785554878414, -0.0030567371286451817, -0.044158175587654114, -0.0011570908827707171, -0.14316901564598083, -4.160317621426657e-05, -0.0005099665140733123, -0.2424216866493225, -0.4544982314109802, -0.0007715824176557362, -0.7183956503868103, -0.10258179903030396, -0.1576453000307083, -0.08249635994434357, -2.8609820219571702e-05, -0.00037293630884960294, -0.10146044194698334, -0.5984743237495422, -0.018107816576957703, -0.7512667775154114, -0.0003014348621945828, -0.031008025631308556, -0.010143870487809181, -0.1761612892150879, -0.08564234524965286, -0.01076993253082037, -0.0033105588518083096, -2.455681169521995e-05, -0.000924993772059679, -3.766942609217949e-05, -0.009347483515739441, -0.010002724826335907, -0.4397415220737457, -0.0024090574588626623, -0.03451737388968468, -0.22742125391960144, -0.01976368948817253, -0.25501370429992676, -0.5808256268501282], "finish_reason": "stop"}], "metrics": {"energy": 408.22701288223277, "energy_per_token": 3.851198234738045, "time": 9.42276, "time_per_token": 0.08889396226415094}}
{"outputs": [{"text": "output_path = os.path.join(output_dir, filename)\n    with open(output_path, 'w') as f:\n        for df in dataset:\n            df.to_csv(f, index=False)\n            f.write('------\\n')", "tokens": ["output", "_", "path", " =", " os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", "\n", "    ", "with", " open", "(", "output", "_", "path", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "for", " df", " in", " dataset", ":", "\n", "            ", "df", ".", "to", "_", "csv", "(", "f", ",", " index", "=", "False", ")", "\n", "            ", "f", ".", "write", "('", "---", "---", "\\", "n", "')", "\n", "\n", "def"], "logprobs": [-2.6591882705688477, -0.03246764466166496, -0.51011723279953, -0.005678711924701929, -0.018543807789683342, -1.1920858014491387e-05, -0.00047541281674057245, -2.5033637939486653e-05, -0.012759946286678314, -0.00214406312443316, -0.02745036780834198, -3.802703940891661e-05, -9.179073458653875e-06, -0.004145837854593992, -0.07036075741052628, -0.009767832234501839, -0.018213408067822456, -0.24053514003753662, -0.34547436237335205, -0.00472619105130434, -0.0006226746481843293, -0.004154978785663843, -3.2186455882765586e-06, -0.00017915551143232733, -0.0016600412782281637, -0.2093999832868576, -0.02375941351056099, -0.18617059290409088, -0.00016211149340961128, -0.3504922091960907, -0.024772951379418373, -0.01652025803923607, -0.009310989640653133, -0.11992481350898743, -0.7585059404373169, -0.00594111206009984, -0.0034060818143188953, -0.00788421556353569, -0.004830239340662956, -0.0034097647294402122, -0.15099169313907623, -0.011502142064273357, -0.005081594921648502, -2.0146166207268834e-05, -0.0006171943969093263, -5.543078441405669e-05, -0.0053537567146122456, -0.020542951300740242, -0.460788756608963, -0.005288658197969198, -0.024269627407193184, -0.10662908852100372, -0.008645367808640003, -0.01582198776304722, -0.20216594636440277, -2.6940935640595853e-05, -0.001259963377378881, -0.1336110234260559, -0.705066978931427, -0.030879851430654526, -0.16599172353744507, -0.0011182728921994567, -0.02116977609694004, -0.08306403458118439, -0.2988731563091278, -0.6443150043487549], "finish_reason": "stop"}], "metrics": {"energy": 239.13339833641052, "energy_per_token": 3.623233308127432, "time": 5.7427225, "time_per_token": 0.08701094696969697}}
{"outputs": [{"text": "path = os.path.join(output_dir, filename)\n    with open(path, 'w') as f:\n        for i, df in enumerate(dataset):\n            if i > 0:\n                f.write('------\\n')\n            df.to_csv(f, index=False)", "tokens": ["path", " =", " os", ".", "path", ".", "join", "(", "output", "_", "dir", ",", " filename", ")", "\n", "    ", "with", " open", "(", "path", ",", " '", "w", "')", " as", " f", ":", "\n", "        ", "for", " i", ",", " df", " in", " enumerate", "(", "dataset", "):", "\n", "            ", "if", " i", " >", " ", "0", ":", "\n", "                ", "f", ".", "write", "('", "---", "---", "\\", "n", "')", "\n", "            ", "df", ".", "to", "_", "csv", "(", "f", ",", " index", "=", "False", ")", "\n", "\n", "def"], "logprobs": [-2.318084716796875, -0.05094265192747116, -0.05042274668812752, -2.2291887944447808e-05, -0.0012866322649642825, -5.8530047681415454e-05, -0.016246426850557327, -0.0025825502816587687, -0.02357698231935501, -9.655486064730212e-05, -4.291525328881107e-06, -0.007963691838085651, -0.09532179683446884, -0.014641928486526012, -0.020014241337776184, -0.15263929963111877, -0.4390549659729004, -0.003618955845013261, -0.0008147019543685019, -0.005951066501438618, -0.002316412515938282, -0.33278921246528625, -0.050017789006233215, -0.21118497848510742, -0.0002420847595203668, -0.4785771369934082, -0.030833616852760315, -0.01401029247790575, -0.013509988784790039, -0.1739121824502945, -0.8929300308227539, -0.15920014679431915, -0.3214843273162842, -0.004982436075806618, -0.00033706706017255783, -9.16677454370074e-05, -0.0022509971167892218, -0.0051604644395411015, -0.007178703788667917, -0.004539778921753168, -1.9379515647888184, -0.03482596576213837, -0.25299739837646484, -0.0009270184673368931, -0.0005194983095861971, -0.002792033366858959, -0.050106231123209, -0.0016313589876517653, -0.13649314641952515, -4.732496745418757e-05, -0.0007428746903315187, -0.2741113603115082, -1.0394642353057861, -0.032825324684381485, -0.33736690878868103, -0.0034294859506189823, -0.028924448415637016, -0.0770145058631897, -0.033651649951934814, -0.06144949048757553, -0.003470352618023753, -0.006805929820984602, -2.2411095415009186e-05, -0.001207456924021244, -6.55629628454335e-05, -0.013954454101622105, -0.04050295799970627, -0.3640437126159668, -0.003875128459185362, -0.040118470788002014, -0.17427116632461548, -0.009402752853929996, -0.3846064805984497, -0.6250740885734558], "finish_reason": "stop"}], "metrics": {"energy": 294.65605400466916, "energy_per_token": 3.9818385676306645, "time": 6.566491, "time_per_token": 0.08873636486486487}}
