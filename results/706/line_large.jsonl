{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.015770593658089638, -6.758938252460212e-05, -0.001177571015432477, -0.00446299696341157, -0.019197965040802956, -0.10775237530469894, -0.0030749202705919743, -0.005612093489617109, -0.0007190502947196364, -0.0010846928926184773, -0.09753401577472687], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.38931339979171753, -0.00034648136352188885, -6.19869097135961e-05, -0.061321571469306946, -3.933898824470816e-06, -0.48482745885849, -0.18189911544322968, -0.0003305127320345491, -0.009266345761716366, -0.0024437822867184877], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' not found in DataFrame\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.045811016112565994, -1.811964830267243e-05, -0.02569960430264473, -0.3504243493080139, -0.02306373603641987, -0.7535260319709778, -0.005670533049851656, -0.26950761675834656, -0.00020632999076042324, -0.00021419614495243877, -1.9788545614574105e-05, -2.539125671319198e-05, -0.0032564965076744556, -0.14637838304042816, -0.08637150377035141, -0.013697323389351368, -0.4670913815498352, -0.0008168459753505886, -1.058046579360962, -0.00016711745411157608, -0.002524524461477995], "finish_reason": "stop"}, {"text": " df[df.columns[df.columns != target_column]]", "tokens": [" df", "[", "df", ".", "columns", "[", "df", ".", "columns", " ", "!", "=", " target", "_", "column", "]]", "\n"], "logprobs": [-0.0009974034037441015, -1.6146379709243774, -0.19812022149562836, -0.0010457528987899423, -6.460934673668817e-05, -2.4549813270568848, -0.1887558400630951, -0.0005281960475258529, -3.9219088648678735e-05, -0.006405418273061514, -1.0728830375228426e-06, -1.311301275563892e-06, -0.0011093420907855034, -1.3351351299206726e-05, -2.0265558760002023e-06, -0.0009176096064038575, -0.16702942550182343], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.001105769770219922, -0.004697952885180712, -0.0001934579631779343, -2.861018856492592e-06, -1.4662635294371285e-05, -3.40932747349143e-05, -0.32047468423843384], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00019596086349338293, -2.7418097943154862e-06, -0.0005142558366060257, -1.6212332411669195e-05, -6.186770770000294e-05, -3.3378546504536644e-06, -1.1920928244535389e-07, -2.706014311115723e-05, -3.397406908334233e-05, -2.7418097943154862e-06, -4.768370445162873e-07, -0.0002687808300834149, -0.0005925330333411694, -8.22540732769994e-06, -4.768370445162873e-07, -4.768370445162873e-07, -7.152555099310121e-07, -2.2411095415009186e-05, -0.012506981380283833, -0.002325689420104027, -0.0010119322687387466, -0.01330532692372799, -0.0231237281113863, -8.106198947643861e-06, -1.9073468138230965e-06, -0.0010827876394614577, -0.0035227404441684484, -3.969590397900902e-05, -0.234278604388237, -0.2738093435764313, -0.007134555839002132, -4.291525328881107e-06, -5.8412379075889476e-06, -0.00021741411183029413, -0.07646403461694717, -0.0033343215472996235, -0.011695627123117447, -0.09019814431667328], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-9.119095193454996e-05, -6.6756979322235566e-06, -1.1920928244535389e-07, -3.933898824470816e-06, -0.279188334941864, -0.040357790887355804], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-8.702239938429557e-06, -1.156323378381785e-05, -0.00013350549852475524, -0.0026246407069265842, -3.135155202471651e-05, -0.0025617422070354223, -0.0002361257211305201, -1.156323378381785e-05, -1.4305104514278355e-06, -0.0014152044896036386, -0.0035756006836891174], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0004164305282756686, -6.198863957251888e-06, -4.410734163684538e-06, -0.00027307120035402477, -8.237022848334163e-05, -0.0001287377526750788, -0.0002162222663173452, -0.00011884459672728553, -0.0022812075912952423], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.010143280029296875, -7.152555099310121e-07, -2.145764938177308e-06, -3.325883881188929e-05, -7.998623186722398e-05, -4.291525328881107e-06, -0.0012137673329561949, -9.190614218823612e-05, -0.00019965562387369573, -1.7881377516459906e-06, -9.536738616588991e-07, -0.0006767605082131922, -0.012046677991747856], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.05644858255982399, -0.0768737643957138], "finish_reason": "stop"}], "metrics": {"energy": 1116.6882957849502, "energy_per_token": 7.701298591620347, "time": 40.233097, "time_per_token": 0.27746963448275863}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " isinstance(df[target_column], np.ndarray):", "tokens": [" isinstance", "(", "df", "[", "target", "_", "column", "]", ",", " np", ".", "nd", "array", "):", "\n"], "logprobs": [-2.904555082321167, -0.00020037073409184813, -3.048579216003418, -1.0575246810913086, -0.03928475081920624, -3.302042750874534e-05, -4.172316494077677e-06, -0.0817008689045906, -0.08509156852960587, -2.6970863342285156, -8.106198947643861e-06, -0.11939429491758347, -3.8980677345534787e-05, -0.034483399242162704, -0.1000443771481514], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' not found in DataFrame.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.06235253065824509, -1.5020257706055418e-05, -0.023307057097554207, -0.3078017830848694, -0.018414141610264778, -0.741729199886322, -0.004978403449058533, -0.25008755922317505, -0.0002277830062666908, -0.0002029928145930171, -1.5139465176616795e-05, -2.3245540432981215e-05, -0.0031986285466700792, -0.13791050016880035, -0.07529816776514053, -0.013965151272714138, -0.3793528079986572, -0.0006353028584271669, -0.8041360974311829, -0.01416779775172472, -0.00046075694262981415, -0.001404847833327949], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column])", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "])", "\n"], "logprobs": [-0.000876757490914315, -0.28226980566978455, -0.07330184429883957, -0.04346216842532158, -0.38711217045783997, -0.21386641263961792, -0.0005287918029353023, -8.570780482841656e-05, -5.722029527532868e-06, -0.25975048542022705, -0.02882855385541916], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.001291870721615851, -0.003830834524706006, -0.00016449528629891574, -2.861018856492592e-06, -1.3470558769768104e-05, -3.111314072157256e-05, -0.27180710434913635], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)  # Split the data into training and testing sets", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "  ", "#", " Split", " the", " data", " into", " training", " and", " testing", " sets", "\n"], "logprobs": [-0.0001842805795604363, -3.2186455882765586e-06, -0.0011319665936753154, -1.597391747054644e-05, -7.354942499659956e-05, -2.9802276912960224e-06, -1.1920928244535389e-07, -3.790783375734463e-05, -3.2066785934148356e-05, -3.099436753473128e-06, -4.768370445162873e-07, -0.00025197668583132327, -0.00040284625720232725, -7.510157047363464e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -5.960462772236497e-07, -2.2172682292875834e-05, -0.016528816893696785, -0.0027700408827513456, -0.00117649941239506, -0.0140443816781044, -0.02261502854526043, -9.059865078597795e-06, -1.6689286894688848e-06, -0.0012157914461567998, -0.0031655936036258936, -3.731181277544238e-05, -0.24364620447158813, -0.2680191695690155, -0.006355668883770704, -3.6954811548639555e-06, -5.483612312673358e-06, -0.00021109737281221896, -0.0779886245727539, -0.004170411732047796, -0.008777724578976631, -2.4530322551727295, -0.0005154472892172635, -1.3087399005889893, -1.3769454956054688, -0.24906262755393982, -2.325772523880005, -1.0171387195587158, -0.013548092916607857, -0.10417797416448593, -0.015025884844362736, -0.14709927141666412], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.00010072677832795307, -9.179073458653875e-06, -1.1920928244535389e-07, -5.364403477869928e-06, -0.34462425112724304, -0.04596108943223953], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-9.894321920000948e-06, -1.2159273865108844e-05, -0.00016378014697693288, -0.0032443765085190535, -2.95634672511369e-05, -0.00406308937817812, -0.00024125049822032452, -1.0132738680113107e-05, -2.0265558760002023e-06, -0.0015029336791485548, -0.004324133507907391], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0004812512779608369, -5.125986263010418e-06, -6.556489552167477e-06, -0.0003333727945573628, -8.77341881277971e-05, -0.00011288482346571982, -0.00011216964776394889, -0.00010847456724150106, -0.003271111287176609], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.009456011466681957, -1.1920922133867862e-06, -2.3841830625315197e-06, -3.4689302992774174e-05, -6.139089964563027e-05, -4.6491513785440475e-06, -0.000766102981287986, -0.00011014331539627165, -0.0002544794406276196, -1.6689286894688848e-06, -1.1920922133867862e-06, -0.000717025191988796, -0.01819339208304882], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.0595967061817646, -0.0658777728676796], "finish_reason": "stop"}], "metrics": {"energy": 1311.9946848545076, "energy_per_token": 8.464481837771016, "time": 46.614918, "time_per_token": 0.3007414064516129}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " target_column not in columns:", "tokens": [" target", "_", "column", " not", " in", " columns", ":", "\n"], "logprobs": [-0.38931339979171753, -0.00034648136352188885, -6.19869097135961e-05, -0.061321571469306946, -3.933898824470816e-06, -0.9606193900108337, -0.022889800369739532, -0.0045493911020457745], "finish_reason": "stop"}, {"text": " ValueError(\"Target column not found in DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Target", " column", " not", " found", " in", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.045811016112565994, -1.811964830267243e-05, -0.02569960430264473, -1.266981601715088, -0.5320306420326233, -0.004713139962404966, -0.23153556883335114, -0.32108113169670105, -0.027910012751817703, -0.6298025250434875, -0.0012991330586373806, -0.3814278244972229, -0.00031001531169749796, -0.0021647608373314142], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column])", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "])", "\n"], "logprobs": [-0.0009974034037441015, -0.2522379159927368, -0.058929234743118286, -0.043665315955877304, -0.4950976073741913, -0.24983762204647064, -0.00048494499060325325, -6.0794889577664435e-05, -6.437280717364047e-06, -0.2657009959220886, -0.030048338696360588], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.001116605824790895, -0.0034341190475970507, -0.00015698630886618048, -2.622600959512056e-06, -1.3112935448589269e-05, -4.23184028477408e-05, -0.26593029499053955], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0001530530134914443, -2.622600959512056e-06, -0.0007245299639180303, -1.3947389561508317e-05, -7.128461584215984e-05, -4.172316494077677e-06, -1.1920928244535389e-07, -4.005352093372494e-05, -3.397406908334233e-05, -2.7418097943154862e-06, -3.576278118089249e-07, -0.00022396916756406426, -0.0005127069307491183, -7.629365427419543e-06, -8.344646857949556e-07, -4.768370445162873e-07, -7.152555099310121e-07, -2.0265373677830212e-05, -0.013765638694167137, -0.002266102470457554, -0.0009211826254613698, -0.014441492967307568, -0.020659612491726875, -8.821448318485636e-06, -2.145764938177308e-06, -0.0012155532604083419, -0.003293092828243971, -4.088794958079234e-05, -0.25621360540390015, -0.264229953289032, -0.006027023307979107, -3.814689989667386e-06, -4.529942543740617e-06, -0.00021896349790040404, -0.08345144987106323, -0.00408825883641839, -0.012595390900969505, -0.08792988210916519], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.00010668662434909493, -4.172316494077677e-06, -1.1920928244535389e-07, -6.198863957251888e-06, -0.2560955882072449, -0.03992307558655739], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-9.536697689327411e-06, -1.1444026313256472e-05, -0.0001411338453181088, -0.0023991868365556, -3.015949550899677e-05, -0.0034261594992130995, -0.00023815179883968085, -1.3708974620385561e-05, -1.4305104514278355e-06, -0.0018705505644902587, -0.004831307101994753], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0005240259342826903, -6.437280717364047e-06, -5.245195097813848e-06, -0.00034564718953333795, -0.0001370812824461609, -0.00010072677832795307, -0.00025555206229910254, -0.00013064485392533243, -0.0036897454410791397], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.011177187785506248, -1.0728830375228426e-06, -2.264974000354414e-06, -3.683499380713329e-05, -5.972207145532593e-05, -4.0531076592742465e-06, -0.0008773530134931207, -9.893881360767409e-05, -0.00019596086349338293, -1.6689286894688848e-06, -9.536738616588991e-07, -0.0007503792876377702, -0.015466508455574512], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.04589288681745529, -0.05874108150601387], "finish_reason": "stop"}], "metrics": {"energy": 973.0482895908351, "energy_per_token": 7.484986843006424, "time": 31.90373, "time_per_token": 0.24541330769230768}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " target_column not in columns:", "tokens": [" target", "_", "column", " not", " in", " columns", ":", "\n"], "logprobs": [-0.38931339979171753, -0.00034648136352188885, -6.19869097135961e-05, -0.061321571469306946, -3.933898824470816e-06, -0.9606193900108337, -0.022889800369739532, -0.0045493911020457745], "finish_reason": "stop"}, {"text": " ValueError(f\"Column '{target_column}' not found in DataFrame.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.045811016112565994, -1.811964830267243e-05, -0.02569960430264473, -0.3504243493080139, -0.02306373603641987, -1.5490715503692627, -0.5236661434173584, -0.0005214046686887741, -0.00030560590676032007, -2.2291887944447808e-05, -2.8371408916427754e-05, -0.0022683623246848583, -0.17429028451442719, -0.09011459350585938, -0.024068202823400497, -0.7989256978034973, -0.0008509114268235862, -0.6686843037605286, -0.01379138883203268, -0.00039736481267027557, -0.002869894728064537], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column])", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "])", "\n"], "logprobs": [-0.0009974034037441015, -0.2522379159927368, -0.058929234743118286, -0.043665315955877304, -0.4950976073741913, -0.24983762204647064, -0.00048494499060325325, -6.0794889577664435e-05, -6.437280717364047e-06, -0.2657009959220886, -0.030048338696360588], "finish_reason": "stop"}, {"text": " df[target_column]  # Select the target column", "tokens": [" df", "[", "target", "_", "column", "]", "  ", "#", " Select", " the", " target", " column", "\n"], "logprobs": [-0.001116605824790895, -0.0034341190475970507, -0.00015698630886618048, -2.622600959512056e-06, -1.3112935448589269e-05, -4.23184028477408e-05, -1.6312180757522583, -0.0001387499796692282, -1.9088759422302246, -0.1602407544851303, -0.021385787054896355, -0.008635913021862507, -0.38228124380111694], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0001530530134914443, -2.622600959512056e-06, -0.0007245299639180303, -1.3947389561508317e-05, -7.128461584215984e-05, -4.172316494077677e-06, -1.1920928244535389e-07, -4.005352093372494e-05, -3.397406908334233e-05, -2.7418097943154862e-06, -3.576278118089249e-07, -0.00022396916756406426, -0.0005127069307491183, -7.629365427419543e-06, -8.344646857949556e-07, -4.768370445162873e-07, -7.152555099310121e-07, -2.0265373677830212e-05, -0.013765638694167137, -0.002266102470457554, -0.0009211826254613698, -0.014441492967307568, -0.020659612491726875, -8.821448318485636e-06, -2.145764938177308e-06, -0.0012155532604083419, -0.003293092828243971, -4.088794958079234e-05, -0.25621360540390015, -0.264229953289032, -0.006027023307979107, -3.814689989667386e-06, -4.529942543740617e-06, -0.00021896349790040404, -0.08345144987106323, -0.00408825883641839, -0.012595390900969505, -0.08792988210916519], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.00010668662434909493, -4.172316494077677e-06, -1.1920928244535389e-07, -6.198863957251888e-06, -0.2560955882072449, -0.03992307558655739], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-9.536697689327411e-06, -1.1444026313256472e-05, -0.0001411338453181088, -0.0023991868365556, -3.015949550899677e-05, -0.0034261594992130995, -0.00023815179883968085, -1.3708974620385561e-05, -1.4305104514278355e-06, -0.0018705505644902587, -0.004831307101994753], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0005240259342826903, -6.437280717364047e-06, -5.245195097813848e-06, -0.00034564718953333795, -0.0001370812824461609, -0.00010072677832795307, -0.00025555206229910254, -0.00013064485392533243, -0.0036897454410791397], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.011177187785506248, -1.0728830375228426e-06, -2.264974000354414e-06, -3.683499380713329e-05, -5.972207145532593e-05, -4.0531076592742465e-06, -0.0008773530134931207, -9.893881360767409e-05, -0.00019596086349338293, -1.6689286894688848e-06, -9.536738616588991e-07, -0.0007503792876377702, -0.015466508455574512], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.04589288681745529, -0.05874108150601387], "finish_reason": "stop"}], "metrics": {"energy": 1152.1030053272248, "energy_per_token": 8.056664372917655, "time": 38.76153, "time_per_token": 0.27105965034965035}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)  # Create a pandas DataFrame", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "  ", "#", " Create", " a", " pandas", " Data", "Frame", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -2.5098841190338135, -0.00024875884992070496, -1.929946780204773, -0.09854637086391449, -0.9896550178527832, -0.019822008907794952, -0.0009236836922354996, -1.1215205192565918], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.38931339979171753, -0.00034648136352188885, -6.19869097135961e-05, -0.061321571469306946, -3.933898824470816e-06, -0.48482745885849, -0.18189911544322968, -0.0003305127320345491, -0.009266345761716366, -0.0024437822867184877], "finish_reason": "stop"}, {"text": " ValueError(\"Target column not in DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Target", " column", " not", " in", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.045811016112565994, -1.811964830267243e-05, -0.02569960430264473, -1.266981601715088, -0.5320306420326233, -0.004713139962404966, -0.23153556883335114, -1.4766712188720703, -0.31941086053848267, -0.0016406421782448888, -0.3835003077983856, -0.0003194298769813031, -0.004450654145330191], "finish_reason": "stop"}, {"text": " df.loc[:, df.columns != target_column]", "tokens": [" df", ".", "loc", "[:", ",", " df", ".", "columns", " ", "!", "=", " target", "_", "column", "]", "\n"], "logprobs": [-0.0009974034037441015, -0.2522379159927368, -2.9161489009857178, -0.008877807296812534, -0.000697965151630342, -0.0282693263143301, -0.0004190520558040589, -2.0861407392658293e-05, -0.023600850254297256, -5.960462772236497e-07, -4.172316494077677e-06, -0.0013184197014197707, -8.4638240878121e-06, -2.9802276912960224e-06, -0.00013505500101018697, -0.1486051380634308], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0012681784573942423, -0.0041587776504457, -0.00015841660206206143, -3.4570634852570947e-06, -1.0847986231965479e-05, -4.792098479811102e-05, -0.28875887393951416], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.33)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "3", "3", ")", "\n"], "logprobs": [-0.00016437610611319542, -2.145764938177308e-06, -0.0009022455778904259, -1.7165990357170813e-05, -7.152301259338856e-05, -3.6954811548639555e-06, -1.1920928244535389e-07, -3.4689302992774174e-05, -3.0636318115284666e-05, -2.9802276912960224e-06, -5.960462772236497e-07, -0.00028236693469807506, -0.00045170116936787963, -7.390948667307384e-06, -3.576278118089249e-07, -5.960462772236497e-07, -7.152555099310121e-07, -1.764281842042692e-05, -0.01321980357170105, -0.0023340145125985146, -0.0007053509471006691, -0.01191216241568327, -0.02001061849296093, -9.536697689327411e-06, -1.5497195136049413e-06, -0.0012847273610532284, -0.002550802892073989, -3.9934315282152966e-05, -1.677061676979065, -1.8069500923156738, -1.0497545003890991, -0.11335774511098862], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.00010394509445177391, -7.271740287251305e-06, -2.3841855067985307e-07, -6.6756979322235566e-06, -0.2467889040708542, -0.047793373465538025], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-1.0251946150674485e-05, -1.1444026313256472e-05, -0.00017796363681554794, -0.002665064763277769, -3.480850500636734e-05, -0.003217641031369567, -0.00025555206229910254, -1.0490362910786644e-05, -1.4305104514278355e-06, -0.0016861044568940997, -0.0048258500173687935], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0006118332967162132, -6.318072337307967e-06, -4.529942543740617e-06, -0.0002884448622353375, -7.843663479434326e-05, -0.00011526874004630372, -0.0002727136597968638, -0.00011669908417388797, -0.0025663794949650764], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.009958937764167786, -9.536738616588991e-07, -2.7418097943154862e-06, -3.5523738915799186e-05, -6.532455881824717e-05, -4.172316494077677e-06, -0.0009441685397177935, -0.00010263393050990999, -0.00018618757894728333, -1.6689286894688848e-06, -8.344646857949556e-07, -0.0007429938414134085, -0.013715313747525215], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.06759919971227646, -0.0636536106467247], "finish_reason": "stop"}], "metrics": {"energy": 786.683390265465, "energy_per_token": 5.742214527485146, "time": 23.858994, "time_per_token": 0.1741532408759124}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.38931339979171753, -0.00034648136352188885, -6.19869097135961e-05, -0.061321571469306946, -3.933898824470816e-06, -0.48482745885849, -0.18189911544322968, -0.0003305127320345491, -0.009266345761716366, -0.0024437822867184877], "finish_reason": "stop"}, {"text": " ValueError(\"The target column is not in the DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "The", " target", " column", " is", " not", " in", " the", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.045811016112565994, -1.811964830267243e-05, -0.02569960430264473, -1.266981601715088, -1.6410260200500488, -0.6665676832199097, -0.032299723476171494, -0.6919693350791931, -0.006681956350803375, -0.2688782811164856, -0.007752450183033943, -0.24168314039707184, -0.0015748253790661693, -0.455172061920166, -0.0414072647690773, -0.00039521988946944475, -0.0028945000376552343], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column])", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "])", "\n"], "logprobs": [-0.0009974034037441015, -0.2522379159927368, -0.058929234743118286, -0.043665315955877304, -0.4950976073741913, -0.24983762204647064, -0.00048494499060325325, -6.0794889577664435e-05, -6.437280717364047e-06, -0.2657009959220886, -0.030048338696360588], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.001116605824790895, -0.0034341190475970507, -0.00015698630886618048, -2.622600959512056e-06, -1.3112935448589269e-05, -4.23184028477408e-05, -0.26593029499053955], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0001530530134914443, -2.622600959512056e-06, -0.0007245299639180303, -1.3947389561508317e-05, -7.128461584215984e-05, -4.172316494077677e-06, -1.1920928244535389e-07, -4.005352093372494e-05, -3.397406908334233e-05, -2.7418097943154862e-06, -3.576278118089249e-07, -0.00022396916756406426, -0.0005127069307491183, -7.629365427419543e-06, -8.344646857949556e-07, -4.768370445162873e-07, -7.152555099310121e-07, -2.0265373677830212e-05, -0.013765638694167137, -0.002266102470457554, -0.0009211826254613698, -0.014441492967307568, -0.020659612491726875, -8.821448318485636e-06, -2.145764938177308e-06, -0.0012155532604083419, -0.003293092828243971, -4.088794958079234e-05, -1.5797572135925293, -0.3385743200778961, -0.00965012889355421, -3.6954811548639555e-06, -8.34461570775602e-06, -0.00038258862332440913, -0.3164365887641907, -0.009995761327445507, -0.02328784018754959, -0.09705044329166412], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-9.905801562126726e-05, -6.6756979322235566e-06, -1.1920928244535389e-07, -6.437280717364047e-06, -0.29087793827056885, -0.04456562548875809], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-9.775113539944869e-06, -9.775113539944869e-06, -0.00017355366435367614, -0.0027573206461966038, -3.1709168979432434e-05, -0.0029651031363755465, -0.0002592465898487717, -1.1324817933200393e-05, -1.4305104514278355e-06, -0.0015026956098154187, -0.004138952121138573], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0004861365014221519, -5.722029527532868e-06, -4.291525328881107e-06, -0.0003716255014296621, -0.00012575789878610522, -0.0001399419124936685, -0.00029738296871073544, -0.0001510267611593008, -0.0027447191532701254], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.011332782916724682, -9.536738616588991e-07, -2.7418097943154862e-06, -3.302042750874534e-05, -5.8410845667822286e-05, -5.006777428206988e-06, -0.0012045992771163583, -8.785339014139026e-05, -0.00020930961181875318, -1.7881377516459906e-06, -7.152555099310121e-07, -0.0007652691565454006, -0.013898377306759357], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.05822240561246872, -0.0572722852230072], "finish_reason": "stop"}], "metrics": {"energy": 650.3639099645613, "energy_per_token": 4.817510444181936, "time": 17.93606, "time_per_token": 0.1328597037037037}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-2.3679778575897217, -0.4241618812084198, -7.068861305015162e-05, -0.5213835835456848, -0.06956901401281357, -0.018474997952580452, -9.417489309271332e-06, -0.015940727666020393, -0.025922421365976334, -0.007519631180912256], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column {target_column} does not exist in the DataFrame\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " {", "target", "_", "column", "}", " does", " not", " exist", " in", " the", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.06235253065824509, -1.5020257706055418e-05, -0.023307057097554207, -0.3078017830848694, -0.018414141610264778, -0.741729199886322, -0.004978403449058533, -1.6327359676361084, -0.00022682955022901297, -6.639736966462806e-05, -2.706014311115723e-05, -0.002706200582906604, -2.9461560249328613, -0.00036352223833091557, -0.0005695389700122178, -0.0626370906829834, -0.16470961272716522, -0.2907046675682068, -0.0005729940603487194, -0.7297223210334778, -0.00018976318824570626, -0.0010826685465872288], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.000876757490914315, -0.28226980566978455, -0.07330184429883957, -0.04346216842532158, -1.138420581817627, -1.0847986231965479e-05, -4.6491513785440475e-06, -0.0005472592893056571, -0.0007033258443698287, -0.0011728082317858934, -4.935142715112306e-05, -0.0009090343955904245, -0.06492886692285538], "finish_reason": "stop"}, {"text": " df[target_column]  # Operate directly on the DataFrame", "tokens": [" df", "[", "target", "_", "column", "]", "  ", "#", " Oper", "ate", " directly", " on", " the", " Data", "Frame", "\n"], "logprobs": [-0.001258296542800963, -0.003139806678518653, -0.00013684290752280504, -2.7418097943154862e-06, -1.490105023549404e-05, -3.0397906812140718e-05, -1.5606272220611572, -0.00018737945356406271, -1.229527235031128, -0.0008530553313903511, -0.0022795426193624735, -0.00035291642416268587, -9.941560711013153e-05, -0.008824399672448635, -8.606540359323844e-05, -0.009367560036480427], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0001784403866622597, -2.861018856492592e-06, -0.0006350646144710481, -1.7762025890988298e-05, -7.045020902296528e-05, -3.814689989667386e-06, -1.1920928244535389e-07, -4.1960789531003684e-05, -3.349725011503324e-05, -3.2186455882765586e-06, -5.960462772236497e-07, -0.00029666791670024395, -0.0004138090298511088, -8.702239938429557e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -7.152555099310121e-07, -2.0861407392658293e-05, -0.017164723947644234, -0.0030423568096011877, -0.0010417040903121233, -0.0142518300563097, -0.018627706915140152, -9.298280929215252e-06, -2.0265558760002023e-06, -0.0010807631770148873, -0.003167851595208049, -3.957670196541585e-05, -0.22029583156108856, -0.24789254367351532, -0.006152973510324955, -3.4570634852570947e-06, -4.768360213347478e-06, -0.0002470903273206204, -0.06732964515686035, -0.003681550268083811, -0.010397433303296566, -0.08786044269800186], "finish_reason": "stop"}, {"text": " LogisticRegression(solver='liblinear', random_state=42)", "tokens": [" Log", "istic", "Reg", "ression", "(", "s", "olver", "='", "lib", "linear", "'", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00010501786891836673, -5.245195097813848e-06, -1.1920928244535389e-07, -5.602820692729438e-06, -1.5218101739883423, -2.0049796104431152, -1.8000440832111053e-05, -0.008271366357803345, -0.3189413845539093, -2.6940935640595853e-05, -0.7386652827262878, -0.001258296542800963, -0.035544805228710175, -2.861018856492592e-06, -1.6689286894688848e-06, -0.0001472126314183697, -0.15565277636051178, -0.0025076393503695726, -0.007462956011295319, -0.15417221188545227], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-8.940656698541716e-06, -1.1920858014491387e-05, -0.00016926287207752466, -0.0022833484690636396, -3.957670196541585e-05, -0.0026741004548966885, -0.0002574589161667973, -1.3828182090946939e-05, -1.4305104514278355e-06, -0.0019201666582375765, -0.004615724552422762], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00044610086479224265, -5.602820692729438e-06, -4.291525328881107e-06, -0.0002579356369096786, -0.00011145447206217796, -0.0001299296854995191, -0.00018749863374978304, -0.00010692501382436603, -0.0028811870142817497], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.009858254343271255, -8.344646857949556e-07, -2.3841830625315197e-06, -2.932505594799295e-05, -6.747018051100895e-05, -4.6491513785440475e-06, -0.0012028133496642113, -7.843663479434326e-05, -0.00019822540343739092, -1.4305104514278355e-06, -9.536738616588991e-07, -0.0008011230966076255, -0.013973616063594818], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.047353580594062805, -0.07341106981039047], "finish_reason": "stop"}], "metrics": {"energy": 739.4556784772872, "energy_per_token": 4.481549566529013, "time": 20.444592, "time_per_token": 0.12390661818181818}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.38931339979171753, -0.00034648136352188885, -6.19869097135961e-05, -0.061321571469306946, -3.933898824470816e-06, -0.48482745885849, -0.18189911544322968, -0.0003305127320345491, -0.009266345761716366, -0.0024437822867184877], "finish_reason": "stop"}, {"text": " ValueError(\"Target column not found in DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Target", " column", " not", " found", " in", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.045811016112565994, -1.811964830267243e-05, -0.02569960430264473, -1.266981601715088, -0.5320306420326233, -0.004713139962404966, -0.23153556883335114, -0.32108113169670105, -0.027910012751817703, -0.6298025250434875, -0.0012991330586373806, -0.3814278244972229, -0.00031001531169749796, -0.0021647608373314142], "finish_reason": "stop"}, {"text": " df[df.columns.difference([target_column])]", "tokens": [" df", "[", "df", ".", "columns", ".", "difference", "([", "target", "_", "column", "]", ")]", "\n"], "logprobs": [-0.0009974034037441015, -1.6146379709243774, -0.19812022149562836, -0.0010457528987899423, -6.460934673668817e-05, -0.12706223130226135, -0.04511718451976776, -0.0060310522094368935, -0.00018821375851985067, -4.291525328881107e-06, -5.960462772236497e-07, -0.0013183006085455418, -0.00015031162183731794, -0.1295599639415741], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.001105769770219922, -0.004697952885180712, -0.0001934579631779343, -2.861018856492592e-06, -1.4662635294371285e-05, -3.40932747349143e-05, -0.32047468423843384], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ")", "\n"], "logprobs": [-0.00019596086349338293, -2.7418097943154862e-06, -0.0005142558366060257, -1.6212332411669195e-05, -6.186770770000294e-05, -3.3378546504536644e-06, -1.1920928244535389e-07, -2.706014311115723e-05, -3.397406908334233e-05, -2.7418097943154862e-06, -4.768370445162873e-07, -0.0002687808300834149, -0.0005925330333411694, -8.22540732769994e-06, -4.768370445162873e-07, -4.768370445162873e-07, -7.152555099310121e-07, -2.2411095415009186e-05, -0.012506981380283833, -0.002325689420104027, -0.0010119322687387466, -0.01330532692372799, -0.0231237281113863, -8.106198947643861e-06, -1.9073468138230965e-06, -0.0010827876394614577, -0.0035227404441684484, -3.969590397900902e-05, -0.234278604388237, -1.5926874876022339, -0.07538627833127975], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-9.595887240720913e-05, -6.9141146923357155e-06, -2.3841855067985307e-07, -5.483612312673358e-06, -0.26294800639152527, -0.04220927506685257], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-8.34461570775602e-06, -1.0251946150674485e-05, -0.00011944057769142091, -0.0029467991553246975, -3.0636318115284666e-05, -0.0024647116661071777, -0.00029583368450403214, -7.748573807475623e-06, -1.6689286894688848e-06, -0.0014331794809550047, -0.003711836412549019], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0004385939973872155, -6.6756979322235566e-06, -5.245195097813848e-06, -0.00032443503732793033, -9.190614218823612e-05, -9.870042413240299e-05, -0.00017855956684798002, -0.00013290952483657748, -0.0026238083373755217], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.010956956073641777, -9.536738616588991e-07, -2.861018856492592e-06, -3.40932747349143e-05, -6.663577369181439e-05, -4.529942543740617e-06, -0.00098525604698807, -8.916457591112703e-05, -0.0001811817055568099, -1.5497195136049413e-06, -1.0728830375228426e-06, -0.0006959400488995016, -0.011714006774127483], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.04291677474975586, -0.06922212243080139], "finish_reason": "stop"}], "metrics": {"energy": 717.1768450107571, "energy_per_token": 5.60294410164654, "time": 21.032152, "time_per_token": 0.1643136875}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " target_column not in df:", "tokens": [" target", "_", "column", " not", " in", " df", ":", "\n"], "logprobs": [-0.38931339979171753, -0.00034648136352188885, -6.19869097135961e-05, -0.061321571469306946, -3.933898824470816e-06, -0.48482745885849, -1.8084516525268555, -0.005596682894974947], "finish_reason": "stop"}, {"text": " ValueError(\"Target column not in DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Target", " column", " not", " in", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.045811016112565994, -1.811964830267243e-05, -0.02569960430264473, -1.266981601715088, -0.5320306420326233, -0.004713139962404966, -0.23153556883335114, -1.4766712188720703, -0.31941086053848267, -0.0016406421782448888, -0.3835003077983856, -0.0003194298769813031, -0.004450654145330191], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column])", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "])", "\n"], "logprobs": [-0.0009974034037441015, -0.2522379159927368, -0.058929234743118286, -0.043665315955877304, -0.4950976073741913, -0.24983762204647064, -0.00048494499060325325, -6.0794889577664435e-05, -6.437280717364047e-06, -0.2657009959220886, -0.030048338696360588], "finish_reason": "stop"}, {"text": " df[target_column]  # Select the target column", "tokens": [" df", "[", "target", "_", "column", "]", "  ", "#", " Select", " the", " target", " column", "\n"], "logprobs": [-0.001116605824790895, -0.0034341190475970507, -0.00015698630886618048, -2.622600959512056e-06, -1.3112935448589269e-05, -4.23184028477408e-05, -1.6312180757522583, -0.0001387499796692282, -1.9088759422302246, -0.1602407544851303, -0.021385787054896355, -0.008635913021862507, -0.38228124380111694], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0001530530134914443, -2.622600959512056e-06, -0.0007245299639180303, -1.3947389561508317e-05, -7.128461584215984e-05, -4.172316494077677e-06, -1.1920928244535389e-07, -4.005352093372494e-05, -3.397406908334233e-05, -2.7418097943154862e-06, -3.576278118089249e-07, -0.00022396916756406426, -0.0005127069307491183, -7.629365427419543e-06, -8.344646857949556e-07, -4.768370445162873e-07, -7.152555099310121e-07, -2.0265373677830212e-05, -0.013765638694167137, -0.002266102470457554, -0.0009211826254613698, -0.014441492967307568, -0.020659612491726875, -8.821448318485636e-06, -2.145764938177308e-06, -0.0012155532604083419, -0.003293092828243971, -4.088794958079234e-05, -0.25621360540390015, -0.264229953289032, -0.006027023307979107, -3.814689989667386e-06, -4.529942543740617e-06, -0.00021896349790040404, -0.08345144987106323, -0.00408825883641839, -0.012595390900969505, -0.08792988210916519], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.00010668662434909493, -4.172316494077677e-06, -1.1920928244535389e-07, -6.198863957251888e-06, -0.2560955882072449, -0.03992307558655739], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-9.536697689327411e-06, -1.1444026313256472e-05, -0.0001411338453181088, -0.0023991868365556, -3.015949550899677e-05, -0.0034261594992130995, -0.00023815179883968085, -1.3708974620385561e-05, -1.4305104514278355e-06, -0.0018705505644902587, -0.004831307101994753], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0005240259342826903, -6.437280717364047e-06, -5.245195097813848e-06, -0.00034564718953333795, -0.0001370812824461609, -0.00010072677832795307, -0.00025555206229910254, -0.00013064485392533243, -0.0036897454410791397], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.011177187785506248, -1.0728830375228426e-06, -2.264974000354414e-06, -3.683499380713329e-05, -5.972207145532593e-05, -4.0531076592742465e-06, -0.0008773530134931207, -9.893881360767409e-05, -0.00019596086349338293, -1.6689286894688848e-06, -9.536738616588991e-07, -0.0007503792876377702, -0.015466508455574512], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.04589288681745529, -0.05874108150601387], "finish_reason": "stop"}], "metrics": {"energy": 626.1539184989929, "energy_per_token": 4.638177174066614, "time": 17.993376, "time_per_token": 0.13328426666666668}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-2.3679778575897217, -0.4241618812084198, -7.068861305015162e-05, -0.5213835835456848, -0.06956901401281357, -0.018474997952580452, -9.417489309271332e-06, -0.015940727666020393, -0.025922421365976334, -0.007519631180912256], "finish_reason": "stop"}, {"text": " ValueError(\"Target column not in DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Target", " column", " not", " in", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.06235253065824509, -1.5020257706055418e-05, -0.023307057097554207, -1.3703093528747559, -0.540033757686615, -0.0036873698700219393, -0.20625483989715576, -1.2172596454620361, -0.3778313398361206, -0.0018938715802505612, -0.38532283902168274, -0.0002884448622353375, -0.0043356469832360744], "finish_reason": "stop"}, {"text": " df[df.columns.difference([target_column])]", "tokens": [" df", "[", "df", ".", "columns", ".", "difference", "([", "target", "_", "column", "]", ")]", "\n"], "logprobs": [-0.000876757490914315, -1.5317128896713257, -0.18948982656002045, -0.0010855264263227582, -8.880697714630514e-05, -0.14345896244049072, -0.045242294669151306, -0.006519595626741648, -0.00015877417172305286, -2.9802276912960224e-06, -7.152555099310121e-07, -0.0014310367405414581, -0.00015841660206206143, -0.12922123074531555], "finish_reason": "stop"}, {"text": " df[target_column]  # No need for iloc here", "tokens": [" df", "[", "target", "_", "column", "]", "  ", "#", " No", " need", " for", " il", "oc", " here", "\n"], "logprobs": [-0.0013800868764519691, -0.0037886761128902435, -0.00014482879487331957, -2.622600959512056e-06, -2.002696055569686e-05, -3.671578815556131e-05, -1.6181715726852417, -0.0001851148990681395, -3.563901424407959, -0.03030257299542427, -1.3873504400253296, -1.6988277435302734, -7.033100700937212e-05, -3.2809159755706787, -0.28560543060302734], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ")", "\n"], "logprobs": [-0.00016497205069754273, -2.622600959512056e-06, -0.0004151197790633887, -1.680836794548668e-05, -5.6265202147187665e-05, -4.6491513785440475e-06, -1.1920928244535389e-07, -3.7788631743751466e-05, -3.242440288886428e-05, -2.622600959512056e-06, -3.576278118089249e-07, -0.00025185750564560294, -0.000557267339900136, -8.4638240878121e-06, -8.344646857949556e-07, -4.768370445162873e-07, -5.960462772236497e-07, -1.680836794548668e-05, -0.015953047201037407, -0.002253494691103697, -0.0010045487433671951, -0.011968114413321018, -0.023624951019883156, -1.0013530300057027e-05, -1.6689286894688848e-06, -0.0009759668610058725, -0.0032650516368448734, -3.182837463100441e-05, -0.2200489640235901, -1.6558759212493896, -0.089739128947258], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-9.023735765367746e-05, -6.9141146923357155e-06, -2.3841855067985307e-07, -4.172316494077677e-06, -0.2672763168811798, -0.045776400715112686], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-1.0132738680113107e-05, -1.4066597032069694e-05, -0.00020203932945150882, -0.002887843642383814, -2.5033637939486653e-05, -0.0032467530108988285, -0.0002631794777698815, -1.0847986231965479e-05, -1.7881377516459906e-06, -0.0012030514189973474, -0.0053864819929003716], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00042417587246745825, -5.722029527532868e-06, -3.2186455882765586e-06, -0.0002516191452741623, -8.451581379631534e-05, -0.00011252723925281316, -0.00024816294899210334, -0.00011693747364915907, -0.0024917051196098328], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.009091763757169247, -1.0728830375228426e-06, -2.861018856492592e-06, -2.729855441430118e-05, -5.4596363042946905e-05, -4.887569048150908e-06, -0.000854961050208658, -0.000102037942269817, -0.00019333878299221396, -1.1920922133867862e-06, -7.152555099310121e-07, -0.0006914132391102612, -0.014884253032505512], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.05212276056408882, -0.06240338087081909], "finish_reason": "stop"}], "metrics": {"energy": 726.5667609949111, "energy_per_token": 5.381976007369712, "time": 21.872797, "time_per_token": 0.16202071851851851}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " target_column not in columns:", "tokens": [" target", "_", "column", " not", " in", " columns", ":", "\n"], "logprobs": [-0.38931339979171753, -0.00034648136352188885, -6.19869097135961e-05, -0.061321571469306946, -3.933898824470816e-06, -0.9606193900108337, -0.022889800369739532, -0.0045493911020457745], "finish_reason": "stop"}, {"text": " ValueError(\"The target column is not present in the DataFrame.\")", "tokens": [" Value", "Error", "(", "\"", "The", " target", " column", " is", " not", " present", " in", " the", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.045811016112565994, -1.811964830267243e-05, -0.02569960430264473, -1.266981601715088, -1.6410260200500488, -0.6665676832199097, -0.032299723476171494, -0.6919693350791931, -0.006681956350803375, -1.6053383350372314, -0.010413595475256443, -0.00601718807592988, -0.4183104932308197, -0.0016653967322781682, -0.4580870270729065, -0.027225570753216743, -0.0004618293314706534, -0.0016599221853539348], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column])", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "])", "\n"], "logprobs": [-0.0009974034037441015, -0.2522379159927368, -0.058929234743118286, -0.043665315955877304, -0.4950976073741913, -0.24983762204647064, -0.00048494499060325325, -6.0794889577664435e-05, -6.437280717364047e-06, -0.2657009959220886, -0.030048338696360588], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.001116605824790895, -0.0034341190475970507, -0.00015698630886618048, -2.622600959512056e-06, -1.3112935448589269e-05, -4.23184028477408e-05, -0.26593029499053955], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ")", "\n"], "logprobs": [-0.0001530530134914443, -2.622600959512056e-06, -0.0007245299639180303, -1.3947389561508317e-05, -7.128461584215984e-05, -4.172316494077677e-06, -1.1920928244535389e-07, -4.005352093372494e-05, -3.397406908334233e-05, -2.7418097943154862e-06, -3.576278118089249e-07, -0.00022396916756406426, -0.0005127069307491183, -7.629365427419543e-06, -8.344646857949556e-07, -4.768370445162873e-07, -7.152555099310121e-07, -2.0265373677830212e-05, -0.013765638694167137, -0.002266102470457554, -0.0009211826254613698, -0.014441492967307568, -0.020659612491726875, -8.821448318485636e-06, -2.145764938177308e-06, -0.0012155532604083419, -0.003293092828243971, -4.088794958079234e-05, -0.25621360540390015, -1.6192409992218018, -0.07396942377090454], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-9.321732068201527e-05, -5.245195097813848e-06, -1.1920928244535389e-07, -5.483612312673358e-06, -0.2517452836036682, -0.041432883590459824], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-9.775113539944869e-06, -1.2397689715726301e-05, -0.00012814177898690104, -0.002774677239358425, -3.862306402879767e-05, -0.0029427579138427973, -0.00019059749320149422, -1.1444026313256472e-05, -1.4305104514278355e-06, -0.0014544870937243104, -0.0044948020949959755], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0004447901446837932, -5.960446742392378e-06, -5.8412379075889476e-06, -0.0003131137927994132, -0.00010132275929208845, -0.000169382052263245, -0.00024125049822032452, -0.0001445904199499637, -0.0030302342493087053], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.008318774402141571, -1.311301275563892e-06, -3.099436753473128e-06, -3.969590397900902e-05, -6.878139538457617e-05, -4.6491513785440475e-06, -0.001022888463921845, -9.107174992095679e-05, -0.00022289653134066612, -1.7881377516459906e-06, -8.344646857949556e-07, -0.0007001094636507332, -0.011298365890979767], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.042354974895715714, -0.0565619170665741], "finish_reason": "stop"}], "metrics": {"energy": 714.8251817502971, "energy_per_token": 5.628544738191316, "time": 20.995731, "time_per_token": 0.16532071653543307}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.38931339979171753, -0.00034648136352188885, -6.19869097135961e-05, -0.061321571469306946, -3.933898824470816e-06, -0.48482745885849, -0.18189911544322968, -0.0003305127320345491, -0.009266345761716366, -0.0024437822867184877], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column {target_column} not found in DataFrame.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " {", "target", "_", "column", "}", " not", " found", " in", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.045811016112565994, -1.811964830267243e-05, -0.02569960430264473, -0.3504243493080139, -0.02306373603641987, -0.7535260319709778, -0.005670533049851656, -1.583155870437622, -0.00023231192608363926, -5.6980417866725475e-05, -3.85038583772257e-05, -0.003071949351578951, -0.07955944538116455, -0.18116629123687744, -0.013823133893311024, -0.31029313802719116, -0.0010083595989271998, -1.1751967668533325, -0.01478653121739626, -0.00046433156239800155, -0.0016563518438488245], "finish_reason": "stop"}, {"text": " df[df.columns.difference([target_column])]", "tokens": [" df", "[", "df", ".", "columns", ".", "difference", "([", "target", "_", "column", "]", ")]", "\n"], "logprobs": [-0.0009974034037441015, -1.6146379709243774, -0.19812022149562836, -0.0010457528987899423, -6.460934673668817e-05, -0.12706223130226135, -0.04511718451976776, -0.0060310522094368935, -0.00018821375851985067, -4.291525328881107e-06, -5.960462772236497e-07, -0.0013183006085455418, -0.00015031162183731794, -0.1295599639415741], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.001105769770219922, -0.004697952885180712, -0.0001934579631779343, -2.861018856492592e-06, -1.4662635294371285e-05, -3.40932747349143e-05, -0.32047468423843384], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00019596086349338293, -2.7418097943154862e-06, -0.0005142558366060257, -1.6212332411669195e-05, -6.186770770000294e-05, -3.3378546504536644e-06, -1.1920928244535389e-07, -2.706014311115723e-05, -3.397406908334233e-05, -2.7418097943154862e-06, -4.768370445162873e-07, -0.0002687808300834149, -0.0005925330333411694, -8.22540732769994e-06, -4.768370445162873e-07, -4.768370445162873e-07, -7.152555099310121e-07, -2.2411095415009186e-05, -0.012506981380283833, -0.002325689420104027, -0.0010119322687387466, -0.01330532692372799, -0.0231237281113863, -8.106198947643861e-06, -1.9073468138230965e-06, -0.0010827876394614577, -0.0035227404441684484, -3.969590397900902e-05, -0.234278604388237, -0.2738093435764313, -0.007134555839002132, -4.291525328881107e-06, -5.8412379075889476e-06, -0.00021741411183029413, -0.07646403461694717, -0.0033343215472996235, -0.011695627123117447, -0.09019814431667328], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-9.119095193454996e-05, -6.6756979322235566e-06, -1.1920928244535389e-07, -3.933898824470816e-06, -0.279188334941864, -0.040357790887355804], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-8.702239938429557e-06, -1.156323378381785e-05, -0.00013350549852475524, -0.0026246407069265842, -3.135155202471651e-05, -0.0025617422070354223, -0.0002361257211305201, -1.156323378381785e-05, -1.4305104514278355e-06, -0.0014152044896036386, -0.0035756006836891174], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0004164305282756686, -6.198863957251888e-06, -4.410734163684538e-06, -0.00027307120035402477, -8.237022848334163e-05, -0.0001287377526750788, -0.0002162222663173452, -0.00011884459672728553, -0.0022812075912952423], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.010143280029296875, -7.152555099310121e-07, -2.145764938177308e-06, -3.325883881188929e-05, -7.998623186722398e-05, -4.291525328881107e-06, -0.0012137673329561949, -9.190614218823612e-05, -0.00019965562387369573, -1.7881377516459906e-06, -9.536738616588991e-07, -0.0006767605082131922, -0.012046677991747856], "finish_reason": "stop"}, {"text": " accuracy<|endoftext|># Copyright (C) 2023 Intel Corporation", "tokens": [" accuracy", "<", "|", "end", "of", "text", "|>", "#", " Copyright", " (", "C", ")", " ", "2", "0", "2", "3", " Intel", " Corporation", "\n"], "logprobs": [-0.05644858255982399, -2.9951934814453125, -1.5497195136049413e-06, -2.264974000354414e-06, -1.6689160474925302e-05, -0.00019798702851403505, -0.18108423054218292, -1.3232054710388184, -2.480553150177002, -0.840715765953064, -1.1169878244400024, -0.0001559135998832062, -0.07476334273815155, -0.0017541749402880669, -8.940297266235575e-05, -0.16058234870433807, -0.730378270149231, -2.1347455978393555, -0.00014208737411536276, -0.0005604841862805188], "finish_reason": "stop"}], "metrics": {"energy": 798.9424672727582, "energy_per_token": 4.993390420454739, "time": 23.731373, "time_per_token": 0.14832108125000001}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.38931339979171753, -0.00034648136352188885, -6.19869097135961e-05, -0.061321571469306946, -3.933898824470816e-06, -0.48482745885849, -0.18189911544322968, -0.0003305127320345491, -0.009266345761716366, -0.0024437822867184877], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' does not exist in the DataFrame.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " does", " not", " exist", " in", " the", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.045811016112565994, -1.811964830267243e-05, -0.02569960430264473, -0.3504243493080139, -0.02306373603641987, -0.7535260319709778, -0.005670533049851656, -0.26950761675834656, -0.00020632999076042324, -0.00021419614495243877, -1.9788545614574105e-05, -2.539125671319198e-05, -0.0032564965076744556, -2.612248182296753, -0.0002944036095868796, -0.0005800233921036124, -0.03478371351957321, -0.08815377205610275, -0.22446437180042267, -0.0004629017203114927, -0.353437602519989, -0.009498167783021927, -0.000577402301132679, -0.0015631611458957195], "finish_reason": "stop"}, {"text": " df[columns]", "tokens": [" df", "[", "columns", "]", "\n"], "logprobs": [-0.0009974034037441015, -1.6146379709243774, -1.8252145051956177, -0.6020097136497498, -0.44509315490722656], "finish_reason": "stop"}, {"text": " df[target_column]  # Select the target column", "tokens": [" df", "[", "target", "_", "column", "]", "  ", "#", " Select", " the", " target", " column", "\n"], "logprobs": [-0.001105769770219922, -0.004697952885180712, -0.0001934579631779343, -2.861018856492592e-06, -1.4662635294371285e-05, -3.40932747349143e-05, -1.4150447845458984, -0.00016020445036701858, -2.0065979957580566, -0.17365558445453644, -0.023177659139037132, -0.009406177327036858, -0.33901333808898926], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ")", "\n"], "logprobs": [-0.00019596086349338293, -2.7418097943154862e-06, -0.0005142558366060257, -1.6212332411669195e-05, -6.186770770000294e-05, -3.3378546504536644e-06, -1.1920928244535389e-07, -2.706014311115723e-05, -3.397406908334233e-05, -2.7418097943154862e-06, -4.768370445162873e-07, -0.0002687808300834149, -0.0005925330333411694, -8.22540732769994e-06, -4.768370445162873e-07, -4.768370445162873e-07, -7.152555099310121e-07, -2.2411095415009186e-05, -0.012506981380283833, -0.002325689420104027, -0.0010119322687387466, -0.01330532692372799, -0.0231237281113863, -8.106198947643861e-06, -1.9073468138230965e-06, -0.0010827876394614577, -0.0035227404441684484, -3.969590397900902e-05, -0.234278604388237, -1.5926874876022339, -0.07538627833127975], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-9.595887240720913e-05, -6.9141146923357155e-06, -2.3841855067985307e-07, -5.483612312673358e-06, -0.26294800639152527, -0.04220927506685257], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-8.34461570775602e-06, -1.0251946150674485e-05, -0.00011944057769142091, -0.0029467991553246975, -3.0636318115284666e-05, -0.0024647116661071777, -0.00029583368450403214, -7.748573807475623e-06, -1.6689286894688848e-06, -0.0014331794809550047, -0.003711836412549019], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0004385939973872155, -6.6756979322235566e-06, -5.245195097813848e-06, -0.00032443503732793033, -9.190614218823612e-05, -9.870042413240299e-05, -0.00017855956684798002, -0.00013290952483657748, -0.0026238083373755217], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.010956956073641777, -9.536738616588991e-07, -2.861018856492592e-06, -3.40932747349143e-05, -6.663577369181439e-05, -4.529942543740617e-06, -0.00098525604698807, -8.916457591112703e-05, -0.0001811817055568099, -1.5497195136049413e-06, -1.0728830375228426e-06, -0.0006959400488995016, -0.011714006774127483], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.04291677474975586, -0.06922212243080139], "finish_reason": "stop"}], "metrics": {"energy": 727.7082150030137, "energy_per_token": 5.390431222244546, "time": 22.204922, "time_per_token": 0.1644809037037037}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " target_column not in columns:", "tokens": [" target", "_", "column", " not", " in", " columns", ":", "\n"], "logprobs": [-0.38931339979171753, -0.00034648136352188885, -6.19869097135961e-05, -0.061321571469306946, -3.933898824470816e-06, -0.9606193900108337, -0.022889800369739532, -0.0045493911020457745], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' not found in the DataFrame.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " the", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.045811016112565994, -1.811964830267243e-05, -0.02569960430264473, -0.3504243493080139, -0.02306373603641987, -0.7535260319709778, -0.005670533049851656, -0.26950761675834656, -0.00020632999076042324, -0.00021419614495243877, -1.9788545614574105e-05, -2.539125671319198e-05, -0.0032564965076744556, -0.14637838304042816, -0.08637150377035141, -0.013697323389351368, -1.1995971202850342, -0.2545406222343445, -0.0006124289939180017, -0.49543267488479614, -0.01342471782118082, -0.0004580163804348558, -0.0014093714999035], "finish_reason": "stop"}, {"text": " df.drop(columns=target_column)", "tokens": [" df", ".", "drop", "(", "columns", "=", "target", "_", "column", ")", "\n"], "logprobs": [-0.0009974034037441015, -0.2522379159927368, -0.058929234743118286, -0.043665315955877304, -0.4950976073741913, -1.5277764797210693, -0.004416236653923988, -3.814689989667386e-06, -9.536738616588991e-07, -0.45989540219306946, -0.022404178977012634], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0011411352315917611, -0.00374259683303535, -0.0001565095444675535, -3.6954811548639555e-06, -2.1219027985353023e-05, -2.992108420585282e-05, -0.26773858070373535], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)  # Use 2 for consistency", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "  ", "#", " Use", " ", "2", " for", " consistency", "\n"], "logprobs": [-0.0001991788885788992, -3.099436753473128e-06, -0.0004117832868359983, -1.4066597032069694e-05, -5.566918844124302e-05, -2.861018856492592e-06, -1.1920928244535389e-07, -3.6000557884108275e-05, -3.123234637314454e-05, -2.145764938177308e-06, -5.960462772236497e-07, -0.00029523781267926097, -0.0005413020844571292, -8.583032467868179e-06, -3.576278118089249e-07, -4.768370445162873e-07, -4.768370445162873e-07, -1.883488948806189e-05, -0.01888907141983509, -0.0023623197339475155, -0.0010707604233175516, -0.01339272502809763, -0.026626212522387505, -8.821448318485636e-06, -2.3841830625315197e-06, -0.0010514690075069666, -0.00296106212772429, -4.053033626405522e-05, -0.24145151674747467, -0.2759562134742737, -0.006028089672327042, -3.099436753473128e-06, -5.245195097813848e-06, -0.00025555206229910254, -0.08082515001296997, -0.0037252570036798716, -0.011288582347333431, -2.5110459327697754, -0.00036554806865751743, -2.83477783203125, -1.9711519479751587, -0.7921679615974426, -3.0840184688568115, -1.2875583171844482, -0.3335729241371155], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-9.393251093570143e-05, -9.179073458653875e-06, -1.1920928244535389e-07, -5.8412379075889476e-06, -0.27839037775993347, -0.05072126165032387], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-1.0609570381348021e-05, -1.07287787614041e-05, -0.00014327930693980306, -0.0026544833090156317, -2.8013790142722428e-05, -0.003041643649339676, -0.0002661589242052287, -1.2636104656849056e-05, -1.311301275563892e-06, -0.0015184074873104692, -0.0051269009709358215], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.000459565402707085, -6.318072337307967e-06, -4.529942543740617e-06, -0.00037746457383036613, -8.976056415122002e-05, -0.00012158608296886086, -0.00018916724366135895, -0.00014375607133843005, -0.0029927962459623814], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.009684484452009201, -9.536738616588991e-07, -2.622600959512056e-06, -3.8265450712060556e-05, -5.98412734689191e-05, -3.933898824470816e-06, -0.0010913613950833678, -8.284702198579907e-05, -0.0002610342635307461, -1.5497195136049413e-06, -9.536738616588991e-07, -0.0007271506474353373, -0.012631882913410664], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.05621015280485153, -0.07300922274589539], "finish_reason": "stop"}], "metrics": {"energy": 779.2429623107917, "energy_per_token": 5.337280563772546, "time": 23.880756, "time_per_token": 0.16356682191780822}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " target_column not in df:", "tokens": [" target", "_", "column", " not", " in", " df", ":", "\n"], "logprobs": [-0.38931339979171753, -0.00034648136352188885, -6.19869097135961e-05, -0.061321571469306946, -3.933898824470816e-06, -0.48482745885849, -1.8084516525268555, -0.005596682894974947], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' not found in DataFrame.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.045811016112565994, -1.811964830267243e-05, -0.02569960430264473, -0.3504243493080139, -0.02306373603641987, -0.7535260319709778, -0.005670533049851656, -0.26950761675834656, -0.00020632999076042324, -0.00021419614495243877, -1.9788545614574105e-05, -2.539125671319198e-05, -0.0032564965076744556, -0.14637838304042816, -0.08637150377035141, -0.013697323389351368, -0.4670913815498352, -0.0008168459753505886, -0.6904012560844421, -0.017795659601688385, -0.0005427317810244858, -0.001726447488181293], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0009974034037441015, -0.2522379159927368, -0.058929234743118286, -0.043665315955877304, -0.9420657157897949, -1.1324817933200393e-05, -4.887569048150908e-06, -0.0005478549865074456, -0.0005514293443411589, -0.0013917532050982118, -4.4225667807040736e-05, -0.0008978387922979891, -0.06619614362716675], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0012228161795064807, -0.004532065242528915, -0.0001380348257953301, -3.4570634852570947e-06, -1.3828182090946939e-05, -3.635817120084539e-05, -0.29958754777908325], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00016223068814724684, -2.861018856492592e-06, -0.0005349873681552708, -1.7404405298293568e-05, -8.296622399939224e-05, -3.6954811548639555e-06, -1.1920928244535389e-07, -3.635817120084539e-05, -3.516612196108326e-05, -2.7418097943154862e-06, -5.960462772236497e-07, -0.0002454218047205359, -0.000567275274079293, -8.34461570775602e-06, -3.576278118089249e-07, -4.768370445162873e-07, -5.960462772236497e-07, -2.0503786799963564e-05, -0.012917883694171906, -0.0023761154152452946, -0.001135062426328659, -0.01389614399522543, -0.022908208891749382, -9.179073458653875e-06, -2.622600959512056e-06, -0.0011162485461682081, -0.0033877857495099306, -3.421248038648628e-05, -0.2061120569705963, -0.26196369528770447, -0.006258413195610046, -3.6954811548639555e-06, -5.364403477869928e-06, -0.00020621081057470292, -0.06734168529510498, -0.0035959123633801937, -0.01147916167974472, -0.09626179933547974], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.00010656742961145937, -5.8412379075889476e-06, -1.1920928244535389e-07, -4.0531076592742465e-06, -0.24652454257011414, -0.042645055800676346], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-7.510157047363464e-06, -1.2397689715726301e-05, -0.00015269544383045286, -0.0026026444975286722, -2.1815061700181104e-05, -0.003070760751143098, -0.00019608005823101848, -1.2397689715726301e-05, -1.4305104514278355e-06, -0.0014781750505790114, -0.003988051787018776], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0005245024804025888, -7.033323527139146e-06, -5.364403477869928e-06, -0.00032264748006127775, -8.523101132595912e-05, -9.738924563862383e-05, -0.00020001317898277193, -0.00010251473577227443, -0.0025222653057426214], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.01364722941070795, -9.536738616588991e-07, -2.7418097943154862e-06, -3.313963316031732e-05, -6.890059739816934e-05, -4.6491513785440475e-06, -0.0009863278828561306, -7.819823804311454e-05, -0.00025090406415984035, -1.4305104514278355e-06, -7.152555099310121e-07, -0.0006220789509825408, -0.016766346991062164], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.05137769877910614, -0.06901119649410248], "finish_reason": "stop"}], "metrics": {"energy": 737.1351617698672, "energy_per_token": 5.265251155499051, "time": 22.426899, "time_per_token": 0.1601921357142857}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " target_column not in columns:", "tokens": [" target", "_", "column", " not", " in", " columns", ":", "\n"], "logprobs": [-0.38931339979171753, -0.00034648136352188885, -6.19869097135961e-05, -0.061321571469306946, -3.933898824470816e-06, -0.9606193900108337, -0.022889800369739532, -0.0045493911020457745], "finish_reason": "stop"}, {"text": " ValueError(f\"Column {target_column} does not exist in the DataFrame.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Column", " {", "target", "_", "column", "}", " does", " not", " exist", " in", " the", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.045811016112565994, -1.811964830267243e-05, -0.02569960430264473, -0.3504243493080139, -0.02306373603641987, -1.5490715503692627, -0.9879720211029053, -0.0006562701892107725, -4.792098479811102e-05, -2.5510462364763953e-05, -0.0015836328966543078, -2.4644267559051514, -0.000491855782456696, -0.0008912881603464484, -0.11598681658506393, -0.16205061972141266, -0.21912874281406403, -0.0007288183551281691, -0.7606143951416016, -0.01425335742533207, -0.0004493180604185909, -0.0016213617054745555], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column])", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "])", "\n"], "logprobs": [-0.0009974034037441015, -0.2522379159927368, -0.058929234743118286, -0.043665315955877304, -0.4950976073741913, -0.24983762204647064, -0.00048494499060325325, -6.0794889577664435e-05, -6.437280717364047e-06, -0.2657009959220886, -0.030048338696360588], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.001116605824790895, -0.0034341190475970507, -0.00015698630886618048, -2.622600959512056e-06, -1.3112935448589269e-05, -4.23184028477408e-05, -0.26593029499053955], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ")", "\n"], "logprobs": [-0.0001530530134914443, -2.622600959512056e-06, -0.0007245299639180303, -1.3947389561508317e-05, -7.128461584215984e-05, -4.172316494077677e-06, -1.1920928244535389e-07, -4.005352093372494e-05, -3.397406908334233e-05, -2.7418097943154862e-06, -3.576278118089249e-07, -0.00022396916756406426, -0.0005127069307491183, -7.629365427419543e-06, -8.344646857949556e-07, -4.768370445162873e-07, -7.152555099310121e-07, -2.0265373677830212e-05, -0.013765638694167137, -0.002266102470457554, -0.0009211826254613698, -0.014441492967307568, -0.020659612491726875, -8.821448318485636e-06, -2.145764938177308e-06, -0.0012155532604083419, -0.003293092828243971, -4.088794958079234e-05, -0.25621360540390015, -1.6192409992218018, -0.07396942377090454], "finish_reason": "stop"}, {"text": " LogisticRegression(random_state=42)", "tokens": [" Log", "istic", "Reg", "ression", "(", "random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-9.321732068201527e-05, -5.245195097813848e-06, -1.1920928244535389e-07, -5.483612312673358e-06, -1.5027637481689453, -0.43665415048599243, -1.1920922133867862e-06, -1.0728830375228426e-06, -0.0003909300430677831, -0.0978633314371109, -0.0006711614551022649, -0.04664454981684685, -0.09540014714002609], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-8.106198947643861e-06, -8.22540732769994e-06, -0.0002029928145930171, -0.003078604582697153, -3.0874729418428615e-05, -0.0031684457790106535, -0.0002579356369096786, -1.0609570381348021e-05, -1.4305104514278355e-06, -0.0017268045339733362, -0.0038750097155570984], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.000508417550008744, -5.722029527532868e-06, -5.245195097813848e-06, -0.000289159914245829, -0.0001292145170737058, -0.00012313561455812305, -0.00023934361524879932, -0.00013934595335740596, -0.0031255462672561407], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.013206509873270988, -1.1920922133867862e-06, -2.3841830625315197e-06, -3.182837463100441e-05, -5.8887653722194955e-05, -4.529942543740617e-06, -0.000876757490914315, -0.00010835537250386551, -0.0001931004080688581, -1.5497195136049413e-06, -7.152555099310121e-07, -0.000683074293192476, -0.015049018897116184], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.05886831879615784, -0.07082153856754303], "finish_reason": "stop"}], "metrics": {"energy": 759.0631182003021, "energy_per_token": 5.500457378263059, "time": 22.995852, "time_per_token": 0.16663660869565217}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " target_column not in columns:", "tokens": [" target", "_", "column", " not", " in", " columns", ":", "\n"], "logprobs": [-0.38931339979171753, -0.00034648136352188885, -6.19869097135961e-05, -0.061321571469306946, -3.933898824470816e-06, -0.9606193900108337, -0.022889800369739532, -0.0045493911020457745], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column {target_column} not found in dataframe\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " {", "target", "_", "column", "}", " not", " found", " in", " data", "frame", "\"", ")", "\n"], "logprobs": [-0.045811016112565994, -1.811964830267243e-05, -0.02569960430264473, -0.3504243493080139, -0.02306373603641987, -0.7535260319709778, -0.005670533049851656, -1.583155870437622, -0.00023231192608363926, -5.6980417866725475e-05, -3.85038583772257e-05, -0.003071949351578951, -0.07955944538116455, -0.18116629123687744, -0.013823133893311024, -2.6809215545654297, -1.8970563411712646, -0.7901581525802612, -0.00014172980445437133, -0.0013217531377449632], "finish_reason": "stop"}, {"text": " df[df.columns.difference([target_column])]", "tokens": [" df", "[", "df", ".", "columns", ".", "difference", "([", "target", "_", "column", "]", ")]", "\n"], "logprobs": [-0.0009974034037441015, -1.6146379709243774, -0.19812022149562836, -0.0010457528987899423, -6.460934673668817e-05, -0.12706223130226135, -0.04511718451976776, -0.0060310522094368935, -0.00018821375851985067, -4.291525328881107e-06, -5.960462772236497e-07, -0.0013183006085455418, -0.00015031162183731794, -0.1295599639415741], "finish_reason": "stop"}, {"text": " df[target_column]  # Select the target column", "tokens": [" df", "[", "target", "_", "column", "]", "  ", "#", " Select", " the", " target", " column", "\n"], "logprobs": [-0.001105769770219922, -0.004697952885180712, -0.0001934579631779343, -2.861018856492592e-06, -1.4662635294371285e-05, -3.40932747349143e-05, -1.4150447845458984, -0.00016020445036701858, -2.0065979957580566, -0.17365558445453644, -0.023177659139037132, -0.009406177327036858, -0.33901333808898926], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ")", "\n"], "logprobs": [-0.00019596086349338293, -2.7418097943154862e-06, -0.0005142558366060257, -1.6212332411669195e-05, -6.186770770000294e-05, -3.3378546504536644e-06, -1.1920928244535389e-07, -2.706014311115723e-05, -3.397406908334233e-05, -2.7418097943154862e-06, -4.768370445162873e-07, -0.0002687808300834149, -0.0005925330333411694, -8.22540732769994e-06, -4.768370445162873e-07, -4.768370445162873e-07, -7.152555099310121e-07, -2.2411095415009186e-05, -0.012506981380283833, -0.002325689420104027, -0.0010119322687387466, -0.01330532692372799, -0.0231237281113863, -8.106198947643861e-06, -1.9073468138230965e-06, -0.0010827876394614577, -0.0035227404441684484, -3.969590397900902e-05, -0.234278604388237, -1.5926874876022339, -0.07538627833127975], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-9.595887240720913e-05, -6.9141146923357155e-06, -2.3841855067985307e-07, -5.483612312673358e-06, -0.26294800639152527, -0.04220927506685257], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-8.34461570775602e-06, -1.0251946150674485e-05, -0.00011944057769142091, -0.0029467991553246975, -3.0636318115284666e-05, -0.0024647116661071777, -0.00029583368450403214, -7.748573807475623e-06, -1.6689286894688848e-06, -0.0014331794809550047, -0.003711836412549019], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0004385939973872155, -6.6756979322235566e-06, -5.245195097813848e-06, -0.00032443503732793033, -9.190614218823612e-05, -9.870042413240299e-05, -0.00017855956684798002, -0.00013290952483657748, -0.0026238083373755217], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.010956956073641777, -9.536738616588991e-07, -2.861018856492592e-06, -3.40932747349143e-05, -6.663577369181439e-05, -4.529942543740617e-06, -0.00098525604698807, -8.916457591112703e-05, -0.0001811817055568099, -1.5497195136049413e-06, -1.0728830375228426e-06, -0.0006959400488995016, -0.011714006774127483], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.04291677474975586, -0.06922212243080139], "finish_reason": "stop"}], "metrics": {"energy": 747.6954819345474, "energy_per_token": 5.418083202424256, "time": 22.23988, "time_per_token": 0.16115855072463767}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)  # Convert the numpy array to a Pandas DataFrame", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "  ", "#", " Convert", " the", " numpy", " array", " to", " a", " Pand", "as", " Data", "Frame", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -2.5098841190338135, -0.00024875884992070496, -0.6135653257369995, -0.7298541069030762, -3.2782788276672363, -0.1186748519539833, -0.06301761418581009, -0.04288262873888016, -1.4556143283843994, -7.152555099310121e-07, -0.02167559415102005, -0.001050635357387364, -0.03861458972096443], "finish_reason": "stop"}, {"text": " target_column not in columns:", "tokens": [" target", "_", "column", " not", " in", " columns", ":", "\n"], "logprobs": [-0.38931339979171753, -0.00034648136352188885, -6.19869097135961e-05, -0.061321571469306946, -3.933898824470816e-06, -0.9606193900108337, -0.022889800369739532, -0.0045493911020457745], "finish_reason": "stop"}, {"text": " ValueError(f\"The DataFrame does not have a column named {target_column}\")", "tokens": [" Value", "Error", "(", "f", "\"", "The", " Data", "Frame", " does", " not", " have", " a", " column", " named", " {", "target", "_", "column", "}\"", ")", "\n"], "logprobs": [-0.045811016112565994, -1.811964830267243e-05, -0.02569960430264473, -0.3504243493080139, -0.02306373603641987, -1.9639084339141846, -3.6074767112731934, -0.004887301009148359, -0.11484256386756897, -0.0006028980133123696, -0.6102915406227112, -0.4181751608848572, -0.24510809779167175, -0.09232693165540695, -2.2344295978546143, -0.0006725909770466387, -3.981510963058099e-05, -2.4914430468925275e-05, -0.31745168566703796, -0.0002673506969586015, -0.0009438112610951066], "finish_reason": "stop"}, {"text": " df[df.columns.difference([target_column])]", "tokens": [" df", "[", "df", ".", "columns", ".", "difference", "([", "target", "_", "column", "]", ")]", "\n"], "logprobs": [-0.0009974034037441015, -1.6146379709243774, -0.19812022149562836, -0.0010457528987899423, -6.460934673668817e-05, -0.12706223130226135, -0.04511718451976776, -0.0060310522094368935, -0.00018821375851985067, -4.291525328881107e-06, -5.960462772236497e-07, -0.0013183006085455418, -0.00015031162183731794, -0.1295599639415741], "finish_reason": "stop"}, {"text": " df[target_column]  # Access the target column specifically", "tokens": [" df", "[", "target", "_", "column", "]", "  ", "#", " Access", " the", " target", " column", " specifically", "\n"], "logprobs": [-0.001105769770219922, -0.004697952885180712, -0.0001934579631779343, -2.861018856492592e-06, -1.4662635294371285e-05, -3.40932747349143e-05, -1.4150447845458984, -0.00016020445036701858, -2.0008301734924316, -0.18465477228164673, -0.09307567775249481, -0.009686846286058426, -2.799224376678467, -0.02952544204890728], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00019596086349338293, -2.7418097943154862e-06, -0.0005142558366060257, -1.6212332411669195e-05, -6.186770770000294e-05, -3.3378546504536644e-06, -1.1920928244535389e-07, -2.706014311115723e-05, -3.397406908334233e-05, -2.7418097943154862e-06, -4.768370445162873e-07, -0.0002687808300834149, -0.0005925330333411694, -8.22540732769994e-06, -4.768370445162873e-07, -4.768370445162873e-07, -7.152555099310121e-07, -2.2411095415009186e-05, -0.012506981380283833, -0.002325689420104027, -0.0010119322687387466, -0.01330532692372799, -0.0231237281113863, -8.106198947643861e-06, -1.9073468138230965e-06, -0.0010827876394614577, -0.0035227404441684484, -3.969590397900902e-05, -0.234278604388237, -0.2738093435764313, -0.007134555839002132, -4.291525328881107e-06, -5.8412379075889476e-06, -0.00021741411183029413, -0.07646403461694717, -0.0033343215472996235, -0.011695627123117447, -0.09019814431667328], "finish_reason": "stop"}, {"text": " LogisticRegression(random_state=42)", "tokens": [" Log", "istic", "Reg", "ression", "(", "random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-9.119095193454996e-05, -6.6756979322235566e-06, -1.1920928244535389e-07, -3.933898824470816e-06, -1.4123976230621338, -0.3415769934654236, -9.536738616588991e-07, -1.1920922133867862e-06, -0.0003014348621945828, -0.10302194952964783, -0.0006550788530148566, -0.04321068897843361, -0.1018979623913765], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-7.867782187531702e-06, -1.0967194612021558e-05, -0.00018320789968129247, -0.0023813480511307716, -3.862306402879767e-05, -0.002646160777658224, -0.0002493547508493066, -9.179073458653875e-06, -1.1920922133867862e-06, -0.0012167439563199878, -0.004332442302256823], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0005597693379968405, -6.079655122448457e-06, -4.6491513785440475e-06, -0.000336590368533507, -9.393251093570143e-05, -0.0001397035230183974, -0.0003271759778726846, -0.0001323135511483997, -0.002516557462513447], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.010581931099295616, -1.0728830375228426e-06, -2.622600959512056e-06, -3.158996332786046e-05, -6.353653589030728e-05, -5.006777428206988e-06, -0.0017497718799859285, -9.381330892210826e-05, -0.00022218143567442894, -1.7881377516459906e-06, -7.152555099310121e-07, -0.0008734225411899388, -0.0124703673645854], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.05468323081731796, -0.07237248867750168], "finish_reason": "stop"}], "metrics": {"energy": 833.6412662372591, "energy_per_token": 5.021935338778669, "time": 25.00339, "time_per_token": 0.15062283132530122}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.38931339979171753, -0.00034648136352188885, -6.19869097135961e-05, -0.061321571469306946, -3.933898824470816e-06, -0.48482745885849, -0.18189911544322968, -0.0003305127320345491, -0.009266345761716366, -0.0024437822867184877], "finish_reason": "stop"}, {"text": " ValueError(\"Target column is not in the dataframe.\")", "tokens": [" Value", "Error", "(", "\"", "Target", " column", " is", " not", " in", " the", " data", "frame", ".", "\"", ")", "\n"], "logprobs": [-0.045811016112565994, -1.811964830267243e-05, -0.02569960430264473, -1.266981601715088, -0.5320306420326233, -0.004713139962404966, -2.7953555583953857, -0.02018318697810173, -0.29522812366485596, -0.14250318706035614, -1.6824486255645752, -0.867783784866333, -0.9702780842781067, -0.022504305467009544, -0.0003649522550404072, -0.005356958135962486], "finish_reason": "stop"}, {"text": " df[columns[:-1]]", "tokens": [" df", "[", "columns", "[:", "-", "1", "]]", "\n"], "logprobs": [-0.0009974034037441015, -1.6146379709243774, -1.8252145051956177, -0.9065064787864685, -0.0012234115274623036, -0.0005422552349045873, -0.0011066034203395247, -0.5165314674377441], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.001105769770219922, -0.004697952885180712, -0.0001934579631779343, -2.861018856492592e-06, -1.4662635294371285e-05, -3.40932747349143e-05, -0.32047468423843384], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00019596086349338293, -2.7418097943154862e-06, -0.0005142558366060257, -1.6212332411669195e-05, -6.186770770000294e-05, -3.3378546504536644e-06, -1.1920928244535389e-07, -2.706014311115723e-05, -3.397406908334233e-05, -2.7418097943154862e-06, -4.768370445162873e-07, -0.0002687808300834149, -0.0005925330333411694, -8.22540732769994e-06, -4.768370445162873e-07, -4.768370445162873e-07, -7.152555099310121e-07, -2.2411095415009186e-05, -0.012506981380283833, -0.002325689420104027, -0.0010119322687387466, -0.01330532692372799, -0.0231237281113863, -8.106198947643861e-06, -1.9073468138230965e-06, -0.0010827876394614577, -0.0035227404441684484, -3.969590397900902e-05, -1.668467402458191, -0.43037620186805725, -0.00896181259304285, -3.2186455882765586e-06, -6.198863957251888e-06, -0.0004676678800024092, -0.2658317983150482, -0.01081002876162529, -0.02921532280743122, -0.09487716108560562], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-8.689979586051777e-05, -5.006777428206988e-06, -2.3841855067985307e-07, -6.9141146923357155e-06, -0.26700279116630554, -0.049403462558984756], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-8.106198947643861e-06, -1.07287787614041e-05, -0.0001294529065489769, -0.003279666416347027, -3.611976353568025e-05, -0.0028502813074737787, -0.0002779574424494058, -8.583032467868179e-06, -1.0728830375228426e-06, -0.0014373458689078689, -0.004020228516310453], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00039939055568538606, -5.364403477869928e-06, -5.006777428206988e-06, -0.00022825974156148732, -0.00010477947944309562, -9.643566590966657e-05, -0.00021228920377325267, -0.00013469743134919554, -0.0023394853342324495], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.013790448196232319, -1.0728830375228426e-06, -2.145764938177308e-06, -3.194758028257638e-05, -6.508615479106084e-05, -3.814689989667386e-06, -0.0013424679636955261, -8.451581379631534e-05, -0.00021371940965764225, -1.9073468138230965e-06, -9.536738616588991e-07, -0.0006613928126171231, -0.015243110246956348], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.05340059474110603, -0.06475993990898132], "finish_reason": "stop"}], "metrics": {"energy": 800.5603074035646, "energy_per_token": 6.111147384760035, "time": 24.298903, "time_per_token": 0.18548780916030533}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " target_column not in columns:", "tokens": [" target", "_", "column", " not", " in", " columns", ":", "\n"], "logprobs": [-0.38931339979171753, -0.00034648136352188885, -6.19869097135961e-05, -0.061321571469306946, -3.933898824470816e-06, -0.9606193900108337, -0.022889800369739532, -0.0045493911020457745], "finish_reason": "stop"}, {"text": " ValueError(\"Target column not found in the DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Target", " column", " not", " found", " in", " the", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.045811016112565994, -1.811964830267243e-05, -0.02569960430264473, -1.266981601715088, -0.5320306420326233, -0.004713139962404966, -0.23153556883335114, -0.32108113169670105, -0.027910012751817703, -0.9842489361763, -0.2570245563983917, -0.0011364913079887629, -0.5547996163368225, -0.00028451209072954953, -0.0021766559220850468], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column])", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "])", "\n"], "logprobs": [-0.0009974034037441015, -0.2522379159927368, -0.058929234743118286, -0.043665315955877304, -0.4950976073741913, -0.24983762204647064, -0.00048494499060325325, -6.0794889577664435e-05, -6.437280717364047e-06, -0.2657009959220886, -0.030048338696360588], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.001116605824790895, -0.0034341190475970507, -0.00015698630886618048, -2.622600959512056e-06, -1.3112935448589269e-05, -4.23184028477408e-05, -0.26593029499053955], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0001530530134914443, -2.622600959512056e-06, -0.0007245299639180303, -1.3947389561508317e-05, -7.128461584215984e-05, -4.172316494077677e-06, -1.1920928244535389e-07, -4.005352093372494e-05, -3.397406908334233e-05, -2.7418097943154862e-06, -3.576278118089249e-07, -0.00022396916756406426, -0.0005127069307491183, -7.629365427419543e-06, -8.344646857949556e-07, -4.768370445162873e-07, -7.152555099310121e-07, -2.0265373677830212e-05, -0.013765638694167137, -0.002266102470457554, -0.0009211826254613698, -0.014441492967307568, -0.020659612491726875, -8.821448318485636e-06, -2.145764938177308e-06, -0.0012155532604083419, -0.003293092828243971, -4.088794958079234e-05, -0.25621360540390015, -0.264229953289032, -0.006027023307979107, -3.814689989667386e-06, -4.529942543740617e-06, -0.00021896349790040404, -0.08345144987106323, -0.00408825883641839, -0.012595390900969505, -0.08792988210916519], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.00010668662434909493, -4.172316494077677e-06, -1.1920928244535389e-07, -6.198863957251888e-06, -0.2560955882072449, -0.03992307558655739], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-9.536697689327411e-06, -1.1444026313256472e-05, -0.0001411338453181088, -0.0023991868365556, -3.015949550899677e-05, -0.0034261594992130995, -0.00023815179883968085, -1.3708974620385561e-05, -1.4305104514278355e-06, -0.0018705505644902587, -0.004831307101994753], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0005240259342826903, -6.437280717364047e-06, -5.245195097813848e-06, -0.00034564718953333795, -0.0001370812824461609, -0.00010072677832795307, -0.00025555206229910254, -0.00013064485392533243, -0.0036897454410791397], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.011177187785506248, -1.0728830375228426e-06, -2.264974000354414e-06, -3.683499380713329e-05, -5.972207145532593e-05, -4.0531076592742465e-06, -0.0008773530134931207, -9.893881360767409e-05, -0.00019596086349338293, -1.6689286894688848e-06, -9.536738616588991e-07, -0.0007503792876377702, -0.015466508455574512], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.04589288681745529, -0.05874108150601387], "finish_reason": "stop"}], "metrics": {"energy": 695.0199298238749, "energy_per_token": 5.3054956475104955, "time": 20.819717, "time_per_token": 0.15892913740458015}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-2.3679778575897217, -0.4241618812084198, -7.068861305015162e-05, -0.5213835835456848, -0.06956901401281357, -0.018474997952580452, -9.417489309271332e-06, -0.015940727666020393, -0.025922421365976334, -0.007519631180912256], "finish_reason": "stop"}, {"text": " ValueError(\"Target column not in DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "Target", " column", " not", " in", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.06235253065824509, -1.5020257706055418e-05, -0.023307057097554207, -1.3703093528747559, -0.540033757686615, -0.0036873698700219393, -0.20625483989715576, -1.2172596454620361, -0.3778313398361206, -0.0018938715802505612, -0.38532283902168274, -0.0002884448622353375, -0.0043356469832360744], "finish_reason": "stop"}, {"text": " df[df.columns.difference([target_column])]", "tokens": [" df", "[", "df", ".", "columns", ".", "difference", "([", "target", "_", "column", "]", ")]", "\n"], "logprobs": [-0.000876757490914315, -1.5317128896713257, -0.18948982656002045, -0.0010855264263227582, -8.880697714630514e-05, -0.14345896244049072, -0.045242294669151306, -0.006519595626741648, -0.00015877417172305286, -2.9802276912960224e-06, -7.152555099310121e-07, -0.0014310367405414581, -0.00015841660206206143, -0.12922123074531555], "finish_reason": "stop"}, {"text": " df[target_column]  # Select the target column as a series", "tokens": [" df", "[", "target", "_", "column", "]", "  ", "#", " Select", " the", " target", " column", " as", " a", " series", "\n"], "logprobs": [-0.0013800868764519691, -0.0037886761128902435, -0.00014482879487331957, -2.622600959512056e-06, -2.002696055569686e-05, -3.671578815556131e-05, -1.6181715726852417, -0.0001851148990681395, -2.246488094329834, -0.1692991852760315, -0.02560502476990223, -0.00910074170678854, -3.1491355895996094, -0.2965548038482666, -2.3675756454467773, -0.13981136679649353], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "1", "0", "1", ")", "\n"], "logprobs": [-0.00016497205069754273, -2.622600959512056e-06, -0.0004151197790633887, -1.680836794548668e-05, -5.6265202147187665e-05, -4.6491513785440475e-06, -1.1920928244535389e-07, -3.7788631743751466e-05, -3.242440288886428e-05, -2.622600959512056e-06, -3.576278118089249e-07, -0.00025185750564560294, -0.000557267339900136, -8.4638240878121e-06, -8.344646857949556e-07, -4.768370445162873e-07, -5.960462772236497e-07, -1.680836794548668e-05, -0.015953047201037407, -0.002253494691103697, -0.0010045487433671951, -0.011968114413321018, -0.023624951019883156, -1.0013530300057027e-05, -1.6689286894688848e-06, -0.0009759668610058725, -0.0032650516368448734, -3.182837463100441e-05, -1.7111835479736328, -0.3809220790863037, -0.009739971719682217, -3.933898824470816e-06, -8.34461570775602e-06, -0.00036483307485468686, -1.9367564916610718, -1.0397238731384277, -0.5387593507766724, -0.020880987867712975, -0.07040731608867645], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-9.643566590966657e-05, -7.152531907195225e-06, -1.1920928244535389e-07, -4.410734163684538e-06, -0.294049471616745, -0.04671201482415199], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-8.702239938429557e-06, -1.1086402082582936e-05, -0.0001501924270996824, -0.002895807381719351, -3.540453326422721e-05, -0.002884515328332782, -0.0003120412293355912, -1.1324817933200393e-05, -1.0728830375228426e-06, -0.0018617454916238785, -0.005948815029114485], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.000502817565575242, -5.483612312673358e-06, -4.887569048150908e-06, -0.00034195298212580383, -0.0001012035645544529, -8.856858039507642e-05, -0.00030417583184316754, -0.0001137191939051263, -0.0020657882560044527], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.011082758195698261, -8.344646857949556e-07, -2.3841830625315197e-06, -2.9801878554280847e-05, -7.188061863416806e-05, -5.722029527532868e-06, -0.0011809049174189568, -9.119095193454996e-05, -0.00025006983196362853, -1.5497195136049413e-06, -1.311301275563892e-06, -0.0008348317351192236, -0.012959188781678677], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.059247467666864395, -0.07118185609579086], "finish_reason": "stop"}], "metrics": {"energy": 844.4892776470181, "energy_per_token": 5.864508872548736, "time": 25.737196, "time_per_token": 0.1787305277777778}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " not isinstance(columns, list):", "tokens": [" not", " isinstance", "(", "columns", ",", " list", "):", "\n"], "logprobs": [-2.3679778575897217, -0.4241618812084198, -7.068861305015162e-05, -2.2208807468414307, -0.003985914401710033, -0.017478367313742638, -0.43826574087142944, -0.006516990251839161], "finish_reason": "stop"}, {"text": " ValueError(f\"Column '{target_column}' not found in DataFrame.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.06235253065824509, -1.5020257706055418e-05, -0.023307057097554207, -0.3078017830848694, -0.018414141610264778, -1.5472140312194824, -0.479672372341156, -0.00056429672986269, -0.00029309268575161695, -2.2649508537142538e-05, -2.5748875486897305e-05, -0.003933550789952278, -0.14444859325885773, -0.0772448256611824, -0.02492365427315235, -0.7836840748786926, -0.0008504349971190095, -0.6120445132255554, -0.01449025422334671, -0.0003864018653985113, -0.002652699826285243], "finish_reason": "stop"}, {"text": " df.loc[:, df.columns != target_column]", "tokens": [" df", ".", "loc", "[:", ",", " df", ".", "columns", " ", "!", "=", " target", "_", "column", "]", "\n"], "logprobs": [-0.000876757490914315, -0.28226980566978455, -2.709852695465088, -0.009835944510996342, -0.0007862337515689433, -0.037811752408742905, -0.0004532501916401088, -1.6927575416048057e-05, -0.037871211767196655, -7.152555099310121e-07, -5.006777428206988e-06, -0.0012229352723807096, -1.0251946150674485e-05, -3.2186455882765586e-06, -0.00016699827392585576, -0.16913080215454102], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0011368485866114497, -0.004204125609248877, -0.0001578206429257989, -3.2186455882765586e-06, -1.4185804502631072e-05, -3.0874729418428615e-05, -0.27736443281173706], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00015400654228869826, -2.3841830625315197e-06, -0.0008289953111670911, -1.4066597032069694e-05, -5.769562994828448e-05, -4.0531076592742465e-06, -1.1920928244535389e-07, -4.053033626405522e-05, -3.6477376852417365e-05, -3.3378546504536644e-06, -9.536738616588991e-07, -0.0002300474588992074, -0.0005091324565000832, -8.583032467868179e-06, -5.960462772236497e-07, -4.768370445162873e-07, -5.960462772236497e-07, -2.1457441107486375e-05, -0.019317355006933212, -0.0024240415077656507, -0.0011174393584951758, -0.014404479414224625, -0.024808650836348534, -7.986990567587782e-06, -1.4305104514278355e-06, -0.001069093239493668, -0.0033326582051813602, -3.9457496313843876e-05, -0.20904652774333954, -0.2546597421169281, -0.005486074835062027, -4.0531076592742465e-06, -7.033323527139146e-06, -0.00023755589791107923, -0.08735163509845734, -0.004469524137675762, -0.011063776910305023, -0.09885223954916], "finish_reason": "stop"}, {"text": " LogisticRegression(random_state=42)", "tokens": [" Log", "istic", "Reg", "ression", "(", "random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-8.976056415122002e-05, -7.629365427419543e-06, -1.1920928244535389e-07, -4.6491513785440475e-06, -1.400962471961975, -0.5018295645713806, -1.0728830375228426e-06, -9.536738616588991e-07, -0.00033146608620882034, -0.07847929745912552, -0.0005968220066279173, -0.04146033152937889, -0.08338257670402527], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-9.536697689327411e-06, -1.2993727978027891e-05, -0.00014661667228210717, -0.0026303476188331842, -3.802703940891661e-05, -0.0036770368460565805, -0.0002324311062693596, -7.629365427419543e-06, -1.311301275563892e-06, -0.0015534012345597148, -0.004514146130532026], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0004320403386373073, -6.6756979322235566e-06, -4.172316494077677e-06, -0.00028868322260677814, -8.606540359323844e-05, -0.00013207517622504383, -0.00018142008048016578, -9.858122211880982e-05, -0.0021106365602463484], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.010800241492688656, -1.0728830375228426e-06, -2.9802276912960224e-06, -3.0517112463712692e-05, -6.937739817658439e-05, -3.933898824470816e-06, -0.0007963585085235536, -9.560128091834486e-05, -0.00021419614495243877, -1.5497195136049413e-06, -1.1920922133867862e-06, -0.0006355411605909467, -0.014216337352991104], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.04855121672153473, -0.05666307732462883], "finish_reason": "stop"}], "metrics": {"energy": 779.2527871952059, "energy_per_token": 5.229884477820174, "time": 23.128023, "time_per_token": 0.15522163087248322}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.38931339979171753, -0.00034648136352188885, -6.19869097135961e-05, -0.061321571469306946, -3.933898824470816e-06, -0.48482745885849, -0.18189911544322968, -0.0003305127320345491, -0.009266345761716366, -0.0024437822867184877], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column {target_column} not found in the DataFrame.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " {", "target", "_", "column", "}", " not", " found", " in", " the", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.045811016112565994, -1.811964830267243e-05, -0.02569960430264473, -0.3504243493080139, -0.02306373603641987, -0.7535260319709778, -0.005670533049851656, -1.583155870437622, -0.00023231192608363926, -5.6980417866725475e-05, -3.85038583772257e-05, -0.003071949351578951, -0.07955944538116455, -0.18116629123687744, -0.013823133893311024, -1.787790298461914, -0.24708400666713715, -0.0006980843027122319, -0.7802897095680237, -0.01394881121814251, -0.00047088501742109656, -0.0010893370490521193], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0009974034037441015, -0.2522379159927368, -0.058929234743118286, -0.043665315955877304, -0.9420657157897949, -1.1324817933200393e-05, -4.887569048150908e-06, -0.0005478549865074456, -0.0005514293443411589, -0.0013917532050982118, -4.4225667807040736e-05, -0.0008978387922979891, -0.06619614362716675], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0012228161795064807, -0.004532065242528915, -0.0001380348257953301, -3.4570634852570947e-06, -1.3828182090946939e-05, -3.635817120084539e-05, -0.29958754777908325], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ")", "\n"], "logprobs": [-0.00016223068814724684, -2.861018856492592e-06, -0.0005349873681552708, -1.7404405298293568e-05, -8.296622399939224e-05, -3.6954811548639555e-06, -1.1920928244535389e-07, -3.635817120084539e-05, -3.516612196108326e-05, -2.7418097943154862e-06, -5.960462772236497e-07, -0.0002454218047205359, -0.000567275274079293, -8.34461570775602e-06, -3.576278118089249e-07, -4.768370445162873e-07, -5.960462772236497e-07, -2.0503786799963564e-05, -0.012917883694171906, -0.0023761154152452946, -0.001135062426328659, -0.01389614399522543, -0.022908208891749382, -9.179073458653875e-06, -2.622600959512056e-06, -0.0011162485461682081, -0.0033877857495099306, -3.421248038648628e-05, -0.2061120569705963, -1.628935694694519, -0.07784614711999893], "finish_reason": "stop"}, {"text": " LogisticRegression(max_iter=1000)", "tokens": [" Log", "istic", "Reg", "ression", "(", "max", "_", "iter", "=", "1", "0", "0", "0", ")", "\n"], "logprobs": [-8.010543388081715e-05, -8.22540732769994e-06, -1.1920928244535389e-07, -5.960446742392378e-06, -1.5278513431549072, -1.5954411029815674, -2.9802276912960224e-06, -7.998623186722398e-05, -0.003536876291036606, -0.15269087255001068, -0.0059294989332556725, -0.004605875816196203, -0.019594088196754456, -0.1540117710828781, -0.35752108693122864], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-8.702239938429557e-06, -1.156323378381785e-05, -0.00015162272029556334, -0.0023381770588457584, -3.6238969187252223e-05, -0.0038278657011687756, -0.0002759314374998212, -1.2040065485052764e-05, -1.4305104514278355e-06, -0.0016708712792024016, -0.00312816072255373], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0005115154199302197, -6.437280717364047e-06, -5.245195097813848e-06, -0.00043644916149787605, -8.511180931236595e-05, -0.0001397035230183974, -0.00016675988445058465, -0.00011848701251437888, -0.0024133387487381697], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.010678531602025032, -1.0728830375228426e-06, -2.7418097943154862e-06, -3.2782016205601394e-05, -5.6980417866725475e-05, -4.529942543740617e-06, -0.0009691785671748221, -8.964136941358447e-05, -0.0001699779968475923, -1.4305104514278355e-06, -4.768370445162873e-07, -0.0006799769471399486, -0.013483996503055096], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.0541614294052124, -0.06909552961587906], "finish_reason": "stop"}], "metrics": {"energy": 1007.8846295814512, "energy_per_token": 6.999198816537856, "time": 34.32686, "time_per_token": 0.23838097222222224}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " target_column not in columns:", "tokens": [" target", "_", "column", " not", " in", " columns", ":", "\n"], "logprobs": [-0.38931339979171753, -0.00034648136352188885, -6.19869097135961e-05, -0.061321571469306946, -3.933898824470816e-06, -0.9606193900108337, -0.022889800369739532, -0.0045493911020457745], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' not found in DataFrame.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.045811016112565994, -1.811964830267243e-05, -0.02569960430264473, -0.3504243493080139, -0.02306373603641987, -0.7535260319709778, -0.005670533049851656, -0.26950761675834656, -0.00020632999076042324, -0.00021419614495243877, -1.9788545614574105e-05, -2.539125671319198e-05, -0.0032564965076744556, -0.14637838304042816, -0.08637150377035141, -0.013697323389351368, -0.4670913815498352, -0.0008168459753505886, -0.6904012560844421, -0.017795659601688385, -0.0005427317810244858, -0.001726447488181293], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column])", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "])", "\n"], "logprobs": [-0.0009974034037441015, -0.2522379159927368, -0.058929234743118286, -0.043665315955877304, -0.4950976073741913, -0.24983762204647064, -0.00048494499060325325, -6.0794889577664435e-05, -6.437280717364047e-06, -0.2657009959220886, -0.030048338696360588], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.001116605824790895, -0.0034341190475970507, -0.00015698630886618048, -2.622600959512056e-06, -1.3112935448589269e-05, -4.23184028477408e-05, -0.26593029499053955], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0001530530134914443, -2.622600959512056e-06, -0.0007245299639180303, -1.3947389561508317e-05, -7.128461584215984e-05, -4.172316494077677e-06, -1.1920928244535389e-07, -4.005352093372494e-05, -3.397406908334233e-05, -2.7418097943154862e-06, -3.576278118089249e-07, -0.00022396916756406426, -0.0005127069307491183, -7.629365427419543e-06, -8.344646857949556e-07, -4.768370445162873e-07, -7.152555099310121e-07, -2.0265373677830212e-05, -0.013765638694167137, -0.002266102470457554, -0.0009211826254613698, -0.014441492967307568, -0.020659612491726875, -8.821448318485636e-06, -2.145764938177308e-06, -0.0012155532604083419, -0.003293092828243971, -4.088794958079234e-05, -0.25621360540390015, -0.264229953289032, -0.006027023307979107, -3.814689989667386e-06, -4.529942543740617e-06, -0.00021896349790040404, -0.08345144987106323, -0.00408825883641839, -0.012595390900969505, -0.08792988210916519], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.00010668662434909493, -4.172316494077677e-06, -1.1920928244535389e-07, -6.198863957251888e-06, -0.2560955882072449, -0.03992307558655739], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-9.536697689327411e-06, -1.1444026313256472e-05, -0.0001411338453181088, -0.0023991868365556, -3.015949550899677e-05, -0.0034261594992130995, -0.00023815179883968085, -1.3708974620385561e-05, -1.4305104514278355e-06, -0.0018705505644902587, -0.004831307101994753], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0005240259342826903, -6.437280717364047e-06, -5.245195097813848e-06, -0.00034564718953333795, -0.0001370812824461609, -0.00010072677832795307, -0.00025555206229910254, -0.00013064485392533243, -0.0036897454410791397], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.011177187785506248, -1.0728830375228426e-06, -2.264974000354414e-06, -3.683499380713329e-05, -5.972207145532593e-05, -4.0531076592742465e-06, -0.0008773530134931207, -9.893881360767409e-05, -0.00019596086349338293, -1.6689286894688848e-06, -9.536738616588991e-07, -0.0007503792876377702, -0.015466508455574512], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.04589288681745529, -0.05874108150601387], "finish_reason": "stop"}], "metrics": {"energy": 836.7157892532346, "energy_per_token": 6.063157893139381, "time": 26.326477, "time_per_token": 0.1907715724637681}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " target_column not in columns:", "tokens": [" target", "_", "column", " not", " in", " columns", ":", "\n"], "logprobs": [-0.38931339979171753, -0.00034648136352188885, -6.19869097135961e-05, -0.061321571469306946, -3.933898824470816e-06, -0.9606193900108337, -0.022889800369739532, -0.0045493911020457745], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column {target_column} not found in DataFrame.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " {", "target", "_", "column", "}", " not", " found", " in", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.045811016112565994, -1.811964830267243e-05, -0.02569960430264473, -0.3504243493080139, -0.02306373603641987, -0.7535260319709778, -0.005670533049851656, -1.583155870437622, -0.00023231192608363926, -5.6980417866725475e-05, -3.85038583772257e-05, -0.003071949351578951, -0.07955944538116455, -0.18116629123687744, -0.013823133893311024, -0.31029313802719116, -0.0010083595989271998, -1.1751967668533325, -0.01478653121739626, -0.00046433156239800155, -0.0016563518438488245], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0009974034037441015, -0.2522379159927368, -0.058929234743118286, -0.043665315955877304, -0.9420657157897949, -1.1324817933200393e-05, -4.887569048150908e-06, -0.0005478549865074456, -0.0005514293443411589, -0.0013917532050982118, -4.4225667807040736e-05, -0.0008978387922979891, -0.06619614362716675], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0012228161795064807, -0.004532065242528915, -0.0001380348257953301, -3.4570634852570947e-06, -1.3828182090946939e-05, -3.635817120084539e-05, -0.29958754777908325], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00016223068814724684, -2.861018856492592e-06, -0.0005349873681552708, -1.7404405298293568e-05, -8.296622399939224e-05, -3.6954811548639555e-06, -1.1920928244535389e-07, -3.635817120084539e-05, -3.516612196108326e-05, -2.7418097943154862e-06, -5.960462772236497e-07, -0.0002454218047205359, -0.000567275274079293, -8.34461570775602e-06, -3.576278118089249e-07, -4.768370445162873e-07, -5.960462772236497e-07, -2.0503786799963564e-05, -0.012917883694171906, -0.0023761154152452946, -0.001135062426328659, -0.01389614399522543, -0.022908208891749382, -9.179073458653875e-06, -2.622600959512056e-06, -0.0011162485461682081, -0.0033877857495099306, -3.421248038648628e-05, -0.2061120569705963, -0.26196369528770447, -0.006258413195610046, -3.6954811548639555e-06, -5.364403477869928e-06, -0.00020621081057470292, -0.06734168529510498, -0.0035959123633801937, -0.01147916167974472, -0.09626179933547974], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.00010656742961145937, -5.8412379075889476e-06, -1.1920928244535389e-07, -4.0531076592742465e-06, -0.24652454257011414, -0.042645055800676346], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-7.510157047363464e-06, -1.2397689715726301e-05, -0.00015269544383045286, -0.0026026444975286722, -2.1815061700181104e-05, -0.003070760751143098, -0.00019608005823101848, -1.2397689715726301e-05, -1.4305104514278355e-06, -0.0014781750505790114, -0.003988051787018776], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0005245024804025888, -7.033323527139146e-06, -5.364403477869928e-06, -0.00032264748006127775, -8.523101132595912e-05, -9.738924563862383e-05, -0.00020001317898277193, -0.00010251473577227443, -0.0025222653057426214], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.01364722941070795, -9.536738616588991e-07, -2.7418097943154862e-06, -3.313963316031732e-05, -6.890059739816934e-05, -4.6491513785440475e-06, -0.0009863278828561306, -7.819823804311454e-05, -0.00025090406415984035, -1.4305104514278355e-06, -7.152555099310121e-07, -0.0006220789509825408, -0.016766346991062164], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.05137769877910614, -0.06901119649410248], "finish_reason": "stop"}], "metrics": {"energy": 759.1999962005611, "energy_per_token": 5.46187047626303, "time": 23.331377, "time_per_token": 0.1678516330935252}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " target_column not in columns:", "tokens": [" target", "_", "column", " not", " in", " columns", ":", "\n"], "logprobs": [-0.38931339979171753, -0.00034648136352188885, -6.19869097135961e-05, -0.061321571469306946, -3.933898824470816e-06, -0.9606193900108337, -0.022889800369739532, -0.0045493911020457745], "finish_reason": "stop"}, {"text": " ValueError(f\"Column '{target_column}' not found in the DataFrame\")", "tokens": [" Value", "Error", "(", "f", "\"", "Column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " the", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.045811016112565994, -1.811964830267243e-05, -0.02569960430264473, -0.3504243493080139, -0.02306373603641987, -1.5490715503692627, -0.5236661434173584, -0.0005214046686887741, -0.00030560590676032007, -2.2291887944447808e-05, -2.8371408916427754e-05, -0.0022683623246848583, -0.17429028451442719, -0.09011459350585938, -0.024068202823400497, -0.6808760762214661, -0.16769666969776154, -0.000645429186988622, -1.1065571308135986, -0.00013290952483657748, -0.0020706658251583576], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0009974034037441015, -0.2522379159927368, -0.058929234743118286, -0.043665315955877304, -0.9420657157897949, -1.1324817933200393e-05, -4.887569048150908e-06, -0.0005478549865074456, -0.0005514293443411589, -0.0013917532050982118, -4.4225667807040736e-05, -0.0008978387922979891, -0.06619614362716675], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0012228161795064807, -0.004532065242528915, -0.0001380348257953301, -3.4570634852570947e-06, -1.3828182090946939e-05, -3.635817120084539e-05, -0.29958754777908325], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00016223068814724684, -2.861018856492592e-06, -0.0005349873681552708, -1.7404405298293568e-05, -8.296622399939224e-05, -3.6954811548639555e-06, -1.1920928244535389e-07, -3.635817120084539e-05, -3.516612196108326e-05, -2.7418097943154862e-06, -5.960462772236497e-07, -0.0002454218047205359, -0.000567275274079293, -8.34461570775602e-06, -3.576278118089249e-07, -4.768370445162873e-07, -5.960462772236497e-07, -2.0503786799963564e-05, -0.012917883694171906, -0.0023761154152452946, -0.001135062426328659, -0.01389614399522543, -0.022908208891749382, -9.179073458653875e-06, -2.622600959512056e-06, -0.0011162485461682081, -0.0033877857495099306, -3.421248038648628e-05, -0.2061120569705963, -0.26196369528770447, -0.006258413195610046, -3.6954811548639555e-06, -5.364403477869928e-06, -0.00020621081057470292, -0.06734168529510498, -0.0035959123633801937, -0.01147916167974472, -0.09626179933547974], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.00010656742961145937, -5.8412379075889476e-06, -1.1920928244535389e-07, -4.0531076592742465e-06, -0.24652454257011414, -0.042645055800676346], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-7.510157047363464e-06, -1.2397689715726301e-05, -0.00015269544383045286, -0.0026026444975286722, -2.1815061700181104e-05, -0.003070760751143098, -0.00019608005823101848, -1.2397689715726301e-05, -1.4305104514278355e-06, -0.0014781750505790114, -0.003988051787018776], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0005245024804025888, -7.033323527139146e-06, -5.364403477869928e-06, -0.00032264748006127775, -8.523101132595912e-05, -9.738924563862383e-05, -0.00020001317898277193, -0.00010251473577227443, -0.0025222653057426214], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.01364722941070795, -9.536738616588991e-07, -2.7418097943154862e-06, -3.313963316031732e-05, -6.890059739816934e-05, -4.6491513785440475e-06, -0.0009863278828561306, -7.819823804311454e-05, -0.00025090406415984035, -1.4305104514278355e-06, -7.152555099310121e-07, -0.0006220789509825408, -0.016766346991062164], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.05137769877910614, -0.06901119649410248], "finish_reason": "stop"}], "metrics": {"energy": 778.5554483680723, "energy_per_token": 5.601118333583254, "time": 23.710941, "time_per_token": 0.17058230935251797}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " target_column not in columns:", "tokens": [" target", "_", "column", " not", " in", " columns", ":", "\n"], "logprobs": [-0.38931339979171753, -0.00034648136352188885, -6.19869097135961e-05, -0.061321571469306946, -3.933898824470816e-06, -0.9606193900108337, -0.022889800369739532, -0.0045493911020457745], "finish_reason": "stop"}, {"text": " ValueError(f\"Column '{target_column}' not found in the DataFrame.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " the", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.045811016112565994, -1.811964830267243e-05, -0.02569960430264473, -0.3504243493080139, -0.02306373603641987, -1.5490715503692627, -0.5236661434173584, -0.0005214046686887741, -0.00030560590676032007, -2.2291887944447808e-05, -2.8371408916427754e-05, -0.0022683623246848583, -0.17429028451442719, -0.09011459350585938, -0.024068202823400497, -0.6808760762214661, -0.16769666969776154, -0.000645429186988622, -0.412251740694046, -0.010530737228691578, -0.0005172345554456115, -0.0013191340258345008], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column])", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "])", "\n"], "logprobs": [-0.0009974034037441015, -0.2522379159927368, -0.058929234743118286, -0.043665315955877304, -0.4950976073741913, -0.24983762204647064, -0.00048494499060325325, -6.0794889577664435e-05, -6.437280717364047e-06, -0.2657009959220886, -0.030048338696360588], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.001116605824790895, -0.0034341190475970507, -0.00015698630886618048, -2.622600959512056e-06, -1.3112935448589269e-05, -4.23184028477408e-05, -0.26593029499053955], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ")", "\n"], "logprobs": [-0.0001530530134914443, -2.622600959512056e-06, -0.0007245299639180303, -1.3947389561508317e-05, -7.128461584215984e-05, -4.172316494077677e-06, -1.1920928244535389e-07, -4.005352093372494e-05, -3.397406908334233e-05, -2.7418097943154862e-06, -3.576278118089249e-07, -0.00022396916756406426, -0.0005127069307491183, -7.629365427419543e-06, -8.344646857949556e-07, -4.768370445162873e-07, -7.152555099310121e-07, -2.0265373677830212e-05, -0.013765638694167137, -0.002266102470457554, -0.0009211826254613698, -0.014441492967307568, -0.020659612491726875, -8.821448318485636e-06, -2.145764938177308e-06, -0.0012155532604083419, -0.003293092828243971, -4.088794958079234e-05, -0.25621360540390015, -1.6192409992218018, -0.07396942377090454], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-9.321732068201527e-05, -5.245195097813848e-06, -1.1920928244535389e-07, -5.483612312673358e-06, -0.2517452836036682, -0.041432883590459824], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-9.775113539944869e-06, -1.2397689715726301e-05, -0.00012814177898690104, -0.002774677239358425, -3.862306402879767e-05, -0.0029427579138427973, -0.00019059749320149422, -1.1444026313256472e-05, -1.4305104514278355e-06, -0.0014544870937243104, -0.0044948020949959755], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0004447901446837932, -5.960446742392378e-06, -5.8412379075889476e-06, -0.0003131137927994132, -0.00010132275929208845, -0.000169382052263245, -0.00024125049822032452, -0.0001445904199499637, -0.0030302342493087053], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.008318774402141571, -1.311301275563892e-06, -3.099436753473128e-06, -3.969590397900902e-05, -6.878139538457617e-05, -4.6491513785440475e-06, -0.001022888463921845, -9.107174992095679e-05, -0.00022289653134066612, -1.7881377516459906e-06, -8.344646857949556e-07, -0.0007001094636507332, -0.011298365890979767], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.042354974895715714, -0.0565619170665741], "finish_reason": "stop"}], "metrics": {"energy": 794.5139881467823, "energy_per_token": 6.064992275929636, "time": 24.324453, "time_per_token": 0.18568284732824425}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " target_column not in columns:", "tokens": [" target", "_", "column", " not", " in", " columns", ":", "\n"], "logprobs": [-0.38931339979171753, -0.00034648136352188885, -6.19869097135961e-05, -0.061321571469306946, -3.933898824470816e-06, -0.9606193900108337, -0.022889800369739532, -0.0045493911020457745], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column {target_column} not found in the DataFrame\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " {", "target", "_", "column", "}", " not", " found", " in", " the", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.045811016112565994, -1.811964830267243e-05, -0.02569960430264473, -0.3504243493080139, -0.02306373603641987, -0.7535260319709778, -0.005670533049851656, -1.583155870437622, -0.00023231192608363926, -5.6980417866725475e-05, -3.85038583772257e-05, -0.003071949351578951, -0.07955944538116455, -0.18116629123687744, -0.013823133893311024, -1.787790298461914, -0.24708400666713715, -0.0006980843027122319, -0.7210093140602112, -0.0001389883691444993, -0.001190906623378396], "finish_reason": "stop"}, {"text": " df[df.columns.difference([target_column])]", "tokens": [" df", "[", "df", ".", "columns", ".", "difference", "([", "target", "_", "column", "]", ")]", "\n"], "logprobs": [-0.0009974034037441015, -1.6146379709243774, -0.19812022149562836, -0.0010457528987899423, -6.460934673668817e-05, -0.12706223130226135, -0.04511718451976776, -0.0060310522094368935, -0.00018821375851985067, -4.291525328881107e-06, -5.960462772236497e-07, -0.0013183006085455418, -0.00015031162183731794, -0.1295599639415741], "finish_reason": "stop"}, {"text": " df[target_column]  # Operate directly on the DataFrame", "tokens": [" df", "[", "target", "_", "column", "]", "  ", "#", " Oper", "ate", " directly", " on", " the", " Data", "Frame", "\n"], "logprobs": [-0.001105769770219922, -0.004697952885180712, -0.0001934579631779343, -2.861018856492592e-06, -1.4662635294371285e-05, -3.40932747349143e-05, -1.4150447845458984, -0.00016020445036701858, -1.2958588600158691, -0.001379848807118833, -0.0022156708873808384, -0.0002811751910485327, -9.393251093570143e-05, -0.0073585896752774715, -5.900685573578812e-05, -0.009434874169528484], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00019596086349338293, -2.7418097943154862e-06, -0.0005142558366060257, -1.6212332411669195e-05, -6.186770770000294e-05, -3.3378546504536644e-06, -1.1920928244535389e-07, -2.706014311115723e-05, -3.397406908334233e-05, -2.7418097943154862e-06, -4.768370445162873e-07, -0.0002687808300834149, -0.0005925330333411694, -8.22540732769994e-06, -4.768370445162873e-07, -4.768370445162873e-07, -7.152555099310121e-07, -2.2411095415009186e-05, -0.012506981380283833, -0.002325689420104027, -0.0010119322687387466, -0.01330532692372799, -0.0231237281113863, -8.106198947643861e-06, -1.9073468138230965e-06, -0.0010827876394614577, -0.0035227404441684484, -3.969590397900902e-05, -0.234278604388237, -0.2738093435764313, -0.007134555839002132, -4.291525328881107e-06, -5.8412379075889476e-06, -0.00021741411183029413, -0.07646403461694717, -0.0033343215472996235, -0.011695627123117447, -0.09019814431667328], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-9.119095193454996e-05, -6.6756979322235566e-06, -1.1920928244535389e-07, -3.933898824470816e-06, -0.279188334941864, -0.040357790887355804], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-8.702239938429557e-06, -1.156323378381785e-05, -0.00013350549852475524, -0.0026246407069265842, -3.135155202471651e-05, -0.0025617422070354223, -0.0002361257211305201, -1.156323378381785e-05, -1.4305104514278355e-06, -0.0014152044896036386, -0.0035756006836891174], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0004164305282756686, -6.198863957251888e-06, -4.410734163684538e-06, -0.00027307120035402477, -8.237022848334163e-05, -0.0001287377526750788, -0.0002162222663173452, -0.00011884459672728553, -0.0022812075912952423], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.010143280029296875, -7.152555099310121e-07, -2.145764938177308e-06, -3.325883881188929e-05, -7.998623186722398e-05, -4.291525328881107e-06, -0.0012137673329561949, -9.190614218823612e-05, -0.00019965562387369573, -1.7881377516459906e-06, -9.536738616588991e-07, -0.0006767605082131922, -0.012046677991747856], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.05644858255982399, -0.0768737643957138], "finish_reason": "stop"}], "metrics": {"energy": 839.3095134963992, "energy_per_token": 5.63294975500939, "time": 25.929121, "time_per_token": 0.17402094630872483}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.38931339979171753, -0.00034648136352188885, -6.19869097135961e-05, -0.061321571469306946, -3.933898824470816e-06, -0.48482745885849, -0.18189911544322968, -0.0003305127320345491, -0.009266345761716366, -0.0024437822867184877], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' not found in DataFrame\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.045811016112565994, -1.811964830267243e-05, -0.02569960430264473, -0.3504243493080139, -0.02306373603641987, -0.7535260319709778, -0.005670533049851656, -0.26950761675834656, -0.00020632999076042324, -0.00021419614495243877, -1.9788545614574105e-05, -2.539125671319198e-05, -0.0032564965076744556, -0.14637838304042816, -0.08637150377035141, -0.013697323389351368, -0.4670913815498352, -0.0008168459753505886, -1.058046579360962, -0.00016711745411157608, -0.002524524461477995], "finish_reason": "stop"}, {"text": " df.loc[:, df.columns != target_column]", "tokens": [" df", ".", "loc", "[:", ",", " df", ".", "columns", " ", "!", "=", " target", "_", "column", "]", "\n"], "logprobs": [-0.0009974034037441015, -0.2522379159927368, -2.9161489009857178, -0.008877807296812534, -0.000697965151630342, -0.0282693263143301, -0.0004190520558040589, -2.0861407392658293e-05, -0.023600850254297256, -5.960462772236497e-07, -4.172316494077677e-06, -0.0013184197014197707, -8.4638240878121e-06, -2.9802276912960224e-06, -0.00013505500101018697, -0.1486051380634308], "finish_reason": "stop"}, {"text": " df[target_column]  # Operate directly on the DataFrame", "tokens": [" df", "[", "target", "_", "column", "]", "  ", "#", " Oper", "ate", " directly", " on", " the", " Data", "Frame", "\n"], "logprobs": [-0.0012681784573942423, -0.0041587776504457, -0.00015841660206206143, -3.4570634852570947e-06, -1.0847986231965479e-05, -4.792098479811102e-05, -1.5163170099258423, -0.00013028726971242577, -1.1190305948257446, -0.001121726119890809, -0.0024033491499722004, -0.0003897384158335626, -9.7508447652217e-05, -0.0065186480060219765, -6.01988795096986e-05, -0.010785499587655067], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.00016437610611319542, -2.145764938177308e-06, -0.0009022455778904259, -1.7165990357170813e-05, -7.152301259338856e-05, -3.6954811548639555e-06, -1.1920928244535389e-07, -3.4689302992774174e-05, -3.0636318115284666e-05, -2.9802276912960224e-06, -5.960462772236497e-07, -0.00028236693469807506, -0.00045170116936787963, -7.390948667307384e-06, -3.576278118089249e-07, -5.960462772236497e-07, -7.152555099310121e-07, -1.764281842042692e-05, -0.01321980357170105, -0.0023340145125985146, -0.0007053509471006691, -0.01191216241568327, -0.02001061849296093, -9.536697689327411e-06, -1.5497195136049413e-06, -0.0012847273610532284, -0.002550802892073989, -3.9934315282152966e-05, -0.22941456735134125, -0.2658473253250122, -0.008074971847236156, -3.6954811548639555e-06, -6.6756979322235566e-06, -0.00021526881027966738, -0.0740433782339096, -0.004225018434226513, -0.010409820824861526, -0.08270786702632904], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.00010311071673640981, -6.079655122448457e-06, -1.1920928244535389e-07, -6.318072337307967e-06, -0.2681823670864105, -0.04457851126790047], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-7.152531907195225e-06, -9.417489309271332e-06, -0.0001656871900195256, -0.002629277529194951, -4.327203714638017e-05, -0.0032373659778386354, -0.00023755589791107923, -1.5735502529423684e-05, -1.5497195136049413e-06, -0.0018454440869390965, -0.0035967440344393253], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0004413345886860043, -6.198863957251888e-06, -5.125986263010418e-06, -0.0002951186615973711, -9.941560711013153e-05, -0.00012385078298393637, -0.00022468426323030144, -0.00012158608296886086, -0.002652699826285243], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.010325937531888485, -1.1920922133867862e-06, -2.50339189733495e-06, -3.290122185717337e-05, -6.4490144723095e-05, -5.006777428206988e-06, -0.0013379440642893314, -0.00010585224663373083, -0.00019464982324279845, -1.7881377516459906e-06, -1.5497195136049413e-06, -0.0008585343020968139, -0.01529476698487997], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.05781552940607071, -0.062159642577171326], "finish_reason": "stop"}], "metrics": {"energy": 841.4486880512236, "energy_per_token": 5.4996646277857755, "time": 26.177496, "time_per_token": 0.17109474509803924}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.011259468272328377, -6.758938252460212e-05, -0.0016839622985571623, -0.007752095349133015, -0.018949665129184723, -0.10078930109739304, -0.004077930003404617, -0.006700902711600065, -0.0006767605082131922, -0.0011659021256491542, -0.0937807708978653], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.38931339979171753, -0.00034648136352188885, -6.19869097135961e-05, -0.061321571469306946, -3.933898824470816e-06, -0.48482745885849, -0.18189911544322968, -0.0003305127320345491, -0.009266345761716366, -0.0024437822867184877], "finish_reason": "stop"}, {"text": " ValueError(\"target_column is not in the DataFrame\")", "tokens": [" Value", "Error", "(", "\"", "target", "_", "column", " is", " not", " in", " the", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.045811016112565994, -1.811964830267243e-05, -0.02569960430264473, -1.266981601715088, -2.4632973670959473, -0.09841230511665344, -0.0021076626144349575, -1.1006991863250732, -0.005298381671309471, -0.2272924780845642, -0.251642107963562, -0.5528421998023987, -0.003263150341808796, -0.3296504020690918, -0.00020489977032411844, -0.0040994188748300076], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column], axis=1)", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "]", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0009974034037441015, -0.2522379159927368, -0.058929234743118286, -0.043665315955877304, -0.4950976073741913, -0.24983762204647064, -0.00048494499060325325, -6.0794889577664435e-05, -6.437280717364047e-06, -1.4996907711029053, -0.00382869690656662, -0.0010156240314245224, -0.00054058717796579, -6.103329360485077e-05, -0.00028618055512197316, -0.07624778151512146], "finish_reason": "stop"}, {"text": " df[target_column]  # Access target column values using [] instead of .", "tokens": [" df", "[", "target", "_", "column", "]", "  ", "#", " Access", " target", " column", " values", " using", " []", " instead", " of", " ", ".", "\n"], "logprobs": [-0.001116605824790895, -0.0034341190475970507, -0.00015698630886618048, -2.622600959512056e-06, -1.3112935448589269e-05, -4.23184028477408e-05, -1.6312180757522583, -0.0001387499796692282, -2.1407008171081543, -2.4358911514282227, -0.08437056839466095, -2.0677201747894287, -2.6334002017974854, -2.0833215713500977, -1.5896638631820679, -0.008134094998240471, -0.6435277462005615, -0.00012015574611723423, -0.8877138495445251], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "0", ")", "\n"], "logprobs": [-0.0001530530134914443, -2.622600959512056e-06, -0.0007245299639180303, -1.3947389561508317e-05, -7.128461584215984e-05, -4.172316494077677e-06, -1.1920928244535389e-07, -4.005352093372494e-05, -3.397406908334233e-05, -2.7418097943154862e-06, -3.576278118089249e-07, -0.00022396916756406426, -0.0005127069307491183, -7.629365427419543e-06, -8.344646857949556e-07, -4.768370445162873e-07, -7.152555099310121e-07, -2.0265373677830212e-05, -0.013765638694167137, -0.002266102470457554, -0.0009211826254613698, -0.014441492967307568, -0.020659612491726875, -8.821448318485636e-06, -2.145764938177308e-06, -0.0012155532604083419, -0.003293092828243971, -4.088794958079234e-05, -1.5797572135925293, -0.3385743200778961, -0.00965012889355421, -3.6954811548639555e-06, -8.34461570775602e-06, -0.00038258862332440913, -2.720222234725952, -0.019118206575512886, -0.0557628832757473], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-9.905801562126726e-05, -6.6756979322235566e-06, -1.1920928244535389e-07, -6.437280717364047e-06, -0.29087793827056885, -0.04456562548875809], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-9.775113539944869e-06, -9.775113539944869e-06, -0.00017355366435367614, -0.0027573206461966038, -3.1709168979432434e-05, -0.0029651031363755465, -0.0002592465898487717, -1.1324817933200393e-05, -1.4305104514278355e-06, -0.0015026956098154187, -0.004138952121138573], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0004861365014221519, -5.722029527532868e-06, -4.291525328881107e-06, -0.0003716255014296621, -0.00012575789878610522, -0.0001399419124936685, -0.00029738296871073544, -0.0001510267611593008, -0.0027447191532701254], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.011332782916724682, -9.536738616588991e-07, -2.7418097943154862e-06, -3.302042750874534e-05, -5.8410845667822286e-05, -5.006777428206988e-06, -0.0012045992771163583, -8.785339014139026e-05, -0.00020930961181875318, -1.7881377516459906e-06, -7.152555099310121e-07, -0.0007652691565454006, -0.013898377306759357], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.05822240561246872, -0.0572722852230072], "finish_reason": "stop"}], "metrics": {"energy": 837.3996654739381, "energy_per_token": 5.58266443649292, "time": 25.916792, "time_per_token": 0.17277861333333333}}
