{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " not 'target' in df.columns:", "tokens": [" not", " '", "target", "'", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-2.58732533454895, -2.983552932739258, -0.06139792129397392, -0.01996598206460476, -0.00256423931568861, -0.4425855875015259, -0.1820112019777298, -0.016957761719822884, -0.013501285575330257, -0.04185711219906807], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column {target_column} not found.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " {", "target", "_", "column", "}", " not", " found", ".", "\"", ")", "\n"], "logprobs": [-0.4073788821697235, -4.8397800128441304e-05, -0.12861385941505432, -0.654987096786499, -0.1317870318889618, -0.9640047550201416, -0.014012525789439678, -0.7078660726547241, -0.0009149893885478377, -0.00026127262390218675, -0.00020489977032411844, -0.033241916447877884, -0.1097402349114418, -0.48679548501968384, -2.449018716812134, -0.12216445803642273, -0.00016378014697693288, -0.005609959363937378], "finish_reason": "stop"}, {"text": " df.iloc[:, :3]", "tokens": [" df", ".", "il", "oc", "[:", ",", " :", "3", "]", "\n"], "logprobs": [-0.0059936074540019035, -0.3269306421279907, -1.2165820598602295, -0.0001137191939051263, -0.0008469808381050825, -0.0008945039589889348, -2.2678005695343018, -1.763153076171875, -0.000485183292767033, -0.3030352294445038], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.011390064842998981, -0.05196002870798111, -0.0008749709231778979, -1.0728830375228426e-06, -1.7881377516459906e-06, -0.00013028726971242577, -0.18576458096504211], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.0018845908343791962, -6.723177648382261e-05, -0.021220777183771133, -0.00018618757894728333, -0.0018173621501773596, -9.440929716220126e-05, -0.0003948624071199447, -6.01988795096986e-05, -0.0008997444529086351, -5.543078441405669e-05, -0.00024768622824922204, -0.0009563163621351123, -0.016854146495461464, -2.0265558760002023e-06, -1.4781842764932662e-05, -4.172316494077677e-06, -7.748573807475623e-06, -0.00012373158824630082, -1.8661165237426758], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.0008893824997358024, -7.390948667307384e-06, -8.737658936297521e-05, -6.079655122448457e-06, -0.2182735949754715, -0.04925129562616348], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-9.738924563862383e-05, -0.0002975021197926253, -0.0006005152827128768, -0.009672560729086399, -0.0002422039397060871, -0.0026112052146345377, -0.0030440206173807383, -0.0004291805380489677, -5.960446742392378e-06, -0.00045753977610729635, -0.022369440644979477], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.002609302755445242, -7.152531907195225e-06, -0.0009756095823831856, -0.0006932000978849828, -0.0010930284624919295, -0.0008127961773425341, -0.0018516314448788762, -0.0003066784702241421, -0.012365697883069515], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.007770785130560398, -1.0967194612021558e-05, -4.0531076592742465e-06, -0.0025272592902183533, -0.0017093108035624027, -0.0001858300092862919, -0.01452644169330597, -0.003039861097931862, -0.0019998804200440645, -9.917721035890281e-05, -8.22540732769994e-06, -0.002054486656561494, -0.02532297931611538], "finish_reason": "stop"}, {"text": " accuracy<|endoftext|>import numpy as np", "tokens": [" accuracy", "<", "|", "end", "of", "text", "|>", "import", " numpy", " as", " np", "\n"], "logprobs": [-0.03641785681247711, -1.485670804977417, -1.311301275563892e-06, -1.1920922133867862e-06, -0.00010096516780322418, -0.0001774868869688362, -0.0845520943403244, -1.1163556575775146, -1.3068599700927734, -0.015250624157488346, -0.0010502781951799989, -0.00605012895539403], "finish_reason": "stop"}], "metrics": {"energy": 206.15146286964418, "energy_per_token": 1.6361227211876521, "time": 8.399746, "time_per_token": 0.06666465079365079}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " target_column not in columns:", "tokens": [" target", "_", "column", " not", " in", " columns", ":", "\n"], "logprobs": [-0.7875893712043762, -0.0005797850899398327, -0.00015960850578267127, -0.5571626424789429, -5.1020273531321436e-05, -1.0379314422607422, -0.010058548301458359, -0.02730085700750351], "finish_reason": "stop"}, {"text": " ValueError('Target column not found. Please check the list of columns.')", "tokens": [" Value", "Error", "('", "Target", " column", " not", " found", ".", " Please", " check", " the", " list", " of", " columns", ".", "')", "\n"], "logprobs": [-0.3869268000125885, -4.410646579344757e-05, -2.2258617877960205, -0.6124960780143738, -0.013755527324974537, -0.17036724090576172, -0.2850746512413025, -2.1601133346557617, -2.747344493865967, -1.1531256437301636, -0.5230576992034912, -3.0853185653686523, -0.03391960263252258, -0.13317787647247314, -0.2881515622138977, -0.0030822886619716883, -0.0036396230570971966], "finish_reason": "stop"}, {"text": " df.iloc[:, df.columns != target_column]  # Exclude the target column", "tokens": [" df", ".", "il", "oc", "[:", ",", " df", ".", "columns", " ", "!", "=", " target", "_", "column", "]", "  ", "#", " Ex", "clude", " the", " target", " column", "\n"], "logprobs": [-0.005431063007563353, -0.30203720927238464, -1.4656314849853516, -0.00012540031457319856, -0.0008780676289461553, -0.0008992680232040584, -2.3079464435577393, -0.011311684735119343, -0.0035377079620957375, -0.06363716721534729, -3.576278118089249e-07, -7.152301259338856e-05, -0.029677629470825195, -8.344646857949556e-07, -7.629365427419543e-06, -0.0034783119335770607, -2.3282017707824707, -0.0005093707586638629, -3.551193952560425, -0.2339322417974472, -0.9266265034675598, -0.025191863998770714, -0.03754403814673424, -0.5780982375144958], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.008044462651014328, -0.04861299321055412, -0.0007205988513305783, -1.5497195136049413e-06, -1.9073468138230965e-06, -0.0001245659514097497, -0.17349755764007568], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0016790828667581081, -6.48477507638745e-05, -0.017162732779979706, -0.000179036331246607, -0.001968828495591879, -0.00010215714428341016, -0.00035553809721022844, -4.768258077092469e-05, -0.0008660380262881517, -5.590759246842936e-05, -0.0002766464895103127, -0.0008666335488669574, -0.016635747626423836, -2.145764938177308e-06, -1.5139465176616795e-05, -4.768360213347478e-06, -6.794906312279636e-06, -0.0001102625101339072, -0.24095557630062103, -0.0006393534131348133, -0.003929513972252607, -0.006984698586165905, -0.16294942796230316, -3.4570634852570947e-06, -6.305972783593461e-05, -0.0007668177131563425, -0.023051505908370018, -0.00010287232726113871, -1.4207621812820435, -0.40391722321510315, -0.03360208496451378, -1.4305104514278355e-06, -7.033323527139146e-06, -0.00031585473334416747, -0.13445310294628143, -0.00914740189909935, -0.084370456635952, -0.1563652753829956], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.0009492897079326212, -8.106198947643861e-06, -7.915183232398704e-05, -5.483612312673358e-06, -0.2110610455274582, -0.05251600965857506], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00011729506513802335, -0.00029059001826681197, -0.0008487674640491605, -0.010630173608660698, -0.00039283663500100374, -0.00268503837287426, -0.0029689064249396324, -0.0005175919504836202, -7.152531907195225e-06, -0.0003666205739136785, -0.019759949296712875], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.002282872796058655, -6.794906312279636e-06, -0.0010270564816892147, -0.0006052807439118624, -0.000987995183095336, -0.000695463502779603, -0.0016470688860863447, -0.0002975021197926253, -0.011314514093101025], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.008064565248787403, -9.536697689327411e-06, -4.0531076592742465e-06, -0.0024006138555705547, -0.0016771787777543068, -0.00021598390594590455, -0.010970043949782848, -0.002869062591344118, -0.0017456068890169263, -0.00010382589971413836, -8.106198947643861e-06, -0.002568162977695465, -0.02721710316836834], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.04359341785311699, -0.3784126341342926], "finish_reason": "stop"}], "metrics": {"energy": 163.6993646488189, "energy_per_token": 1.1212285249919103, "time": 7.784043, "time_per_token": 0.05331536301369863}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)  # Converting to Pandas dataframe", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "  ", "#", " Con", "verting", " to", " Pand", "as", " data", "frame", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -3.0274102687835693, -0.002548900432884693, -2.9506120681762695, -0.10033921897411346, -3.39052152633667, -1.7788007259368896, -5.471556869451888e-05, -1.005467414855957, -0.12403134256601334, -0.1763228178024292], "finish_reason": "stop"}, {"text": " len(df.shape) == 1:", "tokens": [" len", "(", "df", ".", "shape", ")", " ==", " ", "1", ":", "\n"], "logprobs": [-1.648066759109497, -0.0006901028100401163, -0.23900966346263885, -1.1946780681610107, -2.389763116836548, -0.02903481014072895, -0.8216530680656433, -0.002501931507140398, -0.18855831027030945, -0.05231035500764847, -0.2671997547149658], "finish_reason": "stop"}, {"text": " ValueError(f\"'{target_column}' is not a column name in the data.\")", "tokens": [" Value", "Error", "(", "f", "\"", "'{", "target", "_", "column", "}'", " is", " not", " a", " column", " name", " in", " the", " data", ".", "\"", ")", "\n"], "logprobs": [-0.4073788821697235, -4.8397800128441304e-05, -0.12861385941505432, -0.654987096786499, -0.1317870318889618, -3.5337278842926025, -0.0018222408834844828, -0.000205018965061754, -0.00027533553657121956, -0.0034063193015754223, -0.22181487083435059, -0.0145603958517313, -0.29719600081443787, -1.112452507019043, -1.5255252122879028, -0.6933736801147461, -0.29776227474212646, -1.013549566268921, -0.8988592028617859, -0.049659062176942825, -0.00026973424246534705, -0.005515239667147398], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0059936074540019035, -0.3269306421279907, -0.5590597987174988, -0.07478568702936172, -0.4857741594314575, -0.00015758226800244302, -3.45700973412022e-05, -0.00036483307485468686, -0.0024278471246361732, -0.006457297131419182, -0.0010620674584060907, -0.007429470308125019, -0.1049625501036644], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.008399752900004387, -0.04596598446369171, -0.0009747759322635829, -1.1920922133867862e-06, -1.5497195136049413e-06, -0.00013052565918769687, -0.18385037779808044], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.001705264556221664, -6.294052582234144e-05, -0.0180230550467968, -0.00014888131408952177, -0.0020824430976063013, -8.749579137656838e-05, -0.00042822727118618786, -5.0424259825376794e-05, -0.0011717366287484765, -5.1020273531321436e-05, -0.00021419614495243877, -0.0009664393728598952, -0.013879919424653053, -2.3841830625315197e-06, -1.6927575416048057e-05, -3.6954811548639555e-06, -8.106198947643861e-06, -0.0001161031104857102, -1.490601658821106], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.0008743754005990922, -8.22540732769994e-06, -8.654219709569588e-05, -5.602820692729438e-06, -0.23337742686271667, -0.05348297581076622], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.0001072826053132303, -0.000256982195423916, -0.0008360228384844959, -0.012076476588845253, -0.00031871485407464206, -0.0025981261860579252, -0.003239148296415806, -0.00047946401173248887, -5.722029527532868e-06, -0.0004786299541592598, -0.023433063179254532], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0031628606375306845, -7.748573807475623e-06, -0.001010384177789092, -0.0005874100024811924, -0.0009635811438784003, -0.000668659748043865, -0.0024540091399103403, -0.00030870441696606576, -0.012416327372193336], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.0070527647621929646, -1.1444026313256472e-05, -4.291525328881107e-06, -0.00227276305668056, -0.0020035686902701855, -0.00019369633810129017, -0.010453588329255581, -0.002600028645247221, -0.0015829188050702214, -9.142934868577868e-05, -8.106198947643861e-06, -0.0025937268510460854, -0.024044228717684746], "finish_reason": "stop"}, {"text": " accuracy<|endoftext|>import numpy as np", "tokens": [" accuracy", "<", "|", "end", "of", "text", "|>", "import", " numpy", " as", " np", "\n"], "logprobs": [-0.036389004439115524, -1.5901243686676025, -1.1920922133867862e-06, -1.0728830375228426e-06, -4.7205765440594405e-05, -0.0001760566228767857, -0.09314627200365067, -1.135746955871582, -1.2557328939437866, -0.014428332448005676, -0.0012030514189973474, -0.006638141814619303], "finish_reason": "stop"}], "metrics": {"energy": 175.68159503364564, "energy_per_token": 1.2285426226129066, "time": 7.5800734, "time_per_token": 0.05300750629370629}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " len(df) < 2:  # Check if data is at least 2 samples long", "tokens": [" len", "(", "df", ")", " <", " ", "2", ":", "  ", "#", " Check", " if", " data", " is", " at", " least", " ", "2", " samples", " long", "\n"], "logprobs": [-1.648066759109497, -0.0006901028100401163, -0.23900966346263885, -0.9048182964324951, -0.4620327055454254, -0.04048509895801544, -1.4284920692443848, -0.3978671729564667, -2.213839530944824, -0.0008420973899774253, -2.640687942504883, -0.9936412572860718, -2.261641025543213, -1.7082691192626953, -3.108126401901245, -0.022111549973487854, -0.22550758719444275, -0.042172133922576904, -3.235508441925049, -2.225165843963623, -0.18624372780323029], "finish_reason": "stop"}, {"text": " Exception(f\"Column {target_column} is not in the DataFrame.\")", "tokens": [" Exception", "(", "f", "\"", "Column", " {", "target", "_", "column", "}", " is", " not", " in", " the", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-1.463489294052124, -0.27684009075164795, -1.0179526805877686, -0.23260875046253204, -1.863832950592041, -0.5337101221084595, -0.002782047726213932, -0.0002562671434134245, -0.0003669780562631786, -0.03958064690232277, -2.2859206199645996, -0.0826883316040039, -0.4549059271812439, -0.4088974595069885, -1.3442825078964233, -0.015404881909489632, -0.7900463938713074, -0.0686948373913765, -0.0003833036171272397, -0.009793330915272236], "finish_reason": "stop"}, {"text": " df.iloc[:, :-1]", "tokens": [" df", ".", "il", "oc", "[:", ",", " :-", "1", "]", "\n"], "logprobs": [-0.005329211708158255, -0.24382904171943665, -1.4916365146636963, -0.00012909532233607024, -0.0007636015070602298, -0.0011339908232912421, -0.6942096948623657, -0.0005154472892172635, -0.0009889479260891676, -0.2998233139514923], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.00826746504753828, -0.04804586246609688, -0.0009970461251214147, -1.311301275563892e-06, -1.9073468138230965e-06, -0.0001394651480950415, -0.1843278557062149], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.0016346914926543832, -6.8662193370983e-05, -0.0204286128282547, -0.00020549570035655051, -0.0019506252137944102, -8.272782724816352e-05, -0.0002935693773906678, -4.768258077092469e-05, -0.0011950739426538348, -6.854299135738984e-05, -0.00025102324434556067, -0.0008391196606680751, -0.014250889420509338, -2.0265558760002023e-06, -1.5139465176616795e-05, -3.576272320060525e-06, -7.748573807475623e-06, -0.00011789103882620111, -1.7134673595428467], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.0009394046501256526, -7.390948667307384e-06, -9.107174992095679e-05, -6.6756979322235566e-06, -0.1799727976322174, -0.050969161093235016], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00011789103882620111, -0.00031728477915748954, -0.0007018963224254549, -0.009498758241534233, -0.0002489972102921456, -0.0024032301735132933, -0.0033131728414446115, -0.0004234609368722886, -5.722029527532868e-06, -0.0005210472736507654, -0.025662772357463837], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.002363390289247036, -7.152531907195225e-06, -0.0009274948388338089, -0.0005316513124853373, -0.0011131525970995426, -0.0006858142442069948, -0.0016943159280344844, -0.0003271759778726846, -0.014042853377759457], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.008320429362356663, -1.1801649634435307e-05, -4.529942543740617e-06, -0.002220785478129983, -0.0018268815474584699, -0.00017474555352237076, -0.009520131163299084, -0.0024802894331514835, -0.00197001826018095, -9.798523387871683e-05, -1.07287787614041e-05, -0.002594797173514962, -0.02372088097035885], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.034006256610155106, -0.43878689408302307], "finish_reason": "stop"}], "metrics": {"energy": 181.31116920089724, "energy_per_token": 1.405512939541839, "time": 8.187225, "time_per_token": 0.06346686046511628}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " target_column in columns:", "tokens": [" target", "_", "column", " in", " columns", ":", "\n"], "logprobs": [-0.7875893712043762, -0.0005797850899398327, -0.00015960850578267127, -1.1191438436508179, -0.8361697196960449, -0.022119944915175438, -0.047280583530664444], "finish_reason": "stop"}, {"text": " ValueError(\"Invalid target column.\")", "tokens": [" Value", "Error", "(", "\"", "Invalid", " target", " column", ".", "\"", ")", "\n"], "logprobs": [-0.44654691219329834, -5.280832192511298e-05, -0.12638789415359497, -0.7956593036651611, -2.1661906242370605, -0.11315368860960007, -0.06324245035648346, -0.9532607793807983, -0.34856563806533813, -0.000219321038457565, -0.007023052778095007], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.005720316432416439, -0.2867533564567566, -0.4962708055973053, -0.07067115604877472, -0.5860718488693237, -0.0001280225842492655, -2.9682672902708873e-05, -0.00038926175329834223, -0.0023852726444602013, -0.006687284912914038, -0.0010558750946074724, -0.006764607038348913, -0.10989147424697876], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.009771845303475857, -0.05971619859337807, -0.0009167758980765939, -1.311301275563892e-06, -2.0265558760002023e-06, -0.00013851160474587232, -0.16730013489723206], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.15)  # Use a train/validation split of 15%", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "1", "5", ")", "  ", "#", " Use", " a", " train", "/", "validation", " split", " of", " ", "1", "5", "%", "\n"], "logprobs": [-0.0014765085652470589, -6.508615479106084e-05, -0.02018587477505207, -0.00018606838420964777, -0.0018096276326104999, -9.905801562126726e-05, -0.00038532938924618065, -4.649054244509898e-05, -0.001149589428678155, -5.507317473529838e-05, -0.0002461368858348578, -0.0009504806366749108, -0.01179011631757021, -2.3841830625315197e-06, -1.490105023549404e-05, -3.933898824470816e-06, -7.152531907195225e-06, -0.00012444675667211413, -0.1745646446943283, -0.0005435658385977149, -0.005357313901185989, -0.007127691060304642, -0.1441662758588791, -3.2186455882765586e-06, -7.819823804311454e-05, -0.0008398343343287706, -0.02516908012330532, -0.00011514954530866817, -2.376460552215576, -1.8262112140655518, -1.155085802078247, -1.049041986465454, -0.00022909401741344482, -2.4562110900878906, -3.5925190448760986, -3.3661375045776367, -1.0289112329483032, -3.000399589538574, -0.3743402659893036, -1.2727484703063965, -0.10284191370010376, -0.11308906972408295, -0.05047160014510155, -0.02517187036573887, -0.5981966853141785], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.0010034770239144564, -9.417489309271332e-06, -8.844937838148326e-05, -6.079655122448457e-06, -0.18937166035175323, -0.051266491413116455], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00010632903286023065, -0.00025948495022021234, -0.0007376333815045655, -0.010439432226121426, -0.00024816294899210334, -0.002432128181681037, -0.0027336629573255777, -0.0005276002921164036, -5.602820692729438e-06, -0.00039402826223522425, -0.019088733941316605], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0023467401042580605, -7.390948667307384e-06, -0.0009438112610951066, -0.00047636605449952185, -0.0008454324561171234, -0.000771939754486084, -0.001527096494100988, -0.00032824851223267615, -0.01448003202676773], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.008038786239922047, -1.168244216387393e-05, -4.172316494077677e-06, -0.0032961820252239704, -0.0015824426664039493, -0.0001902399235405028, -0.0163410734385252, -0.002996956231072545, -0.0018128404626622796, -9.440929716220126e-05, -8.821448318485636e-06, -0.0025121578946709633, -0.023630306124687195], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.032267287373542786, -0.4210604429244995], "finish_reason": "stop"}], "metrics": {"energy": 182.79868704891197, "energy_per_token": 1.354064348510459, "time": 8.390901, "time_per_token": 0.06215482222222222}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " target_column in columns:", "tokens": [" target", "_", "column", " in", " columns", ":", "\n"], "logprobs": [-0.7875893712043762, -0.0005797850899398327, -0.00015960850578267127, -1.1191438436508179, -0.8361697196960449, -0.022119944915175438, -0.047280583530664444], "finish_reason": "stop"}, {"text": " ValueError(\"Target column is not in the columns list.\")", "tokens": [" Value", "Error", "(", "\"", "Target", " column", " is", " not", " in", " the", " columns", " list", ".", "\"", ")", "\n"], "logprobs": [-0.44654691219329834, -5.280832192511298e-05, -0.12638789415359497, -0.7956593036651611, -0.5562909841537476, -0.011068728752434254, -3.087999105453491, -0.11137856543064117, -0.4161265790462494, -0.3609093427658081, -1.5829222202301025, -0.25602489709854126, -0.7633646726608276, -0.035048484802246094, -0.0002942844294011593, -0.005784083157777786], "finish_reason": "stop"}, {"text": " df.loc[:, df.columns != target_column]", "tokens": [" df", ".", "loc", "[:", ",", " df", ".", "columns", " ", "!", "=", " target", "_", "column", "]", "\n"], "logprobs": [-0.005720316432416439, -0.2867533564567566, -2.132444143295288, -0.00048387263086624444, -0.0005041282274760306, -0.5196720361709595, -0.006144324317574501, -0.0030235787853598595, -0.1633971929550171, -8.702239938429557e-06, -0.00017641419253777713, -0.026672642678022385, -1.597391747054644e-05, -8.940656698541716e-06, -0.0013092526933178306, -0.21127848327159882], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.009785185568034649, -0.04783632978796959, -0.001135419704951346, -1.6689286894688848e-06, -1.6689286894688848e-06, -0.00014244495832826942, -0.18770359456539154], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.0016498061595484614, -6.69933797325939e-05, -0.01780596375465393, -0.00019167017308063805, -0.0017528659664094448, -9.810443589231e-05, -0.0003545847721397877, -5.411955135059543e-05, -0.001207814086228609, -4.649054244509898e-05, -0.00025817399728111923, -0.001032177242450416, -0.016352450475096703, -2.50339189733495e-06, -1.4305012882687151e-05, -3.576272320060525e-06, -6.9141146923357155e-06, -0.00012110930401831865, -1.8499995470046997], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.0009548871894367039, -8.821448318485636e-06, -9.727005090098828e-05, -5.245195097813848e-06, -0.21406987309455872, -0.04353989288210869], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00011622230522334576, -0.0003359945258125663, -0.0007104733376763761, -0.011165988631546497, -0.00029309268575161695, -0.0022744282614439726, -0.003507297718897462, -0.0004129749140702188, -5.722029527532868e-06, -0.00046588058467023075, -0.027475884184241295], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0029870914295315742, -9.417489309271332e-06, -0.0010389650706201792, -0.0005769256968051195, -0.0007861146004870534, -0.0007277462864294648, -0.001392943668179214, -0.00035422726068645716, -0.013580551370978355], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.008489353582262993, -1.1324817933200393e-05, -3.6954811548639555e-06, -0.0018421123968437314, -0.0017338256584480405, -0.00025376438861712813, -0.011578856967389584, -0.0029560700058937073, -0.002029979834333062, -0.00011169286881340668, -6.437280717364047e-06, -0.0026372435968369246, -0.027715466916561127], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.04254406690597534, -0.39261123538017273], "finish_reason": "stop"}], "metrics": {"energy": 141.07948682594295, "energy_per_token": 1.205807579708914, "time": 6.522403, "time_per_token": 0.055747034188034186}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.7875893712043762, -0.0005797850899398327, -0.00015960850578267127, -0.5571626424789429, -5.1020273531321436e-05, -0.4546641707420349, -0.16808488965034485, -0.015368608757853508, -0.006739267613738775, -0.018085690215229988], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' not found in data.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " data", ".", "\"", ")", "\n"], "logprobs": [-0.3869268000125885, -4.410646579344757e-05, -0.12171101570129395, -0.6874304413795471, -0.1121431291103363, -0.8791963458061218, -0.013609010726213455, -1.0135762691497803, -0.0018239067867398262, -0.0005631053354591131, -0.0002643712505232543, -0.00023934361524879932, -0.001207933179102838, -0.11537698656320572, -0.39023008942604065, -0.157436341047287, -1.2013999223709106, -0.5121981501579285, -0.016496220603585243, -0.00013219437096267939, -0.005458213854581118], "finish_reason": "stop"}, {"text": " df.drop(columns=target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "columns", "=", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.005540728569030762, -0.2661079168319702, -0.47886842489242554, -0.07585856318473816, -0.9533334374427795, -0.629697859287262, -0.00619834940880537, -2.539125671319198e-05, -1.2636104656849056e-05, -0.012452943250536919, -0.007902429439127445, -0.00451485812664032, -0.002372428774833679, -0.0065141478553414345, -0.15209145843982697], "finish_reason": "stop"}, {"text": " df[target_column]  # Operate directly on the DataFrame", "tokens": [" df", "[", "target", "_", "column", "]", "  ", "#", " Oper", "ate", " directly", " on", " the", " Data", "Frame", "\n"], "logprobs": [-0.010445330291986465, -0.04804915562272072, -0.0007459718617610633, -1.4305104514278355e-06, -1.9073468138230965e-06, -0.00013624693383462727, -2.074772834777832, -0.00039617318543605506, -0.7081243395805359, -0.00031680811662226915, -0.06753881275653839, -0.004191542509943247, -0.0026751705445349216, -0.0034683330450206995, -0.0020958855748176575, -0.013816902413964272], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.001471271039918065, -6.067568756407127e-05, -0.01916954666376114, -0.00020013237372040749, -0.001987864263355732, -9.48860906646587e-05, -0.0002628219372127205, -5.173549288883805e-05, -0.0010409895330667496, -5.4238757002167404e-05, -0.00024530262453481555, -0.0009689403814263642, -0.011883772909641266, -2.0265558760002023e-06, -1.6927575416048057e-05, -3.933898824470816e-06, -6.794906312279636e-06, -0.00012563870404846966, -0.1708489954471588, -0.0006744970451109111, -0.004632930271327496, -0.007028498221188784, -0.16130392253398895, -4.6491513785440475e-06, -6.151010165922344e-05, -0.0007939761853776872, -0.02322378382086754, -0.00012039413559250534, -1.3668913841247559, -0.43267568945884705, -0.03302406892180443, -1.4305104514278355e-06, -5.8412379075889476e-06, -0.00032240914879366755, -0.1278543472290039, -0.008915497921407223, -0.08199787884950638, -0.1627802550792694], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.0009107018122449517, -8.702239938429557e-06, -9.142934868577868e-05, -6.318072337307967e-06, -0.16726060211658478, -0.045870568603277206], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00011085849109804258, -0.0003073934931308031, -0.000681883015204221, -0.009692749008536339, -0.00033146608620882034, -0.0030544791370630264, -0.003154185600578785, -0.0005895545473322272, -5.364403477869928e-06, -0.0004752936656586826, -0.02426287904381752], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0023315169382840395, -7.986990567587782e-06, -0.0009970461251214147, -0.0005604841862805188, -0.0009990707039833069, -0.0006398299592547119, -0.00206590723246336, -0.00030393750057555735, -0.015841348096728325], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.00727539649233222, -1.0251946150674485e-05, -4.768360213347478e-06, -0.0021340709645301104, -0.0018198610050603747, -0.000164018536452204, -0.01117153000086546, -0.0030030175112187862, -0.0017272805562242866, -8.666139910928905e-05, -1.0371154530730564e-05, -0.002737348433583975, -0.02280602417886257], "finish_reason": "stop"}, {"text": " accuracy<|endoftext|>from datetime import datetime", "tokens": [" accuracy", "<", "|", "end", "of", "text", "|>", "from", " datetime", " import", " datetime", "\n"], "logprobs": [-0.03597256913781166, -1.4842054843902588, -1.9073468138230965e-06, -1.311301275563892e-06, -7.855583680793643e-05, -0.0001711698860162869, -0.08986139297485352, -1.243765115737915, -4.801433563232422, -0.0005486889858730137, -0.27195632457733154, -0.2817859649658203], "finish_reason": "stop"}], "metrics": {"energy": 179.56765361690518, "energy_per_token": 1.1084423062771924, "time": 8.423419, "time_per_token": 0.05199641358024692}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " not isinstance(target_column, str):", "tokens": [" not", " isinstance", "(", "target", "_", "column", ",", " str", "):", "\n"], "logprobs": [-2.58732533454895, -1.054103970527649, -0.0004217927053105086, -0.655785083770752, -0.00034731553751043975, -0.0001161031104857102, -0.00020323118951637298, -0.04015408456325531, -0.2290974110364914, -0.024018974974751472], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' not in column list.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " not", " in", " column", " list", ".", "\"", ")", "\n"], "logprobs": [-0.4073788821697235, -4.8397800128441304e-05, -0.12861385941505432, -0.654987096786499, -0.1317870318889618, -0.9640047550201416, -0.014012525789439678, -1.0052083730697632, -0.0016952680889517069, -0.0006449526408687234, -0.00024625606602057815, -0.00019131260341964662, -0.001259129960089922, -0.1256321519613266, -1.2411229610443115, -2.8242669105529785, -1.0420701503753662, -0.5911040306091309, -0.023554744198918343, -0.00022194306075107306, -0.005374269559979439], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0059936074540019035, -0.3269306421279907, -0.5590597987174988, -0.07478568702936172, -0.4857741594314575, -0.00015758226800244302, -3.45700973412022e-05, -0.00036483307485468686, -0.0024278471246361732, -0.006457297131419182, -0.0010620674584060907, -0.007429470308125019, -0.1049625501036644], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.008399752900004387, -0.04596598446369171, -0.0009747759322635829, -1.1920922133867862e-06, -1.5497195136049413e-06, -0.00013052565918769687, -0.18385037779808044], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.001705264556221664, -6.294052582234144e-05, -0.0180230550467968, -0.00014888131408952177, -0.0020824430976063013, -8.749579137656838e-05, -0.00042822727118618786, -5.0424259825376794e-05, -0.0011717366287484765, -5.1020273531321436e-05, -0.00021419614495243877, -0.0009664393728598952, -0.013879919424653053, -2.3841830625315197e-06, -1.6927575416048057e-05, -3.6954811548639555e-06, -8.106198947643861e-06, -0.0001161031104857102, -1.490601658821106], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.0008743754005990922, -8.22540732769994e-06, -8.654219709569588e-05, -5.602820692729438e-06, -0.23337742686271667, -0.05348297581076622], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.0001072826053132303, -0.000256982195423916, -0.0008360228384844959, -0.012076476588845253, -0.00031871485407464206, -0.0025981261860579252, -0.003239148296415806, -0.00047946401173248887, -5.722029527532868e-06, -0.0004786299541592598, -0.023433063179254532], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0031628606375306845, -7.748573807475623e-06, -0.001010384177789092, -0.0005874100024811924, -0.0009635811438784003, -0.000668659748043865, -0.0024540091399103403, -0.00030870441696606576, -0.012416327372193336], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.0070527647621929646, -1.1444026313256472e-05, -4.291525328881107e-06, -0.00227276305668056, -0.0020035686902701855, -0.00019369633810129017, -0.010453588329255581, -0.002600028645247221, -0.0015829188050702214, -9.142934868577868e-05, -8.106198947643861e-06, -0.0025937268510460854, -0.024044228717684746], "finish_reason": "stop"}, {"text": " accuracy<|endoftext|>from sklearn.base import BaseEstimator", "tokens": [" accuracy", "<", "|", "end", "of", "text", "|>", "from", " sklearn", ".", "base", " import", " Base", "Est", "im", "ator", "\n"], "logprobs": [-0.036389004439115524, -1.5901243686676025, -1.1920922133867862e-06, -1.0728830375228426e-06, -4.7205765440594405e-05, -0.0001760566228767857, -0.09314627200365067, -1.2732954025268555, -2.383887767791748, -0.13382303714752197, -3.5293874740600586, -0.00027843413408845663, -0.09973465651273727, -0.0012248402927070856, -1.8358061424805783e-05, -1.4066597032069694e-05, -1.1211649179458618], "finish_reason": "stop"}], "metrics": {"energy": 161.6880283813477, "energy_per_token": 1.1802045867251656, "time": 7.3649187, "time_per_token": 0.053758530656934304}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " target_column in df.columns:", "tokens": [" target", "_", "column", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.7875893712043762, -0.0005797850899398327, -0.00015960850578267127, -1.1191438436508179, -0.6040129661560059, -0.15874743461608887, -0.008984141983091831, -0.010743398219347, -0.02845078706741333], "finish_reason": "stop"}, {"text": " Exception('Invalid column name')", "tokens": [" Exception", "('", "Invalid", " column", " name", "')", "\n"], "logprobs": [-1.3694099187850952, -1.6658399105072021, -2.841520071029663, -1.9272525310516357, -0.23216643929481506, -0.6861608028411865, -0.0126538947224617], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column], axis=1)", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "]", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0056454031728208065, -0.2805268168449402, -0.5593994855880737, -0.06334159523248672, -1.0378780364990234, -0.8092851042747498, -0.001999285537749529, -4.291525328881107e-06, -7.510157047363464e-06, -0.45890310406684875, -0.0010144332190975547, -0.009993283078074455, -0.00525640370324254, -0.0013717536348849535, -0.004529098514467478, -0.17793691158294678], "finish_reason": "stop"}, {"text": " df[target_column].astype(int)", "tokens": [" df", "[", "target", "_", "column", "]", ".", "ast", "ype", "(", "int", ")", "\n"], "logprobs": [-0.0076436190865933895, -0.04829590395092964, -0.0009614374139346182, -1.6689286894688848e-06, -2.145764938177308e-06, -0.0001554368354845792, -3.0629377365112305, -2.333103895187378, -2.95634672511369e-05, -0.2448076456785202, -0.1722411811351776, -0.0016314780805259943, -0.9631383419036865], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0017249004449695349, -7.939023635117337e-05, -0.021436894312500954, -0.00016759421851020306, -0.0022520674392580986, -8.713819261174649e-05, -0.00026067672297358513, -4.649054244509898e-05, -0.001189596951007843, -5.209310256759636e-05, -0.0002554328821133822, -0.0008697302546352148, -0.014098451472818851, -2.145764938177308e-06, -1.6689160474925302e-05, -3.3378546504536644e-06, -6.318072337307967e-06, -0.00011884459672728553, -0.1937767118215561, -0.0007700338610447943, -0.005100809037685394, -0.007653911132365465, -0.14413686096668243, -2.861018856492592e-06, -7.176141662057489e-05, -0.000949885172303766, -0.025193840265274048, -0.0001578206429257989, -1.4772089719772339, -0.35066086053848267, -0.03345314413309097, -1.6689286894688848e-06, -5.8412379075889476e-06, -0.00031382881570607424, -0.11005861312150955, -0.009103222750127316, -0.08067802339792252, -0.1649511158466339], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.0009489324293099344, -7.271740287251305e-06, -9.202533692587167e-05, -5.364403477869928e-06, -0.1828434020280838, -0.046221211552619934], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00011824862303910777, -0.000302745756926015, -0.0006516240537166595, -0.008502237498760223, -0.00028832571115344763, -0.0028405338525772095, -0.0032501989044249058, -0.0004916174802929163, -6.198863957251888e-06, -0.0004292996891308576, -0.02025596797466278], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00269906735047698, -7.390948667307384e-06, -0.00103265349753201, -0.00041214076918549836, -0.0012373419012874365, -0.0006740205571986735, -0.0014137759571895003, -0.0003518439189065248, -0.01383406762033701], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.00874581839889288, -1.1324817933200393e-05, -4.410734163684538e-06, -0.002467090031132102, -0.0018114125123247504, -0.0002616301644593477, -0.012110396288335323, -0.0029728286899626255, -0.0016457597957924008, -0.00010406429646536708, -1.0490362910786644e-05, -0.002543787471950054, -0.03465555980801582], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.035370148718357086, -0.39447519183158875], "finish_reason": "stop"}], "metrics": {"energy": 156.95985048484806, "energy_per_token": 1.1626655591470227, "time": 7.3545747, "time_per_token": 0.05447833111111111}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.7875893712043762, -0.0005797850899398327, -0.00015960850578267127, -0.5571626424789429, -5.1020273531321436e-05, -0.4546641707420349, -0.16808488965034485, -0.015368608757853508, -0.006739267613738775, -0.018085690215229988], "finish_reason": "stop"}, {"text": " ValueError(\"Column not found.\")", "tokens": [" Value", "Error", "(", "\"", "Column", " not", " found", ".", "\"", ")", "\n"], "logprobs": [-0.3869268000125885, -4.410646579344757e-05, -0.12171101570129395, -0.7804709076881409, -2.8854737281799316, -1.0373278856277466, -0.2334119826555252, -1.5530871152877808, -0.13748908042907715, -0.00042489083716645837, -0.008845550008118153], "finish_reason": "stop"}, {"text": " df.iloc[:, :-1]", "tokens": [" df", ".", "il", "oc", "[:", ",", " :-", "1", "]", "\n"], "logprobs": [-0.005540728569030762, -0.2661079168319702, -1.432281494140625, -0.00013016807497479022, -0.0008800924406386912, -0.0009638193296268582, -0.6944190263748169, -0.0004275123355910182, -0.0013406822690740228, -0.28910648822784424], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.009649420157074928, -0.03852420672774315, -0.0008632985409349203, -1.311301275563892e-06, -1.5497195136049413e-06, -0.00012540031457319856, -0.17244727909564972], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0014316319720819592, -7.998623186722398e-05, -0.015847332775592804, -0.00021479207498487085, -0.0019546705298125744, -9.250213042832911e-05, -0.000288087350782007, -4.9470632802695036e-05, -0.0011660212185233831, -5.3165931603871286e-05, -0.00026603974401950836, -0.0010009760735556483, -0.01330697350203991, -1.9073468138230965e-06, -1.2516897186287679e-05, -3.814689989667386e-06, -8.22540732769994e-06, -0.00011097769311163574, -0.21337008476257324, -0.0007281036232598126, -0.003752810414880514, -0.008191087283194065, -0.13761042058467865, -2.861018856492592e-06, -7.021180499577895e-05, -0.0007936188485473394, -0.027304917573928833, -0.00011443436960689723, -1.41987144947052, -0.41511017084121704, -0.03418172523379326, -2.0265558760002023e-06, -5.960446742392378e-06, -0.0002901133266277611, -0.12570616602897644, -0.010236619040369987, -0.09368796646595001, -0.16422225534915924], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.0008671099785715342, -7.390948667307384e-06, -9.131014667218551e-05, -4.887569048150908e-06, -0.19478188455104828, -0.049002744257450104], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00010692501382436603, -0.0002057340752799064, -0.0007967158453539014, -0.011375096626579762, -0.0003197873884346336, -0.0020748295355588198, -0.0030234598089009523, -0.0005510718910954893, -7.748573807475623e-06, -0.0004986473359167576, -0.02101803757250309], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0028032076079398394, -6.437280717364047e-06, -0.0010531361913308501, -0.0006268443539738655, -0.0011444692499935627, -0.0006815256201662123, -0.0020663831382989883, -0.00031668893643654883, -0.014381448738276958], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.008699612691998482, -1.07287787614041e-05, -3.814689989667386e-06, -0.0025770808570086956, -0.0016568278660997748, -0.00020597243565134704, -0.01118756178766489, -0.0027510200161486864, -0.001906721736304462, -0.00010477947944309562, -9.417489309271332e-06, -0.0026982349809259176, -0.025664981454610825], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.04182807356119156, -0.38558489084243774], "finish_reason": "stop"}], "metrics": {"energy": 175.4626651611328, "energy_per_token": 1.37080207157135, "time": 8.175269, "time_per_token": 0.0638692890625}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " target_column not in df:", "tokens": [" target", "_", "column", " not", " in", " df", ":", "\n"], "logprobs": [-0.7875893712043762, -0.0005797850899398327, -0.00015960850578267127, -0.5571626424789429, -5.1020273531321436e-05, -0.4546641707420349, -1.881662130355835, -0.018663395196199417], "finish_reason": "stop"}, {"text": " ValueError(\"Target column not in data columns.\")", "tokens": [" Value", "Error", "(", "\"", "Target", " column", " not", " in", " data", " columns", ".", "\"", ")", "\n"], "logprobs": [-0.3869268000125885, -4.410646579344757e-05, -0.12171101570129395, -0.7804709076881409, -0.5845533013343811, -0.010860500857234001, -0.1671309918165207, -1.523449182510376, -0.9893602728843689, -1.8031163215637207, -1.0404880046844482, -0.025937173515558243, -0.00032479254878126085, -0.005748526193201542], "finish_reason": "stop"}, {"text": " df.drop(columns=target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "columns", "=", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.005540728569030762, -0.2661079168319702, -0.47886842489242554, -0.07585856318473816, -0.9533334374427795, -0.629697859287262, -0.00619834940880537, -2.539125671319198e-05, -1.2636104656849056e-05, -0.012452943250536919, -0.007902429439127445, -0.00451485812664032, -0.002372428774833679, -0.0065141478553414345, -0.15209145843982697], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.010445330291986465, -0.04804915562272072, -0.0007459718617610633, -1.4305104514278355e-06, -1.9073468138230965e-06, -0.00013624693383462727, -0.18908782303333282], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.001471271039918065, -6.067568756407127e-05, -0.01916954666376114, -0.00020013237372040749, -0.001987864263355732, -9.48860906646587e-05, -0.0002628219372127205, -5.173549288883805e-05, -0.0010409895330667496, -5.4238757002167404e-05, -0.00024530262453481555, -0.0009689403814263642, -0.011883772909641266, -2.0265558760002023e-06, -1.6927575416048057e-05, -3.933898824470816e-06, -6.794906312279636e-06, -0.00012563870404846966, -0.1708489954471588, -0.0006744970451109111, -0.004632930271327496, -0.007028498221188784, -0.16130392253398895, -4.6491513785440475e-06, -6.151010165922344e-05, -0.0007939761853776872, -0.02322378382086754, -0.00012039413559250534, -1.3668913841247559, -0.43267568945884705, -0.03302406892180443, -1.4305104514278355e-06, -5.8412379075889476e-06, -0.00032240914879366755, -0.1278543472290039, -0.008915497921407223, -0.08199787884950638, -0.1627802550792694], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.0009107018122449517, -8.702239938429557e-06, -9.142934868577868e-05, -6.318072337307967e-06, -0.16726060211658478, -0.045870568603277206], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00011085849109804258, -0.0003073934931308031, -0.000681883015204221, -0.009692749008536339, -0.00033146608620882034, -0.0030544791370630264, -0.003154185600578785, -0.0005895545473322272, -5.364403477869928e-06, -0.0004752936656586826, -0.02426287904381752], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0023315169382840395, -7.986990567587782e-06, -0.0009970461251214147, -0.0005604841862805188, -0.0009990707039833069, -0.0006398299592547119, -0.00206590723246336, -0.00030393750057555735, -0.015841348096728325], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.00727539649233222, -1.0251946150674485e-05, -4.768360213347478e-06, -0.0021340709645301104, -0.0018198610050603747, -0.000164018536452204, -0.01117153000086546, -0.0030030175112187862, -0.0017272805562242866, -8.666139910928905e-05, -1.0371154530730564e-05, -0.002737348433583975, -0.02280602417886257], "finish_reason": "stop"}, {"text": " accuracy<|endoftext|># Import necessary libraries", "tokens": [" accuracy", "<", "|", "end", "of", "text", "|>", "#", " Import", " necessary", " libraries", "\n"], "logprobs": [-0.03597256913781166, -1.4842054843902588, -1.9073468138230965e-06, -1.311301275563892e-06, -7.855583680793643e-05, -0.0001711698860162869, -0.08986139297485352, -1.4128916263580322, -3.947061777114868, -2.2944490909576416, -0.5482519268989563, -0.06906571239233017], "finish_reason": "stop"}], "metrics": {"energy": 191.70902283668505, "energy_per_token": 1.3313126585880906, "time": 8.817489, "time_per_token": 0.061232562500000004}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " len(df) == 0:", "tokens": [" len", "(", "df", ")", " ==", " ", "0", ":", "\n"], "logprobs": [-1.648066759109497, -0.0006901028100401163, -0.23900966346263885, -0.9048182964324951, -1.9365867376327515, -0.11507952958345413, -0.059874527156353, -0.10535916686058044, -0.0960545465350151], "finish_reason": "stop"}, {"text": " Exception(f\"Target column {target_column} not found in the data.\")", "tokens": [" Exception", "(", "f", "\"", "Target", " column", " {", "target", "_", "column", "}", " not", " found", " in", " the", " data", ".", "\"", ")", "\n"], "logprobs": [-1.463489294052124, -0.27684009075164795, -1.0179526805877686, -0.23260875046253204, -1.1449799537658691, -0.03488548472523689, -0.7145154476165771, -0.0012684165267273784, -0.000316212244797498, -0.00022635281493421644, -0.022722359746694565, -0.17198005318641663, -0.4223039746284485, -0.21693094074726105, -1.268937349319458, -1.0873446464538574, -0.7250155806541443, -0.02874400094151497, -0.0003084660565946251, -0.008013952523469925], "finish_reason": "stop"}, {"text": " df.loc[:, df.columns[:-1]]  # All columns except target column", "tokens": [" df", ".", "loc", "[:", ",", " df", ".", "columns", "[:", "-", "1", "]]", "  ", "#", " All", " columns", " except", " target", " column", "\n"], "logprobs": [-0.005329211708158255, -0.24382904171943665, -2.0812265872955322, -0.00040356122190132737, -0.0005021026590839028, -0.5431544184684753, -0.005563252605497837, -0.0024801704566925764, -2.2358968257904053, -0.013039438985288143, -0.0031100972555577755, -0.0008288762182928622, -1.9711921215057373, -0.0006170752458274364, -1.85503089427948, -0.2986809313297272, -0.05049891397356987, -1.0380816459655762, -0.6396123766899109, -0.01575627736747265], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.00826746504753828, -0.04804586246609688, -0.0009970461251214147, -1.311301275563892e-06, -1.9073468138230965e-06, -0.0001394651480950415, -0.1843278557062149], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0016346914926543832, -6.8662193370983e-05, -0.0204286128282547, -0.00020549570035655051, -0.0019506252137944102, -8.272782724816352e-05, -0.0002935693773906678, -4.768258077092469e-05, -0.0011950739426538348, -6.854299135738984e-05, -0.00025102324434556067, -0.0008391196606680751, -0.014250889420509338, -2.0265558760002023e-06, -1.5139465176616795e-05, -3.576272320060525e-06, -7.748573807475623e-06, -0.00011789103882620111, -0.20787696540355682, -0.0006506709614768624, -0.0038119524251669645, -0.007049213629215956, -0.1536789834499359, -2.9802276912960224e-06, -6.341733387671411e-05, -0.0007367995567619801, -0.02114071324467659, -0.00012396997772157192, -0.4505222737789154, -0.6559277772903442, -0.02110126242041588, -1.7881377516459906e-06, -6.556489552167477e-06, -0.00028081765049137175, -0.10615000128746033, -0.007421187125146389, -0.07185973227024078, -0.18799543380737305], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.0009533389820717275, -7.510157047363464e-06, -8.761498611420393e-05, -5.602820692729438e-06, -0.22704219818115234, -0.048753105103969574], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-9.095255518332124e-05, -0.0003060825983993709, -0.000771939754486084, -0.008921878412365913, -0.00029571453342214227, -0.0021221754141151905, -0.0033545196056365967, -0.0004418112221173942, -5.602820692729438e-06, -0.00046004203613847494, -0.02249533124268055], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.002820563269779086, -8.702239938429557e-06, -0.0010599239030852914, -0.0004714807728305459, -0.0009802542626857758, -0.000782183778937906, -0.001557805109769106, -0.0003083468764089048, -0.013902139849960804], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.00841051060706377, -1.1205610462639015e-05, -4.887569048150908e-06, -0.0018795934738591313, -0.001991552533581853, -0.0001778444420779124, -0.010561052709817886, -0.0024133387487381697, -0.0019944077357649803, -0.00010096516780322418, -9.775113539944869e-06, -0.002561147790402174, -0.02413267269730568], "finish_reason": "stop"}, {"text": " accuracy<|endoftext|>\"\"\"", "tokens": [" accuracy", "<", "|", "end", "of", "text", "|", ">\"", "\"", "\"", "\n"], "logprobs": [-0.03720549866557121, -1.4609757661819458, -1.7881377516459906e-06, -1.0728830375228426e-06, -0.00010668662434909493, -0.00020144341397099197, -2.5682132244110107, -0.012515457347035408, -0.0014083001296967268, -0.0003763920976780355, -0.1707189679145813], "finish_reason": "stop"}], "metrics": {"energy": 175.73221381092068, "energy_per_token": 1.133756218134972, "time": 8.200012, "time_per_token": 0.05290330322580645}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " target_column in columns:", "tokens": [" target", "_", "column", " in", " columns", ":", "\n"], "logprobs": [-0.7875893712043762, -0.0005797850899398327, -0.00015960850578267127, -1.1191438436508179, -0.8361697196960449, -0.022119944915175438, -0.047280583530664444], "finish_reason": "stop"}, {"text": " Exception(\"Target column does not exist in the provided data.\")", "tokens": [" Exception", "(", "\"", "Target", " column", " does", " not", " exist", " in", " the", " provided", " data", ".", "\"", ")", "\n"], "logprobs": [-1.3694099187850952, -0.24433307349681854, -0.5755369663238525, -0.8952353000640869, -0.04048715904355049, -2.8169941902160645, -0.0009790633339434862, -0.013375669717788696, -0.4451841115951538, -0.6375306844711304, -3.642883777618408, -0.29905954003334045, -0.6471454501152039, -0.022571438923478127, -0.0004463391669560224, -0.009517178870737553], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0056454031728208065, -0.2805268168449402, -0.5593994855880737, -0.06334159523248672, -0.4439983367919922, -0.0001248043408850208, -3.313963316031732e-05, -0.00037901371251791716, -0.0022103183437138796, -0.0060897041112184525, -0.0012006701435893774, -0.007024591788649559, -0.11484405398368835], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.009938754141330719, -0.046119675040245056, -0.0010120513616129756, -1.311301275563892e-06, -1.7881377516459906e-06, -0.00015162272029556334, -0.19168059527873993], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "1", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0015307862777262926, -6.937739817658439e-05, -0.014980672858655453, -0.00017307691450696439, -0.001981677720323205, -0.00010859376925509423, -0.00030214988510124385, -4.279521817807108e-05, -0.0009660820942372084, -5.6265202147187665e-05, -0.0002109781780745834, -0.0009124883217737079, -0.013306032866239548, -2.145764938177308e-06, -1.2040065485052764e-05, -4.768360213347478e-06, -6.556489552167477e-06, -0.00012635385792236775, -0.1995135396718979, -0.0006715188501402736, -0.0049233632162213326, -0.008474105969071388, -0.15630431473255157, -3.099436753473128e-06, -7.343022298300639e-05, -0.000816012208815664, -0.024738062173128128, -0.00012218205665703863, -2.4684414863586426, -0.6370920538902283, -0.02563314512372017, -1.7881377516459906e-06, -6.556489552167477e-06, -0.00024911639047786593, -0.13908717036247253, -0.0074969143606722355, -0.07724019140005112, -0.2003709077835083], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.0009700122172944248, -6.437280717364047e-06, -8.725739462533966e-05, -5.602820692729438e-06, -0.2143649011850357, -0.04860731586813927], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-9.810443589231e-05, -0.000259365770034492, -0.0006470970110967755, -0.012709570117294788, -0.00026603974401950836, -0.002609897404909134, -0.002568162977695465, -0.00047505536349490285, -5.960446742392378e-06, -0.0004253674705978483, -0.026748433709144592], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0028421981260180473, -5.8412379075889476e-06, -0.0010308672208338976, -0.000533795915544033, -0.0008397151832468808, -0.0007717015105299652, -0.002271454781293869, -0.00038044367101974785, -0.01719999499619007], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.008182455785572529, -1.2636104656849056e-05, -4.0531076592742465e-06, -0.002514536026865244, -0.0019189768936485052, -0.0002455409849062562, -0.013972205109894276, -0.0026019311044365168, -0.0015069806249812245, -9.560128091834486e-05, -7.152531907195225e-06, -0.0027742015663534403, -0.024419359862804413], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy"], "logprobs": [-0.04136849194765091], "finish_reason": "stop"}], "metrics": {"energy": 195.87991320610044, "energy_per_token": 1.4839387364098517, "time": 8.190387, "time_per_token": 0.06204838636363636}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " len(columns) != 5:", "tokens": [" len", "(", "columns", ")", " ", "!", "=", " ", "5", ":", "\n"], "logprobs": [-1.648066759109497, -0.0006901028100401163, -2.0284173488616943, -0.011327126063406467, -2.2689223289489746, -1.0251946150674485e-05, -1.2159273865108844e-05, -0.9300580024719238, -1.4782140254974365, -0.04551832377910614, -0.06809243559837341], "finish_reason": "stop"}, {"text": " Exception(\"Target column not found in DataFrame.\")", "tokens": [" Exception", "(", "\"", "Target", " column", " not", " found", " in", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-1.463489294052124, -0.27684009075164795, -0.5182673335075378, -0.9528952836990356, -0.040093619376420975, -0.2520991563796997, -0.3083930015563965, -0.4634827673435211, -2.0000219345092773, -0.018298154696822166, -0.9148120880126953, -0.03594784438610077, -0.00033778208307921886, -0.008918452076613903], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.005329211708158255, -0.24382904171943665, -0.4588339328765869, -0.07388793677091599, -0.5084834694862366, -0.00012230125139467418, -3.242440288886428e-05, -0.000377583724912256, -0.0020174880046397448, -0.006246922072023153, -0.0009912106906995177, -0.007040572352707386, -0.11961875855922699], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.009172679856419563, -0.04573289677500725, -0.0007458527106791735, -1.311301275563892e-06, -2.0265558760002023e-06, -0.00013529339048545808, -0.19796541333198547], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ")", "\n"], "logprobs": [-0.001629335805773735, -6.305972783593461e-05, -0.01956942118704319, -0.00016020445036701858, -0.0017926113214343786, -9.83428253675811e-05, -0.0003623305819928646, -5.113947918289341e-05, -0.0011542332358658314, -5.495397272170521e-05, -0.0002325502864550799, -0.00093606993323192, -0.017055975273251534, -2.9802276912960224e-06, -1.847726889536716e-05, -3.4570634852570947e-06, -7.271740287251305e-06, -0.0001161031104857102, -0.1807173490524292, -0.0006069486844353378, -0.0035875977482646704, -0.0067192562855780125, -0.16387392580509186, -2.861018856492592e-06, -7.068861305015162e-05, -0.0007457336178049445, -0.024549296125769615, -0.0001072826053132303, -0.47031891345977783, -2.1635212898254395, -0.44683581590652466], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.000902007392141968, -8.106198947643861e-06, -8.916457591112703e-05, -6.6756979322235566e-06, -0.18521369993686676, -0.04366599768400192], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00011705666838679463, -0.00041059168870560825, -0.0006491222884505987, -0.011207366362214088, -0.00022885564249008894, -0.0025090661365538836, -0.0025112065486609936, -0.0003999863693024963, -6.079655122448457e-06, -0.00040749352774582803, -0.023516086861491203], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.003230830654501915, -7.748573807475623e-06, -0.001073142047971487, -0.000598251644987613, -0.0010971962474286556, -0.0006505518686026335, -0.0026101351249963045, -0.00032205163734033704, -0.013627826236188412], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.008490418083965778, -1.0251946150674485e-05, -4.172316494077677e-06, -0.0024258254561573267, -0.0019386084750294685, -0.0002012050390476361, -0.007893795147538185, -0.0031690397299826145, -0.0019869126845151186, -0.00011514954530866817, -8.940656698541716e-06, -0.002885822905227542, -0.02372460626065731], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.038062989711761475, -0.40482163429260254], "finish_reason": "stop"}], "metrics": {"energy": 163.01785939025876, "energy_per_token": 1.2735770264863966, "time": 6.950109, "time_per_token": 0.0542977265625}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " target_column == 'target':", "tokens": [" target", "_", "column", " ==", " '", "target", "':", "\n"], "logprobs": [-0.7875893712043762, -0.0005797850899398327, -0.00015960850578267127, -2.925462245941162, -0.205595463514328, -0.2735976278781891, -0.012750647962093353, -0.08749843388795853], "finish_reason": "stop"}, {"text": " ValueError('The target column is not found in the columns')", "tokens": [" Value", "Error", "('", "The", " target", " column", " is", " not", " found", " in", " the", " columns", "')", "\n"], "logprobs": [-0.44654691219329834, -5.280832192511298e-05, -2.1879818439483643, -2.0881807804107666, -0.09510351717472076, -0.0672416016459465, -0.7548999786376953, -0.11215698719024658, -2.320998191833496, -0.20082984864711761, -0.06230100989341736, -1.6481328010559082, -2.090545177459717, -0.004372322466224432], "finish_reason": "stop"}, {"text": " df[columns[:-1]]", "tokens": [" df", "[", "columns", "[:", "-", "1", "]]", "\n"], "logprobs": [-0.005957346875220537, -1.3899812698364258, -0.2762937545776367, -0.1190495640039444, -0.03654187545180321, -0.001862221397459507, -0.0007221474661491811, -0.3295084238052368], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0074166906997561455, -0.05718841403722763, -0.0009091534884646535, -1.5497195136049413e-06, -1.6689286894688848e-06, -0.0001456631434848532, -0.18817755579948425], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0016593271866440773, -6.210611172718927e-05, -0.026132065802812576, -0.00018356545479036868, -0.0016032711137086153, -8.49926145747304e-05, -0.00032240914879366755, -4.351044481154531e-05, -0.0008889061282388866, -5.4238757002167404e-05, -0.00019464982324279845, -0.0009358317474834621, -0.010165111161768436, -2.145764938177308e-06, -1.6689160474925302e-05, -4.0531076592742465e-06, -6.556489552167477e-06, -0.00011646069469861686, -0.19833873212337494, -0.0005619138828478754, -0.0052775111980736256, -0.005948103964328766, -0.17063966393470764, -3.576272320060525e-06, -7.974783511599526e-05, -0.0007649118197150528, -0.022468987852334976, -0.00010930894495686516, -0.4669032692909241, -0.7841452956199646, -0.024936094880104065, -1.311301275563892e-06, -5.483612312673358e-06, -0.0002494739310350269, -0.13219258189201355, -0.00829631183296442, -0.07456674426794052, -0.18599385023117065], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.0010207447921857238, -7.629365427419543e-06, -8.582700684200972e-05, -5.602820692729438e-06, -0.16540072858333588, -0.047053493559360504], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00010787858627736568, -0.0003332536434754729, -0.0007401349139399827, -0.01006562914699316, -0.00032181330607272685, -0.0021670209243893623, -0.003030471969395876, -0.0005865760613232851, -4.529942543740617e-06, -0.00044324109330773354, -0.020939359441399574], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.003091320628300309, -8.583032467868179e-06, -0.000972036796156317, -0.0005449955351650715, -0.0010737375123426318, -0.0009204680100083351, -0.001699671265669167, -0.00034397884155623615, -0.0129590705037117], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.00856452714651823, -1.3828182090946939e-05, -3.814689989667386e-06, -0.0021735632326453924, -0.0020557953976094723, -0.00013851160474587232, -0.012681555934250355, -0.0022590849548578262, -0.0018156962469220161, -0.00011312322021694854, -9.775113539944869e-06, -0.0024831434711813927, -0.028345229104161263], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.04255880415439606, -0.35880082845687866], "finish_reason": "stop"}], "metrics": {"energy": 177.15557745838169, "energy_per_token": 1.394925806758911, "time": 8.181125, "time_per_token": 0.06441830708661417}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " len(df[target_column].unique()) == 1:", "tokens": [" len", "(", "df", "[", "target", "_", "column", "]", ".", "unique", "())", " ==", " ", "1", ":", "\n"], "logprobs": [-1.648066759109497, -0.0006901028100401163, -0.23900966346263885, -1.3617770671844482, -0.07411544024944305, -5.602820692729438e-06, -6.174850568640977e-05, -0.7786200642585754, -0.0018071286613121629, -0.19327817857265472, -0.021169541403651237, -0.8539493083953857, -0.013453181833028793, -0.47377121448516846, -0.03762245550751686, -0.2745071351528168], "finish_reason": "stop"}, {"text": " ValueError('The target column must be in the DataFrame.')", "tokens": [" Value", "Error", "('", "The", " target", " column", " must", " be", " in", " the", " Data", "Frame", ".", "')", "\n"], "logprobs": [-0.4073788821697235, -4.8397800128441304e-05, -2.171006679534912, -1.9512560367584229, -0.11611822992563248, -0.067269466817379, -1.8294291496276855, -0.06683436781167984, -0.40110382437705994, -0.030317721888422966, -2.0654399394989014, -0.004428579472005367, -0.91913241147995, -0.009710458107292652, -0.003506703767925501], "finish_reason": "stop"}, {"text": " df.iloc[:, :-1]  # Using iloc to exclude target column", "tokens": [" df", ".", "il", "oc", "[:", ",", " :-", "1", "]", "  ", "#", " Using", " il", "oc", " to", " exclude", " target", " column", "\n"], "logprobs": [-0.005179083440452814, -0.2710300385951996, -1.4199151992797852, -0.00015567521040793508, -0.0009288049186579883, -0.0010768335778266191, -0.6936902403831482, -0.00047386385267600417, -0.0009385710000060499, -1.9344890117645264, -0.0004960260121151805, -1.977281093597412, -0.212419793009758, -0.0002004899288294837, -0.10721193253993988, -3.014249563217163, -1.5537497997283936, -0.09560070186853409, -0.22755731642246246], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.00881990883499384, -0.05103633552789688, -0.0009544108179397881, -1.4305104514278355e-06, -1.6689286894688848e-06, -0.00013779645087197423, -0.19181078672409058], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ")", "\n"], "logprobs": [-0.001706811715848744, -7.295342220459133e-05, -0.018436262384057045, -0.0002083561266772449, -0.001536499592475593, -8.177422569133341e-05, -0.00031573555315844715, -4.756337511935271e-05, -0.0008101756684482098, -5.090107151772827e-05, -0.0001805857609724626, -0.0008485292200930417, -0.012272205203771591, -2.145764938177308e-06, -1.4066597032069694e-05, -4.291525328881107e-06, -7.271740287251305e-06, -0.00012051333033014089, -0.21614854037761688, -0.0006407829932868481, -0.005135321523994207, -0.006623575929552317, -0.15489383041858673, -2.9802276912960224e-06, -6.687417771900073e-05, -0.0007606235449202359, -0.022729001939296722, -0.00010501786891836673, -0.4742276966571808, -2.20003080368042, -0.39568400382995605], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.0008114859228953719, -8.940656698541716e-06, -8.713819261174649e-05, -4.887569048150908e-06, -0.17748352885246277, -0.047789283096790314], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-9.357491217087954e-05, -0.00036244976217858493, -0.0006605588714592159, -0.011908039450645447, -0.00031573555315844715, -0.0017853525932878256, -0.0028269824106246233, -0.0004258441040292382, -6.198863957251888e-06, -0.0004362108593340963, -0.027574460953474045], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0030326112173497677, -7.390948667307384e-06, -0.000982159748673439, -0.0005855038180015981, -0.0011619728757068515, -0.0007674132939428091, -0.0015582811320200562, -0.0003334919747430831, -0.01396926585584879], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.00857433769851923, -1.2159273865108844e-05, -3.576272320060525e-06, -0.002729858737438917, -0.0022691949270665646, -0.0001915509783430025, -0.013360613025724888, -0.002757915062829852, -0.0017149040941148996, -0.00011538793478393927, -7.033323527139146e-06, -0.0023750450927764177, -0.020744619891047478], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.03575197979807854, -0.4105786383152008], "finish_reason": "stop"}], "metrics": {"energy": 212.20097303581227, "energy_per_token": 1.5157212359700876, "time": 8.586574, "time_per_token": 0.061332671428571434}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " target_column not in columns:", "tokens": [" target", "_", "column", " not", " in", " columns", ":", "\n"], "logprobs": [-0.7875893712043762, -0.0005797850899398327, -0.00015960850578267127, -0.5571626424789429, -5.1020273531321436e-05, -1.0379314422607422, -0.010058548301458359, -0.02730085700750351], "finish_reason": "stop"}, {"text": " ValueError(f'target column not in DataFrame columns: {target_column}')", "tokens": [" Value", "Error", "(", "f", "'", "target", " column", " not", " in", " Data", "Frame", " columns", ":", " {", "target", "_", "column", "}", "')", "\n"], "logprobs": [-0.3869268000125885, -4.410646579344757e-05, -0.12171101570129395, -0.6874304413795471, -2.3509488105773926, -2.0466957092285156, -1.3453121185302734, -1.449815273284912, -0.5356526374816895, -3.3975682258605957, -0.012501212768256664, -0.9613402485847473, -0.32876038551330566, -0.027145057916641235, -0.6414352655410767, -0.00042000532266683877, -0.0007327494095079601, -0.011254634708166122, -0.05637309327721596, -0.004752293229103088], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.005540728569030762, -0.2661079168319702, -0.47886842489242554, -0.07585856318473816, -0.4948583245277405, -0.00014685506175737828, -3.123234637314454e-05, -0.0003682888636831194, -0.0022998806089162827, -0.006729913409799337, -0.0010405131615698338, -0.006677101366221905, -0.11662577092647552], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0084232771769166, -0.05149161070585251, -0.0011210116790607572, -1.1920922133867862e-06, -1.7881377516459906e-06, -0.0001234931987710297, -0.18568024039268494], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.15, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "1", "5", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.001632549217902124, -7.068861305015162e-05, -0.017100272700190544, -0.00016819016309455037, -0.0019920284394174814, -0.0001037067049765028, -0.00031871485407464206, -5.3881147323409095e-05, -0.0011375630274415016, -5.4238757002167404e-05, -0.00029237763374112546, -0.0009667966514825821, -0.01261928677558899, -2.264974000354414e-06, -1.3470558769768104e-05, -2.7418097943154862e-06, -7.033323527139146e-06, -0.00010394509445177391, -0.19221003353595734, -0.0006070678355172276, -0.0043884641490876675, -0.006677693221718073, -0.15481020510196686, -2.145764938177308e-06, -6.794698856538162e-05, -0.0007269124034792185, -0.024584190919995308, -0.00011812942830147222, -2.377553939819336, -1.797757863998413, -0.3318893015384674, -0.03662519529461861, -1.7881377516459906e-06, -5.8412379075889476e-06, -0.00024768622824922204, -0.13943544030189514, -0.012471191585063934, -0.12126012146472931, -0.23443306982517242], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.0009632238652557135, -7.152531907195225e-06, -8.046303264563903e-05, -6.318072337307967e-06, -0.16697777807712555, -0.051669470965862274], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00011431517486926168, -0.00025006983196362853, -0.0007925468380562961, -0.011462545022368431, -0.0002867764269467443, -0.002507758093997836, -0.002861692802980542, -0.00045694399159401655, -7.629365427419543e-06, -0.0004189328756183386, -0.02326466329395771], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.002806536154821515, -7.510157047363464e-06, -0.0009078433504328132, -0.0004764852055814117, -0.0010286045726388693, -0.0007129749283194542, -0.0019614521879702806, -0.00033182359766215086, -0.015227142721414566], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.007038796786218882, -1.0967194612021558e-05, -4.291525328881107e-06, -0.001789517467841506, -0.0018106985371559858, -0.00019464982324279845, -0.014085874892771244, -0.0025132279843091965, -0.0019397982396185398, -0.00010311071673640981, -9.536697689327411e-06, -0.0030525776091963053, -0.023061174899339676], "finish_reason": "stop"}, {"text": " accuracy<|endoftext|>import re", "tokens": [" accuracy", "<", "|", "end", "of", "text", "|>", "import", " re", "\n"], "logprobs": [-0.0449158139526844, -1.5511802434921265, -1.5497195136049413e-06, -1.0728830375228426e-06, -6.854299135738984e-05, -0.0001546025014249608, -0.0840514674782753, -1.101178765296936, -3.7359471321105957, -0.021033329889178276], "finish_reason": "stop"}], "metrics": {"energy": 193.73212294101714, "energy_per_token": 1.3179055982382117, "time": 9.019329, "time_per_token": 0.06135597959183674}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " len(df.columns) == 1:", "tokens": [" len", "(", "df", ".", "columns", ")", " ==", " ", "1", ":", "\n"], "logprobs": [-1.648066759109497, -0.0006901028100401163, -0.23900966346263885, -1.1946780681610107, -0.6401599049568176, -0.012289632111787796, -1.3351547718048096, -0.33149564266204834, -0.8918032050132751, -0.12718872725963593, -0.08407502621412277], "finish_reason": "stop"}, {"text": " ValueError(f\"Column '{target_column}' not found in data.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Column", " '", "{", "target", "_", "column", "}'", " not", " found", " in", " data", ".", "\"", ")", "\n"], "logprobs": [-0.4073788821697235, -4.8397800128441304e-05, -0.12861385941505432, -0.654987096786499, -0.1317870318889618, -1.9106523990631104, -1.246549367904663, -0.006205102428793907, -0.00119138287845999, -0.0004326361231505871, -0.00031764229061082006, -0.0014729375252500176, -0.20706041157245636, -0.3311663866043091, -0.37890681624412537, -1.2108056545257568, -0.5373250246047974, -0.029549630358815193, -0.00013064485392533243, -0.004982792306691408], "finish_reason": "stop"}, {"text": " df.drop(columns=target_column, axis=1)  # drop target column from X", "tokens": [" df", ".", "drop", "(", "columns", "=", "target", "_", "column", ",", " axis", "=", "1", ")", "  ", "#", " drop", " target", " column", " from", " X", "\n"], "logprobs": [-0.0059936074540019035, -0.3269306421279907, -0.5590597987174988, -0.07478568702936172, -0.965922474861145, -0.7221651077270508, -0.006231284234672785, -2.5748875486897305e-05, -1.5616295058862306e-05, -0.013583138585090637, -0.008440772071480751, -0.005133542697876692, -0.0030272630974650383, -0.005449796095490456, -3.036062479019165, -0.0016987192211672664, -2.2719836235046387, -0.5743626356124878, -0.15178197622299194, -1.4437832832336426, -0.27447351813316345, -0.09588062018156052], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.00975992251187563, -0.059202972799539566, -0.0010300336871296167, -1.1920922133867862e-06, -1.311301275563892e-06, -0.00014494798961095512, -0.1948993057012558], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42, stratify=y)  # Train and test data", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ",", " strat", "ify", "=", "y", ")", "  ", "#", " Train", " and", " test", " data", "\n"], "logprobs": [-0.0017463208641856909, -8.225102646974847e-05, -0.02113872952759266, -0.0002162222663173452, -0.001890778075903654, -9.452849917579442e-05, -0.0003103728231508285, -5.149708886165172e-05, -0.0011370867723599076, -5.471556869451888e-05, -0.0002517383254598826, -0.0008569859201088548, -0.015354756265878677, -1.9073468138230965e-06, -1.9430925021879375e-05, -4.529942543740617e-06, -7.510157047363464e-06, -0.00012540031457319856, -0.18725737929344177, -0.0007028493564575911, -0.004906400106847286, -0.006506094243377447, -0.1919187307357788, -3.3378546504536644e-06, -7.462222856702283e-05, -0.0007553822943009436, -0.02126419171690941, -0.00011228884250158444, -1.4046951532363892, -0.39103877544403076, -0.03195524960756302, -1.5497195136049413e-06, -5.602820692729438e-06, -0.0003120412293355912, -0.12609411776065826, -0.009035295806825161, -2.558917760848999, -1.1296260356903076, -0.039390191435813904, -0.0017043125117197633, -0.14980369806289673, -0.09769555181264877, -1.9239009618759155, -0.0002821285743266344, -4.259563446044922, -1.8082525730133057, -0.11750198155641556, -1.6526068449020386, -0.8976191878318787], "finish_reason": "stop"}, {"text": " LogisticRegression(solver='liblinear')", "tokens": [" Log", "istic", "Reg", "ression", "(", "s", "olver", "='", "lib", "linear", "')", "\n"], "logprobs": [-0.0009966888464987278, -9.059865078597795e-06, -8.594620157964528e-05, -6.079655122448457e-06, -1.7800846099853516, -0.510180652141571, -0.0010577804641798139, -0.02640041708946228, -0.224970743060112, -0.011685376055538654, -0.872668445110321, -0.15897046029567719], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00010883215873036534, -0.00028868322260677814, -0.0006709231529384851, -0.009203863330185413, -0.00029845553217455745, -0.0027110748924314976, -0.0031967272516340017, -0.0004942387458868325, -6.198863957251888e-06, -0.0005376085755415261, -0.021843211725354195], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0024725599214434624, -6.9141146923357155e-06, -0.00098525604698807, -0.000573351513594389, -0.0009302341495640576, -0.0008007657015696168, -0.0017522709676995873, -0.0003693613689392805, -0.016651693731546402], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.008027788251638412, -1.1801649634435307e-05, -4.172316494077677e-06, -0.0025484247598797083, -0.001553996349684894, -0.00019429226813372225, -0.012410086579620838, -0.0028255560901015997, -0.0021365690045058727, -0.00011777184408856556, -9.298280929215252e-06, -0.002775033703073859, -0.026287905871868134], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy"], "logprobs": [-0.03432675451040268], "finish_reason": "stop"}], "metrics": {"energy": 187.90175684356677, "energy_per_token": 1.131938294238354, "time": 8.631451, "time_per_token": 0.05199669277108434}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " len(df[target_column].unique()) != 2:  # Check for binary target values", "tokens": [" len", "(", "df", "[", "target", "_", "column", "]", ".", "unique", "())", " ", "!", "=", " ", "2", ":", "  ", "#", " Check", " for", " binary", " target", " values", "\n"], "logprobs": [-1.648066759109497, -0.0006901028100401163, -0.23900966346263885, -1.3617770671844482, -0.07411544024944305, -5.602820692729438e-06, -6.174850568640977e-05, -0.7786200642585754, -0.0018071286613121629, -0.19327817857265472, -0.021169541403651237, -2.2008750438690186, -1.9907753085135482e-05, -2.884823152271565e-05, -0.009571140632033348, -0.04558643698692322, -0.018147854134440422, -2.537421941757202, -0.0009754904895089567, -1.5604825019836426, -2.181142807006836, -0.6644695401191711, -1.0045138597488403, -2.304089307785034, -0.09812963753938675], "finish_reason": "stop"}, {"text": " ValueError(\"target column not in columns\")", "tokens": [" Value", "Error", "(", "\"", "target", " column", " not", " in", " columns", "\"", ")", "\n"], "logprobs": [-0.4073788821697235, -4.8397800128441304e-05, -0.12861385941505432, -0.8242471218109131, -2.3584342002868652, -2.2388124465942383, -0.32331353425979614, -0.7169007658958435, -1.152820348739624, -0.23255158960819244, -0.0007070187130011618, -0.023048359900712967], "finish_reason": "stop"}, {"text": " df.drop(columns=target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "columns", "=", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0059936074540019035, -0.3269306421279907, -0.5590597987174988, -0.07478568702936172, -0.965922474861145, -0.7221651077270508, -0.006231284234672785, -2.5748875486897305e-05, -1.5616295058862306e-05, -0.013583138585090637, -0.008440772071480751, -0.005133542697876692, -0.0030272630974650383, -0.005449796095490456, -0.1501867175102234], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.00975992251187563, -0.059202972799539566, -0.0010300336871296167, -1.1920922133867862e-06, -1.311301275563892e-06, -0.00014494798961095512, -0.1948993057012558], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)  # Operate on the DataFrame", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "3", ")", "  ", "#", " Oper", "ate", " on", " the", " Data", "Frame", "\n"], "logprobs": [-0.0017463208641856909, -8.225102646974847e-05, -0.02113872952759266, -0.0002162222663173452, -0.001890778075903654, -9.452849917579442e-05, -0.0003103728231508285, -5.149708886165172e-05, -0.0011370867723599076, -5.471556869451888e-05, -0.0002517383254598826, -0.0008569859201088548, -0.015354756265878677, -1.9073468138230965e-06, -1.9430925021879375e-05, -4.529942543740617e-06, -7.510157047363464e-06, -0.00012540031457319856, -0.18725737929344177, -0.0007028493564575911, -0.004906400106847286, -0.006506094243377447, -0.1919187307357788, -3.3378546504536644e-06, -7.462222856702283e-05, -0.0007553822943009436, -0.02126419171690941, -0.00011228884250158444, -1.4046951532363892, -1.6503313779830933, -1.218756914138794, -0.0003190723655279726, -3.1323204040527344, -0.0026051413733512163, -2.376495599746704, -0.46162834763526917, -0.18805904686450958, -0.006524806842207909, -0.4969905614852905], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.0009966888464987278, -9.059865078597795e-06, -8.594620157964528e-05, -6.079655122448457e-06, -0.1847820281982422, -0.058797284960746765], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00010430268594063818, -0.00028689560713246465, -0.0006053998949937522, -0.012273735366761684, -0.0002914242504630238, -0.0033895678352564573, -0.002905910834670067, -0.0005192600074224174, -5.483612312673358e-06, -0.00047469791024923325, -0.025579694658517838], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0024318902287632227, -7.629365427419543e-06, -0.0010645681759342551, -0.0006329201860353351, -0.001167569193057716, -0.0007773000397719443, -0.0022156708873808384, -0.00038532938924618065, -0.01481660082936287], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.009774678386747837, -9.298280929215252e-06, -3.933898824470816e-06, -0.0021871235221624374, -0.0017741668270900846, -0.00020859450160060078, -0.0105555085465312, -0.0023500702809542418, -0.0019406310748308897, -9.917721035890281e-05, -9.298280929215252e-06, -0.0025630502495914698, -0.02204286865890026], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.03375399857759476, -0.4920536279678345], "finish_reason": "stop"}], "metrics": {"energy": 177.02767191123968, "energy_per_token": 1.1801844794082645, "time": 7.7825136, "time_per_token": 0.051883424}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " len(df[target_column]) >= 4:", "tokens": [" len", "(", "df", "[", "target", "_", "column", "])", " >=", " ", "4", ":", "\n"], "logprobs": [-1.648066759109497, -0.0006901028100401163, -0.23900966346263885, -1.3617770671844482, -0.07411544024944305, -5.602820692729438e-06, -6.174850568640977e-05, -0.6198695302009583, -3.2401466369628906, -0.10733122378587723, -3.3354461193084717, -0.46948033571243286, -0.15977022051811218], "finish_reason": "stop"}, {"text": " ValueError('The target column is not present in the DataFrame.')", "tokens": [" Value", "Error", "('", "The", " target", " column", " is", " not", " present", " in", " the", " Data", "Frame", ".", "')", "\n"], "logprobs": [-0.4073788821697235, -4.8397800128441304e-05, -2.171006679534912, -1.9512560367584229, -0.11611822992563248, -0.067269466817379, -0.8368639945983887, -0.118540920317173, -1.8887479305267334, -0.037681348621845245, -0.03954879194498062, -1.7633109092712402, -0.005825801752507687, -0.4061616063117981, -0.04523671045899391, -0.003872159868478775], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.005179083440452814, -0.2710300385951996, -0.5082063674926758, -0.06401999294757843, -0.5540257096290588, -0.00012861855793744326, -4.017272294731811e-05, -0.0004913791781291366, -0.0021012388169765472, -0.006685864180326462, -0.0008454324561171234, -0.007819280959665775, -0.10606702417135239], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.009227722883224487, -0.04450109228491783, -0.0008064831490628421, -1.1920922133867862e-06, -1.6689286894688848e-06, -0.00015186110977083445, -0.17065966129302979], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)  # Using sklearn to split the data", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "  ", "#", " Using", " sklearn", " to", " split", " the", " data", "\n"], "logprobs": [-0.0017328736139461398, -7.855583680793643e-05, -0.015967711806297302, -0.00016890530241653323, -0.0017121669370681047, -0.0001045410826918669, -0.0003274143091402948, -4.756337511935271e-05, -0.0011660212185233831, -5.304672595229931e-05, -0.0002115741081070155, -0.0009473841637372971, -0.011015201918780804, -1.9073468138230965e-06, -1.3828182090946939e-05, -3.3378546504536644e-06, -7.748573807475623e-06, -0.00011860620725201443, -0.22754469513893127, -0.0007073761080391705, -0.00496132206171751, -0.006625115405768156, -0.14624182879924774, -2.3841830625315197e-06, -8.308542601298541e-05, -0.000791236583609134, -0.024346880614757538, -0.0001070442158379592, -0.4515492022037506, -0.7352578043937683, -0.024115798994898796, -1.311301275563892e-06, -6.556489552167477e-06, -0.0002580548170953989, -0.1073824092745781, -0.007939211092889309, -0.08286885172128677, -1.880387544631958, -0.00022980909852776676, -1.8749940395355225, -0.627922534942627, -0.9850024580955505, -0.3281329870223999, -0.7856484651565552, -0.09006371349096298, -0.22202694416046143], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.000959412835072726, -7.271740287251305e-06, -8.880697714630514e-05, -5.006777428206988e-06, -0.219316765666008, -0.044324688613414764], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00010513706365600228, -0.00029595286468975246, -0.0008124388405121863, -0.011876232922077179, -0.0002874914789572358, -0.003158463630825281, -0.002706676023080945, -0.0005277194431982934, -5.722029527532868e-06, -0.0004592079494614154, -0.029018830507993698], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.00257422705180943, -6.198863957251888e-06, -0.0010512308217585087, -0.0006125480867922306, -0.0008419782971031964, -0.0006942722829990089, -0.001899701775982976, -0.000300958170555532, -0.01303096767514944], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.00655962573364377, -8.702239938429557e-06, -4.0531076592742465e-06, -0.002151557244360447, -0.0014629386132583022, -0.00021669900161214173, -0.01313227228820324, -0.002583144698292017, -0.0018176001030951738, -0.00010513706365600228, -9.179073458653875e-06, -0.002317720791324973, -0.029818108305335045], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.03319878876209259, -0.39929986000061035], "finish_reason": "stop"}], "metrics": {"energy": 166.36374762248994, "energy_per_token": 1.1317261743026525, "time": 7.7637787, "time_per_token": 0.05281482108843537}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " not isinstance(target_column, str):", "tokens": [" not", " isinstance", "(", "target", "_", "column", ",", " str", "):", "\n"], "logprobs": [-2.58732533454895, -1.054103970527649, -0.0004217927053105086, -0.655785083770752, -0.00034731553751043975, -0.0001161031104857102, -0.00020323118951637298, -0.04015408456325531, -0.2290974110364914, -0.024018974974751472], "finish_reason": "stop"}, {"text": " Exception('Target column is not in the input data')", "tokens": [" Exception", "('", "Target", " column", " is", " not", " in", " the", " input", " data", "')", "\n"], "logprobs": [-1.463489294052124, -1.5210055112838745, -1.1615877151489258, -0.05591947212815285, -2.460846424102783, -0.17527469992637634, -0.474197119474411, -0.4597465991973877, -3.7044687271118164, -0.25333428382873535, -0.5164223313331604, -0.0077989366836845875], "finish_reason": "stop"}, {"text": " df.drop(columns=[target_column])", "tokens": [" df", ".", "drop", "(", "columns", "=[", "target", "_", "column", "])", "\n"], "logprobs": [-0.005329211708158255, -0.24382904171943665, -0.4588339328765869, -0.07388793677091599, -0.9316440224647522, -0.7785005569458008, -0.0017540559638291597, -4.410734163684538e-06, -5.364403477869928e-06, -1.0795328617095947, -0.08854947239160538], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.009400391019880772, -0.04697922244668007, -0.0008250646642409265, -1.1920922133867862e-06, -1.6689286894688848e-06, -0.00014399446081370115, -0.20532482862472534], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.0016989572905004025, -6.532455881824717e-05, -0.021592535078525543, -0.0002094287920044735, -0.0020060669630765915, -0.0001006075763143599, -0.0003620922507252544, -5.352353764465079e-05, -0.0011630444787442684, -5.566918844124302e-05, -0.000228140561375767, -0.0009665584657341242, -0.017320914193987846, -2.0265558760002023e-06, -1.6331539882230572e-05, -3.3378546504536644e-06, -7.867782187531702e-06, -0.00012027494085486978, -2.1229069232940674], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.0008630603551864624, -7.986990567587782e-06, -8.487341256113723e-05, -5.245195097813848e-06, -0.18885453045368195, -0.04555602744221687], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00010740180005086586, -0.00025090406415984035, -0.0007127366843633354, -0.012190715409815311, -0.0003424296446610242, -0.002979365875944495, -0.002889032242819667, -0.0006607971154153347, -5.8412379075889476e-06, -0.0003923600015696138, -0.02193698100745678], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.002537604421377182, -7.629365427419543e-06, -0.0010760000441223383, -0.0005442806868813932, -0.0008228015503846109, -0.0006491222884505987, -0.001496029901318252, -0.00036483307485468686, -0.017621388658881187], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.007382493000477552, -1.2516897186287679e-05, -4.291525328881107e-06, -0.0027743205428123474, -0.0019739444833248854, -0.00020108585886191577, -0.012511808425188065, -0.002795837353914976, -0.0019488405669108033, -8.856858039507642e-05, -9.417489309271332e-06, -0.00288249459117651, -0.02625609003007412], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.039083003997802734, -0.4150438904762268], "finish_reason": "stop"}], "metrics": {"energy": 142.20250153160094, "energy_per_token": 1.2811036174018102, "time": 6.332073, "time_per_token": 0.057045702702702705}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " 'target' in df.columns:", "tokens": [" '", "target", "'", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-1.9732906818389893, -0.16231466829776764, -0.01155894249677658, -0.41769057512283325, -0.5966598987579346, -0.13069963455200195, -0.01034611277282238, -0.02060437947511673, -0.06589552015066147], "finish_reason": "stop"}, {"text": " ValueError(f\"{target_column} column is missing from the DataFrame.\")", "tokens": [" Value", "Error", "(", "f", "\"", "{", "target", "_", "column", "}", " column", " is", " missing", " from", " the", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.4073788821697235, -4.8397800128441304e-05, -0.12861385941505432, -0.654987096786499, -0.1317870318889618, -1.7221033573150635, -0.00280962698161602, -0.00016330339713022113, -0.0004292996891308576, -0.012641770765185356, -3.0767407417297363, -1.6781644821166992, -2.0420401096343994, -1.4502147436141968, -0.4769580662250519, -1.1472463607788086, -0.013035791926085949, -0.8343936800956726, -0.054695308208465576, -0.0002915434306487441, -0.005426913499832153], "finish_reason": "stop"}, {"text": " df[columns[:-1]]  # X: data without target column", "tokens": [" df", "[", "columns", "[:", "-", "1", "]]", "  ", "#", " X", ":", " data", " without", " target", " column", "\n"], "logprobs": [-0.0059936074540019035, -1.414828896522522, -0.32273972034454346, -0.10948757082223892, -0.039623383432626724, -0.0018473479431122541, -0.0008247073274105787, -2.0216689109802246, -0.0004990047891624272, -2.7535858154296875, -3.1464006900787354, -2.5579307079315186, -1.0888229608535767, -0.5491009950637817, -0.2292177975177765, -0.12891936302185059], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.008952360600233078, -0.05272660031914711, -0.000824230897706002, -1.0728830375228426e-06, -1.6689286894688848e-06, -0.00013600854435935616, -0.18756446242332458], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "3", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0016110072610899806, -6.615896563744172e-05, -0.01811121217906475, -0.00020716428116429597, -0.0020872014574706554, -9.524368942948058e-05, -0.00036352223833091557, -4.684815212385729e-05, -0.0010062160436064005, -5.7338023907504976e-05, -0.00023934361524879932, -0.000892121868673712, -0.013829248026013374, -2.145764938177308e-06, -1.2278481335670222e-05, -4.172316494077677e-06, -7.390948667307384e-06, -0.00011169286881340668, -0.2092147171497345, -0.0007402540650218725, -0.004748022183775902, -0.007196812424808741, -0.20500460267066956, -3.3378546504536644e-06, -7.533743337262422e-05, -0.0008119623525999486, -0.025326348841190338, -0.0001234931987710297, -1.4574692249298096, -0.4243733286857605, -0.03915373235940933, -1.4305104514278355e-06, -5.483612312673358e-06, -0.0003387354372534901, -0.13340960443019867, -0.0097454022616148, -0.08611112087965012, -0.15220990777015686], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.000987756997346878, -8.34461570775602e-06, -8.83301836438477e-05, -5.245195097813848e-06, -0.17733147740364075, -0.04552265256643295], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00010930894495686516, -0.00037579628406092525, -0.0007794441189616919, -0.01240172702819109, -0.0002795067266561091, -0.0030666012316942215, -0.002978177275508642, -0.00047124247066676617, -6.318072337307967e-06, -0.0004624251159839332, -0.025988861918449402], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0029986200388520956, -6.6756979322235566e-06, -0.0010356307029724121, -0.0005480932886712253, -0.0011544713051989675, -0.0009059377480298281, -0.0026429505087435246, -0.0003995097358711064, -0.014087284915149212], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.008869417943060398, -1.1920858014491387e-05, -4.172316494077677e-06, -0.003036533249542117, -0.0017057405784726143, -0.00017295771976932883, -0.014794635586440563, -0.0030999958980828524, -0.0017080017132684588, -9.417090768693015e-05, -8.34461570775602e-06, -0.0030473482329398394, -0.02634584717452526], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.03744276240468025, -0.46060827374458313], "finish_reason": "stop"}], "metrics": {"energy": 195.85049409961698, "energy_per_token": 1.3695838748224964, "time": 8.816523, "time_per_token": 0.06165400699300699}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " df[target_column].isna().any():", "tokens": [" df", "[", "target", "_", "column", "]", ".", "is", "na", "()", ".", "any", "():", "\n"], "logprobs": [-2.832179307937622, -0.9125195741653442, -0.056386612355709076, -1.0847986231965479e-05, -5.185469490243122e-05, -0.01161526795476675, -0.0029042467940598726, -1.893774390220642, -0.6453448534011841, -0.0012362702982500196, -0.0006046851049177349, -0.14950481057167053, -0.1494053304195404, -0.13990330696105957], "finish_reason": "stop"}, {"text": " ValueError(\"Target column not found in the data.\")", "tokens": [" Value", "Error", "(", "\"", "Target", " column", " not", " found", " in", " the", " data", ".", "\"", ")", "\n"], "logprobs": [-0.4073788821697235, -4.8397800128441304e-05, -0.12861385941505432, -0.8242471218109131, -0.5332179069519043, -0.010567540302872658, -0.15576817095279694, -0.3447830080986023, -0.2214733213186264, -0.860053539276123, -0.9057944416999817, -0.5077266097068787, -0.033395037055015564, -0.00016318420239258558, -0.004662713035941124], "finish_reason": "stop"}, {"text": " df[columns[:-1]]", "tokens": [" df", "[", "columns", "[:", "-", "1", "]]", "\n"], "logprobs": [-0.0059936074540019035, -1.414828896522522, -0.32273972034454346, -0.10948757082223892, -0.039623383432626724, -0.0018473479431122541, -0.0008247073274105787, -0.3556455373764038], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.008952360600233078, -0.05272660031914711, -0.000824230897706002, -1.0728830375228426e-06, -1.6689286894688848e-06, -0.00013600854435935616, -0.18756446242332458], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0016110072610899806, -6.615896563744172e-05, -0.01811121217906475, -0.00020716428116429597, -0.0020872014574706554, -9.524368942948058e-05, -0.00036352223833091557, -4.684815212385729e-05, -0.0010062160436064005, -5.7338023907504976e-05, -0.00023934361524879932, -0.000892121868673712, -0.013829248026013374, -2.145764938177308e-06, -1.2278481335670222e-05, -4.172316494077677e-06, -7.390948667307384e-06, -0.00011169286881340668, -0.2092147171497345, -0.0007402540650218725, -0.004748022183775902, -0.007196812424808741, -0.20500460267066956, -3.3378546504536644e-06, -7.533743337262422e-05, -0.0008119623525999486, -0.025326348841190338, -0.0001234931987710297, -0.441365510225296, -0.758975088596344, -0.02372460626065731, -1.1920922133867862e-06, -5.8412379075889476e-06, -0.0002522150462027639, -0.12149694561958313, -0.00810098648071289, -0.08253785222768784, -0.18522757291793823], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.0008950994815677404, -9.894321920000948e-06, -9.083335316972807e-05, -4.887569048150908e-06, -0.18623383343219757, -0.04250168055295944], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00010585224663373083, -0.00026520551182329655, -0.0008248264202848077, -0.010201101191341877, -0.00033945043105632067, -0.0025227407459169626, -0.00274757225997746, -0.0004468158003874123, -6.198863957251888e-06, -0.00039188333903439343, -0.02119218371808529], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0029254043474793434, -7.271740287251305e-06, -0.0010520643554627895, -0.0006324436399154365, -0.0009190387791022658, -0.0007139279623515904, -0.002156077418476343, -0.0003573255962692201, -0.014684218913316727], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.008106308057904243, -1.0132738680113107e-05, -4.768360213347478e-06, -0.00207673292607069, -0.0016721803694963455, -0.00024577934527769685, -0.010217857547104359, -0.0024585279170423746, -0.0016986002447083592, -0.00010907054820563644, -9.536697689327411e-06, -0.0026570989284664392, -0.024165719747543335], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.032251473516225815, -0.4040623903274536], "finish_reason": "stop"}], "metrics": {"energy": 205.0992268123627, "energy_per_token": 1.5305912448683783, "time": 8.404703, "time_per_token": 0.06272166417910448}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " len(df.index) < 5:", "tokens": [" len", "(", "df", ".", "index", ")", " <", " ", "5", ":", "\n"], "logprobs": [-1.648066759109497, -0.0006901028100401163, -0.23900966346263885, -1.1946780681610107, -1.7707178592681885, -0.02692645788192749, -0.5380464792251587, -0.04185996949672699, -1.490307331085205, -0.9033446311950684, -0.11900320649147034], "finish_reason": "stop"}, {"text": " ValueError(f\"{target_column} is not a valid column name.\")", "tokens": [" Value", "Error", "(", "f", "\"", "{", "target", "_", "column", "}", " is", " not", " a", " valid", " column", " name", ".", "\"", ")", "\n"], "logprobs": [-0.4073788821697235, -4.8397800128441304e-05, -0.12861385941505432, -0.654987096786499, -0.1317870318889618, -1.7221033573150635, -0.00280962698161602, -0.00016330339713022113, -0.0004292996891308576, -0.012641770765185356, -0.3771958351135254, -0.014499183744192123, -0.3985084593296051, -0.7781146764755249, -0.0989638939499855, -0.6461227536201477, -0.43016183376312256, -0.15189044177532196, -0.00024029705673456192, -0.006395586766302586], "finish_reason": "stop"}, {"text": " df.iloc[:, 0:3]  # Get the columns for X (independent features)", "tokens": [" df", ".", "il", "oc", "[:", ",", " ", "0", ":", "3", "]", "  ", "#", " Get", " the", " columns", " for", " X", " (", "independent", " features", ")", "\n"], "logprobs": [-0.0059936074540019035, -0.3269306421279907, -1.2165820598602295, -0.0001137191939051263, -0.0008469808381050825, -0.0008945039589889348, -2.5984089374542236, -0.11965176463127136, -0.9835100769996643, -0.5584712028503418, -0.0008441222598776221, -1.9810487031936646, -0.001004667836241424, -3.729055881500244, -0.524037778377533, -2.230153799057007, -2.1203794479370117, -0.8209654092788696, -2.337406873703003, -1.6049349308013916, -2.6280317306518555, -0.024480780586600304, -0.04812096059322357], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.011390064842998981, -0.05196002870798111, -0.0008749709231778979, -1.0728830375228426e-06, -1.7881377516459906e-06, -0.00013028726971242577, -0.18576458096504211], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0018845908343791962, -6.723177648382261e-05, -0.021220777183771133, -0.00018618757894728333, -0.0018173621501773596, -9.440929716220126e-05, -0.0003948624071199447, -6.01988795096986e-05, -0.0008997444529086351, -5.543078441405669e-05, -0.00024768622824922204, -0.0009563163621351123, -0.016854146495461464, -2.0265558760002023e-06, -1.4781842764932662e-05, -4.172316494077677e-06, -7.748573807475623e-06, -0.00012373158824630082, -0.17655853927135468, -0.0007034449372440577, -0.004532895982265472, -0.007217997685074806, -2.4419801235198975, -1.5497195136049413e-06, -1.0013530300057027e-05, -0.0003519630990922451, -0.20664863288402557, -0.006004864815622568, -0.5520612001419067, -0.20137152075767517], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.0009682258241809905, -6.556489552167477e-06, -8.916457591112703e-05, -4.887569048150908e-06, -0.1650482565164566, -0.04883575811982155], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00011812942830147222, -0.0002743821241892874, -0.0005315321614034474, -0.00934122409671545, -0.00029392691794782877, -0.002380040008574724, -0.0031373111996799707, -0.0006089740199968219, -6.556489552167477e-06, -0.0004893536097370088, -0.024549877271056175], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.002715830225497484, -6.556489552167477e-06, -0.0010288427583873272, -0.0005013877525925636, -0.001073856488801539, -0.0006428082706406713, -0.0016338583081960678, -0.00033456450910307467, -0.013782335445284843], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.008358614519238472, -1.2516897186287679e-05, -4.529942543740617e-06, -0.0021068297792226076, -0.0015261442167684436, -0.00021991695393808186, -0.01285362895578146, -0.0031369547359645367, -0.0016643255949020386, -9.560128091834486e-05, -9.059865078597795e-06, -0.002702158410102129, -0.02825414389371872], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.03372080624103546, -0.3866722285747528], "finish_reason": "stop"}], "metrics": {"energy": 194.3544624481201, "energy_per_token": 1.359122115021819, "time": 8.826877, "time_per_token": 0.061726412587412585}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " len(df[target_column]) <= 1:", "tokens": [" len", "(", "df", "[", "target", "_", "column", "])", " <=", " ", "1", ":", "\n"], "logprobs": [-1.648066759109497, -0.0006901028100401163, -0.23900966346263885, -1.3617770671844482, -0.07411544024944305, -5.602820692729438e-06, -6.174850568640977e-05, -0.6198695302009583, -3.1608619689941406, -0.02085985615849495, -0.6097478866577148, -0.20309975743293762, -0.09627197682857513], "finish_reason": "stop"}, {"text": " Exception('Column not found')", "tokens": [" Exception", "('", "Column", " not", " found", "')", "\n"], "logprobs": [-1.463489294052124, -1.5210055112838745, -2.3909387588500977, -1.0209165811538696, -0.31319350004196167, -0.5581408739089966, -0.011064366437494755], "finish_reason": "stop"}, {"text": " df.drop(columns=target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "columns", "=", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.005329211708158255, -0.24382904171943665, -0.4588339328765869, -0.07388793677091599, -0.9316440224647522, -0.6821889877319336, -0.005160582717508078, -1.966933996300213e-05, -1.4543427823809907e-05, -0.008133267052471638, -0.007249715272337198, -0.0046617635525763035, -0.002604427980259061, -0.005856378935277462, -0.13278765976428986], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.00813208520412445, -0.038947831839323044, -0.0007096394547261298, -1.0728830375228426e-06, -1.4305104514278355e-06, -0.00015352977789007127, -0.1825459897518158], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ")", "\n"], "logprobs": [-0.001725257490761578, -8.844937838148326e-05, -0.018759801983833313, -0.00018654513405635953, -0.0016639686655253172, -7.950943836476654e-05, -0.0002851079625543207, -4.410646579344757e-05, -0.0011536378879100084, -4.8874615458771586e-05, -0.000219321038457565, -0.0008578196284361184, -0.014536898583173752, -2.145764938177308e-06, -1.5735502529423684e-05, -4.0531076592742465e-06, -7.510157047363464e-06, -0.00012289722508285195, -0.1849728673696518, -0.0006216024048626423, -0.004101199563592672, -0.007246875204145908, -0.13960599899291992, -2.622600959512056e-06, -8.082063141046092e-05, -0.0007227431051433086, -0.026702703908085823, -0.00013934595335740596, -0.4711190462112427, -2.078115701675415, -0.4683372676372528], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.000959531927946955, -7.390948667307384e-06, -9.274052717955783e-05, -6.079655122448457e-06, -0.20087489485740662, -0.04069022461771965], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00010430268594063818, -0.00031835734262131155, -0.000723576988093555, -0.007412194274365902, -0.0002836778585333377, -0.001953361788764596, -0.0027051304932683706, -0.0004967409186065197, -6.6756979322235566e-06, -0.0004909025738015771, -0.025338901206851006], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0029074561316519976, -7.152531907195225e-06, -0.001016576774418354, -0.0006428082706406713, -0.0010899323970079422, -0.0008339979685842991, -0.002141208155080676, -0.0003844952443614602, -0.013960214331746101], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.008109737187623978, -1.0967194612021558e-05, -4.0531076592742465e-06, -0.0021205099765211344, -0.0015918452991172671, -0.0002543602604418993, -0.010505493730306625, -0.003072781255468726, -0.001652424456551671, -0.00010072677832795307, -7.986990567587782e-06, -0.002561979927122593, -0.025937173515558243], "finish_reason": "stop"}, {"text": " accuracy<|endoftext|>from ...common import *", "tokens": [" accuracy", "<", "|", "end", "of", "text", "|>", "from", " ", ".", ".", ".", "common", " import", " *", "\n"], "logprobs": [-0.03474168851971626, -1.4902923107147217, -1.5497195136049413e-06, -9.536738616588991e-07, -8.701899787411094e-05, -0.0001463782973587513, -0.07763957232236862, -1.1747303009033203, -2.8032686710357666, -0.012874459847807884, -1.7869082689285278, -2.105482578277588, -4.025836944580078, -0.6649064421653748, -2.3528313636779785, -0.026008840650320053], "finish_reason": "stop"}], "metrics": {"energy": 155.46640200710294, "energy_per_token": 1.1184633237921076, "time": 7.35128, "time_per_token": 0.052886906474820146}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " target_column not in df.columns:", "tokens": [" target", "_", "column", " not", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.7875893712043762, -0.0005797850899398327, -0.00015960850578267127, -0.5571626424789429, -5.1020273531321436e-05, -0.4546641707420349, -0.16808488965034485, -0.015368608757853508, -0.006739267613738775, -0.018085690215229988], "finish_reason": "stop"}, {"text": " ValueError(f'Column {target_column} not found in data.')", "tokens": [" Value", "Error", "(", "f", "'", "Column", " {", "target", "_", "column", "}", " not", " found", " in", " data", ".", "')", "\n"], "logprobs": [-0.3869268000125885, -4.410646579344757e-05, -0.12171101570129395, -0.6874304413795471, -2.3509488105773926, -2.0417404174804688, -0.38599297404289246, -0.0019116000039502978, -0.00013565097469836473, -0.0002727136597968638, -0.04782383143901825, -0.2517080307006836, -0.3483809530735016, -0.38270580768585205, -1.1214958429336548, -0.8834733366966248, -0.03202429041266441, -0.004139427095651627], "finish_reason": "stop"}, {"text": " df.drop(columns=target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "columns", "=", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.005540728569030762, -0.2661079168319702, -0.47886842489242554, -0.07585856318473816, -0.9533334374427795, -0.629697859287262, -0.00619834940880537, -2.539125671319198e-05, -1.2636104656849056e-05, -0.012452943250536919, -0.007902429439127445, -0.00451485812664032, -0.002372428774833679, -0.0065141478553414345, -0.15209145843982697], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.010445330291986465, -0.04804915562272072, -0.0007459718617610633, -1.4305104514278355e-06, -1.9073468138230965e-06, -0.00013624693383462727, -0.18908782303333282], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.001471271039918065, -6.067568756407127e-05, -0.01916954666376114, -0.00020013237372040749, -0.001987864263355732, -9.48860906646587e-05, -0.0002628219372127205, -5.173549288883805e-05, -0.0010409895330667496, -5.4238757002167404e-05, -0.00024530262453481555, -0.0009689403814263642, -0.011883772909641266, -2.0265558760002023e-06, -1.6927575416048057e-05, -3.933898824470816e-06, -6.794906312279636e-06, -0.00012563870404846966, -1.8979607820510864], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.0010090741561725736, -7.986990567587782e-06, -8.987976616481319e-05, -4.768360213347478e-06, -0.19430357217788696, -0.045916229486465454], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00010322991875000298, -0.0003046525234822184, -0.0007117837085388601, -0.009820480830967426, -0.00025006983196362853, -0.0023629143834114075, -0.0024947968777269125, -0.00046921687317080796, -6.079655122448457e-06, -0.0004568248405121267, -0.023163681849837303], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0031604839023202658, -6.794906312279636e-06, -0.001081358641386032, -0.0005448763840831816, -0.001095171901397407, -0.0006195771275088191, -0.001853654277510941, -0.0003203832311555743, -0.012487085536122322], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.008588284254074097, -1.156323378381785e-05, -4.410734163684538e-06, -0.0020704278722405434, -0.0018450870411470532, -0.00018225439998786896, -0.011033358983695507, -0.00274757225997746, -0.0018918488640338182, -0.00010632903286023065, -9.059865078597795e-06, -0.0020913651678711176, -0.024037247523665428], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.03288877010345459, -0.41416046023368835], "finish_reason": "stop"}], "metrics": {"energy": 191.88987851142886, "energy_per_token": 1.5858667645572633, "time": 7.967231, "time_per_token": 0.06584488429752067}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " target_column not in columns:", "tokens": [" target", "_", "column", " not", " in", " columns", ":", "\n"], "logprobs": [-0.7875893712043762, -0.0005797850899398327, -0.00015960850578267127, -0.5571626424789429, -5.1020273531321436e-05, -1.0379314422607422, -0.010058548301458359, -0.02730085700750351], "finish_reason": "stop"}, {"text": " ValueError(f\"'{target_column}' is not a column name in data\")", "tokens": [" Value", "Error", "(", "f", "\"", "'{", "target", "_", "column", "}'", " is", " not", " a", " column", " name", " in", " data", "\"", ")", "\n"], "logprobs": [-0.3869268000125885, -4.410646579344757e-05, -0.12171101570129395, -0.6874304413795471, -0.1121431291103363, -3.8141748905181885, -0.0018311651656404138, -0.00021145492792129517, -0.0002851079625543207, -0.0034048936795443296, -0.23628447949886322, -0.013817019760608673, -0.28917184472084045, -1.1038721799850464, -1.515418529510498, -0.6638026237487793, -2.4932329654693604, -1.192584753036499, -0.0005704921204596758, -0.0077111669816076756], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.005540728569030762, -0.2661079168319702, -0.47886842489242554, -0.07585856318473816, -0.4948583245277405, -0.00014685506175737828, -3.123234637314454e-05, -0.0003682888636831194, -0.0022998806089162827, -0.006729913409799337, -0.0010405131615698338, -0.006677101366221905, -0.11662577092647552], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.0084232771769166, -0.05149161070585251, -0.0011210116790607572, -1.1920922133867862e-06, -1.7881377516459906e-06, -0.0001234931987710297, -0.18568024039268494], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "1", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.001632549217902124, -7.068861305015162e-05, -0.017100272700190544, -0.00016819016309455037, -0.0019920284394174814, -0.0001037067049765028, -0.00031871485407464206, -5.3881147323409095e-05, -0.0011375630274415016, -5.4238757002167404e-05, -0.00029237763374112546, -0.0009667966514825821, -0.01261928677558899, -2.264974000354414e-06, -1.3470558769768104e-05, -2.7418097943154862e-06, -7.033323527139146e-06, -0.00010394509445177391, -0.19221003353595734, -0.0006070678355172276, -0.0043884641490876675, -0.006677693221718073, -0.15481020510196686, -2.145764938177308e-06, -6.794698856538162e-05, -0.0007269124034792185, -0.024584190919995308, -0.00011812942830147222, -2.377553939819336, -0.59513258934021, -0.029683183878660202, -2.145764938177308e-06, -5.364403477869928e-06, -0.00025781645672395825, -0.12048421800136566, -0.006741991266608238, -0.08475527912378311, -0.18215936422348022], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.0009632238652557135, -7.152531907195225e-06, -8.046303264563903e-05, -6.318072337307967e-06, -0.16697777807712555, -0.051669470965862274], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00011431517486926168, -0.00025006983196362853, -0.0007925468380562961, -0.011462545022368431, -0.0002867764269467443, -0.002507758093997836, -0.002861692802980542, -0.00045694399159401655, -7.629365427419543e-06, -0.0004189328756183386, -0.02326466329395771], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.002806536154821515, -7.510157047363464e-06, -0.0009078433504328132, -0.0004764852055814117, -0.0010286045726388693, -0.0007129749283194542, -0.0019614521879702806, -0.00033182359766215086, -0.015227142721414566], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.007038796786218882, -1.0967194612021558e-05, -4.291525328881107e-06, -0.001789517467841506, -0.0018106985371559858, -0.00019464982324279845, -0.014085874892771244, -0.0025132279843091965, -0.0019397982396185398, -0.00010311071673640981, -9.536697689327411e-06, -0.0030525776091963053, -0.023061174899339676], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.0449158139526844, -0.38028183579444885], "finish_reason": "stop"}], "metrics": {"energy": 164.98333578681945, "energy_per_token": 1.1955314187450685, "time": 7.58188, "time_per_token": 0.054941159420289855}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " not isinstance(df.index, pd.RangeIndex):", "tokens": [" not", " isinstance", "(", "df", ".", "index", ",", " pd", ".", "Range", "Index", "):", "\n"], "logprobs": [-2.58732533454895, -1.054103970527649, -0.0004217927053105086, -1.301708698272705, -2.416360378265381, -1.2873482704162598, -0.029919808730483055, -0.0668642446398735, -5.2689116273541003e-05, -0.09638965129852295, -3.957670196541585e-05, -0.11662407219409943, -0.08264520019292831], "finish_reason": "stop"}, {"text": " ValueError(\"Column not in df\")", "tokens": [" Value", "Error", "(", "\"", "Column", " not", " in", " df", "\"", ")", "\n"], "logprobs": [-0.4073788821697235, -4.8397800128441304e-05, -0.12861385941505432, -0.8242471218109131, -3.089414119720459, -1.036177635192871, -1.9471062421798706, -3.759340286254883, -0.8626032471656799, -0.0016411182004958391, -0.015898138284683228], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0059936074540019035, -0.3269306421279907, -0.5590597987174988, -0.07478568702936172, -0.4857741594314575, -0.00015758226800244302, -3.45700973412022e-05, -0.00036483307485468686, -0.0024278471246361732, -0.006457297131419182, -0.0010620674584060907, -0.007429470308125019, -0.1049625501036644], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.008399752900004387, -0.04596598446369171, -0.0009747759322635829, -1.1920922133867862e-06, -1.5497195136049413e-06, -0.00013052565918769687, -0.18385037779808044], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)  # Use the train_test_split function", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", "5", ",", " random", "_", "state", "=", "4", "2", ")", "  ", "#", " Use", " the", " train", "_", "test", "_", "split", " function", "\n"], "logprobs": [-0.001705264556221664, -6.294052582234144e-05, -0.0180230550467968, -0.00014888131408952177, -0.0020824430976063013, -8.749579137656838e-05, -0.00042822727118618786, -5.0424259825376794e-05, -0.0011717366287484765, -5.1020273531321436e-05, -0.00021419614495243877, -0.0009664393728598952, -0.013879919424653053, -2.3841830625315197e-06, -1.6927575416048057e-05, -3.6954811548639555e-06, -8.106198947643861e-06, -0.0001161031104857102, -0.26829251646995544, -0.0007943335804156959, -0.004584872163832188, -0.0064610871486365795, -0.1399405151605606, -3.099436753473128e-06, -6.532455881824717e-05, -0.000788139586802572, -0.02299593575298786, -0.0001426833332516253, -0.4486291706562042, -0.9454207420349121, -0.3421163260936737, -0.03835706785321236, -2.861018856492592e-06, -5.125986263010418e-06, -0.00021646064124070108, -0.1072186827659607, -0.008743454702198505, -0.07448962330818176, -1.945510983467102, -0.00028951745480298996, -2.180211305618286, -1.5851722955703735, -0.9387375116348267, -0.5736001133918762, -0.003263150341808796, -0.002518816851079464, -0.00109112320933491, -0.35257142782211304, -1.1870543956756592], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.001032772590406239, -8.34461570775602e-06, -9.63164638960734e-05, -5.006777428206988e-06, -0.19570526480674744, -0.04817378893494606], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-9.405170567333698e-05, -0.000271879427600652, -0.0006606780225411057, -0.009304966777563095, -0.000310730334604159, -0.00250894739292562, -0.002676597097888589, -0.0006162413046695292, -6.6756979322235566e-06, -0.0004499138449318707, -0.024437855929136276], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0029569019097834826, -7.390948667307384e-06, -0.0009168949909508228, -0.0004409771354403347, -0.0010619483655318618, -0.0007463291985914111, -0.001657304004766047, -0.00032360086333937943, -0.01199709065258503], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.007396811153739691, -1.156323378381785e-05, -4.410734163684538e-06, -0.001630882965400815, -0.0018390186596661806, -0.00020251607929822057, -0.014763391576707363, -0.0033521433360874653, -0.0018581758486106992, -0.00010525626566959545, -8.106198947643861e-06, -0.0031171089503914118, -0.023490702733397484], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.03940875828266144, -0.46124598383903503], "finish_reason": "stop"}], "metrics": {"energy": 179.42624714088436, "energy_per_token": 1.2374223940750646, "time": 7.781108, "time_per_token": 0.05366281379310345}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " len(columns) <= 4:", "tokens": [" len", "(", "columns", ")", " <=", " ", "4", ":", "\n"], "logprobs": [-1.648066759109497, -0.0006901028100401163, -2.0284173488616943, -0.011327126063406467, -2.943175792694092, -0.02841544710099697, -2.7730817794799805, -0.07693591713905334, -0.16992820799350739], "finish_reason": "stop"}, {"text": " ValueError(f\"Target column '{target_column}' not found.\")", "tokens": [" Value", "Error", "(", "f", "\"", "Target", " column", " '", "{", "target", "_", "column", "}'", " not", " found", ".", "\"", ")", "\n"], "logprobs": [-0.4073788821697235, -4.8397800128441304e-05, -0.12861385941505432, -0.654987096786499, -0.1317870318889618, -0.9640047550201416, -0.014012525789439678, -1.0052083730697632, -0.0016952680889517069, -0.0006449526408687234, -0.00024625606602057815, -0.00019131260341964662, -0.001259129960089922, -0.1256321519613266, -0.3856484293937683, -2.1602749824523926, -0.09123688191175461, -0.00012206286191940308, -0.004720377270132303], "finish_reason": "stop"}, {"text": " df.drop(target_column, axis=1)", "tokens": [" df", ".", "drop", "(", "target", "_", "column", ",", " axis", "=", "1", ")", "\n"], "logprobs": [-0.0059936074540019035, -0.3269306421279907, -0.5590597987174988, -0.07478568702936172, -0.4857741594314575, -0.00015758226800244302, -3.45700973412022e-05, -0.00036483307485468686, -0.0024278471246361732, -0.006457297131419182, -0.0010620674584060907, -0.007429470308125019, -0.1049625501036644], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.008399752900004387, -0.04596598446369171, -0.0009747759322635829, -1.1920922133867862e-06, -1.5497195136049413e-06, -0.00013052565918769687, -0.18385037779808044], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "\n"], "logprobs": [-0.001705264556221664, -6.294052582234144e-05, -0.0180230550467968, -0.00014888131408952177, -0.0020824430976063013, -8.749579137656838e-05, -0.00042822727118618786, -5.0424259825376794e-05, -0.0011717366287484765, -5.1020273531321436e-05, -0.00021419614495243877, -0.0009664393728598952, -0.013879919424653053, -2.3841830625315197e-06, -1.6927575416048057e-05, -3.6954811548639555e-06, -8.106198947643861e-06, -0.0001161031104857102, -1.490601658821106], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.0008743754005990922, -8.22540732769994e-06, -8.654219709569588e-05, -5.602820692729438e-06, -0.23337742686271667, -0.05348297581076622], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.0001072826053132303, -0.000256982195423916, -0.0008360228384844959, -0.012076476588845253, -0.00031871485407464206, -0.0025981261860579252, -0.003239148296415806, -0.00047946401173248887, -5.722029527532868e-06, -0.0004786299541592598, -0.023433063179254532], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0031628606375306845, -7.748573807475623e-06, -0.001010384177789092, -0.0005874100024811924, -0.0009635811438784003, -0.000668659748043865, -0.0024540091399103403, -0.00030870441696606576, -0.012416327372193336], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.0070527647621929646, -1.1444026313256472e-05, -4.291525328881107e-06, -0.00227276305668056, -0.0020035686902701855, -0.00019369633810129017, -0.010453588329255581, -0.002600028645247221, -0.0015829188050702214, -9.142934868577868e-05, -8.106198947643861e-06, -0.0025937268510460854, -0.024044228717684746], "finish_reason": "stop"}, {"text": " accuracy<|endoftext|>import pandas as pd", "tokens": [" accuracy", "<", "|", "end", "of", "text", "|>", "import", " pandas", " as", " pd", "\n"], "logprobs": [-0.036389004439115524, -1.5901243686676025, -1.1920922133867862e-06, -1.0728830375228426e-06, -4.7205765440594405e-05, -0.0001760566228767857, -0.09314627200365067, -1.135746955871582, -1.5869439840316772, -0.024110097438097, -0.0018339019734412432, -0.003956467844545841], "finish_reason": "stop"}], "metrics": {"energy": 200.15964150238028, "energy_per_token": 1.5516251279254285, "time": 8.183715, "time_per_token": 0.0634396511627907}}
{"outputs": [{"text": " pd.DataFrame(data, columns=columns)", "tokens": [" pd", ".", "DataFrame", "(", "data", ",", " columns", "=", "columns", ")", "\n"], "logprobs": [-0.00982366781681776, -0.00010132275929208845, -0.003190310439094901, -0.004728326573967934, -0.01800689660012722, -0.13713347911834717, -0.004312620032578707, -0.008982723578810692, -0.0017351347487419844, -0.008556254208087921, -0.06713838875293732], "finish_reason": "stop"}, {"text": " target_column in df.columns:", "tokens": [" target", "_", "column", " in", " df", ".", "columns", ":", "\n"], "logprobs": [-0.7875893712043762, -0.0005797850899398327, -0.00015960850578267127, -1.1191438436508179, -0.6040129661560059, -0.15874743461608887, -0.008984141983091831, -0.010743398219347, -0.02845078706741333], "finish_reason": "stop"}, {"text": " ValueError(\"Target column is not in the columns list\")", "tokens": [" Value", "Error", "(", "\"", "Target", " column", " is", " not", " in", " the", " columns", " list", "\"", ")", "\n"], "logprobs": [-0.44654691219329834, -5.280832192511298e-05, -0.12638789415359497, -0.7956593036651611, -0.5562909841537476, -0.011068728752434254, -3.087999105453491, -0.11137856543064117, -0.4161265790462494, -0.3609093427658081, -1.5829222202301025, -0.25602489709854126, -0.730462908744812, -0.0006338732782751322, -0.008720293641090393], "finish_reason": "stop"}, {"text": " df.iloc[:, df.columns != target_column]  # X is a DataFrame with the columns except target column", "tokens": [" df", ".", "il", "oc", "[:", ",", " df", ".", "columns", " ", "!", "=", " target", "_", "column", "]", "  ", "#", " X", " is", " a", " Data", "Frame", " with", " the", " columns", " except", " target", " column", "\n"], "logprobs": [-0.005720316432416439, -0.2867533564567566, -1.3815189599990845, -0.00014482879487331957, -0.0008107712492346764, -0.000920706195756793, -2.516042470932007, -0.009201501496136189, -0.003454671474173665, -0.07051008194684982, -3.576278118089249e-07, -6.41325386823155e-05, -0.031110184267163277, -1.311301275563892e-06, -8.106198947643861e-06, -0.003999687731266022, -2.386002540588379, -0.0005841932725161314, -2.9307398796081543, -0.8168215751647949, -1.2368873357772827, -0.6846482157707214, -0.049020905047655106, -0.9346665143966675, -2.512622594833374, -1.181317687034607, -0.6466584205627441, -1.5484411716461182, -1.232503890991211, -0.0814080610871315], "finish_reason": "stop"}, {"text": " df[target_column]", "tokens": [" df", "[", "target", "_", "column", "]", "\n"], "logprobs": [-0.009785185568034649, -0.04783632978796959, -0.001135419704951346, -1.6689286894688848e-06, -1.6689286894688848e-06, -0.00014244495832826942, -0.18770359456539154], "finish_reason": "stop"}, {"text": " X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)", "tokens": [" X", "_", "test", ",", " y", "_", "train", ",", " y", "_", "test", " =", " train", "_", "test", "_", "split", "(", "X", ",", " y", ",", " test", "_", "size", "=", "0", ".", "2", ",", " random", "_", "state", "=", "4", "2", ")", "\n"], "logprobs": [-0.0016498061595484614, -6.69933797325939e-05, -0.01780596375465393, -0.00019167017308063805, -0.0017528659664094448, -9.810443589231e-05, -0.0003545847721397877, -5.411955135059543e-05, -0.001207814086228609, -4.649054244509898e-05, -0.00025817399728111923, -0.001032177242450416, -0.016352450475096703, -2.50339189733495e-06, -1.4305012882687151e-05, -3.576272320060525e-06, -6.9141146923357155e-06, -0.00012110930401831865, -0.17991933226585388, -0.0006885541952215135, -0.003936519380658865, -0.007425920106470585, -0.15092280507087708, -3.099436753473128e-06, -6.41325386823155e-05, -0.0008450751192867756, -0.02028377167880535, -0.00011765264935093, -0.4582192599773407, -0.6832931637763977, -0.029979391023516655, -1.311301275563892e-06, -6.198863957251888e-06, -0.00024911639047786593, -0.12257761508226395, -0.008660968393087387, -0.07974614202976227, -0.19139228761196136], "finish_reason": "stop"}, {"text": " LogisticRegression()", "tokens": [" Log", "istic", "Reg", "ression", "()", "\n"], "logprobs": [-0.0009534580749459565, -7.629365427419543e-06, -8.892617915989831e-05, -5.602820692729438e-06, -0.17489036917686462, -0.04764607548713684], "finish_reason": "stop"}, {"text": "fit(X_train, y_train)", "tokens": ["fit", "(", "X", "_", "train", ",", " y", "_", "train", ")", "\n"], "logprobs": [-0.00011336160969221964, -0.000331704446580261, -0.0007278653793036938, -0.013739066198468208, -0.0002708068350329995, -0.002202229807153344, -0.003061015624552965, -0.00048339602653868496, -6.9141146923357155e-06, -0.0005212855176068842, -0.025722840800881386], "finish_reason": "stop"}, {"text": " model.predict(X_test)", "tokens": [" model", ".", "predict", "(", "X", "_", "test", ")", "\n"], "logprobs": [-0.0032004110980778933, -8.4638240878121e-06, -0.0009550062823109329, -0.0005739472107961774, -0.0010673070792108774, -0.0007146426942199469, -0.0019776327535510063, -0.00033122775494121015, -0.016045140102505684], "finish_reason": "stop"}, {"text": " accuracy_score(y_test, y_pred)", "tokens": [" accuracy", "_", "score", "(", "y", "_", "test", ",", " y", "_", "pred", ")", "\n"], "logprobs": [-0.007768537383526564, -1.0132738680113107e-05, -4.410734163684538e-06, -0.001949435449205339, -0.0017314456636086106, -0.00020704510097857565, -0.010204287245869637, -0.0026848006527870893, -0.002046397188678384, -0.00011503035057103261, -8.702239938429557e-06, -0.0023277110885828733, -0.024665141478180885], "finish_reason": "stop"}, {"text": " accuracy", "tokens": [" accuracy", "\n"], "logprobs": [-0.04467165470123291, -0.448371559381485], "finish_reason": "stop"}], "metrics": {"energy": 214.32557785892493, "energy_per_token": 1.4193746878074498, "time": 9.036116, "time_per_token": 0.05984182781456954}}
