{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError(\"Input must be a DataFrame\")", "tokens": [" Type", "Error", "(", "\"", "Input", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -0.2576817572116852, -0.10475495457649231, -0.29156938195228577, -0.7856494188308716, -0.000328367663314566, -0.013129213824868202, -0.3638096749782562, -0.0012007892364636064, -0.14209869503974915, -0.0005527398898266256, -0.0009059377480298281], "finish_reason": "stop"}, {"text": " r\"[(){}[\\]]\"", "tokens": [" r", "\"", "[", "(){", "}[", "\\", "]]", "\"", "\n"], "logprobs": [-1.287204623222351, -1.0982919931411743, -0.025814736261963844, -0.0025221463292837143, -0.00044550508027896285, -0.0004451475979294628, -0.003097024979069829, -0.002408938482403755, -0.09019018709659576], "finish_reason": "stop"}, {"text": " int(sum(", "tokens": [" int", "(", "sum", "(", "\n"], "logprobs": [-2.803126335144043, -0.03880691155791283, -0.961763322353363, -0.7568200826644897, -0.8510599136352539], "finish_reason": "stop"}, {"text": " x: len(re.findall(BRACKETS_PATTERN, str(x)))).sum().sum()", "tokens": [" x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "x", "))", "))", ".", "sum", "()", ".", "sum", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.12480554729700089, -0.0010871936101466417, -0.15478529036045074, -0.005154415965080261, -0.07765600830316544, -0.00018773700867313892, -0.014608094468712807, -1.728519782773219e-05, -0.00039319414645433426, -0.03172233700752258, -1.6689286894688848e-06, -4.410734163684538e-06, -4.410734163684538e-06, -3.576278118089249e-07, 0.0, -2.50339189733495e-06, -0.00041476229671388865, -0.25392863154411316, -0.00024172721896320581, -0.0014299653703346848, -1.8500161170959473, -0.06000790745019913, -0.003875365946441889, -0.09768765419721603, -0.020399529486894608, -0.003512880764901638, -0.0034976755268871784, -0.001053969725035131, -0.49610960483551025, -1.1920928244535389e-07, -1.1920922133867862e-06, -1.311301275563892e-06, -4.529942543740617e-06, -0.15886978805065155], "finish_reason": "stop"}, {"text": ".sum().sum()", "tokens": [".", "sum", "()", ".", "sum", "()", "\n"], "logprobs": [-0.001260201446712017, -0.2091570794582367, -0.09096459299325943, -0.003599713556468487, -0.005412211176007986, -0.0014290130930021405, -1.795788288116455], "finish_reason": "stop"}], "metrics": {"energy": 373.03027156448366, "energy_per_token": 4.782439379031842, "time": 9.625578, "time_per_token": 0.12340484615384617}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError('Input should be a DataFrame')", "tokens": [" Type", "Error", "('", "Input", " should", " be", " a", " Data", "Frame", "')", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -1.5932224988937378, -0.40257933735847473, -1.3979096412658691, -0.0014801985817030072, -0.08867024630308151, -0.24619607627391815, -0.006801785435527563, -0.08585613965988159, -0.0013909199042245746], "finish_reason": "stop"}, {"text": " r'[(){}[\\]]'", "tokens": [" r", "'", "[", "(){", "}[", "\\", "]]", "'", "\n"], "logprobs": [-1.2157809734344482, -0.43115729093551636, -0.0036599335726350546, -0.0017403707606717944, -0.000321336614433676, -0.000176652567461133, -0.001663492526859045, -0.0020486575085669756, -0.08822515606880188], "finish_reason": "stop"}, {"text": " len(re.findall(BRACKETS_PATTERN, df.values.tolist()))", "tokens": [" len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " df", ".", "values", ".", "tol", "ist", "()))", "\n"], "logprobs": [-1.629589557647705, -0.1827479749917984, -0.1915253847837448, -0.0005399914807640016, -0.09051790088415146, -1.2636104656849056e-05, -0.00029559535323642194, -0.01911715418100357, -6.556489552167477e-06, -1.0371154530730564e-05, -6.318072337307967e-06, -1.311301275563892e-06, -3.576278118089249e-07, -3.576272320060525e-06, -0.0003778220561798662, -0.6315392255783081, -0.0007387054502032697, -1.3437373638153076, -0.0038650347851216793, -2.789000988006592, -2.622600959512056e-06, -0.2919341027736664, -1.2267937660217285], "finish_reason": "stop"}, {"text": " x: len(re.findall(BRACKETS_PATTERN, x))", "tokens": [" x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " x", "))", "\n"], "logprobs": [-0.12930355966091156, -0.0010568277211859822, -0.17513473331928253, -0.005674562882632017, -0.07847863435745239, -0.0001722425949992612, -0.013462590985000134, -1.585470999998506e-05, -0.0004469349514693022, -0.027658764272928238, -1.7881377516459906e-06, -4.529942543740617e-06, -4.768360213347478e-06, -4.768370445162873e-07, 0.0, -1.5497195136049413e-06, -0.00035720644518733025, -1.519457221031189, -0.1859026849269867, -0.4263359010219574], "finish_reason": "stop"}, {"text": ".sum().sum()", "tokens": [".", "sum", "()", ".", "sum", "()", "\n"], "logprobs": [-0.0015135272406041622, -0.19764584302902222, -0.06518634408712387, -0.004718479234725237, -0.007525073830038309, -0.0016261223936453462, -1.7760493755340576], "finish_reason": "stop"}], "metrics": {"energy": 339.9344975948332, "energy_per_token": 4.249181219935415, "time": 8.82295, "time_per_token": 0.110286875}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError('Input data must be in a pandas DataFrame')", "tokens": [" Type", "Error", "('", "Input", " data", " must", " be", " in", " a", " pandas", " Data", "Frame", "')", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -1.5932224988937378, -0.40257933735847473, -3.444571018218994, -1.1559244394302368, -0.006305087357759476, -3.1065146923065186, -1.0035831928253174, -0.849461555480957, -0.11871730536222458, -0.025495680049061775, -0.4093211591243744, -0.001256867777556181], "finish_reason": "stop"}, {"text": " '[(){}[\\]]'", "tokens": [" '", "[", "(){", "}[", "\\", "]]", "'", "\n"], "logprobs": [-0.9564959406852722, -0.0019999993965029716, -0.0012559153838083148, -0.0005004345439374447, -0.0004981707315891981, -0.0007952864980325103, -0.0014569868799299002, -0.09690102934837341], "finish_reason": "stop"}, {"text": " re.subn(BRACKETS_PATTERN, '', str(df))[1]", "tokens": [" re", ".", "sub", "n", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " ''", ",", " str", "(", "df", "))", "[", "1", "]"], "logprobs": [-2.929757833480835, -0.0003516055876389146, -0.6970771551132202, -0.4788382053375244, -0.016041621565818787, -0.03738948330283165, -4.6491513785440475e-06, -9.536697689327411e-06, -1.7165990357170813e-05, -1.4305104514278355e-06, 0.0, -2.3841830625315197e-06, -0.0011147005716338754, -0.3594384789466858, -0.00018463814922142774, -0.8134336471557617, -0.011212434619665146, -0.014387676492333412, -0.24435921013355255, -0.018572360277175903, -0.0044127944856882095, -0.6342111229896545], "finish_reason": "stop"}, {"text": " x: len(re.findall(BRACKETS_PATTERN, str(x)))).sum().sum()", "tokens": [" x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "x", "))", "))", ".", "sum", "()", ".", "sum", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.1423671394586563, -0.0010568277211859822, -0.17042747139930725, -0.005769623443484306, -0.07596530020236969, -0.00020704510097857565, -0.01703827828168869, -1.3947389561508317e-05, -0.0004109491710551083, -0.034572649747133255, -1.5497195136049413e-06, -3.6954811548639555e-06, -5.8412379075889476e-06, -4.768370445162873e-07, 0.0, -2.50339189733495e-06, -0.00035529976594261825, -0.21558167040348053, -0.00027700403006747365, -0.001790826441720128, -2.0299339294433594, -0.06341476738452911, -0.005073411390185356, -0.1392275094985962, -0.02527625299990177, -0.0025446198415011168, -0.006695337127894163, -0.001191621064208448, -0.37029892206192017, -1.1920928244535389e-07, -1.0728830375228426e-06, -1.9073468138230965e-06, -2.9802276912960224e-06, -0.1732073724269867], "finish_reason": "stop"}, {"text": ".sum().sum()", "tokens": [".", "sum", "()", ".", "sum", "()"], "logprobs": [-0.0014428215799853206, -0.24958911538124084, -0.061617858707904816, -0.004389413632452488, -0.007873925380408764, -0.0020691193640232086], "finish_reason": "stop"}], "metrics": {"energy": 395.88059811401354, "energy_per_token": 4.211495724617166, "time": 9.903461, "time_per_token": 0.10535596808510639}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError(\"Input should be a DataFrame\")", "tokens": [" Type", "Error", "(", "\"", "Input", " should", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -0.2576817572116852, -0.10475495457649231, -0.29156938195228577, -1.1755419969558716, -0.0012516292044892907, -0.0501631498336792, -0.29180899262428284, -0.0034955372102558613, -0.29742464423179626, -0.0006468587671406567, -0.0008155357209034264], "finish_reason": "stop"}, {"text": " '[(){}[\\]]'", "tokens": [" '", "[", "(){", "}[", "\\", "]]", "'", "\n"], "logprobs": [-0.8906553983688354, -0.0023534002248197794, -0.001606365549378097, -0.0005457103834487498, -0.0003401654539629817, -0.000927137560211122, -0.0009588173124939203, -0.0758620947599411], "finish_reason": "stop"}, {"text": " len(re.sub(BRACKETS_PATTERN, '', df.values.astype(str).flatten()).tolist())", "tokens": [" len", "(", "re", ".", "sub", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " ''", ",", " df", ".", "values", ".", "ast", "ype", "(", "str", ")", ".", "fl", "atten", "())", ".", "tol", "ist", "())", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.677520513534546, -0.20534172654151917, -0.22883088886737823, -0.00044288364006206393, -2.632941246032715, -0.28620660305023193, -0.17566029727458954, -4.172316494077677e-06, -1.1205610462639015e-05, -4.172316494077677e-06, -7.152555099310121e-07, 0.0, -1.311301275563892e-06, -0.0016734894597902894, -0.2694435119628906, -0.00022539935889653862, -0.4536190927028656, -0.001759410952217877, -1.259753704071045, -0.022241901606321335, -0.1413220316171646, -2.7418097943154862e-06, -0.024738876149058342, -0.0034514637663960457, -0.014818479306995869, -0.0024434253573417664, -0.6885004043579102, -0.00011169286881340668, -0.8778035044670105, -0.05696772783994675, -0.31643491983413696, -1.1920928244535389e-07, -0.018024342134594917, -0.5183632969856262, -7.152555099310121e-07, -8.344646857949556e-07, -2.145764938177308e-06, -6.079655122448457e-06, -0.15259355306625366], "finish_reason": "stop"}, {"text": " x: len(re.findall(BRACKETS_PATTERN, x))", "tokens": [" x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " x", "))", "\n"], "logprobs": [-0.16656358540058136, -0.000964414793998003, -0.15935355424880981, -0.005460466258227825, -0.07324966043233871, -0.0001736728590913117, -0.012019116431474686, -2.4199192921514623e-05, -0.0004127365828026086, -0.02833537943661213, -1.9073468138230965e-06, -3.814689989667386e-06, -4.172316494077677e-06, -4.768370445162873e-07, 0.0, -2.9802276912960224e-06, -0.0003579214389901608, -1.8303412199020386, -0.15926511585712433, -0.42922401428222656], "finish_reason": "stop"}, {"text": ".sum().sum()", "tokens": [".", "sum", "()", ".", "sum", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0017467968864366412, -0.23094235360622406, -0.04929305613040924, -0.0038189589977264404, -0.006303073838353157, -0.0014759134501218796, -0.47924208641052246, -3.576278118089249e-07, -1.0728830375228426e-06, -1.0728830375228426e-06, -4.6491513785440475e-06, -0.12154867500066757], "finish_reason": "stop"}], "metrics": {"energy": 394.4889296369553, "energy_per_token": 3.8675385258525026, "time": 10.519548, "time_per_token": 0.10313282352941176}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError(\"Input is not a DataFrame\")", "tokens": [" Type", "Error", "(", "\"", "Input", " is", " not", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -0.2576817572116852, -0.10475495457649231, -0.29156938195228577, -2.1308984756469727, -0.002917202888056636, -0.008884541690349579, -0.10246162116527557, -0.0017788077238947153, -0.09480907022953033, -0.0006843847222626209, -0.0015051951631903648], "finish_reason": "stop"}, {"text": " \"[(){}[\\]]\"", "tokens": [" \"", "[", "(){", "}[", "\\", "]]", "\"", "\n"], "logprobs": [-2.8674545288085938, -0.003811833681538701, -0.0028102213982492685, -0.008553653955459595, -0.00471325870603323, -0.0018630543490871787, -0.0014751992421224713, -0.0774967148900032], "finish_reason": "stop"}, {"text": " sum(map(", "tokens": [" sum", "(", "map", "(", "\n"], "logprobs": [-0.47481250762939453, -0.5374829173088074, -2.684457302093506, -0.0013708013575524092, -1.1609073877334595], "finish_reason": "stop"}, {"text": " x: len(", "tokens": [" x", ":", " len", "(", "\n"], "logprobs": [-0.12480554729700089, -0.0010871936101466417, -0.15478529036045074, -0.005154415965080261, -2.7794687747955322], "finish_reason": "stop"}, {"text": ".sum().sum()", "tokens": [".", "sum", "()", ".", "sum", "()"], "logprobs": [-0.0018011790234595537, -0.23116090893745422, -0.08507941663265228, -0.004046586342155933, -0.007500700186938047, -0.0012434140080586076], "finish_reason": "stop"}], "metrics": {"energy": 226.43555250740044, "energy_per_token": 4.817777712923414, "time": 6.3236647, "time_per_token": 0.1345460574468085}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError('The function accepts only a DataFrame')", "tokens": [" Type", "Error", "('", "The", " function", " accepts", " only", " a", " Data", "Frame", "')", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -1.5932224988937378, -2.7771501541137695, -1.1649971008300781, -1.9843294620513916, -0.2939646244049072, -2.891862630844116, -1.1919407844543457, -0.013817960396409035, -1.0921103954315186, -0.0008909308817237616], "finish_reason": "stop"}, {"text": " r'[(){}[\\]]'", "tokens": [" r", "'", "[", "(){", "}[", "\\", "]]", "'", "\n"], "logprobs": [-1.2157809734344482, -0.43115729093551636, -0.0036599335726350546, -0.0017403707606717944, -0.000321336614433676, -0.000176652567461133, -0.001663492526859045, -0.0020486575085669756, -0.08822515606880188], "finish_reason": "stop"}, {"text": " sum([len(re.findall(BRACKETS_PATTERN, col)) for col in df.sum() if pd.notna(col)])", "tokens": [" sum", "([", "len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " col", "))", " for", " col", " in", " df", ".", "sum", "()", " if", " pd", ".", "not", "na", "(", "col", ")]", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-0.5299172401428223, -0.9606601595878601, -0.44835853576660156, -0.005025374703109264, -0.03355424478650093, -0.0003939091111533344, -0.004338257946074009, -1.0371154530730564e-05, -0.00022587609419133514, -0.013160156086087227, -3.814689989667386e-06, -4.6491513785440475e-06, -1.0013530300057027e-05, -1.1920922133867862e-06, 0.0, -2.145764938177308e-06, -0.0004914983292110264, -3.0725479125976562, -0.31988710165023804, -0.06642863899469376, -0.03522147238254547, -0.003802452003583312, -0.05539843067526817, -0.041927989572286606, -4.123090744018555, -0.028873492032289505, -3.0560848712921143, -1.0513757467269897, -0.0002859421947505325, -0.027814367786049843, -0.17954224348068237, -0.000399033073335886, -0.005211340729147196, -0.01239160168915987, -0.884225070476532, -4.768370445162873e-07, -1.1920922133867862e-06, -1.4305104514278355e-06, -5.125986263010418e-06, -0.16426900029182434], "finish_reason": "stop"}, {"text": " x: len(re.findall(BRACKETS_PATTERN, str(x)))", "tokens": [" x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "x", ")))", "\n"], "logprobs": [-0.12930355966091156, -0.0010568277211859822, -0.17513473331928253, -0.005674562882632017, -0.07847863435745239, -0.0001722425949992612, -0.013462590985000134, -1.585470999998506e-05, -0.0004469349514693022, -0.027658764272928238, -1.7881377516459906e-06, -4.529942543740617e-06, -4.768360213347478e-06, -4.768370445162873e-07, 0.0, -1.5497195136049413e-06, -0.00035720644518733025, -0.2828125059604645, -0.00022682955022901297, -0.0015055523253977299, -0.1672469824552536, -0.31089040637016296], "finish_reason": "stop"}, {"text": ".to_numpy().sum()", "tokens": [".", "to", "_", "numpy", "()", ".", "sum", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0015135272406041622, -3.026270627975464, -4.887569048150908e-06, -0.005011497065424919, -0.006064110901206732, -0.0006438804557546973, -0.004643371794372797, -0.0031371922232210636, -0.49820855259895325, -1.1920928244535389e-07, -1.1920922133867862e-06, -1.311301275563892e-06, -4.887569048150908e-06, -0.15582580864429474], "finish_reason": "stop"}], "metrics": {"energy": 447.51375788307183, "energy_per_token": 4.182371569000671, "time": 10.939682, "time_per_token": 0.10224001869158877}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError(\"Input must be a DataFrame\")", "tokens": [" Type", "Error", "(", "\"", "Input", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -0.2576817572116852, -0.10475495457649231, -0.29156938195228577, -0.7856494188308716, -0.000328367663314566, -0.013129213824868202, -0.3638096749782562, -0.0012007892364636064, -0.14209869503974915, -0.0005527398898266256, -0.0009059377480298281], "finish_reason": "stop"}, {"text": " r\"[(){}[\\]]\"", "tokens": [" r", "\"", "[", "(){", "}[", "\\", "]]", "\"", "\n"], "logprobs": [-1.287204623222351, -1.0982919931411743, -0.025814736261963844, -0.0025221463292837143, -0.00044550508027896285, -0.0004451475979294628, -0.003097024979069829, -0.002408938482403755, -0.09019018709659576], "finish_reason": "stop"}, {"text": " sum([len(re.findall(BRACKETS_PATTERN, str(col))) for col in df.values.flatten()])", "tokens": [" sum", "([", "len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "col", ")))", " for", " col", " in", " df", ".", "values", ".", "fl", "atten", "()", "])", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.47481250762939453, -0.918529212474823, -0.3968908488750458, -0.004959424491971731, -0.03108453005552292, -0.00041345154750160873, -0.005579493474215269, -1.4781842764932662e-05, -0.0002233732520835474, -0.010200039483606815, -3.933898824470816e-06, -4.768360213347478e-06, -8.821448318485636e-06, -5.960462772236497e-07, 0.0, -3.576272320060525e-06, -0.00043811736395582557, -0.6196089386940002, -0.029404601082205772, -1.6473650932312012, -0.022174863144755363, -0.07307194173336029, -0.02179492451250553, -0.002352567622438073, -0.012263255193829536, -0.024621643126010895, -0.2821706533432007, -1.0958491563796997, -0.09067720174789429, -4.6967357775429264e-05, -0.00043108707177452743, -0.006972978822886944, -0.5649374723434448, -4.768370445162873e-07, -8.344646857949556e-07, -1.6689286894688848e-06, -5.245195097813848e-06, -0.13494840264320374], "finish_reason": "stop"}, {"text": " x: len(re.findall(BRACKETS_PATTERN, str(x)))", "tokens": [" x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "x", ")))", "\n"], "logprobs": [-0.12480554729700089, -0.0010871936101466417, -0.15478529036045074, -0.005154415965080261, -0.07765600830316544, -0.00018773700867313892, -0.014608094468712807, -1.728519782773219e-05, -0.00039319414645433426, -0.03172233700752258, -1.6689286894688848e-06, -4.410734163684538e-06, -4.410734163684538e-06, -3.576278118089249e-07, 0.0, -2.50339189733495e-06, -0.00041476229671388865, -0.25392863154411316, -0.00024172721896320581, -0.0014299653703346848, -0.17856073379516602, -0.2886890470981598], "finish_reason": "stop"}, {"text": ".sum().sum()", "tokens": [".", "sum", "()", ".", "sum", "()", "\n"], "logprobs": [-0.001260201446712017, -0.2091570794582367, -0.09096459299325943, -0.003599713556468487, -0.005412211176007986, -0.0014290130930021405, -1.795788288116455], "finish_reason": "stop"}], "metrics": {"energy": 408.138044116974, "energy_per_token": 4.122606506232061, "time": 10.520025, "time_per_token": 0.1062628787878788}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError(\"Input is not a DataFrame\")", "tokens": [" Type", "Error", "(", "\"", "Input", " is", " not", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -0.2576817572116852, -0.10475495457649231, -0.29156938195228577, -2.1308984756469727, -0.002917202888056636, -0.008884541690349579, -0.10246162116527557, -0.0017788077238947153, -0.09480907022953033, -0.0006843847222626209, -0.0015051951631903648], "finish_reason": "stop"}, {"text": " re.compile(r'[(){}[\\]]')", "tokens": [" re", ".", "compile", "(", "r", "'", "[", "(){", "}[", "\\", "]]", "')", "\n"], "logprobs": [-1.3729056119918823, -1.6689160474925302e-05, -0.004527081269770861, -0.22394564747810364, -0.055475909262895584, -0.37347790598869324, -0.004967964719980955, -0.0018058198038488626, -0.00022373080719262362, -0.00021634146105498075, -0.0019208805169910192, -0.006217304617166519, -0.08811753243207932], "finish_reason": "stop"}, {"text": " sum(len(re.findall(BRACKETS_PATTERN, str(elem))) for _, row in df.iterrows() for elem in row)", "tokens": [" sum", "(", "len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "elem", ")))", " for", " _", ",", " row", " in", " df", ".", "iter", "rows", "()", " for", " ele", "m", " in", " row", ")<", "|", "end", "of", "text", "|>"], "logprobs": [-0.47481250762939453, -0.5374829173088074, -1.7905555963516235, -0.0029702140018343925, -0.042237162590026855, -0.00038675934774801135, -0.006800128147006035, -1.4066597032069694e-05, -0.00019071667338721454, -0.008336980827152729, -4.529942543740617e-06, -5.125986263010418e-06, -9.059865078597795e-06, -9.536738616588991e-07, 0.0, -3.6954811548639555e-06, -0.000366263062460348, -0.5620802640914917, -0.021727854385972023, -3.8354928493499756, -0.0012407946633175015, -0.22049091756343842, -1.6678953170776367, -0.007898171432316303, -0.6200804710388184, -0.013625474646687508, -0.020184239372611046, -0.0004576589271891862, -0.05270612984895706, -0.0004552758182398975, -0.0003494605771265924, -0.16707411408424377, -0.053196024149656296, -3.659658250398934e-05, -0.0002643712505232543, -0.002283705398440361, -0.7854506969451904, -8.344646857949556e-07, -1.0728830375228426e-06, -1.4305104514278355e-06, -3.6954811548639555e-06, -0.18774844706058502], "finish_reason": "stop"}, {"text": " x: len(re.findall(BRACKETS_PATTERN, str(x)))", "tokens": [" x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "x", ")))", "\n"], "logprobs": [-0.12480554729700089, -0.0010871936101466417, -0.15478529036045074, -0.005154415965080261, -0.07765600830316544, -0.00018773700867313892, -0.014608094468712807, -1.728519782773219e-05, -0.00039319414645433426, -0.03172233700752258, -1.6689286894688848e-06, -4.410734163684538e-06, -4.410734163684538e-06, -3.576278118089249e-07, 0.0, -2.50339189733495e-06, -0.00041476229671388865, -0.25392863154411316, -0.00024172721896320581, -0.0014299653703346848, -0.17856073379516602, -0.2886890470981598], "finish_reason": "stop"}, {"text": ".sum().sum()", "tokens": [".", "sum", "()", ".", "sum", "()", "\n"], "logprobs": [-0.001260201446712017, -0.2091570794582367, -0.09096459299325943, -0.003599713556468487, -0.005412211176007986, -0.0014290130930021405, -1.795788288116455], "finish_reason": "stop"}], "metrics": {"energy": 437.77959040832536, "energy_per_token": 4.0913980411993025, "time": 11.572083, "time_per_token": 0.10815030841121495}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError(\"Input should be a DataFrame\")", "tokens": [" Type", "Error", "(", "\"", "Input", " should", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -0.2576817572116852, -0.10475495457649231, -0.29156938195228577, -1.1755419969558716, -0.0012516292044892907, -0.0501631498336792, -0.29180899262428284, -0.0034955372102558613, -0.29742464423179626, -0.0006468587671406567, -0.0008155357209034264], "finish_reason": "stop"}, {"text": " r'[(){}[\\]]'", "tokens": [" r", "'", "[", "(){", "}[", "\\", "]]", "'", "\n"], "logprobs": [-1.287204623222351, -0.4286295175552368, -0.00422525592148304, -0.001702646492049098, -0.00022742546570952982, -0.00017998983094003052, -0.0016640876419842243, -0.0029314663261175156, -0.10068841278553009], "finish_reason": "stop"}, {"text": " sum([len(re.findall(BRACKETS_PATTERN, str(col)))", "tokens": [" sum", "([", "len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "col", ")))", "\n"], "logprobs": [-0.47481250762939453, -0.918529212474823, -0.3968908488750458, -0.004959424491971731, -0.03108453005552292, -0.00041345154750160873, -0.005579493474215269, -1.4781842764932662e-05, -0.0002233732520835474, -0.010200039483606815, -3.933898824470816e-06, -4.768360213347478e-06, -8.821448318485636e-06, -5.960462772236497e-07, 0.0, -3.576272320060525e-06, -0.00043811736395582557, -0.6196089386940002, -0.029404601082205772, -1.6473650932312012, -0.022174863144755363, -2.7035536766052246], "finish_reason": "stop"}, {"text": " x: len(", "tokens": [" x", ":", " len", "(", "\n"], "logprobs": [-0.12480554729700089, -0.0010871936101466417, -0.15478529036045074, -0.005154415965080261, -2.7794687747955322], "finish_reason": "stop"}, {"text": ".values.sum()", "tokens": [".", "values", ".", "sum", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0018011790234595537, -2.1540753841400146, -0.0007636015070602298, -0.11373285204172134, -0.00356906745582819, -0.4089730679988861, -2.3841855067985307e-07, -1.5497195136049413e-06, -1.311301275563892e-06, -7.867782187531702e-06, -0.1447225958108902], "finish_reason": "stop"}], "metrics": {"energy": 309.66341709136964, "energy_per_token": 4.423763101305281, "time": 8.420237, "time_per_token": 0.1202891}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError(\"Input must be a pandas DataFrame\")", "tokens": [" Type", "Error", "(", "\"", "Input", " must", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -0.2576817572116852, -0.10475495457649231, -0.29156938195228577, -0.7856494188308716, -0.000328367663314566, -0.013129213824868202, -1.2486058473587036, -0.01431458443403244, -0.0008993871742859483, -0.49982598423957825, -0.000604565953835845, -0.0006114759016782045], "finish_reason": "stop"}, {"text": " '[(){}[\\]]'", "tokens": [" '", "[", "(){", "}[", "\\", "]]", "'", "\n"], "logprobs": [-0.8906553983688354, -0.0023534002248197794, -0.001606365549378097, -0.0005457103834487498, -0.0003401654539629817, -0.000927137560211122, -0.0009588173124939203, -0.0758620947599411], "finish_reason": "stop"}, {"text": " sum(", "tokens": [" sum", "(", "\n"], "logprobs": [-0.4911668002605438, -0.5613572001457214, -0.9861196279525757], "finish_reason": "stop"}, {"text": " x: len(re.findall(BRACKETS_PATTERN, str(x)))", "tokens": [" x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "x", ")))", "\n"], "logprobs": [-0.16656358540058136, -0.000964414793998003, -0.15935355424880981, -0.005460466258227825, -0.07324966043233871, -0.0001736728590913117, -0.012019116431474686, -2.4199192921514623e-05, -0.0004127365828026086, -0.02833537943661213, -1.9073468138230965e-06, -3.814689989667386e-06, -4.172316494077677e-06, -4.768370445162873e-07, 0.0, -2.9802276912960224e-06, -0.0003579214389901608, -0.2012900412082672, -0.00026043839170597494, -0.0018848287872970104, -0.14696991443634033, -0.3132369816303253], "finish_reason": "stop"}, {"text": ".sum().sum()", "tokens": [".", "sum", "()", ".", "sum", "()", "\n"], "logprobs": [-0.0017467968864366412, -0.23094235360622406, -0.04929305613040924, -0.0038189589977264404, -0.006303073838353157, -0.0014759134501218796, -1.9199845790863037], "finish_reason": "stop"}], "metrics": {"energy": 255.91907817077632, "energy_per_token": 3.99873559641838, "time": 6.94083, "time_per_token": 0.10845046875}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError(\"input is not a DataFrame\")", "tokens": [" Type", "Error", "(", "\"", "input", " is", " not", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -0.2576817572116852, -0.10475495457649231, -2.989903211593628, -1.1537268161773682, -0.004635184537619352, -0.03004787676036358, -0.06020873412489891, -0.005597512703388929, -0.014223153702914715, -0.0008492438937537372, -0.00316404877230525], "finish_reason": "stop"}, {"text": " re.compile(r\"[(){}[\\]]\")", "tokens": [" re", ".", "compile", "(", "r", "\"", "[", "(){", "}[", "\\", "]]", "\"", ")", "\n"], "logprobs": [-1.3729056119918823, -1.6689160474925302e-05, -0.004527081269770861, -0.22394564747810364, -0.055475909262895584, -1.2168617248535156, -0.02950090356171131, -0.0017680978635326028, -0.00045622908510267735, -0.0003543464408721775, -0.003287270897999406, -0.0045234025456011295, -0.0019101722864434123, -0.1147465929389], "finish_reason": "stop"}, {"text": " sum([len(re.findall(BRACKETS_PATTERN, str(col))) for col in df.values.flatten()])", "tokens": [" sum", "([", "len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "col", ")))", " for", " col", " in", " df", ".", "values", ".", "fl", "atten", "()", "])", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.47481250762939453, -0.918529212474823, -0.3968908488750458, -0.004959424491971731, -0.03108453005552292, -0.00041345154750160873, -0.005579493474215269, -1.4781842764932662e-05, -0.0002233732520835474, -0.010200039483606815, -3.933898824470816e-06, -4.768360213347478e-06, -8.821448318485636e-06, -5.960462772236497e-07, 0.0, -3.576272320060525e-06, -0.00043811736395582557, -0.6196089386940002, -0.029404601082205772, -1.6473650932312012, -0.022174863144755363, -0.07307194173336029, -0.02179492451250553, -0.002352567622438073, -0.012263255193829536, -0.024621643126010895, -0.2821706533432007, -1.0958491563796997, -0.09067720174789429, -4.6967357775429264e-05, -0.00043108707177452743, -0.006972978822886944, -0.5649374723434448, -4.768370445162873e-07, -8.344646857949556e-07, -1.6689286894688848e-06, -5.245195097813848e-06, -0.13494840264320374], "finish_reason": "stop"}, {"text": " x: len(re.findall(BRACKETS_PATTERN, str(x)))).sum().sum()", "tokens": [" x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "x", "))", "))", ".", "sum", "()", ".", "sum", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.12480554729700089, -0.0010871936101466417, -0.15478529036045074, -0.005154415965080261, -0.07765600830316544, -0.00018773700867313892, -0.014608094468712807, -1.728519782773219e-05, -0.00039319414645433426, -0.03172233700752258, -1.6689286894688848e-06, -4.410734163684538e-06, -4.410734163684538e-06, -3.576278118089249e-07, 0.0, -2.50339189733495e-06, -0.00041476229671388865, -0.25392863154411316, -0.00024172721896320581, -0.0014299653703346848, -1.8500161170959473, -0.06000790745019913, -0.003875365946441889, -0.09768765419721603, -0.020399529486894608, -0.003512880764901638, -0.0034976755268871784, -0.001053969725035131, -0.49610960483551025, -1.1920928244535389e-07, -1.1920922133867862e-06, -1.311301275563892e-06, -4.529942543740617e-06, -0.15886978805065155], "finish_reason": "stop"}, {"text": ".sum().sum()", "tokens": [".", "sum", "()", ".", "sum", "()", "\n"], "logprobs": [-0.001260201446712017, -0.2091570794582367, -0.09096459299325943, -0.003599713556468487, -0.005412211176007986, -0.0014290130930021405, -1.795788288116455], "finish_reason": "stop"}], "metrics": {"energy": 499.59991735076886, "energy_per_token": 4.306895839230766, "time": 11.980674, "time_per_token": 0.1032816724137931}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError(\"Input data must be a pandas DataFrame\")", "tokens": [" Type", "Error", "(", "\"", "Input", " data", " must", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -0.2576817572116852, -0.10475495457649231, -0.29156938195228577, -3.0351648330688477, -0.8440670371055603, -0.0025342749431729317, -0.075994573533535, -0.6041538119316101, -0.027532711625099182, -0.0026771915145218372, -0.5786592364311218, -0.0007605044520460069, -0.0005647733341902494], "finish_reason": "stop"}, {"text": " '[(){}[\\]]'", "tokens": [" '", "[", "(){", "}[", "\\", "]]", "'", "\n"], "logprobs": [-0.8906553983688354, -0.0023534002248197794, -0.001606365549378097, -0.0005457103834487498, -0.0003401654539629817, -0.000927137560211122, -0.0009588173124939203, -0.0758620947599411], "finish_reason": "stop"}, {"text": " sum(df.astype(str).applymap(lambda x: len(re.findall(BRACKETS_PATTERN, x))))", "tokens": [" sum", "(", "df", ".", "ast", "ype", "(", "str", ")", ".", "apply", "map", "(", "lambda", " x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " x", "))", "))"], "logprobs": [-0.4911668002605438, -0.5613572001457214, -1.7335447072982788, -0.0024781490210443735, -0.4078875184059143, -7.152555099310121e-07, -0.021568268537521362, -0.004085528198629618, -0.0018335450440645218, -0.014794048853218555, -0.06321145594120026, -0.19512619078159332, -0.0005667987279593945, -0.24555768072605133, -0.05276934430003166, -0.0016329062636941671, -0.493831068277359, -0.009518005885183811, -0.01931793987751007, -0.00017438798386137933, -0.003953736741095781, -4.410734163684538e-06, -0.00032062159152701497, -0.013732599094510078, -1.7881377516459906e-06, -5.483612312673358e-06, -9.536697689327411e-06, -3.576278118089249e-07, 0.0, -2.622600959512056e-06, -0.0004295380203984678, -0.04119736701250076, -0.05817438289523125, -0.9436397552490234], "finish_reason": "stop"}, {"text": " x: re.sub(BRACKETS_PATTERN, \"\", str(x))).count().sum()", "tokens": [" x", ":", " re", ".", "sub", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " \"", "\"", ",", " str", "(", "x", ")))", ".", "count", "()", ".", "sum", "()"], "logprobs": [-0.16656358540058136, -0.000964414793998003, -2.726572275161743, -0.0010345588671043515, -0.5683723092079163, -0.10249841958284378, -0.08573250472545624, -1.9073468138230965e-06, -1.0013530300057027e-05, -7.986990567587782e-06, -4.768370445162873e-07, -3.576278118089249e-07, -1.1920922133867862e-06, -0.0011208925861865282, -1.901309609413147, -0.09858720004558563, -0.0005787128466181457, -0.44673073291778564, -0.0007773000397719443, -0.001985247014090419, -1.8711663484573364, -0.03500336408615112, -1.6102241277694702, -0.013474470004439354, -0.004069856833666563, -0.0016479019541293383, -0.03512917086482048], "finish_reason": "stop"}, {"text": ".sum().sum()", "tokens": [".", "sum", "()", ".", "sum", "()", "\n"], "logprobs": [-0.0015120989410206676, -0.3074253797531128, -0.06919587403535843, -0.004349296446889639, -0.00854478869587183, -0.0014779369812458754, -1.6837072372436523], "finish_reason": "stop"}], "metrics": {"energy": 415.5043594303132, "energy_per_token": 4.113904548814982, "time": 10.94086, "time_per_token": 0.10832534653465348}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError(\"Input should be a DataFrame.\")", "tokens": [" Type", "Error", "(", "\"", "Input", " should", " be", " a", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -0.2576817572116852, -0.10475495457649231, -0.29156938195228577, -1.1755419969558716, -0.0012516292044892907, -0.0501631498336792, -0.29180899262428284, -0.0034955372102558613, -1.4866946935653687, -0.001810817513614893, -0.000560245884116739, -0.0004861365014221519], "finish_reason": "stop"}, {"text": " r\"[(){}[\\]]\"", "tokens": [" r", "\"", "[", "(){", "}[", "\\", "]]", "\"", "\n"], "logprobs": [-1.287204623222351, -1.0982919931411743, -0.025814736261963844, -0.0025221463292837143, -0.00044550508027896285, -0.0004451475979294628, -0.003097024979069829, -0.002408938482403755, -0.09019018709659576], "finish_reason": "stop"}, {"text": " int(df.astype(str).sum().str.count(BRACKETS_PATTERN))", "tokens": [" int", "(", "df", ".", "ast", "ype", "(", "str", ")", ".", "sum", "()", ".", "str", ".", "count", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", "))"], "logprobs": [-2.803126335144043, -0.03880691155791283, -1.6430644989013672, -0.005542151164263487, -0.1928340494632721, -3.576278118089249e-07, -0.034529924392700195, -0.004374340176582336, -0.002887486945837736, -0.04161506146192551, -0.6012755036354065, -0.019740313291549683, -0.0019506252137944102, -0.056069500744342804, -0.00029309268575161695, -0.04776359722018242, -0.00077622797107324, -0.009289022535085678, -6.198863957251888e-06, -1.847726889536716e-05, -5.960446742392378e-06, -8.344646857949556e-07, -1.1920928244535389e-07, -7.629365427419543e-06, -0.05578577145934105], "finish_reason": "stop"}, {"text": " x: len(re.findall(BRACKETS_PATTERN, str(x)))", "tokens": [" x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "x", ")))", "\n"], "logprobs": [-0.12480554729700089, -0.0010871936101466417, -0.15478529036045074, -0.005154415965080261, -0.07765600830316544, -0.00018773700867313892, -0.014608094468712807, -1.728519782773219e-05, -0.00039319414645433426, -0.03172233700752258, -1.6689286894688848e-06, -4.410734163684538e-06, -4.410734163684538e-06, -3.576278118089249e-07, 0.0, -2.50339189733495e-06, -0.00041476229671388865, -0.25392863154411316, -0.00024172721896320581, -0.0014299653703346848, -0.17856073379516602, -0.2886890470981598], "finish_reason": "stop"}, {"text": ".sum().sum()", "tokens": [".", "sum", "()", ".", "sum", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.001260201446712017, -0.2091570794582367, -0.09096459299325943, -0.003599713556468487, -0.005412211176007986, -0.0014290130930021405, -0.5506940484046936, -2.3841855067985307e-07, -1.0728830375228426e-06, -1.4305104514278355e-06, -4.529942543740617e-06, -0.13530580699443817], "finish_reason": "stop"}], "metrics": {"energy": 371.3719572582245, "energy_per_token": 4.036651709328527, "time": 9.670758, "time_per_token": 0.10511693478260868}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError(\"Input argument 'df' must be a pandas DataFrame.\")", "tokens": [" Type", "Error", "(", "\"", "Input", " argument", " '", "df", "'", " must", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -0.2576817572116852, -0.10475495457649231, -0.29156938195228577, -3.2338342666625977, -1.8298649787902832, -0.00603697681799531, -0.0002734287118073553, -0.10035021603107452, -0.0005414212355390191, -0.10824941843748093, -0.2885410189628601, -0.04375283792614937, -0.0007139279623515904, -0.48234277963638306, -0.001069331425242126, -0.0008238735608756542, -0.00028761065914295614], "finish_reason": "stop"}, {"text": " '[(){}[\\]]'", "tokens": [" '", "[", "(){", "}[", "\\", "]]", "'", "\n"], "logprobs": [-0.8906553983688354, -0.0023534002248197794, -0.001606365549378097, -0.0005457103834487498, -0.0003401654539629817, -0.000927137560211122, -0.0009588173124939203, -0.0758620947599411], "finish_reason": "stop"}, {"text": " sum(map(", "tokens": [" sum", "(", "map", "(", "\n"], "logprobs": [-0.4911668002605438, -0.5613572001457214, -2.3167777061462402, -0.0010671879863366485, -1.1721320152282715], "finish_reason": "stop"}, {"text": " x: re.sub(BRACKETS_PATTERN, '', x)", "tokens": [" x", ":", " re", ".", "sub", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " ''", ",", " x", ")", "\n"], "logprobs": [-0.16656358540058136, -0.000964414793998003, -2.726572275161743, -0.0010345588671043515, -0.5683723092079163, -0.10249841958284378, -0.08573250472545624, -1.9073468138230965e-06, -1.0013530300057027e-05, -7.986990567587782e-06, -4.768370445162873e-07, -3.576278118089249e-07, -1.1920922133867862e-06, -0.0011208925861865282, -0.30039182305336, -0.00047994061606004834, -0.6497892141342163, -0.4627772867679596, -0.2799382507801056], "finish_reason": "stop"}, {"text": ".to_numpy().sum()", "tokens": [".", "to", "_", "numpy", "()", ".", "sum", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0015120989410206676, -2.862290382385254, -5.960446742392378e-06, -0.002283705398440361, -0.0043154689483344555, -0.0006790239713154733, -0.005261977203190327, -0.00447961175814271, -0.4575093686580658, -1.1920928244535389e-07, -9.536738616588991e-07, -1.1920922133867862e-06, -3.2186455882765586e-06, -0.16229045391082764], "finish_reason": "stop"}], "metrics": {"energy": 340.6884792156218, "energy_per_token": 4.54251305620829, "time": 8.434483, "time_per_token": 0.11245977333333333}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError(\"Input must be a DataFrame\")", "tokens": [" Type", "Error", "(", "\"", "Input", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -0.2576817572116852, -0.10475495457649231, -0.29156938195228577, -0.7856494188308716, -0.000328367663314566, -0.013129213824868202, -0.3638096749782562, -0.0012007892364636064, -0.14209869503974915, -0.0005527398898266256, -0.0009059377480298281], "finish_reason": "stop"}, {"text": " r'[(){}[\\]]'", "tokens": [" r", "'", "[", "(){", "}[", "\\", "]]", "'", "\n"], "logprobs": [-1.287204623222351, -0.4286295175552368, -0.00422525592148304, -0.001702646492049098, -0.00022742546570952982, -0.00017998983094003052, -0.0016640876419842243, -0.0029314663261175156, -0.10068841278553009], "finish_reason": "stop"}, {"text": " sum(len(re.findall(BRACKETS_PATTERN, str(value)))", "tokens": [" sum", "(", "len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "value", ")))", "\n"], "logprobs": [-0.47481250762939453, -0.5374829173088074, -1.7905555963516235, -0.0029702140018343925, -0.042237162590026855, -0.00038675934774801135, -0.006800128147006035, -1.4066597032069694e-05, -0.00019071667338721454, -0.008336980827152729, -4.529942543740617e-06, -5.125986263010418e-06, -9.059865078597795e-06, -9.536738616588991e-07, 0.0, -3.6954811548639555e-06, -0.000366263062460348, -0.5620802640914917, -0.021727854385972023, -2.115800619125366, -0.0016958630876615644, -1.288120985031128], "finish_reason": "stop"}, {"text": " x: re.sub(BRACKETS_PATTERN, '', x)", "tokens": [" x", ":", " re", ".", "sub", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " ''", ",", " x", ")", "\n"], "logprobs": [-0.12480554729700089, -0.0010871936101466417, -2.8032572269439697, -0.0011517327511683106, -0.4677583575248718, -0.13872146606445312, -0.1045711487531662, -1.7881377516459906e-06, -1.0609570381348021e-05, -6.794906312279636e-06, -5.960462772236497e-07, -4.768370445162873e-07, -1.1920922133867862e-06, -0.0008354272576980293, -0.23733706772327423, -0.00044145373976789415, -0.5737498998641968, -0.47289416193962097, -0.2646081745624542], "finish_reason": "stop"}, {"text": ".values.sum()", "tokens": [".", "values", ".", "sum", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.001515550771728158, -2.4202394485473633, -0.0007034449372440577, -0.10452615469694138, -0.004000518936663866, -0.4896886944770813, -4.768370445162873e-07, -1.1920922133867862e-06, -1.4305104514278355e-06, -7.748573807475623e-06, -0.13921642303466797], "finish_reason": "stop"}], "metrics": {"energy": 364.1652082881929, "energy_per_token": 4.335300098668963, "time": 9.694011, "time_per_token": 0.11540489285714285}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError(\"Input data is not a pandas DataFrame.\")", "tokens": [" Type", "Error", "(", "\"", "Input", " data", " is", " not", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -0.2576817572116852, -0.10475495457649231, -0.29156938195228577, -3.0351648330688477, -1.4221272468566895, -0.013085092417895794, -0.044253867119550705, -1.1012369394302368, -0.03090551123023033, -0.0027251034043729305, -0.5838195085525513, -0.013125448487699032, -0.0012249593855813146, -0.0006238659843802452], "finish_reason": "stop"}, {"text": " re.compile('[(){}[\\]]')", "tokens": [" re", ".", "compile", "('", "[", "(){", "}[", "\\", "]]", "')", "\n"], "logprobs": [-1.3729056119918823, -1.6689160474925302e-05, -0.004527081269770861, -1.6067047119140625, -0.004564105998724699, -0.0016856284346431494, -0.0022533759474754333, -0.001740013831295073, -0.0018650771817192435, -0.003246158827096224, -0.06703103333711624], "finish_reason": "stop"}, {"text": " sum([re.findall(BRACKETS_PATTERN, df.iloc[i].to_string()) for i in range(len(df))])", "tokens": [" sum", "([", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " df", ".", "il", "oc", "[", "i", "]", ".", "to", "_", "string", "())", " for", " i", " in", " range", "(", "len", "(", "df", "))", "])", "\n"], "logprobs": [-0.47481250762939453, -0.918529212474823, -2.7094786167144775, -0.0007759897271171212, -1.1110963821411133, -6.675497570540756e-05, -0.0003781795676331967, -0.02410835213959217, -3.933898824470816e-06, -6.437280717364047e-06, -8.702239938429557e-06, -1.5497195136049413e-06, 0.0, -4.172316494077677e-06, -0.0012372228084132075, -2.8421623706817627, -0.6031410098075867, -0.6072518825531006, -1.9073468138230965e-06, -0.045328881591558456, -0.2637202739715576, -2.0640511512756348, -0.004763445816934109, -1.4555197954177856, -1.847726889536716e-05, -0.1544991135597229, -0.027994172647595406, -0.4130953550338745, -0.004235464613884687, -0.005789535120129585, -0.08663291484117508, -0.0010283663868904114, -0.17810623347759247, -0.00015317220822907984, -0.0004233417857903987, -0.06475089490413666, -0.4988383650779724, -0.7581732273101807], "finish_reason": "stop"}, {"text": " x: len(re.findall(BRACKETS_PATTERN, x))", "tokens": [" x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " x", "))", "\n"], "logprobs": [-0.12480554729700089, -0.0010871936101466417, -0.15478529036045074, -0.005154415965080261, -0.07765600830316544, -0.00018773700867313892, -0.014608094468712807, -1.728519782773219e-05, -0.00039319414645433426, -0.03172233700752258, -1.6689286894688848e-06, -4.410734163684538e-06, -4.410734163684538e-06, -3.576278118089249e-07, 0.0, -2.50339189733495e-06, -0.00041476229671388865, -1.623584270477295, -0.18669801950454712, -0.48467859625816345], "finish_reason": "stop"}, {"text": ".sum().sum()", "tokens": [".", "sum", "()", ".", "sum", "()", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.001260201446712017, -0.2091570794582367, -0.09096459299325943, -0.003599713556468487, -0.005412211176007986, -0.0014290130930021405, -0.5506940484046936, -2.3841855067985307e-07, -1.0728830375228426e-06, -1.4305104514278355e-06, -4.529942543740617e-06, -2.067476749420166, -0.0015901790466159582], "finish_reason": "stop"}], "metrics": {"energy": 450.1235798234939, "energy_per_token": 4.167810924291611, "time": 11.5667515, "time_per_token": 0.10709955092592593}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError(\"Input must be a pandas DataFrame\")", "tokens": [" Type", "Error", "(", "\"", "Input", " must", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -0.2576817572116852, -0.10475495457649231, -0.29156938195228577, -0.7856494188308716, -0.000328367663314566, -0.013129213824868202, -1.2486058473587036, -0.01431458443403244, -0.0008993871742859483, -0.49982598423957825, -0.000604565953835845, -0.0006114759016782045], "finish_reason": "stop"}, {"text": " '[(){}[\\]]'", "tokens": [" '", "[", "(){", "}[", "\\", "]]", "'", "\n"], "logprobs": [-0.8906553983688354, -0.0023534002248197794, -0.001606365549378097, -0.0005457103834487498, -0.0003401654539629817, -0.000927137560211122, -0.0009588173124939203, -0.0758620947599411], "finish_reason": "stop"}, {"text": " sum([len(re.findall(BRACKETS_PATTERN, str(row))) for row in df.values.flatten()])", "tokens": [" sum", "([", "len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "row", ")))", " for", " row", " in", " df", ".", "values", ".", "fl", "atten", "()", "])", "\n"], "logprobs": [-0.4911668002605438, -0.8825470805168152, -0.3996366262435913, -0.0051290360279381275, -0.02407122775912285, -0.0004568248405121267, -0.0043354094959795475, -1.7762025890988298e-05, -0.00020037073409184813, -0.016525885090231895, -3.576272320060525e-06, -4.529942543740617e-06, -7.867782187531702e-06, -1.0728830375228426e-06, 0.0, -3.814689989667386e-06, -0.00043501926120370626, -0.5640898942947388, -0.026987262070178986, -2.4962351322174072, -0.03516910597681999, -0.15332572162151337, -0.28797683119773865, -0.003215264528989792, -0.0243210531771183, -0.022844476625323296, -0.2849952280521393, -0.06472340226173401, -0.018659649416804314, -0.00037877538125030696, -0.0003271759778726846, -0.008710130117833614, -1.1468544006347656], "finish_reason": "stop"}, {"text": " x: len(re.findall(BRACKETS_PATTERN, str(x)))", "tokens": [" x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "x", ")))", "\n"], "logprobs": [-0.16656358540058136, -0.000964414793998003, -0.15935355424880981, -0.005460466258227825, -0.07324966043233871, -0.0001736728590913117, -0.012019116431474686, -2.4199192921514623e-05, -0.0004127365828026086, -0.02833537943661213, -1.9073468138230965e-06, -3.814689989667386e-06, -4.172316494077677e-06, -4.768370445162873e-07, 0.0, -2.9802276912960224e-06, -0.0003579214389901608, -0.2012900412082672, -0.00026043839170597494, -0.0018848287872970104, -0.14696991443634033, -0.3132369816303253], "finish_reason": "stop"}, {"text": ".sum().sum()", "tokens": [".", "sum", "()", ".", "sum", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0017467968864366412, -0.23094235360622406, -0.04929305613040924, -0.0038189589977264404, -0.006303073838353157, -0.0014759134501218796, -0.47924208641052246, -3.576278118089249e-07, -1.0728830375228426e-06, -1.0728830375228426e-06, -4.6491513785440475e-06, -0.12154867500066757], "finish_reason": "stop"}], "metrics": {"energy": 391.8288411483766, "energy_per_token": 3.9578670823068345, "time": 10.094454, "time_per_token": 0.10196418181818183}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError(\"Input should be a DataFrame.\")", "tokens": [" Type", "Error", "(", "\"", "Input", " should", " be", " a", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -0.2576817572116852, -0.10475495457649231, -0.29156938195228577, -1.1755419969558716, -0.0012516292044892907, -0.0501631498336792, -0.29180899262428284, -0.0034955372102558613, -1.4866946935653687, -0.001810817513614893, -0.000560245884116739, -0.0004861365014221519], "finish_reason": "stop"}, {"text": " '[(){}[\\]]'", "tokens": [" '", "[", "(){", "}[", "\\", "]]", "'", "\n"], "logprobs": [-0.8906553983688354, -0.0023534002248197794, -0.001606365549378097, -0.0005457103834487498, -0.0003401654539629817, -0.000927137560211122, -0.0009588173124939203, -0.0758620947599411], "finish_reason": "stop"}, {"text": " sum(df.astype(str).applymap(lambda x: len(re.findall(BRACKETS_PATTERN, x))))", "tokens": [" sum", "(", "df", ".", "ast", "ype", "(", "str", ")", ".", "apply", "map", "(", "lambda", " x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " x", "))", "))", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.4911668002605438, -0.5613572001457214, -1.7335447072982788, -0.0024781490210443735, -0.4078875184059143, -7.152555099310121e-07, -0.021568268537521362, -0.004085528198629618, -0.0018335450440645218, -0.014794048853218555, -0.06321145594120026, -0.19512619078159332, -0.0005667987279593945, -0.24555768072605133, -0.05276934430003166, -0.0016329062636941671, -0.493831068277359, -0.009518005885183811, -0.01931793987751007, -0.00017438798386137933, -0.003953736741095781, -4.410734163684538e-06, -0.00032062159152701497, -0.013732599094510078, -1.7881377516459906e-06, -5.483612312673358e-06, -9.536697689327411e-06, -3.576278118089249e-07, 0.0, -2.622600959512056e-06, -0.0004295380203984678, -0.04119736701250076, -0.05817438289523125, -0.9436397552490234, -0.7800568342208862, -3.576278118089249e-07, -1.311301275563892e-06, -1.6689286894688848e-06, -2.145764938177308e-06, -0.17022205889225006], "finish_reason": "stop"}, {"text": " x: len(re.findall(BRACKETS_PATTERN, str(x)))", "tokens": [" x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "x", ")))", "\n"], "logprobs": [-0.16656358540058136, -0.000964414793998003, -0.15935355424880981, -0.005460466258227825, -0.07324966043233871, -0.0001736728590913117, -0.012019116431474686, -2.4199192921514623e-05, -0.0004127365828026086, -0.02833537943661213, -1.9073468138230965e-06, -3.814689989667386e-06, -4.172316494077677e-06, -4.768370445162873e-07, 0.0, -2.9802276912960224e-06, -0.0003579214389901608, -0.2012900412082672, -0.00026043839170597494, -0.0018848287872970104, -0.14696991443634033, -0.3132369816303253], "finish_reason": "stop"}, {"text": ".values.sum()", "tokens": [".", "values", ".", "sum", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0017467968864366412, -2.0401902198791504, -0.0009448830969631672, -0.0989966094493866, -0.004175872541964054, -0.4472804069519043, -2.3841855067985307e-07, -1.0728830375228426e-06, -1.311301275563892e-06, -7.748573807475623e-06, -0.1546153575181961], "finish_reason": "stop"}], "metrics": {"energy": 411.2808141098023, "energy_per_token": 3.9169601343790696, "time": 10.528167, "time_per_token": 0.10026825714285714}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError(\"Input must be a pandas DataFrame.\")", "tokens": [" Type", "Error", "(", "\"", "Input", " must", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -0.2576817572116852, -0.10475495457649231, -0.29156938195228577, -0.7856494188308716, -0.000328367663314566, -0.013129213824868202, -1.2486058473587036, -0.01431458443403244, -0.0008993871742859483, -0.9534468650817871, -0.0017777367029339075, -0.0007252446957863867, -0.00044145373976789415], "finish_reason": "stop"}, {"text": " \"[(){}[\\]]\"", "tokens": [" \"", "[", "(){", "}[", "\\", "]]", "\"", "\n"], "logprobs": [-2.8674545288085938, -0.003811833681538701, -0.0028102213982492685, -0.008553653955459595, -0.00471325870603323, -0.0018630543490871787, -0.0014751992421224713, -0.0774967148900032], "finish_reason": "stop"}, {"text": " sum(", "tokens": [" sum", "(", "\n"], "logprobs": [-0.47481250762939453, -0.5374829173088074, -0.8451553583145142], "finish_reason": "stop"}, {"text": " x: len(re.findall(BRACKETS_PATTERN, x) if isinstance(x, str) else '')", "tokens": [" x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " x", ")", " if", " isinstance", "(", "x", ",", " str", ")", " else", " '", "')", "\n"], "logprobs": [-0.12480554729700089, -0.0010871936101466417, -0.15478529036045074, -0.005154415965080261, -0.07765600830316544, -0.00018773700867313892, -0.014608094468712807, -1.728519782773219e-05, -0.00039319414645433426, -0.03172233700752258, -1.6689286894688848e-06, -4.410734163684538e-06, -4.410734163684538e-06, -3.576278118089249e-07, 0.0, -2.50339189733495e-06, -0.00041476229671388865, -1.623584270477295, -2.672945976257324, -1.034813404083252, -0.10924489796161652, -0.00021991695393808186, -0.02886052057147026, -0.00022539935889653862, -0.020460497587919235, -0.0015325717395171523, -0.08283373713493347, -1.4462249279022217, -0.00497520063072443, -0.07547184079885483], "finish_reason": "stop"}, {"text": ".sum().sum()", "tokens": [".", "sum", "()", ".", "sum", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.001260201446712017, -0.2091570794582367, -0.09096459299325943, -0.003599713556468487, -0.005412211176007986, -0.0014290130930021405, -0.5506940484046936, -2.3841855067985307e-07, -1.0728830375228426e-06, -1.4305104514278355e-06, -4.529942543740617e-06, -0.13530580699443817], "finish_reason": "stop"}], "metrics": {"energy": 337.1717173309326, "energy_per_token": 4.322714324755546, "time": 8.858036, "time_per_token": 0.1135645641025641}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError(\"The input must be a pandas DataFrame.\")", "tokens": [" Type", "Error", "(", "\"", "The", " input", " must", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -0.2576817572116852, -0.10475495457649231, -2.9252192974090576, -0.6923015117645264, -1.2669752836227417, -0.0038832034915685654, -0.02900678664445877, -1.016888976097107, -0.027967628091573715, -0.0017909454181790352, -0.3927451968193054, -0.0017865424742922187, -0.0006257721688598394, -0.0003763920976780355], "finish_reason": "stop"}, {"text": " '[(){}[\\]]'  # Pattern to detect brackets", "tokens": [" '", "[", "(){", "}[", "\\", "]]", "'", "  ", "#", " Pattern", " to", " detect", " brackets", "\n"], "logprobs": [-0.8906553983688354, -0.0023534002248197794, -0.001606365549378097, -0.0005457103834487498, -0.0003401654539629817, -0.000927137560211122, -0.0009588173124939203, -2.857653856277466, -0.0004615910293068737, -2.2762436866760254, -0.5220301151275635, -2.836801528930664, -0.07269246131181717, -0.12212784588336945], "finish_reason": "stop"}, {"text": " sum(df.astype(str).applymap(lambda x: len(re.findall(BRACKETS_PATTERN, x))))", "tokens": [" sum", "(", "df", ".", "ast", "ype", "(", "str", ")", ".", "apply", "map", "(", "lambda", " x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " x", "))", "))"], "logprobs": [-0.4911668002605438, -0.5613572001457214, -1.7335447072982788, -0.0024781490210443735, -0.4078875184059143, -7.152555099310121e-07, -0.021568268537521362, -0.004085528198629618, -0.0018335450440645218, -0.014794048853218555, -0.06321145594120026, -0.19512619078159332, -0.0005667987279593945, -0.24555768072605133, -0.05276934430003166, -0.0016329062636941671, -0.493831068277359, -0.009518005885183811, -0.01931793987751007, -0.00017438798386137933, -0.003953736741095781, -4.410734163684538e-06, -0.00032062159152701497, -0.013732599094510078, -1.7881377516459906e-06, -5.483612312673358e-06, -9.536697689327411e-06, -3.576278118089249e-07, 0.0, -2.622600959512056e-06, -0.0004295380203984678, -0.04119736701250076, -0.05817438289523125, -0.9436397552490234], "finish_reason": "stop"}, {"text": " x: len(re.findall(BRACKETS_PATTERN, str(x)))", "tokens": [" x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "x", ")))", "\n"], "logprobs": [-0.16656358540058136, -0.000964414793998003, -0.15935355424880981, -0.005460466258227825, -0.07324966043233871, -0.0001736728590913117, -0.012019116431474686, -2.4199192921514623e-05, -0.0004127365828026086, -0.02833537943661213, -1.9073468138230965e-06, -3.814689989667386e-06, -4.172316494077677e-06, -4.768370445162873e-07, 0.0, -2.9802276912960224e-06, -0.0003579214389901608, -0.2012900412082672, -0.00026043839170597494, -0.0018848287872970104, -0.14696991443634033, -0.3132369816303253], "finish_reason": "stop"}, {"text": ".sum().sum()", "tokens": [".", "sum", "()", ".", "sum", "()", "\n"], "logprobs": [-0.0017467968864366412, -0.23094235360622406, -0.04929305613040924, -0.0038189589977264404, -0.006303073838353157, -0.0014759134501218796, -1.9199845790863037], "finish_reason": "stop"}], "metrics": {"energy": 413.56362557220456, "energy_per_token": 4.015180830798102, "time": 10.734607, "time_per_token": 0.1042194854368932}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError('Input should be a DataFrame')", "tokens": [" Type", "Error", "('", "Input", " should", " be", " a", " Data", "Frame", "')", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -1.5932224988937378, -0.40257933735847473, -1.3979096412658691, -0.0014801985817030072, -0.08867024630308151, -0.24619607627391815, -0.006801785435527563, -0.08585613965988159, -0.0013909199042245746], "finish_reason": "stop"}, {"text": " r\"[(){}[\\]]\"", "tokens": [" r", "\"", "[", "(){", "}[", "\\", "]]", "\"", "\n"], "logprobs": [-1.2157809734344482, -1.0976002216339111, -0.02210490219295025, -0.002802256727591157, -0.0005052005290053785, -0.00042143522296100855, -0.0033315890468657017, -0.002559007378295064, -0.11200352758169174], "finish_reason": "stop"}, {"text": " sum([", "tokens": [" sum", "([", "\n"], "logprobs": [-0.5299172401428223, -0.9606601595878601, -1.4403362274169922], "finish_reason": "stop"}, {"text": " x: len(re.findall(BRACKETS_PATTERN, str(x)))", "tokens": [" x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "x", ")))", "\n"], "logprobs": [-0.12930355966091156, -0.0010568277211859822, -0.17513473331928253, -0.005674562882632017, -0.07847863435745239, -0.0001722425949992612, -0.013462590985000134, -1.585470999998506e-05, -0.0004469349514693022, -0.027658764272928238, -1.7881377516459906e-06, -4.529942543740617e-06, -4.768360213347478e-06, -4.768370445162873e-07, 0.0, -1.5497195136049413e-06, -0.00035720644518733025, -0.2828125059604645, -0.00022682955022901297, -0.0015055523253977299, -0.1672469824552536, -0.31089040637016296], "finish_reason": "stop"}, {"text": ".sum().sum()", "tokens": [".", "sum", "()", ".", "sum", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0015135272406041622, -0.19764584302902222, -0.06518634408712387, -0.004718479234725237, -0.007525073830038309, -0.0016261223936453462, -0.591223418712616, -2.3841855067985307e-07, -9.536738616588991e-07, -1.6689286894688848e-06, -6.437280717364047e-06, -0.14682984352111816], "finish_reason": "stop"}], "metrics": {"energy": 301.66858761024463, "energy_per_token": 4.502516232988726, "time": 7.8063517, "time_per_token": 0.1165127119402985}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError(\"Input is not a DataFrame\")", "tokens": [" Type", "Error", "(", "\"", "Input", " is", " not", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -0.2576817572116852, -0.10475495457649231, -0.29156938195228577, -2.1308984756469727, -0.002917202888056636, -0.008884541690349579, -0.10246162116527557, -0.0017788077238947153, -0.09480907022953033, -0.0006843847222626209, -0.0015051951631903648], "finish_reason": "stop"}, {"text": " r'[(){}[\\]]'", "tokens": [" r", "'", "[", "(){", "}[", "\\", "]]", "'", "\n"], "logprobs": [-1.287204623222351, -0.4286295175552368, -0.00422525592148304, -0.001702646492049098, -0.00022742546570952982, -0.00017998983094003052, -0.0016640876419842243, -0.0029314663261175156, -0.10068841278553009], "finish_reason": "stop"}, {"text": " sum(map(", "tokens": [" sum", "(", "map", "(", "\n"], "logprobs": [-0.47481250762939453, -0.5374829173088074, -2.684457302093506, -0.0013708013575524092, -1.1609073877334595], "finish_reason": "stop"}, {"text": " x: len(re.findall(BRACKETS_PATTERN, str(x)))).sum().sum()", "tokens": [" x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "x", "))", "))", ".", "sum", "()", ".", "sum", "()", "\n"], "logprobs": [-0.12480554729700089, -0.0010871936101466417, -0.15478529036045074, -0.005154415965080261, -0.07765600830316544, -0.00018773700867313892, -0.014608094468712807, -1.728519782773219e-05, -0.00039319414645433426, -0.03172233700752258, -1.6689286894688848e-06, -4.410734163684538e-06, -4.410734163684538e-06, -3.576278118089249e-07, 0.0, -2.50339189733495e-06, -0.00041476229671388865, -0.25392863154411316, -0.00024172721896320581, -0.0014299653703346848, -1.8500161170959473, -0.06000790745019913, -0.003875365946441889, -0.09768765419721603, -0.020399529486894608, -0.003512880764901638, -0.0034976755268871784, -0.001053969725035131, -1.7010961771011353], "finish_reason": "stop"}, {"text": ".sum().sum()", "tokens": [".", "sum", "()", ".", "sum", "()", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.001260201446712017, -0.2091570794582367, -0.09096459299325943, -0.003599713556468487, -0.005412211176007986, -0.0014290130930021405, -0.5506940484046936, -2.3841855067985307e-07, -1.0728830375228426e-06, -1.4305104514278355e-06, -4.529942543740617e-06, -2.067476749420166, -0.0015901790466159582], "finish_reason": "stop"}], "metrics": {"energy": 334.9337925357818, "energy_per_token": 4.239668259946605, "time": 8.841436, "time_per_token": 0.11191691139240506}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError(\"Input argument must be a DataFrame\")", "tokens": [" Type", "Error", "(", "\"", "Input", " argument", " must", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -0.2576817572116852, -0.10475495457649231, -0.29156938195228577, -3.2338342666625977, -0.5867237448692322, -0.00043466180795803666, -0.0255401860922575, -0.762467622756958, -0.0015520919114351273, -0.317545086145401, -0.0004601611872203648, -0.0009701313101686537], "finish_reason": "stop"}, {"text": " '[(){}[\\]]'", "tokens": [" '", "[", "(){", "}[", "\\", "]]", "'", "\n"], "logprobs": [-0.8906553983688354, -0.0023534002248197794, -0.001606365549378097, -0.0005457103834487498, -0.0003401654539629817, -0.000927137560211122, -0.0009588173124939203, -0.0758620947599411], "finish_reason": "stop"}, {"text": " int(len(\"\".join(df.values.astype(str))) \\", "tokens": [" int", "(", "len", "(", "\"", "\"", ".", "join", "(", "df", ".", "values", ".", "ast", "ype", "(", "str", ")))", " \\", "\n"], "logprobs": [-2.7683026790618896, -0.03761051222681999, -1.7568868398666382, -0.17717622220516205, -1.8529878854751587, -0.0028621682431548834, -0.0009648911654949188, -0.00018320789968129247, -0.112087182700634, -0.37748634815216064, -0.0036446116864681244, -0.6272302865982056, -0.014668242074549198, -0.9078240990638733, -1.0728830375228426e-06, -0.020001621916890144, -0.023148655891418457, -0.6590171456336975, -2.45589017868042, -0.0012168630491942167], "finish_reason": "stop"}, {"text": " x: len(re.findall(BRACKETS_PATTERN, str(x)))", "tokens": [" x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "x", ")))", "\n"], "logprobs": [-0.16656358540058136, -0.000964414793998003, -0.15935355424880981, -0.005460466258227825, -0.07324966043233871, -0.0001736728590913117, -0.012019116431474686, -2.4199192921514623e-05, -0.0004127365828026086, -0.02833537943661213, -1.9073468138230965e-06, -3.814689989667386e-06, -4.172316494077677e-06, -4.768370445162873e-07, 0.0, -2.9802276912960224e-06, -0.0003579214389901608, -0.2012900412082672, -0.00026043839170597494, -0.0018848287872970104, -0.14696991443634033, -0.3132369816303253], "finish_reason": "stop"}, {"text": ".sum().sum()", "tokens": [".", "sum", "()", ".", "sum", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.0017467968864366412, -0.23094235360622406, -0.04929305613040924, -0.0038189589977264404, -0.006303073838353157, -0.0014759134501218796, -0.47924208641052246, -3.576278118089249e-07, -1.0728830375228426e-06, -1.0728830375228426e-06, -4.6491513785440475e-06, -0.12154867500066757], "finish_reason": "stop"}], "metrics": {"energy": 352.7759949531554, "energy_per_token": 4.102046452943668, "time": 9.05415, "time_per_token": 0.10528081395348837}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError(\"Input argument must be a pandas DataFrame.\")", "tokens": [" Type", "Error", "(", "\"", "Input", " argument", " must", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -0.2576817572116852, -0.10475495457649231, -0.29156938195228577, -3.2338342666625977, -0.5867237448692322, -0.00043466180795803666, -0.0255401860922575, -0.6985752582550049, -0.028017820790410042, -0.001348182326182723, -0.9291567802429199, -0.0008347125840373337, -0.0005600076401606202, -0.0003985564399044961], "finish_reason": "stop"}, {"text": " re.compile(r'[(){}[\\]]')", "tokens": [" re", ".", "compile", "(", "r", "'", "[", "(){", "}[", "\\", "]]", "')", "\n"], "logprobs": [-1.3729056119918823, -1.6689160474925302e-05, -0.004527081269770861, -0.22394564747810364, -0.055475909262895584, -0.37347790598869324, -0.004967964719980955, -0.0018058198038488626, -0.00022373080719262362, -0.00021634146105498075, -0.0019208805169910192, -0.006217304617166519, -0.08811753243207932], "finish_reason": "stop"}, {"text": " sum(re.subn(BRACKETS_PATTERN, '', str(df))[1])", "tokens": [" sum", "(", "re", ".", "sub", "n", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " ''", ",", " str", "(", "df", "))", "[", "1", "])"], "logprobs": [-0.47481250762939453, -0.5374829173088074, -1.9366317987442017, -0.0018252156442031264, -1.2761064767837524, -0.7781599760055542, -0.007785215973854065, -0.03404969349503517, -2.145764938177308e-06, -5.722029527532868e-06, -4.172316494077677e-06, -3.576278118089249e-07, 0.0, -7.152555099310121e-07, -0.0011973362416028976, -0.20984096825122833, -0.00010978573118336499, -1.2603999376296997, -0.011357888579368591, -0.07601866126060486, -0.050465818494558334, -0.0012874656822532415, -0.0064550465904176235, -0.004018091131001711], "finish_reason": "stop"}, {"text": " x: len(re.findall(BRACKETS_PATTERN, str(x)))", "tokens": [" x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "x", ")))", "\n"], "logprobs": [-0.12480554729700089, -0.0010871936101466417, -0.15478529036045074, -0.005154415965080261, -0.07765600830316544, -0.00018773700867313892, -0.014608094468712807, -1.728519782773219e-05, -0.00039319414645433426, -0.03172233700752258, -1.6689286894688848e-06, -4.410734163684538e-06, -4.410734163684538e-06, -3.576278118089249e-07, 0.0, -2.50339189733495e-06, -0.00041476229671388865, -0.25392863154411316, -0.00024172721896320581, -0.0014299653703346848, -0.17856073379516602, -0.2886890470981598], "finish_reason": "stop"}, {"text": ".sum().sum()", "tokens": [".", "sum", "()", ".", "sum", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.001260201446712017, -0.2091570794582367, -0.09096459299325943, -0.003599713556468487, -0.005412211176007986, -0.0014290130930021405, -0.5506940484046936, -2.3841855067985307e-07, -1.0728830375228426e-06, -1.4305104514278355e-06, -4.529942543740617e-06, -0.13530580699443817], "finish_reason": "stop"}], "metrics": {"energy": 406.4922601661682, "energy_per_token": 4.190641857383177, "time": 10.330019, "time_per_token": 0.1064950412371134}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError(\"Input should be a pandas DataFrame.\")", "tokens": [" Type", "Error", "(", "\"", "Input", " should", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -0.2576817572116852, -0.10475495457649231, -0.29156938195228577, -1.1755419969558716, -0.0012516292044892907, -0.0501631498336792, -1.4657973051071167, -0.01917983777821064, -0.002859909785911441, -0.9865084886550903, -0.0011455409694463015, -0.0006418551784008741, -0.00035232058144174516], "finish_reason": "stop"}, {"text": " re.compile(r'[(){}[\\]]')", "tokens": [" re", ".", "compile", "(", "r", "'", "[", "(){", "}[", "\\", "]]", "')", "\n"], "logprobs": [-1.3729056119918823, -1.6689160474925302e-05, -0.004527081269770861, -0.22394564747810364, -0.055475909262895584, -0.37347790598869324, -0.004967964719980955, -0.0018058198038488626, -0.00022373080719262362, -0.00021634146105498075, -0.0019208805169910192, -0.006217304617166519, -0.08811753243207932], "finish_reason": "stop"}, {"text": " re.findall(BRACKETS_PATTERN, str(df.values)).count('(') + re.findall(BRACKETS_PATTERN, str(df.values)).count('{') + re.findall(BRACKETS_PATTERN, str(df.values)).count('[')", "tokens": [" re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "df", ".", "values", "))", ".", "count", "('", "('", ")", " +", " re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "df", ".", "values", "))", ".", "count", "('", "{", "')", " +", " re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "df", ".", "values", "))", ".", "count", "('", "[", "')", "\n"], "logprobs": [-3.1395750045776367, -0.0002681849291548133, -0.7227342128753662, -7.64102369430475e-05, -0.0011036264477297664, -0.032935138791799545, -1.0251946150674485e-05, -1.8715683836489916e-05, -6.318072337307967e-06, -1.9073468138230965e-06, 0.0, -3.3378546504536644e-06, -0.003422001376748085, -1.0476269721984863, -0.0048196809366345406, -0.012353688478469849, -1.5265374183654785, -0.6031621098518372, -0.31518352031707764, -0.18267081677913666, -0.9631838798522949, -0.17344744503498077, -0.16782136261463165, -0.038588207215070724, -0.218144029378891, -0.431383341550827, -0.0001227780303452164, -0.00024482590379193425, -1.1920928244535389e-07, -0.00021681819634977728, -0.11485829204320908, -1.1920928244535389e-07, -6.318072337307967e-06, -2.264974000354414e-06, -1.311301275563892e-06, -4.768370445162873e-07, -1.1920922133867862e-06, -5.3165931603871286e-05, -0.003928089048713446, -6.05564855504781e-05, -0.0003909300430677831, -0.0008653233526274562, -0.0005502378917299211, -0.00071190285962075, -0.00031406714697368443, -9.738924563862383e-05, -0.00261869584210217, -0.7532415390014648, -0.00044824567157775164, -0.12006194144487381, -0.05111630633473396, -5.280832192511298e-05, -2.253030106658116e-05, 0.0, -0.00016842853801790625, -0.0013505632523447275, -4.291525328881107e-06, -4.6491513785440475e-06, -4.887569048150908e-06, -1.9073468138230965e-06, 0.0, -3.4570634852570947e-06, -3.421248038648628e-05, -0.000920825288631022, -2.098061486321967e-05, -0.0005190217634662986, -0.00016616393986623734, -8.368142152903602e-05, -0.00030071981018409133, -4.8993817472364753e-05, -3.111314072157256e-05, -0.001210790709592402, -0.009909954853355885, -0.00017045476124621928, -1.84794282913208], "finish_reason": "stop"}, {"text": " x: re.sub(BRACKETS_PATTERN, '', x)", "tokens": [" x", ":", " re", ".", "sub", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " ''", ",", " x", ")", "\n"], "logprobs": [-0.12480554729700089, -0.0010871936101466417, -2.8032572269439697, -0.0011517327511683106, -0.4677583575248718, -0.13872146606445312, -0.1045711487531662, -1.7881377516459906e-06, -1.0609570381348021e-05, -6.794906312279636e-06, -5.960462772236497e-07, -4.768370445162873e-07, -1.1920922133867862e-06, -0.0008354272576980293, -0.23733706772327423, -0.00044145373976789415, -0.5737498998641968, -0.47289416193962097, -0.2646081745624542], "finish_reason": "stop"}, {"text": ".sum().sum()", "tokens": [".", "sum", "()", ".", "sum", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.001515550771728158, -0.16405968368053436, -0.07077744603157043, -0.003440296743065119, -0.006187805440276861, -0.0018090326339006424, -0.5278312563896179, -2.3841855067985307e-07, -1.0728830375228426e-06, -1.0728830375228426e-06, -4.887569048150908e-06, -0.13119658827781677], "finish_reason": "stop"}], "metrics": {"energy": 583.4559699878693, "energy_per_token": 4.051777569360203, "time": 14.716597, "time_per_token": 0.10219859027777778}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError(\"Input should be a DataFrame\")", "tokens": [" Type", "Error", "(", "\"", "Input", " should", " be", " a", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -0.2576817572116852, -0.10475495457649231, -0.29156938195228577, -1.1755419969558716, -0.0012516292044892907, -0.0501631498336792, -0.29180899262428284, -0.0034955372102558613, -0.29742464423179626, -0.0006468587671406567, -0.0008155357209034264], "finish_reason": "stop"}, {"text": " '[(){}[\\]]'", "tokens": [" '", "[", "(){", "}[", "\\", "]]", "'", "\n"], "logprobs": [-0.8906553983688354, -0.0023534002248197794, -0.001606365549378097, -0.0005457103834487498, -0.0003401654539629817, -0.000927137560211122, -0.0009588173124939203, -0.0758620947599411], "finish_reason": "stop"}, {"text": " sum([len(re.findall(BRACKETS_PATTERN, str(cell))) for cell in df.values.flatten()])", "tokens": [" sum", "([", "len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "cell", ")))", " for", " cell", " in", " df", ".", "values", ".", "fl", "atten", "()", "])", "\n"], "logprobs": [-0.4911668002605438, -0.8825470805168152, -0.3996366262435913, -0.0051290360279381275, -0.02407122775912285, -0.0004568248405121267, -0.0043354094959795475, -1.7762025890988298e-05, -0.00020037073409184813, -0.016525885090231895, -3.576272320060525e-06, -4.529942543740617e-06, -7.867782187531702e-06, -1.0728830375228426e-06, 0.0, -3.814689989667386e-06, -0.00043501926120370626, -0.5640898942947388, -0.026987262070178986, -2.219055414199829, -0.007883742451667786, -0.2858547568321228, -1.6363433599472046, -0.00968956109136343, -0.02972218208014965, -0.003102135146036744, -0.14595279097557068, -0.0022646752186119556, -0.019074348732829094, -0.0011603058082982898, -0.0005470209871418774, -0.005673022009432316, -1.1362569332122803], "finish_reason": "stop"}, {"text": " x: len(re.findall(BRACKETS_PATTERN, str(x)))).sum().sum()", "tokens": [" x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "x", "))", "))", ".", "sum", "()", ".", "sum", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.16656358540058136, -0.000964414793998003, -0.15935355424880981, -0.005460466258227825, -0.07324966043233871, -0.0001736728590913117, -0.012019116431474686, -2.4199192921514623e-05, -0.0004127365828026086, -0.02833537943661213, -1.9073468138230965e-06, -3.814689989667386e-06, -4.172316494077677e-06, -4.768370445162873e-07, 0.0, -2.9802276912960224e-06, -0.0003579214389901608, -0.2012900412082672, -0.00026043839170597494, -0.0018848287872970104, -2.0371484756469727, -0.058371976017951965, -0.004244367592036724, -0.08302585780620575, -0.027815062552690506, -0.0026472308672964573, -0.004455045331269503, -0.0013713965890929103, -0.5043472647666931, -1.1920928244535389e-07, -1.0728830375228426e-06, -1.5497195136049413e-06, -6.437280717364047e-06, -0.16998142004013062], "finish_reason": "stop"}, {"text": ".sum().sum()", "tokens": [".", "sum", "()", ".", "sum", "()", "\n"], "logprobs": [-0.0017467968864366412, -0.23094235360622406, -0.04929305613040924, -0.0038189589977264404, -0.006303073838353157, -0.0014759134501218796, -1.9199845790863037], "finish_reason": "stop"}], "metrics": {"energy": 427.44723803901684, "energy_per_token": 4.070926076562065, "time": 10.743732, "time_per_token": 0.10232125714285714}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError(\"Input must be a pandas DataFrame.\")", "tokens": [" Type", "Error", "(", "\"", "Input", " must", " be", " a", " pandas", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -0.2576817572116852, -0.10475495457649231, -0.29156938195228577, -0.7856494188308716, -0.000328367663314566, -0.013129213824868202, -1.2486058473587036, -0.01431458443403244, -0.0008993871742859483, -0.9534468650817871, -0.0017777367029339075, -0.0007252446957863867, -0.00044145373976789415], "finish_reason": "stop"}, {"text": " \"[(){}[\\]]\"  # Pattern of brackets", "tokens": [" \"", "[", "(){", "}[", "\\", "]]", "\"", "  ", "#", " Pattern", " of", " brackets", "\n"], "logprobs": [-2.8674545288085938, -0.003811833681538701, -0.0028102213982492685, -0.008553653955459595, -0.00471325870603323, -0.0018630543490871787, -0.0014751992421224713, -2.7205402851104736, -0.0003325386205688119, -1.9249985218048096, -3.2232799530029297, -0.13278701901435852, -0.4063575863838196], "finish_reason": "stop"}, {"text": " sum([len(re.findall(BRACKETS_PATTERN, str(col))) for col in df.values])", "tokens": [" sum", "([", "len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "col", ")))", " for", " col", " in", " df", ".", "values", "])"], "logprobs": [-0.47481250762939453, -0.918529212474823, -0.3968908488750458, -0.004959424491971731, -0.03108453005552292, -0.00041345154750160873, -0.005579493474215269, -1.4781842764932662e-05, -0.0002233732520835474, -0.010200039483606815, -3.933898824470816e-06, -4.768360213347478e-06, -8.821448318485636e-06, -5.960462772236497e-07, 0.0, -3.576272320060525e-06, -0.00043811736395582557, -0.6196089386940002, -0.029404601082205772, -1.6473650932312012, -0.022174863144755363, -0.07307194173336029, -0.02179492451250553, -0.002352567622438073, -0.012263255193829536, -0.024621643126010895, -0.2821706533432007, -0.4356127977371216], "finish_reason": "stop"}, {"text": " x: len(re.findall(BRACKETS_PATTERN, x))", "tokens": [" x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " x", "))", "\n"], "logprobs": [-0.12480554729700089, -0.0010871936101466417, -0.15478529036045074, -0.005154415965080261, -0.07765600830316544, -0.00018773700867313892, -0.014608094468712807, -1.728519782773219e-05, -0.00039319414645433426, -0.03172233700752258, -1.6689286894688848e-06, -4.410734163684538e-06, -4.410734163684538e-06, -3.576278118089249e-07, 0.0, -2.50339189733495e-06, -0.00041476229671388865, -1.623584270477295, -0.18669801950454712, -0.48467859625816345], "finish_reason": "stop"}, {"text": ".sum().sum()", "tokens": [".", "sum", "()", ".", "sum", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.001260201446712017, -0.2091570794582367, -0.09096459299325943, -0.003599713556468487, -0.005412211176007986, -0.0014290130930021405, -0.5506940484046936, -2.3841855067985307e-07, -1.0728830375228426e-06, -1.4305104514278355e-06, -4.529942543740617e-06, -0.13530580699443817], "finish_reason": "stop"}], "metrics": {"energy": 444.97609560585005, "energy_per_token": 4.540572404141327, "time": 11.135733, "time_per_token": 0.11362992857142858}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError(\"Input must be a DataFrame.\")", "tokens": [" Type", "Error", "(", "\"", "Input", " must", " be", " a", " Data", "Frame", ".", "\"", ")", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -0.2576817572116852, -0.10475495457649231, -0.29156938195228577, -0.7856494188308716, -0.000328367663314566, -0.013129213824868202, -0.3638096749782562, -0.0012007892364636064, -2.09167218208313, -0.0021564343478530645, -0.0005878866068087518, -0.000806602300144732], "finish_reason": "stop"}, {"text": " '[(){}[\\]]'", "tokens": [" '", "[", "(){", "}[", "\\", "]]", "'", "\n"], "logprobs": [-0.8906553983688354, -0.0023534002248197794, -0.001606365549378097, -0.0005457103834487498, -0.0003401654539629817, -0.000927137560211122, -0.0009588173124939203, -0.0758620947599411], "finish_reason": "stop"}, {"text": " len(re.findall(BRACKETS_PATTERN, df.values.astype(str).sum()))", "tokens": [" len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " df", ".", "values", ".", "ast", "ype", "(", "str", ")", ".", "sum", "()))", "<", "|", "end", "of", "text", "|>"], "logprobs": [-1.677520513534546, -0.20534172654151917, -0.22883088886737823, -0.00044288364006206393, -0.08067604154348373, -1.3589766240329482e-05, -0.0002431573811918497, -0.01493158284574747, -5.722029527532868e-06, -7.152531907195225e-06, -6.556489552167477e-06, -2.3841830625315197e-06, -3.576278118089249e-07, -6.9141146923357155e-06, -0.0004151197790633887, -0.6062116622924805, -0.0007010624394752085, -1.328763723373413, -0.004319860599935055, -0.7336747646331787, -2.0265558760002023e-06, -0.01631280966103077, -0.002493250882253051, -0.0030643432401120663, -0.00021789084712509066, -1.8933186531066895, -0.0055986978113651276, -0.5539579391479492, -3.576278118089249e-07, -7.152555099310121e-07, -1.7881377516459906e-06, -6.794906312279636e-06, -0.15526826679706573], "finish_reason": "stop"}, {"text": " x: len(re.findall(BRACKETS_PATTERN, x)) if isinstance(x, str) else 0", "tokens": [" x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " x", "))", " if", " isinstance", "(", "x", ",", " str", ")", " else", " ", "0", "\n"], "logprobs": [-0.16656358540058136, -0.000964414793998003, -0.15935355424880981, -0.005460466258227825, -0.07324966043233871, -0.0001736728590913117, -0.012019116431474686, -2.4199192921514623e-05, -0.0004127365828026086, -0.02833537943661213, -1.9073468138230965e-06, -3.814689989667386e-06, -4.172316494077677e-06, -4.768370445162873e-07, 0.0, -2.9802276912960224e-06, -0.0003579214389901608, -1.8303412199020386, -0.15926511585712433, -1.427999496459961, -0.28690996766090393, -0.00021944021864328533, -0.04334208741784096, -0.0001070442158379592, -0.012960953637957573, -0.002509304089471698, -0.188367560505867, -0.02597968652844429, -0.0002097863471135497, -0.2810980975627899], "finish_reason": "stop"}, {"text": ".sum().sum()", "tokens": [".", "sum", "()", ".", "sum", "()", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.0017467968864366412, -0.23094235360622406, -0.04929305613040924, -0.0038189589977264404, -0.006303073838353157, -0.0014759134501218796, -0.47924208641052246, -3.576278118089249e-07, -1.0728830375228426e-06, -1.0728830375228426e-06, -4.6491513785440475e-06, -2.1679983139038086, -0.0027451948262751102], "finish_reason": "stop"}], "metrics": {"energy": 436.56538220024106, "energy_per_token": 4.042272057409639, "time": 11.368054, "time_per_token": 0.10525975925925926}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError(\"Input must be a pandas DataFrame\")", "tokens": [" Type", "Error", "(", "\"", "Input", " must", " be", " a", " pandas", " Data", "Frame", "\"", ")", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -0.2576817572116852, -0.10475495457649231, -0.29156938195228577, -0.7856494188308716, -0.000328367663314566, -0.013129213824868202, -1.2486058473587036, -0.01431458443403244, -0.0008993871742859483, -0.49982598423957825, -0.000604565953835845, -0.0006114759016782045], "finish_reason": "stop"}, {"text": " \"[(){}[\\]]\"", "tokens": [" \"", "[", "(){", "}[", "\\", "]]", "\"", "\n"], "logprobs": [-2.8674545288085938, -0.003811833681538701, -0.0028102213982492685, -0.008553653955459595, -0.00471325870603323, -0.0018630543490871787, -0.0014751992421224713, -0.0774967148900032], "finish_reason": "stop"}, {"text": " sum(df.astype(str).applymap(lambda x: len(re.findall(BRACKETS_PATTERN, x)).sum()))", "tokens": [" sum", "(", "df", ".", "ast", "ype", "(", "str", ")", ".", "apply", "map", "(", "lambda", " x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " x", "))", ".", "sum", "()))", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.47481250762939453, -0.5374829173088074, -2.040696620941162, -0.0020568659529089928, -0.3666578233242035, -5.960462772236497e-07, -0.02326151914894581, -0.003958248998969793, -0.0019120759097859263, -0.01498701423406601, -0.059998590499162674, -0.16579943895339966, -0.0006671110168099403, -0.16423611342906952, -0.05592285469174385, -0.0020172500517219305, -0.5781967639923096, -0.00886859092861414, -0.019229188561439514, -0.00015817821258679032, -0.00460635032504797, -5.006777428206988e-06, -0.000259723310591653, -0.0121790561825037, -2.0265558760002023e-06, -4.0531076592742465e-06, -8.702239938429557e-06, -4.768370445162873e-07, 0.0, -2.9802276912960224e-06, -0.000399033073335886, -0.03849908709526062, -0.07581447064876556, -1.3176653385162354, -0.014562862925231457, -0.0678759217262268, -0.7272783517837524, -7.152555099310121e-07, -1.4305104514278355e-06, -2.0265558760002023e-06, -5.125986263010418e-06, -0.1877247393131256], "finish_reason": "stop"}, {"text": " x: len(re.findall(BRACKETS_PATTERN, str(x)))", "tokens": [" x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "x", ")))", "\n"], "logprobs": [-0.12480554729700089, -0.0010871936101466417, -0.15478529036045074, -0.005154415965080261, -0.07765600830316544, -0.00018773700867313892, -0.014608094468712807, -1.728519782773219e-05, -0.00039319414645433426, -0.03172233700752258, -1.6689286894688848e-06, -4.410734163684538e-06, -4.410734163684538e-06, -3.576278118089249e-07, 0.0, -2.50339189733495e-06, -0.00041476229671388865, -0.25392863154411316, -0.00024172721896320581, -0.0014299653703346848, -0.17856073379516602, -0.2886890470981598], "finish_reason": "stop"}, {"text": ".sum().sum()", "tokens": [".", "sum", "()", ".", "sum", "()"], "logprobs": [-0.001260201446712017, -0.2091570794582367, -0.09096459299325943, -0.003599713556468487, -0.005412211176007986, -0.0014290130930021405], "finish_reason": "stop"}], "metrics": {"energy": 428.1368481502534, "energy_per_token": 4.197420079904445, "time": 10.522739, "time_per_token": 0.10316410784313725}}
{"outputs": [{"text": " not isinstance(df, pd.DataFrame):", "tokens": [" not", " isinstance", "(", "df", ",", " pd", ".", "DataFrame", "):", "\n"], "logprobs": [-0.026744022965431213, -0.014920778572559357, -6.41325386823155e-05, -0.00014304091746453196, -0.00020382710499688983, -0.0026730303652584553, -2.109982233378105e-05, -0.0019092203583568335, -0.0015523299807682633, -0.007536787074059248], "finish_reason": "stop"}, {"text": " TypeError('Input should be a DataFrame')", "tokens": [" Type", "Error", "('", "Input", " should", " be", " a", " Data", "Frame", "')", "\n"], "logprobs": [-0.005618968512862921, -4.172316494077677e-06, -1.5932224988937378, -0.40257933735847473, -1.3979096412658691, -0.0014801985817030072, -0.08867024630308151, -0.24619607627391815, -0.006801785435527563, -0.08585613965988159, -0.0013909199042245746], "finish_reason": "stop"}, {"text": " \"[(){}[\\]]\"", "tokens": [" \"", "[", "(){", "}[", "\\", "]]", "\"", "\n"], "logprobs": [-2.8957889080047607, -0.0043262699618935585, -0.002476246329024434, -0.010183165781199932, -0.005375336389988661, -0.0019640696700662374, -0.0015304292319342494, -0.06600912660360336], "finish_reason": "stop"}, {"text": " re.findall(BRACKETS_PATTERN, df.to_csv(header=False))", "tokens": [" re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " df", ".", "to", "_", "csv", "(", "header", "=", "False", "))", "\n"], "logprobs": [-2.874952793121338, -0.00029797881143167615, -0.848720908164978, -6.770858453819528e-05, -0.0011876918142661452, -0.03468204289674759, -7.033323527139146e-06, -1.3470558769768104e-05, -6.9141146923357155e-06, -1.311301275563892e-06, 0.0, -2.264974000354414e-06, -0.003149670083075762, -0.5100080966949463, -0.0014604389434680343, -0.6866586804389954, -9.775113539944869e-06, -3.067746162414551, -0.4417794346809387, -0.29943275451660156, -0.0032189481426030397, -0.20000429451465607, -1.5660123825073242, -2.430185079574585], "finish_reason": "stop"}, {"text": " x: len(re.findall(BRACKETS_PATTERN, str(x)))).sum().sum()", "tokens": [" x", ":", " len", "(", "re", ".", "find", "all", "(", "BR", "ACK", "ETS", "_", "P", "AT", "TERN", ",", " str", "(", "x", "))", "))", ".", "sum", "()", ".", "sum", "()", "<", "|", "end", "of", "text", "|>"], "logprobs": [-0.12930355966091156, -0.0010568277211859822, -0.17513473331928253, -0.005674562882632017, -0.07847863435745239, -0.0001722425949992612, -0.013462590985000134, -1.585470999998506e-05, -0.0004469349514693022, -0.027658764272928238, -1.7881377516459906e-06, -4.529942543740617e-06, -4.768360213347478e-06, -4.768370445162873e-07, 0.0, -1.5497195136049413e-06, -0.00035720644518733025, -0.2828125059604645, -0.00022682955022901297, -0.0015055523253977299, -1.9114867448806763, -0.05890754610300064, -0.004421339835971594, -0.1172022894024849, -0.02326221764087677, -0.0029381224885582924, -0.0035802333150058985, -0.0013958006165921688, -0.4448810815811157, -1.1920928244535389e-07, -1.0728830375228426e-06, -1.4305104514278355e-06, -6.6756979322235566e-06, -0.1584286242723465], "finish_reason": "stop"}, {"text": ".sum(axis=1, numeric_only=True).sum()", "tokens": [".", "sum", "(", "axis", "=", "1", ",", " numeric", "_", "only", "=", "True", ")", ".", "sum", "()", "<", "|", "end", "of", "text", "|", ">\""], "logprobs": [-0.0015135272406041622, -0.19764584302902222, -2.768967390060425, -0.03908884897828102, -0.0326676145195961, -1.3819717168807983, -1.661190152168274, -1.3786938190460205, -5.960462772236497e-07, -6.83045873302035e-05, -0.004076505079865456, -0.30202046036720276, -0.0345231294631958, -0.0064957900904119015, -0.012385714799165726, -0.034321919083595276, -0.49310192465782166, -3.576278118089249e-07, -1.311301275563892e-06, -2.145764938177308e-06, -7.986990567587782e-06, -2.054281234741211, -0.0023494756314903498], "finish_reason": "stop"}], "metrics": {"energy": 437.4437170171739, "energy_per_token": 3.97676106379249, "time": 11.595597, "time_per_token": 0.10541451818181818}}
